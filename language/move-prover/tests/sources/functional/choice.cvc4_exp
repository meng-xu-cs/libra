Move prover returns: exiting with boogie verification errors
error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:54:9
   │
54 │         ensures choice == Signer::address_of(s2);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:44: populate_R
   =     at tests/sources/functional/choice.move:49
   =     at tests/sources/functional/choice.move:50
   =     at tests/sources/functional/choice.move:53
   =     at tests/sources/functional/choice.move:52
   =     at tests/sources/functional/choice.move:44: populate_R
   =         s1 = <redacted>
   =         s2 = <redacted>
   =     at tests/sources/functional/choice.move:45: populate_R
   =     at tests/sources/functional/choice.move:46: populate_R
   =     at tests/sources/functional/choice.move:47: populate_R
   =     at tests/sources/functional/choice.move:54

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:21:9
   │
21 │         ensures result == TRACE(choose x: u64 where x >= 4 && x <= 5);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:15: simple_incorrect
   =         b = <redacted>
   =     at tests/sources/functional/choice.move:16: simple_incorrect
   =         <redacted> = <redacted>
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:17: simple_incorrect
   =     at tests/sources/functional/choice.move:21
   =         `TRACE(choose x: u64 where x >= 4 && x <= 5)` = <redacted>

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:98:9
   │
98 │         ensures result == TRACE(choose y: u64 where y > x);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:93: test_choice_dup_expected_fail
   =         x = <redacted>
   =     at tests/sources/functional/choice.move:94: test_choice_dup_expected_fail
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:95: test_choice_dup_expected_fail
   =     at tests/sources/functional/choice.move:98
   =         `TRACE(choose y: u64 where y > x)` = <redacted>

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:156:9
    │
156 │         ensures evidence1 == evidence2;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:154
    =     at tests/sources/functional/choice.move:155
    =     at tests/sources/functional/choice.move:152: test_different_choice_via_let
    =     at tests/sources/functional/choice.move:156

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:180:9
    │
180 │         ensures choose_some_positive_u64() == choose_another_positive_u64();
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:178: test_different_choice_via_spec_fun
    =     at tests/sources/functional/choice.move:180

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:70:9
   │
70 │         ensures (choose min i in 0..len(result) where result[i] == 2) == 1;
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:61: test_min
   =         v = <redacted>
   =     at tests/sources/functional/choice.move:62: test_min
   =         v_ref = <redacted>
   =     at tests/sources/functional/choice.move:63: test_min
   =     at tests/sources/functional/choice.move:64: test_min
   =     at tests/sources/functional/choice.move:65: test_min
   =     at tests/sources/functional/choice.move:66: test_min
   =     at tests/sources/functional/choice.move:67: test_min
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:68: test_min
   =     at tests/sources/functional/choice.move:70

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:85:9
   │
85 │         ensures TRACE(choose i in 0..len(result) where result[i] == 2) == 1;
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:74: test_not_using_min_incorrect
   =         v = <redacted>
   =     at tests/sources/functional/choice.move:75: test_not_using_min_incorrect
   =         v_ref = <redacted>
   =     at tests/sources/functional/choice.move:76: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:77: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:78: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:79: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:80: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:81: test_not_using_min_incorrect
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:82: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:85
   =         `TRACE(choose i in 0..len(result) where result[i] == 2)` = <redacted>

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:217:9
    │
217 │         ensures result != (choose i: u64 where i >= k);
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:234: test_same_choice_different_args_via_schema_2
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:235: test_same_choice_different_args_via_schema_2
    =     at tests/sources/functional/choice.move:217

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:208:9
    │
208 │         ensures evidence1 == evidence2;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:204: test_same_choice_different_args_via_spec_fun
    =     at tests/sources/functional/choice.move:206
    =     at tests/sources/functional/choice.move:207
    =     at tests/sources/functional/choice.move:204: test_same_choice_different_args_via_spec_fun
    =         x = <redacted>
    =         y = <redacted>
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:208
