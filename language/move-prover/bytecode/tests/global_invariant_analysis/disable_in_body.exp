============ initial translation from Move ================

[variant baseline]
fun DisableInv::foo($t0|s: &signer) {
     var $t1: &signer
     var $t2: bool
     var $t3: DisableInv::R2
  0: $t1 := move($t0)
  1: $t2 := false
  2: $t3 := pack DisableInv::R2($t2)
  3: move_to<DisableInv::R2>($t3, $t1)
  4: return ()
}

============ after pipeline `global_invariant_analysis` ================

[variant verification]
fun DisableInv::foo($t0|s: signer) {
     var $t1: bool
     var $t2: DisableInv::R2
     var $t3: num
  0: assume WellFormed($t0)
  1: assume forall $rsc: ResourceDomain<DisableInv::R2>(): WellFormed($rsc)
  2: $t1 := false
  3: $t2 := pack DisableInv::R2($t1)
  4: move_to<DisableInv::R2>($t2, $t0) on_abort goto 7 with $t3
  5: label L1
  6: return ()
  7: label L2
  8: abort($t3)
}


********* Result of global invariant instrumentation *********

DisableInv::foo: [
  entrypoint {
    assume @0 = [
      <> -> [
        <>
      ]
    ]
  }
  4: move_to<DisableInv::R2>($t2, $t0) on_abort goto L2 with $t3 {}
  exitpoint {
    assert @0 = [
      <> -> [
        <>
      ]
    ]
  }
]

********* Global invariants by ID *********

@0 => invariant [suspendable] forall a: address where exists<R1>(a): exists<R2>(a);
