<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="43085"><g><title>.annobin_rtld.c (15 samples, 0.03%)</title><rect x="0.0000%" y="1141" width="0.0348%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1151.50"></text></g><g><title>_dl_start (9 samples, 0.02%)</title><rect x="0.0139%" y="1125" width="0.0209%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="9"/><text x="0.2639%" y="1135.50"></text></g><g><title>_dl_sysdep_start (8 samples, 0.02%)</title><rect x="0.0162%" y="1109" width="0.0186%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="8"/><text x="0.2662%" y="1119.50"></text></g><g><title>dl_main (8 samples, 0.02%)</title><rect x="0.0162%" y="1093" width="0.0186%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="8"/><text x="0.2662%" y="1103.50"></text></g><g><title>_dl_relocate_object (7 samples, 0.02%)</title><rect x="0.0186%" y="1077" width="0.0162%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="7"/><text x="0.2686%" y="1087.50"></text></g><g><title>__GI___clone (6 samples, 0.01%)</title><rect x="0.0348%" y="1141" width="0.0139%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="6"/><text x="0.2848%" y="1151.50"></text></g><g><title>language_e2e_te (26 samples, 0.06%)</title><rect x="0.0000%" y="1157" width="0.0603%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="26"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="0.0766%" y="1141" width="0.0139%" height="15" fill="rgb(228,23,34)" fg:x="33" fg:w="6"/><text x="0.3266%" y="1151.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="0.0975%" y="1141" width="0.0116%" height="15" fill="rgb(218,30,26)" fg:x="42" fg:w="5"/><text x="0.3475%" y="1151.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (10 samples, 0.02%)</title><rect x="0.1091%" y="1141" width="0.0232%" height="15" fill="rgb(220,122,19)" fg:x="47" fg:w="10"/><text x="0.3591%" y="1151.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (48 samples, 0.11%)</title><rect x="0.1509%" y="1141" width="0.1114%" height="15" fill="rgb(250,228,42)" fg:x="65" fg:w="48"/><text x="0.4009%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.02%)</title><rect x="0.2669%" y="1141" width="0.0186%" height="15" fill="rgb(240,193,28)" fg:x="115" fg:w="8"/><text x="0.5169%" y="1151.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (19 samples, 0.04%)</title><rect x="0.2855%" y="1141" width="0.0441%" height="15" fill="rgb(216,20,37)" fg:x="123" fg:w="19"/><text x="0.5355%" y="1151.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (21 samples, 0.05%)</title><rect x="0.3296%" y="1141" width="0.0487%" height="15" fill="rgb(206,188,39)" fg:x="142" fg:w="21"/><text x="0.5796%" y="1151.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (34 samples, 0.08%)</title><rect x="0.3783%" y="1141" width="0.0789%" height="15" fill="rgb(217,207,13)" fg:x="163" fg:w="34"/><text x="0.6283%" y="1151.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.02%)</title><rect x="0.4642%" y="1141" width="0.0209%" height="15" fill="rgb(231,73,38)" fg:x="200" fg:w="9"/><text x="0.7142%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.03%)</title><rect x="0.4897%" y="1141" width="0.0348%" height="15" fill="rgb(225,20,46)" fg:x="211" fg:w="15"/><text x="0.7397%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.07%)</title><rect x="0.5245%" y="1141" width="0.0743%" height="15" fill="rgb(210,31,41)" fg:x="226" fg:w="32"/><text x="0.7745%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="0.6011%" y="1141" width="0.0162%" height="15" fill="rgb(221,200,47)" fg:x="259" fg:w="7"/><text x="0.8511%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="0.6174%" y="1141" width="0.0302%" height="15" fill="rgb(226,26,5)" fg:x="266" fg:w="13"/><text x="0.8674%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="0.6777%" y="1141" width="0.0186%" height="15" fill="rgb(249,33,26)" fg:x="292" fg:w="8"/><text x="0.9277%" y="1151.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="0.6847%" y="1125" width="0.0116%" height="15" fill="rgb(235,183,28)" fg:x="295" fg:w="5"/><text x="0.9347%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (5 samples, 0.01%)</title><rect x="0.6847%" y="1109" width="0.0116%" height="15" fill="rgb(221,5,38)" fg:x="295" fg:w="5"/><text x="0.9347%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="0.6986%" y="1141" width="0.0487%" height="15" fill="rgb(247,18,42)" fg:x="301" fg:w="21"/><text x="0.9486%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.04%)</title><rect x="0.7474%" y="1141" width="0.0441%" height="15" fill="rgb(241,131,45)" fg:x="322" fg:w="19"/><text x="0.9974%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="0.7915%" y="1141" width="0.0139%" height="15" fill="rgb(249,31,29)" fg:x="341" fg:w="6"/><text x="1.0415%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (5 samples, 0.01%)</title><rect x="0.8054%" y="1141" width="0.0116%" height="15" fill="rgb(225,111,53)" fg:x="347" fg:w="5"/><text x="1.0554%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.02%)</title><rect x="0.8240%" y="1141" width="0.0186%" height="15" fill="rgb(238,160,17)" fg:x="355" fg:w="8"/><text x="1.0740%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.07%)</title><rect x="0.8425%" y="1141" width="0.0696%" height="15" fill="rgb(214,148,48)" fg:x="363" fg:w="30"/><text x="1.0925%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (11 samples, 0.03%)</title><rect x="0.9122%" y="1141" width="0.0255%" height="15" fill="rgb(232,36,49)" fg:x="393" fg:w="11"/><text x="1.1622%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.08%)</title><rect x="0.9377%" y="1141" width="0.0812%" height="15" fill="rgb(209,103,24)" fg:x="404" fg:w="35"/><text x="1.1877%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (45 samples, 0.10%)</title><rect x="1.0189%" y="1141" width="0.1044%" height="15" fill="rgb(229,88,8)" fg:x="439" fg:w="45"/><text x="1.2689%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="1.1303%" y="1141" width="0.0302%" height="15" fill="rgb(213,181,19)" fg:x="487" fg:w="13"/><text x="1.3803%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.09%)</title><rect x="1.1605%" y="1141" width="0.0859%" height="15" fill="rgb(254,191,54)" fg:x="500" fg:w="37"/><text x="1.4105%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.07%)</title><rect x="1.2487%" y="1141" width="0.0673%" height="15" fill="rgb(241,83,37)" fg:x="538" fg:w="29"/><text x="1.4987%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="1.3230%" y="1141" width="0.0209%" height="15" fill="rgb(233,36,39)" fg:x="570" fg:w="9"/><text x="1.5730%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.02%)</title><rect x="1.3787%" y="1141" width="0.0209%" height="15" fill="rgb(226,3,54)" fg:x="594" fg:w="9"/><text x="1.6287%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="1.4019%" y="1141" width="0.0371%" height="15" fill="rgb(245,192,40)" fg:x="604" fg:w="16"/><text x="1.6519%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="1.4390%" y="1141" width="0.0348%" height="15" fill="rgb(238,167,29)" fg:x="620" fg:w="15"/><text x="1.6890%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.09%)</title><rect x="1.4738%" y="1141" width="0.0859%" height="15" fill="rgb(232,182,51)" fg:x="635" fg:w="37"/><text x="1.7238%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="1.5667%" y="1141" width="0.0255%" height="15" fill="rgb(231,60,39)" fg:x="675" fg:w="11"/><text x="1.8167%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.03%)</title><rect x="1.5968%" y="1141" width="0.0348%" height="15" fill="rgb(208,69,12)" fg:x="688" fg:w="15"/><text x="1.8468%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="1.6409%" y="1141" width="0.0186%" height="15" fill="rgb(235,93,37)" fg:x="707" fg:w="8"/><text x="1.8909%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.02%)</title><rect x="1.6618%" y="1141" width="0.0209%" height="15" fill="rgb(213,116,39)" fg:x="716" fg:w="9"/><text x="1.9118%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (120 samples, 0.28%)</title><rect x="1.6827%" y="1141" width="0.2785%" height="15" fill="rgb(222,207,29)" fg:x="725" fg:w="120"/><text x="1.9327%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.06%)</title><rect x="1.9705%" y="1141" width="0.0650%" height="15" fill="rgb(206,96,30)" fg:x="849" fg:w="28"/><text x="2.2205%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24 samples, 0.06%)</title><rect x="2.0355%" y="1141" width="0.0557%" height="15" fill="rgb(218,138,4)" fg:x="877" fg:w="24"/><text x="2.2855%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="2.0912%" y="1141" width="0.0279%" height="15" fill="rgb(250,191,14)" fg:x="901" fg:w="12"/><text x="2.3412%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="2.1191%" y="1141" width="0.0209%" height="15" fill="rgb(239,60,40)" fg:x="913" fg:w="9"/><text x="2.3691%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="2.1400%" y="1141" width="0.0186%" height="15" fill="rgb(206,27,48)" fg:x="922" fg:w="8"/><text x="2.3900%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="2.1632%" y="1141" width="0.0116%" height="15" fill="rgb(225,35,8)" fg:x="932" fg:w="5"/><text x="2.4132%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (8 samples, 0.02%)</title><rect x="2.1748%" y="1141" width="0.0186%" height="15" fill="rgb(250,213,24)" fg:x="937" fg:w="8"/><text x="2.4248%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="2.1933%" y="1141" width="0.0255%" height="15" fill="rgb(247,123,22)" fg:x="945" fg:w="11"/><text x="2.4433%" y="1151.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="2.2189%" y="1141" width="0.0139%" height="15" fill="rgb(231,138,38)" fg:x="956" fg:w="6"/><text x="2.4689%" y="1151.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="2.2374%" y="1141" width="0.0279%" height="15" fill="rgb(231,145,46)" fg:x="964" fg:w="12"/><text x="2.4874%" y="1151.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="2.2676%" y="1141" width="0.0116%" height="15" fill="rgb(251,118,11)" fg:x="977" fg:w="5"/><text x="2.5176%" y="1151.50"></text></g><g><title>&lt;borrow_graph::references::RefID as core::cmp::Ord&gt;::cmp (7 samples, 0.02%)</title><rect x="2.2931%" y="1141" width="0.0162%" height="15" fill="rgb(217,147,25)" fg:x="988" fg:w="7"/><text x="2.5431%" y="1151.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (7 samples, 0.02%)</title><rect x="2.3187%" y="1141" width="0.0162%" height="15" fill="rgb(247,81,37)" fg:x="999" fg:w="7"/><text x="2.5687%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.09%)</title><rect x="2.3581%" y="1141" width="0.0859%" height="15" fill="rgb(209,12,38)" fg:x="1016" fg:w="37"/><text x="2.6081%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (96 samples, 0.22%)</title><rect x="2.4440%" y="1141" width="0.2228%" height="15" fill="rgb(227,1,9)" fg:x="1053" fg:w="96"/><text x="2.6940%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (101 samples, 0.23%)</title><rect x="2.6668%" y="1141" width="0.2344%" height="15" fill="rgb(248,47,43)" fg:x="1149" fg:w="101"/><text x="2.9168%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="2.9082%" y="1141" width="0.0302%" height="15" fill="rgb(221,10,30)" fg:x="1253" fg:w="13"/><text x="3.1582%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (12 samples, 0.03%)</title><rect x="2.9593%" y="917" width="0.0279%" height="15" fill="rgb(210,229,1)" fg:x="1275" fg:w="12"/><text x="3.2093%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (13 samples, 0.03%)</title><rect x="2.9593%" y="1109" width="0.0302%" height="15" fill="rgb(222,148,37)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (13 samples, 0.03%)</title><rect x="2.9593%" y="1093" width="0.0302%" height="15" fill="rgb(234,67,33)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (13 samples, 0.03%)</title><rect x="2.9593%" y="1077" width="0.0302%" height="15" fill="rgb(247,98,35)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1087.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (13 samples, 0.03%)</title><rect x="2.9593%" y="1061" width="0.0302%" height="15" fill="rgb(247,138,52)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::pin (13 samples, 0.03%)</title><rect x="2.9593%" y="1045" width="0.0302%" height="15" fill="rgb(213,79,30)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1055.50"></text></g><g><title>crossbeam_epoch::default::with_handle (13 samples, 0.03%)</title><rect x="2.9593%" y="1029" width="0.0302%" height="15" fill="rgb(246,177,23)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.03%)</title><rect x="2.9593%" y="1013" width="0.0302%" height="15" fill="rgb(230,62,27)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1023.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (13 samples, 0.03%)</title><rect x="2.9593%" y="997" width="0.0302%" height="15" fill="rgb(216,154,8)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (13 samples, 0.03%)</title><rect x="2.9593%" y="981" width="0.0302%" height="15" fill="rgb(244,35,45)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="991.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (13 samples, 0.03%)</title><rect x="2.9593%" y="965" width="0.0302%" height="15" fill="rgb(251,115,12)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="975.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (13 samples, 0.03%)</title><rect x="2.9593%" y="949" width="0.0302%" height="15" fill="rgb(240,54,50)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (13 samples, 0.03%)</title><rect x="2.9593%" y="933" width="0.0302%" height="15" fill="rgb(233,84,52)" fg:x="1275" fg:w="13"/><text x="3.2093%" y="943.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (6 samples, 0.01%)</title><rect x="2.9894%" y="1029" width="0.0139%" height="15" fill="rgb(207,117,47)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.01%)</title><rect x="2.9894%" y="1013" width="0.0139%" height="15" fill="rgb(249,43,39)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="2.9894%" y="997" width="0.0139%" height="15" fill="rgb(209,38,44)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (6 samples, 0.01%)</title><rect x="2.9894%" y="981" width="0.0139%" height="15" fill="rgb(236,212,23)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="991.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="2.9894%" y="965" width="0.0139%" height="15" fill="rgb(242,79,21)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="975.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (6 samples, 0.01%)</title><rect x="2.9894%" y="949" width="0.0139%" height="15" fill="rgb(211,96,35)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="959.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.01%)</title><rect x="2.9894%" y="933" width="0.0139%" height="15" fill="rgb(253,215,40)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="2.9894%" y="917" width="0.0139%" height="15" fill="rgb(211,81,21)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="927.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (6 samples, 0.01%)</title><rect x="2.9894%" y="901" width="0.0139%" height="15" fill="rgb(208,190,38)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="911.50"></text></g><g><title>crossbeam_epoch::collector::Collector::register (6 samples, 0.01%)</title><rect x="2.9894%" y="885" width="0.0139%" height="15" fill="rgb(235,213,38)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (6 samples, 0.01%)</title><rect x="2.9894%" y="869" width="0.0139%" height="15" fill="rgb(237,122,38)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="879.50"></text></g><g><title>__rust_probestack (6 samples, 0.01%)</title><rect x="2.9894%" y="853" width="0.0139%" height="15" fill="rgb(244,218,35)" fg:x="1288" fg:w="6"/><text x="3.2394%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.07%)</title><rect x="2.9546%" y="1141" width="0.0696%" height="15" fill="rgb(240,68,47)" fg:x="1273" fg:w="30"/><text x="3.2046%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 0.06%)</title><rect x="2.9593%" y="1125" width="0.0650%" height="15" fill="rgb(210,16,53)" fg:x="1275" fg:w="28"/><text x="3.2093%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="2.9894%" y="1109" width="0.0348%" height="15" fill="rgb(235,124,12)" fg:x="1288" fg:w="15"/><text x="3.2394%" y="1119.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="2.9894%" y="1093" width="0.0348%" height="15" fill="rgb(224,169,11)" fg:x="1288" fg:w="15"/><text x="3.2394%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (15 samples, 0.03%)</title><rect x="2.9894%" y="1077" width="0.0348%" height="15" fill="rgb(250,166,2)" fg:x="1288" fg:w="15"/><text x="3.2394%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (15 samples, 0.03%)</title><rect x="2.9894%" y="1061" width="0.0348%" height="15" fill="rgb(242,216,29)" fg:x="1288" fg:w="15"/><text x="3.2394%" y="1071.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (15 samples, 0.03%)</title><rect x="2.9894%" y="1045" width="0.0348%" height="15" fill="rgb(230,116,27)" fg:x="1288" fg:w="15"/><text x="3.2394%" y="1055.50"></text></g><g><title>crossbeam_epoch::default::pin (9 samples, 0.02%)</title><rect x="3.0034%" y="1029" width="0.0209%" height="15" fill="rgb(228,99,48)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle (9 samples, 0.02%)</title><rect x="3.0034%" y="1013" width="0.0209%" height="15" fill="rgb(253,11,6)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="3.0034%" y="997" width="0.0209%" height="15" fill="rgb(247,143,39)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (9 samples, 0.02%)</title><rect x="3.0034%" y="981" width="0.0209%" height="15" fill="rgb(236,97,10)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (9 samples, 0.02%)</title><rect x="3.0034%" y="965" width="0.0209%" height="15" fill="rgb(233,208,19)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="975.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (9 samples, 0.02%)</title><rect x="3.0034%" y="949" width="0.0209%" height="15" fill="rgb(216,164,2)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (9 samples, 0.02%)</title><rect x="3.0034%" y="933" width="0.0209%" height="15" fill="rgb(220,129,5)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="943.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (9 samples, 0.02%)</title><rect x="3.0034%" y="917" width="0.0209%" height="15" fill="rgb(242,17,10)" fg:x="1294" fg:w="9"/><text x="3.2534%" y="927.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (7 samples, 0.02%)</title><rect x="3.0080%" y="901" width="0.0162%" height="15" fill="rgb(242,107,0)" fg:x="1296" fg:w="7"/><text x="3.2580%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.13%)</title><rect x="3.0312%" y="1141" width="0.1323%" height="15" fill="rgb(251,28,31)" fg:x="1306" fg:w="57"/><text x="3.2812%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="3.1914%" y="1141" width="0.0139%" height="15" fill="rgb(233,223,10)" fg:x="1375" fg:w="6"/><text x="3.4414%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="3.2192%" y="1141" width="0.0139%" height="15" fill="rgb(215,21,27)" fg:x="1387" fg:w="6"/><text x="3.4692%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (10 samples, 0.02%)</title><rect x="3.2401%" y="1141" width="0.0232%" height="15" fill="rgb(232,23,21)" fg:x="1396" fg:w="10"/><text x="3.4901%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="3.2842%" y="1141" width="0.0209%" height="15" fill="rgb(244,5,23)" fg:x="1415" fg:w="9"/><text x="3.5342%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (5 samples, 0.01%)</title><rect x="3.3121%" y="1141" width="0.0116%" height="15" fill="rgb(226,81,46)" fg:x="1427" fg:w="5"/><text x="3.5621%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (16 samples, 0.04%)</title><rect x="3.3237%" y="1141" width="0.0371%" height="15" fill="rgb(247,70,30)" fg:x="1432" fg:w="16"/><text x="3.5737%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="3.3608%" y="1141" width="0.0232%" height="15" fill="rgb(212,68,19)" fg:x="1448" fg:w="10"/><text x="3.6108%" y="1151.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="3.3863%" y="1141" width="0.0139%" height="15" fill="rgb(240,187,13)" fg:x="1459" fg:w="6"/><text x="3.6363%" y="1151.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::from_ok (10 samples, 0.02%)</title><rect x="3.4049%" y="1141" width="0.0232%" height="15" fill="rgb(223,113,26)" fg:x="1467" fg:w="10"/><text x="3.6549%" y="1151.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::into_result (14 samples, 0.03%)</title><rect x="3.4281%" y="1141" width="0.0325%" height="15" fill="rgb(206,192,2)" fg:x="1477" fg:w="14"/><text x="3.6781%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.04%)</title><rect x="3.4606%" y="1141" width="0.0371%" height="15" fill="rgb(241,108,4)" fg:x="1491" fg:w="16"/><text x="3.7106%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9 samples, 0.02%)</title><rect x="3.4977%" y="1141" width="0.0209%" height="15" fill="rgb(247,173,49)" fg:x="1507" fg:w="9"/><text x="3.7477%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (18 samples, 0.04%)</title><rect x="3.5349%" y="1141" width="0.0418%" height="15" fill="rgb(224,114,35)" fg:x="1523" fg:w="18"/><text x="3.7849%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (17 samples, 0.04%)</title><rect x="3.5767%" y="1141" width="0.0395%" height="15" fill="rgb(245,159,27)" fg:x="1541" fg:w="17"/><text x="3.8267%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="3.6231%" y="1141" width="0.0116%" height="15" fill="rgb(245,172,44)" fg:x="1561" fg:w="5"/><text x="3.8731%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::default::Default&gt;::default (13 samples, 0.03%)</title><rect x="3.6370%" y="1141" width="0.0302%" height="15" fill="rgb(236,23,11)" fg:x="1567" fg:w="13"/><text x="3.8870%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::from_error (11 samples, 0.03%)</title><rect x="3.6672%" y="1141" width="0.0255%" height="15" fill="rgb(205,117,38)" fg:x="1580" fg:w="11"/><text x="3.9172%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (98 samples, 0.23%)</title><rect x="3.6927%" y="1141" width="0.2275%" height="15" fill="rgb(237,72,25)" fg:x="1591" fg:w="98"/><text x="3.9427%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (28 samples, 0.06%)</title><rect x="3.9202%" y="1141" width="0.0650%" height="15" fill="rgb(244,70,9)" fg:x="1689" fg:w="28"/><text x="4.1702%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (17 samples, 0.04%)</title><rect x="3.9851%" y="1141" width="0.0395%" height="15" fill="rgb(217,125,39)" fg:x="1717" fg:w="17"/><text x="4.2351%" y="1151.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (18 samples, 0.04%)</title><rect x="4.0246%" y="1141" width="0.0418%" height="15" fill="rgb(235,36,10)" fg:x="1734" fg:w="18"/><text x="4.2746%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (88 samples, 0.20%)</title><rect x="4.0664%" y="1141" width="0.2042%" height="15" fill="rgb(251,123,47)" fg:x="1752" fg:w="88"/><text x="4.3164%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="4.2706%" y="1141" width="0.0116%" height="15" fill="rgb(221,13,13)" fg:x="1840" fg:w="5"/><text x="4.5206%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (8 samples, 0.02%)</title><rect x="4.2915%" y="1141" width="0.0186%" height="15" fill="rgb(238,131,9)" fg:x="1849" fg:w="8"/><text x="4.5415%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 0.48%)</title><rect x="4.3194%" y="1141" width="0.4758%" height="15" fill="rgb(211,50,8)" fg:x="1861" fg:w="205"/><text x="4.5694%" y="1151.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (84 samples, 0.19%)</title><rect x="4.6002%" y="1125" width="0.1950%" height="15" fill="rgb(245,182,24)" fg:x="1982" fg:w="84"/><text x="4.8502%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7 samples, 0.02%)</title><rect x="4.7952%" y="1141" width="0.0162%" height="15" fill="rgb(242,14,37)" fg:x="2066" fg:w="7"/><text x="5.0452%" y="1151.50"></text></g><g><title>&lt;crossbeam_epoch::epoch::Epoch as core::default::Default&gt;::default (10 samples, 0.02%)</title><rect x="4.8137%" y="1141" width="0.0232%" height="15" fill="rgb(246,228,12)" fg:x="2074" fg:w="10"/><text x="5.0637%" y="1151.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="4.8416%" y="1141" width="0.0186%" height="15" fill="rgb(213,55,15)" fg:x="2086" fg:w="8"/><text x="5.0916%" y="1151.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.03%)</title><rect x="4.8602%" y="1141" width="0.0325%" height="15" fill="rgb(209,9,3)" fg:x="2094" fg:w="14"/><text x="5.1102%" y="1151.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519Signature as diem_crypto::traits::Signature&gt;::verify (7 samples, 0.02%)</title><rect x="4.8950%" y="1141" width="0.0162%" height="15" fill="rgb(230,59,30)" fg:x="2109" fg:w="7"/><text x="5.1450%" y="1151.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519Signature as diem_crypto::traits::Signature&gt;::verify_arbitrary_msg (7 samples, 0.02%)</title><rect x="4.8950%" y="1125" width="0.0162%" height="15" fill="rgb(209,121,21)" fg:x="2109" fg:w="7"/><text x="5.1450%" y="1135.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::verify_strict (7 samples, 0.02%)</title><rect x="4.8950%" y="1109" width="0.0162%" height="15" fill="rgb(220,109,13)" fg:x="2109" fg:w="7"/><text x="5.1450%" y="1119.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (7 samples, 0.02%)</title><rect x="4.8950%" y="1093" width="0.0162%" height="15" fill="rgb(232,18,1)" fg:x="2109" fg:w="7"/><text x="5.1450%" y="1103.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::scalar_mul::vartime_double_base::mul (7 samples, 0.02%)</title><rect x="4.8950%" y="1077" width="0.0162%" height="15" fill="rgb(215,41,42)" fg:x="2109" fg:w="7"/><text x="5.1450%" y="1087.50"></text></g><g><title>&lt;diem_types::on_chain_config::vm_config::VMConfig as diem_types::on_chain_config::OnChainConfig&gt;::deserialize_into_config (7 samples, 0.02%)</title><rect x="4.9159%" y="1141" width="0.0162%" height="15" fill="rgb(224,123,36)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1151.50"></text></g><g><title>bcs::de::from_bytes (7 samples, 0.02%)</title><rect x="4.9159%" y="1125" width="0.0162%" height="15" fill="rgb(240,125,3)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1135.50"></text></g><g><title>diem_types::on_chain_config::vm_config::_::&lt;impl serde::de::Deserialize for diem_types::on_chain_config::vm_config::VMConfigInner&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="1109" width="0.0162%" height="15" fill="rgb(205,98,50)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1119.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.02%)</title><rect x="4.9159%" y="1093" width="0.0162%" height="15" fill="rgb(205,185,37)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1103.50"></text></g><g><title>&lt;diem_types::on_chain_config::vm_config::_::&lt;impl serde::de::Deserialize for diem_types::on_chain_config::vm_config::VMConfigInner&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="4.9159%" y="1077" width="0.0162%" height="15" fill="rgb(238,207,15)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1087.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="4.9159%" y="1061" width="0.0162%" height="15" fill="rgb(213,199,42)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1071.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="4.9159%" y="1045" width="0.0162%" height="15" fill="rgb(235,201,11)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="1029" width="0.0162%" height="15" fill="rgb(207,46,11)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1039.50"></text></g><g><title>diem_types::on_chain_config::vm_config::_::&lt;impl serde::de::Deserialize for diem_types::on_chain_config::vm_config::CostTableInner&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="1013" width="0.0162%" height="15" fill="rgb(241,35,35)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1023.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.02%)</title><rect x="4.9159%" y="997" width="0.0162%" height="15" fill="rgb(243,32,47)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="1007.50"></text></g><g><title>&lt;diem_types::on_chain_config::vm_config::_::&lt;impl serde::de::Deserialize for diem_types::on_chain_config::vm_config::CostTableInner&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="4.9159%" y="981" width="0.0162%" height="15" fill="rgb(247,202,23)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="4.9159%" y="965" width="0.0162%" height="15" fill="rgb(219,102,11)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="975.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="4.9159%" y="949" width="0.0162%" height="15" fill="rgb(243,110,44)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="933" width="0.0162%" height="15" fill="rgb(222,74,54)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="917" width="0.0162%" height="15" fill="rgb(216,99,12)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="927.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.02%)</title><rect x="4.9159%" y="901" width="0.0162%" height="15" fill="rgb(226,22,26)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="911.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="4.9159%" y="885" width="0.0162%" height="15" fill="rgb(217,163,10)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="895.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="4.9159%" y="869" width="0.0162%" height="15" fill="rgb(213,25,53)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="879.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="4.9159%" y="853" width="0.0162%" height="15" fill="rgb(252,105,26)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="837" width="0.0162%" height="15" fill="rgb(220,39,43)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="847.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (7 samples, 0.02%)</title><rect x="4.9159%" y="821" width="0.0162%" height="15" fill="rgb(229,68,48)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="831.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (7 samples, 0.02%)</title><rect x="4.9159%" y="805" width="0.0162%" height="15" fill="rgb(252,8,32)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="815.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (7 samples, 0.02%)</title><rect x="4.9159%" y="789" width="0.0162%" height="15" fill="rgb(223,20,43)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="799.50"></text></g><g><title>bcs::de::Deserializer::next (7 samples, 0.02%)</title><rect x="4.9159%" y="773" width="0.0162%" height="15" fill="rgb(229,81,49)" fg:x="2118" fg:w="7"/><text x="5.1659%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="4.9507%" y="1141" width="0.0302%" height="15" fill="rgb(236,28,36)" fg:x="2133" fg:w="13"/><text x="5.2007%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="4.9925%" y="1141" width="0.0464%" height="15" fill="rgb(249,185,26)" fg:x="2151" fg:w="20"/><text x="5.2425%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="5.0389%" y="1141" width="0.0139%" height="15" fill="rgb(249,174,33)" fg:x="2171" fg:w="6"/><text x="5.2889%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="5.0598%" y="1141" width="0.0162%" height="15" fill="rgb(233,201,37)" fg:x="2180" fg:w="7"/><text x="5.3098%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="5.0760%" y="1141" width="0.0325%" height="15" fill="rgb(221,78,26)" fg:x="2187" fg:w="14"/><text x="5.3260%" y="1151.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (9 samples, 0.02%)</title><rect x="5.1271%" y="1141" width="0.0209%" height="15" fill="rgb(250,127,30)" fg:x="2209" fg:w="9"/><text x="5.3771%" y="1151.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (9 samples, 0.02%)</title><rect x="5.1712%" y="1141" width="0.0209%" height="15" fill="rgb(230,49,44)" fg:x="2228" fg:w="9"/><text x="5.4212%" y="1151.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as move_binary_format::access::ModuleAccess&gt;::as_module (14 samples, 0.03%)</title><rect x="5.1944%" y="1141" width="0.0325%" height="15" fill="rgb(229,67,23)" fg:x="2238" fg:w="14"/><text x="5.4444%" y="1151.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="5.2362%" y="1141" width="0.0139%" height="15" fill="rgb(249,83,47)" fg:x="2256" fg:w="6"/><text x="5.4862%" y="1151.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="5.2571%" y="1141" width="0.0116%" height="15" fill="rgb(215,43,3)" fg:x="2265" fg:w="5"/><text x="5.5071%" y="1151.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (5 samples, 0.01%)</title><rect x="5.3313%" y="1141" width="0.0116%" height="15" fill="rgb(238,154,13)" fg:x="2297" fg:w="5"/><text x="5.5813%" y="1151.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="5.3476%" y="1141" width="0.0162%" height="15" fill="rgb(219,56,2)" fg:x="2304" fg:w="7"/><text x="5.5976%" y="1151.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="5.3638%" y="1141" width="0.0116%" height="15" fill="rgb(233,0,4)" fg:x="2311" fg:w="5"/><text x="5.6138%" y="1151.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (5 samples, 0.01%)</title><rect x="5.3917%" y="1125" width="0.0116%" height="15" fill="rgb(235,30,7)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1135.50"></text></g><g><title>&lt;diem_vm::data_cache::RemoteStorage&lt;S&gt; as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (5 samples, 0.01%)</title><rect x="5.3917%" y="1109" width="0.0116%" height="15" fill="rgb(250,79,13)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1119.50"></text></g><g><title>diem_vm::create_access_path (5 samples, 0.01%)</title><rect x="5.3917%" y="1093" width="0.0116%" height="15" fill="rgb(211,146,34)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1103.50"></text></g><g><title>diem_types::access_path::AccessPath::resource_access_path (5 samples, 0.01%)</title><rect x="5.3917%" y="1077" width="0.0116%" height="15" fill="rgb(228,22,38)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1087.50"></text></g><g><title>diem_types::access_path::AccessPath::resource_access_vec (5 samples, 0.01%)</title><rect x="5.3917%" y="1061" width="0.0116%" height="15" fill="rgb(235,168,5)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1071.50"></text></g><g><title>bcs::ser::to_bytes (5 samples, 0.01%)</title><rect x="5.3917%" y="1045" width="0.0116%" height="15" fill="rgb(221,155,16)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1055.50"></text></g><g><title>bcs::ser::serialize_into (5 samples, 0.01%)</title><rect x="5.3917%" y="1029" width="0.0116%" height="15" fill="rgb(215,215,53)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1039.50"></text></g><g><title>diem_types::access_path::_::&lt;impl serde::ser::Serialize for diem_types::access_path::Path&gt;::serialize (5 samples, 0.01%)</title><rect x="5.3917%" y="1013" width="0.0116%" height="15" fill="rgb(223,4,10)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="5.3917%" y="997" width="0.0116%" height="15" fill="rgb(234,103,6)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="1007.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (5 samples, 0.01%)</title><rect x="5.3917%" y="981" width="0.0116%" height="15" fill="rgb(227,97,0)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="5.3917%" y="965" width="0.0116%" height="15" fill="rgb(234,150,53)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="975.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (5 samples, 0.01%)</title><rect x="5.3917%" y="949" width="0.0116%" height="15" fill="rgb(228,201,54)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="5.3917%" y="933" width="0.0116%" height="15" fill="rgb(222,22,37)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="943.50"></text></g><g><title>serde::ser::impls::_&lt;impl serde::ser::Serialize for [T: 16]&gt;::serialize (5 samples, 0.01%)</title><rect x="5.3917%" y="917" width="0.0116%" height="15" fill="rgb(237,53,32)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (5 samples, 0.01%)</title><rect x="5.3917%" y="901" width="0.0116%" height="15" fill="rgb(233,25,53)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="911.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (5 samples, 0.01%)</title><rect x="5.3917%" y="885" width="0.0116%" height="15" fill="rgb(210,40,34)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (5 samples, 0.01%)</title><rect x="5.3917%" y="869" width="0.0116%" height="15" fill="rgb(241,220,44)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="5.3917%" y="853" width="0.0116%" height="15" fill="rgb(235,28,35)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="5.3917%" y="837" width="0.0116%" height="15" fill="rgb(210,56,17)" fg:x="2323" fg:w="5"/><text x="5.6417%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (18 samples, 0.04%)</title><rect x="5.4056%" y="1125" width="0.0418%" height="15" fill="rgb(224,130,29)" fg:x="2329" fg:w="18"/><text x="5.6556%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (18 samples, 0.04%)</title><rect x="5.4056%" y="1109" width="0.0418%" height="15" fill="rgb(235,212,8)" fg:x="2329" fg:w="18"/><text x="5.6556%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (18 samples, 0.04%)</title><rect x="5.4056%" y="1093" width="0.0418%" height="15" fill="rgb(223,33,50)" fg:x="2329" fg:w="18"/><text x="5.6556%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.01%)</title><rect x="5.4334%" y="1077" width="0.0139%" height="15" fill="rgb(219,149,13)" fg:x="2341" fg:w="6"/><text x="5.6834%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.01%)</title><rect x="5.4334%" y="1061" width="0.0139%" height="15" fill="rgb(250,156,29)" fg:x="2341" fg:w="6"/><text x="5.6834%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.01%)</title><rect x="5.4334%" y="1045" width="0.0139%" height="15" fill="rgb(216,193,19)" fg:x="2341" fg:w="6"/><text x="5.6834%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (14 samples, 0.03%)</title><rect x="5.4474%" y="1125" width="0.0325%" height="15" fill="rgb(216,135,14)" fg:x="2347" fg:w="14"/><text x="5.6974%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (14 samples, 0.03%)</title><rect x="5.4474%" y="1109" width="0.0325%" height="15" fill="rgb(241,47,5)" fg:x="2347" fg:w="14"/><text x="5.6974%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (14 samples, 0.03%)</title><rect x="5.4474%" y="1093" width="0.0325%" height="15" fill="rgb(233,42,35)" fg:x="2347" fg:w="14"/><text x="5.6974%" y="1103.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (5 samples, 0.01%)</title><rect x="5.4799%" y="1061" width="0.0116%" height="15" fill="rgb(231,13,6)" fg:x="2361" fg:w="5"/><text x="5.7299%" y="1071.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (5 samples, 0.01%)</title><rect x="5.4799%" y="1045" width="0.0116%" height="15" fill="rgb(207,181,40)" fg:x="2361" fg:w="5"/><text x="5.7299%" y="1055.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (44 samples, 0.10%)</title><rect x="5.3917%" y="1141" width="0.1021%" height="15" fill="rgb(254,173,49)" fg:x="2323" fg:w="44"/><text x="5.6417%" y="1151.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (6 samples, 0.01%)</title><rect x="5.4799%" y="1125" width="0.0139%" height="15" fill="rgb(221,1,38)" fg:x="2361" fg:w="6"/><text x="5.7299%" y="1135.50"></text></g><g><title>bcs::de::from_bytes_seed (6 samples, 0.01%)</title><rect x="5.4799%" y="1109" width="0.0139%" height="15" fill="rgb(206,124,46)" fg:x="2361" fg:w="6"/><text x="5.7299%" y="1119.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.01%)</title><rect x="5.4799%" y="1093" width="0.0139%" height="15" fill="rgb(249,21,11)" fg:x="2361" fg:w="6"/><text x="5.7299%" y="1103.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.01%)</title><rect x="5.4799%" y="1077" width="0.0139%" height="15" fill="rgb(222,201,40)" fg:x="2361" fg:w="6"/><text x="5.7299%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="5.5518%" y="1141" width="0.0348%" height="15" fill="rgb(235,61,29)" fg:x="2392" fg:w="15"/><text x="5.8018%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (27 samples, 0.06%)</title><rect x="5.6029%" y="1141" width="0.0627%" height="15" fill="rgb(219,207,3)" fg:x="2414" fg:w="27"/><text x="5.8529%" y="1151.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (8 samples, 0.02%)</title><rect x="5.6911%" y="1141" width="0.0186%" height="15" fill="rgb(222,56,46)" fg:x="2452" fg:w="8"/><text x="5.9411%" y="1151.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.02%)</title><rect x="5.7189%" y="1141" width="0.0209%" height="15" fill="rgb(239,76,54)" fg:x="2464" fg:w="9"/><text x="5.9689%" y="1151.50"></text></g><g><title>&lt;usize as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="5.7398%" y="1141" width="0.0116%" height="15" fill="rgb(231,124,27)" fg:x="2473" fg:w="5"/><text x="5.9898%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6 samples, 0.01%)</title><rect x="5.7514%" y="1141" width="0.0139%" height="15" fill="rgb(249,195,6)" fg:x="2478" fg:w="6"/><text x="6.0014%" y="1151.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (32 samples, 0.07%)</title><rect x="5.7700%" y="1141" width="0.0743%" height="15" fill="rgb(237,174,47)" fg:x="2486" fg:w="32"/><text x="6.0200%" y="1151.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (17 samples, 0.04%)</title><rect x="5.8443%" y="1141" width="0.0395%" height="15" fill="rgb(206,201,31)" fg:x="2518" fg:w="17"/><text x="6.0943%" y="1151.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="5.8837%" y="1141" width="0.0116%" height="15" fill="rgb(231,57,52)" fg:x="2535" fg:w="5"/><text x="6.1337%" y="1151.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="5.9301%" y="1125" width="0.0116%" height="15" fill="rgb(248,177,22)" fg:x="2555" fg:w="5"/><text x="6.1801%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="5.9580%" y="1125" width="0.0139%" height="15" fill="rgb(215,211,37)" fg:x="2567" fg:w="6"/><text x="6.2080%" y="1135.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="5.9719%" y="1125" width="0.0162%" height="15" fill="rgb(241,128,51)" fg:x="2573" fg:w="7"/><text x="6.2219%" y="1135.50"></text></g><g><title>__rust_probestack (8 samples, 0.02%)</title><rect x="6.0091%" y="1125" width="0.0186%" height="15" fill="rgb(227,165,31)" fg:x="2589" fg:w="8"/><text x="6.2591%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (22 samples, 0.05%)</title><rect x="6.0299%" y="1125" width="0.0511%" height="15" fill="rgb(228,167,24)" fg:x="2598" fg:w="22"/><text x="6.2799%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="6.0810%" y="1125" width="0.0116%" height="15" fill="rgb(228,143,12)" fg:x="2620" fg:w="5"/><text x="6.3310%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (9 samples, 0.02%)</title><rect x="6.1483%" y="1125" width="0.0209%" height="15" fill="rgb(249,149,8)" fg:x="2649" fg:w="9"/><text x="6.3983%" y="1135.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (24 samples, 0.06%)</title><rect x="6.1738%" y="1125" width="0.0557%" height="15" fill="rgb(243,35,44)" fg:x="2660" fg:w="24"/><text x="6.4238%" y="1135.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="6.2295%" y="1125" width="0.0116%" height="15" fill="rgb(246,89,9)" fg:x="2684" fg:w="5"/><text x="6.4795%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.03%)</title><rect x="6.2644%" y="1125" width="0.0279%" height="15" fill="rgb(233,213,13)" fg:x="2699" fg:w="12"/><text x="6.5144%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (5 samples, 0.01%)</title><rect x="6.3410%" y="1125" width="0.0116%" height="15" fill="rgb(233,141,41)" fg:x="2732" fg:w="5"/><text x="6.5910%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (67 samples, 0.16%)</title><rect x="6.3595%" y="1125" width="0.1555%" height="15" fill="rgb(239,167,4)" fg:x="2740" fg:w="67"/><text x="6.6095%" y="1135.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (42 samples, 0.10%)</title><rect x="6.5197%" y="1125" width="0.0975%" height="15" fill="rgb(209,217,16)" fg:x="2809" fg:w="42"/><text x="6.7697%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::cfg (5 samples, 0.01%)</title><rect x="6.6473%" y="1125" width="0.0116%" height="15" fill="rgb(219,88,35)" fg:x="2864" fg:w="5"/><text x="6.8973%" y="1135.50"></text></g><g><title>[language_e2e_testsuite-358701cfbad6d7df] (337 samples, 0.78%)</title><rect x="5.8953%" y="1141" width="0.7822%" height="15" fill="rgb(220,193,23)" fg:x="2540" fg:w="337"/><text x="6.1453%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="6.7007%" y="1125" width="0.0139%" height="15" fill="rgb(230,90,52)" fg:x="2887" fg:w="6"/><text x="6.9507%" y="1135.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.02%)</title><rect x="6.7286%" y="1125" width="0.0162%" height="15" fill="rgb(252,106,19)" fg:x="2899" fg:w="7"/><text x="6.9786%" y="1135.50"></text></g><g><title>&lt;[T] as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (5 samples, 0.01%)</title><rect x="6.7448%" y="1125" width="0.0116%" height="15" fill="rgb(206,74,20)" fg:x="2906" fg:w="5"/><text x="6.9948%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="6.7564%" y="1125" width="0.0162%" height="15" fill="rgb(230,138,44)" fg:x="2911" fg:w="7"/><text x="7.0064%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="6.7982%" y="1125" width="0.0116%" height="15" fill="rgb(235,182,43)" fg:x="2929" fg:w="5"/><text x="7.0482%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="6.8469%" y="1125" width="0.0209%" height="15" fill="rgb(242,16,51)" fg:x="2950" fg:w="9"/><text x="7.0969%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="6.8887%" y="1125" width="0.0186%" height="15" fill="rgb(248,9,4)" fg:x="2968" fg:w="8"/><text x="7.1387%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.03%)</title><rect x="6.9328%" y="1125" width="0.0279%" height="15" fill="rgb(210,31,22)" fg:x="2987" fg:w="12"/><text x="7.1828%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.03%)</title><rect x="6.9630%" y="1125" width="0.0279%" height="15" fill="rgb(239,54,39)" fg:x="3000" fg:w="12"/><text x="7.2130%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.03%)</title><rect x="7.0349%" y="1125" width="0.0279%" height="15" fill="rgb(230,99,41)" fg:x="3031" fg:w="12"/><text x="7.2849%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.07%)</title><rect x="7.0628%" y="1125" width="0.0696%" height="15" fill="rgb(253,106,12)" fg:x="3043" fg:w="30"/><text x="7.3128%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="7.1417%" y="1125" width="0.0348%" height="15" fill="rgb(213,46,41)" fg:x="3077" fg:w="15"/><text x="7.3917%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="7.1928%" y="1125" width="0.0116%" height="15" fill="rgb(215,133,35)" fg:x="3099" fg:w="5"/><text x="7.4428%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (53 samples, 0.12%)</title><rect x="7.2485%" y="1125" width="0.1230%" height="15" fill="rgb(213,28,5)" fg:x="3123" fg:w="53"/><text x="7.4985%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (45 samples, 0.10%)</title><rect x="7.3715%" y="1125" width="0.1044%" height="15" fill="rgb(215,77,49)" fg:x="3176" fg:w="45"/><text x="7.6215%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="7.4806%" y="1125" width="0.0116%" height="15" fill="rgb(248,100,22)" fg:x="3223" fg:w="5"/><text x="7.7306%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (26 samples, 0.06%)</title><rect x="7.4991%" y="1125" width="0.0603%" height="15" fill="rgb(208,67,9)" fg:x="3231" fg:w="26"/><text x="7.7491%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (29 samples, 0.07%)</title><rect x="7.5595%" y="1125" width="0.0673%" height="15" fill="rgb(219,133,21)" fg:x="3257" fg:w="29"/><text x="7.8095%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (14 samples, 0.03%)</title><rect x="7.6407%" y="1125" width="0.0325%" height="15" fill="rgb(246,46,29)" fg:x="3292" fg:w="14"/><text x="7.8907%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (20 samples, 0.05%)</title><rect x="7.6848%" y="1125" width="0.0464%" height="15" fill="rgb(246,185,52)" fg:x="3311" fg:w="20"/><text x="7.9348%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="7.7521%" y="1125" width="0.0441%" height="15" fill="rgb(252,136,11)" fg:x="3340" fg:w="19"/><text x="8.0021%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="7.8403%" y="1125" width="0.0650%" height="15" fill="rgb(219,138,53)" fg:x="3378" fg:w="28"/><text x="8.0903%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="7.9053%" y="1125" width="0.0139%" height="15" fill="rgb(211,51,23)" fg:x="3406" fg:w="6"/><text x="8.1553%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="7.9192%" y="1125" width="0.0139%" height="15" fill="rgb(247,221,28)" fg:x="3412" fg:w="6"/><text x="8.1692%" y="1135.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as move_binary_format::access::ModuleAccess&gt;::as_module (6 samples, 0.01%)</title><rect x="7.9401%" y="1125" width="0.0139%" height="15" fill="rgb(251,222,45)" fg:x="3421" fg:w="6"/><text x="8.1901%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (7 samples, 0.02%)</title><rect x="8.0515%" y="1125" width="0.0162%" height="15" fill="rgb(217,162,53)" fg:x="3469" fg:w="7"/><text x="8.3015%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="8.0724%" y="1125" width="0.0209%" height="15" fill="rgb(229,93,14)" fg:x="3478" fg:w="9"/><text x="8.3224%" y="1135.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (7 samples, 0.02%)</title><rect x="8.1142%" y="1125" width="0.0162%" height="15" fill="rgb(209,67,49)" fg:x="3496" fg:w="7"/><text x="8.3642%" y="1135.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (9 samples, 0.02%)</title><rect x="8.1328%" y="1125" width="0.0209%" height="15" fill="rgb(213,87,29)" fg:x="3504" fg:w="9"/><text x="8.3828%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.01%)</title><rect x="8.1536%" y="1125" width="0.0116%" height="15" fill="rgb(205,151,52)" fg:x="3513" fg:w="5"/><text x="8.4036%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (76 samples, 0.18%)</title><rect x="8.1653%" y="1125" width="0.1764%" height="15" fill="rgb(253,215,39)" fg:x="3518" fg:w="76"/><text x="8.4153%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9 samples, 0.02%)</title><rect x="8.3417%" y="1125" width="0.0209%" height="15" fill="rgb(221,220,41)" fg:x="3594" fg:w="9"/><text x="8.5917%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18 samples, 0.04%)</title><rect x="8.3625%" y="1125" width="0.0418%" height="15" fill="rgb(218,133,21)" fg:x="3603" fg:w="18"/><text x="8.6125%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="8.4090%" y="1125" width="0.0325%" height="15" fill="rgb(221,193,43)" fg:x="3623" fg:w="14"/><text x="8.6590%" y="1135.50"></text></g><g><title>__rdl_alloc (12 samples, 0.03%)</title><rect x="8.4415%" y="1125" width="0.0279%" height="15" fill="rgb(240,128,52)" fg:x="3637" fg:w="12"/><text x="8.6915%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="8.4856%" y="1125" width="0.0418%" height="15" fill="rgb(253,114,12)" fg:x="3656" fg:w="18"/><text x="8.7356%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.03%)</title><rect x="8.5343%" y="1125" width="0.0279%" height="15" fill="rgb(215,223,47)" fg:x="3677" fg:w="12"/><text x="8.7843%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="8.5714%" y="1125" width="0.0209%" height="15" fill="rgb(248,225,23)" fg:x="3693" fg:w="9"/><text x="8.8214%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (17 samples, 0.04%)</title><rect x="8.6109%" y="1125" width="0.0395%" height="15" fill="rgb(250,108,0)" fg:x="3710" fg:w="17"/><text x="8.8609%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (24 samples, 0.06%)</title><rect x="8.6503%" y="1125" width="0.0557%" height="15" fill="rgb(228,208,7)" fg:x="3727" fg:w="24"/><text x="8.9003%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (7 samples, 0.02%)</title><rect x="8.7060%" y="1125" width="0.0162%" height="15" fill="rgb(244,45,10)" fg:x="3751" fg:w="7"/><text x="8.9560%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="8.7223%" y="1125" width="0.0116%" height="15" fill="rgb(207,125,25)" fg:x="3758" fg:w="5"/><text x="8.9723%" y="1135.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="8.7455%" y="1125" width="0.0209%" height="15" fill="rgb(210,195,18)" fg:x="3768" fg:w="9"/><text x="8.9955%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="8.7710%" y="1125" width="0.0116%" height="15" fill="rgb(249,80,12)" fg:x="3779" fg:w="5"/><text x="9.0210%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (11 samples, 0.03%)</title><rect x="8.7826%" y="1125" width="0.0255%" height="15" fill="rgb(221,65,9)" fg:x="3784" fg:w="11"/><text x="9.0326%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="8.8198%" y="1125" width="0.0162%" height="15" fill="rgb(235,49,36)" fg:x="3800" fg:w="7"/><text x="9.0698%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (6 samples, 0.01%)</title><rect x="8.8523%" y="1125" width="0.0139%" height="15" fill="rgb(225,32,20)" fg:x="3814" fg:w="6"/><text x="9.1023%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (8 samples, 0.02%)</title><rect x="8.8848%" y="1125" width="0.0186%" height="15" fill="rgb(215,141,46)" fg:x="3828" fg:w="8"/><text x="9.1348%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (5 samples, 0.01%)</title><rect x="8.9103%" y="1125" width="0.0116%" height="15" fill="rgb(250,160,47)" fg:x="3839" fg:w="5"/><text x="9.1603%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (12 samples, 0.03%)</title><rect x="8.9219%" y="1125" width="0.0279%" height="15" fill="rgb(216,222,40)" fg:x="3844" fg:w="12"/><text x="9.1719%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (8 samples, 0.02%)</title><rect x="8.9614%" y="1125" width="0.0186%" height="15" fill="rgb(234,217,39)" fg:x="3861" fg:w="8"/><text x="9.2114%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (5 samples, 0.01%)</title><rect x="8.9822%" y="1125" width="0.0116%" height="15" fill="rgb(207,178,40)" fg:x="3870" fg:w="5"/><text x="9.2322%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (14 samples, 0.03%)</title><rect x="8.9938%" y="1125" width="0.0325%" height="15" fill="rgb(221,136,13)" fg:x="3875" fg:w="14"/><text x="9.2438%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_val_mut (5 samples, 0.01%)</title><rect x="9.0333%" y="1125" width="0.0116%" height="15" fill="rgb(249,199,10)" fg:x="3892" fg:w="5"/><text x="9.2833%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.01%)</title><rect x="9.0681%" y="1125" width="0.0116%" height="15" fill="rgb(249,222,13)" fg:x="3907" fg:w="5"/><text x="9.3181%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (20 samples, 0.05%)</title><rect x="9.0797%" y="1125" width="0.0464%" height="15" fill="rgb(244,185,38)" fg:x="3912" fg:w="20"/><text x="9.3297%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (11 samples, 0.03%)</title><rect x="9.1261%" y="1125" width="0.0255%" height="15" fill="rgb(236,202,9)" fg:x="3932" fg:w="11"/><text x="9.3761%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (5 samples, 0.01%)</title><rect x="9.1610%" y="1125" width="0.0116%" height="15" fill="rgb(250,229,37)" fg:x="3947" fg:w="5"/><text x="9.4110%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (19 samples, 0.04%)</title><rect x="9.1726%" y="1125" width="0.0441%" height="15" fill="rgb(206,174,23)" fg:x="3952" fg:w="19"/><text x="9.4226%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;::forget_type (9 samples, 0.02%)</title><rect x="9.2190%" y="1125" width="0.0209%" height="15" fill="rgb(211,33,43)" fg:x="3972" fg:w="9"/><text x="9.4690%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (15 samples, 0.03%)</title><rect x="9.2399%" y="1125" width="0.0348%" height="15" fill="rgb(245,58,50)" fg:x="3981" fg:w="15"/><text x="9.4899%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (7 samples, 0.02%)</title><rect x="9.2793%" y="1125" width="0.0162%" height="15" fill="rgb(244,68,36)" fg:x="3998" fg:w="7"/><text x="9.5293%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (5 samples, 0.01%)</title><rect x="9.2956%" y="1125" width="0.0116%" height="15" fill="rgb(232,229,15)" fg:x="4005" fg:w="5"/><text x="9.5456%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="9.3165%" y="1125" width="0.0139%" height="15" fill="rgb(254,30,23)" fg:x="4014" fg:w="6"/><text x="9.5665%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.02%)</title><rect x="9.3374%" y="1125" width="0.0186%" height="15" fill="rgb(235,160,14)" fg:x="4023" fg:w="8"/><text x="9.5874%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.05%)</title><rect x="9.3652%" y="1125" width="0.0464%" height="15" fill="rgb(212,155,44)" fg:x="4035" fg:w="20"/><text x="9.6152%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="9.4116%" y="1125" width="0.0186%" height="15" fill="rgb(226,2,50)" fg:x="4055" fg:w="8"/><text x="9.6616%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.03%)</title><rect x="9.4302%" y="1125" width="0.0255%" height="15" fill="rgb(234,177,6)" fg:x="4063" fg:w="11"/><text x="9.6802%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.05%)</title><rect x="9.4697%" y="1125" width="0.0511%" height="15" fill="rgb(217,24,9)" fg:x="4080" fg:w="22"/><text x="9.7197%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (6 samples, 0.01%)</title><rect x="9.5207%" y="1125" width="0.0139%" height="15" fill="rgb(220,13,46)" fg:x="4102" fg:w="6"/><text x="9.7707%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.04%)</title><rect x="9.5346%" y="1125" width="0.0371%" height="15" fill="rgb(239,221,27)" fg:x="4108" fg:w="16"/><text x="9.7846%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="9.5718%" y="1125" width="0.0139%" height="15" fill="rgb(222,198,25)" fg:x="4124" fg:w="6"/><text x="9.8218%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (10 samples, 0.02%)</title><rect x="9.5880%" y="1125" width="0.0232%" height="15" fill="rgb(211,99,13)" fg:x="4131" fg:w="10"/><text x="9.8380%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (10 samples, 0.02%)</title><rect x="9.6205%" y="1125" width="0.0232%" height="15" fill="rgb(232,111,31)" fg:x="4145" fg:w="10"/><text x="9.8705%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="9.6507%" y="1125" width="0.0162%" height="15" fill="rgb(245,82,37)" fg:x="4158" fg:w="7"/><text x="9.9007%" y="1135.50"></text></g><g><title>alloc::raw_vec::alloc_guard (8 samples, 0.02%)</title><rect x="9.6762%" y="1125" width="0.0186%" height="15" fill="rgb(227,149,46)" fg:x="4169" fg:w="8"/><text x="9.9262%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.03%)</title><rect x="9.6948%" y="1125" width="0.0302%" height="15" fill="rgb(218,36,50)" fg:x="4177" fg:w="13"/><text x="9.9448%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.02%)</title><rect x="9.7621%" y="1125" width="0.0209%" height="15" fill="rgb(226,80,48)" fg:x="4206" fg:w="9"/><text x="10.0121%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (26 samples, 0.06%)</title><rect x="9.7830%" y="1125" width="0.0603%" height="15" fill="rgb(238,224,15)" fg:x="4215" fg:w="26"/><text x="10.0330%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.02%)</title><rect x="9.8573%" y="1125" width="0.0162%" height="15" fill="rgb(241,136,10)" fg:x="4247" fg:w="7"/><text x="10.1073%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="9.8735%" y="1125" width="0.0116%" height="15" fill="rgb(208,32,45)" fg:x="4254" fg:w="5"/><text x="10.1235%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="9.8967%" y="1125" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="4264" fg:w="7"/><text x="10.1467%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="9.9153%" y="1125" width="0.0116%" height="15" fill="rgb(206,86,44)" fg:x="4272" fg:w="5"/><text x="10.1653%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::align (10 samples, 0.02%)</title><rect x="10.0313%" y="1125" width="0.0232%" height="15" fill="rgb(245,177,15)" fg:x="4322" fg:w="10"/><text x="10.2813%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="10.0545%" y="1125" width="0.0162%" height="15" fill="rgb(206,64,50)" fg:x="4332" fg:w="7"/><text x="10.3045%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (8 samples, 0.02%)</title><rect x="10.0778%" y="1125" width="0.0186%" height="15" fill="rgb(234,36,40)" fg:x="4342" fg:w="8"/><text x="10.3278%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::new (25 samples, 0.06%)</title><rect x="10.0963%" y="1125" width="0.0580%" height="15" fill="rgb(213,64,8)" fg:x="4350" fg:w="25"/><text x="10.3463%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::repeat (11 samples, 0.03%)</title><rect x="10.1590%" y="1125" width="0.0255%" height="15" fill="rgb(210,75,36)" fg:x="4377" fg:w="11"/><text x="10.4090%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::size (15 samples, 0.03%)</title><rect x="10.1845%" y="1125" width="0.0348%" height="15" fill="rgb(229,88,21)" fg:x="4388" fg:w="15"/><text x="10.4345%" y="1135.50"></text></g><g><title>core::alloc::layout::size_align (9 samples, 0.02%)</title><rect x="10.2193%" y="1125" width="0.0209%" height="15" fill="rgb(252,204,47)" fg:x="4403" fg:w="9"/><text x="10.4693%" y="1135.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (6 samples, 0.01%)</title><rect x="10.2402%" y="1125" width="0.0139%" height="15" fill="rgb(208,77,27)" fg:x="4412" fg:w="6"/><text x="10.4902%" y="1135.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.02%)</title><rect x="10.2797%" y="1125" width="0.0162%" height="15" fill="rgb(221,76,26)" fg:x="4429" fg:w="7"/><text x="10.5297%" y="1135.50"></text></g><g><title>core::cmp::Ord::min (13 samples, 0.03%)</title><rect x="10.2959%" y="1125" width="0.0302%" height="15" fill="rgb(225,139,18)" fg:x="4436" fg:w="13"/><text x="10.5459%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (5 samples, 0.01%)</title><rect x="10.3261%" y="1125" width="0.0116%" height="15" fill="rgb(230,137,11)" fg:x="4449" fg:w="5"/><text x="10.5761%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (14 samples, 0.03%)</title><rect x="10.3400%" y="1125" width="0.0325%" height="15" fill="rgb(212,28,1)" fg:x="4455" fg:w="14"/><text x="10.5900%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.02%)</title><rect x="10.3864%" y="1125" width="0.0162%" height="15" fill="rgb(248,164,17)" fg:x="4475" fg:w="7"/><text x="10.6364%" y="1135.50"></text></g><g><title>core::cmp::min_by (15 samples, 0.03%)</title><rect x="10.4189%" y="1125" width="0.0348%" height="15" fill="rgb(222,171,42)" fg:x="4489" fg:w="15"/><text x="10.6689%" y="1135.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u16&gt; for usize&gt;::from (9 samples, 0.02%)</title><rect x="10.4538%" y="1125" width="0.0209%" height="15" fill="rgb(243,84,45)" fg:x="4504" fg:w="9"/><text x="10.7038%" y="1135.50"></text></g><g><title>core::core_arch::simd::i8x16::new (16 samples, 0.04%)</title><rect x="10.4746%" y="1125" width="0.0371%" height="15" fill="rgb(252,49,23)" fg:x="4513" fg:w="16"/><text x="10.7246%" y="1135.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (10 samples, 0.02%)</title><rect x="10.5118%" y="1125" width="0.0232%" height="15" fill="rgb(215,19,7)" fg:x="4529" fg:w="10"/><text x="10.7618%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (14 samples, 0.03%)</title><rect x="10.5350%" y="1125" width="0.0325%" height="15" fill="rgb(238,81,41)" fg:x="4539" fg:w="14"/><text x="10.7850%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="10.5768%" y="1125" width="0.0162%" height="15" fill="rgb(210,199,37)" fg:x="4557" fg:w="7"/><text x="10.8268%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (8 samples, 0.02%)</title><rect x="10.5930%" y="1125" width="0.0186%" height="15" fill="rgb(244,192,49)" fg:x="4564" fg:w="8"/><text x="10.8430%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.02%)</title><rect x="10.6116%" y="1125" width="0.0209%" height="15" fill="rgb(226,211,11)" fg:x="4572" fg:w="9"/><text x="10.8616%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (6 samples, 0.01%)</title><rect x="10.6325%" y="1125" width="0.0139%" height="15" fill="rgb(236,162,54)" fg:x="4581" fg:w="6"/><text x="10.8825%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.01%)</title><rect x="10.6464%" y="1125" width="0.0116%" height="15" fill="rgb(220,229,9)" fg:x="4587" fg:w="5"/><text x="10.8964%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.01%)</title><rect x="10.6789%" y="1125" width="0.0116%" height="15" fill="rgb(250,87,22)" fg:x="4601" fg:w="5"/><text x="10.9289%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.01%)</title><rect x="10.6905%" y="1125" width="0.0116%" height="15" fill="rgb(239,43,17)" fg:x="4606" fg:w="5"/><text x="10.9405%" y="1135.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (11 samples, 0.03%)</title><rect x="10.7044%" y="1125" width="0.0255%" height="15" fill="rgb(231,177,25)" fg:x="4612" fg:w="11"/><text x="10.9544%" y="1135.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.03%)</title><rect x="10.7300%" y="1125" width="0.0255%" height="15" fill="rgb(219,179,1)" fg:x="4623" fg:w="11"/><text x="10.9800%" y="1135.50"></text></g><g><title>core::hash::sip::u8to64_le (31 samples, 0.07%)</title><rect x="10.7555%" y="1125" width="0.0720%" height="15" fill="rgb(238,219,53)" fg:x="4634" fg:w="31"/><text x="11.0055%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.12%)</title><rect x="10.8274%" y="1125" width="0.1184%" height="15" fill="rgb(232,167,36)" fg:x="4665" fg:w="51"/><text x="11.0774%" y="1135.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (6 samples, 0.01%)</title><rect x="10.9504%" y="1125" width="0.0139%" height="15" fill="rgb(244,19,51)" fg:x="4718" fg:w="6"/><text x="11.2004%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (6 samples, 0.01%)</title><rect x="11.0549%" y="1125" width="0.0139%" height="15" fill="rgb(224,6,22)" fg:x="4763" fg:w="6"/><text x="11.3049%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="11.0735%" y="1125" width="0.0139%" height="15" fill="rgb(224,145,5)" fg:x="4771" fg:w="6"/><text x="11.3235%" y="1135.50"></text></g><g><title>core::mem::take (7 samples, 0.02%)</title><rect x="11.1083%" y="1125" width="0.0162%" height="15" fill="rgb(234,130,49)" fg:x="4786" fg:w="7"/><text x="11.3583%" y="1135.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (11 samples, 0.03%)</title><rect x="11.1315%" y="1125" width="0.0255%" height="15" fill="rgb(254,6,2)" fg:x="4796" fg:w="11"/><text x="11.3815%" y="1135.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (11 samples, 0.03%)</title><rect x="11.1593%" y="1125" width="0.0255%" height="15" fill="rgb(208,96,46)" fg:x="4808" fg:w="11"/><text x="11.4093%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.05%)</title><rect x="11.1872%" y="1125" width="0.0534%" height="15" fill="rgb(239,3,39)" fg:x="4820" fg:w="23"/><text x="11.4372%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (39 samples, 0.09%)</title><rect x="11.2429%" y="1125" width="0.0905%" height="15" fill="rgb(233,210,1)" fg:x="4844" fg:w="39"/><text x="11.4929%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (10 samples, 0.02%)</title><rect x="11.3334%" y="1125" width="0.0232%" height="15" fill="rgb(244,137,37)" fg:x="4883" fg:w="10"/><text x="11.5834%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8 samples, 0.02%)</title><rect x="11.3566%" y="1125" width="0.0186%" height="15" fill="rgb(240,136,2)" fg:x="4893" fg:w="8"/><text x="11.6066%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (5 samples, 0.01%)</title><rect x="11.3752%" y="1125" width="0.0116%" height="15" fill="rgb(239,18,37)" fg:x="4901" fg:w="5"/><text x="11.6252%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="11.3961%" y="1125" width="0.0139%" height="15" fill="rgb(218,185,22)" fg:x="4910" fg:w="6"/><text x="11.6461%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (5 samples, 0.01%)</title><rect x="11.4100%" y="1125" width="0.0116%" height="15" fill="rgb(225,218,4)" fg:x="4916" fg:w="5"/><text x="11.6600%" y="1135.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (21 samples, 0.05%)</title><rect x="11.4216%" y="1125" width="0.0487%" height="15" fill="rgb(230,182,32)" fg:x="4921" fg:w="21"/><text x="11.6716%" y="1135.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (11 samples, 0.03%)</title><rect x="11.4703%" y="1125" width="0.0255%" height="15" fill="rgb(242,56,43)" fg:x="4942" fg:w="11"/><text x="11.7203%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="11.5028%" y="1125" width="0.0255%" height="15" fill="rgb(233,99,24)" fg:x="4956" fg:w="11"/><text x="11.7528%" y="1135.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (5 samples, 0.01%)</title><rect x="11.5284%" y="1125" width="0.0116%" height="15" fill="rgb(234,209,42)" fg:x="4967" fg:w="5"/><text x="11.7784%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="11.5493%" y="1125" width="0.0255%" height="15" fill="rgb(227,7,12)" fg:x="4976" fg:w="11"/><text x="11.7993%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (37 samples, 0.09%)</title><rect x="11.5771%" y="1125" width="0.0859%" height="15" fill="rgb(245,203,43)" fg:x="4988" fg:w="37"/><text x="11.8271%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (6 samples, 0.01%)</title><rect x="11.6723%" y="1125" width="0.0139%" height="15" fill="rgb(238,205,33)" fg:x="5029" fg:w="6"/><text x="11.9223%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (47 samples, 0.11%)</title><rect x="11.6932%" y="1125" width="0.1091%" height="15" fill="rgb(231,56,7)" fg:x="5038" fg:w="47"/><text x="11.9432%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.02%)</title><rect x="11.8069%" y="1125" width="0.0186%" height="15" fill="rgb(244,186,29)" fg:x="5087" fg:w="8"/><text x="12.0569%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (7 samples, 0.02%)</title><rect x="11.8255%" y="1125" width="0.0162%" height="15" fill="rgb(234,111,31)" fg:x="5095" fg:w="7"/><text x="12.0755%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.02%)</title><rect x="11.8417%" y="1125" width="0.0162%" height="15" fill="rgb(241,149,10)" fg:x="5102" fg:w="7"/><text x="12.0917%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (6 samples, 0.01%)</title><rect x="11.8580%" y="1125" width="0.0139%" height="15" fill="rgb(249,206,44)" fg:x="5109" fg:w="6"/><text x="12.1080%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="11.9044%" y="1125" width="0.0116%" height="15" fill="rgb(251,153,30)" fg:x="5129" fg:w="5"/><text x="12.1544%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="11.9995%" y="1125" width="0.0116%" height="15" fill="rgb(239,152,38)" fg:x="5170" fg:w="5"/><text x="12.2495%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (6 samples, 0.01%)</title><rect x="12.0111%" y="1125" width="0.0139%" height="15" fill="rgb(249,139,47)" fg:x="5175" fg:w="6"/><text x="12.2611%" y="1135.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.02%)</title><rect x="12.0344%" y="1125" width="0.0186%" height="15" fill="rgb(244,64,35)" fg:x="5185" fg:w="8"/><text x="12.2844%" y="1135.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.02%)</title><rect x="12.0529%" y="1125" width="0.0209%" height="15" fill="rgb(216,46,15)" fg:x="5193" fg:w="9"/><text x="12.3029%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (32 samples, 0.07%)</title><rect x="12.0738%" y="1125" width="0.0743%" height="15" fill="rgb(250,74,19)" fg:x="5202" fg:w="32"/><text x="12.3238%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (11 samples, 0.03%)</title><rect x="12.1481%" y="1125" width="0.0255%" height="15" fill="rgb(249,42,33)" fg:x="5234" fg:w="11"/><text x="12.3981%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.02%)</title><rect x="12.1759%" y="1125" width="0.0162%" height="15" fill="rgb(242,149,17)" fg:x="5246" fg:w="7"/><text x="12.4259%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.04%)</title><rect x="12.1922%" y="1125" width="0.0441%" height="15" fill="rgb(244,29,21)" fg:x="5253" fg:w="19"/><text x="12.4422%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.04%)</title><rect x="12.2409%" y="1125" width="0.0371%" height="15" fill="rgb(220,130,37)" fg:x="5274" fg:w="16"/><text x="12.4909%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::len (16 samples, 0.04%)</title><rect x="12.2897%" y="1125" width="0.0371%" height="15" fill="rgb(211,67,2)" fg:x="5295" fg:w="16"/><text x="12.5397%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (47 samples, 0.11%)</title><rect x="12.3268%" y="1125" width="0.1091%" height="15" fill="rgb(235,68,52)" fg:x="5311" fg:w="47"/><text x="12.5768%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (30 samples, 0.07%)</title><rect x="12.4359%" y="1125" width="0.0696%" height="15" fill="rgb(246,142,3)" fg:x="5358" fg:w="30"/><text x="12.6859%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (26 samples, 0.06%)</title><rect x="12.5078%" y="1125" width="0.0603%" height="15" fill="rgb(241,25,7)" fg:x="5389" fg:w="26"/><text x="12.7578%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="12.5682%" y="1125" width="0.0116%" height="15" fill="rgb(242,119,39)" fg:x="5415" fg:w="5"/><text x="12.8182%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::as_non_null_ptr (5 samples, 0.01%)</title><rect x="12.5798%" y="1125" width="0.0116%" height="15" fill="rgb(241,98,45)" fg:x="5420" fg:w="5"/><text x="12.8298%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::len (13 samples, 0.03%)</title><rect x="12.5914%" y="1125" width="0.0302%" height="15" fill="rgb(254,28,30)" fg:x="5425" fg:w="13"/><text x="12.8414%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (20 samples, 0.05%)</title><rect x="12.6216%" y="1125" width="0.0464%" height="15" fill="rgb(241,142,54)" fg:x="5438" fg:w="20"/><text x="12.8716%" y="1135.50"></text></g><g><title>core::ptr::read (48 samples, 0.11%)</title><rect x="12.6680%" y="1125" width="0.1114%" height="15" fill="rgb(222,85,15)" fg:x="5458" fg:w="48"/><text x="12.9180%" y="1135.50"></text></g><g><title>core::ptr::slice_from_raw_parts (91 samples, 0.21%)</title><rect x="12.7794%" y="1125" width="0.2112%" height="15" fill="rgb(210,85,47)" fg:x="5506" fg:w="91"/><text x="13.0294%" y="1135.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (55 samples, 0.13%)</title><rect x="12.9906%" y="1125" width="0.1277%" height="15" fill="rgb(224,206,25)" fg:x="5597" fg:w="55"/><text x="13.2406%" y="1135.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (14 samples, 0.03%)</title><rect x="13.1183%" y="1125" width="0.0325%" height="15" fill="rgb(243,201,19)" fg:x="5652" fg:w="14"/><text x="13.3683%" y="1135.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (15 samples, 0.03%)</title><rect x="13.1507%" y="1125" width="0.0348%" height="15" fill="rgb(236,59,4)" fg:x="5666" fg:w="15"/><text x="13.4007%" y="1135.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (32 samples, 0.07%)</title><rect x="13.1856%" y="1125" width="0.0743%" height="15" fill="rgb(254,179,45)" fg:x="5681" fg:w="32"/><text x="13.4356%" y="1135.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="13.2598%" y="1125" width="0.0116%" height="15" fill="rgb(226,14,10)" fg:x="5713" fg:w="5"/><text x="13.5098%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (8 samples, 0.02%)</title><rect x="13.2761%" y="1125" width="0.0186%" height="15" fill="rgb(244,27,41)" fg:x="5720" fg:w="8"/><text x="13.5261%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (14 samples, 0.03%)</title><rect x="13.2947%" y="1125" width="0.0325%" height="15" fill="rgb(235,35,32)" fg:x="5728" fg:w="14"/><text x="13.5447%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (10 samples, 0.02%)</title><rect x="13.3295%" y="1125" width="0.0232%" height="15" fill="rgb(218,68,31)" fg:x="5743" fg:w="10"/><text x="13.5795%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (30 samples, 0.07%)</title><rect x="13.3550%" y="1125" width="0.0696%" height="15" fill="rgb(207,120,37)" fg:x="5754" fg:w="30"/><text x="13.6050%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (19 samples, 0.04%)</title><rect x="13.4293%" y="1125" width="0.0441%" height="15" fill="rgb(227,98,0)" fg:x="5786" fg:w="19"/><text x="13.6793%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (16 samples, 0.04%)</title><rect x="13.4734%" y="1125" width="0.0371%" height="15" fill="rgb(207,7,3)" fg:x="5805" fg:w="16"/><text x="13.7234%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (16 samples, 0.04%)</title><rect x="13.5105%" y="1125" width="0.0371%" height="15" fill="rgb(206,98,19)" fg:x="5821" fg:w="16"/><text x="13.7605%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (23 samples, 0.05%)</title><rect x="13.5476%" y="1125" width="0.0534%" height="15" fill="rgb(217,5,26)" fg:x="5837" fg:w="23"/><text x="13.7976%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.01%)</title><rect x="13.6219%" y="1125" width="0.0139%" height="15" fill="rgb(235,190,38)" fg:x="5869" fg:w="6"/><text x="13.8719%" y="1135.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.05%)</title><rect x="13.6405%" y="1125" width="0.0464%" height="15" fill="rgb(247,86,24)" fg:x="5877" fg:w="20"/><text x="13.8905%" y="1135.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (30 samples, 0.07%)</title><rect x="13.6939%" y="1125" width="0.0696%" height="15" fill="rgb(205,101,16)" fg:x="5900" fg:w="30"/><text x="13.9439%" y="1135.50"></text></g><g><title>core::slice::raw::from_raw_parts (24 samples, 0.06%)</title><rect x="13.7635%" y="1125" width="0.0557%" height="15" fill="rgb(246,168,33)" fg:x="5930" fg:w="24"/><text x="14.0135%" y="1135.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.01%)</title><rect x="13.8192%" y="1125" width="0.0139%" height="15" fill="rgb(231,114,1)" fg:x="5954" fg:w="6"/><text x="14.0692%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.01%)</title><rect x="13.8354%" y="1125" width="0.0139%" height="15" fill="rgb(207,184,53)" fg:x="5961" fg:w="6"/><text x="14.0854%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="13.8517%" y="1125" width="0.0139%" height="15" fill="rgb(224,95,51)" fg:x="5968" fg:w="6"/><text x="14.1017%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="13.9004%" y="1125" width="0.0116%" height="15" fill="rgb(212,188,45)" fg:x="5989" fg:w="5"/><text x="14.1504%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (9 samples, 0.02%)</title><rect x="13.9120%" y="1125" width="0.0209%" height="15" fill="rgb(223,154,38)" fg:x="5994" fg:w="9"/><text x="14.1620%" y="1135.50"></text></g><g><title>hashbrown::map::make_hasher (7 samples, 0.02%)</title><rect x="13.9422%" y="1125" width="0.0162%" height="15" fill="rgb(251,22,52)" fg:x="6007" fg:w="7"/><text x="14.1922%" y="1135.50"></text></g><g><title>hashbrown::map::make_insert_hash (8 samples, 0.02%)</title><rect x="13.9585%" y="1125" width="0.0186%" height="15" fill="rgb(229,209,22)" fg:x="6014" fg:w="8"/><text x="14.2085%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (20 samples, 0.05%)</title><rect x="13.9793%" y="1125" width="0.0464%" height="15" fill="rgb(234,138,34)" fg:x="6023" fg:w="20"/><text x="14.2293%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (20 samples, 0.05%)</title><rect x="14.0350%" y="1125" width="0.0464%" height="15" fill="rgb(212,95,11)" fg:x="6047" fg:w="20"/><text x="14.2850%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (6 samples, 0.01%)</title><rect x="14.0815%" y="1125" width="0.0139%" height="15" fill="rgb(240,179,47)" fg:x="6067" fg:w="6"/><text x="14.3315%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.01%)</title><rect x="14.0954%" y="1125" width="0.0116%" height="15" fill="rgb(240,163,11)" fg:x="6073" fg:w="5"/><text x="14.3454%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (27 samples, 0.06%)</title><rect x="14.1093%" y="1125" width="0.0627%" height="15" fill="rgb(236,37,12)" fg:x="6079" fg:w="27"/><text x="14.3593%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.03%)</title><rect x="14.1720%" y="1125" width="0.0255%" height="15" fill="rgb(232,164,16)" fg:x="6106" fg:w="11"/><text x="14.4220%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (11 samples, 0.03%)</title><rect x="14.2045%" y="1125" width="0.0255%" height="15" fill="rgb(244,205,15)" fg:x="6120" fg:w="11"/><text x="14.4545%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (13 samples, 0.03%)</title><rect x="14.2300%" y="1125" width="0.0302%" height="15" fill="rgb(223,117,47)" fg:x="6131" fg:w="13"/><text x="14.4800%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.05%)</title><rect x="14.2648%" y="1125" width="0.0534%" height="15" fill="rgb(244,107,35)" fg:x="6146" fg:w="23"/><text x="14.5148%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="14.3182%" y="1125" width="0.0116%" height="15" fill="rgb(205,140,8)" fg:x="6169" fg:w="5"/><text x="14.5682%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="14.3298%" y="1125" width="0.0209%" height="15" fill="rgb(228,84,46)" fg:x="6174" fg:w="9"/><text x="14.5798%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.01%)</title><rect x="14.3507%" y="1125" width="0.0116%" height="15" fill="rgb(254,188,9)" fg:x="6183" fg:w="5"/><text x="14.6007%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (11 samples, 0.03%)</title><rect x="14.3646%" y="1125" width="0.0255%" height="15" fill="rgb(206,112,54)" fg:x="6189" fg:w="11"/><text x="14.6146%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (24 samples, 0.06%)</title><rect x="14.3902%" y="1125" width="0.0557%" height="15" fill="rgb(216,84,49)" fg:x="6200" fg:w="24"/><text x="14.6402%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (17 samples, 0.04%)</title><rect x="14.4668%" y="1125" width="0.0395%" height="15" fill="rgb(214,194,35)" fg:x="6233" fg:w="17"/><text x="14.7168%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (14 samples, 0.03%)</title><rect x="14.5155%" y="1125" width="0.0325%" height="15" fill="rgb(249,28,3)" fg:x="6254" fg:w="14"/><text x="14.7655%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (48 samples, 0.11%)</title><rect x="14.5480%" y="1125" width="0.1114%" height="15" fill="rgb(222,56,52)" fg:x="6268" fg:w="48"/><text x="14.7980%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (8 samples, 0.02%)</title><rect x="14.6594%" y="1125" width="0.0186%" height="15" fill="rgb(245,217,50)" fg:x="6316" fg:w="8"/><text x="14.9094%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (20 samples, 0.05%)</title><rect x="14.6803%" y="1125" width="0.0464%" height="15" fill="rgb(213,201,24)" fg:x="6325" fg:w="20"/><text x="14.9303%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (8 samples, 0.02%)</title><rect x="14.7406%" y="1125" width="0.0186%" height="15" fill="rgb(248,116,28)" fg:x="6351" fg:w="8"/><text x="14.9906%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (14 samples, 0.03%)</title><rect x="14.7708%" y="1125" width="0.0325%" height="15" fill="rgb(219,72,43)" fg:x="6364" fg:w="14"/><text x="15.0208%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (8 samples, 0.02%)</title><rect x="14.8056%" y="1125" width="0.0186%" height="15" fill="rgb(209,138,14)" fg:x="6379" fg:w="8"/><text x="15.0556%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (11 samples, 0.03%)</title><rect x="14.8242%" y="1125" width="0.0255%" height="15" fill="rgb(222,18,33)" fg:x="6387" fg:w="11"/><text x="15.0742%" y="1135.50"></text></g><g><title>hashbrown::raw::TableLayout::new (6 samples, 0.01%)</title><rect x="14.8567%" y="1125" width="0.0139%" height="15" fill="rgb(213,199,7)" fg:x="6401" fg:w="6"/><text x="15.1067%" y="1135.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.02%)</title><rect x="14.8706%" y="1125" width="0.0209%" height="15" fill="rgb(250,110,10)" fg:x="6407" fg:w="9"/><text x="15.1206%" y="1135.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (9 samples, 0.02%)</title><rect x="14.9101%" y="1125" width="0.0209%" height="15" fill="rgb(248,123,6)" fg:x="6424" fg:w="9"/><text x="15.1601%" y="1135.50"></text></g><g><title>hashbrown::raw::h1 (12 samples, 0.03%)</title><rect x="14.9402%" y="1125" width="0.0279%" height="15" fill="rgb(206,91,31)" fg:x="6437" fg:w="12"/><text x="15.1902%" y="1135.50"></text></g><g><title>hashbrown::raw::special_is_empty (5 samples, 0.01%)</title><rect x="14.9797%" y="1125" width="0.0116%" height="15" fill="rgb(211,154,13)" fg:x="6454" fg:w="5"/><text x="15.2297%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.01%)</title><rect x="15.1654%" y="1125" width="0.0116%" height="15" fill="rgb(225,148,7)" fg:x="6534" fg:w="5"/><text x="15.4154%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (7 samples, 0.02%)</title><rect x="15.1770%" y="1125" width="0.0162%" height="15" fill="rgb(220,160,43)" fg:x="6539" fg:w="7"/><text x="15.4270%" y="1135.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (7 samples, 0.02%)</title><rect x="15.2025%" y="1125" width="0.0162%" height="15" fill="rgb(213,52,39)" fg:x="6550" fg:w="7"/><text x="15.4525%" y="1135.50"></text></g><g><title>[unknown] (3,685 samples, 8.55%)</title><rect x="6.6775%" y="1141" width="8.5529%" height="15" fill="rgb(243,137,7)" fg:x="2877" fg:w="3685"/><text x="6.9275%" y="1151.50">[unknown]</text></g><g><title>__GI___mmap64 (5 samples, 0.01%)</title><rect x="15.8036%" y="837" width="0.0116%" height="15" fill="rgb(230,79,13)" fg:x="6809" fg:w="5"/><text x="16.0536%" y="847.50"></text></g><g><title>arena_get2.part.0 (27 samples, 0.06%)</title><rect x="15.7688%" y="869" width="0.0627%" height="15" fill="rgb(247,105,23)" fg:x="6794" fg:w="27"/><text x="16.0188%" y="879.50"></text></g><g><title>new_heap (22 samples, 0.05%)</title><rect x="15.7804%" y="853" width="0.0511%" height="15" fill="rgb(223,179,41)" fg:x="6799" fg:w="22"/><text x="16.0304%" y="863.50"></text></g><g><title>__GI___mprotect (7 samples, 0.02%)</title><rect x="15.8152%" y="837" width="0.0162%" height="15" fill="rgb(218,9,34)" fg:x="6814" fg:w="7"/><text x="16.0652%" y="847.50"></text></g><g><title>__calloc (34 samples, 0.08%)</title><rect x="15.7549%" y="901" width="0.0789%" height="15" fill="rgb(222,106,8)" fg:x="6788" fg:w="34"/><text x="16.0049%" y="911.50"></text></g><g><title>tcache_init.part.0 (33 samples, 0.08%)</title><rect x="15.7572%" y="885" width="0.0766%" height="15" fill="rgb(211,220,0)" fg:x="6789" fg:w="33"/><text x="16.0072%" y="895.50"></text></g><g><title>std::io::stdio::set_output_capture (36 samples, 0.08%)</title><rect x="15.7526%" y="1029" width="0.0836%" height="15" fill="rgb(229,52,16)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.08%)</title><rect x="15.7526%" y="1013" width="0.0836%" height="15" fill="rgb(212,155,18)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.08%)</title><rect x="15.7526%" y="997" width="0.0836%" height="15" fill="rgb(242,21,14)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="1007.50"></text></g><g><title>std::io::stdio::OUTPUT_CAPTURE::__getit (36 samples, 0.08%)</title><rect x="15.7526%" y="981" width="0.0836%" height="15" fill="rgb(222,19,48)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="991.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (36 samples, 0.08%)</title><rect x="15.7526%" y="965" width="0.0836%" height="15" fill="rgb(232,45,27)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="975.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (36 samples, 0.08%)</title><rect x="15.7526%" y="949" width="0.0836%" height="15" fill="rgb(249,103,42)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="959.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (36 samples, 0.08%)</title><rect x="15.7526%" y="933" width="0.0836%" height="15" fill="rgb(246,81,33)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="943.50"></text></g><g><title>__cxa_thread_atexit_impl (36 samples, 0.08%)</title><rect x="15.7526%" y="917" width="0.0836%" height="15" fill="rgb(252,33,42)" fg:x="6787" fg:w="36"/><text x="16.0026%" y="927.50"></text></g><g><title>[language_e2e_testsuite-358701cfbad6d7df] (7 samples, 0.02%)</title><rect x="15.8431%" y="885" width="0.0162%" height="15" fill="rgb(209,212,41)" fg:x="6826" fg:w="7"/><text x="16.0931%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.01%)</title><rect x="15.8686%" y="869" width="0.0139%" height="15" fill="rgb(207,154,6)" fg:x="6837" fg:w="6"/><text x="16.1186%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="15.9127%" y="869" width="0.0116%" height="15" fill="rgb(223,64,47)" fg:x="6856" fg:w="5"/><text x="16.1627%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (13 samples, 0.03%)</title><rect x="15.9429%" y="869" width="0.0302%" height="15" fill="rgb(211,161,38)" fg:x="6869" fg:w="13"/><text x="16.1929%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (6 samples, 0.01%)</title><rect x="15.9754%" y="869" width="0.0139%" height="15" fill="rgb(219,138,40)" fg:x="6883" fg:w="6"/><text x="16.2254%" y="879.50"></text></g><g><title>[unknown] (83 samples, 0.19%)</title><rect x="15.8593%" y="885" width="0.1926%" height="15" fill="rgb(241,228,46)" fg:x="6833" fg:w="83"/><text x="16.1093%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="16.0543%" y="885" width="0.0139%" height="15" fill="rgb(223,209,38)" fg:x="6917" fg:w="6"/><text x="16.3043%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="16.0682%" y="885" width="0.0139%" height="15" fill="rgb(236,164,45)" fg:x="6923" fg:w="6"/><text x="16.3182%" y="895.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (8 samples, 0.02%)</title><rect x="16.0822%" y="885" width="0.0186%" height="15" fill="rgb(231,15,5)" fg:x="6929" fg:w="8"/><text x="16.3322%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="16.1309%" y="885" width="0.0116%" height="15" fill="rgb(252,35,15)" fg:x="6950" fg:w="5"/><text x="16.3809%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (15 samples, 0.03%)</title><rect x="16.1425%" y="885" width="0.0348%" height="15" fill="rgb(248,181,18)" fg:x="6955" fg:w="15"/><text x="16.3925%" y="895.50"></text></g><g><title>&lt;crossbeam_deque::deque::Injector&lt;T&gt; as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="16.1796%" y="837" width="0.0116%" height="15" fill="rgb(233,39,42)" fg:x="6971" fg:w="5"/><text x="16.4296%" y="847.50"></text></g><g><title>rayon_core::job::JobFifo::new (6 samples, 0.01%)</title><rect x="16.1796%" y="869" width="0.0139%" height="15" fill="rgb(238,110,33)" fg:x="6971" fg:w="6"/><text x="16.4296%" y="879.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="16.1796%" y="853" width="0.0139%" height="15" fill="rgb(233,195,10)" fg:x="6971" fg:w="6"/><text x="16.4296%" y="863.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::into_result (16 samples, 0.04%)</title><rect x="16.4094%" y="725" width="0.0371%" height="15" fill="rgb(254,105,3)" fg:x="7070" fg:w="16"/><text x="16.6594%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.03%)</title><rect x="16.5905%" y="661" width="0.0302%" height="15" fill="rgb(221,225,9)" fg:x="7148" fg:w="13"/><text x="16.8405%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (12 samples, 0.03%)</title><rect x="16.5928%" y="645" width="0.0279%" height="15" fill="rgb(224,227,45)" fg:x="7149" fg:w="12"/><text x="16.8428%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (21 samples, 0.05%)</title><rect x="16.6369%" y="629" width="0.0487%" height="15" fill="rgb(229,198,43)" fg:x="7168" fg:w="21"/><text x="16.8869%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (13 samples, 0.03%)</title><rect x="16.6554%" y="613" width="0.0302%" height="15" fill="rgb(206,209,35)" fg:x="7176" fg:w="13"/><text x="16.9054%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.02%)</title><rect x="16.6647%" y="597" width="0.0209%" height="15" fill="rgb(245,195,53)" fg:x="7180" fg:w="9"/><text x="16.9147%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="16.7181%" y="613" width="0.0209%" height="15" fill="rgb(240,92,26)" fg:x="7203" fg:w="9"/><text x="16.9681%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="16.7877%" y="533" width="0.0209%" height="15" fill="rgb(207,40,23)" fg:x="7233" fg:w="9"/><text x="17.0377%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.02%)</title><rect x="16.7877%" y="549" width="0.0232%" height="15" fill="rgb(223,111,35)" fg:x="7233" fg:w="10"/><text x="17.0377%" y="559.50"></text></g><g><title>core::ptr::read (15 samples, 0.03%)</title><rect x="16.7785%" y="565" width="0.0348%" height="15" fill="rgb(229,147,28)" fg:x="7229" fg:w="15"/><text x="17.0285%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (33 samples, 0.08%)</title><rect x="16.7390%" y="613" width="0.0766%" height="15" fill="rgb(211,29,28)" fg:x="7212" fg:w="33"/><text x="16.9890%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (30 samples, 0.07%)</title><rect x="16.7460%" y="597" width="0.0696%" height="15" fill="rgb(228,72,33)" fg:x="7215" fg:w="30"/><text x="16.9960%" y="607.50"></text></g><g><title>core::mem::replace (26 samples, 0.06%)</title><rect x="16.7553%" y="581" width="0.0603%" height="15" fill="rgb(205,214,31)" fg:x="7219" fg:w="26"/><text x="17.0053%" y="591.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (12 samples, 0.03%)</title><rect x="16.8156%" y="613" width="0.0279%" height="15" fill="rgb(224,111,15)" fg:x="7245" fg:w="12"/><text x="17.0656%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (7 samples, 0.02%)</title><rect x="16.8272%" y="597" width="0.0162%" height="15" fill="rgb(253,21,26)" fg:x="7250" fg:w="7"/><text x="17.0772%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (100 samples, 0.23%)</title><rect x="16.6253%" y="661" width="0.2321%" height="15" fill="rgb(245,139,43)" fg:x="7163" fg:w="100"/><text x="16.8753%" y="671.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (100 samples, 0.23%)</title><rect x="16.6253%" y="645" width="0.2321%" height="15" fill="rgb(252,170,7)" fg:x="7163" fg:w="100"/><text x="16.8753%" y="655.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (74 samples, 0.17%)</title><rect x="16.6856%" y="629" width="0.1718%" height="15" fill="rgb(231,118,14)" fg:x="7189" fg:w="74"/><text x="16.9356%" y="639.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::starting (6 samples, 0.01%)</title><rect x="16.8434%" y="613" width="0.0139%" height="15" fill="rgb(238,83,0)" fg:x="7257" fg:w="6"/><text x="17.0934%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (24 samples, 0.06%)</title><rect x="16.8574%" y="661" width="0.0557%" height="15" fill="rgb(221,39,39)" fg:x="7263" fg:w="24"/><text x="17.1074%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.03%)</title><rect x="16.8783%" y="645" width="0.0348%" height="15" fill="rgb(222,119,46)" fg:x="7272" fg:w="15"/><text x="17.1283%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (17 samples, 0.04%)</title><rect x="16.9595%" y="629" width="0.0395%" height="15" fill="rgb(222,165,49)" fg:x="7307" fg:w="17"/><text x="17.2095%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (9 samples, 0.02%)</title><rect x="17.0802%" y="613" width="0.0209%" height="15" fill="rgb(219,113,52)" fg:x="7359" fg:w="9"/><text x="17.3302%" y="623.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (25 samples, 0.06%)</title><rect x="17.1011%" y="613" width="0.0580%" height="15" fill="rgb(214,7,15)" fg:x="7368" fg:w="25"/><text x="17.3511%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.04%)</title><rect x="17.1150%" y="597" width="0.0441%" height="15" fill="rgb(235,32,4)" fg:x="7374" fg:w="19"/><text x="17.3650%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (10 samples, 0.02%)</title><rect x="17.1359%" y="581" width="0.0232%" height="15" fill="rgb(238,90,54)" fg:x="7383" fg:w="10"/><text x="17.3859%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="17.1405%" y="565" width="0.0186%" height="15" fill="rgb(213,208,19)" fg:x="7385" fg:w="8"/><text x="17.3905%" y="575.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (142 samples, 0.33%)</title><rect x="16.9131%" y="661" width="0.3296%" height="15" fill="rgb(233,156,4)" fg:x="7287" fg:w="142"/><text x="17.1631%" y="671.50"></text></g><g><title>crossbeam_epoch::default::with_handle (135 samples, 0.31%)</title><rect x="16.9293%" y="645" width="0.3133%" height="15" fill="rgb(207,194,5)" fg:x="7294" fg:w="135"/><text x="17.1793%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (105 samples, 0.24%)</title><rect x="16.9990%" y="629" width="0.2437%" height="15" fill="rgb(206,111,30)" fg:x="7324" fg:w="105"/><text x="17.2490%" y="639.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (35 samples, 0.08%)</title><rect x="17.1614%" y="613" width="0.0812%" height="15" fill="rgb(243,70,54)" fg:x="7394" fg:w="35"/><text x="17.4114%" y="623.50"></text></g><g><title>crossbeam_epoch::default::is_pinned::_{{closure}} (25 samples, 0.06%)</title><rect x="17.1846%" y="597" width="0.0580%" height="15" fill="rgb(242,28,8)" fg:x="7404" fg:w="25"/><text x="17.4346%" y="607.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::is_pinned (17 samples, 0.04%)</title><rect x="17.2032%" y="581" width="0.0395%" height="15" fill="rgb(219,106,18)" fg:x="7412" fg:w="17"/><text x="17.4532%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (10 samples, 0.02%)</title><rect x="17.2194%" y="565" width="0.0232%" height="15" fill="rgb(244,222,10)" fg:x="7419" fg:w="10"/><text x="17.4694%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (8 samples, 0.02%)</title><rect x="17.2241%" y="549" width="0.0186%" height="15" fill="rgb(236,179,52)" fg:x="7421" fg:w="8"/><text x="17.4741%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (7 samples, 0.02%)</title><rect x="17.2775%" y="629" width="0.0162%" height="15" fill="rgb(213,23,39)" fg:x="7444" fg:w="7"/><text x="17.5275%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.02%)</title><rect x="17.3448%" y="613" width="0.0162%" height="15" fill="rgb(238,48,10)" fg:x="7473" fg:w="7"/><text x="17.5948%" y="623.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (20 samples, 0.05%)</title><rect x="17.3610%" y="613" width="0.0464%" height="15" fill="rgb(251,196,23)" fg:x="7480" fg:w="20"/><text x="17.6110%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (20 samples, 0.05%)</title><rect x="17.3610%" y="597" width="0.0464%" height="15" fill="rgb(250,152,24)" fg:x="7480" fg:w="20"/><text x="17.6110%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="17.3935%" y="581" width="0.0139%" height="15" fill="rgb(209,150,17)" fg:x="7494" fg:w="6"/><text x="17.6435%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="17.5838%" y="549" width="0.0139%" height="15" fill="rgb(234,202,34)" fg:x="7576" fg:w="6"/><text x="17.8338%" y="559.50"></text></g><g><title>core::ptr::read (16 samples, 0.04%)</title><rect x="17.6697%" y="501" width="0.0371%" height="15" fill="rgb(253,148,53)" fg:x="7613" fg:w="16"/><text x="17.9197%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="17.6860%" y="485" width="0.0209%" height="15" fill="rgb(218,129,16)" fg:x="7620" fg:w="9"/><text x="17.9360%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.09%)</title><rect x="17.6210%" y="533" width="0.0905%" height="15" fill="rgb(216,85,19)" fg:x="7592" fg:w="39"/><text x="17.8710%" y="543.50"></text></g><g><title>core::mem::replace (28 samples, 0.06%)</title><rect x="17.6465%" y="517" width="0.0650%" height="15" fill="rgb(235,228,7)" fg:x="7603" fg:w="28"/><text x="17.8965%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (50 samples, 0.12%)</title><rect x="17.5978%" y="549" width="0.1160%" height="15" fill="rgb(245,175,0)" fg:x="7582" fg:w="50"/><text x="17.8478%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (26 samples, 0.06%)</title><rect x="17.7138%" y="549" width="0.0603%" height="15" fill="rgb(208,168,36)" fg:x="7632" fg:w="26"/><text x="17.9638%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (8 samples, 0.02%)</title><rect x="17.7556%" y="533" width="0.0186%" height="15" fill="rgb(246,171,24)" fg:x="7650" fg:w="8"/><text x="18.0056%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.01%)</title><rect x="17.7742%" y="549" width="0.0116%" height="15" fill="rgb(215,142,24)" fg:x="7658" fg:w="5"/><text x="18.0242%" y="559.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (56 samples, 0.13%)</title><rect x="17.7904%" y="549" width="0.1300%" height="15" fill="rgb(250,187,7)" fg:x="7665" fg:w="56"/><text x="18.0404%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (48 samples, 0.11%)</title><rect x="17.8090%" y="533" width="0.1114%" height="15" fill="rgb(228,66,33)" fg:x="7673" fg:w="48"/><text x="18.0590%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.07%)</title><rect x="17.8484%" y="517" width="0.0720%" height="15" fill="rgb(234,215,21)" fg:x="7690" fg:w="31"/><text x="18.0984%" y="527.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (21 samples, 0.05%)</title><rect x="17.9204%" y="549" width="0.0487%" height="15" fill="rgb(222,191,20)" fg:x="7721" fg:w="21"/><text x="18.1704%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.03%)</title><rect x="17.9413%" y="533" width="0.0279%" height="15" fill="rgb(245,79,54)" fg:x="7730" fg:w="12"/><text x="18.1913%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="17.9459%" y="517" width="0.0232%" height="15" fill="rgb(240,10,37)" fg:x="7732" fg:w="10"/><text x="18.1959%" y="527.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::starting (6 samples, 0.01%)</title><rect x="17.9761%" y="549" width="0.0139%" height="15" fill="rgb(214,192,32)" fg:x="7745" fg:w="6"/><text x="18.2261%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.03%)</title><rect x="17.9993%" y="533" width="0.0325%" height="15" fill="rgb(209,36,54)" fg:x="7755" fg:w="14"/><text x="18.2493%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (11 samples, 0.03%)</title><rect x="18.0063%" y="517" width="0.0255%" height="15" fill="rgb(220,10,11)" fg:x="7758" fg:w="11"/><text x="18.2563%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (679 samples, 1.58%)</title><rect x="16.4837%" y="709" width="1.5760%" height="15" fill="rgb(221,106,17)" fg:x="7102" fg:w="679"/><text x="16.7337%" y="719.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (670 samples, 1.56%)</title><rect x="16.5046%" y="693" width="1.5551%" height="15" fill="rgb(251,142,44)" fg:x="7111" fg:w="670"/><text x="16.7546%" y="703.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (659 samples, 1.53%)</title><rect x="16.5301%" y="677" width="1.5295%" height="15" fill="rgb(238,13,15)" fg:x="7122" fg:w="659"/><text x="16.7801%" y="687.50"></text></g><g><title>crossbeam_epoch::default::pin (352 samples, 0.82%)</title><rect x="17.2427%" y="661" width="0.8170%" height="15" fill="rgb(208,107,27)" fg:x="7429" fg:w="352"/><text x="17.4927%" y="671.50"></text></g><g><title>crossbeam_epoch::default::with_handle (349 samples, 0.81%)</title><rect x="17.2496%" y="645" width="0.8100%" height="15" fill="rgb(205,136,37)" fg:x="7432" fg:w="349"/><text x="17.4996%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (330 samples, 0.77%)</title><rect x="17.2937%" y="629" width="0.7659%" height="15" fill="rgb(250,205,27)" fg:x="7451" fg:w="330"/><text x="17.5437%" y="639.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (277 samples, 0.64%)</title><rect x="17.4167%" y="613" width="0.6429%" height="15" fill="rgb(210,80,43)" fg:x="7504" fg:w="277"/><text x="17.6667%" y="623.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (274 samples, 0.64%)</title><rect x="17.4237%" y="597" width="0.6360%" height="15" fill="rgb(247,160,36)" fg:x="7507" fg:w="274"/><text x="17.6737%" y="607.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (270 samples, 0.63%)</title><rect x="17.4330%" y="581" width="0.6267%" height="15" fill="rgb(234,13,49)" fg:x="7511" fg:w="270"/><text x="17.6830%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (268 samples, 0.62%)</title><rect x="17.4376%" y="565" width="0.6220%" height="15" fill="rgb(234,122,0)" fg:x="7513" fg:w="268"/><text x="17.6876%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (30 samples, 0.07%)</title><rect x="17.9900%" y="549" width="0.0696%" height="15" fill="rgb(207,146,38)" fg:x="7751" fg:w="30"/><text x="18.2400%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Local::collector (12 samples, 0.03%)</title><rect x="18.0318%" y="533" width="0.0279%" height="15" fill="rgb(207,177,25)" fg:x="7769" fg:w="12"/><text x="18.2818%" y="543.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="18.0388%" y="517" width="0.0209%" height="15" fill="rgb(211,178,42)" fg:x="7772" fg:w="9"/><text x="18.2888%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (703 samples, 1.63%)</title><rect x="16.4466%" y="725" width="1.6317%" height="15" fill="rgb(230,69,54)" fg:x="7086" fg:w="703"/><text x="16.6966%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (7 samples, 0.02%)</title><rect x="18.0620%" y="709" width="0.0162%" height="15" fill="rgb(214,135,41)" fg:x="7782" fg:w="7"/><text x="18.3120%" y="719.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (15 samples, 0.03%)</title><rect x="18.1618%" y="709" width="0.0348%" height="15" fill="rgb(237,67,25)" fg:x="7825" fg:w="15"/><text x="18.4118%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (9 samples, 0.02%)</title><rect x="18.1757%" y="693" width="0.0209%" height="15" fill="rgb(222,189,50)" fg:x="7831" fg:w="9"/><text x="18.4257%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (10 samples, 0.02%)</title><rect x="18.2036%" y="709" width="0.0232%" height="15" fill="rgb(245,148,34)" fg:x="7843" fg:w="10"/><text x="18.4536%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.03%)</title><rect x="18.3010%" y="661" width="0.0279%" height="15" fill="rgb(222,29,6)" fg:x="7885" fg:w="12"/><text x="18.5510%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.06%)</title><rect x="18.2825%" y="677" width="0.0650%" height="15" fill="rgb(221,189,43)" fg:x="7877" fg:w="28"/><text x="18.5325%" y="687.50"></text></g><g><title>memcpy@plt (8 samples, 0.02%)</title><rect x="18.3289%" y="661" width="0.0186%" height="15" fill="rgb(207,36,27)" fg:x="7897" fg:w="8"/><text x="18.5789%" y="671.50"></text></g><g><title>core::ptr::read (39 samples, 0.09%)</title><rect x="18.2593%" y="693" width="0.0905%" height="15" fill="rgb(217,90,24)" fg:x="7867" fg:w="39"/><text x="18.5093%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (119 samples, 0.28%)</title><rect x="18.0782%" y="725" width="0.2762%" height="15" fill="rgb(224,66,35)" fg:x="7789" fg:w="119"/><text x="18.3282%" y="735.50"></text></g><g><title>core::mem::replace (55 samples, 0.13%)</title><rect x="18.2268%" y="709" width="0.1277%" height="15" fill="rgb(221,13,50)" fg:x="7853" fg:w="55"/><text x="18.4768%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="18.5772%" y="645" width="0.0255%" height="15" fill="rgb(236,68,49)" fg:x="8004" fg:w="11"/><text x="18.8272%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (10 samples, 0.02%)</title><rect x="18.5796%" y="629" width="0.0232%" height="15" fill="rgb(229,146,28)" fg:x="8005" fg:w="10"/><text x="18.8296%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (18 samples, 0.04%)</title><rect x="18.6260%" y="613" width="0.0418%" height="15" fill="rgb(225,31,38)" fg:x="8025" fg:w="18"/><text x="18.8760%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (13 samples, 0.03%)</title><rect x="18.6376%" y="597" width="0.0302%" height="15" fill="rgb(250,208,3)" fg:x="8030" fg:w="13"/><text x="18.8876%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (8 samples, 0.02%)</title><rect x="18.6492%" y="581" width="0.0186%" height="15" fill="rgb(246,54,23)" fg:x="8035" fg:w="8"/><text x="18.8992%" y="591.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (7 samples, 0.02%)</title><rect x="18.7188%" y="565" width="0.0162%" height="15" fill="rgb(243,76,11)" fg:x="8065" fg:w="7"/><text x="18.9688%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="18.7792%" y="517" width="0.0116%" height="15" fill="rgb(245,21,50)" fg:x="8091" fg:w="5"/><text x="19.0292%" y="527.50"></text></g><g><title>core::ptr::read (16 samples, 0.04%)</title><rect x="18.7559%" y="549" width="0.0371%" height="15" fill="rgb(228,9,43)" fg:x="8081" fg:w="16"/><text x="19.0059%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="18.7722%" y="533" width="0.0209%" height="15" fill="rgb(208,100,47)" fg:x="8088" fg:w="9"/><text x="19.0222%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (46 samples, 0.11%)</title><rect x="18.7002%" y="597" width="0.1068%" height="15" fill="rgb(232,26,8)" fg:x="8057" fg:w="46"/><text x="18.9502%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (42 samples, 0.10%)</title><rect x="18.7095%" y="581" width="0.0975%" height="15" fill="rgb(216,166,38)" fg:x="8061" fg:w="42"/><text x="18.9595%" y="591.50"></text></g><g><title>core::mem::replace (31 samples, 0.07%)</title><rect x="18.7351%" y="565" width="0.0720%" height="15" fill="rgb(251,202,51)" fg:x="8072" fg:w="31"/><text x="18.9851%" y="575.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="18.7931%" y="549" width="0.0139%" height="15" fill="rgb(254,216,34)" fg:x="8097" fg:w="6"/><text x="19.0431%" y="559.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (15 samples, 0.03%)</title><rect x="18.8070%" y="597" width="0.0348%" height="15" fill="rgb(251,32,27)" fg:x="8103" fg:w="15"/><text x="19.0570%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.03%)</title><rect x="18.8140%" y="581" width="0.0279%" height="15" fill="rgb(208,127,28)" fg:x="8106" fg:w="12"/><text x="19.0640%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_store (8 samples, 0.02%)</title><rect x="18.8233%" y="565" width="0.0186%" height="15" fill="rgb(224,137,22)" fg:x="8110" fg:w="8"/><text x="19.0733%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (104 samples, 0.24%)</title><rect x="18.6120%" y="645" width="0.2414%" height="15" fill="rgb(254,70,32)" fg:x="8019" fg:w="104"/><text x="18.8620%" y="655.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (104 samples, 0.24%)</title><rect x="18.6120%" y="629" width="0.2414%" height="15" fill="rgb(229,75,37)" fg:x="8019" fg:w="104"/><text x="18.8620%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (80 samples, 0.19%)</title><rect x="18.6677%" y="613" width="0.1857%" height="15" fill="rgb(252,64,23)" fg:x="8043" fg:w="80"/><text x="18.9177%" y="623.50"></text></g><g><title>crossbeam_epoch::epoch::Epoch::starting (5 samples, 0.01%)</title><rect x="18.8418%" y="597" width="0.0116%" height="15" fill="rgb(232,162,48)" fg:x="8118" fg:w="5"/><text x="19.0918%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (29 samples, 0.07%)</title><rect x="18.8534%" y="645" width="0.0673%" height="15" fill="rgb(246,160,12)" fg:x="8123" fg:w="29"/><text x="19.1034%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.05%)</title><rect x="18.8743%" y="629" width="0.0464%" height="15" fill="rgb(247,166,0)" fg:x="8132" fg:w="20"/><text x="19.1243%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (24 samples, 0.06%)</title><rect x="18.9532%" y="613" width="0.0557%" height="15" fill="rgb(249,219,21)" fg:x="8166" fg:w="24"/><text x="19.2032%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (10 samples, 0.02%)</title><rect x="19.0971%" y="597" width="0.0232%" height="15" fill="rgb(205,209,3)" fg:x="8228" fg:w="10"/><text x="19.3471%" y="607.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (31 samples, 0.07%)</title><rect x="19.1203%" y="597" width="0.0720%" height="15" fill="rgb(243,44,1)" fg:x="8238" fg:w="31"/><text x="19.3703%" y="607.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (25 samples, 0.06%)</title><rect x="19.1343%" y="581" width="0.0580%" height="15" fill="rgb(206,159,16)" fg:x="8244" fg:w="25"/><text x="19.3843%" y="591.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="19.1714%" y="565" width="0.0209%" height="15" fill="rgb(244,77,30)" fg:x="8260" fg:w="9"/><text x="19.4214%" y="575.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (147 samples, 0.34%)</title><rect x="18.9207%" y="645" width="0.3412%" height="15" fill="rgb(218,69,12)" fg:x="8152" fg:w="147"/><text x="19.1707%" y="655.50"></text></g><g><title>crossbeam_epoch::default::with_handle (145 samples, 0.34%)</title><rect x="18.9254%" y="629" width="0.3365%" height="15" fill="rgb(212,87,7)" fg:x="8154" fg:w="145"/><text x="19.1754%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (109 samples, 0.25%)</title><rect x="19.0089%" y="613" width="0.2530%" height="15" fill="rgb(245,114,25)" fg:x="8190" fg:w="109"/><text x="19.2589%" y="623.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (29 samples, 0.07%)</title><rect x="19.1946%" y="597" width="0.0673%" height="15" fill="rgb(210,61,42)" fg:x="8270" fg:w="29"/><text x="19.4446%" y="607.50"></text></g><g><title>crossbeam_epoch::default::is_pinned::_{{closure}} (18 samples, 0.04%)</title><rect x="19.2201%" y="581" width="0.0418%" height="15" fill="rgb(211,52,33)" fg:x="8281" fg:w="18"/><text x="19.4701%" y="591.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::is_pinned (16 samples, 0.04%)</title><rect x="19.2248%" y="565" width="0.0371%" height="15" fill="rgb(234,58,33)" fg:x="8283" fg:w="16"/><text x="19.4748%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (10 samples, 0.02%)</title><rect x="19.2387%" y="549" width="0.0232%" height="15" fill="rgb(220,115,36)" fg:x="8289" fg:w="10"/><text x="19.4887%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (18 samples, 0.04%)</title><rect x="19.2805%" y="613" width="0.0418%" height="15" fill="rgb(243,153,54)" fg:x="8307" fg:w="18"/><text x="19.5305%" y="623.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (23 samples, 0.05%)</title><rect x="19.3826%" y="597" width="0.0534%" height="15" fill="rgb(251,47,18)" fg:x="8351" fg:w="23"/><text x="19.6326%" y="607.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (22 samples, 0.05%)</title><rect x="19.3849%" y="581" width="0.0511%" height="15" fill="rgb(242,102,42)" fg:x="8352" fg:w="22"/><text x="19.6349%" y="591.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.03%)</title><rect x="19.4012%" y="565" width="0.0348%" height="15" fill="rgb(234,31,38)" fg:x="8359" fg:w="15"/><text x="19.6512%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (10 samples, 0.02%)</title><rect x="19.4128%" y="549" width="0.0232%" height="15" fill="rgb(221,117,51)" fg:x="8364" fg:w="10"/><text x="19.6628%" y="559.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (5 samples, 0.01%)</title><rect x="19.4360%" y="581" width="0.0116%" height="15" fill="rgb(212,20,18)" fg:x="8374" fg:w="5"/><text x="19.6860%" y="591.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__init (7 samples, 0.02%)</title><rect x="19.4360%" y="597" width="0.0162%" height="15" fill="rgb(245,133,36)" fg:x="8374" fg:w="7"/><text x="19.6860%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="19.6565%" y="533" width="0.0209%" height="15" fill="rgb(212,6,19)" fg:x="8469" fg:w="9"/><text x="19.9065%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="19.8027%" y="453" width="0.0348%" height="15" fill="rgb(218,1,36)" fg:x="8532" fg:w="15"/><text x="20.0527%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.05%)</title><rect x="19.7981%" y="469" width="0.0487%" height="15" fill="rgb(246,84,54)" fg:x="8530" fg:w="21"/><text x="20.0481%" y="479.50"></text></g><g><title>core::ptr::read (33 samples, 0.08%)</title><rect x="19.7725%" y="485" width="0.0766%" height="15" fill="rgb(242,110,6)" fg:x="8519" fg:w="33"/><text x="20.0225%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (80 samples, 0.19%)</title><rect x="19.6774%" y="533" width="0.1857%" height="15" fill="rgb(214,47,5)" fg:x="8478" fg:w="80"/><text x="19.9274%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (72 samples, 0.17%)</title><rect x="19.6959%" y="517" width="0.1671%" height="15" fill="rgb(218,159,25)" fg:x="8486" fg:w="72"/><text x="19.9459%" y="527.50"></text></g><g><title>core::mem::replace (57 samples, 0.13%)</title><rect x="19.7308%" y="501" width="0.1323%" height="15" fill="rgb(215,211,28)" fg:x="8501" fg:w="57"/><text x="19.9808%" y="511.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="19.8491%" y="485" width="0.0139%" height="15" fill="rgb(238,59,32)" fg:x="8552" fg:w="6"/><text x="20.0991%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (23 samples, 0.05%)</title><rect x="19.8631%" y="533" width="0.0534%" height="15" fill="rgb(226,82,3)" fg:x="8558" fg:w="23"/><text x="20.1131%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (16 samples, 0.04%)</title><rect x="19.8793%" y="517" width="0.0371%" height="15" fill="rgb(240,164,32)" fg:x="8565" fg:w="16"/><text x="20.1293%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.01%)</title><rect x="19.9164%" y="533" width="0.0116%" height="15" fill="rgb(232,46,7)" fg:x="8581" fg:w="5"/><text x="20.1664%" y="543.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (67 samples, 0.16%)</title><rect x="19.9397%" y="533" width="0.1555%" height="15" fill="rgb(229,129,53)" fg:x="8591" fg:w="67"/><text x="20.1897%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (51 samples, 0.12%)</title><rect x="19.9768%" y="517" width="0.1184%" height="15" fill="rgb(234,188,29)" fg:x="8607" fg:w="51"/><text x="20.2268%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.07%)</title><rect x="20.0209%" y="501" width="0.0743%" height="15" fill="rgb(246,141,4)" fg:x="8626" fg:w="32"/><text x="20.2709%" y="511.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (26 samples, 0.06%)</title><rect x="20.0952%" y="533" width="0.0603%" height="15" fill="rgb(229,23,39)" fg:x="8658" fg:w="26"/><text x="20.3452%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.05%)</title><rect x="20.1091%" y="517" width="0.0464%" height="15" fill="rgb(206,12,3)" fg:x="8664" fg:w="20"/><text x="20.3591%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.03%)</title><rect x="20.1300%" y="501" width="0.0255%" height="15" fill="rgb(252,226,20)" fg:x="8673" fg:w="11"/><text x="20.3800%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="20.1810%" y="517" width="0.0209%" height="15" fill="rgb(216,123,35)" fg:x="8695" fg:w="9"/><text x="20.4310%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (5 samples, 0.01%)</title><rect x="20.1903%" y="501" width="0.0116%" height="15" fill="rgb(212,68,40)" fg:x="8699" fg:w="5"/><text x="20.4403%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (779 samples, 1.81%)</title><rect x="18.4217%" y="693" width="1.8081%" height="15" fill="rgb(254,125,32)" fg:x="7937" fg:w="779"/><text x="18.6717%" y="703.50">c..</text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (769 samples, 1.78%)</title><rect x="18.4449%" y="677" width="1.7848%" height="15" fill="rgb(253,97,22)" fg:x="7947" fg:w="769"/><text x="18.6949%" y="687.50">r..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (753 samples, 1.75%)</title><rect x="18.4821%" y="661" width="1.7477%" height="15" fill="rgb(241,101,14)" fg:x="7963" fg:w="753"/><text x="18.7321%" y="671.50"></text></g><g><title>crossbeam_epoch::default::pin (417 samples, 0.97%)</title><rect x="19.2619%" y="645" width="0.9679%" height="15" fill="rgb(238,103,29)" fg:x="8299" fg:w="417"/><text x="19.5119%" y="655.50"></text></g><g><title>crossbeam_epoch::default::with_handle (416 samples, 0.97%)</title><rect x="19.2642%" y="629" width="0.9655%" height="15" fill="rgb(233,195,47)" fg:x="8300" fg:w="416"/><text x="19.5142%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (391 samples, 0.91%)</title><rect x="19.3223%" y="613" width="0.9075%" height="15" fill="rgb(246,218,30)" fg:x="8325" fg:w="391"/><text x="19.5723%" y="623.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (335 samples, 0.78%)</title><rect x="19.4522%" y="597" width="0.7775%" height="15" fill="rgb(219,145,47)" fg:x="8381" fg:w="335"/><text x="19.7022%" y="607.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (330 samples, 0.77%)</title><rect x="19.4639%" y="581" width="0.7659%" height="15" fill="rgb(243,12,26)" fg:x="8386" fg:w="330"/><text x="19.7139%" y="591.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (322 samples, 0.75%)</title><rect x="19.4824%" y="565" width="0.7474%" height="15" fill="rgb(214,87,16)" fg:x="8394" fg:w="322"/><text x="19.7324%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (320 samples, 0.74%)</title><rect x="19.4871%" y="549" width="0.7427%" height="15" fill="rgb(208,99,42)" fg:x="8396" fg:w="320"/><text x="19.7371%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (25 samples, 0.06%)</title><rect x="20.1718%" y="533" width="0.0580%" height="15" fill="rgb(253,99,2)" fg:x="8691" fg:w="25"/><text x="20.4218%" y="543.50"></text></g><g><title>crossbeam_epoch::internal::Local::collector (12 samples, 0.03%)</title><rect x="20.2019%" y="517" width="0.0279%" height="15" fill="rgb(220,168,23)" fg:x="8704" fg:w="12"/><text x="20.4519%" y="527.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="20.2112%" y="501" width="0.0186%" height="15" fill="rgb(242,38,24)" fg:x="8708" fg:w="8"/><text x="20.4612%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,716 samples, 3.98%)</title><rect x="16.2493%" y="757" width="3.9828%" height="15" fill="rgb(225,182,9)" fg:x="7001" fg:w="1716"/><text x="16.4993%" y="767.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,712 samples, 3.97%)</title><rect x="16.2586%" y="741" width="3.9735%" height="15" fill="rgb(243,178,37)" fg:x="7005" fg:w="1712"/><text x="16.5086%" y="751.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (809 samples, 1.88%)</title><rect x="18.3544%" y="725" width="1.8777%" height="15" fill="rgb(232,139,19)" fg:x="7908" fg:w="809"/><text x="18.6044%" y="735.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (804 samples, 1.87%)</title><rect x="18.3660%" y="709" width="1.8661%" height="15" fill="rgb(225,201,24)" fg:x="7913" fg:w="804"/><text x="18.6160%" y="719.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,717 samples, 3.99%)</title><rect x="16.2493%" y="773" width="3.9851%" height="15" fill="rgb(221,47,46)" fg:x="7001" fg:w="1717"/><text x="16.4993%" y="783.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,718 samples, 3.99%)</title><rect x="16.2493%" y="789" width="3.9875%" height="15" fill="rgb(249,23,13)" fg:x="7001" fg:w="1718"/><text x="16.4993%" y="799.50">core..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,738 samples, 4.03%)</title><rect x="16.2098%" y="837" width="4.0339%" height="15" fill="rgb(219,9,5)" fg:x="6984" fg:w="1738"/><text x="16.4598%" y="847.50">core..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::_{{closure}} (1,735 samples, 4.03%)</title><rect x="16.2168%" y="821" width="4.0269%" height="15" fill="rgb(254,171,16)" fg:x="6987" fg:w="1735"/><text x="16.4668%" y="831.50">rayo..</text></g><g><title>rayon_core::registry::WorkerThread::steal (1,731 samples, 4.02%)</title><rect x="16.2261%" y="805" width="4.0176%" height="15" fill="rgb(230,171,20)" fg:x="6991" fg:w="1731"/><text x="16.4761%" y="815.50">rayo..</text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.02%)</title><rect x="20.2530%" y="837" width="0.0186%" height="15" fill="rgb(210,71,41)" fg:x="8726" fg:w="8"/><text x="20.5030%" y="847.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.02%)</title><rect x="20.2530%" y="821" width="0.0186%" height="15" fill="rgb(206,173,20)" fg:x="8726" fg:w="8"/><text x="20.5030%" y="831.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.02%)</title><rect x="20.2530%" y="805" width="0.0186%" height="15" fill="rgb(233,88,34)" fg:x="8726" fg:w="8"/><text x="20.5030%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.01%)</title><rect x="20.2576%" y="789" width="0.0139%" height="15" fill="rgb(223,209,46)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="799.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="20.2576%" y="773" width="0.0139%" height="15" fill="rgb(250,43,18)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="783.50"></text></g><g><title>std::panicking::try (6 samples, 0.01%)</title><rect x="20.2576%" y="757" width="0.0139%" height="15" fill="rgb(208,13,10)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="767.50"></text></g><g><title>__rust_try (6 samples, 0.01%)</title><rect x="20.2576%" y="741" width="0.0139%" height="15" fill="rgb(212,200,36)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="751.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="20.2576%" y="725" width="0.0139%" height="15" fill="rgb(225,90,30)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="735.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.01%)</title><rect x="20.2576%" y="709" width="0.0139%" height="15" fill="rgb(236,182,39)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="719.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (6 samples, 0.01%)</title><rect x="20.2576%" y="693" width="0.0139%" height="15" fill="rgb(212,144,35)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="703.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="20.2576%" y="677" width="0.0139%" height="15" fill="rgb(228,63,44)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="687.50"></text></g><g><title>rayon_core::scope::scope::_{{closure}} (6 samples, 0.01%)</title><rect x="20.2576%" y="661" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="671.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (6 samples, 0.01%)</title><rect x="20.2576%" y="645" width="0.0139%" height="15" fill="rgb(238,117,24)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="655.50"></text></g><g><title>rayon_core::scope::ScopeBase::steal_till_jobs_complete (6 samples, 0.01%)</title><rect x="20.2576%" y="629" width="0.0139%" height="15" fill="rgb(242,26,26)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.01%)</title><rect x="20.2576%" y="613" width="0.0139%" height="15" fill="rgb(221,92,48)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.01%)</title><rect x="20.2576%" y="597" width="0.0139%" height="15" fill="rgb(209,209,32)" fg:x="8728" fg:w="6"/><text x="20.5076%" y="607.50"></text></g><g><title>__condvar_dec_grefs (5 samples, 0.01%)</title><rect x="20.4085%" y="741" width="0.0116%" height="15" fill="rgb(221,70,22)" fg:x="8793" fg:w="5"/><text x="20.6585%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (59 samples, 0.14%)</title><rect x="20.2948%" y="789" width="0.1369%" height="15" fill="rgb(248,145,5)" fg:x="8744" fg:w="59"/><text x="20.5448%" y="799.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (59 samples, 0.14%)</title><rect x="20.2948%" y="773" width="0.1369%" height="15" fill="rgb(226,116,26)" fg:x="8744" fg:w="59"/><text x="20.5448%" y="783.50"></text></g><g><title>__pthread_cond_wait (59 samples, 0.14%)</title><rect x="20.2948%" y="757" width="0.1369%" height="15" fill="rgb(244,5,17)" fg:x="8744" fg:w="59"/><text x="20.5448%" y="767.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (64 samples, 0.15%)</title><rect x="20.2855%" y="821" width="0.1485%" height="15" fill="rgb(252,159,33)" fg:x="8740" fg:w="64"/><text x="20.5355%" y="831.50"></text></g><g><title>std::sync::condvar::Condvar::wait (60 samples, 0.14%)</title><rect x="20.2948%" y="805" width="0.1393%" height="15" fill="rgb(206,71,0)" fg:x="8744" fg:w="60"/><text x="20.5448%" y="815.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (67 samples, 0.16%)</title><rect x="20.2808%" y="837" width="0.1555%" height="15" fill="rgb(233,118,54)" fg:x="8738" fg:w="67"/><text x="20.5308%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1,827 samples, 4.24%)</title><rect x="16.1982%" y="869" width="4.2405%" height="15" fill="rgb(234,83,48)" fg:x="6979" fg:w="1827"/><text x="16.4482%" y="879.50">rayon..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,827 samples, 4.24%)</title><rect x="16.1982%" y="853" width="4.2405%" height="15" fill="rgb(228,3,54)" fg:x="6979" fg:w="1827"/><text x="16.4482%" y="863.50">rayon..</text></g><g><title>rayon_core::registry::main_loop (1,838 samples, 4.27%)</title><rect x="16.1773%" y="885" width="4.2660%" height="15" fill="rgb(226,155,13)" fg:x="6970" fg:w="1838"/><text x="16.4273%" y="895.50">rayon..</text></g><g><title>__rust_try (1,986 samples, 4.61%)</title><rect x="15.8361%" y="997" width="4.6095%" height="15" fill="rgb(241,28,37)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="1007.50">__rus..</text></g><g><title>std::panicking::try::do_call (1,986 samples, 4.61%)</title><rect x="15.8361%" y="981" width="4.6095%" height="15" fill="rgb(233,93,10)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="991.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,986 samples, 4.61%)</title><rect x="15.8361%" y="965" width="4.6095%" height="15" fill="rgb(225,113,19)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="975.50">&lt;std:..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (1,986 samples, 4.61%)</title><rect x="15.8361%" y="949" width="4.6095%" height="15" fill="rgb(241,2,18)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="959.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,986 samples, 4.61%)</title><rect x="15.8361%" y="933" width="4.6095%" height="15" fill="rgb(228,207,21)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="943.50">std::..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (1,986 samples, 4.61%)</title><rect x="15.8361%" y="917" width="4.6095%" height="15" fill="rgb(213,211,35)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="927.50">&lt;rayo..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (1,986 samples, 4.61%)</title><rect x="15.8361%" y="901" width="4.6095%" height="15" fill="rgb(209,83,10)" fg:x="6823" fg:w="1986"/><text x="16.0861%" y="911.50">rayon..</text></g><g><title>&lt;diem_types::access_path::AccessPath as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="20.4688%" y="581" width="0.0162%" height="15" fill="rgb(209,164,1)" fg:x="8819" fg:w="7"/><text x="20.7188%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="20.4688%" y="565" width="0.0162%" height="15" fill="rgb(213,184,43)" fg:x="8819" fg:w="7"/><text x="20.7188%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="20.4712%" y="549" width="0.0139%" height="15" fill="rgb(231,61,34)" fg:x="8820" fg:w="6"/><text x="20.7212%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="20.4712%" y="533" width="0.0139%" height="15" fill="rgb(235,75,3)" fg:x="8820" fg:w="6"/><text x="20.7212%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="20.4712%" y="517" width="0.0139%" height="15" fill="rgb(220,106,47)" fg:x="8820" fg:w="6"/><text x="20.7212%" y="527.50"></text></g><g><title>core::clone::Clone::clone (12 samples, 0.03%)</title><rect x="20.4665%" y="597" width="0.0279%" height="15" fill="rgb(210,196,33)" fg:x="8818" fg:w="12"/><text x="20.7165%" y="607.50"></text></g><g><title>&lt;diem_types::transaction::change_set::ChangeSet as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="20.4665%" y="709" width="0.0325%" height="15" fill="rgb(229,154,42)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="719.50"></text></g><g><title>&lt;diem_types::write_set::WriteSet as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="20.4665%" y="693" width="0.0325%" height="15" fill="rgb(228,114,26)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="703.50"></text></g><g><title>&lt;diem_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="20.4665%" y="677" width="0.0325%" height="15" fill="rgb(208,144,1)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="20.4665%" y="661" width="0.0325%" height="15" fill="rgb(239,112,37)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.03%)</title><rect x="20.4665%" y="645" width="0.0325%" height="15" fill="rgb(210,96,50)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.03%)</title><rect x="20.4665%" y="629" width="0.0325%" height="15" fill="rgb(222,178,2)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.03%)</title><rect x="20.4665%" y="613" width="0.0325%" height="15" fill="rgb(226,74,18)" fg:x="8818" fg:w="14"/><text x="20.7165%" y="623.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="20.5129%" y="661" width="0.0116%" height="15" fill="rgb(225,67,54)" fg:x="8838" fg:w="5"/><text x="20.7629%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="20.5129%" y="645" width="0.0116%" height="15" fill="rgb(251,92,32)" fg:x="8838" fg:w="5"/><text x="20.7629%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="20.5129%" y="629" width="0.0116%" height="15" fill="rgb(228,149,22)" fg:x="8838" fg:w="5"/><text x="20.7629%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="20.5129%" y="613" width="0.0116%" height="15" fill="rgb(243,54,13)" fg:x="8838" fg:w="5"/><text x="20.7629%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="20.5129%" y="597" width="0.0116%" height="15" fill="rgb(243,180,28)" fg:x="8838" fg:w="5"/><text x="20.7629%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="20.5245%" y="581" width="0.0116%" height="15" fill="rgb(208,167,24)" fg:x="8843" fg:w="5"/><text x="20.7745%" y="591.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="20.5245%" y="597" width="0.0232%" height="15" fill="rgb(245,73,45)" fg:x="8843" fg:w="10"/><text x="20.7745%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="20.5361%" y="581" width="0.0116%" height="15" fill="rgb(237,203,48)" fg:x="8848" fg:w="5"/><text x="20.7861%" y="591.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (5 samples, 0.01%)</title><rect x="20.5361%" y="565" width="0.0116%" height="15" fill="rgb(211,197,16)" fg:x="8848" fg:w="5"/><text x="20.7861%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.01%)</title><rect x="20.5361%" y="549" width="0.0116%" height="15" fill="rgb(243,99,51)" fg:x="8848" fg:w="5"/><text x="20.7861%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.03%)</title><rect x="20.5245%" y="613" width="0.0302%" height="15" fill="rgb(215,123,29)" fg:x="8843" fg:w="13"/><text x="20.7745%" y="623.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis_file (48 samples, 0.11%)</title><rect x="20.4665%" y="725" width="0.1114%" height="15" fill="rgb(239,186,37)" fg:x="8818" fg:w="48"/><text x="20.7165%" y="735.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis (32 samples, 0.07%)</title><rect x="20.5037%" y="709" width="0.0743%" height="15" fill="rgb(252,136,39)" fg:x="8834" fg:w="32"/><text x="20.7537%" y="719.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::apply_write_set (32 samples, 0.07%)</title><rect x="20.5037%" y="693" width="0.0743%" height="15" fill="rgb(223,213,32)" fg:x="8834" fg:w="32"/><text x="20.7537%" y="703.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::add_write_set (32 samples, 0.07%)</title><rect x="20.5037%" y="677" width="0.0743%" height="15" fill="rgb(233,115,5)" fg:x="8834" fg:w="32"/><text x="20.7537%" y="687.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::set (23 samples, 0.05%)</title><rect x="20.5245%" y="661" width="0.0534%" height="15" fill="rgb(207,226,44)" fg:x="8843" fg:w="23"/><text x="20.7745%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.05%)</title><rect x="20.5245%" y="645" width="0.0534%" height="15" fill="rgb(208,126,0)" fg:x="8843" fg:w="23"/><text x="20.7745%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="20.5245%" y="629" width="0.0534%" height="15" fill="rgb(244,66,21)" fg:x="8843" fg:w="23"/><text x="20.7745%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.01%)</title><rect x="20.5640%" y="613" width="0.0139%" height="15" fill="rgb(222,97,12)" fg:x="8860" fg:w="6"/><text x="20.8140%" y="623.50"></text></g><g><title>std::panic::catch_unwind (2,045 samples, 4.75%)</title><rect x="15.8361%" y="1029" width="4.7464%" height="15" fill="rgb(219,213,19)" fg:x="6823" fg:w="2045"/><text x="16.0861%" y="1039.50">std::p..</text></g><g><title>std::panicking::try (2,045 samples, 4.75%)</title><rect x="15.8361%" y="1013" width="4.7464%" height="15" fill="rgb(252,169,30)" fg:x="6823" fg:w="2045"/><text x="16.0861%" y="1023.50">std::p..</text></g><g><title>std::panicking::try::do_call (59 samples, 0.14%)</title><rect x="20.4456%" y="997" width="0.1369%" height="15" fill="rgb(206,32,51)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59 samples, 0.14%)</title><rect x="20.4456%" y="981" width="0.1369%" height="15" fill="rgb(250,172,42)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (59 samples, 0.14%)</title><rect x="20.4456%" y="965" width="0.1369%" height="15" fill="rgb(209,34,43)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59 samples, 0.14%)</title><rect x="20.4456%" y="949" width="0.1369%" height="15" fill="rgb(223,11,35)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="959.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (59 samples, 0.14%)</title><rect x="20.4456%" y="933" width="0.1369%" height="15" fill="rgb(251,219,26)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="943.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (59 samples, 0.14%)</title><rect x="20.4456%" y="917" width="0.1369%" height="15" fill="rgb(231,119,3)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="927.50"></text></g><g><title>test::run_test_in_process (59 samples, 0.14%)</title><rect x="20.4456%" y="901" width="0.1369%" height="15" fill="rgb(216,97,11)" fg:x="8809" fg:w="59"/><text x="20.6956%" y="911.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.13%)</title><rect x="20.4480%" y="885" width="0.1346%" height="15" fill="rgb(223,59,9)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="895.50"></text></g><g><title>std::panicking::try (58 samples, 0.13%)</title><rect x="20.4480%" y="869" width="0.1346%" height="15" fill="rgb(233,93,31)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="879.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.13%)</title><rect x="20.4480%" y="853" width="0.1346%" height="15" fill="rgb(239,81,33)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="863.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (58 samples, 0.13%)</title><rect x="20.4480%" y="837" width="0.1346%" height="15" fill="rgb(213,120,34)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (58 samples, 0.13%)</title><rect x="20.4480%" y="821" width="0.1346%" height="15" fill="rgb(243,49,53)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="831.50"></text></g><g><title>test::__rust_begin_short_backtrace (58 samples, 0.13%)</title><rect x="20.4480%" y="805" width="0.1346%" height="15" fill="rgb(247,216,33)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (58 samples, 0.13%)</title><rect x="20.4480%" y="789" width="0.1346%" height="15" fill="rgb(226,26,14)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (58 samples, 0.13%)</title><rect x="20.4480%" y="773" width="0.1346%" height="15" fill="rgb(215,49,53)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="783.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (58 samples, 0.13%)</title><rect x="20.4480%" y="757" width="0.1346%" height="15" fill="rgb(245,162,40)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="767.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (58 samples, 0.13%)</title><rect x="20.4480%" y="741" width="0.1346%" height="15" fill="rgb(229,68,17)" fg:x="8810" fg:w="58"/><text x="20.6980%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,084 samples, 4.84%)</title><rect x="15.7503%" y="1093" width="4.8370%" height="15" fill="rgb(213,182,10)" fg:x="6786" fg:w="2084"/><text x="16.0003%" y="1103.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,083 samples, 4.83%)</title><rect x="15.7526%" y="1077" width="4.8346%" height="15" fill="rgb(245,125,30)" fg:x="6787" fg:w="2083"/><text x="16.0026%" y="1087.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,083 samples, 4.83%)</title><rect x="15.7526%" y="1061" width="4.8346%" height="15" fill="rgb(232,202,2)" fg:x="6787" fg:w="2083"/><text x="16.0026%" y="1071.50">core::..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (2,083 samples, 4.83%)</title><rect x="15.7526%" y="1045" width="4.8346%" height="15" fill="rgb(237,140,51)" fg:x="6787" fg:w="2083"/><text x="16.0026%" y="1055.50">std::t..</text></g><g><title>__GI___mmap64 (6 samples, 0.01%)</title><rect x="20.5942%" y="1029" width="0.0139%" height="15" fill="rgb(236,157,25)" fg:x="8873" fg:w="6"/><text x="20.8442%" y="1039.50"></text></g><g><title>__GI___clone (2,321 samples, 5.39%)</title><rect x="15.2327%" y="1141" width="5.3870%" height="15" fill="rgb(219,209,0)" fg:x="6563" fg:w="2321"/><text x="15.4827%" y="1151.50">__GI___..</text></g><g><title>start_thread (2,102 samples, 4.88%)</title><rect x="15.7410%" y="1125" width="4.8787%" height="15" fill="rgb(240,116,54)" fg:x="6782" fg:w="2102"/><text x="15.9910%" y="1135.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,098 samples, 4.87%)</title><rect x="15.7503%" y="1109" width="4.8694%" height="15" fill="rgb(216,10,36)" fg:x="6786" fg:w="2098"/><text x="16.0003%" y="1119.50">std::s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (14 samples, 0.03%)</title><rect x="20.5872%" y="1093" width="0.0325%" height="15" fill="rgb(222,72,44)" fg:x="8870" fg:w="14"/><text x="20.8372%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (14 samples, 0.03%)</title><rect x="20.5872%" y="1077" width="0.0325%" height="15" fill="rgb(232,159,9)" fg:x="8870" fg:w="14"/><text x="20.8372%" y="1087.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (13 samples, 0.03%)</title><rect x="20.5895%" y="1061" width="0.0302%" height="15" fill="rgb(210,39,32)" fg:x="8871" fg:w="13"/><text x="20.8395%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (13 samples, 0.03%)</title><rect x="20.5895%" y="1045" width="0.0302%" height="15" fill="rgb(216,194,45)" fg:x="8871" fg:w="13"/><text x="20.8395%" y="1055.50"></text></g><g><title>std::sys::unix::os::page_size (5 samples, 0.01%)</title><rect x="20.6081%" y="1029" width="0.0116%" height="15" fill="rgb(218,18,35)" fg:x="8879" fg:w="5"/><text x="20.8581%" y="1039.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="20.6220%" y="1141" width="0.0186%" height="15" fill="rgb(207,83,51)" fg:x="8885" fg:w="8"/><text x="20.8720%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.07%)</title><rect x="20.6452%" y="1141" width="0.0743%" height="15" fill="rgb(225,63,43)" fg:x="8895" fg:w="32"/><text x="20.8952%" y="1151.50"></text></g><g><title>__rdl_alloc (6 samples, 0.01%)</title><rect x="20.7241%" y="1141" width="0.0139%" height="15" fill="rgb(207,57,36)" fg:x="8929" fg:w="6"/><text x="20.9741%" y="1151.50"></text></g><g><title>__rust_probestack (11 samples, 0.03%)</title><rect x="20.7450%" y="1141" width="0.0255%" height="15" fill="rgb(216,99,33)" fg:x="8938" fg:w="11"/><text x="20.9950%" y="1151.50"></text></g><g><title>_int_free (16 samples, 0.04%)</title><rect x="20.7706%" y="1141" width="0.0371%" height="15" fill="rgb(225,42,16)" fg:x="8949" fg:w="16"/><text x="21.0206%" y="1151.50"></text></g><g><title>_int_malloc (9 samples, 0.02%)</title><rect x="20.8077%" y="1141" width="0.0209%" height="15" fill="rgb(220,201,45)" fg:x="8965" fg:w="9"/><text x="21.0577%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.07%)</title><rect x="20.8309%" y="1141" width="0.0673%" height="15" fill="rgb(225,33,4)" fg:x="8975" fg:w="29"/><text x="21.0809%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.02%)</title><rect x="20.9098%" y="1141" width="0.0232%" height="15" fill="rgb(224,33,50)" fg:x="9009" fg:w="10"/><text x="21.1598%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.06%)</title><rect x="20.9330%" y="1141" width="0.0557%" height="15" fill="rgb(246,198,51)" fg:x="9019" fg:w="24"/><text x="21.1830%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (26 samples, 0.06%)</title><rect x="20.9957%" y="1141" width="0.0603%" height="15" fill="rgb(205,22,4)" fg:x="9046" fg:w="26"/><text x="21.2457%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (23 samples, 0.05%)</title><rect x="21.0561%" y="1141" width="0.0534%" height="15" fill="rgb(206,3,8)" fg:x="9072" fg:w="23"/><text x="21.3061%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (51 samples, 0.12%)</title><rect x="21.1187%" y="1141" width="0.1184%" height="15" fill="rgb(251,23,15)" fg:x="9099" fg:w="51"/><text x="21.3687%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13 samples, 0.03%)</title><rect x="21.2371%" y="1141" width="0.0302%" height="15" fill="rgb(252,88,28)" fg:x="9150" fg:w="13"/><text x="21.4871%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (15 samples, 0.03%)</title><rect x="21.2673%" y="1141" width="0.0348%" height="15" fill="rgb(212,127,14)" fg:x="9163" fg:w="15"/><text x="21.5173%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.01%)</title><rect x="21.3021%" y="1141" width="0.0116%" height="15" fill="rgb(247,145,37)" fg:x="9178" fg:w="5"/><text x="21.5521%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (44 samples, 0.10%)</title><rect x="21.3230%" y="1141" width="0.1021%" height="15" fill="rgb(209,117,53)" fg:x="9187" fg:w="44"/><text x="21.5730%" y="1151.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::awaken (10 samples, 0.02%)</title><rect x="21.4251%" y="1141" width="0.0232%" height="15" fill="rgb(212,90,42)" fg:x="9231" fg:w="10"/><text x="21.6751%" y="1151.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::new (37 samples, 0.09%)</title><rect x="21.4483%" y="1141" width="0.0859%" height="15" fill="rgb(218,164,37)" fg:x="9241" fg:w="37"/><text x="21.6983%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (12 samples, 0.03%)</title><rect x="21.5435%" y="1141" width="0.0279%" height="15" fill="rgb(246,65,34)" fg:x="9282" fg:w="12"/><text x="21.7935%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (27 samples, 0.06%)</title><rect x="21.5713%" y="1141" width="0.0627%" height="15" fill="rgb(231,100,33)" fg:x="9294" fg:w="27"/><text x="21.8213%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (17 samples, 0.04%)</title><rect x="21.6340%" y="1141" width="0.0395%" height="15" fill="rgb(228,126,14)" fg:x="9321" fg:w="17"/><text x="21.8840%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (43 samples, 0.10%)</title><rect x="21.6734%" y="1141" width="0.0998%" height="15" fill="rgb(215,173,21)" fg:x="9338" fg:w="43"/><text x="21.9234%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (9 samples, 0.02%)</title><rect x="21.7732%" y="1141" width="0.0209%" height="15" fill="rgb(210,6,40)" fg:x="9381" fg:w="9"/><text x="22.0232%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (18 samples, 0.04%)</title><rect x="21.7941%" y="1141" width="0.0418%" height="15" fill="rgb(212,48,18)" fg:x="9390" fg:w="18"/><text x="22.0441%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (9 samples, 0.02%)</title><rect x="21.8359%" y="1141" width="0.0209%" height="15" fill="rgb(230,214,11)" fg:x="9408" fg:w="9"/><text x="22.0859%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (61 samples, 0.14%)</title><rect x="21.8568%" y="1141" width="0.1416%" height="15" fill="rgb(254,105,39)" fg:x="9417" fg:w="61"/><text x="22.1068%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (33 samples, 0.08%)</title><rect x="22.0007%" y="1141" width="0.0766%" height="15" fill="rgb(245,158,5)" fg:x="9479" fg:w="33"/><text x="22.2507%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::len (6 samples, 0.01%)</title><rect x="22.0773%" y="1141" width="0.0139%" height="15" fill="rgb(249,208,11)" fg:x="9512" fg:w="6"/><text x="22.3273%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (7 samples, 0.02%)</title><rect x="22.0912%" y="1141" width="0.0162%" height="15" fill="rgb(210,39,28)" fg:x="9518" fg:w="7"/><text x="22.3412%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (18 samples, 0.04%)</title><rect x="22.1075%" y="1141" width="0.0418%" height="15" fill="rgb(211,56,53)" fg:x="9525" fg:w="18"/><text x="22.3575%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (31 samples, 0.07%)</title><rect x="22.1539%" y="1141" width="0.0720%" height="15" fill="rgb(226,201,30)" fg:x="9545" fg:w="31"/><text x="22.4039%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (8 samples, 0.02%)</title><rect x="22.2258%" y="1141" width="0.0186%" height="15" fill="rgb(239,101,34)" fg:x="9576" fg:w="8"/><text x="22.4758%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (38 samples, 0.09%)</title><rect x="22.2490%" y="1141" width="0.0882%" height="15" fill="rgb(226,209,5)" fg:x="9586" fg:w="38"/><text x="22.4990%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (14 samples, 0.03%)</title><rect x="22.3488%" y="1141" width="0.0325%" height="15" fill="rgb(250,105,47)" fg:x="9629" fg:w="14"/><text x="22.5988%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (43 samples, 0.10%)</title><rect x="22.3906%" y="1141" width="0.0998%" height="15" fill="rgb(230,72,3)" fg:x="9647" fg:w="43"/><text x="22.6406%" y="1151.50"></text></g><g><title>alloc::collections::btree::mem::replace (39 samples, 0.09%)</title><rect x="22.4904%" y="1141" width="0.0905%" height="15" fill="rgb(232,218,39)" fg:x="9690" fg:w="39"/><text x="22.7404%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (49 samples, 0.11%)</title><rect x="22.5809%" y="1141" width="0.1137%" height="15" fill="rgb(248,166,6)" fg:x="9729" fg:w="49"/><text x="22.8309%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (65 samples, 0.15%)</title><rect x="22.6947%" y="1141" width="0.1509%" height="15" fill="rgb(247,89,20)" fg:x="9778" fg:w="65"/><text x="22.9447%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (22 samples, 0.05%)</title><rect x="22.8455%" y="1141" width="0.0511%" height="15" fill="rgb(248,130,54)" fg:x="9843" fg:w="22"/><text x="23.0955%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (58 samples, 0.13%)</title><rect x="22.8966%" y="1141" width="0.1346%" height="15" fill="rgb(234,196,4)" fg:x="9865" fg:w="58"/><text x="23.1466%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (24 samples, 0.06%)</title><rect x="23.0312%" y="1141" width="0.0557%" height="15" fill="rgb(250,143,31)" fg:x="9923" fg:w="24"/><text x="23.2812%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (29 samples, 0.07%)</title><rect x="23.0869%" y="1141" width="0.0673%" height="15" fill="rgb(211,110,34)" fg:x="9947" fg:w="29"/><text x="23.3369%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (35 samples, 0.08%)</title><rect x="23.1589%" y="1141" width="0.0812%" height="15" fill="rgb(215,124,48)" fg:x="9978" fg:w="35"/><text x="23.4089%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (16 samples, 0.04%)</title><rect x="23.2471%" y="1141" width="0.0371%" height="15" fill="rgb(216,46,13)" fg:x="10016" fg:w="16"/><text x="23.4971%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::none (18 samples, 0.04%)</title><rect x="23.2842%" y="1141" width="0.0418%" height="15" fill="rgb(205,184,25)" fg:x="10032" fg:w="18"/><text x="23.5342%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (15 samples, 0.03%)</title><rect x="23.3260%" y="1141" width="0.0348%" height="15" fill="rgb(228,1,10)" fg:x="10050" fg:w="15"/><text x="23.5760%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (36 samples, 0.08%)</title><rect x="23.3608%" y="1141" width="0.0836%" height="15" fill="rgb(213,116,27)" fg:x="10065" fg:w="36"/><text x="23.6108%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (71 samples, 0.16%)</title><rect x="23.4536%" y="1141" width="0.1648%" height="15" fill="rgb(241,95,50)" fg:x="10105" fg:w="71"/><text x="23.7036%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (33 samples, 0.08%)</title><rect x="23.6254%" y="1141" width="0.0766%" height="15" fill="rgb(238,48,32)" fg:x="10179" fg:w="33"/><text x="23.8754%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (127 samples, 0.29%)</title><rect x="23.7020%" y="1141" width="0.2948%" height="15" fill="rgb(235,113,49)" fg:x="10212" fg:w="127"/><text x="23.9520%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (71 samples, 0.16%)</title><rect x="23.9968%" y="1141" width="0.1648%" height="15" fill="rgb(205,127,43)" fg:x="10339" fg:w="71"/><text x="24.2468%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::left_edge (10 samples, 0.02%)</title><rect x="24.1615%" y="1141" width="0.0232%" height="15" fill="rgb(250,162,2)" fg:x="10410" fg:w="10"/><text x="24.4115%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (59 samples, 0.14%)</title><rect x="24.1848%" y="1141" width="0.1369%" height="15" fill="rgb(220,13,41)" fg:x="10420" fg:w="59"/><text x="24.4348%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (43 samples, 0.10%)</title><rect x="24.3217%" y="1141" width="0.0998%" height="15" fill="rgb(249,221,25)" fg:x="10479" fg:w="43"/><text x="24.5717%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (5 samples, 0.01%)</title><rect x="24.4215%" y="1141" width="0.0116%" height="15" fill="rgb(215,208,19)" fg:x="10522" fg:w="5"/><text x="24.6715%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (60 samples, 0.14%)</title><rect x="24.4377%" y="1141" width="0.1393%" height="15" fill="rgb(236,175,2)" fg:x="10529" fg:w="60"/><text x="24.6877%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::forget_node_type (25 samples, 0.06%)</title><rect x="24.5770%" y="1141" width="0.0580%" height="15" fill="rgb(241,52,2)" fg:x="10589" fg:w="25"/><text x="24.8270%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (111 samples, 0.26%)</title><rect x="24.6350%" y="1141" width="0.2576%" height="15" fill="rgb(248,140,14)" fg:x="10614" fg:w="111"/><text x="24.8850%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (84 samples, 0.19%)</title><rect x="24.8927%" y="1141" width="0.1950%" height="15" fill="rgb(253,22,42)" fg:x="10725" fg:w="84"/><text x="25.1427%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,HandleType&gt;::reborrow_mut (6 samples, 0.01%)</title><rect x="25.0876%" y="1141" width="0.0139%" height="15" fill="rgb(234,61,47)" fg:x="10809" fg:w="6"/><text x="25.3376%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_val_mut (5 samples, 0.01%)</title><rect x="25.1015%" y="1141" width="0.0116%" height="15" fill="rgb(208,226,15)" fg:x="10815" fg:w="5"/><text x="25.3515%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.03%)</title><rect x="25.1155%" y="1141" width="0.0279%" height="15" fill="rgb(217,221,4)" fg:x="10821" fg:w="12"/><text x="25.3655%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (24 samples, 0.06%)</title><rect x="25.1433%" y="1141" width="0.0557%" height="15" fill="rgb(212,174,34)" fg:x="10833" fg:w="24"/><text x="25.3933%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (69 samples, 0.16%)</title><rect x="25.1990%" y="1141" width="0.1601%" height="15" fill="rgb(253,83,4)" fg:x="10857" fg:w="69"/><text x="25.4490%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (13 samples, 0.03%)</title><rect x="25.3592%" y="1141" width="0.0302%" height="15" fill="rgb(250,195,49)" fg:x="10926" fg:w="13"/><text x="25.6092%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::cast_to_leaf_unchecked (9 samples, 0.02%)</title><rect x="25.3893%" y="1141" width="0.0209%" height="15" fill="rgb(241,192,25)" fg:x="10939" fg:w="9"/><text x="25.6393%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_valmut (5 samples, 0.01%)</title><rect x="25.4102%" y="1141" width="0.0116%" height="15" fill="rgb(208,124,10)" fg:x="10948" fg:w="5"/><text x="25.6602%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (18 samples, 0.04%)</title><rect x="25.4218%" y="1141" width="0.0418%" height="15" fill="rgb(222,33,0)" fg:x="10953" fg:w="18"/><text x="25.6718%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (14 samples, 0.03%)</title><rect x="25.4636%" y="1141" width="0.0325%" height="15" fill="rgb(234,209,28)" fg:x="10971" fg:w="14"/><text x="25.7136%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (108 samples, 0.25%)</title><rect x="25.4961%" y="1141" width="0.2507%" height="15" fill="rgb(224,11,23)" fg:x="10985" fg:w="108"/><text x="25.7461%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (56 samples, 0.13%)</title><rect x="25.7468%" y="1141" width="0.1300%" height="15" fill="rgb(232,99,1)" fg:x="11093" fg:w="56"/><text x="25.9968%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (62 samples, 0.14%)</title><rect x="25.8791%" y="1141" width="0.1439%" height="15" fill="rgb(237,95,45)" fg:x="11150" fg:w="62"/><text x="26.1291%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (36 samples, 0.08%)</title><rect x="26.0230%" y="1141" width="0.0836%" height="15" fill="rgb(208,109,11)" fg:x="11212" fg:w="36"/><text x="26.2730%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (125 samples, 0.29%)</title><rect x="26.1065%" y="1141" width="0.2901%" height="15" fill="rgb(216,190,48)" fg:x="11248" fg:w="125"/><text x="26.3565%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (39 samples, 0.09%)</title><rect x="26.3967%" y="1141" width="0.0905%" height="15" fill="rgb(251,171,36)" fg:x="11373" fg:w="39"/><text x="26.6467%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;::forget_type (31 samples, 0.07%)</title><rect x="26.4918%" y="1141" width="0.0720%" height="15" fill="rgb(230,62,22)" fg:x="11414" fg:w="31"/><text x="26.7418%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (58 samples, 0.13%)</title><rect x="26.5638%" y="1141" width="0.1346%" height="15" fill="rgb(225,114,35)" fg:x="11445" fg:w="58"/><text x="26.8138%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (38 samples, 0.09%)</title><rect x="26.6984%" y="1141" width="0.0882%" height="15" fill="rgb(215,118,42)" fg:x="11503" fg:w="38"/><text x="26.9484%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (34 samples, 0.08%)</title><rect x="26.7866%" y="1141" width="0.0789%" height="15" fill="rgb(243,119,21)" fg:x="11541" fg:w="34"/><text x="27.0366%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (43 samples, 0.10%)</title><rect x="26.8655%" y="1141" width="0.0998%" height="15" fill="rgb(252,177,53)" fg:x="11575" fg:w="43"/><text x="27.1155%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (28 samples, 0.06%)</title><rect x="26.9653%" y="1141" width="0.0650%" height="15" fill="rgb(237,209,29)" fg:x="11618" fg:w="28"/><text x="27.2153%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (13 samples, 0.03%)</title><rect x="27.0326%" y="1141" width="0.0302%" height="15" fill="rgb(212,65,23)" fg:x="11647" fg:w="13"/><text x="27.2826%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::len_mut (33 samples, 0.08%)</title><rect x="27.0628%" y="1141" width="0.0766%" height="15" fill="rgb(230,222,46)" fg:x="11660" fg:w="33"/><text x="27.3128%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::reborrow_mut (11 samples, 0.03%)</title><rect x="27.1394%" y="1141" width="0.0255%" height="15" fill="rgb(215,135,32)" fg:x="11693" fg:w="11"/><text x="27.3894%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (19 samples, 0.04%)</title><rect x="27.1649%" y="1141" width="0.0441%" height="15" fill="rgb(246,101,22)" fg:x="11704" fg:w="19"/><text x="27.4149%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (8 samples, 0.02%)</title><rect x="27.2113%" y="1141" width="0.0186%" height="15" fill="rgb(206,107,13)" fg:x="11724" fg:w="8"/><text x="27.4613%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (21 samples, 0.05%)</title><rect x="27.2392%" y="1141" width="0.0487%" height="15" fill="rgb(250,100,44)" fg:x="11736" fg:w="21"/><text x="27.4892%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (12 samples, 0.03%)</title><rect x="27.2879%" y="1141" width="0.0279%" height="15" fill="rgb(231,147,38)" fg:x="11757" fg:w="12"/><text x="27.5379%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::from_new_leaf (21 samples, 0.05%)</title><rect x="27.3158%" y="1141" width="0.0487%" height="15" fill="rgb(229,8,40)" fg:x="11769" fg:w="21"/><text x="27.5658%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (29 samples, 0.07%)</title><rect x="27.3645%" y="1141" width="0.0673%" height="15" fill="rgb(221,135,30)" fg:x="11790" fg:w="29"/><text x="27.6145%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (37 samples, 0.09%)</title><rect x="27.4318%" y="1141" width="0.0859%" height="15" fill="rgb(249,193,18)" fg:x="11819" fg:w="37"/><text x="27.6818%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,Type&gt;::into_key_val_mut_at (9 samples, 0.02%)</title><rect x="27.5177%" y="1141" width="0.0209%" height="15" fill="rgb(209,133,39)" fg:x="11856" fg:w="9"/><text x="27.7677%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (33 samples, 0.08%)</title><rect x="27.5409%" y="1141" width="0.0766%" height="15" fill="rgb(232,100,14)" fg:x="11866" fg:w="33"/><text x="27.7909%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.01%)</title><rect x="27.6059%" y="1125" width="0.0116%" height="15" fill="rgb(224,185,1)" fg:x="11894" fg:w="5"/><text x="27.8559%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (27 samples, 0.06%)</title><rect x="27.6175%" y="1141" width="0.0627%" height="15" fill="rgb(223,139,8)" fg:x="11899" fg:w="27"/><text x="27.8675%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.01%)</title><rect x="27.6686%" y="1125" width="0.0116%" height="15" fill="rgb(232,213,38)" fg:x="11921" fg:w="5"/><text x="27.9186%" y="1135.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (13 samples, 0.03%)</title><rect x="27.6802%" y="1141" width="0.0302%" height="15" fill="rgb(207,94,22)" fg:x="11926" fg:w="13"/><text x="27.9302%" y="1151.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (8 samples, 0.02%)</title><rect x="27.7103%" y="1141" width="0.0186%" height="15" fill="rgb(219,183,54)" fg:x="11939" fg:w="8"/><text x="27.9603%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (85 samples, 0.20%)</title><rect x="27.7289%" y="1141" width="0.1973%" height="15" fill="rgb(216,185,54)" fg:x="11947" fg:w="85"/><text x="27.9789%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.12%)</title><rect x="27.9262%" y="1141" width="0.1230%" height="15" fill="rgb(254,217,39)" fg:x="12032" fg:w="53"/><text x="28.1762%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (65 samples, 0.15%)</title><rect x="28.0492%" y="1141" width="0.1509%" height="15" fill="rgb(240,178,23)" fg:x="12085" fg:w="65"/><text x="28.2992%" y="1151.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (14 samples, 0.03%)</title><rect x="28.2186%" y="1141" width="0.0325%" height="15" fill="rgb(218,11,47)" fg:x="12158" fg:w="14"/><text x="28.4686%" y="1151.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="28.2511%" y="1141" width="0.0186%" height="15" fill="rgb(218,51,51)" fg:x="12172" fg:w="8"/><text x="28.5011%" y="1151.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (6 samples, 0.01%)</title><rect x="28.2697%" y="1141" width="0.0139%" height="15" fill="rgb(238,126,27)" fg:x="12180" fg:w="6"/><text x="28.5197%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.03%)</title><rect x="28.2929%" y="1141" width="0.0255%" height="15" fill="rgb(249,202,22)" fg:x="12190" fg:w="11"/><text x="28.5429%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocator (16 samples, 0.04%)</title><rect x="28.3184%" y="1141" width="0.0371%" height="15" fill="rgb(254,195,49)" fg:x="12201" fg:w="16"/><text x="28.5684%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (5 samples, 0.01%)</title><rect x="28.3556%" y="1141" width="0.0116%" height="15" fill="rgb(208,123,14)" fg:x="12217" fg:w="5"/><text x="28.6056%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.03%)</title><rect x="28.3672%" y="1141" width="0.0325%" height="15" fill="rgb(224,200,8)" fg:x="12222" fg:w="14"/><text x="28.6172%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (6 samples, 0.01%)</title><rect x="28.3997%" y="1141" width="0.0139%" height="15" fill="rgb(217,61,36)" fg:x="12236" fg:w="6"/><text x="28.6497%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.05%)</title><rect x="28.4136%" y="1141" width="0.0534%" height="15" fill="rgb(206,35,45)" fg:x="12242" fg:w="23"/><text x="28.6636%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.01%)</title><rect x="28.4716%" y="1141" width="0.0116%" height="15" fill="rgb(217,65,33)" fg:x="12267" fg:w="5"/><text x="28.7216%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (102 samples, 0.24%)</title><rect x="28.4832%" y="1141" width="0.2367%" height="15" fill="rgb(222,158,48)" fg:x="12272" fg:w="102"/><text x="28.7332%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="28.7200%" y="1141" width="0.0418%" height="15" fill="rgb(254,2,54)" fg:x="12374" fg:w="18"/><text x="28.9700%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (14 samples, 0.03%)</title><rect x="28.7710%" y="1141" width="0.0325%" height="15" fill="rgb(250,143,38)" fg:x="12396" fg:w="14"/><text x="29.0210%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.04%)</title><rect x="28.8035%" y="1141" width="0.0418%" height="15" fill="rgb(248,25,0)" fg:x="12410" fg:w="18"/><text x="29.0535%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="28.8732%" y="1141" width="0.0209%" height="15" fill="rgb(206,152,27)" fg:x="12440" fg:w="9"/><text x="29.1232%" y="1151.50"></text></g><g><title>alloc::slice::hack::into_vec (6 samples, 0.01%)</title><rect x="28.8940%" y="1141" width="0.0139%" height="15" fill="rgb(240,77,30)" fg:x="12449" fg:w="6"/><text x="29.1440%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="28.9080%" y="1141" width="0.0209%" height="15" fill="rgb(231,5,3)" fg:x="12455" fg:w="9"/><text x="29.1580%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (9 samples, 0.02%)</title><rect x="28.9335%" y="1141" width="0.0209%" height="15" fill="rgb(207,226,32)" fg:x="12466" fg:w="9"/><text x="29.1835%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::allocator (17 samples, 0.04%)</title><rect x="28.9544%" y="1141" width="0.0395%" height="15" fill="rgb(222,207,47)" fg:x="12475" fg:w="17"/><text x="29.2044%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (27 samples, 0.06%)</title><rect x="28.9938%" y="1141" width="0.0627%" height="15" fill="rgb(229,115,45)" fg:x="12492" fg:w="27"/><text x="29.2438%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (65 samples, 0.15%)</title><rect x="29.0565%" y="1141" width="0.1509%" height="15" fill="rgb(224,191,6)" fg:x="12519" fg:w="65"/><text x="29.3065%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (16 samples, 0.04%)</title><rect x="29.2376%" y="1141" width="0.0371%" height="15" fill="rgb(230,227,24)" fg:x="12597" fg:w="16"/><text x="29.4876%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (24 samples, 0.06%)</title><rect x="29.2747%" y="1141" width="0.0557%" height="15" fill="rgb(228,80,19)" fg:x="12613" fg:w="24"/><text x="29.5247%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.03%)</title><rect x="29.3304%" y="1141" width="0.0325%" height="15" fill="rgb(247,229,0)" fg:x="12637" fg:w="14"/><text x="29.5804%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="29.3629%" y="1141" width="0.0162%" height="15" fill="rgb(237,194,15)" fg:x="12651" fg:w="7"/><text x="29.6129%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (8 samples, 0.02%)</title><rect x="29.3791%" y="1141" width="0.0186%" height="15" fill="rgb(219,203,20)" fg:x="12658" fg:w="8"/><text x="29.6291%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.04%)</title><rect x="29.4093%" y="1141" width="0.0441%" height="15" fill="rgb(234,128,8)" fg:x="12671" fg:w="19"/><text x="29.6593%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.03%)</title><rect x="29.4534%" y="1141" width="0.0255%" height="15" fill="rgb(248,202,8)" fg:x="12690" fg:w="11"/><text x="29.7034%" y="1151.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (5 samples, 0.01%)</title><rect x="29.4789%" y="1141" width="0.0116%" height="15" fill="rgb(206,104,37)" fg:x="12701" fg:w="5"/><text x="29.7289%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (10 samples, 0.02%)</title><rect x="29.5254%" y="1141" width="0.0232%" height="15" fill="rgb(223,8,27)" fg:x="12721" fg:w="10"/><text x="29.7754%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (17 samples, 0.04%)</title><rect x="29.5486%" y="1141" width="0.0395%" height="15" fill="rgb(216,217,28)" fg:x="12731" fg:w="17"/><text x="29.7986%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (5 samples, 0.01%)</title><rect x="29.5880%" y="1141" width="0.0116%" height="15" fill="rgb(249,199,1)" fg:x="12748" fg:w="5"/><text x="29.8380%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (14 samples, 0.03%)</title><rect x="29.5996%" y="1141" width="0.0325%" height="15" fill="rgb(240,85,17)" fg:x="12753" fg:w="14"/><text x="29.8496%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (16 samples, 0.04%)</title><rect x="29.6414%" y="1141" width="0.0371%" height="15" fill="rgb(206,108,45)" fg:x="12771" fg:w="16"/><text x="29.8914%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (18 samples, 0.04%)</title><rect x="29.6785%" y="1141" width="0.0418%" height="15" fill="rgb(245,210,41)" fg:x="12787" fg:w="18"/><text x="29.9285%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (5 samples, 0.01%)</title><rect x="29.7203%" y="1141" width="0.0116%" height="15" fill="rgb(206,13,37)" fg:x="12805" fg:w="5"/><text x="29.9703%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (7 samples, 0.02%)</title><rect x="29.7551%" y="1141" width="0.0162%" height="15" fill="rgb(250,61,18)" fg:x="12820" fg:w="7"/><text x="30.0051%" y="1151.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (8 samples, 0.02%)</title><rect x="29.7714%" y="1141" width="0.0186%" height="15" fill="rgb(235,172,48)" fg:x="12827" fg:w="8"/><text x="30.0214%" y="1151.50"></text></g><g><title>borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (8 samples, 0.02%)</title><rect x="29.8108%" y="1141" width="0.0186%" height="15" fill="rgb(249,201,17)" fg:x="12844" fg:w="8"/><text x="30.0608%" y="1151.50"></text></g><g><title>borrow_graph::shared::remap_set (6 samples, 0.01%)</title><rect x="29.8364%" y="1141" width="0.0139%" height="15" fill="rgb(219,208,6)" fg:x="12855" fg:w="6"/><text x="30.0864%" y="1151.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="1093" width="0.0116%" height="15" fill="rgb(248,31,23)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="1077" width="0.0116%" height="15" fill="rgb(245,15,42)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.01%)</title><rect x="29.8503%" y="1061" width="0.0116%" height="15" fill="rgb(222,217,39)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1071.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="1045" width="0.0116%" height="15" fill="rgb(210,219,27)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1055.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="1029" width="0.0116%" height="15" fill="rgb(252,166,36)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="1013" width="0.0116%" height="15" fill="rgb(245,132,34)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.01%)</title><rect x="29.8503%" y="997" width="0.0116%" height="15" fill="rgb(236,54,3)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="981" width="0.0116%" height="15" fill="rgb(241,173,43)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="965" width="0.0116%" height="15" fill="rgb(215,190,9)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.01%)</title><rect x="29.8503%" y="949" width="0.0116%" height="15" fill="rgb(242,101,16)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="959.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="933" width="0.0116%" height="15" fill="rgb(223,190,21)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="29.8503%" y="917" width="0.0116%" height="15" fill="rgb(215,228,25)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="29.8503%" y="901" width="0.0116%" height="15" fill="rgb(225,36,22)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="29.8503%" y="885" width="0.0116%" height="15" fill="rgb(251,106,46)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="29.8503%" y="869" width="0.0116%" height="15" fill="rgb(208,90,1)" fg:x="12861" fg:w="5"/><text x="30.1003%" y="879.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (6 samples, 0.01%)</title><rect x="29.8503%" y="1125" width="0.0139%" height="15" fill="rgb(243,10,4)" fg:x="12861" fg:w="6"/><text x="30.1003%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (6 samples, 0.01%)</title><rect x="29.8503%" y="1109" width="0.0139%" height="15" fill="rgb(212,137,27)" fg:x="12861" fg:w="6"/><text x="30.1003%" y="1119.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="29.8758%" y="917" width="0.0209%" height="15" fill="rgb(231,220,49)" fg:x="12872" fg:w="9"/><text x="30.1258%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="29.8758%" y="901" width="0.0209%" height="15" fill="rgb(237,96,20)" fg:x="12872" fg:w="9"/><text x="30.1258%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="29.8758%" y="885" width="0.0209%" height="15" fill="rgb(239,229,30)" fg:x="12872" fg:w="9"/><text x="30.1258%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="29.8758%" y="869" width="0.0209%" height="15" fill="rgb(219,65,33)" fg:x="12872" fg:w="9"/><text x="30.1258%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="29.8758%" y="853" width="0.0209%" height="15" fill="rgb(243,134,7)" fg:x="12872" fg:w="9"/><text x="30.1258%" y="863.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="1077" width="0.0418%" height="15" fill="rgb(216,177,54)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="1061" width="0.0418%" height="15" fill="rgb(211,160,20)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.04%)</title><rect x="29.8735%" y="1045" width="0.0418%" height="15" fill="rgb(239,85,39)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1055.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="1029" width="0.0418%" height="15" fill="rgb(232,125,22)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1039.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="1013" width="0.0418%" height="15" fill="rgb(244,57,34)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="997" width="0.0418%" height="15" fill="rgb(214,203,32)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.04%)</title><rect x="29.8735%" y="981" width="0.0418%" height="15" fill="rgb(207,58,43)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="965" width="0.0418%" height="15" fill="rgb(215,193,15)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="29.8735%" y="949" width="0.0418%" height="15" fill="rgb(232,15,44)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.04%)</title><rect x="29.8735%" y="933" width="0.0418%" height="15" fill="rgb(212,3,48)" fg:x="12871" fg:w="18"/><text x="30.1235%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (8 samples, 0.02%)</title><rect x="29.9501%" y="981" width="0.0186%" height="15" fill="rgb(218,128,7)" fg:x="12904" fg:w="8"/><text x="30.2001%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (9 samples, 0.02%)</title><rect x="29.9687%" y="981" width="0.0209%" height="15" fill="rgb(226,216,39)" fg:x="12912" fg:w="9"/><text x="30.2187%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="29.9733%" y="965" width="0.0162%" height="15" fill="rgb(243,47,51)" fg:x="12914" fg:w="7"/><text x="30.2233%" y="975.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.02%)</title><rect x="30.0012%" y="965" width="0.0162%" height="15" fill="rgb(241,183,40)" fg:x="12926" fg:w="7"/><text x="30.2512%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (41 samples, 0.10%)</title><rect x="29.9339%" y="997" width="0.0952%" height="15" fill="rgb(231,217,32)" fg:x="12897" fg:w="41"/><text x="30.1839%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (17 samples, 0.04%)</title><rect x="29.9896%" y="981" width="0.0395%" height="15" fill="rgb(229,61,38)" fg:x="12921" fg:w="17"/><text x="30.2396%" y="991.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (52 samples, 0.12%)</title><rect x="29.9153%" y="1077" width="0.1207%" height="15" fill="rgb(225,210,5)" fg:x="12889" fg:w="52"/><text x="30.1653%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (52 samples, 0.12%)</title><rect x="29.9153%" y="1061" width="0.1207%" height="15" fill="rgb(231,79,45)" fg:x="12889" fg:w="52"/><text x="30.1653%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (52 samples, 0.12%)</title><rect x="29.9153%" y="1045" width="0.1207%" height="15" fill="rgb(224,100,7)" fg:x="12889" fg:w="52"/><text x="30.1653%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (52 samples, 0.12%)</title><rect x="29.9153%" y="1029" width="0.1207%" height="15" fill="rgb(241,198,18)" fg:x="12889" fg:w="52"/><text x="30.1653%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (52 samples, 0.12%)</title><rect x="29.9153%" y="1013" width="0.1207%" height="15" fill="rgb(252,97,53)" fg:x="12889" fg:w="52"/><text x="30.1653%" y="1023.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (73 samples, 0.17%)</title><rect x="29.8735%" y="1109" width="0.1694%" height="15" fill="rgb(220,88,7)" fg:x="12871" fg:w="73"/><text x="30.1235%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (73 samples, 0.17%)</title><rect x="29.8735%" y="1093" width="0.1694%" height="15" fill="rgb(213,176,14)" fg:x="12871" fg:w="73"/><text x="30.1235%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="30.0569%" y="853" width="0.0139%" height="15" fill="rgb(246,73,7)" fg:x="12950" fg:w="6"/><text x="30.3069%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="30.0569%" y="837" width="0.0139%" height="15" fill="rgb(245,64,36)" fg:x="12950" fg:w="6"/><text x="30.3069%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="30.0569%" y="821" width="0.0139%" height="15" fill="rgb(245,80,10)" fg:x="12950" fg:w="6"/><text x="30.3069%" y="831.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="30.0429%" y="933" width="0.0371%" height="15" fill="rgb(232,107,50)" fg:x="12944" fg:w="16"/><text x="30.2929%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="30.0429%" y="917" width="0.0371%" height="15" fill="rgb(253,3,0)" fg:x="12944" fg:w="16"/><text x="30.2929%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.04%)</title><rect x="30.0429%" y="901" width="0.0371%" height="15" fill="rgb(212,99,53)" fg:x="12944" fg:w="16"/><text x="30.2929%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.04%)</title><rect x="30.0429%" y="885" width="0.0371%" height="15" fill="rgb(249,111,54)" fg:x="12944" fg:w="16"/><text x="30.2929%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.04%)</title><rect x="30.0429%" y="869" width="0.0371%" height="15" fill="rgb(249,55,30)" fg:x="12944" fg:w="16"/><text x="30.2929%" y="879.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (103 samples, 0.24%)</title><rect x="29.8503%" y="1141" width="0.2391%" height="15" fill="rgb(237,47,42)" fg:x="12861" fg:w="103"/><text x="30.1003%" y="1151.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (93 samples, 0.22%)</title><rect x="29.8735%" y="1125" width="0.2159%" height="15" fill="rgb(211,20,18)" fg:x="12871" fg:w="93"/><text x="30.1235%" y="1135.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1109" width="0.0464%" height="15" fill="rgb(231,203,46)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1119.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1093" width="0.0464%" height="15" fill="rgb(237,142,3)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1077" width="0.0464%" height="15" fill="rgb(241,107,1)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.05%)</title><rect x="30.0429%" y="1061" width="0.0464%" height="15" fill="rgb(229,83,13)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1071.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1045" width="0.0464%" height="15" fill="rgb(241,91,40)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1055.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1029" width="0.0464%" height="15" fill="rgb(225,3,45)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="1013" width="0.0464%" height="15" fill="rgb(244,223,14)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.05%)</title><rect x="30.0429%" y="997" width="0.0464%" height="15" fill="rgb(224,124,37)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="981" width="0.0464%" height="15" fill="rgb(251,171,30)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="30.0429%" y="965" width="0.0464%" height="15" fill="rgb(236,46,54)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.05%)</title><rect x="30.0429%" y="949" width="0.0464%" height="15" fill="rgb(245,213,5)" fg:x="12944" fg:w="20"/><text x="30.2929%" y="959.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (5 samples, 0.01%)</title><rect x="30.0894%" y="1141" width="0.0116%" height="15" fill="rgb(230,144,27)" fg:x="12964" fg:w="5"/><text x="30.3394%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="30.1242%" y="1077" width="0.0139%" height="15" fill="rgb(220,86,6)" fg:x="12979" fg:w="6"/><text x="30.3742%" y="1087.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (10 samples, 0.02%)</title><rect x="30.1242%" y="1093" width="0.0232%" height="15" fill="rgb(240,20,13)" fg:x="12979" fg:w="10"/><text x="30.3742%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions (13 samples, 0.03%)</title><rect x="30.1219%" y="1109" width="0.0302%" height="15" fill="rgb(217,89,34)" fg:x="12978" fg:w="13"/><text x="30.3719%" y="1119.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_instantiations (6 samples, 0.01%)</title><rect x="30.1567%" y="1109" width="0.0139%" height="15" fill="rgb(229,13,5)" fg:x="12993" fg:w="6"/><text x="30.4067%" y="1119.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (6 samples, 0.01%)</title><rect x="30.1567%" y="1093" width="0.0139%" height="15" fill="rgb(244,67,35)" fg:x="12993" fg:w="6"/><text x="30.4067%" y="1103.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.01%)</title><rect x="30.1567%" y="1077" width="0.0139%" height="15" fill="rgb(221,40,2)" fg:x="12993" fg:w="6"/><text x="30.4067%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="30.1567%" y="1061" width="0.0139%" height="15" fill="rgb(237,157,21)" fg:x="12993" fg:w="6"/><text x="30.4067%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="30.1567%" y="1045" width="0.0139%" height="15" fill="rgb(222,94,11)" fg:x="12993" fg:w="6"/><text x="30.4067%" y="1055.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.01%)</title><rect x="30.1706%" y="1029" width="0.0116%" height="15" fill="rgb(249,113,6)" fg:x="12999" fg:w="5"/><text x="30.4206%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.01%)</title><rect x="30.1706%" y="1013" width="0.0116%" height="15" fill="rgb(238,137,36)" fg:x="12999" fg:w="5"/><text x="30.4206%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="30.1706%" y="997" width="0.0116%" height="15" fill="rgb(210,102,26)" fg:x="12999" fg:w="5"/><text x="30.4206%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="30.1706%" y="981" width="0.0116%" height="15" fill="rgb(218,30,30)" fg:x="12999" fg:w="5"/><text x="30.4206%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.01%)</title><rect x="30.1706%" y="965" width="0.0116%" height="15" fill="rgb(214,67,26)" fg:x="12999" fg:w="5"/><text x="30.4206%" y="975.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (8 samples, 0.02%)</title><rect x="30.1706%" y="1109" width="0.0186%" height="15" fill="rgb(251,9,53)" fg:x="12999" fg:w="8"/><text x="30.4206%" y="1119.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (8 samples, 0.02%)</title><rect x="30.1706%" y="1093" width="0.0186%" height="15" fill="rgb(228,204,25)" fg:x="12999" fg:w="8"/><text x="30.4206%" y="1103.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.02%)</title><rect x="30.1706%" y="1077" width="0.0186%" height="15" fill="rgb(207,153,8)" fg:x="12999" fg:w="8"/><text x="30.4206%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="30.1706%" y="1061" width="0.0186%" height="15" fill="rgb(242,9,16)" fg:x="12999" fg:w="8"/><text x="30.4206%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="30.1706%" y="1045" width="0.0186%" height="15" fill="rgb(217,211,10)" fg:x="12999" fg:w="8"/><text x="30.4206%" y="1055.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module (35 samples, 0.08%)</title><rect x="30.1149%" y="1141" width="0.0812%" height="15" fill="rgb(219,228,52)" fg:x="12975" fg:w="35"/><text x="30.3649%" y="1151.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (34 samples, 0.08%)</title><rect x="30.1172%" y="1125" width="0.0789%" height="15" fill="rgb(231,92,29)" fg:x="12976" fg:w="34"/><text x="30.3672%" y="1135.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (7 samples, 0.02%)</title><rect x="30.2077%" y="981" width="0.0162%" height="15" fill="rgb(232,8,23)" fg:x="13015" fg:w="7"/><text x="30.4577%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.02%)</title><rect x="30.2077%" y="965" width="0.0162%" height="15" fill="rgb(216,211,34)" fg:x="13015" fg:w="7"/><text x="30.4577%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.01%)</title><rect x="30.2124%" y="949" width="0.0116%" height="15" fill="rgb(236,151,0)" fg:x="13017" fg:w="5"/><text x="30.4624%" y="959.50"></text></g><g><title>&lt;move_binary_format::file_format::Constant as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="30.2124%" y="933" width="0.0116%" height="15" fill="rgb(209,168,3)" fg:x="13017" fg:w="5"/><text x="30.4624%" y="943.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_constants (16 samples, 0.04%)</title><rect x="30.2008%" y="1125" width="0.0371%" height="15" fill="rgb(208,129,28)" fg:x="13012" fg:w="16"/><text x="30.4508%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (16 samples, 0.04%)</title><rect x="30.2008%" y="1109" width="0.0371%" height="15" fill="rgb(229,78,22)" fg:x="13012" fg:w="16"/><text x="30.4508%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (16 samples, 0.04%)</title><rect x="30.2008%" y="1093" width="0.0371%" height="15" fill="rgb(228,187,13)" fg:x="13012" fg:w="16"/><text x="30.4508%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (16 samples, 0.04%)</title><rect x="30.2008%" y="1077" width="0.0371%" height="15" fill="rgb(240,119,24)" fg:x="13012" fg:w="16"/><text x="30.4508%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.04%)</title><rect x="30.2008%" y="1061" width="0.0371%" height="15" fill="rgb(209,194,42)" fg:x="13012" fg:w="16"/><text x="30.4508%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.03%)</title><rect x="30.2054%" y="1045" width="0.0325%" height="15" fill="rgb(247,200,46)" fg:x="13014" fg:w="14"/><text x="30.4554%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="30.2054%" y="1029" width="0.0325%" height="15" fill="rgb(218,76,16)" fg:x="13014" fg:w="14"/><text x="30.4554%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="30.2054%" y="1013" width="0.0325%" height="15" fill="rgb(225,21,48)" fg:x="13014" fg:w="14"/><text x="30.4554%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (14 samples, 0.03%)</title><rect x="30.2054%" y="997" width="0.0325%" height="15" fill="rgb(239,223,50)" fg:x="13014" fg:w="14"/><text x="30.4554%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.2658%" y="1029" width="0.0209%" height="15" fill="rgb(244,45,21)" fg:x="13040" fg:w="9"/><text x="30.5158%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.2658%" y="1013" width="0.0209%" height="15" fill="rgb(232,33,43)" fg:x="13040" fg:w="9"/><text x="30.5158%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.2658%" y="997" width="0.0209%" height="15" fill="rgb(209,8,3)" fg:x="13040" fg:w="9"/><text x="30.5158%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="30.2727%" y="981" width="0.0139%" height="15" fill="rgb(214,25,53)" fg:x="13043" fg:w="6"/><text x="30.5227%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.01%)</title><rect x="30.2866%" y="1029" width="0.0116%" height="15" fill="rgb(254,186,54)" fg:x="13049" fg:w="5"/><text x="30.5366%" y="1039.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.01%)</title><rect x="30.2866%" y="1013" width="0.0116%" height="15" fill="rgb(208,174,49)" fg:x="13049" fg:w="5"/><text x="30.5366%" y="1023.50"></text></g><g><title>hashbrown::map::make_insert_hash (19 samples, 0.04%)</title><rect x="30.2611%" y="1045" width="0.0441%" height="15" fill="rgb(233,191,51)" fg:x="13038" fg:w="19"/><text x="30.5111%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 0.03%)</title><rect x="30.3052%" y="1045" width="0.0325%" height="15" fill="rgb(222,134,10)" fg:x="13057" fg:w="14"/><text x="30.5552%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.03%)</title><rect x="30.3052%" y="1029" width="0.0325%" height="15" fill="rgb(230,226,20)" fg:x="13057" fg:w="14"/><text x="30.5552%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.03%)</title><rect x="30.3122%" y="1013" width="0.0255%" height="15" fill="rgb(251,111,25)" fg:x="13060" fg:w="11"/><text x="30.5622%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.03%)</title><rect x="30.3122%" y="997" width="0.0255%" height="15" fill="rgb(224,40,46)" fg:x="13060" fg:w="11"/><text x="30.5622%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.02%)</title><rect x="30.3145%" y="981" width="0.0232%" height="15" fill="rgb(236,108,47)" fg:x="13061" fg:w="10"/><text x="30.5645%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="30.3215%" y="965" width="0.0162%" height="15" fill="rgb(234,93,0)" fg:x="13064" fg:w="7"/><text x="30.5715%" y="975.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (5 samples, 0.01%)</title><rect x="30.3586%" y="981" width="0.0116%" height="15" fill="rgb(224,213,32)" fg:x="13080" fg:w="5"/><text x="30.6086%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.01%)</title><rect x="30.3725%" y="981" width="0.0116%" height="15" fill="rgb(251,11,48)" fg:x="13086" fg:w="5"/><text x="30.6225%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.01%)</title><rect x="30.3841%" y="981" width="0.0116%" height="15" fill="rgb(236,173,5)" fg:x="13091" fg:w="5"/><text x="30.6341%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.08%)</title><rect x="30.3400%" y="1029" width="0.0789%" height="15" fill="rgb(230,95,12)" fg:x="13072" fg:w="34"/><text x="30.5900%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.08%)</title><rect x="30.3400%" y="1013" width="0.0789%" height="15" fill="rgb(232,209,1)" fg:x="13072" fg:w="34"/><text x="30.5900%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (33 samples, 0.08%)</title><rect x="30.3423%" y="997" width="0.0766%" height="15" fill="rgb(232,6,1)" fg:x="13073" fg:w="33"/><text x="30.5923%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.02%)</title><rect x="30.3957%" y="981" width="0.0232%" height="15" fill="rgb(210,224,50)" fg:x="13096" fg:w="10"/><text x="30.6457%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.02%)</title><rect x="30.3957%" y="965" width="0.0232%" height="15" fill="rgb(228,127,35)" fg:x="13096" fg:w="10"/><text x="30.6457%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (5 samples, 0.01%)</title><rect x="30.4073%" y="949" width="0.0116%" height="15" fill="rgb(245,102,45)" fg:x="13101" fg:w="5"/><text x="30.6573%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.02%)</title><rect x="30.4189%" y="1029" width="0.0232%" height="15" fill="rgb(214,1,49)" fg:x="13106" fg:w="10"/><text x="30.6689%" y="1039.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (80 samples, 0.19%)</title><rect x="30.2611%" y="1093" width="0.1857%" height="15" fill="rgb(226,163,40)" fg:x="13038" fg:w="80"/><text x="30.5111%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (80 samples, 0.19%)</title><rect x="30.2611%" y="1077" width="0.1857%" height="15" fill="rgb(239,212,28)" fg:x="13038" fg:w="80"/><text x="30.5111%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (80 samples, 0.19%)</title><rect x="30.2611%" y="1061" width="0.1857%" height="15" fill="rgb(220,20,13)" fg:x="13038" fg:w="80"/><text x="30.5111%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (47 samples, 0.11%)</title><rect x="30.3377%" y="1045" width="0.1091%" height="15" fill="rgb(210,164,35)" fg:x="13071" fg:w="47"/><text x="30.5877%" y="1055.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (90 samples, 0.21%)</title><rect x="30.2472%" y="1109" width="0.2089%" height="15" fill="rgb(248,109,41)" fg:x="13032" fg:w="90"/><text x="30.4972%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="30.4723%" y="885" width="0.0209%" height="15" fill="rgb(238,23,50)" fg:x="13129" fg:w="9"/><text x="30.7223%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="30.4746%" y="869" width="0.0186%" height="15" fill="rgb(211,48,49)" fg:x="13130" fg:w="8"/><text x="30.7246%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.01%)</title><rect x="30.4816%" y="853" width="0.0116%" height="15" fill="rgb(223,36,21)" fg:x="13133" fg:w="5"/><text x="30.7316%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.01%)</title><rect x="30.4816%" y="837" width="0.0116%" height="15" fill="rgb(207,123,46)" fg:x="13133" fg:w="5"/><text x="30.7316%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.01%)</title><rect x="30.4816%" y="821" width="0.0116%" height="15" fill="rgb(240,218,32)" fg:x="13133" fg:w="5"/><text x="30.7316%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.04%)</title><rect x="30.4561%" y="1109" width="0.0418%" height="15" fill="rgb(252,5,43)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="30.4561%" y="1093" width="0.0418%" height="15" fill="rgb(252,84,19)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="30.4561%" y="1077" width="0.0418%" height="15" fill="rgb(243,152,39)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="30.4561%" y="1061" width="0.0418%" height="15" fill="rgb(234,160,15)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="30.4561%" y="1045" width="0.0418%" height="15" fill="rgb(237,34,20)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.04%)</title><rect x="30.4561%" y="1029" width="0.0418%" height="15" fill="rgb(229,97,13)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="30.4561%" y="1013" width="0.0418%" height="15" fill="rgb(234,71,50)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="30.4561%" y="997" width="0.0418%" height="15" fill="rgb(253,155,4)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.04%)</title><rect x="30.4561%" y="981" width="0.0418%" height="15" fill="rgb(222,185,37)" fg:x="13122" fg:w="18"/><text x="30.7061%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.04%)</title><rect x="30.4607%" y="965" width="0.0371%" height="15" fill="rgb(251,177,13)" fg:x="13124" fg:w="16"/><text x="30.7107%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.04%)</title><rect x="30.4607%" y="949" width="0.0371%" height="15" fill="rgb(250,179,40)" fg:x="13124" fg:w="16"/><text x="30.7107%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (16 samples, 0.04%)</title><rect x="30.4607%" y="933" width="0.0371%" height="15" fill="rgb(242,44,2)" fg:x="13124" fg:w="16"/><text x="30.7107%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (16 samples, 0.04%)</title><rect x="30.4607%" y="917" width="0.0371%" height="15" fill="rgb(216,177,13)" fg:x="13124" fg:w="16"/><text x="30.7107%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="30.4630%" y="901" width="0.0348%" height="15" fill="rgb(216,106,43)" fg:x="13125" fg:w="15"/><text x="30.7130%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (13 samples, 0.03%)</title><rect x="30.4979%" y="1109" width="0.0302%" height="15" fill="rgb(216,183,2)" fg:x="13140" fg:w="13"/><text x="30.7479%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.03%)</title><rect x="30.4979%" y="1093" width="0.0302%" height="15" fill="rgb(249,75,3)" fg:x="13140" fg:w="13"/><text x="30.7479%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (13 samples, 0.03%)</title><rect x="30.4979%" y="1077" width="0.0302%" height="15" fill="rgb(219,67,39)" fg:x="13140" fg:w="13"/><text x="30.7479%" y="1087.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions::_{{closure}} (13 samples, 0.03%)</title><rect x="30.4979%" y="1061" width="0.0302%" height="15" fill="rgb(253,228,2)" fg:x="13140" fg:w="13"/><text x="30.7479%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11 samples, 0.03%)</title><rect x="30.5025%" y="1045" width="0.0255%" height="15" fill="rgb(235,138,27)" fg:x="13142" fg:w="11"/><text x="30.7525%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11 samples, 0.03%)</title><rect x="30.5025%" y="1029" width="0.0255%" height="15" fill="rgb(236,97,51)" fg:x="13142" fg:w="11"/><text x="30.7525%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.03%)</title><rect x="30.5025%" y="1013" width="0.0255%" height="15" fill="rgb(240,80,30)" fg:x="13142" fg:w="11"/><text x="30.7525%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="30.5025%" y="997" width="0.0255%" height="15" fill="rgb(230,178,19)" fg:x="13142" fg:w="11"/><text x="30.7525%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="30.5141%" y="981" width="0.0139%" height="15" fill="rgb(210,190,27)" fg:x="13147" fg:w="6"/><text x="30.7641%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="30.5141%" y="965" width="0.0139%" height="15" fill="rgb(222,107,31)" fg:x="13147" fg:w="6"/><text x="30.7641%" y="975.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions (123 samples, 0.29%)</title><rect x="30.2449%" y="1125" width="0.2855%" height="15" fill="rgb(216,127,34)" fg:x="13031" fg:w="123"/><text x="30.4949%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.02%)</title><rect x="30.5303%" y="1045" width="0.0162%" height="15" fill="rgb(234,116,52)" fg:x="13154" fg:w="7"/><text x="30.7803%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="30.5303%" y="1029" width="0.0162%" height="15" fill="rgb(222,124,15)" fg:x="13154" fg:w="7"/><text x="30.7803%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="30.5536%" y="981" width="0.0116%" height="15" fill="rgb(231,179,28)" fg:x="13164" fg:w="5"/><text x="30.8036%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.03%)</title><rect x="30.5721%" y="949" width="0.0279%" height="15" fill="rgb(226,93,45)" fg:x="13172" fg:w="12"/><text x="30.8221%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.03%)</title><rect x="30.5721%" y="933" width="0.0279%" height="15" fill="rgb(215,8,51)" fg:x="13172" fg:w="12"/><text x="30.8221%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.03%)</title><rect x="30.5721%" y="917" width="0.0279%" height="15" fill="rgb(223,106,5)" fg:x="13172" fg:w="12"/><text x="30.8221%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.02%)</title><rect x="30.5768%" y="901" width="0.0232%" height="15" fill="rgb(250,191,5)" fg:x="13174" fg:w="10"/><text x="30.8268%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="30.5884%" y="885" width="0.0116%" height="15" fill="rgb(242,132,44)" fg:x="13179" fg:w="5"/><text x="30.8384%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="30.6023%" y="933" width="0.0116%" height="15" fill="rgb(251,152,29)" fg:x="13185" fg:w="5"/><text x="30.8523%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.01%)</title><rect x="30.6023%" y="917" width="0.0116%" height="15" fill="rgb(218,179,5)" fg:x="13185" fg:w="5"/><text x="30.8523%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.01%)</title><rect x="30.6023%" y="901" width="0.0116%" height="15" fill="rgb(227,67,19)" fg:x="13185" fg:w="5"/><text x="30.8523%" y="911.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (21 samples, 0.05%)</title><rect x="30.5721%" y="981" width="0.0487%" height="15" fill="rgb(233,119,31)" fg:x="13172" fg:w="21"/><text x="30.8221%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.05%)</title><rect x="30.5721%" y="965" width="0.0487%" height="15" fill="rgb(241,120,22)" fg:x="13172" fg:w="21"/><text x="30.8221%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (8 samples, 0.02%)</title><rect x="30.6023%" y="949" width="0.0186%" height="15" fill="rgb(224,102,30)" fg:x="13185" fg:w="8"/><text x="30.8523%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (5 samples, 0.01%)</title><rect x="30.6209%" y="981" width="0.0116%" height="15" fill="rgb(210,164,37)" fg:x="13193" fg:w="5"/><text x="30.8709%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (10 samples, 0.02%)</title><rect x="30.6464%" y="981" width="0.0232%" height="15" fill="rgb(226,191,16)" fg:x="13204" fg:w="10"/><text x="30.8964%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.02%)</title><rect x="30.6510%" y="965" width="0.0186%" height="15" fill="rgb(214,40,45)" fg:x="13206" fg:w="8"/><text x="30.9010%" y="975.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_handles (61 samples, 0.14%)</title><rect x="30.5303%" y="1125" width="0.1416%" height="15" fill="rgb(244,29,26)" fg:x="13154" fg:w="61"/><text x="30.7803%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (61 samples, 0.14%)</title><rect x="30.5303%" y="1109" width="0.1416%" height="15" fill="rgb(216,16,5)" fg:x="13154" fg:w="61"/><text x="30.7803%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (61 samples, 0.14%)</title><rect x="30.5303%" y="1093" width="0.1416%" height="15" fill="rgb(249,76,35)" fg:x="13154" fg:w="61"/><text x="30.7803%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (61 samples, 0.14%)</title><rect x="30.5303%" y="1077" width="0.1416%" height="15" fill="rgb(207,11,44)" fg:x="13154" fg:w="61"/><text x="30.7803%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (61 samples, 0.14%)</title><rect x="30.5303%" y="1061" width="0.1416%" height="15" fill="rgb(228,190,49)" fg:x="13154" fg:w="61"/><text x="30.7803%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (54 samples, 0.13%)</title><rect x="30.5466%" y="1045" width="0.1253%" height="15" fill="rgb(214,173,12)" fg:x="13161" fg:w="54"/><text x="30.7966%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (54 samples, 0.13%)</title><rect x="30.5466%" y="1029" width="0.1253%" height="15" fill="rgb(218,26,35)" fg:x="13161" fg:w="54"/><text x="30.7966%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (54 samples, 0.13%)</title><rect x="30.5466%" y="1013" width="0.1253%" height="15" fill="rgb(220,200,19)" fg:x="13161" fg:w="54"/><text x="30.7966%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (54 samples, 0.13%)</title><rect x="30.5466%" y="997" width="0.1253%" height="15" fill="rgb(239,95,49)" fg:x="13161" fg:w="54"/><text x="30.7966%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.01%)</title><rect x="30.6719%" y="1045" width="0.0116%" height="15" fill="rgb(235,85,53)" fg:x="13215" fg:w="5"/><text x="30.9219%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="30.6719%" y="1029" width="0.0116%" height="15" fill="rgb(233,133,31)" fg:x="13215" fg:w="5"/><text x="30.9219%" y="1039.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (6 samples, 0.01%)</title><rect x="30.6835%" y="981" width="0.0139%" height="15" fill="rgb(218,25,20)" fg:x="13220" fg:w="6"/><text x="30.9335%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="30.6835%" y="965" width="0.0139%" height="15" fill="rgb(252,210,38)" fg:x="13220" fg:w="6"/><text x="30.9335%" y="975.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_instantiations (13 samples, 0.03%)</title><rect x="30.6719%" y="1125" width="0.0302%" height="15" fill="rgb(242,134,21)" fg:x="13215" fg:w="13"/><text x="30.9219%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (13 samples, 0.03%)</title><rect x="30.6719%" y="1109" width="0.0302%" height="15" fill="rgb(213,28,48)" fg:x="13215" fg:w="13"/><text x="30.9219%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.03%)</title><rect x="30.6719%" y="1093" width="0.0302%" height="15" fill="rgb(250,196,2)" fg:x="13215" fg:w="13"/><text x="30.9219%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="30.6719%" y="1077" width="0.0302%" height="15" fill="rgb(227,5,17)" fg:x="13215" fg:w="13"/><text x="30.9219%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="30.6719%" y="1061" width="0.0302%" height="15" fill="rgb(221,226,24)" fg:x="13215" fg:w="13"/><text x="30.9219%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.02%)</title><rect x="30.6835%" y="1045" width="0.0186%" height="15" fill="rgb(211,5,48)" fg:x="13220" fg:w="8"/><text x="30.9335%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="30.6835%" y="1029" width="0.0186%" height="15" fill="rgb(219,150,6)" fg:x="13220" fg:w="8"/><text x="30.9335%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="30.6835%" y="1013" width="0.0186%" height="15" fill="rgb(251,46,16)" fg:x="13220" fg:w="8"/><text x="30.9335%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (8 samples, 0.02%)</title><rect x="30.6835%" y="997" width="0.0186%" height="15" fill="rgb(220,204,40)" fg:x="13220" fg:w="8"/><text x="30.9335%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.03%)</title><rect x="30.7021%" y="1045" width="0.0255%" height="15" fill="rgb(211,85,2)" fg:x="13228" fg:w="11"/><text x="30.9521%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.03%)</title><rect x="30.7021%" y="1029" width="0.0255%" height="15" fill="rgb(229,17,7)" fg:x="13228" fg:w="11"/><text x="30.9521%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.02%)</title><rect x="30.7114%" y="1013" width="0.0162%" height="15" fill="rgb(239,72,28)" fg:x="13232" fg:w="7"/><text x="30.9614%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.02%)</title><rect x="30.7114%" y="997" width="0.0162%" height="15" fill="rgb(230,47,54)" fg:x="13232" fg:w="7"/><text x="30.9614%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.02%)</title><rect x="30.7114%" y="981" width="0.0162%" height="15" fill="rgb(214,50,8)" fg:x="13232" fg:w="7"/><text x="30.9614%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="30.7114%" y="965" width="0.0162%" height="15" fill="rgb(216,198,43)" fg:x="13232" fg:w="7"/><text x="30.9614%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="30.7741%" y="885" width="0.0139%" height="15" fill="rgb(234,20,35)" fg:x="13259" fg:w="6"/><text x="31.0241%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="30.7532%" y="949" width="0.0418%" height="15" fill="rgb(254,45,19)" fg:x="13250" fg:w="18"/><text x="31.0032%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="30.7532%" y="933" width="0.0418%" height="15" fill="rgb(219,14,44)" fg:x="13250" fg:w="18"/><text x="31.0032%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="30.7532%" y="917" width="0.0418%" height="15" fill="rgb(217,220,26)" fg:x="13250" fg:w="18"/><text x="31.0032%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.03%)</title><rect x="30.7624%" y="901" width="0.0325%" height="15" fill="rgb(213,158,28)" fg:x="13254" fg:w="14"/><text x="31.0124%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="30.8065%" y="837" width="0.0162%" height="15" fill="rgb(252,51,52)" fg:x="13273" fg:w="7"/><text x="31.0565%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="30.7996%" y="885" width="0.0371%" height="15" fill="rgb(246,89,16)" fg:x="13270" fg:w="16"/><text x="31.0496%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="30.7996%" y="869" width="0.0371%" height="15" fill="rgb(216,158,49)" fg:x="13270" fg:w="16"/><text x="31.0496%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="30.7996%" y="853" width="0.0371%" height="15" fill="rgb(236,107,19)" fg:x="13270" fg:w="16"/><text x="31.0496%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="30.8228%" y="837" width="0.0139%" height="15" fill="rgb(228,185,30)" fg:x="13280" fg:w="6"/><text x="31.0728%" y="847.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (41 samples, 0.10%)</title><rect x="30.7532%" y="981" width="0.0952%" height="15" fill="rgb(246,134,8)" fg:x="13250" fg:w="41"/><text x="31.0032%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.10%)</title><rect x="30.7532%" y="965" width="0.0952%" height="15" fill="rgb(214,143,50)" fg:x="13250" fg:w="41"/><text x="31.0032%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.05%)</title><rect x="30.7996%" y="949" width="0.0487%" height="15" fill="rgb(228,75,8)" fg:x="13270" fg:w="21"/><text x="31.0496%" y="959.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (21 samples, 0.05%)</title><rect x="30.7996%" y="933" width="0.0487%" height="15" fill="rgb(207,175,4)" fg:x="13270" fg:w="21"/><text x="31.0496%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (21 samples, 0.05%)</title><rect x="30.7996%" y="917" width="0.0487%" height="15" fill="rgb(205,108,24)" fg:x="13270" fg:w="21"/><text x="31.0496%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.05%)</title><rect x="30.7996%" y="901" width="0.0487%" height="15" fill="rgb(244,120,49)" fg:x="13270" fg:w="21"/><text x="31.0496%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.01%)</title><rect x="30.8367%" y="885" width="0.0116%" height="15" fill="rgb(223,47,38)" fg:x="13286" fg:w="5"/><text x="31.0867%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.03%)</title><rect x="30.8669%" y="965" width="0.0255%" height="15" fill="rgb(229,179,11)" fg:x="13299" fg:w="11"/><text x="31.1169%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (16 samples, 0.04%)</title><rect x="30.8622%" y="981" width="0.0371%" height="15" fill="rgb(231,122,1)" fg:x="13297" fg:w="16"/><text x="31.1122%" y="991.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (86 samples, 0.20%)</title><rect x="30.7021%" y="1125" width="0.1996%" height="15" fill="rgb(245,119,9)" fg:x="13228" fg:w="86"/><text x="30.9521%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (86 samples, 0.20%)</title><rect x="30.7021%" y="1109" width="0.1996%" height="15" fill="rgb(241,163,25)" fg:x="13228" fg:w="86"/><text x="30.9521%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (86 samples, 0.20%)</title><rect x="30.7021%" y="1093" width="0.1996%" height="15" fill="rgb(217,214,3)" fg:x="13228" fg:w="86"/><text x="30.9521%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (86 samples, 0.20%)</title><rect x="30.7021%" y="1077" width="0.1996%" height="15" fill="rgb(240,86,28)" fg:x="13228" fg:w="86"/><text x="30.9521%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (86 samples, 0.20%)</title><rect x="30.7021%" y="1061" width="0.1996%" height="15" fill="rgb(215,47,9)" fg:x="13228" fg:w="86"/><text x="30.9521%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (75 samples, 0.17%)</title><rect x="30.7276%" y="1045" width="0.1741%" height="15" fill="rgb(252,25,45)" fg:x="13239" fg:w="75"/><text x="30.9776%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (75 samples, 0.17%)</title><rect x="30.7276%" y="1029" width="0.1741%" height="15" fill="rgb(251,164,9)" fg:x="13239" fg:w="75"/><text x="30.9776%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (75 samples, 0.17%)</title><rect x="30.7276%" y="1013" width="0.1741%" height="15" fill="rgb(233,194,0)" fg:x="13239" fg:w="75"/><text x="30.9776%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (75 samples, 0.17%)</title><rect x="30.7276%" y="997" width="0.1741%" height="15" fill="rgb(249,111,24)" fg:x="13239" fg:w="75"/><text x="30.9776%" y="1007.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_module_handles (11 samples, 0.03%)</title><rect x="30.9017%" y="1125" width="0.0255%" height="15" fill="rgb(250,223,3)" fg:x="13314" fg:w="11"/><text x="31.1517%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (11 samples, 0.03%)</title><rect x="30.9017%" y="1109" width="0.0255%" height="15" fill="rgb(236,178,37)" fg:x="13314" fg:w="11"/><text x="31.1517%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (11 samples, 0.03%)</title><rect x="30.9017%" y="1093" width="0.0255%" height="15" fill="rgb(241,158,50)" fg:x="13314" fg:w="11"/><text x="31.1517%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="30.9017%" y="1077" width="0.0255%" height="15" fill="rgb(213,121,41)" fg:x="13314" fg:w="11"/><text x="31.1517%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="30.9017%" y="1061" width="0.0255%" height="15" fill="rgb(240,92,3)" fg:x="13314" fg:w="11"/><text x="31.1517%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.02%)</title><rect x="30.9110%" y="1045" width="0.0162%" height="15" fill="rgb(205,123,3)" fg:x="13318" fg:w="7"/><text x="31.1610%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="30.9110%" y="1029" width="0.0162%" height="15" fill="rgb(205,97,47)" fg:x="13318" fg:w="7"/><text x="31.1610%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="30.9110%" y="1013" width="0.0162%" height="15" fill="rgb(247,152,14)" fg:x="13318" fg:w="7"/><text x="31.1610%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (7 samples, 0.02%)</title><rect x="30.9110%" y="997" width="0.0162%" height="15" fill="rgb(248,195,53)" fg:x="13318" fg:w="7"/><text x="31.1610%" y="1007.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.03%)</title><rect x="30.9272%" y="1045" width="0.0348%" height="15" fill="rgb(226,201,16)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.03%)</title><rect x="30.9272%" y="1029" width="0.0348%" height="15" fill="rgb(205,98,0)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="1039.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (15 samples, 0.03%)</title><rect x="30.9272%" y="1013" width="0.0348%" height="15" fill="rgb(214,191,48)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (15 samples, 0.03%)</title><rect x="30.9272%" y="997" width="0.0348%" height="15" fill="rgb(237,112,39)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (15 samples, 0.03%)</title><rect x="30.9272%" y="981" width="0.0348%" height="15" fill="rgb(247,203,27)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="991.50"></text></g><g><title>core::hash::Hash::hash_slice (15 samples, 0.03%)</title><rect x="30.9272%" y="965" width="0.0348%" height="15" fill="rgb(235,124,28)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="975.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (15 samples, 0.03%)</title><rect x="30.9272%" y="949" width="0.0348%" height="15" fill="rgb(208,207,46)" fg:x="13325" fg:w="15"/><text x="31.1772%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (8 samples, 0.02%)</title><rect x="30.9435%" y="933" width="0.0186%" height="15" fill="rgb(234,176,4)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="943.50"></text></g><g><title>core::hash::Hasher::write_isize (8 samples, 0.02%)</title><rect x="30.9435%" y="917" width="0.0186%" height="15" fill="rgb(230,133,28)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.02%)</title><rect x="30.9435%" y="901" width="0.0186%" height="15" fill="rgb(211,137,40)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="30.9435%" y="885" width="0.0186%" height="15" fill="rgb(254,35,13)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="30.9435%" y="869" width="0.0186%" height="15" fill="rgb(225,49,51)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="30.9435%" y="853" width="0.0186%" height="15" fill="rgb(251,10,15)" fg:x="13332" fg:w="8"/><text x="31.1935%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.9806%" y="949" width="0.0209%" height="15" fill="rgb(228,207,15)" fg:x="13348" fg:w="9"/><text x="31.2306%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.9806%" y="933" width="0.0209%" height="15" fill="rgb(241,99,19)" fg:x="13348" fg:w="9"/><text x="31.2306%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="30.9806%" y="917" width="0.0209%" height="15" fill="rgb(207,104,49)" fg:x="13348" fg:w="9"/><text x="31.2306%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="30.9899%" y="901" width="0.0116%" height="15" fill="rgb(234,99,18)" fg:x="13352" fg:w="5"/><text x="31.2399%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="31.0201%" y="853" width="0.0139%" height="15" fill="rgb(213,191,49)" fg:x="13365" fg:w="6"/><text x="31.2701%" y="863.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="31.0201%" y="837" width="0.0139%" height="15" fill="rgb(210,226,19)" fg:x="13365" fg:w="6"/><text x="31.2701%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 0.03%)</title><rect x="31.0410%" y="853" width="0.0279%" height="15" fill="rgb(229,97,18)" fg:x="13374" fg:w="12"/><text x="31.2910%" y="863.50"></text></g><g><title>core::hash::Hasher::write_isize (12 samples, 0.03%)</title><rect x="31.0410%" y="837" width="0.0279%" height="15" fill="rgb(211,167,15)" fg:x="13374" fg:w="12"/><text x="31.2910%" y="847.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.03%)</title><rect x="31.0410%" y="821" width="0.0279%" height="15" fill="rgb(210,169,34)" fg:x="13374" fg:w="12"/><text x="31.2910%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="31.0456%" y="805" width="0.0232%" height="15" fill="rgb(241,121,31)" fg:x="13376" fg:w="10"/><text x="31.2956%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="31.0456%" y="789" width="0.0232%" height="15" fill="rgb(232,40,11)" fg:x="13376" fg:w="10"/><text x="31.2956%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="31.0456%" y="773" width="0.0232%" height="15" fill="rgb(205,86,26)" fg:x="13376" fg:w="10"/><text x="31.2956%" y="783.50"></text></g><g><title>core::hash::Hash::hash_slice (27 samples, 0.06%)</title><rect x="31.0085%" y="885" width="0.0627%" height="15" fill="rgb(231,126,28)" fg:x="13360" fg:w="27"/><text x="31.2585%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (24 samples, 0.06%)</title><rect x="31.0154%" y="869" width="0.0557%" height="15" fill="rgb(219,221,18)" fg:x="13363" fg:w="24"/><text x="31.2654%" y="879.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (42 samples, 0.10%)</title><rect x="30.9806%" y="981" width="0.0975%" height="15" fill="rgb(211,40,0)" fg:x="13348" fg:w="42"/><text x="31.2306%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (42 samples, 0.10%)</title><rect x="30.9806%" y="965" width="0.0975%" height="15" fill="rgb(239,85,43)" fg:x="13348" fg:w="42"/><text x="31.2306%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.07%)</title><rect x="31.0062%" y="949" width="0.0720%" height="15" fill="rgb(231,55,21)" fg:x="13359" fg:w="31"/><text x="31.2562%" y="959.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (31 samples, 0.07%)</title><rect x="31.0062%" y="933" width="0.0720%" height="15" fill="rgb(225,184,43)" fg:x="13359" fg:w="31"/><text x="31.2562%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (31 samples, 0.07%)</title><rect x="31.0062%" y="917" width="0.0720%" height="15" fill="rgb(251,158,41)" fg:x="13359" fg:w="31"/><text x="31.2562%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (30 samples, 0.07%)</title><rect x="31.0085%" y="901" width="0.0696%" height="15" fill="rgb(234,159,37)" fg:x="13360" fg:w="30"/><text x="31.2585%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.01%)</title><rect x="31.0897%" y="981" width="0.0116%" height="15" fill="rgb(216,204,22)" fg:x="13395" fg:w="5"/><text x="31.3397%" y="991.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_signatures (77 samples, 0.18%)</title><rect x="30.9272%" y="1125" width="0.1787%" height="15" fill="rgb(214,17,3)" fg:x="13325" fg:w="77"/><text x="31.1772%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (77 samples, 0.18%)</title><rect x="30.9272%" y="1109" width="0.1787%" height="15" fill="rgb(212,111,17)" fg:x="13325" fg:w="77"/><text x="31.1772%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (77 samples, 0.18%)</title><rect x="30.9272%" y="1093" width="0.1787%" height="15" fill="rgb(221,157,24)" fg:x="13325" fg:w="77"/><text x="31.1772%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (77 samples, 0.18%)</title><rect x="30.9272%" y="1077" width="0.1787%" height="15" fill="rgb(252,16,13)" fg:x="13325" fg:w="77"/><text x="31.1772%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (77 samples, 0.18%)</title><rect x="30.9272%" y="1061" width="0.1787%" height="15" fill="rgb(221,62,2)" fg:x="13325" fg:w="77"/><text x="31.1772%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (59 samples, 0.14%)</title><rect x="30.9690%" y="1045" width="0.1369%" height="15" fill="rgb(247,87,22)" fg:x="13343" fg:w="59"/><text x="31.2190%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (59 samples, 0.14%)</title><rect x="30.9690%" y="1029" width="0.1369%" height="15" fill="rgb(215,73,9)" fg:x="13343" fg:w="59"/><text x="31.2190%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (59 samples, 0.14%)</title><rect x="30.9690%" y="1013" width="0.1369%" height="15" fill="rgb(207,175,33)" fg:x="13343" fg:w="59"/><text x="31.2190%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (59 samples, 0.14%)</title><rect x="30.9690%" y="997" width="0.1369%" height="15" fill="rgb(243,129,54)" fg:x="13343" fg:w="59"/><text x="31.2190%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.01%)</title><rect x="31.1152%" y="1045" width="0.0139%" height="15" fill="rgb(227,119,45)" fg:x="13406" fg:w="6"/><text x="31.3652%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="31.1152%" y="1029" width="0.0139%" height="15" fill="rgb(205,109,36)" fg:x="13406" fg:w="6"/><text x="31.3652%" y="1039.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (22 samples, 0.05%)</title><rect x="31.1060%" y="1109" width="0.0511%" height="15" fill="rgb(205,6,39)" fg:x="13402" fg:w="22"/><text x="31.3560%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (19 samples, 0.04%)</title><rect x="31.1129%" y="1093" width="0.0441%" height="15" fill="rgb(221,32,16)" fg:x="13405" fg:w="19"/><text x="31.3629%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (19 samples, 0.04%)</title><rect x="31.1129%" y="1077" width="0.0441%" height="15" fill="rgb(228,144,50)" fg:x="13405" fg:w="19"/><text x="31.3629%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.04%)</title><rect x="31.1129%" y="1061" width="0.0441%" height="15" fill="rgb(229,201,53)" fg:x="13405" fg:w="19"/><text x="31.3629%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.03%)</title><rect x="31.1292%" y="1045" width="0.0279%" height="15" fill="rgb(249,153,27)" fg:x="13412" fg:w="12"/><text x="31.3792%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="31.1570%" y="1109" width="0.0116%" height="15" fill="rgb(227,106,25)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="31.1570%" y="1093" width="0.0116%" height="15" fill="rgb(230,65,29)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="31.1570%" y="1077" width="0.0116%" height="15" fill="rgb(221,57,46)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="31.1570%" y="1061" width="0.0116%" height="15" fill="rgb(229,161,17)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="31.1570%" y="1045" width="0.0116%" height="15" fill="rgb(222,213,11)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="31.1570%" y="1029" width="0.0116%" height="15" fill="rgb(235,35,13)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="31.1570%" y="1013" width="0.0116%" height="15" fill="rgb(233,158,34)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="31.1570%" y="997" width="0.0116%" height="15" fill="rgb(215,151,48)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.01%)</title><rect x="31.1570%" y="981" width="0.0116%" height="15" fill="rgb(229,84,14)" fg:x="13424" fg:w="5"/><text x="31.4070%" y="991.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_definitions (32 samples, 0.07%)</title><rect x="31.1060%" y="1125" width="0.0743%" height="15" fill="rgb(229,68,14)" fg:x="13402" fg:w="32"/><text x="31.3560%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (5 samples, 0.01%)</title><rect x="31.1686%" y="1109" width="0.0116%" height="15" fill="rgb(243,106,26)" fg:x="13429" fg:w="5"/><text x="31.4186%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="31.1686%" y="1093" width="0.0116%" height="15" fill="rgb(206,45,38)" fg:x="13429" fg:w="5"/><text x="31.4186%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (5 samples, 0.01%)</title><rect x="31.1686%" y="1077" width="0.0116%" height="15" fill="rgb(226,6,15)" fg:x="13429" fg:w="5"/><text x="31.4186%" y="1087.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_definitions::_{{closure}} (5 samples, 0.01%)</title><rect x="31.1686%" y="1061" width="0.0116%" height="15" fill="rgb(232,22,54)" fg:x="13429" fg:w="5"/><text x="31.4186%" y="1071.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (429 samples, 1.00%)</title><rect x="30.1961%" y="1141" width="0.9957%" height="15" fill="rgb(229,222,32)" fg:x="13010" fg:w="429"/><text x="30.4461%" y="1151.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_handles (5 samples, 0.01%)</title><rect x="31.1802%" y="1125" width="0.0116%" height="15" fill="rgb(228,62,29)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (5 samples, 0.01%)</title><rect x="31.1802%" y="1109" width="0.0116%" height="15" fill="rgb(251,103,34)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.01%)</title><rect x="31.1802%" y="1093" width="0.0116%" height="15" fill="rgb(233,12,30)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="31.1802%" y="1077" width="0.0116%" height="15" fill="rgb(238,52,0)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="31.1802%" y="1061" width="0.0116%" height="15" fill="rgb(223,98,5)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.01%)</title><rect x="31.1802%" y="1045" width="0.0116%" height="15" fill="rgb(228,75,37)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="31.1802%" y="1029" width="0.0116%" height="15" fill="rgb(205,115,49)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="31.1802%" y="1013" width="0.0116%" height="15" fill="rgb(250,154,43)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (5 samples, 0.01%)</title><rect x="31.1802%" y="997" width="0.0116%" height="15" fill="rgb(226,43,29)" fg:x="13434" fg:w="5"/><text x="31.4302%" y="1007.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (16 samples, 0.04%)</title><rect x="31.1918%" y="1093" width="0.0371%" height="15" fill="rgb(249,228,39)" fg:x="13439" fg:w="16"/><text x="31.4418%" y="1103.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (5 samples, 0.01%)</title><rect x="31.2174%" y="1077" width="0.0116%" height="15" fill="rgb(216,79,43)" fg:x="13450" fg:w="5"/><text x="31.4674%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.01%)</title><rect x="31.2290%" y="1061" width="0.0116%" height="15" fill="rgb(228,95,12)" fg:x="13455" fg:w="5"/><text x="31.4790%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="31.2290%" y="1045" width="0.0116%" height="15" fill="rgb(249,221,15)" fg:x="13455" fg:w="5"/><text x="31.4790%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="31.2522%" y="997" width="0.0186%" height="15" fill="rgb(233,34,13)" fg:x="13465" fg:w="8"/><text x="31.5022%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="31.2591%" y="981" width="0.0116%" height="15" fill="rgb(214,103,39)" fg:x="13468" fg:w="5"/><text x="31.5091%" y="991.50"></text></g><g><title>core::mem::swap (7 samples, 0.02%)</title><rect x="31.2707%" y="997" width="0.0162%" height="15" fill="rgb(251,126,39)" fg:x="13473" fg:w="7"/><text x="31.5207%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.02%)</title><rect x="31.2707%" y="981" width="0.0162%" height="15" fill="rgb(214,216,36)" fg:x="13473" fg:w="7"/><text x="31.5207%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (5 samples, 0.01%)</title><rect x="31.2870%" y="997" width="0.0116%" height="15" fill="rgb(220,221,8)" fg:x="13480" fg:w="5"/><text x="31.5370%" y="1007.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="31.2870%" y="981" width="0.0116%" height="15" fill="rgb(240,216,3)" fg:x="13480" fg:w="5"/><text x="31.5370%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (5 samples, 0.01%)</title><rect x="31.2870%" y="965" width="0.0116%" height="15" fill="rgb(232,218,17)" fg:x="13480" fg:w="5"/><text x="31.5370%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.01%)</title><rect x="31.2870%" y="949" width="0.0116%" height="15" fill="rgb(229,163,45)" fg:x="13480" fg:w="5"/><text x="31.5370%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="31.2986%" y="965" width="0.0209%" height="15" fill="rgb(231,110,42)" fg:x="13485" fg:w="9"/><text x="31.5486%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="31.2986%" y="949" width="0.0209%" height="15" fill="rgb(208,170,48)" fg:x="13485" fg:w="9"/><text x="31.5486%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="31.2986%" y="933" width="0.0209%" height="15" fill="rgb(239,116,25)" fg:x="13485" fg:w="9"/><text x="31.5486%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="31.3056%" y="917" width="0.0139%" height="15" fill="rgb(219,200,50)" fg:x="13488" fg:w="6"/><text x="31.5556%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="31.3079%" y="901" width="0.0116%" height="15" fill="rgb(245,200,0)" fg:x="13489" fg:w="5"/><text x="31.5579%" y="911.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (15 samples, 0.03%)</title><rect x="31.2986%" y="997" width="0.0348%" height="15" fill="rgb(245,119,33)" fg:x="13485" fg:w="15"/><text x="31.5486%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="31.2986%" y="981" width="0.0348%" height="15" fill="rgb(231,125,12)" fg:x="13485" fg:w="15"/><text x="31.5486%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.01%)</title><rect x="31.3218%" y="965" width="0.0116%" height="15" fill="rgb(216,96,41)" fg:x="13495" fg:w="5"/><text x="31.5718%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.01%)</title><rect x="31.3218%" y="949" width="0.0116%" height="15" fill="rgb(248,43,45)" fg:x="13495" fg:w="5"/><text x="31.5718%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="31.3218%" y="933" width="0.0116%" height="15" fill="rgb(217,222,7)" fg:x="13495" fg:w="5"/><text x="31.5718%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="31.3218%" y="917" width="0.0116%" height="15" fill="rgb(233,28,6)" fg:x="13495" fg:w="5"/><text x="31.5718%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="31.3218%" y="901" width="0.0116%" height="15" fill="rgb(231,218,15)" fg:x="13495" fg:w="5"/><text x="31.5718%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (6 samples, 0.01%)</title><rect x="31.3404%" y="997" width="0.0139%" height="15" fill="rgb(226,171,48)" fg:x="13503" fg:w="6"/><text x="31.5904%" y="1007.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (5 samples, 0.01%)</title><rect x="31.3775%" y="949" width="0.0116%" height="15" fill="rgb(235,201,9)" fg:x="13519" fg:w="5"/><text x="31.6275%" y="959.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="31.3938%" y="901" width="0.0116%" height="15" fill="rgb(217,80,15)" fg:x="13526" fg:w="5"/><text x="31.6438%" y="911.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="31.3938%" y="885" width="0.0116%" height="15" fill="rgb(219,152,8)" fg:x="13526" fg:w="5"/><text x="31.6438%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.03%)</title><rect x="31.3891%" y="933" width="0.0279%" height="15" fill="rgb(243,107,38)" fg:x="13524" fg:w="12"/><text x="31.6391%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.03%)</title><rect x="31.3891%" y="917" width="0.0279%" height="15" fill="rgb(231,17,5)" fg:x="13524" fg:w="12"/><text x="31.6391%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (30 samples, 0.07%)</title><rect x="31.3613%" y="997" width="0.0696%" height="15" fill="rgb(209,25,54)" fg:x="13512" fg:w="30"/><text x="31.6113%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (29 samples, 0.07%)</title><rect x="31.3636%" y="981" width="0.0673%" height="15" fill="rgb(219,0,2)" fg:x="13513" fg:w="29"/><text x="31.6136%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (24 samples, 0.06%)</title><rect x="31.3752%" y="965" width="0.0557%" height="15" fill="rgb(246,9,5)" fg:x="13518" fg:w="24"/><text x="31.6252%" y="975.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.04%)</title><rect x="31.3891%" y="949" width="0.0418%" height="15" fill="rgb(226,159,4)" fg:x="13524" fg:w="18"/><text x="31.6391%" y="959.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (105 samples, 0.24%)</title><rect x="31.1918%" y="1109" width="0.2437%" height="15" fill="rgb(219,175,34)" fg:x="13439" fg:w="105"/><text x="31.4418%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (89 samples, 0.21%)</title><rect x="31.2290%" y="1093" width="0.2066%" height="15" fill="rgb(236,10,46)" fg:x="13455" fg:w="89"/><text x="31.4790%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (89 samples, 0.21%)</title><rect x="31.2290%" y="1077" width="0.2066%" height="15" fill="rgb(240,211,16)" fg:x="13455" fg:w="89"/><text x="31.4790%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (84 samples, 0.19%)</title><rect x="31.2406%" y="1061" width="0.1950%" height="15" fill="rgb(205,3,43)" fg:x="13460" fg:w="84"/><text x="31.4906%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (84 samples, 0.19%)</title><rect x="31.2406%" y="1045" width="0.1950%" height="15" fill="rgb(245,7,22)" fg:x="13460" fg:w="84"/><text x="31.4906%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (84 samples, 0.19%)</title><rect x="31.2406%" y="1029" width="0.1950%" height="15" fill="rgb(239,132,32)" fg:x="13460" fg:w="84"/><text x="31.4906%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (84 samples, 0.19%)</title><rect x="31.2406%" y="1013" width="0.1950%" height="15" fill="rgb(228,202,34)" fg:x="13460" fg:w="84"/><text x="31.4906%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="31.4355%" y="933" width="0.0116%" height="15" fill="rgb(254,200,22)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.01%)</title><rect x="31.4355%" y="917" width="0.0116%" height="15" fill="rgb(219,10,39)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="31.4355%" y="901" width="0.0116%" height="15" fill="rgb(226,210,39)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="31.4355%" y="885" width="0.0116%" height="15" fill="rgb(208,219,16)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="31.4355%" y="869" width="0.0116%" height="15" fill="rgb(216,158,51)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="31.4355%" y="853" width="0.0116%" height="15" fill="rgb(233,14,44)" fg:x="13544" fg:w="5"/><text x="31.6855%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="31.4355%" y="965" width="0.0162%" height="15" fill="rgb(237,97,39)" fg:x="13544" fg:w="7"/><text x="31.6855%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.02%)</title><rect x="31.4355%" y="949" width="0.0162%" height="15" fill="rgb(218,198,43)" fg:x="13544" fg:w="7"/><text x="31.6855%" y="959.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (115 samples, 0.27%)</title><rect x="31.1918%" y="1125" width="0.2669%" height="15" fill="rgb(231,104,20)" fg:x="13439" fg:w="115"/><text x="31.4418%" y="1135.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (10 samples, 0.02%)</title><rect x="31.4355%" y="1109" width="0.0232%" height="15" fill="rgb(254,36,13)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.02%)</title><rect x="31.4355%" y="1093" width="0.0232%" height="15" fill="rgb(248,14,50)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="31.4355%" y="1077" width="0.0232%" height="15" fill="rgb(217,107,29)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1087.50"></text></g><g><title>core::iter::adapters::process_results (10 samples, 0.02%)</title><rect x="31.4355%" y="1061" width="0.0232%" height="15" fill="rgb(251,169,33)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (10 samples, 0.02%)</title><rect x="31.4355%" y="1045" width="0.0232%" height="15" fill="rgb(217,108,32)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.02%)</title><rect x="31.4355%" y="1029" width="0.0232%" height="15" fill="rgb(219,66,42)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="31.4355%" y="1013" width="0.0232%" height="15" fill="rgb(206,180,7)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="31.4355%" y="997" width="0.0232%" height="15" fill="rgb(208,226,31)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="31.4355%" y="981" width="0.0232%" height="15" fill="rgb(218,26,49)" fg:x="13544" fg:w="10"/><text x="31.6855%" y="991.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="31.4611%" y="1013" width="0.0186%" height="15" fill="rgb(233,197,48)" fg:x="13555" fg:w="8"/><text x="31.7111%" y="1023.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="31.4611%" y="1061" width="0.0325%" height="15" fill="rgb(252,181,51)" fg:x="13555" fg:w="14"/><text x="31.7111%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="31.4611%" y="1045" width="0.0325%" height="15" fill="rgb(253,90,19)" fg:x="13555" fg:w="14"/><text x="31.7111%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.03%)</title><rect x="31.4611%" y="1029" width="0.0325%" height="15" fill="rgb(215,171,30)" fg:x="13555" fg:w="14"/><text x="31.7111%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (5 samples, 0.01%)</title><rect x="31.5005%" y="981" width="0.0116%" height="15" fill="rgb(214,222,9)" fg:x="13572" fg:w="5"/><text x="31.7505%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (8 samples, 0.02%)</title><rect x="31.5005%" y="997" width="0.0186%" height="15" fill="rgb(223,3,22)" fg:x="13572" fg:w="8"/><text x="31.7505%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.03%)</title><rect x="31.4936%" y="1061" width="0.0302%" height="15" fill="rgb(225,196,46)" fg:x="13569" fg:w="13"/><text x="31.7436%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (13 samples, 0.03%)</title><rect x="31.4936%" y="1045" width="0.0302%" height="15" fill="rgb(209,110,37)" fg:x="13569" fg:w="13"/><text x="31.7436%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.03%)</title><rect x="31.4936%" y="1029" width="0.0302%" height="15" fill="rgb(249,89,12)" fg:x="13569" fg:w="13"/><text x="31.7436%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (11 samples, 0.03%)</title><rect x="31.4982%" y="1013" width="0.0255%" height="15" fill="rgb(226,27,33)" fg:x="13571" fg:w="11"/><text x="31.7482%" y="1023.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.5261%" y="1045" width="0.0139%" height="15" fill="rgb(213,82,22)" fg:x="13583" fg:w="6"/><text x="31.7761%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.5261%" y="1029" width="0.0139%" height="15" fill="rgb(248,140,0)" fg:x="13583" fg:w="6"/><text x="31.7761%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.01%)</title><rect x="31.5261%" y="1013" width="0.0139%" height="15" fill="rgb(228,106,3)" fg:x="13583" fg:w="6"/><text x="31.7761%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="31.5469%" y="981" width="0.0116%" height="15" fill="rgb(209,23,37)" fg:x="13592" fg:w="5"/><text x="31.7969%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="31.5469%" y="965" width="0.0116%" height="15" fill="rgb(241,93,50)" fg:x="13592" fg:w="5"/><text x="31.7969%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="31.5469%" y="949" width="0.0116%" height="15" fill="rgb(253,46,43)" fg:x="13592" fg:w="5"/><text x="31.7969%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="31.5469%" y="933" width="0.0116%" height="15" fill="rgb(226,206,43)" fg:x="13592" fg:w="5"/><text x="31.7969%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (24 samples, 0.06%)</title><rect x="31.5400%" y="1029" width="0.0557%" height="15" fill="rgb(217,54,7)" fg:x="13589" fg:w="24"/><text x="31.7900%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (21 samples, 0.05%)</title><rect x="31.5469%" y="1013" width="0.0487%" height="15" fill="rgb(223,5,52)" fg:x="13592" fg:w="21"/><text x="31.7969%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.05%)</title><rect x="31.5469%" y="997" width="0.0487%" height="15" fill="rgb(206,52,46)" fg:x="13592" fg:w="21"/><text x="31.7969%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.04%)</title><rect x="31.5585%" y="981" width="0.0371%" height="15" fill="rgb(253,136,11)" fg:x="13597" fg:w="16"/><text x="31.8085%" y="991.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (16 samples, 0.04%)</title><rect x="31.5585%" y="965" width="0.0371%" height="15" fill="rgb(208,106,33)" fg:x="13597" fg:w="16"/><text x="31.8085%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (9 samples, 0.02%)</title><rect x="31.5748%" y="949" width="0.0209%" height="15" fill="rgb(206,54,4)" fg:x="13604" fg:w="9"/><text x="31.8248%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="31.5794%" y="933" width="0.0162%" height="15" fill="rgb(213,3,15)" fg:x="13606" fg:w="7"/><text x="31.8294%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.01%)</title><rect x="31.5841%" y="917" width="0.0116%" height="15" fill="rgb(252,211,39)" fg:x="13608" fg:w="5"/><text x="31.8341%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="31.5841%" y="901" width="0.0116%" height="15" fill="rgb(223,6,36)" fg:x="13608" fg:w="5"/><text x="31.8341%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (5 samples, 0.01%)</title><rect x="31.5841%" y="885" width="0.0116%" height="15" fill="rgb(252,169,45)" fg:x="13608" fg:w="5"/><text x="31.8341%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (9 samples, 0.02%)</title><rect x="31.5957%" y="901" width="0.0209%" height="15" fill="rgb(212,48,26)" fg:x="13613" fg:w="9"/><text x="31.8457%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="31.5957%" y="981" width="0.0232%" height="15" fill="rgb(251,102,48)" fg:x="13613" fg:w="10"/><text x="31.8457%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="31.5957%" y="965" width="0.0232%" height="15" fill="rgb(243,208,16)" fg:x="13613" fg:w="10"/><text x="31.8457%" y="975.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="31.5957%" y="949" width="0.0232%" height="15" fill="rgb(219,96,24)" fg:x="13613" fg:w="10"/><text x="31.8457%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="31.5957%" y="933" width="0.0232%" height="15" fill="rgb(219,33,29)" fg:x="13613" fg:w="10"/><text x="31.8457%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="31.5957%" y="917" width="0.0232%" height="15" fill="rgb(223,176,5)" fg:x="13613" fg:w="10"/><text x="31.8457%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (16 samples, 0.04%)</title><rect x="31.5957%" y="1029" width="0.0371%" height="15" fill="rgb(228,140,14)" fg:x="13613" fg:w="16"/><text x="31.8457%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.04%)</title><rect x="31.5957%" y="1013" width="0.0371%" height="15" fill="rgb(217,179,31)" fg:x="13613" fg:w="16"/><text x="31.8457%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.04%)</title><rect x="31.5957%" y="997" width="0.0371%" height="15" fill="rgb(230,9,30)" fg:x="13613" fg:w="16"/><text x="31.8457%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="31.6189%" y="981" width="0.0139%" height="15" fill="rgb(230,136,20)" fg:x="13623" fg:w="6"/><text x="31.8689%" y="991.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="31.6189%" y="965" width="0.0139%" height="15" fill="rgb(215,210,22)" fg:x="13623" fg:w="6"/><text x="31.8689%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.01%)</title><rect x="31.6189%" y="949" width="0.0139%" height="15" fill="rgb(218,43,5)" fg:x="13623" fg:w="6"/><text x="31.8689%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="31.6189%" y="933" width="0.0139%" height="15" fill="rgb(216,11,5)" fg:x="13623" fg:w="6"/><text x="31.8689%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (52 samples, 0.12%)</title><rect x="31.5400%" y="1045" width="0.1207%" height="15" fill="rgb(209,82,29)" fg:x="13589" fg:w="52"/><text x="31.7900%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (12 samples, 0.03%)</title><rect x="31.6328%" y="1029" width="0.0279%" height="15" fill="rgb(244,115,12)" fg:x="13629" fg:w="12"/><text x="31.8828%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (9 samples, 0.02%)</title><rect x="31.6398%" y="1013" width="0.0209%" height="15" fill="rgb(222,82,18)" fg:x="13632" fg:w="9"/><text x="31.8898%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="31.6398%" y="997" width="0.0209%" height="15" fill="rgb(249,227,8)" fg:x="13632" fg:w="9"/><text x="31.8898%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.01%)</title><rect x="31.6491%" y="981" width="0.0116%" height="15" fill="rgb(253,141,45)" fg:x="13636" fg:w="5"/><text x="31.8991%" y="991.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (5 samples, 0.01%)</title><rect x="31.6491%" y="965" width="0.0116%" height="15" fill="rgb(234,184,4)" fg:x="13636" fg:w="5"/><text x="31.8991%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::unmatched_edges (7 samples, 0.02%)</title><rect x="31.6607%" y="1045" width="0.0162%" height="15" fill="rgb(218,194,23)" fg:x="13641" fg:w="7"/><text x="31.9107%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="31.6769%" y="1013" width="0.0116%" height="15" fill="rgb(235,66,41)" fg:x="13648" fg:w="5"/><text x="31.9269%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="31.6769%" y="997" width="0.0116%" height="15" fill="rgb(245,217,1)" fg:x="13648" fg:w="5"/><text x="31.9269%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="31.6769%" y="981" width="0.0116%" height="15" fill="rgb(229,91,1)" fg:x="13648" fg:w="5"/><text x="31.9269%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="31.6769%" y="965" width="0.0116%" height="15" fill="rgb(207,101,30)" fg:x="13648" fg:w="5"/><text x="31.9269%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="31.6769%" y="949" width="0.0116%" height="15" fill="rgb(223,82,49)" fg:x="13648" fg:w="5"/><text x="31.9269%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join (76 samples, 0.18%)</title><rect x="31.5237%" y="1061" width="0.1764%" height="15" fill="rgb(218,167,17)" fg:x="13582" fg:w="76"/><text x="31.7737%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.02%)</title><rect x="31.6769%" y="1045" width="0.0232%" height="15" fill="rgb(208,103,14)" fg:x="13648" fg:w="10"/><text x="31.9269%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="31.6769%" y="1029" width="0.0232%" height="15" fill="rgb(238,20,8)" fg:x="13648" fg:w="10"/><text x="31.9269%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.01%)</title><rect x="31.6885%" y="1013" width="0.0116%" height="15" fill="rgb(218,80,54)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join::_{{closure}} (5 samples, 0.01%)</title><rect x="31.6885%" y="997" width="0.0116%" height="15" fill="rgb(240,144,17)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="31.6885%" y="981" width="0.0116%" height="15" fill="rgb(245,27,50)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="31.6885%" y="965" width="0.0116%" height="15" fill="rgb(251,51,7)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="31.6885%" y="949" width="0.0116%" height="15" fill="rgb(245,217,29)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="31.6885%" y="933" width="0.0116%" height="15" fill="rgb(221,176,29)" fg:x="13653" fg:w="5"/><text x="31.9385%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (7 samples, 0.02%)</title><rect x="31.7001%" y="981" width="0.0162%" height="15" fill="rgb(212,180,24)" fg:x="13658" fg:w="7"/><text x="31.9501%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (7 samples, 0.02%)</title><rect x="31.7001%" y="965" width="0.0162%" height="15" fill="rgb(254,24,2)" fg:x="13658" fg:w="7"/><text x="31.9501%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="31.7001%" y="949" width="0.0162%" height="15" fill="rgb(230,100,2)" fg:x="13658" fg:w="7"/><text x="31.9501%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="31.7001%" y="933" width="0.0162%" height="15" fill="rgb(219,142,25)" fg:x="13658" fg:w="7"/><text x="31.9501%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (7 samples, 0.02%)</title><rect x="31.7001%" y="917" width="0.0162%" height="15" fill="rgb(240,73,43)" fg:x="13658" fg:w="7"/><text x="31.9501%" y="927.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (115 samples, 0.27%)</title><rect x="31.4611%" y="1077" width="0.2669%" height="15" fill="rgb(214,114,15)" fg:x="13555" fg:w="115"/><text x="31.7111%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (12 samples, 0.03%)</title><rect x="31.7001%" y="1061" width="0.0279%" height="15" fill="rgb(207,130,4)" fg:x="13658" fg:w="12"/><text x="31.9501%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="31.7001%" y="1045" width="0.0279%" height="15" fill="rgb(221,25,40)" fg:x="13658" fg:w="12"/><text x="31.9501%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="31.7001%" y="1029" width="0.0279%" height="15" fill="rgb(241,184,7)" fg:x="13658" fg:w="12"/><text x="31.9501%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="31.7001%" y="1013" width="0.0279%" height="15" fill="rgb(235,159,4)" fg:x="13658" fg:w="12"/><text x="31.9501%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="31.7001%" y="997" width="0.0279%" height="15" fill="rgb(214,87,48)" fg:x="13658" fg:w="12"/><text x="31.9501%" y="1007.50"></text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="31.7164%" y="981" width="0.0116%" height="15" fill="rgb(246,198,24)" fg:x="13665" fg:w="5"/><text x="31.9664%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (5 samples, 0.01%)</title><rect x="31.7164%" y="965" width="0.0116%" height="15" fill="rgb(209,66,40)" fg:x="13665" fg:w="5"/><text x="31.9664%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (5 samples, 0.01%)</title><rect x="31.7164%" y="949" width="0.0116%" height="15" fill="rgb(233,147,39)" fg:x="13665" fg:w="5"/><text x="31.9664%" y="959.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (118 samples, 0.27%)</title><rect x="31.4587%" y="1093" width="0.2739%" height="15" fill="rgb(231,145,52)" fg:x="13554" fg:w="118"/><text x="31.7087%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="31.7326%" y="1077" width="0.0209%" height="15" fill="rgb(206,20,26)" fg:x="13672" fg:w="9"/><text x="31.9826%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.02%)</title><rect x="31.7326%" y="1061" width="0.0209%" height="15" fill="rgb(238,220,4)" fg:x="13672" fg:w="9"/><text x="31.9826%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.02%)</title><rect x="31.7326%" y="1045" width="0.0209%" height="15" fill="rgb(252,195,42)" fg:x="13672" fg:w="9"/><text x="31.9826%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.7535%" y="1013" width="0.0139%" height="15" fill="rgb(209,10,6)" fg:x="13681" fg:w="6"/><text x="32.0035%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.7535%" y="997" width="0.0139%" height="15" fill="rgb(229,3,52)" fg:x="13681" fg:w="6"/><text x="32.0035%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.01%)</title><rect x="31.7535%" y="981" width="0.0139%" height="15" fill="rgb(253,49,37)" fg:x="13681" fg:w="6"/><text x="32.0035%" y="991.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="31.7535%" y="1029" width="0.0464%" height="15" fill="rgb(240,103,49)" fg:x="13681" fg:w="20"/><text x="32.0035%" y="1039.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="31.7674%" y="1013" width="0.0325%" height="15" fill="rgb(250,182,30)" fg:x="13687" fg:w="14"/><text x="32.0174%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="31.7674%" y="997" width="0.0325%" height="15" fill="rgb(248,8,30)" fg:x="13687" fg:w="14"/><text x="32.0174%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.03%)</title><rect x="31.7674%" y="981" width="0.0325%" height="15" fill="rgb(237,120,30)" fg:x="13687" fg:w="14"/><text x="32.0174%" y="991.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (36 samples, 0.08%)</title><rect x="31.7326%" y="1093" width="0.0836%" height="15" fill="rgb(221,146,34)" fg:x="13672" fg:w="36"/><text x="31.9826%" y="1103.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (27 samples, 0.06%)</title><rect x="31.7535%" y="1077" width="0.0627%" height="15" fill="rgb(242,55,13)" fg:x="13681" fg:w="27"/><text x="32.0035%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (27 samples, 0.06%)</title><rect x="31.7535%" y="1061" width="0.0627%" height="15" fill="rgb(242,112,31)" fg:x="13681" fg:w="27"/><text x="32.0035%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (27 samples, 0.06%)</title><rect x="31.7535%" y="1045" width="0.0627%" height="15" fill="rgb(249,192,27)" fg:x="13681" fg:w="27"/><text x="32.0035%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (5 samples, 0.01%)</title><rect x="31.8046%" y="1029" width="0.0116%" height="15" fill="rgb(208,204,44)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (5 samples, 0.01%)</title><rect x="31.8046%" y="1013" width="0.0116%" height="15" fill="rgb(208,93,54)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.01%)</title><rect x="31.8046%" y="997" width="0.0116%" height="15" fill="rgb(242,1,31)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.01%)</title><rect x="31.8046%" y="981" width="0.0116%" height="15" fill="rgb(241,83,25)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="31.8046%" y="965" width="0.0116%" height="15" fill="rgb(205,169,50)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="31.8046%" y="949" width="0.0116%" height="15" fill="rgb(239,186,37)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="31.8046%" y="933" width="0.0116%" height="15" fill="rgb(205,221,10)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="31.8046%" y="917" width="0.0116%" height="15" fill="rgb(218,196,15)" fg:x="13703" fg:w="5"/><text x="32.0546%" y="927.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="31.8347%" y="997" width="0.0255%" height="15" fill="rgb(218,196,35)" fg:x="13716" fg:w="11"/><text x="32.0847%" y="1007.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.8464%" y="981" width="0.0139%" height="15" fill="rgb(233,63,24)" fg:x="13721" fg:w="6"/><text x="32.0964%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="31.8464%" y="965" width="0.0139%" height="15" fill="rgb(225,8,4)" fg:x="13721" fg:w="6"/><text x="32.0964%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (8 samples, 0.02%)</title><rect x="31.8603%" y="997" width="0.0186%" height="15" fill="rgb(234,105,35)" fg:x="13727" fg:w="8"/><text x="32.1103%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (5 samples, 0.01%)</title><rect x="31.8672%" y="981" width="0.0116%" height="15" fill="rgb(236,21,32)" fg:x="13730" fg:w="5"/><text x="32.1172%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="31.8788%" y="997" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="13735" fg:w="6"/><text x="32.1288%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (8 samples, 0.02%)</title><rect x="31.9090%" y="981" width="0.0186%" height="15" fill="rgb(229,215,31)" fg:x="13748" fg:w="8"/><text x="32.1590%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (7 samples, 0.02%)</title><rect x="31.9276%" y="981" width="0.0162%" height="15" fill="rgb(221,52,54)" fg:x="13756" fg:w="7"/><text x="32.1776%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (25 samples, 0.06%)</title><rect x="31.8974%" y="997" width="0.0580%" height="15" fill="rgb(252,129,43)" fg:x="13743" fg:w="25"/><text x="32.1474%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.03%)</title><rect x="31.9903%" y="869" width="0.0279%" height="15" fill="rgb(248,183,27)" fg:x="13783" fg:w="12"/><text x="32.2403%" y="879.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.03%)</title><rect x="31.9903%" y="853" width="0.0279%" height="15" fill="rgb(250,0,22)" fg:x="13783" fg:w="12"/><text x="32.2403%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (24 samples, 0.06%)</title><rect x="31.9670%" y="917" width="0.0557%" height="15" fill="rgb(213,166,10)" fg:x="13773" fg:w="24"/><text x="32.2170%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.04%)</title><rect x="31.9786%" y="901" width="0.0441%" height="15" fill="rgb(207,163,36)" fg:x="13778" fg:w="19"/><text x="32.2286%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.04%)</title><rect x="31.9786%" y="885" width="0.0441%" height="15" fill="rgb(208,122,22)" fg:x="13778" fg:w="19"/><text x="32.2286%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (27 samples, 0.06%)</title><rect x="31.9624%" y="949" width="0.0627%" height="15" fill="rgb(207,104,49)" fg:x="13771" fg:w="27"/><text x="32.2124%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (26 samples, 0.06%)</title><rect x="31.9647%" y="933" width="0.0603%" height="15" fill="rgb(248,211,50)" fg:x="13772" fg:w="26"/><text x="32.2147%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (10 samples, 0.02%)</title><rect x="32.0251%" y="949" width="0.0232%" height="15" fill="rgb(217,13,45)" fg:x="13798" fg:w="10"/><text x="32.2751%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (6 samples, 0.01%)</title><rect x="32.0344%" y="933" width="0.0139%" height="15" fill="rgb(211,216,49)" fg:x="13802" fg:w="6"/><text x="32.2844%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (41 samples, 0.10%)</title><rect x="31.9554%" y="965" width="0.0952%" height="15" fill="rgb(221,58,53)" fg:x="13768" fg:w="41"/><text x="32.2054%" y="975.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="31.8162%" y="1045" width="0.2460%" height="15" fill="rgb(220,112,41)" fg:x="13708" fg:w="106"/><text x="32.0662%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="31.8162%" y="1029" width="0.2460%" height="15" fill="rgb(236,38,28)" fg:x="13708" fg:w="106"/><text x="32.0662%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (106 samples, 0.25%)</title><rect x="31.8162%" y="1013" width="0.2460%" height="15" fill="rgb(227,195,22)" fg:x="13708" fg:w="106"/><text x="32.0662%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (46 samples, 0.11%)</title><rect x="31.9554%" y="997" width="0.1068%" height="15" fill="rgb(214,55,33)" fg:x="13768" fg:w="46"/><text x="32.2054%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (46 samples, 0.11%)</title><rect x="31.9554%" y="981" width="0.1068%" height="15" fill="rgb(248,80,13)" fg:x="13768" fg:w="46"/><text x="32.2054%" y="991.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="32.1040%" y="837" width="0.0186%" height="15" fill="rgb(238,52,6)" fg:x="13832" fg:w="8"/><text x="32.3540%" y="847.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="32.1086%" y="821" width="0.0139%" height="15" fill="rgb(224,198,47)" fg:x="13834" fg:w="6"/><text x="32.3586%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.03%)</title><rect x="32.0993%" y="869" width="0.0348%" height="15" fill="rgb(233,171,20)" fg:x="13830" fg:w="15"/><text x="32.3493%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.03%)</title><rect x="32.0993%" y="853" width="0.0348%" height="15" fill="rgb(241,30,25)" fg:x="13830" fg:w="15"/><text x="32.3493%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (26 samples, 0.06%)</title><rect x="32.0854%" y="885" width="0.0603%" height="15" fill="rgb(207,171,38)" fg:x="13824" fg:w="26"/><text x="32.3354%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (33 samples, 0.08%)</title><rect x="32.0831%" y="917" width="0.0766%" height="15" fill="rgb(234,70,1)" fg:x="13823" fg:w="33"/><text x="32.3331%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (33 samples, 0.08%)</title><rect x="32.0831%" y="901" width="0.0766%" height="15" fill="rgb(232,178,18)" fg:x="13823" fg:w="33"/><text x="32.3331%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::new (6 samples, 0.01%)</title><rect x="32.1458%" y="885" width="0.0139%" height="15" fill="rgb(241,78,40)" fg:x="13850" fg:w="6"/><text x="32.3958%" y="895.50"></text></g><g><title>core::alloc::layout::size_align (6 samples, 0.01%)</title><rect x="32.1458%" y="869" width="0.0139%" height="15" fill="rgb(222,35,25)" fg:x="13850" fg:w="6"/><text x="32.3958%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (11 samples, 0.03%)</title><rect x="32.1597%" y="917" width="0.0255%" height="15" fill="rgb(207,92,16)" fg:x="13856" fg:w="11"/><text x="32.4097%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (7 samples, 0.02%)</title><rect x="32.1690%" y="901" width="0.0162%" height="15" fill="rgb(216,59,51)" fg:x="13860" fg:w="7"/><text x="32.4190%" y="911.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (48 samples, 0.11%)</title><rect x="32.0831%" y="933" width="0.1114%" height="15" fill="rgb(213,80,28)" fg:x="13823" fg:w="48"/><text x="32.3331%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (56 samples, 0.13%)</title><rect x="32.0738%" y="1013" width="0.1300%" height="15" fill="rgb(220,93,7)" fg:x="13819" fg:w="56"/><text x="32.3238%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (55 samples, 0.13%)</title><rect x="32.0761%" y="997" width="0.1277%" height="15" fill="rgb(225,24,44)" fg:x="13820" fg:w="55"/><text x="32.3261%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (54 samples, 0.13%)</title><rect x="32.0784%" y="981" width="0.1253%" height="15" fill="rgb(243,74,40)" fg:x="13821" fg:w="54"/><text x="32.3284%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (54 samples, 0.13%)</title><rect x="32.0784%" y="965" width="0.1253%" height="15" fill="rgb(228,39,7)" fg:x="13821" fg:w="54"/><text x="32.3284%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (53 samples, 0.12%)</title><rect x="32.0808%" y="949" width="0.1230%" height="15" fill="rgb(227,79,8)" fg:x="13822" fg:w="53"/><text x="32.3308%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.05%)</title><rect x="32.2061%" y="1013" width="0.0464%" height="15" fill="rgb(236,58,11)" fg:x="13876" fg:w="20"/><text x="32.4561%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.03%)</title><rect x="32.2200%" y="997" width="0.0325%" height="15" fill="rgb(249,63,35)" fg:x="13882" fg:w="14"/><text x="32.4700%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.03%)</title><rect x="32.2247%" y="981" width="0.0279%" height="15" fill="rgb(252,114,16)" fg:x="13884" fg:w="12"/><text x="32.4747%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (83 samples, 0.19%)</title><rect x="32.0622%" y="1029" width="0.1926%" height="15" fill="rgb(254,151,24)" fg:x="13814" fg:w="83"/><text x="32.3122%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (9 samples, 0.02%)</title><rect x="32.2804%" y="981" width="0.0209%" height="15" fill="rgb(253,54,39)" fg:x="13908" fg:w="9"/><text x="32.5304%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (106 samples, 0.25%)</title><rect x="32.0622%" y="1045" width="0.2460%" height="15" fill="rgb(243,25,45)" fg:x="13814" fg:w="106"/><text x="32.3122%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (23 samples, 0.05%)</title><rect x="32.2548%" y="1029" width="0.0534%" height="15" fill="rgb(234,134,9)" fg:x="13897" fg:w="23"/><text x="32.5048%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.05%)</title><rect x="32.2548%" y="1013" width="0.0534%" height="15" fill="rgb(227,166,31)" fg:x="13897" fg:w="23"/><text x="32.5048%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (21 samples, 0.05%)</title><rect x="32.2595%" y="997" width="0.0487%" height="15" fill="rgb(245,143,41)" fg:x="13899" fg:w="21"/><text x="32.5095%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.03%)</title><rect x="32.3082%" y="1045" width="0.0279%" height="15" fill="rgb(238,181,32)" fg:x="13920" fg:w="12"/><text x="32.5582%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (12 samples, 0.03%)</title><rect x="32.3082%" y="1029" width="0.0279%" height="15" fill="rgb(224,113,18)" fg:x="13920" fg:w="12"/><text x="32.5582%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (12 samples, 0.03%)</title><rect x="32.3082%" y="1013" width="0.0279%" height="15" fill="rgb(240,229,28)" fg:x="13920" fg:w="12"/><text x="32.5582%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (5 samples, 0.01%)</title><rect x="32.3245%" y="997" width="0.0116%" height="15" fill="rgb(250,185,3)" fg:x="13927" fg:w="5"/><text x="32.5745%" y="1007.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.03%)</title><rect x="32.3546%" y="1029" width="0.0255%" height="15" fill="rgb(212,59,25)" fg:x="13940" fg:w="11"/><text x="32.6046%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (11 samples, 0.03%)</title><rect x="32.3546%" y="1013" width="0.0255%" height="15" fill="rgb(221,87,20)" fg:x="13940" fg:w="11"/><text x="32.6046%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.03%)</title><rect x="32.3546%" y="997" width="0.0255%" height="15" fill="rgb(213,74,28)" fg:x="13940" fg:w="11"/><text x="32.6046%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.03%)</title><rect x="32.3546%" y="981" width="0.0255%" height="15" fill="rgb(224,132,34)" fg:x="13940" fg:w="11"/><text x="32.6046%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="32.3941%" y="949" width="0.0116%" height="15" fill="rgb(222,101,24)" fg:x="13957" fg:w="5"/><text x="32.6441%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="32.3871%" y="1029" width="0.0348%" height="15" fill="rgb(254,142,4)" fg:x="13954" fg:w="15"/><text x="32.6371%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.03%)</title><rect x="32.3871%" y="1013" width="0.0348%" height="15" fill="rgb(230,229,49)" fg:x="13954" fg:w="15"/><text x="32.6371%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (15 samples, 0.03%)</title><rect x="32.3871%" y="997" width="0.0348%" height="15" fill="rgb(238,70,47)" fg:x="13954" fg:w="15"/><text x="32.6371%" y="1007.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.03%)</title><rect x="32.3871%" y="981" width="0.0348%" height="15" fill="rgb(231,160,17)" fg:x="13954" fg:w="15"/><text x="32.6371%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (14 samples, 0.03%)</title><rect x="32.3895%" y="965" width="0.0325%" height="15" fill="rgb(218,68,53)" fg:x="13955" fg:w="14"/><text x="32.6395%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (11 samples, 0.03%)</title><rect x="32.4521%" y="933" width="0.0255%" height="15" fill="rgb(236,111,10)" fg:x="13982" fg:w="11"/><text x="32.7021%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (6 samples, 0.01%)</title><rect x="32.4637%" y="917" width="0.0139%" height="15" fill="rgb(224,34,41)" fg:x="13987" fg:w="6"/><text x="32.7137%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (22 samples, 0.05%)</title><rect x="32.4405%" y="949" width="0.0511%" height="15" fill="rgb(241,118,19)" fg:x="13977" fg:w="22"/><text x="32.6905%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.06%)</title><rect x="32.4359%" y="965" width="0.0627%" height="15" fill="rgb(238,129,25)" fg:x="13975" fg:w="27"/><text x="32.6859%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (38 samples, 0.09%)</title><rect x="32.4289%" y="981" width="0.0882%" height="15" fill="rgb(238,22,31)" fg:x="13972" fg:w="38"/><text x="32.6789%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_valmut (8 samples, 0.02%)</title><rect x="32.4985%" y="965" width="0.0186%" height="15" fill="rgb(222,174,48)" fg:x="14002" fg:w="8"/><text x="32.7485%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,Type&gt;::into_key_val_mut_at (8 samples, 0.02%)</title><rect x="32.4985%" y="949" width="0.0186%" height="15" fill="rgb(206,152,40)" fg:x="14002" fg:w="8"/><text x="32.7485%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.10%)</title><rect x="32.4220%" y="1013" width="0.1044%" height="15" fill="rgb(218,99,54)" fg:x="13969" fg:w="45"/><text x="32.6720%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::RangeMut&lt;K,V&gt;::next_unchecked (42 samples, 0.10%)</title><rect x="32.4289%" y="997" width="0.0975%" height="15" fill="rgb(220,174,26)" fg:x="13972" fg:w="42"/><text x="32.6789%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.11%)</title><rect x="32.4220%" y="1029" width="0.1091%" height="15" fill="rgb(245,116,9)" fg:x="13969" fg:w="47"/><text x="32.6720%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.02%)</title><rect x="32.5310%" y="1029" width="0.0162%" height="15" fill="rgb(209,72,35)" fg:x="14016" fg:w="7"/><text x="32.7810%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="32.6146%" y="949" width="0.0116%" height="15" fill="rgb(226,126,21)" fg:x="14052" fg:w="5"/><text x="32.8646%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (8 samples, 0.02%)</title><rect x="32.6262%" y="949" width="0.0186%" height="15" fill="rgb(227,192,1)" fg:x="14057" fg:w="8"/><text x="32.8762%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31 samples, 0.07%)</title><rect x="32.5775%" y="997" width="0.0720%" height="15" fill="rgb(237,180,29)" fg:x="14036" fg:w="31"/><text x="32.8275%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.06%)</title><rect x="32.5914%" y="981" width="0.0580%" height="15" fill="rgb(230,197,35)" fg:x="14042" fg:w="25"/><text x="32.8414%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.05%)</title><rect x="32.6007%" y="965" width="0.0487%" height="15" fill="rgb(246,193,31)" fg:x="14046" fg:w="21"/><text x="32.8507%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (40 samples, 0.09%)</title><rect x="32.5589%" y="1013" width="0.0928%" height="15" fill="rgb(241,36,4)" fg:x="14028" fg:w="40"/><text x="32.8089%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (51 samples, 0.12%)</title><rect x="32.5473%" y="1029" width="0.1184%" height="15" fill="rgb(241,130,17)" fg:x="14023" fg:w="51"/><text x="32.7973%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.01%)</title><rect x="32.6517%" y="1013" width="0.0139%" height="15" fill="rgb(206,137,32)" fg:x="14068" fg:w="6"/><text x="32.9017%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (9 samples, 0.02%)</title><rect x="32.6889%" y="997" width="0.0209%" height="15" fill="rgb(237,228,51)" fg:x="14084" fg:w="9"/><text x="32.9389%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (8 samples, 0.02%)</title><rect x="32.6912%" y="981" width="0.0186%" height="15" fill="rgb(243,6,42)" fg:x="14085" fg:w="8"/><text x="32.9412%" y="991.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (5 samples, 0.01%)</title><rect x="32.6982%" y="965" width="0.0116%" height="15" fill="rgb(251,74,28)" fg:x="14088" fg:w="5"/><text x="32.9482%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="32.7446%" y="949" width="0.0139%" height="15" fill="rgb(218,20,49)" fg:x="14108" fg:w="6"/><text x="32.9946%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="32.7585%" y="949" width="0.0162%" height="15" fill="rgb(238,28,14)" fg:x="14114" fg:w="7"/><text x="33.0085%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (29 samples, 0.07%)</title><rect x="32.7121%" y="997" width="0.0673%" height="15" fill="rgb(229,40,46)" fg:x="14094" fg:w="29"/><text x="32.9621%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.06%)</title><rect x="32.7190%" y="981" width="0.0603%" height="15" fill="rgb(244,195,20)" fg:x="14097" fg:w="26"/><text x="32.9690%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.05%)</title><rect x="32.7260%" y="965" width="0.0534%" height="15" fill="rgb(253,56,35)" fg:x="14100" fg:w="23"/><text x="32.9760%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (50 samples, 0.12%)</title><rect x="32.6657%" y="1013" width="0.1160%" height="15" fill="rgb(210,149,44)" fg:x="14074" fg:w="50"/><text x="32.9157%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="32.7864%" y="997" width="0.0116%" height="15" fill="rgb(240,135,12)" fg:x="14126" fg:w="5"/><text x="33.0364%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (60 samples, 0.14%)</title><rect x="32.6657%" y="1029" width="0.1393%" height="15" fill="rgb(251,24,50)" fg:x="14074" fg:w="60"/><text x="32.9157%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.02%)</title><rect x="32.7817%" y="1013" width="0.0232%" height="15" fill="rgb(243,200,47)" fg:x="14124" fg:w="10"/><text x="33.0317%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="32.8119%" y="997" width="0.0116%" height="15" fill="rgb(224,166,26)" fg:x="14137" fg:w="5"/><text x="33.0619%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (10 samples, 0.02%)</title><rect x="32.8235%" y="981" width="0.0232%" height="15" fill="rgb(233,0,47)" fg:x="14142" fg:w="10"/><text x="33.0735%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (6 samples, 0.01%)</title><rect x="32.8328%" y="965" width="0.0139%" height="15" fill="rgb(253,80,5)" fg:x="14146" fg:w="6"/><text x="33.0828%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (15 samples, 0.03%)</title><rect x="32.8235%" y="997" width="0.0348%" height="15" fill="rgb(214,133,25)" fg:x="14142" fg:w="15"/><text x="33.0735%" y="1007.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="32.8467%" y="981" width="0.0116%" height="15" fill="rgb(209,27,14)" fg:x="14152" fg:w="5"/><text x="33.0967%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter_mut (23 samples, 0.05%)</title><rect x="32.8072%" y="1013" width="0.0534%" height="15" fill="rgb(219,102,51)" fg:x="14135" fg:w="23"/><text x="33.0572%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values_mut (25 samples, 0.06%)</title><rect x="32.8049%" y="1029" width="0.0580%" height="15" fill="rgb(237,18,16)" fg:x="14134" fg:w="25"/><text x="33.0549%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (6 samples, 0.01%)</title><rect x="32.8838%" y="949" width="0.0139%" height="15" fill="rgb(241,85,17)" fg:x="14168" fg:w="6"/><text x="33.1338%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (20 samples, 0.05%)</title><rect x="32.8629%" y="997" width="0.0464%" height="15" fill="rgb(236,90,42)" fg:x="14159" fg:w="20"/><text x="33.1129%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (18 samples, 0.04%)</title><rect x="32.8676%" y="981" width="0.0418%" height="15" fill="rgb(249,57,21)" fg:x="14161" fg:w="18"/><text x="33.1176%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (18 samples, 0.04%)</title><rect x="32.8676%" y="965" width="0.0418%" height="15" fill="rgb(243,12,36)" fg:x="14161" fg:w="18"/><text x="33.1176%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (8 samples, 0.02%)</title><rect x="32.9442%" y="885" width="0.0186%" height="15" fill="rgb(253,128,47)" fg:x="14194" fg:w="8"/><text x="33.1942%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (5 samples, 0.01%)</title><rect x="32.9511%" y="869" width="0.0116%" height="15" fill="rgb(207,33,20)" fg:x="14197" fg:w="5"/><text x="33.2011%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (8 samples, 0.02%)</title><rect x="32.9627%" y="885" width="0.0186%" height="15" fill="rgb(233,215,35)" fg:x="14202" fg:w="8"/><text x="33.2127%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (25 samples, 0.06%)</title><rect x="32.9419%" y="901" width="0.0580%" height="15" fill="rgb(249,188,52)" fg:x="14193" fg:w="25"/><text x="33.1919%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="32.9813%" y="885" width="0.0186%" height="15" fill="rgb(225,12,32)" fg:x="14210" fg:w="8"/><text x="33.2313%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="32.9836%" y="869" width="0.0162%" height="15" fill="rgb(247,98,14)" fg:x="14211" fg:w="7"/><text x="33.2336%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="32.9860%" y="853" width="0.0139%" height="15" fill="rgb(247,219,48)" fg:x="14212" fg:w="6"/><text x="33.2360%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (33 samples, 0.08%)</title><rect x="32.9349%" y="933" width="0.0766%" height="15" fill="rgb(253,60,48)" fg:x="14190" fg:w="33"/><text x="33.1849%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (33 samples, 0.08%)</title><rect x="32.9349%" y="917" width="0.0766%" height="15" fill="rgb(245,15,52)" fg:x="14190" fg:w="33"/><text x="33.1849%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.09%)</title><rect x="32.9279%" y="965" width="0.0882%" height="15" fill="rgb(220,133,28)" fg:x="14187" fg:w="38"/><text x="33.1779%" y="975.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (36 samples, 0.08%)</title><rect x="32.9326%" y="949" width="0.0836%" height="15" fill="rgb(217,180,4)" fg:x="14189" fg:w="36"/><text x="33.1826%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="33.0301%" y="933" width="0.0162%" height="15" fill="rgb(251,24,1)" fg:x="14231" fg:w="7"/><text x="33.2801%" y="943.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (14 samples, 0.03%)</title><rect x="33.0463%" y="933" width="0.0325%" height="15" fill="rgb(212,185,49)" fg:x="14238" fg:w="14"/><text x="33.2963%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.03%)</title><rect x="33.0486%" y="917" width="0.0302%" height="15" fill="rgb(215,175,22)" fg:x="14239" fg:w="13"/><text x="33.2986%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (9 samples, 0.02%)</title><rect x="33.0579%" y="901" width="0.0209%" height="15" fill="rgb(250,205,14)" fg:x="14243" fg:w="9"/><text x="33.3079%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="33.0858%" y="917" width="0.0232%" height="15" fill="rgb(225,211,22)" fg:x="14255" fg:w="10"/><text x="33.3358%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="33.1252%" y="885" width="0.0116%" height="15" fill="rgb(251,179,42)" fg:x="14272" fg:w="5"/><text x="33.3752%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="33.1206%" y="901" width="0.0209%" height="15" fill="rgb(208,216,51)" fg:x="14270" fg:w="9"/><text x="33.3706%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (5 samples, 0.01%)</title><rect x="33.1507%" y="853" width="0.0116%" height="15" fill="rgb(235,36,11)" fg:x="14283" fg:w="5"/><text x="33.4007%" y="863.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (132 samples, 0.31%)</title><rect x="32.8629%" y="1013" width="0.3064%" height="15" fill="rgb(213,189,28)" fg:x="14159" fg:w="132"/><text x="33.1129%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (112 samples, 0.26%)</title><rect x="32.9094%" y="997" width="0.2600%" height="15" fill="rgb(227,203,42)" fg:x="14179" fg:w="112"/><text x="33.1594%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (107 samples, 0.25%)</title><rect x="32.9210%" y="981" width="0.2483%" height="15" fill="rgb(244,72,36)" fg:x="14184" fg:w="107"/><text x="33.1710%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (62 samples, 0.14%)</title><rect x="33.0254%" y="965" width="0.1439%" height="15" fill="rgb(213,53,17)" fg:x="14229" fg:w="62"/><text x="33.2754%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (62 samples, 0.14%)</title><rect x="33.0254%" y="949" width="0.1439%" height="15" fill="rgb(207,167,3)" fg:x="14229" fg:w="62"/><text x="33.2754%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (39 samples, 0.09%)</title><rect x="33.0788%" y="933" width="0.0905%" height="15" fill="rgb(216,98,30)" fg:x="14252" fg:w="39"/><text x="33.3288%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.06%)</title><rect x="33.1090%" y="917" width="0.0603%" height="15" fill="rgb(236,123,15)" fg:x="14265" fg:w="26"/><text x="33.3590%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (9 samples, 0.02%)</title><rect x="33.1484%" y="901" width="0.0209%" height="15" fill="rgb(248,81,50)" fg:x="14282" fg:w="9"/><text x="33.3984%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (9 samples, 0.02%)</title><rect x="33.1484%" y="885" width="0.0209%" height="15" fill="rgb(214,120,4)" fg:x="14282" fg:w="9"/><text x="33.3984%" y="895.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (9 samples, 0.02%)</title><rect x="33.1484%" y="869" width="0.0209%" height="15" fill="rgb(208,179,34)" fg:x="14282" fg:w="9"/><text x="33.3984%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (11 samples, 0.03%)</title><rect x="33.2041%" y="933" width="0.0255%" height="15" fill="rgb(227,140,7)" fg:x="14306" fg:w="11"/><text x="33.4541%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (24 samples, 0.06%)</title><rect x="33.1856%" y="965" width="0.0557%" height="15" fill="rgb(214,22,6)" fg:x="14298" fg:w="24"/><text x="33.4356%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (23 samples, 0.05%)</title><rect x="33.1879%" y="949" width="0.0534%" height="15" fill="rgb(207,137,27)" fg:x="14299" fg:w="23"/><text x="33.4379%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (5 samples, 0.01%)</title><rect x="33.2297%" y="933" width="0.0116%" height="15" fill="rgb(210,8,46)" fg:x="14317" fg:w="5"/><text x="33.4797%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (31 samples, 0.07%)</title><rect x="33.1740%" y="997" width="0.0720%" height="15" fill="rgb(240,16,54)" fg:x="14293" fg:w="31"/><text x="33.4240%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (29 samples, 0.07%)</title><rect x="33.1786%" y="981" width="0.0673%" height="15" fill="rgb(211,209,29)" fg:x="14295" fg:w="29"/><text x="33.4286%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (5 samples, 0.01%)</title><rect x="33.3109%" y="853" width="0.0116%" height="15" fill="rgb(226,228,24)" fg:x="14352" fg:w="5"/><text x="33.5609%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (11 samples, 0.03%)</title><rect x="33.3039%" y="869" width="0.0255%" height="15" fill="rgb(222,84,9)" fg:x="14349" fg:w="11"/><text x="33.5539%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.02%)</title><rect x="33.3295%" y="869" width="0.0232%" height="15" fill="rgb(234,203,30)" fg:x="14360" fg:w="10"/><text x="33.5795%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (6 samples, 0.01%)</title><rect x="33.3387%" y="853" width="0.0139%" height="15" fill="rgb(238,109,14)" fg:x="14364" fg:w="6"/><text x="33.5887%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.03%)</title><rect x="33.3527%" y="869" width="0.0279%" height="15" fill="rgb(233,206,34)" fg:x="14370" fg:w="12"/><text x="33.6027%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.03%)</title><rect x="33.3550%" y="853" width="0.0255%" height="15" fill="rgb(220,167,47)" fg:x="14371" fg:w="11"/><text x="33.6050%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="33.3596%" y="837" width="0.0209%" height="15" fill="rgb(238,105,10)" fg:x="14373" fg:w="9"/><text x="33.6096%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (36 samples, 0.08%)</title><rect x="33.2993%" y="885" width="0.0836%" height="15" fill="rgb(213,227,17)" fg:x="14347" fg:w="36"/><text x="33.5493%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (51 samples, 0.12%)</title><rect x="33.2784%" y="917" width="0.1184%" height="15" fill="rgb(217,132,38)" fg:x="14338" fg:w="51"/><text x="33.5284%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (51 samples, 0.12%)</title><rect x="33.2784%" y="901" width="0.1184%" height="15" fill="rgb(242,146,4)" fg:x="14338" fg:w="51"/><text x="33.5284%" y="911.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="33.3828%" y="885" width="0.0139%" height="15" fill="rgb(212,61,9)" fg:x="14383" fg:w="6"/><text x="33.6328%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.13%)</title><rect x="33.2645%" y="949" width="0.1346%" height="15" fill="rgb(247,126,22)" fg:x="14332" fg:w="58"/><text x="33.5145%" y="959.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (54 samples, 0.13%)</title><rect x="33.2738%" y="933" width="0.1253%" height="15" fill="rgb(220,196,2)" fg:x="14336" fg:w="54"/><text x="33.5238%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.14%)</title><rect x="33.2598%" y="965" width="0.1439%" height="15" fill="rgb(208,46,4)" fg:x="14330" fg:w="62"/><text x="33.5098%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (5 samples, 0.01%)</title><rect x="33.4061%" y="933" width="0.0116%" height="15" fill="rgb(252,104,46)" fg:x="14393" fg:w="5"/><text x="33.6561%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="33.4061%" y="917" width="0.0116%" height="15" fill="rgb(237,152,48)" fg:x="14393" fg:w="5"/><text x="33.6561%" y="927.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (10 samples, 0.02%)</title><rect x="33.4177%" y="933" width="0.0232%" height="15" fill="rgb(221,59,37)" fg:x="14398" fg:w="10"/><text x="33.6677%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="33.4223%" y="917" width="0.0186%" height="15" fill="rgb(209,202,51)" fg:x="14400" fg:w="8"/><text x="33.6723%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="33.4269%" y="901" width="0.0139%" height="15" fill="rgb(228,81,30)" fg:x="14402" fg:w="6"/><text x="33.6769%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="33.4455%" y="917" width="0.0162%" height="15" fill="rgb(227,42,39)" fg:x="14410" fg:w="7"/><text x="33.6955%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="33.4780%" y="901" width="0.0186%" height="15" fill="rgb(221,26,2)" fg:x="14424" fg:w="8"/><text x="33.7280%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="33.4850%" y="885" width="0.0116%" height="15" fill="rgb(254,61,31)" fg:x="14427" fg:w="5"/><text x="33.7350%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="33.4966%" y="901" width="0.0186%" height="15" fill="rgb(222,173,38)" fg:x="14432" fg:w="8"/><text x="33.7466%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="33.4966%" y="885" width="0.0186%" height="15" fill="rgb(218,50,12)" fg:x="14432" fg:w="8"/><text x="33.7466%" y="895.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (156 samples, 0.36%)</title><rect x="33.1693%" y="1013" width="0.3621%" height="15" fill="rgb(223,88,40)" fg:x="14291" fg:w="156"/><text x="33.4193%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (123 samples, 0.29%)</title><rect x="33.2459%" y="997" width="0.2855%" height="15" fill="rgb(237,54,19)" fg:x="14324" fg:w="123"/><text x="33.4959%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (122 samples, 0.28%)</title><rect x="33.2482%" y="981" width="0.2832%" height="15" fill="rgb(251,129,25)" fg:x="14325" fg:w="122"/><text x="33.4982%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (54 samples, 0.13%)</title><rect x="33.4061%" y="965" width="0.1253%" height="15" fill="rgb(238,97,19)" fg:x="14393" fg:w="54"/><text x="33.6561%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (54 samples, 0.13%)</title><rect x="33.4061%" y="949" width="0.1253%" height="15" fill="rgb(240,169,18)" fg:x="14393" fg:w="54"/><text x="33.6561%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (39 samples, 0.09%)</title><rect x="33.4409%" y="933" width="0.0905%" height="15" fill="rgb(230,187,49)" fg:x="14408" fg:w="39"/><text x="33.6909%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.06%)</title><rect x="33.4687%" y="917" width="0.0627%" height="15" fill="rgb(209,44,26)" fg:x="14420" fg:w="27"/><text x="33.7187%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="33.5175%" y="901" width="0.0139%" height="15" fill="rgb(244,0,6)" fg:x="14441" fg:w="6"/><text x="33.7675%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="33.5175%" y="885" width="0.0139%" height="15" fill="rgb(248,18,21)" fg:x="14441" fg:w="6"/><text x="33.7675%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (6 samples, 0.01%)</title><rect x="33.5175%" y="869" width="0.0139%" height="15" fill="rgb(245,180,19)" fg:x="14441" fg:w="6"/><text x="33.7675%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (6 samples, 0.01%)</title><rect x="33.5175%" y="853" width="0.0139%" height="15" fill="rgb(252,118,36)" fg:x="14441" fg:w="6"/><text x="33.7675%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (13 samples, 0.03%)</title><rect x="33.5453%" y="981" width="0.0302%" height="15" fill="rgb(210,224,19)" fg:x="14453" fg:w="13"/><text x="33.7953%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (12 samples, 0.03%)</title><rect x="33.5476%" y="965" width="0.0279%" height="15" fill="rgb(218,30,24)" fg:x="14454" fg:w="12"/><text x="33.7976%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.04%)</title><rect x="33.5360%" y="997" width="0.0418%" height="15" fill="rgb(219,75,50)" fg:x="14449" fg:w="18"/><text x="33.7860%" y="1007.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="33.5778%" y="981" width="0.0139%" height="15" fill="rgb(234,72,50)" fg:x="14467" fg:w="6"/><text x="33.8278%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (7 samples, 0.02%)</title><rect x="33.6358%" y="885" width="0.0162%" height="15" fill="rgb(219,100,48)" fg:x="14492" fg:w="7"/><text x="33.8858%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (23 samples, 0.05%)</title><rect x="33.6289%" y="901" width="0.0534%" height="15" fill="rgb(253,5,41)" fg:x="14489" fg:w="23"/><text x="33.8789%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (9 samples, 0.02%)</title><rect x="33.6614%" y="885" width="0.0209%" height="15" fill="rgb(247,181,11)" fg:x="14503" fg:w="9"/><text x="33.9114%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="33.6614%" y="869" width="0.0209%" height="15" fill="rgb(222,223,25)" fg:x="14503" fg:w="9"/><text x="33.9114%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="33.6660%" y="853" width="0.0162%" height="15" fill="rgb(214,198,28)" fg:x="14505" fg:w="7"/><text x="33.9160%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (34 samples, 0.08%)</title><rect x="33.6126%" y="933" width="0.0789%" height="15" fill="rgb(230,46,43)" fg:x="14482" fg:w="34"/><text x="33.8626%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (34 samples, 0.08%)</title><rect x="33.6126%" y="917" width="0.0789%" height="15" fill="rgb(233,65,53)" fg:x="14482" fg:w="34"/><text x="33.8626%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.09%)</title><rect x="33.6057%" y="965" width="0.0882%" height="15" fill="rgb(221,121,27)" fg:x="14479" fg:w="38"/><text x="33.8557%" y="975.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (36 samples, 0.08%)</title><rect x="33.6103%" y="949" width="0.0836%" height="15" fill="rgb(247,70,47)" fg:x="14481" fg:w="36"/><text x="33.8603%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="33.7031%" y="933" width="0.0162%" height="15" fill="rgb(228,85,35)" fg:x="14521" fg:w="7"/><text x="33.9531%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="33.7055%" y="917" width="0.0139%" height="15" fill="rgb(209,50,18)" fg:x="14522" fg:w="6"/><text x="33.9555%" y="927.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (6 samples, 0.01%)</title><rect x="33.7194%" y="933" width="0.0139%" height="15" fill="rgb(250,19,35)" fg:x="14528" fg:w="6"/><text x="33.9694%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (5 samples, 0.01%)</title><rect x="33.7217%" y="917" width="0.0116%" height="15" fill="rgb(253,107,29)" fg:x="14529" fg:w="5"/><text x="33.9717%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (388 samples, 0.90%)</title><rect x="32.8629%" y="1029" width="0.9005%" height="15" fill="rgb(252,179,29)" fg:x="14159" fg:w="388"/><text x="33.1129%" y="1039.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (100 samples, 0.23%)</title><rect x="33.5314%" y="1013" width="0.2321%" height="15" fill="rgb(238,194,6)" fg:x="14447" fg:w="100"/><text x="33.7814%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (80 samples, 0.19%)</title><rect x="33.5778%" y="997" width="0.1857%" height="15" fill="rgb(238,164,29)" fg:x="14467" fg:w="80"/><text x="33.8278%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.17%)</title><rect x="33.5917%" y="981" width="0.1718%" height="15" fill="rgb(224,25,9)" fg:x="14473" fg:w="74"/><text x="33.8417%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (30 samples, 0.07%)</title><rect x="33.6939%" y="965" width="0.0696%" height="15" fill="rgb(244,153,23)" fg:x="14517" fg:w="30"/><text x="33.9439%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (28 samples, 0.06%)</title><rect x="33.6985%" y="949" width="0.0650%" height="15" fill="rgb(212,203,14)" fg:x="14519" fg:w="28"/><text x="33.9485%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (13 samples, 0.03%)</title><rect x="33.7333%" y="933" width="0.0302%" height="15" fill="rgb(220,164,20)" fg:x="14534" fg:w="13"/><text x="33.9833%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="33.7403%" y="917" width="0.0232%" height="15" fill="rgb(222,203,48)" fg:x="14537" fg:w="10"/><text x="33.9903%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (8 samples, 0.02%)</title><rect x="33.8029%" y="933" width="0.0186%" height="15" fill="rgb(215,159,22)" fg:x="14564" fg:w="8"/><text x="34.0529%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (19 samples, 0.04%)</title><rect x="33.7937%" y="965" width="0.0441%" height="15" fill="rgb(216,183,47)" fg:x="14560" fg:w="19"/><text x="34.0437%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (19 samples, 0.04%)</title><rect x="33.7937%" y="949" width="0.0441%" height="15" fill="rgb(229,195,25)" fg:x="14560" fg:w="19"/><text x="34.0437%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (5 samples, 0.01%)</title><rect x="33.8262%" y="933" width="0.0116%" height="15" fill="rgb(224,132,51)" fg:x="14574" fg:w="5"/><text x="34.0762%" y="943.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (28 samples, 0.06%)</title><rect x="33.7751%" y="997" width="0.0650%" height="15" fill="rgb(240,63,7)" fg:x="14552" fg:w="28"/><text x="34.0251%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (27 samples, 0.06%)</title><rect x="33.7774%" y="981" width="0.0627%" height="15" fill="rgb(249,182,41)" fg:x="14553" fg:w="27"/><text x="34.0274%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (9 samples, 0.02%)</title><rect x="33.8703%" y="917" width="0.0209%" height="15" fill="rgb(243,47,26)" fg:x="14593" fg:w="9"/><text x="34.1203%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (13 samples, 0.03%)</title><rect x="33.8911%" y="917" width="0.0302%" height="15" fill="rgb(233,48,2)" fg:x="14602" fg:w="13"/><text x="34.1411%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (6 samples, 0.01%)</title><rect x="33.9074%" y="901" width="0.0139%" height="15" fill="rgb(244,165,34)" fg:x="14609" fg:w="6"/><text x="34.1574%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (5 samples, 0.01%)</title><rect x="33.9097%" y="885" width="0.0116%" height="15" fill="rgb(207,89,7)" fg:x="14610" fg:w="5"/><text x="34.1597%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.03%)</title><rect x="33.9213%" y="917" width="0.0279%" height="15" fill="rgb(244,117,36)" fg:x="14615" fg:w="12"/><text x="34.1713%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="33.9329%" y="901" width="0.0162%" height="15" fill="rgb(226,144,34)" fg:x="14620" fg:w="7"/><text x="34.1829%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="33.9376%" y="885" width="0.0116%" height="15" fill="rgb(213,23,19)" fg:x="14622" fg:w="5"/><text x="34.1876%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (40 samples, 0.09%)</title><rect x="33.8610%" y="933" width="0.0928%" height="15" fill="rgb(217,75,12)" fg:x="14589" fg:w="40"/><text x="34.1110%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (49 samples, 0.11%)</title><rect x="33.8494%" y="965" width="0.1137%" height="15" fill="rgb(224,159,17)" fg:x="14584" fg:w="49"/><text x="34.0994%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (49 samples, 0.11%)</title><rect x="33.8494%" y="949" width="0.1137%" height="15" fill="rgb(217,118,1)" fg:x="14584" fg:w="49"/><text x="34.0994%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.13%)</title><rect x="33.8401%" y="997" width="0.1323%" height="15" fill="rgb(232,180,48)" fg:x="14580" fg:w="57"/><text x="34.0901%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (55 samples, 0.13%)</title><rect x="33.8447%" y="981" width="0.1277%" height="15" fill="rgb(230,27,33)" fg:x="14582" fg:w="55"/><text x="34.0947%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (14 samples, 0.03%)</title><rect x="33.9793%" y="981" width="0.0325%" height="15" fill="rgb(205,31,21)" fg:x="14640" fg:w="14"/><text x="34.2293%" y="991.50"></text></g><g><title>borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt;::remap_refs (111 samples, 0.26%)</title><rect x="33.7658%" y="1013" width="0.2576%" height="15" fill="rgb(253,59,4)" fg:x="14548" fg:w="111"/><text x="34.0158%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (19 samples, 0.04%)</title><rect x="33.9793%" y="997" width="0.0441%" height="15" fill="rgb(224,201,9)" fg:x="14640" fg:w="19"/><text x="34.2293%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="34.0118%" y="981" width="0.0116%" height="15" fill="rgb(229,206,30)" fg:x="14654" fg:w="5"/><text x="34.2618%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.01%)</title><rect x="34.0420%" y="933" width="0.0116%" height="15" fill="rgb(212,67,47)" fg:x="14667" fg:w="5"/><text x="34.2920%" y="943.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.03%)</title><rect x="34.0281%" y="997" width="0.0302%" height="15" fill="rgb(211,96,50)" fg:x="14661" fg:w="13"/><text x="34.2781%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.03%)</title><rect x="34.0281%" y="981" width="0.0302%" height="15" fill="rgb(252,114,18)" fg:x="14661" fg:w="13"/><text x="34.2781%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.03%)</title><rect x="34.0327%" y="965" width="0.0255%" height="15" fill="rgb(223,58,37)" fg:x="14663" fg:w="11"/><text x="34.2827%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (10 samples, 0.02%)</title><rect x="34.0350%" y="949" width="0.0232%" height="15" fill="rgb(237,70,4)" fg:x="14664" fg:w="10"/><text x="34.2850%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (8 samples, 0.02%)</title><rect x="34.0629%" y="917" width="0.0186%" height="15" fill="rgb(244,85,46)" fg:x="14676" fg:w="8"/><text x="34.3129%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (5 samples, 0.01%)</title><rect x="34.0699%" y="901" width="0.0116%" height="15" fill="rgb(223,39,52)" fg:x="14679" fg:w="5"/><text x="34.3199%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="34.0838%" y="917" width="0.0139%" height="15" fill="rgb(218,200,14)" fg:x="14685" fg:w="6"/><text x="34.3338%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="34.0838%" y="901" width="0.0139%" height="15" fill="rgb(208,171,16)" fg:x="14685" fg:w="6"/><text x="34.3338%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="34.0861%" y="885" width="0.0116%" height="15" fill="rgb(234,200,18)" fg:x="14686" fg:w="5"/><text x="34.3361%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (16 samples, 0.04%)</title><rect x="34.0629%" y="933" width="0.0371%" height="15" fill="rgb(228,45,11)" fg:x="14676" fg:w="16"/><text x="34.3129%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.04%)</title><rect x="34.0583%" y="965" width="0.0441%" height="15" fill="rgb(237,182,11)" fg:x="14674" fg:w="19"/><text x="34.3083%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (19 samples, 0.04%)</title><rect x="34.0583%" y="949" width="0.0441%" height="15" fill="rgb(241,175,49)" fg:x="14674" fg:w="19"/><text x="34.3083%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.05%)</title><rect x="34.0583%" y="997" width="0.0487%" height="15" fill="rgb(247,38,35)" fg:x="14674" fg:w="21"/><text x="34.3083%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (21 samples, 0.05%)</title><rect x="34.0583%" y="981" width="0.0487%" height="15" fill="rgb(228,39,49)" fg:x="14674" fg:w="21"/><text x="34.3083%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (16 samples, 0.04%)</title><rect x="34.1186%" y="965" width="0.0371%" height="15" fill="rgb(226,101,26)" fg:x="14700" fg:w="16"/><text x="34.3686%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (20 samples, 0.05%)</title><rect x="34.1116%" y="981" width="0.0464%" height="15" fill="rgb(206,141,19)" fg:x="14697" fg:w="20"/><text x="34.3616%" y="991.50"></text></g><g><title>borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (171 samples, 0.40%)</title><rect x="33.7635%" y="1029" width="0.3969%" height="15" fill="rgb(211,200,13)" fg:x="14547" fg:w="171"/><text x="34.0135%" y="1039.50"></text></g><g><title>borrow_graph::shared::remap_set (59 samples, 0.14%)</title><rect x="34.0234%" y="1013" width="0.1369%" height="15" fill="rgb(241,121,6)" fg:x="14659" fg:w="59"/><text x="34.2734%" y="1023.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (22 samples, 0.05%)</title><rect x="34.1093%" y="997" width="0.0511%" height="15" fill="rgb(234,221,29)" fg:x="14696" fg:w="22"/><text x="34.3593%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (788 samples, 1.83%)</title><rect x="32.3361%" y="1045" width="1.8289%" height="15" fill="rgb(229,136,5)" fg:x="13932" fg:w="788"/><text x="32.5861%" y="1055.50">b..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (9 samples, 0.02%)</title><rect x="34.1650%" y="1029" width="0.0209%" height="15" fill="rgb(238,36,11)" fg:x="14720" fg:w="9"/><text x="34.4150%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (9 samples, 0.02%)</title><rect x="34.1650%" y="1013" width="0.0209%" height="15" fill="rgb(251,55,41)" fg:x="14720" fg:w="9"/><text x="34.4150%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (9 samples, 0.02%)</title><rect x="34.1650%" y="997" width="0.0209%" height="15" fill="rgb(242,34,40)" fg:x="14720" fg:w="9"/><text x="34.4150%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (11 samples, 0.03%)</title><rect x="34.2045%" y="917" width="0.0255%" height="15" fill="rgb(215,42,17)" fg:x="14737" fg:w="11"/><text x="34.4545%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.02%)</title><rect x="34.2300%" y="917" width="0.0232%" height="15" fill="rgb(207,44,46)" fg:x="14748" fg:w="10"/><text x="34.4800%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="34.2370%" y="901" width="0.0162%" height="15" fill="rgb(211,206,28)" fg:x="14751" fg:w="7"/><text x="34.4870%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="34.2416%" y="885" width="0.0116%" height="15" fill="rgb(237,167,16)" fg:x="14753" fg:w="5"/><text x="34.4916%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (29 samples, 0.07%)</title><rect x="34.1929%" y="933" width="0.0673%" height="15" fill="rgb(233,66,6)" fg:x="14732" fg:w="29"/><text x="34.4429%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (44 samples, 0.10%)</title><rect x="34.1650%" y="1045" width="0.1021%" height="15" fill="rgb(246,123,29)" fg:x="14720" fg:w="44"/><text x="34.4150%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (35 samples, 0.08%)</title><rect x="34.1859%" y="1029" width="0.0812%" height="15" fill="rgb(209,62,40)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 0.08%)</title><rect x="34.1859%" y="1013" width="0.0812%" height="15" fill="rgb(218,4,25)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="34.1859%" y="997" width="0.0812%" height="15" fill="rgb(253,91,49)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (35 samples, 0.08%)</title><rect x="34.1859%" y="981" width="0.0812%" height="15" fill="rgb(228,155,29)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (35 samples, 0.08%)</title><rect x="34.1859%" y="965" width="0.0812%" height="15" fill="rgb(243,57,37)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (35 samples, 0.08%)</title><rect x="34.1859%" y="949" width="0.0812%" height="15" fill="rgb(244,167,17)" fg:x="14729" fg:w="35"/><text x="34.4359%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.02%)</title><rect x="34.3159%" y="869" width="0.0232%" height="15" fill="rgb(207,181,38)" fg:x="14785" fg:w="10"/><text x="34.5659%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (8 samples, 0.02%)</title><rect x="34.3391%" y="869" width="0.0186%" height="15" fill="rgb(211,8,23)" fg:x="14795" fg:w="8"/><text x="34.5891%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.01%)</title><rect x="34.3461%" y="853" width="0.0116%" height="15" fill="rgb(235,11,44)" fg:x="14798" fg:w="5"/><text x="34.5961%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (19 samples, 0.04%)</title><rect x="34.3577%" y="869" width="0.0441%" height="15" fill="rgb(248,18,52)" fg:x="14803" fg:w="19"/><text x="34.6077%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.03%)</title><rect x="34.3762%" y="853" width="0.0255%" height="15" fill="rgb(208,4,7)" fg:x="14811" fg:w="11"/><text x="34.6262%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="34.3809%" y="837" width="0.0209%" height="15" fill="rgb(240,17,39)" fg:x="14813" fg:w="9"/><text x="34.6309%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (43 samples, 0.10%)</title><rect x="34.3112%" y="885" width="0.0998%" height="15" fill="rgb(207,170,3)" fg:x="14783" fg:w="43"/><text x="34.5612%" y="895.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="34.4110%" y="885" width="0.0162%" height="15" fill="rgb(236,100,52)" fg:x="14826" fg:w="7"/><text x="34.6610%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (57 samples, 0.13%)</title><rect x="34.2973%" y="917" width="0.1323%" height="15" fill="rgb(246,78,51)" fg:x="14777" fg:w="57"/><text x="34.5473%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (56 samples, 0.13%)</title><rect x="34.2996%" y="901" width="0.1300%" height="15" fill="rgb(211,17,15)" fg:x="14778" fg:w="56"/><text x="34.5496%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.15%)</title><rect x="34.2834%" y="949" width="0.1532%" height="15" fill="rgb(209,59,46)" fg:x="14771" fg:w="66"/><text x="34.5334%" y="959.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (63 samples, 0.15%)</title><rect x="34.2904%" y="933" width="0.1462%" height="15" fill="rgb(210,92,25)" fg:x="14774" fg:w="63"/><text x="34.5404%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state::_{{closure}} (8 samples, 0.02%)</title><rect x="34.4459%" y="933" width="0.0186%" height="15" fill="rgb(238,174,52)" fg:x="14841" fg:w="8"/><text x="34.6959%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="34.4528%" y="917" width="0.0116%" height="15" fill="rgb(230,73,7)" fg:x="14844" fg:w="5"/><text x="34.7028%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="34.4528%" y="901" width="0.0116%" height="15" fill="rgb(243,124,40)" fg:x="14844" fg:w="5"/><text x="34.7028%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="34.4528%" y="885" width="0.0116%" height="15" fill="rgb(244,170,11)" fg:x="14844" fg:w="5"/><text x="34.7028%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="34.4528%" y="869" width="0.0116%" height="15" fill="rgb(207,114,54)" fg:x="14844" fg:w="5"/><text x="34.7028%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="34.5294%" y="725" width="0.0116%" height="15" fill="rgb(205,42,20)" fg:x="14877" fg:w="5"/><text x="34.7794%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="34.5294%" y="709" width="0.0116%" height="15" fill="rgb(230,30,28)" fg:x="14877" fg:w="5"/><text x="34.7794%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.03%)</title><rect x="34.5201%" y="773" width="0.0279%" height="15" fill="rgb(205,73,54)" fg:x="14873" fg:w="12"/><text x="34.7701%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.03%)</title><rect x="34.5225%" y="757" width="0.0255%" height="15" fill="rgb(254,227,23)" fg:x="14874" fg:w="11"/><text x="34.7725%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.02%)</title><rect x="34.5271%" y="741" width="0.0209%" height="15" fill="rgb(228,202,34)" fg:x="14876" fg:w="9"/><text x="34.7771%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (8 samples, 0.02%)</title><rect x="34.5480%" y="773" width="0.0186%" height="15" fill="rgb(222,225,37)" fg:x="14885" fg:w="8"/><text x="34.7980%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (7 samples, 0.02%)</title><rect x="34.5503%" y="757" width="0.0162%" height="15" fill="rgb(221,14,54)" fg:x="14886" fg:w="7"/><text x="34.8003%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (5 samples, 0.01%)</title><rect x="34.5549%" y="741" width="0.0116%" height="15" fill="rgb(254,102,2)" fg:x="14888" fg:w="5"/><text x="34.8049%" y="751.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (23 samples, 0.05%)</title><rect x="34.5155%" y="789" width="0.0534%" height="15" fill="rgb(232,104,17)" fg:x="14871" fg:w="23"/><text x="34.7655%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (33 samples, 0.08%)</title><rect x="34.5039%" y="869" width="0.0766%" height="15" fill="rgb(250,220,14)" fg:x="14866" fg:w="33"/><text x="34.7539%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (33 samples, 0.08%)</title><rect x="34.5039%" y="853" width="0.0766%" height="15" fill="rgb(241,158,9)" fg:x="14866" fg:w="33"/><text x="34.7539%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.07%)</title><rect x="34.5085%" y="837" width="0.0720%" height="15" fill="rgb(246,9,43)" fg:x="14868" fg:w="31"/><text x="34.7585%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (31 samples, 0.07%)</title><rect x="34.5085%" y="821" width="0.0720%" height="15" fill="rgb(206,73,33)" fg:x="14868" fg:w="31"/><text x="34.7585%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (30 samples, 0.07%)</title><rect x="34.5109%" y="805" width="0.0696%" height="15" fill="rgb(222,79,8)" fg:x="14869" fg:w="30"/><text x="34.7609%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="34.6246%" y="821" width="0.0325%" height="15" fill="rgb(234,8,54)" fg:x="14918" fg:w="14"/><text x="34.8746%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="34.6571%" y="821" width="0.0116%" height="15" fill="rgb(209,134,38)" fg:x="14932" fg:w="5"/><text x="34.9071%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (89 samples, 0.21%)</title><rect x="34.4807%" y="885" width="0.2066%" height="15" fill="rgb(230,127,29)" fg:x="14856" fg:w="89"/><text x="34.7307%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (46 samples, 0.11%)</title><rect x="34.5805%" y="869" width="0.1068%" height="15" fill="rgb(242,44,41)" fg:x="14899" fg:w="46"/><text x="34.8305%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (41 samples, 0.10%)</title><rect x="34.5921%" y="853" width="0.0952%" height="15" fill="rgb(222,56,43)" fg:x="14904" fg:w="41"/><text x="34.8421%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (39 samples, 0.09%)</title><rect x="34.5967%" y="837" width="0.0905%" height="15" fill="rgb(238,39,47)" fg:x="14906" fg:w="39"/><text x="34.8467%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (102 samples, 0.24%)</title><rect x="34.4644%" y="933" width="0.2367%" height="15" fill="rgb(226,79,43)" fg:x="14849" fg:w="102"/><text x="34.7144%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (102 samples, 0.24%)</title><rect x="34.4644%" y="917" width="0.2367%" height="15" fill="rgb(242,105,53)" fg:x="14849" fg:w="102"/><text x="34.7144%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (101 samples, 0.23%)</title><rect x="34.4668%" y="901" width="0.2344%" height="15" fill="rgb(251,132,46)" fg:x="14850" fg:w="101"/><text x="34.7168%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.01%)</title><rect x="34.6872%" y="885" width="0.0139%" height="15" fill="rgb(231,77,14)" fg:x="14945" fg:w="6"/><text x="34.9372%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (188 samples, 0.44%)</title><rect x="34.2671%" y="1045" width="0.4363%" height="15" fill="rgb(240,135,9)" fg:x="14764" fg:w="188"/><text x="34.5171%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (188 samples, 0.44%)</title><rect x="34.2671%" y="1029" width="0.4363%" height="15" fill="rgb(248,109,14)" fg:x="14764" fg:w="188"/><text x="34.5171%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (188 samples, 0.44%)</title><rect x="34.2671%" y="1013" width="0.4363%" height="15" fill="rgb(227,146,52)" fg:x="14764" fg:w="188"/><text x="34.5171%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (188 samples, 0.44%)</title><rect x="34.2671%" y="997" width="0.4363%" height="15" fill="rgb(232,54,3)" fg:x="14764" fg:w="188"/><text x="34.5171%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (188 samples, 0.44%)</title><rect x="34.2671%" y="981" width="0.4363%" height="15" fill="rgb(229,201,43)" fg:x="14764" fg:w="188"/><text x="34.5171%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (183 samples, 0.42%)</title><rect x="34.2788%" y="965" width="0.4247%" height="15" fill="rgb(252,161,33)" fg:x="14769" fg:w="183"/><text x="34.5288%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (115 samples, 0.27%)</title><rect x="34.4366%" y="949" width="0.2669%" height="15" fill="rgb(226,146,40)" fg:x="14837" fg:w="115"/><text x="34.6866%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="34.7058%" y="933" width="0.0232%" height="15" fill="rgb(219,47,25)" fg:x="14953" fg:w="10"/><text x="34.9558%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="34.7058%" y="917" width="0.0232%" height="15" fill="rgb(250,135,13)" fg:x="14953" fg:w="10"/><text x="34.9558%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (6 samples, 0.01%)</title><rect x="34.7290%" y="933" width="0.0139%" height="15" fill="rgb(219,229,18)" fg:x="14963" fg:w="6"/><text x="34.9790%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (23 samples, 0.05%)</title><rect x="34.7035%" y="965" width="0.0534%" height="15" fill="rgb(217,152,27)" fg:x="14952" fg:w="23"/><text x="34.9535%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (23 samples, 0.05%)</title><rect x="34.7035%" y="949" width="0.0534%" height="15" fill="rgb(225,71,47)" fg:x="14952" fg:w="23"/><text x="34.9535%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (18 samples, 0.04%)</title><rect x="34.8056%" y="901" width="0.0418%" height="15" fill="rgb(220,139,14)" fg:x="14996" fg:w="18"/><text x="35.0556%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.03%)</title><rect x="34.8126%" y="885" width="0.0348%" height="15" fill="rgb(247,54,32)" fg:x="14999" fg:w="15"/><text x="35.0626%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.03%)</title><rect x="34.8195%" y="869" width="0.0279%" height="15" fill="rgb(252,131,39)" fg:x="15002" fg:w="12"/><text x="35.0695%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (34 samples, 0.08%)</title><rect x="34.7708%" y="917" width="0.0789%" height="15" fill="rgb(210,108,39)" fg:x="14981" fg:w="34"/><text x="35.0208%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (38 samples, 0.09%)</title><rect x="34.7685%" y="933" width="0.0882%" height="15" fill="rgb(205,23,29)" fg:x="14980" fg:w="38"/><text x="35.0185%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (1,314 samples, 3.05%)</title><rect x="31.8162%" y="1061" width="3.0498%" height="15" fill="rgb(246,139,46)" fg:x="13708" fg:w="1314"/><text x="32.0662%" y="1071.50">byt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (70 samples, 0.16%)</title><rect x="34.7035%" y="1045" width="0.1625%" height="15" fill="rgb(250,81,26)" fg:x="14952" fg:w="70"/><text x="34.9535%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.16%)</title><rect x="34.7035%" y="1029" width="0.1625%" height="15" fill="rgb(214,104,7)" fg:x="14952" fg:w="70"/><text x="34.9535%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (70 samples, 0.16%)</title><rect x="34.7035%" y="1013" width="0.1625%" height="15" fill="rgb(233,189,8)" fg:x="14952" fg:w="70"/><text x="34.9535%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.16%)</title><rect x="34.7035%" y="997" width="0.1625%" height="15" fill="rgb(228,141,17)" fg:x="14952" fg:w="70"/><text x="34.9535%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (70 samples, 0.16%)</title><rect x="34.7035%" y="981" width="0.1625%" height="15" fill="rgb(247,157,1)" fg:x="14952" fg:w="70"/><text x="34.9535%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (47 samples, 0.11%)</title><rect x="34.7569%" y="965" width="0.1091%" height="15" fill="rgb(249,225,5)" fg:x="14975" fg:w="47"/><text x="35.0069%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (47 samples, 0.11%)</title><rect x="34.7569%" y="949" width="0.1091%" height="15" fill="rgb(242,55,13)" fg:x="14975" fg:w="47"/><text x="35.0069%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.02%)</title><rect x="34.8985%" y="901" width="0.0232%" height="15" fill="rgb(230,49,50)" fg:x="15036" fg:w="10"/><text x="35.1485%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (8 samples, 0.02%)</title><rect x="34.9286%" y="901" width="0.0186%" height="15" fill="rgb(241,111,38)" fg:x="15049" fg:w="8"/><text x="35.1786%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (22 samples, 0.05%)</title><rect x="34.9565%" y="901" width="0.0511%" height="15" fill="rgb(252,155,4)" fg:x="15061" fg:w="22"/><text x="35.2065%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.03%)</title><rect x="34.9727%" y="885" width="0.0348%" height="15" fill="rgb(212,69,32)" fg:x="15068" fg:w="15"/><text x="35.2227%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.03%)</title><rect x="34.9797%" y="869" width="0.0279%" height="15" fill="rgb(243,107,47)" fg:x="15071" fg:w="12"/><text x="35.2297%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.02%)</title><rect x="34.9867%" y="853" width="0.0209%" height="15" fill="rgb(247,130,12)" fg:x="15074" fg:w="9"/><text x="35.2367%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (70 samples, 0.16%)</title><rect x="34.8660%" y="1045" width="0.1625%" height="15" fill="rgb(233,74,16)" fg:x="15022" fg:w="70"/><text x="35.1160%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.16%)</title><rect x="34.8660%" y="1029" width="0.1625%" height="15" fill="rgb(208,58,18)" fg:x="15022" fg:w="70"/><text x="35.1160%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (70 samples, 0.16%)</title><rect x="34.8660%" y="1013" width="0.1625%" height="15" fill="rgb(242,225,1)" fg:x="15022" fg:w="70"/><text x="35.1160%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.16%)</title><rect x="34.8660%" y="997" width="0.1625%" height="15" fill="rgb(249,39,40)" fg:x="15022" fg:w="70"/><text x="35.1160%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (70 samples, 0.16%)</title><rect x="34.8660%" y="981" width="0.1625%" height="15" fill="rgb(207,72,44)" fg:x="15022" fg:w="70"/><text x="35.1160%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (67 samples, 0.16%)</title><rect x="34.8729%" y="965" width="0.1555%" height="15" fill="rgb(215,193,12)" fg:x="15025" fg:w="67"/><text x="35.1229%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (67 samples, 0.16%)</title><rect x="34.8729%" y="949" width="0.1555%" height="15" fill="rgb(248,41,39)" fg:x="15025" fg:w="67"/><text x="35.1229%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (67 samples, 0.16%)</title><rect x="34.8729%" y="933" width="0.1555%" height="15" fill="rgb(253,85,4)" fg:x="15025" fg:w="67"/><text x="35.1229%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (67 samples, 0.16%)</title><rect x="34.8729%" y="917" width="0.1555%" height="15" fill="rgb(243,70,31)" fg:x="15025" fg:w="67"/><text x="35.1229%" y="927.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="35.0122%" y="901" width="0.0162%" height="15" fill="rgb(253,195,26)" fg:x="15085" fg:w="7"/><text x="35.2622%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="35.0284%" y="917" width="0.0116%" height="15" fill="rgb(243,42,11)" fg:x="15092" fg:w="5"/><text x="35.2784%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.01%)</title><rect x="35.0400%" y="917" width="0.0116%" height="15" fill="rgb(239,66,17)" fg:x="15097" fg:w="5"/><text x="35.2900%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.03%)</title><rect x="35.0284%" y="949" width="0.0348%" height="15" fill="rgb(217,132,21)" fg:x="15092" fg:w="15"/><text x="35.2784%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (15 samples, 0.03%)</title><rect x="35.0284%" y="933" width="0.0348%" height="15" fill="rgb(252,202,21)" fg:x="15092" fg:w="15"/><text x="35.2784%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.02%)</title><rect x="35.0749%" y="885" width="0.0162%" height="15" fill="rgb(233,98,36)" fg:x="15112" fg:w="7"/><text x="35.3249%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (9 samples, 0.02%)</title><rect x="35.0911%" y="885" width="0.0209%" height="15" fill="rgb(216,153,54)" fg:x="15119" fg:w="9"/><text x="35.3411%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.01%)</title><rect x="35.1004%" y="869" width="0.0116%" height="15" fill="rgb(250,99,7)" fg:x="15123" fg:w="5"/><text x="35.3504%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (6 samples, 0.01%)</title><rect x="35.1143%" y="885" width="0.0139%" height="15" fill="rgb(207,56,50)" fg:x="15129" fg:w="6"/><text x="35.3643%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="35.1329%" y="885" width="0.0186%" height="15" fill="rgb(244,61,34)" fg:x="15137" fg:w="8"/><text x="35.3829%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="35.1398%" y="869" width="0.0116%" height="15" fill="rgb(241,50,38)" fg:x="15140" fg:w="5"/><text x="35.3898%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="35.1398%" y="853" width="0.0116%" height="15" fill="rgb(212,166,30)" fg:x="15140" fg:w="5"/><text x="35.3898%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (43 samples, 0.10%)</title><rect x="35.0656%" y="901" width="0.0998%" height="15" fill="rgb(249,127,32)" fg:x="15108" fg:w="43"/><text x="35.3156%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (51 samples, 0.12%)</title><rect x="35.0632%" y="917" width="0.1184%" height="15" fill="rgb(209,103,0)" fg:x="15107" fg:w="51"/><text x="35.3132%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (7 samples, 0.02%)</title><rect x="35.1654%" y="901" width="0.0162%" height="15" fill="rgb(238,209,51)" fg:x="15151" fg:w="7"/><text x="35.4154%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (67 samples, 0.16%)</title><rect x="35.0284%" y="965" width="0.1555%" height="15" fill="rgb(237,56,23)" fg:x="15092" fg:w="67"/><text x="35.2784%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (52 samples, 0.12%)</title><rect x="35.0632%" y="949" width="0.1207%" height="15" fill="rgb(215,153,46)" fg:x="15107" fg:w="52"/><text x="35.3132%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (52 samples, 0.12%)</title><rect x="35.0632%" y="933" width="0.1207%" height="15" fill="rgb(224,49,31)" fg:x="15107" fg:w="52"/><text x="35.3132%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (5 samples, 0.01%)</title><rect x="35.1839%" y="917" width="0.0116%" height="15" fill="rgb(250,18,42)" fg:x="15159" fg:w="5"/><text x="35.4339%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (5 samples, 0.01%)</title><rect x="35.1839%" y="901" width="0.0116%" height="15" fill="rgb(215,176,39)" fg:x="15159" fg:w="5"/><text x="35.4339%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="35.1839%" y="885" width="0.0116%" height="15" fill="rgb(223,77,29)" fg:x="15159" fg:w="5"/><text x="35.4339%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (11 samples, 0.03%)</title><rect x="35.2071%" y="821" width="0.0255%" height="15" fill="rgb(234,94,52)" fg:x="15169" fg:w="11"/><text x="35.4571%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (7 samples, 0.02%)</title><rect x="35.2164%" y="805" width="0.0162%" height="15" fill="rgb(220,154,50)" fg:x="15173" fg:w="7"/><text x="35.4664%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (16 samples, 0.04%)</title><rect x="35.2071%" y="837" width="0.0371%" height="15" fill="rgb(212,11,10)" fg:x="15169" fg:w="16"/><text x="35.4571%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="35.2489%" y="709" width="0.0116%" height="15" fill="rgb(205,166,19)" fg:x="15187" fg:w="5"/><text x="35.4989%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.01%)</title><rect x="35.2605%" y="709" width="0.0116%" height="15" fill="rgb(244,198,16)" fg:x="15192" fg:w="5"/><text x="35.5105%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="35.2605%" y="693" width="0.0116%" height="15" fill="rgb(219,69,12)" fg:x="15192" fg:w="5"/><text x="35.5105%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="35.2605%" y="677" width="0.0116%" height="15" fill="rgb(245,30,7)" fg:x="15192" fg:w="5"/><text x="35.5105%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.01%)</title><rect x="35.2605%" y="661" width="0.0116%" height="15" fill="rgb(218,221,48)" fg:x="15192" fg:w="5"/><text x="35.5105%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (11 samples, 0.03%)</title><rect x="35.2489%" y="725" width="0.0255%" height="15" fill="rgb(216,66,15)" fg:x="15187" fg:w="11"/><text x="35.4989%" y="735.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (1,492 samples, 3.46%)</title><rect x="31.8162%" y="1077" width="3.4629%" height="15" fill="rgb(226,122,50)" fg:x="13708" fg:w="1492"/><text x="32.0662%" y="1087.50">&lt;by..</text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (178 samples, 0.41%)</title><rect x="34.8660%" y="1061" width="0.4131%" height="15" fill="rgb(239,156,16)" fg:x="15022" fg:w="178"/><text x="35.1160%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (108 samples, 0.25%)</title><rect x="35.0284%" y="1045" width="0.2507%" height="15" fill="rgb(224,27,38)" fg:x="15092" fg:w="108"/><text x="35.2784%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (108 samples, 0.25%)</title><rect x="35.0284%" y="1029" width="0.2507%" height="15" fill="rgb(224,39,27)" fg:x="15092" fg:w="108"/><text x="35.2784%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.25%)</title><rect x="35.0284%" y="1013" width="0.2507%" height="15" fill="rgb(215,92,29)" fg:x="15092" fg:w="108"/><text x="35.2784%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (108 samples, 0.25%)</title><rect x="35.0284%" y="997" width="0.2507%" height="15" fill="rgb(207,159,16)" fg:x="15092" fg:w="108"/><text x="35.2784%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.25%)</title><rect x="35.0284%" y="981" width="0.2507%" height="15" fill="rgb(238,163,47)" fg:x="15092" fg:w="108"/><text x="35.2784%" y="991.50"></text></g><g><title>core::mem::drop (41 samples, 0.10%)</title><rect x="35.1839%" y="965" width="0.0952%" height="15" fill="rgb(219,91,49)" fg:x="15159" fg:w="41"/><text x="35.4339%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (41 samples, 0.10%)</title><rect x="35.1839%" y="949" width="0.0952%" height="15" fill="rgb(227,167,31)" fg:x="15159" fg:w="41"/><text x="35.4339%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (41 samples, 0.10%)</title><rect x="35.1839%" y="933" width="0.0952%" height="15" fill="rgb(234,80,54)" fg:x="15159" fg:w="41"/><text x="35.4339%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (36 samples, 0.08%)</title><rect x="35.1955%" y="917" width="0.0836%" height="15" fill="rgb(212,114,2)" fg:x="15164" fg:w="36"/><text x="35.4455%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (36 samples, 0.08%)</title><rect x="35.1955%" y="901" width="0.0836%" height="15" fill="rgb(234,50,24)" fg:x="15164" fg:w="36"/><text x="35.4455%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.08%)</title><rect x="35.1955%" y="885" width="0.0836%" height="15" fill="rgb(221,68,8)" fg:x="15164" fg:w="36"/><text x="35.4455%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (31 samples, 0.07%)</title><rect x="35.2071%" y="869" width="0.0720%" height="15" fill="rgb(254,180,31)" fg:x="15169" fg:w="31"/><text x="35.4571%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.07%)</title><rect x="35.2071%" y="853" width="0.0720%" height="15" fill="rgb(247,130,50)" fg:x="15169" fg:w="31"/><text x="35.4571%" y="863.50"></text></g><g><title>core::mem::drop (15 samples, 0.03%)</title><rect x="35.2443%" y="837" width="0.0348%" height="15" fill="rgb(211,109,4)" fg:x="15185" fg:w="15"/><text x="35.4943%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (15 samples, 0.03%)</title><rect x="35.2443%" y="821" width="0.0348%" height="15" fill="rgb(238,50,21)" fg:x="15185" fg:w="15"/><text x="35.4943%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="35.2443%" y="805" width="0.0348%" height="15" fill="rgb(225,57,45)" fg:x="15185" fg:w="15"/><text x="35.4943%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (15 samples, 0.03%)</title><rect x="35.2443%" y="789" width="0.0348%" height="15" fill="rgb(209,196,50)" fg:x="15185" fg:w="15"/><text x="35.4943%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="35.2443%" y="773" width="0.0348%" height="15" fill="rgb(242,140,13)" fg:x="15185" fg:w="15"/><text x="35.4943%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (13 samples, 0.03%)</title><rect x="35.2489%" y="757" width="0.0302%" height="15" fill="rgb(217,111,7)" fg:x="15187" fg:w="13"/><text x="35.4989%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="35.2489%" y="741" width="0.0302%" height="15" fill="rgb(253,193,51)" fg:x="15187" fg:w="13"/><text x="35.4989%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="35.2814%" y="1013" width="0.0139%" height="15" fill="rgb(252,70,29)" fg:x="15201" fg:w="6"/><text x="35.5314%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (5 samples, 0.01%)</title><rect x="35.2953%" y="1013" width="0.0116%" height="15" fill="rgb(232,127,12)" fg:x="15207" fg:w="5"/><text x="35.5453%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.03%)</title><rect x="35.2791%" y="1029" width="0.0302%" height="15" fill="rgb(211,180,21)" fg:x="15200" fg:w="13"/><text x="35.5291%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (7 samples, 0.02%)</title><rect x="35.3093%" y="1029" width="0.0162%" height="15" fill="rgb(229,72,13)" fg:x="15213" fg:w="7"/><text x="35.5593%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.03%)</title><rect x="35.3255%" y="1029" width="0.0255%" height="15" fill="rgb(240,211,49)" fg:x="15220" fg:w="11"/><text x="35.5755%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="35.3371%" y="1013" width="0.0139%" height="15" fill="rgb(219,149,40)" fg:x="15225" fg:w="6"/><text x="35.5871%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (6 samples, 0.01%)</title><rect x="35.3835%" y="1013" width="0.0139%" height="15" fill="rgb(210,127,46)" fg:x="15245" fg:w="6"/><text x="35.6335%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (8 samples, 0.02%)</title><rect x="35.3998%" y="1013" width="0.0186%" height="15" fill="rgb(220,106,7)" fg:x="15252" fg:w="8"/><text x="35.6498%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="35.4044%" y="997" width="0.0139%" height="15" fill="rgb(249,31,22)" fg:x="15254" fg:w="6"/><text x="35.6544%" y="1007.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="35.4044%" y="981" width="0.0139%" height="15" fill="rgb(253,1,49)" fg:x="15254" fg:w="6"/><text x="35.6544%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (26 samples, 0.06%)</title><rect x="35.3650%" y="1029" width="0.0603%" height="15" fill="rgb(227,144,33)" fg:x="15237" fg:w="26"/><text x="35.6150%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="35.4346%" y="933" width="0.0186%" height="15" fill="rgb(249,163,44)" fg:x="15267" fg:w="8"/><text x="35.6846%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="35.4346%" y="917" width="0.0186%" height="15" fill="rgb(234,15,39)" fg:x="15267" fg:w="8"/><text x="35.6846%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (15 samples, 0.03%)</title><rect x="35.4300%" y="949" width="0.0348%" height="15" fill="rgb(207,66,16)" fg:x="15265" fg:w="15"/><text x="35.6800%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (18 samples, 0.04%)</title><rect x="35.4300%" y="981" width="0.0418%" height="15" fill="rgb(233,112,24)" fg:x="15265" fg:w="18"/><text x="35.6800%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.04%)</title><rect x="35.4300%" y="965" width="0.0418%" height="15" fill="rgb(230,90,22)" fg:x="15265" fg:w="18"/><text x="35.6800%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (10 samples, 0.02%)</title><rect x="35.4717%" y="981" width="0.0232%" height="15" fill="rgb(229,61,13)" fg:x="15283" fg:w="10"/><text x="35.7217%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (5 samples, 0.01%)</title><rect x="35.4833%" y="965" width="0.0116%" height="15" fill="rgb(225,57,24)" fg:x="15288" fg:w="5"/><text x="35.7333%" y="975.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (30 samples, 0.07%)</title><rect x="35.4276%" y="997" width="0.0696%" height="15" fill="rgb(208,169,48)" fg:x="15264" fg:w="30"/><text x="35.6776%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (32 samples, 0.07%)</title><rect x="35.4253%" y="1029" width="0.0743%" height="15" fill="rgb(244,218,51)" fg:x="15263" fg:w="32"/><text x="35.6753%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (32 samples, 0.07%)</title><rect x="35.4253%" y="1013" width="0.0743%" height="15" fill="rgb(214,148,10)" fg:x="15263" fg:w="32"/><text x="35.6753%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (99 samples, 0.23%)</title><rect x="35.2791%" y="1061" width="0.2298%" height="15" fill="rgb(225,174,27)" fg:x="15200" fg:w="99"/><text x="35.5291%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (99 samples, 0.23%)</title><rect x="35.2791%" y="1045" width="0.2298%" height="15" fill="rgb(230,96,26)" fg:x="15200" fg:w="99"/><text x="35.5291%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.03%)</title><rect x="35.5298%" y="965" width="0.0255%" height="15" fill="rgb(232,10,30)" fg:x="15308" fg:w="11"/><text x="35.7798%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="35.5251%" y="997" width="0.0348%" height="15" fill="rgb(222,8,50)" fg:x="15306" fg:w="15"/><text x="35.7751%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="35.5274%" y="981" width="0.0325%" height="15" fill="rgb(213,81,27)" fg:x="15307" fg:w="14"/><text x="35.7774%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.03%)</title><rect x="35.5646%" y="965" width="0.0302%" height="15" fill="rgb(245,50,10)" fg:x="15323" fg:w="13"/><text x="35.8146%" y="975.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (33 samples, 0.08%)</title><rect x="35.5228%" y="1013" width="0.0766%" height="15" fill="rgb(216,100,18)" fg:x="15305" fg:w="33"/><text x="35.7728%" y="1023.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="35.5599%" y="997" width="0.0395%" height="15" fill="rgb(236,147,54)" fg:x="15321" fg:w="17"/><text x="35.8099%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="35.5599%" y="981" width="0.0395%" height="15" fill="rgb(205,143,26)" fg:x="15321" fg:w="17"/><text x="35.8099%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (17 samples, 0.04%)</title><rect x="35.6110%" y="1013" width="0.0395%" height="15" fill="rgb(236,26,9)" fg:x="15343" fg:w="17"/><text x="35.8610%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="35.6319%" y="997" width="0.0186%" height="15" fill="rgb(221,165,53)" fg:x="15352" fg:w="8"/><text x="35.8819%" y="1007.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="35.6389%" y="981" width="0.0116%" height="15" fill="rgb(214,110,17)" fg:x="15355" fg:w="5"/><text x="35.8889%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (16 samples, 0.04%)</title><rect x="35.6621%" y="1013" width="0.0371%" height="15" fill="rgb(237,197,12)" fg:x="15365" fg:w="16"/><text x="35.9121%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.01%)</title><rect x="35.6853%" y="997" width="0.0139%" height="15" fill="rgb(205,84,17)" fg:x="15375" fg:w="6"/><text x="35.9353%" y="1007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="35.6876%" y="981" width="0.0116%" height="15" fill="rgb(237,18,45)" fg:x="15376" fg:w="5"/><text x="35.9376%" y="991.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="35.7247%" y="885" width="0.0116%" height="15" fill="rgb(221,87,14)" fg:x="15392" fg:w="5"/><text x="35.9747%" y="895.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="35.7247%" y="869" width="0.0116%" height="15" fill="rgb(238,186,15)" fg:x="15392" fg:w="5"/><text x="35.9747%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="35.7224%" y="917" width="0.0232%" height="15" fill="rgb(208,115,11)" fg:x="15391" fg:w="10"/><text x="35.9724%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="35.7224%" y="901" width="0.0232%" height="15" fill="rgb(254,175,0)" fg:x="15391" fg:w="10"/><text x="35.9724%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (14 samples, 0.03%)</title><rect x="35.7178%" y="933" width="0.0325%" height="15" fill="rgb(227,24,42)" fg:x="15389" fg:w="14"/><text x="35.9678%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (20 samples, 0.05%)</title><rect x="35.7108%" y="965" width="0.0464%" height="15" fill="rgb(223,211,37)" fg:x="15386" fg:w="20"/><text x="35.9608%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (19 samples, 0.04%)</title><rect x="35.7131%" y="949" width="0.0441%" height="15" fill="rgb(235,49,27)" fg:x="15387" fg:w="19"/><text x="35.9631%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (29 samples, 0.07%)</title><rect x="35.6992%" y="1013" width="0.0673%" height="15" fill="rgb(254,97,51)" fg:x="15381" fg:w="29"/><text x="35.9492%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (26 samples, 0.06%)</title><rect x="35.7062%" y="997" width="0.0603%" height="15" fill="rgb(249,51,40)" fg:x="15384" fg:w="26"/><text x="35.9562%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (25 samples, 0.06%)</title><rect x="35.7085%" y="981" width="0.0580%" height="15" fill="rgb(210,128,45)" fg:x="15385" fg:w="25"/><text x="35.9585%" y="991.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (1,704 samples, 3.95%)</title><rect x="31.8162%" y="1093" width="3.9550%" height="15" fill="rgb(224,137,50)" fg:x="13708" fg:w="1704"/><text x="32.0662%" y="1103.50">byte..</text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (212 samples, 0.49%)</title><rect x="35.2791%" y="1077" width="0.4921%" height="15" fill="rgb(242,15,9)" fg:x="15200" fg:w="212"/><text x="35.5291%" y="1087.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (113 samples, 0.26%)</title><rect x="35.5089%" y="1061" width="0.2623%" height="15" fill="rgb(233,187,41)" fg:x="15299" fg:w="113"/><text x="35.7589%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (113 samples, 0.26%)</title><rect x="35.5089%" y="1045" width="0.2623%" height="15" fill="rgb(227,2,29)" fg:x="15299" fg:w="113"/><text x="35.7589%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (113 samples, 0.26%)</title><rect x="35.5089%" y="1029" width="0.2623%" height="15" fill="rgb(222,70,3)" fg:x="15299" fg:w="113"/><text x="35.7589%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (5 samples, 0.01%)</title><rect x="35.7828%" y="997" width="0.0116%" height="15" fill="rgb(213,11,42)" fg:x="15417" fg:w="5"/><text x="36.0328%" y="1007.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="35.7828%" y="981" width="0.0116%" height="15" fill="rgb(225,150,9)" fg:x="15417" fg:w="5"/><text x="36.0328%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (5 samples, 0.01%)</title><rect x="35.7828%" y="965" width="0.0116%" height="15" fill="rgb(230,162,45)" fg:x="15417" fg:w="5"/><text x="36.0328%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.01%)</title><rect x="35.7828%" y="949" width="0.0116%" height="15" fill="rgb(222,14,52)" fg:x="15417" fg:w="5"/><text x="36.0328%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="35.8106%" y="981" width="0.0209%" height="15" fill="rgb(254,198,14)" fg:x="15429" fg:w="9"/><text x="36.0606%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (14 samples, 0.03%)</title><rect x="35.8036%" y="997" width="0.0325%" height="15" fill="rgb(220,217,30)" fg:x="15426" fg:w="14"/><text x="36.0536%" y="1007.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (9 samples, 0.02%)</title><rect x="35.8779%" y="949" width="0.0209%" height="15" fill="rgb(215,146,41)" fg:x="15458" fg:w="9"/><text x="36.1279%" y="959.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="35.9011%" y="901" width="0.0209%" height="15" fill="rgb(217,27,36)" fg:x="15468" fg:w="9"/><text x="36.1511%" y="911.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="35.9011%" y="885" width="0.0209%" height="15" fill="rgb(219,218,39)" fg:x="15468" fg:w="9"/><text x="36.1511%" y="895.50"></text></g><g><title>_int_malloc (7 samples, 0.02%)</title><rect x="35.9058%" y="869" width="0.0162%" height="15" fill="rgb(219,4,42)" fg:x="15470" fg:w="7"/><text x="36.1558%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.03%)</title><rect x="35.8988%" y="933" width="0.0348%" height="15" fill="rgb(249,119,36)" fg:x="15467" fg:w="15"/><text x="36.1488%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.03%)</title><rect x="35.8988%" y="917" width="0.0348%" height="15" fill="rgb(209,23,33)" fg:x="15467" fg:w="15"/><text x="36.1488%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (33 samples, 0.08%)</title><rect x="35.8640%" y="965" width="0.0766%" height="15" fill="rgb(211,10,0)" fg:x="15452" fg:w="33"/><text x="36.1140%" y="975.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.04%)</title><rect x="35.8988%" y="949" width="0.0418%" height="15" fill="rgb(208,99,37)" fg:x="15467" fg:w="18"/><text x="36.1488%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (43 samples, 0.10%)</title><rect x="35.8477%" y="997" width="0.0998%" height="15" fill="rgb(213,132,31)" fg:x="15445" fg:w="43"/><text x="36.0977%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (42 samples, 0.10%)</title><rect x="35.8501%" y="981" width="0.0975%" height="15" fill="rgb(243,129,40)" fg:x="15446" fg:w="42"/><text x="36.1001%" y="991.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (1,935 samples, 4.49%)</title><rect x="31.4587%" y="1109" width="4.4911%" height="15" fill="rgb(210,66,33)" fg:x="13554" fg:w="1935"/><text x="31.7087%" y="1119.50">bytec..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (76 samples, 0.18%)</title><rect x="35.7735%" y="1093" width="0.1764%" height="15" fill="rgb(209,189,4)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (76 samples, 0.18%)</title><rect x="35.7735%" y="1077" width="0.1764%" height="15" fill="rgb(214,107,37)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (76 samples, 0.18%)</title><rect x="35.7735%" y="1061" width="0.1764%" height="15" fill="rgb(245,88,54)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (76 samples, 0.18%)</title><rect x="35.7735%" y="1045" width="0.1764%" height="15" fill="rgb(205,146,20)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (76 samples, 0.18%)</title><rect x="35.7735%" y="1029" width="0.1764%" height="15" fill="rgb(220,161,25)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (76 samples, 0.18%)</title><rect x="35.7735%" y="1013" width="0.1764%" height="15" fill="rgb(215,152,15)" fg:x="15413" fg:w="76"/><text x="36.0235%" y="1023.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (2,068 samples, 4.80%)</title><rect x="31.1918%" y="1141" width="4.7998%" height="15" fill="rgb(233,192,44)" fg:x="13439" fg:w="2068"/><text x="31.4418%" y="1151.50">byteco..</text></g><g><title>bytecode_verifier::reference_safety::verify (1,953 samples, 4.53%)</title><rect x="31.4587%" y="1125" width="4.5329%" height="15" fill="rgb(240,170,46)" fg:x="13554" fg:w="1953"/><text x="31.7087%" y="1135.50">bytec..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (18 samples, 0.04%)</title><rect x="35.9499%" y="1109" width="0.0418%" height="15" fill="rgb(207,104,33)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (18 samples, 0.04%)</title><rect x="35.9499%" y="1093" width="0.0418%" height="15" fill="rgb(219,21,39)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (18 samples, 0.04%)</title><rect x="35.9499%" y="1077" width="0.0418%" height="15" fill="rgb(214,133,29)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (18 samples, 0.04%)</title><rect x="35.9499%" y="1061" width="0.0418%" height="15" fill="rgb(226,93,6)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (18 samples, 0.04%)</title><rect x="35.9499%" y="1045" width="0.0418%" height="15" fill="rgb(252,222,34)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (18 samples, 0.04%)</title><rect x="35.9499%" y="1029" width="0.0418%" height="15" fill="rgb(252,92,48)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (18 samples, 0.04%)</title><rect x="35.9499%" y="1013" width="0.0418%" height="15" fill="rgb(245,223,24)" fg:x="15489" fg:w="18"/><text x="36.1999%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (8 samples, 0.02%)</title><rect x="35.9731%" y="997" width="0.0186%" height="15" fill="rgb(205,176,3)" fg:x="15499" fg:w="8"/><text x="36.2231%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="35.9940%" y="1045" width="0.0116%" height="15" fill="rgb(235,151,15)" fg:x="15508" fg:w="5"/><text x="36.2440%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="35.9940%" y="1029" width="0.0116%" height="15" fill="rgb(237,209,11)" fg:x="15508" fg:w="5"/><text x="36.2440%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="35.9940%" y="1013" width="0.0116%" height="15" fill="rgb(243,227,24)" fg:x="15508" fg:w="5"/><text x="36.2440%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="35.9940%" y="997" width="0.0116%" height="15" fill="rgb(239,193,16)" fg:x="15508" fg:w="5"/><text x="36.2440%" y="1007.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (13 samples, 0.03%)</title><rect x="35.9940%" y="1077" width="0.0302%" height="15" fill="rgb(231,27,9)" fg:x="15508" fg:w="13"/><text x="36.2440%" y="1087.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::join_ (13 samples, 0.03%)</title><rect x="35.9940%" y="1061" width="0.0302%" height="15" fill="rgb(219,169,10)" fg:x="15508" fg:w="13"/><text x="36.2440%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.02%)</title><rect x="36.0056%" y="1045" width="0.0186%" height="15" fill="rgb(244,229,43)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="36.0056%" y="1029" width="0.0186%" height="15" fill="rgb(254,38,20)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="36.0056%" y="1013" width="0.0186%" height="15" fill="rgb(250,47,30)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="36.0056%" y="997" width="0.0186%" height="15" fill="rgb(224,124,36)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="36.0056%" y="981" width="0.0186%" height="15" fill="rgb(246,68,51)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.02%)</title><rect x="36.0056%" y="965" width="0.0186%" height="15" fill="rgb(253,43,49)" fg:x="15513" fg:w="8"/><text x="36.2556%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="36.0079%" y="949" width="0.0162%" height="15" fill="rgb(219,54,36)" fg:x="15514" fg:w="7"/><text x="36.2579%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.02%)</title><rect x="36.0079%" y="933" width="0.0162%" height="15" fill="rgb(227,133,34)" fg:x="15514" fg:w="7"/><text x="36.2579%" y="943.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="36.0265%" y="901" width="0.0232%" height="15" fill="rgb(247,227,15)" fg:x="15522" fg:w="10"/><text x="36.2765%" y="911.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="36.0357%" y="885" width="0.0139%" height="15" fill="rgb(229,96,14)" fg:x="15526" fg:w="6"/><text x="36.2857%" y="895.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="36.0265%" y="917" width="0.0255%" height="15" fill="rgb(220,79,17)" fg:x="15522" fg:w="11"/><text x="36.2765%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.04%)</title><rect x="36.0241%" y="949" width="0.0418%" height="15" fill="rgb(205,131,53)" fg:x="15521" fg:w="18"/><text x="36.2741%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="36.0241%" y="933" width="0.0418%" height="15" fill="rgb(209,50,29)" fg:x="15521" fg:w="18"/><text x="36.2741%" y="943.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="36.0241%" y="1077" width="0.0696%" height="15" fill="rgb(245,86,46)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="36.0241%" y="1061" width="0.0696%" height="15" fill="rgb(235,66,46)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.07%)</title><rect x="36.0241%" y="1045" width="0.0696%" height="15" fill="rgb(232,148,31)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.07%)</title><rect x="36.0241%" y="1029" width="0.0696%" height="15" fill="rgb(217,149,8)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.07%)</title><rect x="36.0241%" y="1013" width="0.0696%" height="15" fill="rgb(209,183,11)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.07%)</title><rect x="36.0241%" y="997" width="0.0696%" height="15" fill="rgb(208,55,20)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.07%)</title><rect x="36.0241%" y="981" width="0.0696%" height="15" fill="rgb(218,39,14)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.07%)</title><rect x="36.0241%" y="965" width="0.0696%" height="15" fill="rgb(216,169,33)" fg:x="15521" fg:w="30"/><text x="36.2741%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.03%)</title><rect x="36.0659%" y="949" width="0.0279%" height="15" fill="rgb(233,80,24)" fg:x="15539" fg:w="12"/><text x="36.3159%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::repeat (6 samples, 0.01%)</title><rect x="36.0798%" y="933" width="0.0139%" height="15" fill="rgb(213,179,31)" fg:x="15545" fg:w="6"/><text x="36.3298%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="36.0984%" y="981" width="0.0209%" height="15" fill="rgb(209,19,5)" fg:x="15553" fg:w="9"/><text x="36.3484%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="36.1077%" y="965" width="0.0116%" height="15" fill="rgb(219,18,35)" fg:x="15557" fg:w="5"/><text x="36.3577%" y="975.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (21 samples, 0.05%)</title><rect x="36.0938%" y="1077" width="0.0487%" height="15" fill="rgb(209,169,16)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (21 samples, 0.05%)</title><rect x="36.0938%" y="1061" width="0.0487%" height="15" fill="rgb(245,90,51)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (21 samples, 0.05%)</title><rect x="36.0938%" y="1045" width="0.0487%" height="15" fill="rgb(220,99,45)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.05%)</title><rect x="36.0938%" y="1029" width="0.0487%" height="15" fill="rgb(249,89,25)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.05%)</title><rect x="36.0938%" y="1013" width="0.0487%" height="15" fill="rgb(239,193,0)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.05%)</title><rect x="36.0938%" y="997" width="0.0487%" height="15" fill="rgb(231,126,1)" fg:x="15551" fg:w="21"/><text x="36.3438%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="36.1309%" y="981" width="0.0116%" height="15" fill="rgb(243,166,3)" fg:x="15567" fg:w="5"/><text x="36.3809%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.02%)</title><rect x="36.1425%" y="1077" width="0.0162%" height="15" fill="rgb(223,22,34)" fg:x="15572" fg:w="7"/><text x="36.3925%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="36.1425%" y="1061" width="0.0162%" height="15" fill="rgb(251,52,51)" fg:x="15572" fg:w="7"/><text x="36.3925%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="36.1425%" y="1045" width="0.0162%" height="15" fill="rgb(221,165,28)" fg:x="15572" fg:w="7"/><text x="36.3925%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.02%)</title><rect x="36.1425%" y="1029" width="0.0162%" height="15" fill="rgb(218,121,47)" fg:x="15572" fg:w="7"/><text x="36.3925%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="36.1425%" y="1013" width="0.0162%" height="15" fill="rgb(209,120,9)" fg:x="15572" fg:w="7"/><text x="36.3925%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.01%)</title><rect x="36.1448%" y="997" width="0.0139%" height="15" fill="rgb(236,68,12)" fg:x="15573" fg:w="6"/><text x="36.3948%" y="1007.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="36.1588%" y="1029" width="0.0186%" height="15" fill="rgb(225,194,26)" fg:x="15579" fg:w="8"/><text x="36.4088%" y="1039.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="36.1657%" y="1013" width="0.0116%" height="15" fill="rgb(231,84,39)" fg:x="15582" fg:w="5"/><text x="36.4157%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="36.1588%" y="1061" width="0.0209%" height="15" fill="rgb(210,11,45)" fg:x="15579" fg:w="9"/><text x="36.4088%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="36.1588%" y="1045" width="0.0209%" height="15" fill="rgb(224,54,52)" fg:x="15579" fg:w="9"/><text x="36.4088%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="36.1796%" y="1045" width="0.0139%" height="15" fill="rgb(238,102,14)" fg:x="15588" fg:w="6"/><text x="36.4296%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="36.1796%" y="1061" width="0.0186%" height="15" fill="rgb(243,160,52)" fg:x="15588" fg:w="8"/><text x="36.4296%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="36.2330%" y="1029" width="0.0232%" height="15" fill="rgb(216,114,19)" fg:x="15611" fg:w="10"/><text x="36.4830%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.02%)</title><rect x="36.2330%" y="1013" width="0.0232%" height="15" fill="rgb(244,166,37)" fg:x="15611" fg:w="10"/><text x="36.4830%" y="1023.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::local_state (9 samples, 0.02%)</title><rect x="36.2562%" y="1029" width="0.0209%" height="15" fill="rgb(246,29,44)" fg:x="15621" fg:w="9"/><text x="36.5062%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.02%)</title><rect x="36.2562%" y="1013" width="0.0209%" height="15" fill="rgb(215,56,53)" fg:x="15621" fg:w="9"/><text x="36.5062%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="36.2609%" y="997" width="0.0162%" height="15" fill="rgb(217,60,2)" fg:x="15623" fg:w="7"/><text x="36.5109%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.01%)</title><rect x="36.2632%" y="981" width="0.0139%" height="15" fill="rgb(207,26,24)" fg:x="15624" fg:w="6"/><text x="36.5132%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="36.2655%" y="965" width="0.0116%" height="15" fill="rgb(252,210,15)" fg:x="15625" fg:w="5"/><text x="36.5155%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="36.2818%" y="1013" width="0.0116%" height="15" fill="rgb(253,209,26)" fg:x="15632" fg:w="5"/><text x="36.5318%" y="1023.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::set_unavailable (8 samples, 0.02%)</title><rect x="36.2818%" y="1029" width="0.0186%" height="15" fill="rgb(238,170,14)" fg:x="15632" fg:w="8"/><text x="36.5318%" y="1039.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::LocalsSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (50 samples, 0.12%)</title><rect x="36.1982%" y="1061" width="0.1160%" height="15" fill="rgb(216,178,15)" fg:x="15596" fg:w="50"/><text x="36.4482%" y="1071.50"></text></g><g><title>bytecode_verifier::locals_safety::execute_inner (50 samples, 0.12%)</title><rect x="36.1982%" y="1045" width="0.1160%" height="15" fill="rgb(250,197,2)" fg:x="15596" fg:w="50"/><text x="36.4482%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (8 samples, 0.02%)</title><rect x="36.3235%" y="1013" width="0.0186%" height="15" fill="rgb(212,70,42)" fg:x="15650" fg:w="8"/><text x="36.5735%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="36.3282%" y="997" width="0.0139%" height="15" fill="rgb(227,213,9)" fg:x="15652" fg:w="6"/><text x="36.5782%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.03%)</title><rect x="36.3166%" y="1029" width="0.0325%" height="15" fill="rgb(245,99,25)" fg:x="15647" fg:w="14"/><text x="36.5666%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="36.4117%" y="901" width="0.0139%" height="15" fill="rgb(250,82,29)" fg:x="15688" fg:w="6"/><text x="36.6617%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="36.3955%" y="933" width="0.0371%" height="15" fill="rgb(241,226,54)" fg:x="15681" fg:w="16"/><text x="36.6455%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.04%)</title><rect x="36.3955%" y="917" width="0.0371%" height="15" fill="rgb(221,99,41)" fg:x="15681" fg:w="16"/><text x="36.6455%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::new (5 samples, 0.01%)</title><rect x="36.4442%" y="917" width="0.0116%" height="15" fill="rgb(213,90,21)" fg:x="15702" fg:w="5"/><text x="36.6942%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (5 samples, 0.01%)</title><rect x="36.4628%" y="901" width="0.0116%" height="15" fill="rgb(205,208,24)" fg:x="15710" fg:w="5"/><text x="36.7128%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (12 samples, 0.03%)</title><rect x="36.4558%" y="917" width="0.0279%" height="15" fill="rgb(246,31,12)" fg:x="15707" fg:w="12"/><text x="36.7058%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (21 samples, 0.05%)</title><rect x="36.4373%" y="933" width="0.0487%" height="15" fill="rgb(213,154,6)" fg:x="15699" fg:w="21"/><text x="36.6873%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47 samples, 0.11%)</title><rect x="36.3839%" y="981" width="0.1091%" height="15" fill="rgb(222,163,29)" fg:x="15676" fg:w="47"/><text x="36.6339%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.11%)</title><rect x="36.3862%" y="965" width="0.1068%" height="15" fill="rgb(227,201,8)" fg:x="15677" fg:w="46"/><text x="36.6362%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.11%)</title><rect x="36.3862%" y="949" width="0.1068%" height="15" fill="rgb(233,9,32)" fg:x="15677" fg:w="46"/><text x="36.6362%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.19%)</title><rect x="36.3143%" y="1045" width="0.1880%" height="15" fill="rgb(217,54,24)" fg:x="15646" fg:w="81"/><text x="36.5643%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.15%)</title><rect x="36.3491%" y="1029" width="0.1532%" height="15" fill="rgb(235,192,0)" fg:x="15661" fg:w="66"/><text x="36.5991%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.15%)</title><rect x="36.3491%" y="1013" width="0.1532%" height="15" fill="rgb(235,45,9)" fg:x="15661" fg:w="66"/><text x="36.5991%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.15%)</title><rect x="36.3537%" y="997" width="0.1485%" height="15" fill="rgb(246,42,40)" fg:x="15663" fg:w="64"/><text x="36.6037%" y="1007.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (82 samples, 0.19%)</title><rect x="36.3143%" y="1061" width="0.1903%" height="15" fill="rgb(248,111,24)" fg:x="15646" fg:w="82"/><text x="36.5643%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="36.5603%" y="933" width="0.0116%" height="15" fill="rgb(249,65,22)" fg:x="15752" fg:w="5"/><text x="36.8103%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="36.5440%" y="965" width="0.0348%" height="15" fill="rgb(238,111,51)" fg:x="15745" fg:w="15"/><text x="36.7940%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="36.5556%" y="949" width="0.0232%" height="15" fill="rgb(250,118,22)" fg:x="15750" fg:w="10"/><text x="36.8056%" y="959.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (47 samples, 0.11%)</title><rect x="36.5046%" y="1061" width="0.1091%" height="15" fill="rgb(234,84,26)" fg:x="15728" fg:w="47"/><text x="36.7546%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (47 samples, 0.11%)</title><rect x="36.5046%" y="1045" width="0.1091%" height="15" fill="rgb(243,172,12)" fg:x="15728" fg:w="47"/><text x="36.7546%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (47 samples, 0.11%)</title><rect x="36.5046%" y="1029" width="0.1091%" height="15" fill="rgb(236,150,49)" fg:x="15728" fg:w="47"/><text x="36.7546%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (41 samples, 0.10%)</title><rect x="36.5185%" y="1013" width="0.0952%" height="15" fill="rgb(225,197,26)" fg:x="15734" fg:w="41"/><text x="36.7685%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (36 samples, 0.08%)</title><rect x="36.5301%" y="997" width="0.0836%" height="15" fill="rgb(214,17,42)" fg:x="15739" fg:w="36"/><text x="36.7801%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.08%)</title><rect x="36.5301%" y="981" width="0.0836%" height="15" fill="rgb(224,165,40)" fg:x="15739" fg:w="36"/><text x="36.7801%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="36.6021%" y="965" width="0.0116%" height="15" fill="rgb(246,100,4)" fg:x="15770" fg:w="5"/><text x="36.8521%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="36.6021%" y="949" width="0.0116%" height="15" fill="rgb(222,103,0)" fg:x="15770" fg:w="5"/><text x="36.8521%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="36.6160%" y="997" width="0.0116%" height="15" fill="rgb(227,189,26)" fg:x="15776" fg:w="5"/><text x="36.8660%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="36.6415%" y="949" width="0.0162%" height="15" fill="rgb(214,202,17)" fg:x="15787" fg:w="7"/><text x="36.8915%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="36.6438%" y="933" width="0.0139%" height="15" fill="rgb(229,111,3)" fg:x="15788" fg:w="6"/><text x="36.8938%" y="943.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (23 samples, 0.05%)</title><rect x="36.6137%" y="1045" width="0.0534%" height="15" fill="rgb(229,172,15)" fg:x="15775" fg:w="23"/><text x="36.8637%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (23 samples, 0.05%)</title><rect x="36.6137%" y="1029" width="0.0534%" height="15" fill="rgb(230,224,35)" fg:x="15775" fg:w="23"/><text x="36.8637%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (23 samples, 0.05%)</title><rect x="36.6137%" y="1013" width="0.0534%" height="15" fill="rgb(251,141,6)" fg:x="15775" fg:w="23"/><text x="36.8637%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.04%)</title><rect x="36.6276%" y="997" width="0.0395%" height="15" fill="rgb(225,208,6)" fg:x="15781" fg:w="17"/><text x="36.8776%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.03%)</title><rect x="36.6322%" y="981" width="0.0348%" height="15" fill="rgb(246,181,16)" fg:x="15783" fg:w="15"/><text x="36.8822%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="36.6369%" y="965" width="0.0302%" height="15" fill="rgb(227,129,36)" fg:x="15785" fg:w="13"/><text x="36.8869%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="36.6949%" y="949" width="0.0232%" height="15" fill="rgb(248,117,24)" fg:x="15810" fg:w="10"/><text x="36.9449%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="36.7065%" y="933" width="0.0116%" height="15" fill="rgb(214,185,35)" fg:x="15815" fg:w="5"/><text x="36.9565%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (28 samples, 0.06%)</title><rect x="36.6763%" y="997" width="0.0650%" height="15" fill="rgb(236,150,34)" fg:x="15802" fg:w="28"/><text x="36.9263%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.06%)</title><rect x="36.6810%" y="981" width="0.0603%" height="15" fill="rgb(243,228,27)" fg:x="15804" fg:w="26"/><text x="36.9310%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.06%)</title><rect x="36.6810%" y="965" width="0.0603%" height="15" fill="rgb(245,77,44)" fg:x="15804" fg:w="26"/><text x="36.9310%" y="975.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (33 samples, 0.08%)</title><rect x="36.6671%" y="1045" width="0.0766%" height="15" fill="rgb(235,214,42)" fg:x="15798" fg:w="33"/><text x="36.9171%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (33 samples, 0.08%)</title><rect x="36.6671%" y="1029" width="0.0766%" height="15" fill="rgb(221,74,3)" fg:x="15798" fg:w="33"/><text x="36.9171%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (33 samples, 0.08%)</title><rect x="36.6671%" y="1013" width="0.0766%" height="15" fill="rgb(206,121,29)" fg:x="15798" fg:w="33"/><text x="36.9171%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="36.7436%" y="981" width="0.0139%" height="15" fill="rgb(249,131,53)" fg:x="15831" fg:w="6"/><text x="36.9936%" y="991.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="36.7436%" y="965" width="0.0139%" height="15" fill="rgb(236,170,29)" fg:x="15831" fg:w="6"/><text x="36.9936%" y="975.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="36.7460%" y="949" width="0.0116%" height="15" fill="rgb(247,96,15)" fg:x="15832" fg:w="5"/><text x="36.9960%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="36.7436%" y="1013" width="0.0209%" height="15" fill="rgb(211,210,7)" fg:x="15831" fg:w="9"/><text x="36.9936%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="36.7436%" y="997" width="0.0209%" height="15" fill="rgb(240,88,50)" fg:x="15831" fg:w="9"/><text x="36.9936%" y="1007.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (67 samples, 0.16%)</title><rect x="36.6137%" y="1061" width="0.1555%" height="15" fill="rgb(209,229,26)" fg:x="15775" fg:w="67"/><text x="36.8637%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="36.7436%" y="1045" width="0.0255%" height="15" fill="rgb(210,68,23)" fg:x="15831" fg:w="11"/><text x="36.9936%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.03%)</title><rect x="36.7436%" y="1029" width="0.0255%" height="15" fill="rgb(229,180,13)" fg:x="15831" fg:w="11"/><text x="36.9936%" y="1039.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (274 samples, 0.64%)</title><rect x="36.1588%" y="1077" width="0.6360%" height="15" fill="rgb(236,53,44)" fg:x="15579" fg:w="274"/><text x="36.4088%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (11 samples, 0.03%)</title><rect x="36.7692%" y="1061" width="0.0255%" height="15" fill="rgb(244,214,29)" fg:x="15842" fg:w="11"/><text x="37.0192%" y="1071.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.03%)</title><rect x="36.7692%" y="1045" width="0.0255%" height="15" fill="rgb(220,75,29)" fg:x="15842" fg:w="11"/><text x="37.0192%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="36.7947%" y="997" width="0.0162%" height="15" fill="rgb(214,183,37)" fg:x="15853" fg:w="7"/><text x="37.0447%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="36.7947%" y="981" width="0.0162%" height="15" fill="rgb(239,117,29)" fg:x="15853" fg:w="7"/><text x="37.0447%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (7 samples, 0.02%)</title><rect x="36.7947%" y="965" width="0.0162%" height="15" fill="rgb(237,171,35)" fg:x="15853" fg:w="7"/><text x="37.0447%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="36.7947%" y="949" width="0.0162%" height="15" fill="rgb(229,178,53)" fg:x="15853" fg:w="7"/><text x="37.0447%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (21 samples, 0.05%)</title><rect x="36.7947%" y="1077" width="0.0487%" height="15" fill="rgb(210,102,19)" fg:x="15853" fg:w="21"/><text x="37.0447%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (21 samples, 0.05%)</title><rect x="36.7947%" y="1061" width="0.0487%" height="15" fill="rgb(235,127,22)" fg:x="15853" fg:w="21"/><text x="37.0447%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (21 samples, 0.05%)</title><rect x="36.7947%" y="1045" width="0.0487%" height="15" fill="rgb(244,31,31)" fg:x="15853" fg:w="21"/><text x="37.0447%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (21 samples, 0.05%)</title><rect x="36.7947%" y="1029" width="0.0487%" height="15" fill="rgb(231,43,21)" fg:x="15853" fg:w="21"/><text x="37.0447%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.05%)</title><rect x="36.7947%" y="1013" width="0.0487%" height="15" fill="rgb(217,131,35)" fg:x="15853" fg:w="21"/><text x="37.0447%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (14 samples, 0.03%)</title><rect x="36.8110%" y="997" width="0.0325%" height="15" fill="rgb(221,149,4)" fg:x="15860" fg:w="14"/><text x="37.0610%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.03%)</title><rect x="36.8110%" y="981" width="0.0325%" height="15" fill="rgb(232,170,28)" fg:x="15860" fg:w="14"/><text x="37.0610%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.03%)</title><rect x="36.8110%" y="965" width="0.0325%" height="15" fill="rgb(238,56,10)" fg:x="15860" fg:w="14"/><text x="37.0610%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.02%)</title><rect x="36.8226%" y="949" width="0.0209%" height="15" fill="rgb(235,196,14)" fg:x="15865" fg:w="9"/><text x="37.0726%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.01%)</title><rect x="36.8318%" y="933" width="0.0116%" height="15" fill="rgb(216,45,48)" fg:x="15869" fg:w="5"/><text x="37.0818%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="36.8574%" y="981" width="0.0139%" height="15" fill="rgb(238,213,17)" fg:x="15880" fg:w="6"/><text x="37.1074%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="36.8574%" y="1029" width="0.0255%" height="15" fill="rgb(212,13,2)" fg:x="15880" fg:w="11"/><text x="37.1074%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="36.8574%" y="1013" width="0.0255%" height="15" fill="rgb(240,114,20)" fg:x="15880" fg:w="11"/><text x="37.1074%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.03%)</title><rect x="36.8574%" y="997" width="0.0255%" height="15" fill="rgb(228,41,40)" fg:x="15880" fg:w="11"/><text x="37.1074%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="36.8713%" y="981" width="0.0116%" height="15" fill="rgb(244,132,35)" fg:x="15886" fg:w="5"/><text x="37.1213%" y="991.50"></text></g><g><title>hashbrown::map::make_insert_hash (21 samples, 0.05%)</title><rect x="36.8574%" y="1045" width="0.0487%" height="15" fill="rgb(253,189,4)" fg:x="15880" fg:w="21"/><text x="37.1074%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (6 samples, 0.01%)</title><rect x="36.8922%" y="1029" width="0.0139%" height="15" fill="rgb(224,37,19)" fg:x="15895" fg:w="6"/><text x="37.1422%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u16 (6 samples, 0.01%)</title><rect x="36.8922%" y="1013" width="0.0139%" height="15" fill="rgb(235,223,18)" fg:x="15895" fg:w="6"/><text x="37.1422%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="36.8945%" y="997" width="0.0116%" height="15" fill="rgb(235,163,25)" fg:x="15896" fg:w="5"/><text x="37.1445%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="36.8945%" y="981" width="0.0116%" height="15" fill="rgb(217,145,28)" fg:x="15896" fg:w="5"/><text x="37.1445%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="36.8945%" y="965" width="0.0116%" height="15" fill="rgb(223,223,32)" fg:x="15896" fg:w="5"/><text x="37.1445%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="36.9084%" y="1013" width="0.0348%" height="15" fill="rgb(227,189,39)" fg:x="15902" fg:w="15"/><text x="37.1584%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="36.9108%" y="997" width="0.0325%" height="15" fill="rgb(248,10,22)" fg:x="15903" fg:w="14"/><text x="37.1608%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (8 samples, 0.02%)</title><rect x="36.9247%" y="981" width="0.0186%" height="15" fill="rgb(248,46,39)" fg:x="15909" fg:w="8"/><text x="37.1747%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="36.9247%" y="965" width="0.0186%" height="15" fill="rgb(248,113,48)" fg:x="15909" fg:w="8"/><text x="37.1747%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (30 samples, 0.07%)</title><rect x="36.9061%" y="1045" width="0.0696%" height="15" fill="rgb(245,16,25)" fg:x="15901" fg:w="30"/><text x="37.1561%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.07%)</title><rect x="36.9061%" y="1029" width="0.0696%" height="15" fill="rgb(249,152,16)" fg:x="15901" fg:w="30"/><text x="37.1561%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (13 samples, 0.03%)</title><rect x="36.9456%" y="1013" width="0.0302%" height="15" fill="rgb(250,16,1)" fg:x="15918" fg:w="13"/><text x="37.1956%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (12 samples, 0.03%)</title><rect x="36.9479%" y="997" width="0.0279%" height="15" fill="rgb(249,138,3)" fg:x="15919" fg:w="12"/><text x="37.1979%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (12 samples, 0.03%)</title><rect x="36.9479%" y="981" width="0.0279%" height="15" fill="rgb(227,71,41)" fg:x="15919" fg:w="12"/><text x="37.1979%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="36.9572%" y="965" width="0.0186%" height="15" fill="rgb(209,184,23)" fg:x="15923" fg:w="8"/><text x="37.2072%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.01%)</title><rect x="36.9920%" y="1029" width="0.0139%" height="15" fill="rgb(223,215,31)" fg:x="15938" fg:w="6"/><text x="37.2420%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.02%)</title><rect x="37.0106%" y="1029" width="0.0186%" height="15" fill="rgb(210,146,28)" fg:x="15946" fg:w="8"/><text x="37.2606%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (7 samples, 0.02%)</title><rect x="37.0291%" y="1013" width="0.0162%" height="15" fill="rgb(209,183,41)" fg:x="15954" fg:w="7"/><text x="37.2791%" y="1023.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (454 samples, 1.05%)</title><rect x="35.9940%" y="1093" width="1.0537%" height="15" fill="rgb(209,224,45)" fg:x="15508" fg:w="454"/><text x="36.2440%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (88 samples, 0.20%)</title><rect x="36.8434%" y="1077" width="0.2042%" height="15" fill="rgb(224,209,51)" fg:x="15874" fg:w="88"/><text x="37.0934%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.20%)</title><rect x="36.8434%" y="1061" width="0.2042%" height="15" fill="rgb(223,17,39)" fg:x="15874" fg:w="88"/><text x="37.0934%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (31 samples, 0.07%)</title><rect x="36.9757%" y="1045" width="0.0720%" height="15" fill="rgb(234,204,37)" fg:x="15931" fg:w="31"/><text x="37.2257%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (8 samples, 0.02%)</title><rect x="37.0291%" y="1029" width="0.0186%" height="15" fill="rgb(236,120,5)" fg:x="15954" fg:w="8"/><text x="37.2791%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="37.0477%" y="917" width="0.0464%" height="15" fill="rgb(248,97,27)" fg:x="15962" fg:w="20"/><text x="37.2977%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (20 samples, 0.05%)</title><rect x="37.0477%" y="901" width="0.0464%" height="15" fill="rgb(240,66,17)" fg:x="15962" fg:w="20"/><text x="37.2977%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.05%)</title><rect x="37.0477%" y="885" width="0.0464%" height="15" fill="rgb(210,79,3)" fg:x="15962" fg:w="20"/><text x="37.2977%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.05%)</title><rect x="37.0477%" y="869" width="0.0464%" height="15" fill="rgb(214,176,27)" fg:x="15962" fg:w="20"/><text x="37.2977%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.05%)</title><rect x="37.0477%" y="853" width="0.0464%" height="15" fill="rgb(235,185,3)" fg:x="15962" fg:w="20"/><text x="37.2977%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="37.0686%" y="837" width="0.0255%" height="15" fill="rgb(227,24,12)" fg:x="15971" fg:w="11"/><text x="37.3186%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="37.1127%" y="837" width="0.0116%" height="15" fill="rgb(252,169,48)" fg:x="15990" fg:w="5"/><text x="37.3627%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="37.1080%" y="853" width="0.0209%" height="15" fill="rgb(212,65,1)" fg:x="15988" fg:w="9"/><text x="37.3580%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 0.09%)</title><rect x="37.0477%" y="949" width="0.0859%" height="15" fill="rgb(242,39,24)" fg:x="15962" fg:w="37"/><text x="37.2977%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (37 samples, 0.09%)</title><rect x="37.0477%" y="933" width="0.0859%" height="15" fill="rgb(249,32,23)" fg:x="15962" fg:w="37"/><text x="37.2977%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.04%)</title><rect x="37.0964%" y="917" width="0.0371%" height="15" fill="rgb(251,195,23)" fg:x="15983" fg:w="16"/><text x="37.3464%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.04%)</title><rect x="37.0964%" y="901" width="0.0371%" height="15" fill="rgb(236,174,8)" fg:x="15983" fg:w="16"/><text x="37.3464%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (16 samples, 0.04%)</title><rect x="37.0964%" y="885" width="0.0371%" height="15" fill="rgb(220,197,8)" fg:x="15983" fg:w="16"/><text x="37.3464%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.04%)</title><rect x="37.0964%" y="869" width="0.0371%" height="15" fill="rgb(240,108,37)" fg:x="15983" fg:w="16"/><text x="37.3464%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="37.1336%" y="949" width="0.0139%" height="15" fill="rgb(232,176,24)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.01%)</title><rect x="37.1336%" y="933" width="0.0139%" height="15" fill="rgb(243,35,29)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="37.1336%" y="917" width="0.0139%" height="15" fill="rgb(210,37,18)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="37.1336%" y="901" width="0.0139%" height="15" fill="rgb(224,184,40)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="37.1336%" y="885" width="0.0139%" height="15" fill="rgb(236,39,29)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="37.1336%" y="869" width="0.0139%" height="15" fill="rgb(232,48,39)" fg:x="15999" fg:w="6"/><text x="37.3836%" y="879.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (508 samples, 1.18%)</title><rect x="35.9940%" y="1109" width="1.1791%" height="15" fill="rgb(236,34,42)" fg:x="15508" fg:w="508"/><text x="36.2440%" y="1119.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (54 samples, 0.13%)</title><rect x="37.0477%" y="1093" width="0.1253%" height="15" fill="rgb(243,106,37)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.13%)</title><rect x="37.0477%" y="1077" width="0.1253%" height="15" fill="rgb(218,96,6)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (54 samples, 0.13%)</title><rect x="37.0477%" y="1061" width="0.1253%" height="15" fill="rgb(235,130,12)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1071.50"></text></g><g><title>core::iter::adapters::process_results (54 samples, 0.13%)</title><rect x="37.0477%" y="1045" width="0.1253%" height="15" fill="rgb(231,95,0)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (54 samples, 0.13%)</title><rect x="37.0477%" y="1029" width="0.1253%" height="15" fill="rgb(228,12,23)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.13%)</title><rect x="37.0477%" y="1013" width="0.1253%" height="15" fill="rgb(216,12,1)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (54 samples, 0.13%)</title><rect x="37.0477%" y="997" width="0.1253%" height="15" fill="rgb(219,59,3)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 0.13%)</title><rect x="37.0477%" y="981" width="0.1253%" height="15" fill="rgb(215,208,46)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (54 samples, 0.13%)</title><rect x="37.0477%" y="965" width="0.1253%" height="15" fill="rgb(254,224,29)" fg:x="15962" fg:w="54"/><text x="37.2977%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.02%)</title><rect x="37.1498%" y="949" width="0.0232%" height="15" fill="rgb(232,14,29)" fg:x="16006" fg:w="10"/><text x="37.3998%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="37.1498%" y="933" width="0.0232%" height="15" fill="rgb(208,45,52)" fg:x="16006" fg:w="10"/><text x="37.3998%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="37.1498%" y="917" width="0.0232%" height="15" fill="rgb(234,191,28)" fg:x="16006" fg:w="10"/><text x="37.3998%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="37.1498%" y="901" width="0.0232%" height="15" fill="rgb(244,67,43)" fg:x="16006" fg:w="10"/><text x="37.3998%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::leq (11 samples, 0.03%)</title><rect x="37.1730%" y="1061" width="0.0255%" height="15" fill="rgb(236,189,24)" fg:x="16016" fg:w="11"/><text x="37.4230%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::unmatched_edges (11 samples, 0.03%)</title><rect x="37.1730%" y="1045" width="0.0255%" height="15" fill="rgb(239,214,33)" fg:x="16016" fg:w="11"/><text x="37.4230%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="37.2009%" y="933" width="0.0116%" height="15" fill="rgb(226,176,41)" fg:x="16028" fg:w="5"/><text x="37.4509%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (8 samples, 0.02%)</title><rect x="37.1986%" y="1061" width="0.0186%" height="15" fill="rgb(248,47,8)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.02%)</title><rect x="37.1986%" y="1045" width="0.0186%" height="15" fill="rgb(218,81,44)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="37.1986%" y="1029" width="0.0186%" height="15" fill="rgb(213,98,6)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="37.1986%" y="1013" width="0.0186%" height="15" fill="rgb(222,85,22)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (8 samples, 0.02%)</title><rect x="37.1986%" y="997" width="0.0186%" height="15" fill="rgb(239,46,39)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (8 samples, 0.02%)</title><rect x="37.1986%" y="981" width="0.0186%" height="15" fill="rgb(237,12,29)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (8 samples, 0.02%)</title><rect x="37.1986%" y="965" width="0.0186%" height="15" fill="rgb(214,77,8)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="37.1986%" y="949" width="0.0186%" height="15" fill="rgb(217,168,37)" fg:x="16027" fg:w="8"/><text x="37.4486%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="37.2752%" y="965" width="0.0116%" height="15" fill="rgb(221,217,23)" fg:x="16060" fg:w="5"/><text x="37.5252%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="37.2589%" y="981" width="0.0441%" height="15" fill="rgb(243,229,36)" fg:x="16053" fg:w="19"/><text x="37.5089%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="37.2868%" y="965" width="0.0162%" height="15" fill="rgb(251,163,40)" fg:x="16065" fg:w="7"/><text x="37.5368%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="37.3053%" y="981" width="0.0139%" height="15" fill="rgb(237,222,12)" fg:x="16073" fg:w="6"/><text x="37.5553%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (41 samples, 0.10%)</title><rect x="37.2357%" y="1045" width="0.0952%" height="15" fill="rgb(248,132,6)" fg:x="16043" fg:w="41"/><text x="37.4857%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (41 samples, 0.10%)</title><rect x="37.2357%" y="1029" width="0.0952%" height="15" fill="rgb(227,167,50)" fg:x="16043" fg:w="41"/><text x="37.4857%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (39 samples, 0.09%)</title><rect x="37.2403%" y="1013" width="0.0905%" height="15" fill="rgb(242,84,37)" fg:x="16045" fg:w="39"/><text x="37.4903%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (37 samples, 0.09%)</title><rect x="37.2450%" y="997" width="0.0859%" height="15" fill="rgb(212,4,50)" fg:x="16047" fg:w="37"/><text x="37.4950%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="37.3425%" y="965" width="0.0139%" height="15" fill="rgb(230,228,32)" fg:x="16089" fg:w="6"/><text x="37.5925%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (14 samples, 0.03%)</title><rect x="37.3309%" y="1029" width="0.0325%" height="15" fill="rgb(248,217,23)" fg:x="16084" fg:w="14"/><text x="37.5809%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.02%)</title><rect x="37.3401%" y="1013" width="0.0232%" height="15" fill="rgb(238,197,32)" fg:x="16088" fg:w="10"/><text x="37.5901%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.02%)</title><rect x="37.3425%" y="997" width="0.0209%" height="15" fill="rgb(236,106,1)" fg:x="16089" fg:w="9"/><text x="37.5925%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.02%)</title><rect x="37.3425%" y="981" width="0.0209%" height="15" fill="rgb(219,228,13)" fg:x="16089" fg:w="9"/><text x="37.5925%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (17 samples, 0.04%)</title><rect x="37.3309%" y="1045" width="0.0395%" height="15" fill="rgb(238,30,35)" fg:x="16084" fg:w="17"/><text x="37.5809%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (5 samples, 0.01%)</title><rect x="37.3912%" y="1013" width="0.0116%" height="15" fill="rgb(236,70,23)" fg:x="16110" fg:w="5"/><text x="37.6412%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (9 samples, 0.02%)</title><rect x="37.3842%" y="1029" width="0.0209%" height="15" fill="rgb(249,104,48)" fg:x="16107" fg:w="9"/><text x="37.6342%" y="1039.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join (20 samples, 0.05%)</title><rect x="37.3703%" y="1045" width="0.0464%" height="15" fill="rgb(254,117,50)" fg:x="16101" fg:w="20"/><text x="37.6203%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.01%)</title><rect x="37.4051%" y="1029" width="0.0116%" height="15" fill="rgb(223,152,4)" fg:x="16116" fg:w="5"/><text x="37.6551%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (5 samples, 0.01%)</title><rect x="37.4307%" y="917" width="0.0116%" height="15" fill="rgb(245,6,2)" fg:x="16127" fg:w="5"/><text x="37.6807%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="37.4423%" y="917" width="0.0116%" height="15" fill="rgb(249,150,24)" fg:x="16132" fg:w="5"/><text x="37.6923%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (15 samples, 0.03%)</title><rect x="37.4214%" y="933" width="0.0348%" height="15" fill="rgb(228,185,42)" fg:x="16123" fg:w="15"/><text x="37.6714%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (18 samples, 0.04%)</title><rect x="37.4167%" y="1045" width="0.0418%" height="15" fill="rgb(226,39,33)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.04%)</title><rect x="37.4167%" y="1029" width="0.0418%" height="15" fill="rgb(221,166,19)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.04%)</title><rect x="37.4167%" y="1013" width="0.0418%" height="15" fill="rgb(209,109,2)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="37.4167%" y="997" width="0.0418%" height="15" fill="rgb(252,216,26)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (18 samples, 0.04%)</title><rect x="37.4167%" y="981" width="0.0418%" height="15" fill="rgb(227,173,36)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (18 samples, 0.04%)</title><rect x="37.4167%" y="965" width="0.0418%" height="15" fill="rgb(209,90,7)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (18 samples, 0.04%)</title><rect x="37.4167%" y="949" width="0.0418%" height="15" fill="rgb(250,194,11)" fg:x="16121" fg:w="18"/><text x="37.6667%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (5 samples, 0.01%)</title><rect x="37.4585%" y="965" width="0.0116%" height="15" fill="rgb(220,72,50)" fg:x="16139" fg:w="5"/><text x="37.7085%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (119 samples, 0.28%)</title><rect x="37.2171%" y="1061" width="0.2762%" height="15" fill="rgb(222,106,48)" fg:x="16035" fg:w="119"/><text x="37.4671%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (15 samples, 0.03%)</title><rect x="37.4585%" y="1045" width="0.0348%" height="15" fill="rgb(216,220,45)" fg:x="16139" fg:w="15"/><text x="37.7085%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="37.4585%" y="1029" width="0.0348%" height="15" fill="rgb(234,112,18)" fg:x="16139" fg:w="15"/><text x="37.7085%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="37.4585%" y="1013" width="0.0348%" height="15" fill="rgb(206,179,9)" fg:x="16139" fg:w="15"/><text x="37.7085%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="37.4585%" y="997" width="0.0348%" height="15" fill="rgb(215,115,40)" fg:x="16139" fg:w="15"/><text x="37.7085%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="37.4585%" y="981" width="0.0348%" height="15" fill="rgb(222,69,34)" fg:x="16139" fg:w="15"/><text x="37.7085%" y="991.50"></text></g><g><title>core::mem::drop (10 samples, 0.02%)</title><rect x="37.4701%" y="965" width="0.0232%" height="15" fill="rgb(209,161,10)" fg:x="16144" fg:w="10"/><text x="37.7201%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (10 samples, 0.02%)</title><rect x="37.4701%" y="949" width="0.0232%" height="15" fill="rgb(217,6,38)" fg:x="16144" fg:w="10"/><text x="37.7201%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (10 samples, 0.02%)</title><rect x="37.4701%" y="933" width="0.0232%" height="15" fill="rgb(229,229,48)" fg:x="16144" fg:w="10"/><text x="37.7201%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (8 samples, 0.02%)</title><rect x="37.4748%" y="917" width="0.0186%" height="15" fill="rgb(225,21,28)" fg:x="16146" fg:w="8"/><text x="37.7248%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="37.4748%" y="901" width="0.0186%" height="15" fill="rgb(206,33,13)" fg:x="16146" fg:w="8"/><text x="37.7248%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="37.4748%" y="885" width="0.0186%" height="15" fill="rgb(242,178,17)" fg:x="16146" fg:w="8"/><text x="37.7248%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="37.4748%" y="869" width="0.0186%" height="15" fill="rgb(220,162,5)" fg:x="16146" fg:w="8"/><text x="37.7248%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="37.4748%" y="853" width="0.0186%" height="15" fill="rgb(210,33,43)" fg:x="16146" fg:w="8"/><text x="37.7248%" y="863.50"></text></g><g><title>core::mem::drop (7 samples, 0.02%)</title><rect x="37.4771%" y="837" width="0.0162%" height="15" fill="rgb(216,116,54)" fg:x="16147" fg:w="7"/><text x="37.7271%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (7 samples, 0.02%)</title><rect x="37.4771%" y="821" width="0.0162%" height="15" fill="rgb(249,92,24)" fg:x="16147" fg:w="7"/><text x="37.7271%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="37.4771%" y="805" width="0.0162%" height="15" fill="rgb(231,189,14)" fg:x="16147" fg:w="7"/><text x="37.7271%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (7 samples, 0.02%)</title><rect x="37.4771%" y="789" width="0.0162%" height="15" fill="rgb(230,8,41)" fg:x="16147" fg:w="7"/><text x="37.7271%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="37.4771%" y="773" width="0.0162%" height="15" fill="rgb(249,7,27)" fg:x="16147" fg:w="7"/><text x="37.7271%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (5 samples, 0.01%)</title><rect x="37.4817%" y="757" width="0.0116%" height="15" fill="rgb(232,86,5)" fg:x="16149" fg:w="5"/><text x="37.7317%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="37.4817%" y="741" width="0.0116%" height="15" fill="rgb(224,175,18)" fg:x="16149" fg:w="5"/><text x="37.7317%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="37.5049%" y="933" width="0.0186%" height="15" fill="rgb(220,129,12)" fg:x="16159" fg:w="8"/><text x="37.7549%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="37.5096%" y="917" width="0.0139%" height="15" fill="rgb(210,19,36)" fg:x="16161" fg:w="6"/><text x="37.7596%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.04%)</title><rect x="37.4933%" y="1061" width="0.0418%" height="15" fill="rgb(219,96,14)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.04%)</title><rect x="37.4933%" y="1045" width="0.0418%" height="15" fill="rgb(249,106,1)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (18 samples, 0.04%)</title><rect x="37.4933%" y="1029" width="0.0418%" height="15" fill="rgb(249,155,20)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="1039.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join::_{{closure}} (18 samples, 0.04%)</title><rect x="37.4933%" y="1013" width="0.0418%" height="15" fill="rgb(244,168,9)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.04%)</title><rect x="37.4933%" y="997" width="0.0418%" height="15" fill="rgb(216,23,50)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.04%)</title><rect x="37.4933%" y="981" width="0.0418%" height="15" fill="rgb(224,219,20)" fg:x="16154" fg:w="18"/><text x="37.7433%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.04%)</title><rect x="37.4956%" y="965" width="0.0395%" height="15" fill="rgb(222,156,15)" fg:x="16155" fg:w="17"/><text x="37.7456%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.04%)</title><rect x="37.4956%" y="949" width="0.0395%" height="15" fill="rgb(231,97,17)" fg:x="16155" fg:w="17"/><text x="37.7456%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (13 samples, 0.03%)</title><rect x="37.5351%" y="1045" width="0.0302%" height="15" fill="rgb(218,70,48)" fg:x="16172" fg:w="13"/><text x="37.7851%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="37.5351%" y="1029" width="0.0302%" height="15" fill="rgb(212,196,52)" fg:x="16172" fg:w="13"/><text x="37.7851%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (13 samples, 0.03%)</title><rect x="37.5351%" y="1013" width="0.0302%" height="15" fill="rgb(243,203,18)" fg:x="16172" fg:w="13"/><text x="37.7851%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="37.5351%" y="997" width="0.0302%" height="15" fill="rgb(252,125,41)" fg:x="16172" fg:w="13"/><text x="37.7851%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (13 samples, 0.03%)</title><rect x="37.5351%" y="981" width="0.0302%" height="15" fill="rgb(223,180,33)" fg:x="16172" fg:w="13"/><text x="37.7851%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (12 samples, 0.03%)</title><rect x="37.5374%" y="965" width="0.0279%" height="15" fill="rgb(254,159,46)" fg:x="16173" fg:w="12"/><text x="37.7874%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.03%)</title><rect x="37.5374%" y="949" width="0.0279%" height="15" fill="rgb(254,38,10)" fg:x="16173" fg:w="12"/><text x="37.7874%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (12 samples, 0.03%)</title><rect x="37.5374%" y="933" width="0.0279%" height="15" fill="rgb(208,217,32)" fg:x="16173" fg:w="12"/><text x="37.7874%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (12 samples, 0.03%)</title><rect x="37.5374%" y="917" width="0.0279%" height="15" fill="rgb(221,120,13)" fg:x="16173" fg:w="12"/><text x="37.7874%" y="927.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (174 samples, 0.40%)</title><rect x="37.1730%" y="1077" width="0.4039%" height="15" fill="rgb(246,54,52)" fg:x="16016" fg:w="174"/><text x="37.4230%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (18 samples, 0.04%)</title><rect x="37.5351%" y="1061" width="0.0418%" height="15" fill="rgb(242,34,25)" fg:x="16172" fg:w="18"/><text x="37.7851%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (5 samples, 0.01%)</title><rect x="37.5653%" y="1045" width="0.0116%" height="15" fill="rgb(247,209,9)" fg:x="16185" fg:w="5"/><text x="37.8153%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="37.5653%" y="1029" width="0.0116%" height="15" fill="rgb(228,71,26)" fg:x="16185" fg:w="5"/><text x="37.8153%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="37.5653%" y="1013" width="0.0116%" height="15" fill="rgb(222,145,49)" fg:x="16185" fg:w="5"/><text x="37.8153%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="37.5653%" y="997" width="0.0116%" height="15" fill="rgb(218,121,17)" fg:x="16185" fg:w="5"/><text x="37.8153%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="37.5653%" y="981" width="0.0116%" height="15" fill="rgb(244,50,7)" fg:x="16185" fg:w="5"/><text x="37.8153%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (7 samples, 0.02%)</title><rect x="37.5955%" y="1029" width="0.0162%" height="15" fill="rgb(246,229,37)" fg:x="16198" fg:w="7"/><text x="37.8455%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (15 samples, 0.03%)</title><rect x="37.6140%" y="1029" width="0.0348%" height="15" fill="rgb(225,18,5)" fg:x="16206" fg:w="15"/><text x="37.8640%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="37.6349%" y="1013" width="0.0139%" height="15" fill="rgb(213,204,8)" fg:x="16215" fg:w="6"/><text x="37.8849%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (6 samples, 0.01%)</title><rect x="37.6674%" y="1013" width="0.0139%" height="15" fill="rgb(238,103,6)" fg:x="16229" fg:w="6"/><text x="37.9174%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (16 samples, 0.04%)</title><rect x="37.6581%" y="1029" width="0.0371%" height="15" fill="rgb(222,25,35)" fg:x="16225" fg:w="16"/><text x="37.9081%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="37.7115%" y="933" width="0.0186%" height="15" fill="rgb(213,203,35)" fg:x="16248" fg:w="8"/><text x="37.9615%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="37.7115%" y="917" width="0.0186%" height="15" fill="rgb(221,79,53)" fg:x="16248" fg:w="8"/><text x="37.9615%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (16 samples, 0.04%)</title><rect x="37.6953%" y="981" width="0.0371%" height="15" fill="rgb(243,200,35)" fg:x="16241" fg:w="16"/><text x="37.9453%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16 samples, 0.04%)</title><rect x="37.6953%" y="965" width="0.0371%" height="15" fill="rgb(248,60,25)" fg:x="16241" fg:w="16"/><text x="37.9453%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (15 samples, 0.03%)</title><rect x="37.6976%" y="949" width="0.0348%" height="15" fill="rgb(227,53,46)" fg:x="16242" fg:w="15"/><text x="37.9476%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (19 samples, 0.04%)</title><rect x="37.6953%" y="997" width="0.0441%" height="15" fill="rgb(216,120,32)" fg:x="16241" fg:w="19"/><text x="37.9453%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (20 samples, 0.05%)</title><rect x="37.6953%" y="1029" width="0.0464%" height="15" fill="rgb(220,134,1)" fg:x="16241" fg:w="20"/><text x="37.9453%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (20 samples, 0.05%)</title><rect x="37.6953%" y="1013" width="0.0464%" height="15" fill="rgb(237,168,5)" fg:x="16241" fg:w="20"/><text x="37.9453%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (75 samples, 0.17%)</title><rect x="37.5769%" y="1061" width="0.1741%" height="15" fill="rgb(231,100,33)" fg:x="16190" fg:w="75"/><text x="37.8269%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (75 samples, 0.17%)</title><rect x="37.5769%" y="1045" width="0.1741%" height="15" fill="rgb(236,177,47)" fg:x="16190" fg:w="75"/><text x="37.8269%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="37.7858%" y="1013" width="0.0116%" height="15" fill="rgb(235,7,49)" fg:x="16280" fg:w="5"/><text x="38.0358%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (14 samples, 0.03%)</title><rect x="37.8090%" y="1013" width="0.0325%" height="15" fill="rgb(232,119,22)" fg:x="16290" fg:w="14"/><text x="38.0590%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.01%)</title><rect x="37.8299%" y="997" width="0.0116%" height="15" fill="rgb(254,73,53)" fg:x="16299" fg:w="5"/><text x="38.0799%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.02%)</title><rect x="37.8600%" y="933" width="0.0162%" height="15" fill="rgb(251,35,20)" fg:x="16312" fg:w="7"/><text x="38.1100%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (10 samples, 0.02%)</title><rect x="37.8577%" y="965" width="0.0232%" height="15" fill="rgb(241,119,20)" fg:x="16311" fg:w="10"/><text x="38.1077%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.02%)</title><rect x="37.8577%" y="949" width="0.0232%" height="15" fill="rgb(207,102,14)" fg:x="16311" fg:w="10"/><text x="38.1077%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (15 samples, 0.03%)</title><rect x="37.8554%" y="981" width="0.0348%" height="15" fill="rgb(248,201,50)" fg:x="16310" fg:w="15"/><text x="38.1054%" y="991.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (136 samples, 0.32%)</title><rect x="37.5769%" y="1077" width="0.3157%" height="15" fill="rgb(222,185,44)" fg:x="16190" fg:w="136"/><text x="37.8269%" y="1087.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (61 samples, 0.14%)</title><rect x="37.7510%" y="1061" width="0.1416%" height="15" fill="rgb(218,107,18)" fg:x="16265" fg:w="61"/><text x="38.0010%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (61 samples, 0.14%)</title><rect x="37.7510%" y="1045" width="0.1416%" height="15" fill="rgb(237,177,39)" fg:x="16265" fg:w="61"/><text x="38.0010%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (61 samples, 0.14%)</title><rect x="37.7510%" y="1029" width="0.1416%" height="15" fill="rgb(246,69,6)" fg:x="16265" fg:w="61"/><text x="38.0010%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (19 samples, 0.04%)</title><rect x="37.8484%" y="1013" width="0.0441%" height="15" fill="rgb(234,208,37)" fg:x="16307" fg:w="19"/><text x="38.0984%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (18 samples, 0.04%)</title><rect x="37.8508%" y="997" width="0.0418%" height="15" fill="rgb(225,4,6)" fg:x="16308" fg:w="18"/><text x="38.1008%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="37.8949%" y="949" width="0.0116%" height="15" fill="rgb(233,45,0)" fg:x="16327" fg:w="5"/><text x="38.1449%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="37.8925%" y="981" width="0.0279%" height="15" fill="rgb(226,136,5)" fg:x="16326" fg:w="12"/><text x="38.1425%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="37.8925%" y="965" width="0.0279%" height="15" fill="rgb(211,91,47)" fg:x="16326" fg:w="12"/><text x="38.1425%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.01%)</title><rect x="37.9065%" y="949" width="0.0139%" height="15" fill="rgb(242,88,51)" fg:x="16332" fg:w="6"/><text x="38.1565%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="37.9204%" y="981" width="0.0139%" height="15" fill="rgb(230,91,28)" fg:x="16338" fg:w="6"/><text x="38.1704%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="37.9204%" y="965" width="0.0139%" height="15" fill="rgb(254,186,29)" fg:x="16338" fg:w="6"/><text x="38.1704%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="37.9204%" y="949" width="0.0139%" height="15" fill="rgb(238,6,4)" fg:x="16338" fg:w="6"/><text x="38.1704%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="37.9204%" y="933" width="0.0139%" height="15" fill="rgb(221,151,16)" fg:x="16338" fg:w="6"/><text x="38.1704%" y="943.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (21 samples, 0.05%)</title><rect x="37.8925%" y="1077" width="0.0487%" height="15" fill="rgb(251,143,52)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (21 samples, 0.05%)</title><rect x="37.8925%" y="1061" width="0.0487%" height="15" fill="rgb(206,90,15)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (21 samples, 0.05%)</title><rect x="37.8925%" y="1045" width="0.0487%" height="15" fill="rgb(218,35,8)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.05%)</title><rect x="37.8925%" y="1029" width="0.0487%" height="15" fill="rgb(239,215,6)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.05%)</title><rect x="37.8925%" y="1013" width="0.0487%" height="15" fill="rgb(245,116,39)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.05%)</title><rect x="37.8925%" y="997" width="0.0487%" height="15" fill="rgb(242,65,28)" fg:x="16326" fg:w="21"/><text x="38.1425%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="37.9413%" y="1077" width="0.0116%" height="15" fill="rgb(252,132,53)" fg:x="16347" fg:w="5"/><text x="38.1913%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="37.9413%" y="1061" width="0.0116%" height="15" fill="rgb(224,159,50)" fg:x="16347" fg:w="5"/><text x="38.1913%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="37.9413%" y="1045" width="0.0116%" height="15" fill="rgb(224,93,4)" fg:x="16347" fg:w="5"/><text x="38.1913%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.01%)</title><rect x="37.9413%" y="1029" width="0.0116%" height="15" fill="rgb(208,81,34)" fg:x="16347" fg:w="5"/><text x="38.1913%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="37.9413%" y="1013" width="0.0116%" height="15" fill="rgb(233,92,54)" fg:x="16347" fg:w="5"/><text x="38.1913%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="37.9900%" y="1045" width="0.0116%" height="15" fill="rgb(237,21,14)" fg:x="16368" fg:w="5"/><text x="38.2400%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="37.9900%" y="1029" width="0.0116%" height="15" fill="rgb(249,128,51)" fg:x="16368" fg:w="5"/><text x="38.2400%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.03%)</title><rect x="38.0341%" y="1029" width="0.0279%" height="15" fill="rgb(223,129,24)" fg:x="16387" fg:w="12"/><text x="38.2841%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="38.0643%" y="1013" width="0.0116%" height="15" fill="rgb(231,168,25)" fg:x="16400" fg:w="5"/><text x="38.3143%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (9 samples, 0.02%)</title><rect x="38.0620%" y="1029" width="0.0209%" height="15" fill="rgb(224,39,20)" fg:x="16399" fg:w="9"/><text x="38.3120%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="38.1177%" y="981" width="0.0186%" height="15" fill="rgb(225,152,53)" fg:x="16423" fg:w="8"/><text x="38.3677%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="38.1223%" y="965" width="0.0139%" height="15" fill="rgb(252,17,24)" fg:x="16425" fg:w="6"/><text x="38.3723%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (32 samples, 0.07%)</title><rect x="38.0921%" y="1029" width="0.0743%" height="15" fill="rgb(250,114,30)" fg:x="16412" fg:w="32"/><text x="38.3421%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (28 samples, 0.06%)</title><rect x="38.1014%" y="1013" width="0.0650%" height="15" fill="rgb(229,5,4)" fg:x="16416" fg:w="28"/><text x="38.3514%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.06%)</title><rect x="38.1037%" y="997" width="0.0627%" height="15" fill="rgb(225,176,49)" fg:x="16417" fg:w="27"/><text x="38.3537%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11 samples, 0.03%)</title><rect x="38.1409%" y="981" width="0.0255%" height="15" fill="rgb(224,221,49)" fg:x="16433" fg:w="11"/><text x="38.3909%" y="991.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical::_{{closure}} (8 samples, 0.02%)</title><rect x="38.1478%" y="965" width="0.0186%" height="15" fill="rgb(253,169,27)" fg:x="16436" fg:w="8"/><text x="38.3978%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="38.1711%" y="1013" width="0.0186%" height="15" fill="rgb(211,206,16)" fg:x="16446" fg:w="8"/><text x="38.4211%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="38.1757%" y="997" width="0.0139%" height="15" fill="rgb(244,87,35)" fg:x="16448" fg:w="6"/><text x="38.4257%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="38.1780%" y="981" width="0.0116%" height="15" fill="rgb(246,28,10)" fg:x="16449" fg:w="5"/><text x="38.4280%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="38.1664%" y="1029" width="0.0255%" height="15" fill="rgb(229,12,44)" fg:x="16444" fg:w="11"/><text x="38.4164%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.02%)</title><rect x="38.2036%" y="997" width="0.0209%" height="15" fill="rgb(210,145,37)" fg:x="16460" fg:w="9"/><text x="38.4536%" y="1007.50"></text></g><g><title>core::mem::take (7 samples, 0.02%)</title><rect x="38.2082%" y="981" width="0.0162%" height="15" fill="rgb(227,112,52)" fg:x="16462" fg:w="7"/><text x="38.4582%" y="991.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="38.2082%" y="965" width="0.0162%" height="15" fill="rgb(238,155,34)" fg:x="16462" fg:w="7"/><text x="38.4582%" y="975.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="38.2128%" y="949" width="0.0116%" height="15" fill="rgb(239,226,36)" fg:x="16464" fg:w="5"/><text x="38.4628%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="38.2128%" y="933" width="0.0116%" height="15" fill="rgb(230,16,23)" fg:x="16464" fg:w="5"/><text x="38.4628%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;Node,Type&gt;::into_node (5 samples, 0.01%)</title><rect x="38.2337%" y="933" width="0.0116%" height="15" fill="rgb(236,171,36)" fg:x="16473" fg:w="5"/><text x="38.4837%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (6 samples, 0.01%)</title><rect x="38.2337%" y="949" width="0.0139%" height="15" fill="rgb(221,22,14)" fg:x="16473" fg:w="6"/><text x="38.4837%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (9 samples, 0.02%)</title><rect x="38.2291%" y="965" width="0.0209%" height="15" fill="rgb(242,43,11)" fg:x="16471" fg:w="9"/><text x="38.4791%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (109 samples, 0.25%)</title><rect x="38.0016%" y="1045" width="0.2530%" height="15" fill="rgb(232,69,23)" fg:x="16373" fg:w="109"/><text x="38.2516%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (26 samples, 0.06%)</title><rect x="38.1943%" y="1029" width="0.0603%" height="15" fill="rgb(216,180,54)" fg:x="16456" fg:w="26"/><text x="38.4443%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.06%)</title><rect x="38.1943%" y="1013" width="0.0603%" height="15" fill="rgb(216,5,24)" fg:x="16456" fg:w="26"/><text x="38.4443%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (13 samples, 0.03%)</title><rect x="38.2244%" y="997" width="0.0302%" height="15" fill="rgb(225,89,9)" fg:x="16469" fg:w="13"/><text x="38.4744%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="38.2244%" y="981" width="0.0302%" height="15" fill="rgb(243,75,33)" fg:x="16469" fg:w="13"/><text x="38.4744%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (6 samples, 0.01%)</title><rect x="38.2662%" y="997" width="0.0139%" height="15" fill="rgb(247,141,45)" fg:x="16487" fg:w="6"/><text x="38.5162%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="38.3034%" y="933" width="0.0162%" height="15" fill="rgb(232,177,36)" fg:x="16503" fg:w="7"/><text x="38.5534%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="38.3080%" y="917" width="0.0116%" height="15" fill="rgb(219,125,36)" fg:x="16505" fg:w="5"/><text x="38.5580%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.03%)</title><rect x="38.2871%" y="997" width="0.0348%" height="15" fill="rgb(227,94,9)" fg:x="16496" fg:w="15"/><text x="38.5371%" y="1007.50"></text></g><g><title>core::mem::take (12 samples, 0.03%)</title><rect x="38.2941%" y="981" width="0.0279%" height="15" fill="rgb(240,34,52)" fg:x="16499" fg:w="12"/><text x="38.5441%" y="991.50"></text></g><g><title>core::mem::replace (11 samples, 0.03%)</title><rect x="38.2964%" y="965" width="0.0255%" height="15" fill="rgb(216,45,12)" fg:x="16500" fg:w="11"/><text x="38.5464%" y="975.50"></text></g><g><title>core::ptr::read (10 samples, 0.02%)</title><rect x="38.2987%" y="949" width="0.0232%" height="15" fill="rgb(246,21,19)" fg:x="16501" fg:w="10"/><text x="38.5487%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (9 samples, 0.02%)</title><rect x="38.3498%" y="917" width="0.0209%" height="15" fill="rgb(213,98,42)" fg:x="16523" fg:w="9"/><text x="38.5998%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.04%)</title><rect x="38.3405%" y="949" width="0.0418%" height="15" fill="rgb(250,136,47)" fg:x="16519" fg:w="18"/><text x="38.5905%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (16 samples, 0.04%)</title><rect x="38.3451%" y="933" width="0.0371%" height="15" fill="rgb(251,124,27)" fg:x="16521" fg:w="16"/><text x="38.5951%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="38.4008%" y="917" width="0.0139%" height="15" fill="rgb(229,180,14)" fg:x="16545" fg:w="6"/><text x="38.6508%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (5 samples, 0.01%)</title><rect x="38.4032%" y="901" width="0.0116%" height="15" fill="rgb(245,216,25)" fg:x="16546" fg:w="5"/><text x="38.6532%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (22 samples, 0.05%)</title><rect x="38.3823%" y="949" width="0.0511%" height="15" fill="rgb(251,43,5)" fg:x="16537" fg:w="22"/><text x="38.6323%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (21 samples, 0.05%)</title><rect x="38.3846%" y="933" width="0.0487%" height="15" fill="rgb(250,128,24)" fg:x="16538" fg:w="21"/><text x="38.6346%" y="943.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="38.4148%" y="917" width="0.0186%" height="15" fill="rgb(217,117,27)" fg:x="16551" fg:w="8"/><text x="38.6648%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (45 samples, 0.10%)</title><rect x="38.3335%" y="965" width="0.1044%" height="15" fill="rgb(245,147,4)" fg:x="16516" fg:w="45"/><text x="38.5835%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (77 samples, 0.18%)</title><rect x="38.2639%" y="1029" width="0.1787%" height="15" fill="rgb(242,201,35)" fg:x="16486" fg:w="77"/><text x="38.5139%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.18%)</title><rect x="38.2639%" y="1013" width="0.1787%" height="15" fill="rgb(218,181,1)" fg:x="16486" fg:w="77"/><text x="38.5139%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (52 samples, 0.12%)</title><rect x="38.3219%" y="997" width="0.1207%" height="15" fill="rgb(222,6,29)" fg:x="16511" fg:w="52"/><text x="38.5719%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.12%)</title><rect x="38.3219%" y="981" width="0.1207%" height="15" fill="rgb(208,186,3)" fg:x="16511" fg:w="52"/><text x="38.5719%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.02%)</title><rect x="38.4519%" y="981" width="0.0186%" height="15" fill="rgb(216,36,26)" fg:x="16567" fg:w="8"/><text x="38.7019%" y="991.50"></text></g><g><title>core::mem::take (8 samples, 0.02%)</title><rect x="38.4519%" y="965" width="0.0186%" height="15" fill="rgb(248,201,23)" fg:x="16567" fg:w="8"/><text x="38.7019%" y="975.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="38.4565%" y="949" width="0.0139%" height="15" fill="rgb(251,170,31)" fg:x="16569" fg:w="6"/><text x="38.7065%" y="959.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="38.4589%" y="933" width="0.0116%" height="15" fill="rgb(207,110,25)" fg:x="16570" fg:w="5"/><text x="38.7089%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (6 samples, 0.01%)</title><rect x="38.4890%" y="933" width="0.0139%" height="15" fill="rgb(250,54,15)" fg:x="16583" fg:w="6"/><text x="38.7390%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (7 samples, 0.02%)</title><rect x="38.5030%" y="933" width="0.0162%" height="15" fill="rgb(227,68,33)" fg:x="16589" fg:w="7"/><text x="38.7530%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="38.5076%" y="917" width="0.0116%" height="15" fill="rgb(238,34,41)" fg:x="16591" fg:w="5"/><text x="38.7576%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (18 samples, 0.04%)</title><rect x="38.4797%" y="949" width="0.0418%" height="15" fill="rgb(220,11,15)" fg:x="16579" fg:w="18"/><text x="38.7297%" y="959.50"></text></g><g><title>core::mem::drop (8 samples, 0.02%)</title><rect x="38.5215%" y="949" width="0.0186%" height="15" fill="rgb(246,111,35)" fg:x="16597" fg:w="8"/><text x="38.7715%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (8 samples, 0.02%)</title><rect x="38.5215%" y="933" width="0.0186%" height="15" fill="rgb(209,88,53)" fg:x="16597" fg:w="8"/><text x="38.7715%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (8 samples, 0.02%)</title><rect x="38.5215%" y="917" width="0.0186%" height="15" fill="rgb(231,185,47)" fg:x="16597" fg:w="8"/><text x="38.7715%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (6 samples, 0.01%)</title><rect x="38.5262%" y="901" width="0.0139%" height="15" fill="rgb(233,154,1)" fg:x="16599" fg:w="6"/><text x="38.7762%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="38.5262%" y="885" width="0.0139%" height="15" fill="rgb(225,15,46)" fg:x="16599" fg:w="6"/><text x="38.7762%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="38.5262%" y="869" width="0.0139%" height="15" fill="rgb(211,135,41)" fg:x="16599" fg:w="6"/><text x="38.7762%" y="879.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (254 samples, 0.59%)</title><rect x="37.9529%" y="1061" width="0.5895%" height="15" fill="rgb(208,54,0)" fg:x="16352" fg:w="254"/><text x="38.2029%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (123 samples, 0.29%)</title><rect x="38.2569%" y="1045" width="0.2855%" height="15" fill="rgb(244,136,14)" fg:x="16483" fg:w="123"/><text x="38.5069%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (43 samples, 0.10%)</title><rect x="38.4426%" y="1029" width="0.0998%" height="15" fill="rgb(241,56,14)" fg:x="16563" fg:w="43"/><text x="38.6926%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (43 samples, 0.10%)</title><rect x="38.4426%" y="1013" width="0.0998%" height="15" fill="rgb(205,80,24)" fg:x="16563" fg:w="43"/><text x="38.6926%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.10%)</title><rect x="38.4426%" y="997" width="0.0998%" height="15" fill="rgb(220,57,4)" fg:x="16563" fg:w="43"/><text x="38.6926%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (31 samples, 0.07%)</title><rect x="38.4705%" y="981" width="0.0720%" height="15" fill="rgb(226,193,50)" fg:x="16575" fg:w="31"/><text x="38.7205%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.07%)</title><rect x="38.4705%" y="965" width="0.0720%" height="15" fill="rgb(231,168,22)" fg:x="16575" fg:w="31"/><text x="38.7205%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="38.5424%" y="1045" width="0.0371%" height="15" fill="rgb(254,215,14)" fg:x="16606" fg:w="16"/><text x="38.7924%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (16 samples, 0.04%)</title><rect x="38.5424%" y="1029" width="0.0371%" height="15" fill="rgb(211,115,16)" fg:x="16606" fg:w="16"/><text x="38.7924%" y="1039.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="38.5424%" y="1061" width="0.0395%" height="15" fill="rgb(236,210,16)" fg:x="16606" fg:w="17"/><text x="38.7924%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (9 samples, 0.02%)</title><rect x="38.5819%" y="1013" width="0.0209%" height="15" fill="rgb(221,94,12)" fg:x="16623" fg:w="9"/><text x="38.8319%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="38.5819%" y="997" width="0.0209%" height="15" fill="rgb(235,218,49)" fg:x="16623" fg:w="9"/><text x="38.8319%" y="1007.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="38.5842%" y="981" width="0.0186%" height="15" fill="rgb(217,114,14)" fg:x="16624" fg:w="8"/><text x="38.8342%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="38.6213%" y="965" width="0.0441%" height="15" fill="rgb(216,145,22)" fg:x="16640" fg:w="19"/><text x="38.8713%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="38.6329%" y="949" width="0.0325%" height="15" fill="rgb(217,112,39)" fg:x="16645" fg:w="14"/><text x="38.8829%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (11 samples, 0.03%)</title><rect x="38.6677%" y="965" width="0.0255%" height="15" fill="rgb(225,85,32)" fg:x="16660" fg:w="11"/><text x="38.9177%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="38.6794%" y="949" width="0.0139%" height="15" fill="rgb(245,209,47)" fg:x="16665" fg:w="6"/><text x="38.9294%" y="959.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (56 samples, 0.13%)</title><rect x="38.5819%" y="1061" width="0.1300%" height="15" fill="rgb(218,220,15)" fg:x="16623" fg:w="56"/><text x="38.8319%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (56 samples, 0.13%)</title><rect x="38.5819%" y="1045" width="0.1300%" height="15" fill="rgb(222,202,31)" fg:x="16623" fg:w="56"/><text x="38.8319%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (56 samples, 0.13%)</title><rect x="38.5819%" y="1029" width="0.1300%" height="15" fill="rgb(243,203,4)" fg:x="16623" fg:w="56"/><text x="38.8319%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (47 samples, 0.11%)</title><rect x="38.6028%" y="1013" width="0.1091%" height="15" fill="rgb(237,92,17)" fg:x="16632" fg:w="47"/><text x="38.8528%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (45 samples, 0.10%)</title><rect x="38.6074%" y="997" width="0.1044%" height="15" fill="rgb(231,119,7)" fg:x="16634" fg:w="45"/><text x="38.8574%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (42 samples, 0.10%)</title><rect x="38.6144%" y="981" width="0.0975%" height="15" fill="rgb(237,82,41)" fg:x="16637" fg:w="42"/><text x="38.8644%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="38.7002%" y="965" width="0.0116%" height="15" fill="rgb(226,81,48)" fg:x="16674" fg:w="5"/><text x="38.9502%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="38.7258%" y="949" width="0.0209%" height="15" fill="rgb(234,70,51)" fg:x="16685" fg:w="9"/><text x="38.9758%" y="959.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (20 samples, 0.05%)</title><rect x="38.7118%" y="1045" width="0.0464%" height="15" fill="rgb(251,86,4)" fg:x="16679" fg:w="20"/><text x="38.9618%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (20 samples, 0.05%)</title><rect x="38.7118%" y="1029" width="0.0464%" height="15" fill="rgb(244,144,28)" fg:x="16679" fg:w="20"/><text x="38.9618%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (20 samples, 0.05%)</title><rect x="38.7118%" y="1013" width="0.0464%" height="15" fill="rgb(232,161,39)" fg:x="16679" fg:w="20"/><text x="38.9618%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.04%)</title><rect x="38.7211%" y="997" width="0.0371%" height="15" fill="rgb(247,34,51)" fg:x="16683" fg:w="16"/><text x="38.9711%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.03%)</title><rect x="38.7235%" y="981" width="0.0348%" height="15" fill="rgb(225,132,2)" fg:x="16684" fg:w="15"/><text x="38.9735%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.03%)</title><rect x="38.7235%" y="965" width="0.0348%" height="15" fill="rgb(209,159,44)" fg:x="16684" fg:w="15"/><text x="38.9735%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="38.7722%" y="949" width="0.0209%" height="15" fill="rgb(251,214,1)" fg:x="16705" fg:w="9"/><text x="39.0222%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="38.7768%" y="933" width="0.0162%" height="15" fill="rgb(247,84,47)" fg:x="16707" fg:w="7"/><text x="39.0268%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="38.7931%" y="949" width="0.0139%" height="15" fill="rgb(240,111,43)" fg:x="16714" fg:w="6"/><text x="39.0431%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="38.7954%" y="933" width="0.0116%" height="15" fill="rgb(215,214,35)" fg:x="16715" fg:w="5"/><text x="39.0454%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="38.7954%" y="917" width="0.0116%" height="15" fill="rgb(248,207,23)" fg:x="16715" fg:w="5"/><text x="39.0454%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="38.7954%" y="901" width="0.0116%" height="15" fill="rgb(214,186,4)" fg:x="16715" fg:w="5"/><text x="39.0454%" y="911.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (23 samples, 0.05%)</title><rect x="38.7583%" y="1045" width="0.0534%" height="15" fill="rgb(220,133,22)" fg:x="16699" fg:w="23"/><text x="39.0083%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (23 samples, 0.05%)</title><rect x="38.7583%" y="1029" width="0.0534%" height="15" fill="rgb(239,134,19)" fg:x="16699" fg:w="23"/><text x="39.0083%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (23 samples, 0.05%)</title><rect x="38.7583%" y="1013" width="0.0534%" height="15" fill="rgb(250,140,9)" fg:x="16699" fg:w="23"/><text x="39.0083%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.05%)</title><rect x="38.7652%" y="997" width="0.0464%" height="15" fill="rgb(225,59,14)" fg:x="16702" fg:w="20"/><text x="39.0152%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.04%)</title><rect x="38.7699%" y="981" width="0.0418%" height="15" fill="rgb(214,152,51)" fg:x="16704" fg:w="18"/><text x="39.0199%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.04%)</title><rect x="38.7722%" y="965" width="0.0395%" height="15" fill="rgb(251,227,43)" fg:x="16705" fg:w="17"/><text x="39.0222%" y="975.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="38.8279%" y="981" width="0.0116%" height="15" fill="rgb(241,96,17)" fg:x="16729" fg:w="5"/><text x="39.0779%" y="991.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (57 samples, 0.13%)</title><rect x="38.7118%" y="1061" width="0.1323%" height="15" fill="rgb(234,198,43)" fg:x="16679" fg:w="57"/><text x="38.9618%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.03%)</title><rect x="38.8117%" y="1045" width="0.0325%" height="15" fill="rgb(220,108,29)" fg:x="16722" fg:w="14"/><text x="39.0617%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.03%)</title><rect x="38.8117%" y="1029" width="0.0325%" height="15" fill="rgb(226,163,33)" fg:x="16722" fg:w="14"/><text x="39.0617%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="38.8117%" y="1013" width="0.0325%" height="15" fill="rgb(205,194,45)" fg:x="16722" fg:w="14"/><text x="39.0617%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="38.8117%" y="997" width="0.0325%" height="15" fill="rgb(206,143,44)" fg:x="16722" fg:w="14"/><text x="39.0617%" y="1007.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (387 samples, 0.90%)</title><rect x="37.9529%" y="1077" width="0.8982%" height="15" fill="rgb(236,136,36)" fg:x="16352" fg:w="387"/><text x="38.2029%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (9 samples, 0.02%)</title><rect x="38.8650%" y="917" width="0.0209%" height="15" fill="rgb(249,172,42)" fg:x="16745" fg:w="9"/><text x="39.1150%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (6 samples, 0.01%)</title><rect x="38.8720%" y="901" width="0.0139%" height="15" fill="rgb(216,139,23)" fg:x="16748" fg:w="6"/><text x="39.1220%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (6 samples, 0.01%)</title><rect x="38.8929%" y="917" width="0.0139%" height="15" fill="rgb(207,166,20)" fg:x="16757" fg:w="6"/><text x="39.1429%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (15 samples, 0.03%)</title><rect x="38.9115%" y="917" width="0.0348%" height="15" fill="rgb(210,209,22)" fg:x="16765" fg:w="15"/><text x="39.1615%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="38.9161%" y="901" width="0.0302%" height="15" fill="rgb(232,118,20)" fg:x="16767" fg:w="13"/><text x="39.1661%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="38.9277%" y="885" width="0.0186%" height="15" fill="rgb(238,113,42)" fg:x="16772" fg:w="8"/><text x="39.1777%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (44 samples, 0.10%)</title><rect x="38.8511%" y="1061" width="0.1021%" height="15" fill="rgb(231,42,5)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.10%)</title><rect x="38.8511%" y="1045" width="0.1021%" height="15" fill="rgb(243,166,24)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (44 samples, 0.10%)</title><rect x="38.8511%" y="1029" width="0.1021%" height="15" fill="rgb(237,226,12)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.10%)</title><rect x="38.8511%" y="1013" width="0.1021%" height="15" fill="rgb(229,133,24)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (44 samples, 0.10%)</title><rect x="38.8511%" y="997" width="0.1021%" height="15" fill="rgb(238,33,43)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (44 samples, 0.10%)</title><rect x="38.8511%" y="981" width="0.1021%" height="15" fill="rgb(227,59,38)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (44 samples, 0.10%)</title><rect x="38.8511%" y="965" width="0.1021%" height="15" fill="rgb(230,97,0)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (44 samples, 0.10%)</title><rect x="38.8511%" y="949" width="0.1021%" height="15" fill="rgb(250,173,50)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (44 samples, 0.10%)</title><rect x="38.8511%" y="933" width="0.1021%" height="15" fill="rgb(240,15,50)" fg:x="16739" fg:w="44"/><text x="39.1011%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (6 samples, 0.01%)</title><rect x="38.9695%" y="901" width="0.0139%" height="15" fill="rgb(221,93,22)" fg:x="16790" fg:w="6"/><text x="39.2195%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="38.9904%" y="901" width="0.0186%" height="15" fill="rgb(245,180,53)" fg:x="16799" fg:w="8"/><text x="39.2404%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="38.9950%" y="885" width="0.0139%" height="15" fill="rgb(231,88,51)" fg:x="16801" fg:w="6"/><text x="39.2450%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (28 samples, 0.06%)</title><rect x="38.9532%" y="981" width="0.0650%" height="15" fill="rgb(240,58,21)" fg:x="16783" fg:w="28"/><text x="39.2032%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (28 samples, 0.06%)</title><rect x="38.9532%" y="965" width="0.0650%" height="15" fill="rgb(237,21,10)" fg:x="16783" fg:w="28"/><text x="39.2032%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (28 samples, 0.06%)</title><rect x="38.9532%" y="949" width="0.0650%" height="15" fill="rgb(218,43,11)" fg:x="16783" fg:w="28"/><text x="39.2032%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (28 samples, 0.06%)</title><rect x="38.9532%" y="933" width="0.0650%" height="15" fill="rgb(218,221,29)" fg:x="16783" fg:w="28"/><text x="39.2032%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (28 samples, 0.06%)</title><rect x="38.9532%" y="917" width="0.0650%" height="15" fill="rgb(214,118,42)" fg:x="16783" fg:w="28"/><text x="39.2032%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (5 samples, 0.01%)</title><rect x="39.0205%" y="853" width="0.0116%" height="15" fill="rgb(251,200,26)" fg:x="16812" fg:w="5"/><text x="39.2705%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (6 samples, 0.01%)</title><rect x="39.0345%" y="741" width="0.0139%" height="15" fill="rgb(237,101,39)" fg:x="16818" fg:w="6"/><text x="39.2845%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (87 samples, 0.20%)</title><rect x="38.8511%" y="1077" width="0.2019%" height="15" fill="rgb(251,117,11)" fg:x="16739" fg:w="87"/><text x="39.1011%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (43 samples, 0.10%)</title><rect x="38.9532%" y="1061" width="0.0998%" height="15" fill="rgb(216,223,23)" fg:x="16783" fg:w="43"/><text x="39.2032%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (43 samples, 0.10%)</title><rect x="38.9532%" y="1045" width="0.0998%" height="15" fill="rgb(251,54,12)" fg:x="16783" fg:w="43"/><text x="39.2032%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.10%)</title><rect x="38.9532%" y="1029" width="0.0998%" height="15" fill="rgb(254,176,54)" fg:x="16783" fg:w="43"/><text x="39.2032%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (43 samples, 0.10%)</title><rect x="38.9532%" y="1013" width="0.0998%" height="15" fill="rgb(210,32,8)" fg:x="16783" fg:w="43"/><text x="39.2032%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.10%)</title><rect x="38.9532%" y="997" width="0.0998%" height="15" fill="rgb(235,52,38)" fg:x="16783" fg:w="43"/><text x="39.2032%" y="1007.50"></text></g><g><title>core::mem::drop (15 samples, 0.03%)</title><rect x="39.0182%" y="981" width="0.0348%" height="15" fill="rgb(231,4,44)" fg:x="16811" fg:w="15"/><text x="39.2682%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (15 samples, 0.03%)</title><rect x="39.0182%" y="965" width="0.0348%" height="15" fill="rgb(249,2,32)" fg:x="16811" fg:w="15"/><text x="39.2682%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (15 samples, 0.03%)</title><rect x="39.0182%" y="949" width="0.0348%" height="15" fill="rgb(224,65,26)" fg:x="16811" fg:w="15"/><text x="39.2682%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (14 samples, 0.03%)</title><rect x="39.0205%" y="933" width="0.0325%" height="15" fill="rgb(250,73,40)" fg:x="16812" fg:w="14"/><text x="39.2705%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="39.0205%" y="917" width="0.0325%" height="15" fill="rgb(253,177,16)" fg:x="16812" fg:w="14"/><text x="39.2705%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="39.0205%" y="901" width="0.0325%" height="15" fill="rgb(217,32,34)" fg:x="16812" fg:w="14"/><text x="39.2705%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="39.0205%" y="885" width="0.0325%" height="15" fill="rgb(212,7,10)" fg:x="16812" fg:w="14"/><text x="39.2705%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="39.0205%" y="869" width="0.0325%" height="15" fill="rgb(245,89,8)" fg:x="16812" fg:w="14"/><text x="39.2705%" y="879.50"></text></g><g><title>core::mem::drop (9 samples, 0.02%)</title><rect x="39.0321%" y="853" width="0.0209%" height="15" fill="rgb(237,16,53)" fg:x="16817" fg:w="9"/><text x="39.2821%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (9 samples, 0.02%)</title><rect x="39.0321%" y="837" width="0.0209%" height="15" fill="rgb(250,204,30)" fg:x="16817" fg:w="9"/><text x="39.2821%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="39.0321%" y="821" width="0.0209%" height="15" fill="rgb(208,77,27)" fg:x="16817" fg:w="9"/><text x="39.2821%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (9 samples, 0.02%)</title><rect x="39.0321%" y="805" width="0.0209%" height="15" fill="rgb(250,204,28)" fg:x="16817" fg:w="9"/><text x="39.2821%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="39.0321%" y="789" width="0.0209%" height="15" fill="rgb(244,63,21)" fg:x="16817" fg:w="9"/><text x="39.2821%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (8 samples, 0.02%)</title><rect x="39.0345%" y="773" width="0.0186%" height="15" fill="rgb(236,85,44)" fg:x="16818" fg:w="8"/><text x="39.2845%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="39.0345%" y="757" width="0.0186%" height="15" fill="rgb(215,98,4)" fg:x="16818" fg:w="8"/><text x="39.2845%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.01%)</title><rect x="39.0577%" y="933" width="0.0139%" height="15" fill="rgb(235,38,11)" fg:x="16828" fg:w="6"/><text x="39.3077%" y="943.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="39.0577%" y="917" width="0.0139%" height="15" fill="rgb(254,186,25)" fg:x="16828" fg:w="6"/><text x="39.3077%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (9 samples, 0.02%)</title><rect x="39.0530%" y="1077" width="0.0209%" height="15" fill="rgb(225,55,31)" fg:x="16826" fg:w="9"/><text x="39.3030%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="39.0530%" y="1061" width="0.0209%" height="15" fill="rgb(211,15,21)" fg:x="16826" fg:w="9"/><text x="39.3030%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9 samples, 0.02%)</title><rect x="39.0530%" y="1045" width="0.0209%" height="15" fill="rgb(215,187,41)" fg:x="16826" fg:w="9"/><text x="39.3030%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="39.0530%" y="1029" width="0.0209%" height="15" fill="rgb(248,69,32)" fg:x="16826" fg:w="9"/><text x="39.3030%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="39.0530%" y="1013" width="0.0209%" height="15" fill="rgb(252,102,52)" fg:x="16826" fg:w="9"/><text x="39.3030%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.02%)</title><rect x="39.0577%" y="997" width="0.0162%" height="15" fill="rgb(253,140,32)" fg:x="16828" fg:w="7"/><text x="39.3077%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.02%)</title><rect x="39.0577%" y="981" width="0.0162%" height="15" fill="rgb(216,56,42)" fg:x="16828" fg:w="7"/><text x="39.3077%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.02%)</title><rect x="39.0577%" y="965" width="0.0162%" height="15" fill="rgb(216,184,14)" fg:x="16828" fg:w="7"/><text x="39.3077%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="39.0577%" y="949" width="0.0162%" height="15" fill="rgb(237,187,27)" fg:x="16828" fg:w="7"/><text x="39.3077%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="39.0786%" y="981" width="0.0139%" height="15" fill="rgb(219,65,3)" fg:x="16837" fg:w="6"/><text x="39.3286%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.04%)</title><rect x="39.0739%" y="1029" width="0.0441%" height="15" fill="rgb(245,83,25)" fg:x="16835" fg:w="19"/><text x="39.3239%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="39.0762%" y="1013" width="0.0418%" height="15" fill="rgb(214,205,45)" fg:x="16836" fg:w="18"/><text x="39.3262%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="39.0762%" y="997" width="0.0418%" height="15" fill="rgb(241,20,18)" fg:x="16836" fg:w="18"/><text x="39.3262%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.03%)</title><rect x="39.0925%" y="981" width="0.0255%" height="15" fill="rgb(232,163,23)" fg:x="16843" fg:w="11"/><text x="39.3425%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="39.1041%" y="965" width="0.0139%" height="15" fill="rgb(214,5,46)" fg:x="16848" fg:w="6"/><text x="39.3541%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (28 samples, 0.06%)</title><rect x="39.0739%" y="1045" width="0.0650%" height="15" fill="rgb(229,78,17)" fg:x="16835" fg:w="28"/><text x="39.3239%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.01%)</title><rect x="39.1273%" y="1029" width="0.0116%" height="15" fill="rgb(248,89,10)" fg:x="16858" fg:w="5"/><text x="39.3773%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.01%)</title><rect x="39.1273%" y="1013" width="0.0116%" height="15" fill="rgb(248,54,15)" fg:x="16858" fg:w="5"/><text x="39.3773%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="39.1273%" y="997" width="0.0116%" height="15" fill="rgb(223,116,6)" fg:x="16858" fg:w="5"/><text x="39.3773%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="39.1412%" y="1013" width="0.0325%" height="15" fill="rgb(205,125,38)" fg:x="16864" fg:w="14"/><text x="39.3912%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="39.1459%" y="997" width="0.0279%" height="15" fill="rgb(251,78,38)" fg:x="16866" fg:w="12"/><text x="39.3959%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (7 samples, 0.02%)</title><rect x="39.1575%" y="981" width="0.0162%" height="15" fill="rgb(253,78,28)" fg:x="16871" fg:w="7"/><text x="39.4075%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="39.1575%" y="965" width="0.0162%" height="15" fill="rgb(209,120,3)" fg:x="16871" fg:w="7"/><text x="39.4075%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="39.1807%" y="965" width="0.0139%" height="15" fill="rgb(238,229,9)" fg:x="16881" fg:w="6"/><text x="39.4307%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="39.1807%" y="949" width="0.0139%" height="15" fill="rgb(253,159,18)" fg:x="16881" fg:w="6"/><text x="39.4307%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (33 samples, 0.08%)</title><rect x="39.1389%" y="1045" width="0.0766%" height="15" fill="rgb(244,42,34)" fg:x="16863" fg:w="33"/><text x="39.3889%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.08%)</title><rect x="39.1389%" y="1029" width="0.0766%" height="15" fill="rgb(224,8,7)" fg:x="16863" fg:w="33"/><text x="39.3889%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (18 samples, 0.04%)</title><rect x="39.1737%" y="1013" width="0.0418%" height="15" fill="rgb(210,201,45)" fg:x="16878" fg:w="18"/><text x="39.4237%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (18 samples, 0.04%)</title><rect x="39.1737%" y="997" width="0.0418%" height="15" fill="rgb(252,185,21)" fg:x="16878" fg:w="18"/><text x="39.4237%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.04%)</title><rect x="39.1760%" y="981" width="0.0395%" height="15" fill="rgb(223,131,1)" fg:x="16879" fg:w="17"/><text x="39.4260%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.02%)</title><rect x="39.1946%" y="965" width="0.0209%" height="15" fill="rgb(245,141,16)" fg:x="16887" fg:w="9"/><text x="39.4446%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.01%)</title><rect x="39.2410%" y="1013" width="0.0139%" height="15" fill="rgb(229,55,45)" fg:x="16907" fg:w="6"/><text x="39.4910%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (15 samples, 0.03%)</title><rect x="39.2341%" y="1029" width="0.0348%" height="15" fill="rgb(208,92,15)" fg:x="16904" fg:w="15"/><text x="39.4841%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="39.2550%" y="1013" width="0.0139%" height="15" fill="rgb(234,185,47)" fg:x="16913" fg:w="6"/><text x="39.5050%" y="1023.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (5 samples, 0.01%)</title><rect x="39.2735%" y="981" width="0.0116%" height="15" fill="rgb(253,104,50)" fg:x="16921" fg:w="5"/><text x="39.5235%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="39.2735%" y="997" width="0.0139%" height="15" fill="rgb(205,70,7)" fg:x="16921" fg:w="6"/><text x="39.5235%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (9 samples, 0.02%)</title><rect x="39.2689%" y="1029" width="0.0209%" height="15" fill="rgb(240,178,43)" fg:x="16919" fg:w="9"/><text x="39.5189%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.02%)</title><rect x="39.2735%" y="1013" width="0.0162%" height="15" fill="rgb(214,112,2)" fg:x="16921" fg:w="7"/><text x="39.5235%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (10 samples, 0.02%)</title><rect x="39.3060%" y="997" width="0.0232%" height="15" fill="rgb(206,46,17)" fg:x="16935" fg:w="10"/><text x="39.5560%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="39.2898%" y="1029" width="0.0418%" height="15" fill="rgb(225,220,16)" fg:x="16928" fg:w="18"/><text x="39.5398%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.04%)</title><rect x="39.2898%" y="1013" width="0.0418%" height="15" fill="rgb(238,65,40)" fg:x="16928" fg:w="18"/><text x="39.5398%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (6 samples, 0.01%)</title><rect x="39.3385%" y="1013" width="0.0139%" height="15" fill="rgb(230,151,21)" fg:x="16949" fg:w="6"/><text x="39.5885%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.04%)</title><rect x="39.3316%" y="1029" width="0.0371%" height="15" fill="rgb(218,58,49)" fg:x="16946" fg:w="16"/><text x="39.5816%" y="1039.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (955 samples, 2.22%)</title><rect x="37.1730%" y="1093" width="2.2165%" height="15" fill="rgb(219,179,14)" fg:x="16016" fg:w="955"/><text x="37.4230%" y="1103.50">b..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (136 samples, 0.32%)</title><rect x="39.0739%" y="1077" width="0.3157%" height="15" fill="rgb(223,72,1)" fg:x="16835" fg:w="136"/><text x="39.3239%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (136 samples, 0.32%)</title><rect x="39.0739%" y="1061" width="0.3157%" height="15" fill="rgb(238,126,10)" fg:x="16835" fg:w="136"/><text x="39.3239%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (75 samples, 0.17%)</title><rect x="39.2155%" y="1045" width="0.1741%" height="15" fill="rgb(224,206,38)" fg:x="16896" fg:w="75"/><text x="39.4655%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (9 samples, 0.02%)</title><rect x="39.3687%" y="1029" width="0.0209%" height="15" fill="rgb(212,201,54)" fg:x="16962" fg:w="9"/><text x="39.6187%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (9 samples, 0.02%)</title><rect x="39.3687%" y="1013" width="0.0209%" height="15" fill="rgb(218,154,48)" fg:x="16962" fg:w="9"/><text x="39.6187%" y="1023.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.01%)</title><rect x="39.3780%" y="997" width="0.0116%" height="15" fill="rgb(232,93,24)" fg:x="16966" fg:w="5"/><text x="39.6280%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="39.3896%" y="1077" width="0.0209%" height="15" fill="rgb(245,30,21)" fg:x="16971" fg:w="9"/><text x="39.6396%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="39.3896%" y="1061" width="0.0209%" height="15" fill="rgb(242,148,29)" fg:x="16971" fg:w="9"/><text x="39.6396%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (9 samples, 0.02%)</title><rect x="39.3896%" y="1045" width="0.0209%" height="15" fill="rgb(244,153,54)" fg:x="16971" fg:w="9"/><text x="39.6396%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (9 samples, 0.02%)</title><rect x="39.3896%" y="1029" width="0.0209%" height="15" fill="rgb(252,87,22)" fg:x="16971" fg:w="9"/><text x="39.6396%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (9 samples, 0.02%)</title><rect x="39.3896%" y="1013" width="0.0209%" height="15" fill="rgb(210,51,29)" fg:x="16971" fg:w="9"/><text x="39.6396%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (5 samples, 0.01%)</title><rect x="39.3989%" y="997" width="0.0116%" height="15" fill="rgb(242,136,47)" fg:x="16975" fg:w="5"/><text x="39.6489%" y="1007.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (969 samples, 2.25%)</title><rect x="37.1730%" y="1109" width="2.2490%" height="15" fill="rgb(238,68,4)" fg:x="16016" fg:w="969"/><text x="37.4230%" y="1119.50">b..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (14 samples, 0.03%)</title><rect x="39.3896%" y="1093" width="0.0325%" height="15" fill="rgb(242,161,30)" fg:x="16971" fg:w="14"/><text x="39.6396%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (5 samples, 0.01%)</title><rect x="39.4105%" y="1077" width="0.0116%" height="15" fill="rgb(218,58,44)" fg:x="16980" fg:w="5"/><text x="39.6605%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="39.4105%" y="1061" width="0.0116%" height="15" fill="rgb(252,125,32)" fg:x="16980" fg:w="5"/><text x="39.6605%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="39.4105%" y="1045" width="0.0116%" height="15" fill="rgb(219,178,0)" fg:x="16980" fg:w="5"/><text x="39.6605%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="39.4105%" y="1029" width="0.0116%" height="15" fill="rgb(213,152,7)" fg:x="16980" fg:w="5"/><text x="39.6605%" y="1039.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (8 samples, 0.02%)</title><rect x="39.4360%" y="1061" width="0.0186%" height="15" fill="rgb(249,109,34)" fg:x="16991" fg:w="8"/><text x="39.6860%" y="1071.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (6 samples, 0.01%)</title><rect x="39.4406%" y="1045" width="0.0139%" height="15" fill="rgb(232,96,21)" fg:x="16993" fg:w="6"/><text x="39.6906%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="39.4430%" y="1029" width="0.0116%" height="15" fill="rgb(228,27,39)" fg:x="16994" fg:w="5"/><text x="39.6930%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="39.4430%" y="1013" width="0.0116%" height="15" fill="rgb(211,182,52)" fg:x="16994" fg:w="5"/><text x="39.6930%" y="1023.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (5 samples, 0.01%)</title><rect x="39.4592%" y="1061" width="0.0116%" height="15" fill="rgb(234,178,38)" fg:x="17001" fg:w="5"/><text x="39.7092%" y="1071.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (5 samples, 0.01%)</title><rect x="39.4592%" y="1045" width="0.0116%" height="15" fill="rgb(221,111,3)" fg:x="17001" fg:w="5"/><text x="39.7092%" y="1055.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (1,503 samples, 3.49%)</title><rect x="35.9916%" y="1141" width="3.4885%" height="15" fill="rgb(228,175,21)" fg:x="15507" fg:w="1503"/><text x="36.2416%" y="1151.50">byt..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (1,503 samples, 3.49%)</title><rect x="35.9916%" y="1125" width="3.4885%" height="15" fill="rgb(228,174,43)" fg:x="15507" fg:w="1503"/><text x="36.2416%" y="1135.50">byt..</text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify (25 samples, 0.06%)</title><rect x="39.4221%" y="1109" width="0.0580%" height="15" fill="rgb(211,191,0)" fg:x="16985" fg:w="25"/><text x="39.6721%" y="1119.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify_block (25 samples, 0.06%)</title><rect x="39.4221%" y="1093" width="0.0580%" height="15" fill="rgb(253,117,3)" fg:x="16985" fg:w="25"/><text x="39.6721%" y="1103.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::instruction_effect (25 samples, 0.06%)</title><rect x="39.4221%" y="1077" width="0.0580%" height="15" fill="rgb(241,127,19)" fg:x="16985" fg:w="25"/><text x="39.6721%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.03%)</title><rect x="39.4801%" y="1013" width="0.0255%" height="15" fill="rgb(218,103,12)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="39.4801%" y="997" width="0.0255%" height="15" fill="rgb(236,214,43)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="39.4801%" y="981" width="0.0255%" height="15" fill="rgb(244,144,19)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (11 samples, 0.03%)</title><rect x="39.4801%" y="965" width="0.0255%" height="15" fill="rgb(246,188,10)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="39.4801%" y="949" width="0.0255%" height="15" fill="rgb(212,193,33)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="39.4801%" y="933" width="0.0255%" height="15" fill="rgb(241,51,29)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="39.4801%" y="917" width="0.0255%" height="15" fill="rgb(211,58,19)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="39.4801%" y="901" width="0.0255%" height="15" fill="rgb(229,111,26)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="911.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="39.4801%" y="885" width="0.0255%" height="15" fill="rgb(213,115,40)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="895.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.03%)</title><rect x="39.4801%" y="869" width="0.0255%" height="15" fill="rgb(209,56,44)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="879.50"></text></g><g><title>_int_realloc (11 samples, 0.03%)</title><rect x="39.4801%" y="853" width="0.0255%" height="15" fill="rgb(230,108,32)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="863.50"></text></g><g><title>_int_malloc (11 samples, 0.03%)</title><rect x="39.4801%" y="837" width="0.0255%" height="15" fill="rgb(216,165,31)" fg:x="17010" fg:w="11"/><text x="39.7301%" y="847.50"></text></g><g><title>bytecode_verifier::control_flow::verify (12 samples, 0.03%)</title><rect x="39.4801%" y="1077" width="0.0279%" height="15" fill="rgb(218,122,21)" fg:x="17010" fg:w="12"/><text x="39.7301%" y="1087.50"></text></g><g><title>bytecode_verifier::control_flow::check_jumps (12 samples, 0.03%)</title><rect x="39.4801%" y="1061" width="0.0279%" height="15" fill="rgb(223,224,47)" fg:x="17010" fg:w="12"/><text x="39.7301%" y="1071.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits (12 samples, 0.03%)</title><rect x="39.4801%" y="1045" width="0.0279%" height="15" fill="rgb(238,102,44)" fg:x="17010" fg:w="12"/><text x="39.7301%" y="1055.50"></text></g><g><title>bytecode_verifier::control_flow::count_loop_depth (12 samples, 0.03%)</title><rect x="39.4801%" y="1029" width="0.0279%" height="15" fill="rgb(236,46,40)" fg:x="17010" fg:w="12"/><text x="39.7301%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="39.5149%" y="1045" width="0.0116%" height="15" fill="rgb(247,202,50)" fg:x="17025" fg:w="5"/><text x="39.7649%" y="1055.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (24 samples, 0.06%)</title><rect x="39.5079%" y="1061" width="0.0557%" height="15" fill="rgb(209,99,20)" fg:x="17022" fg:w="24"/><text x="39.7579%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="39.5637%" y="981" width="0.0116%" height="15" fill="rgb(252,27,34)" fg:x="17046" fg:w="5"/><text x="39.8137%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="39.5637%" y="965" width="0.0116%" height="15" fill="rgb(215,206,23)" fg:x="17046" fg:w="5"/><text x="39.8137%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="39.5637%" y="949" width="0.0116%" height="15" fill="rgb(212,135,36)" fg:x="17046" fg:w="5"/><text x="39.8137%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.01%)</title><rect x="39.5637%" y="933" width="0.0116%" height="15" fill="rgb(240,189,1)" fg:x="17046" fg:w="5"/><text x="39.8137%" y="943.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (30 samples, 0.07%)</title><rect x="39.5079%" y="1077" width="0.0696%" height="15" fill="rgb(242,56,20)" fg:x="17022" fg:w="30"/><text x="39.7579%" y="1087.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (6 samples, 0.01%)</title><rect x="39.5637%" y="1061" width="0.0139%" height="15" fill="rgb(247,132,33)" fg:x="17046" fg:w="6"/><text x="39.8137%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="39.5637%" y="1045" width="0.0139%" height="15" fill="rgb(208,149,11)" fg:x="17046" fg:w="6"/><text x="39.8137%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="39.5637%" y="1029" width="0.0139%" height="15" fill="rgb(211,33,11)" fg:x="17046" fg:w="6"/><text x="39.8137%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="39.5637%" y="1013" width="0.0139%" height="15" fill="rgb(221,29,38)" fg:x="17046" fg:w="6"/><text x="39.8137%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="39.5637%" y="997" width="0.0139%" height="15" fill="rgb(206,182,49)" fg:x="17046" fg:w="6"/><text x="39.8137%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="39.5845%" y="997" width="0.0116%" height="15" fill="rgb(216,140,1)" fg:x="17055" fg:w="5"/><text x="39.8345%" y="1007.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (6 samples, 0.01%)</title><rect x="39.5845%" y="1045" width="0.0139%" height="15" fill="rgb(232,57,40)" fg:x="17055" fg:w="6"/><text x="39.8345%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (6 samples, 0.01%)</title><rect x="39.5845%" y="1029" width="0.0139%" height="15" fill="rgb(224,186,18)" fg:x="17055" fg:w="6"/><text x="39.8345%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (6 samples, 0.01%)</title><rect x="39.5845%" y="1013" width="0.0139%" height="15" fill="rgb(215,121,11)" fg:x="17055" fg:w="6"/><text x="39.8345%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (10 samples, 0.02%)</title><rect x="39.6170%" y="1029" width="0.0232%" height="15" fill="rgb(245,147,10)" fg:x="17069" fg:w="10"/><text x="39.8670%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="39.6170%" y="1013" width="0.0232%" height="15" fill="rgb(238,153,13)" fg:x="17069" fg:w="10"/><text x="39.8670%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (12 samples, 0.03%)</title><rect x="39.6170%" y="1045" width="0.0279%" height="15" fill="rgb(233,108,0)" fg:x="17069" fg:w="12"/><text x="39.8670%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="39.6449%" y="997" width="0.0255%" height="15" fill="rgb(212,157,17)" fg:x="17081" fg:w="11"/><text x="39.8949%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (12 samples, 0.03%)</title><rect x="39.6449%" y="1045" width="0.0279%" height="15" fill="rgb(225,213,38)" fg:x="17081" fg:w="12"/><text x="39.8949%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (12 samples, 0.03%)</title><rect x="39.6449%" y="1029" width="0.0279%" height="15" fill="rgb(248,16,11)" fg:x="17081" fg:w="12"/><text x="39.8949%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (12 samples, 0.03%)</title><rect x="39.6449%" y="1013" width="0.0279%" height="15" fill="rgb(241,33,4)" fg:x="17081" fg:w="12"/><text x="39.8949%" y="1023.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (46 samples, 0.11%)</title><rect x="39.5776%" y="1061" width="0.1068%" height="15" fill="rgb(222,26,43)" fg:x="17052" fg:w="46"/><text x="39.8276%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (5 samples, 0.01%)</title><rect x="39.6727%" y="1045" width="0.0116%" height="15" fill="rgb(243,29,36)" fg:x="17093" fg:w="5"/><text x="39.9227%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="39.6727%" y="1029" width="0.0116%" height="15" fill="rgb(241,9,27)" fg:x="17093" fg:w="5"/><text x="39.9227%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (6 samples, 0.01%)</title><rect x="39.6843%" y="997" width="0.0139%" height="15" fill="rgb(205,117,26)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (6 samples, 0.01%)</title><rect x="39.6843%" y="981" width="0.0139%" height="15" fill="rgb(209,80,39)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="39.6843%" y="965" width="0.0139%" height="15" fill="rgb(239,155,6)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (6 samples, 0.01%)</title><rect x="39.6843%" y="949" width="0.0139%" height="15" fill="rgb(212,104,12)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (6 samples, 0.01%)</title><rect x="39.6843%" y="933" width="0.0139%" height="15" fill="rgb(234,204,3)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (6 samples, 0.01%)</title><rect x="39.6843%" y="917" width="0.0139%" height="15" fill="rgb(251,218,7)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (6 samples, 0.01%)</title><rect x="39.6843%" y="901" width="0.0139%" height="15" fill="rgb(221,81,32)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6 samples, 0.01%)</title><rect x="39.6843%" y="885" width="0.0139%" height="15" fill="rgb(214,152,26)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.01%)</title><rect x="39.6843%" y="869" width="0.0139%" height="15" fill="rgb(223,22,3)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="39.6843%" y="853" width="0.0139%" height="15" fill="rgb(207,174,7)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="39.6843%" y="837" width="0.0139%" height="15" fill="rgb(224,19,52)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="847.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.01%)</title><rect x="39.6843%" y="821" width="0.0139%" height="15" fill="rgb(228,24,14)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="39.6843%" y="805" width="0.0139%" height="15" fill="rgb(230,153,43)" fg:x="17098" fg:w="6"/><text x="39.9343%" y="815.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (102 samples, 0.24%)</title><rect x="39.4801%" y="1141" width="0.2367%" height="15" fill="rgb(231,106,12)" fg:x="17010" fg:w="102"/><text x="39.7301%" y="1151.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (102 samples, 0.24%)</title><rect x="39.4801%" y="1125" width="0.2367%" height="15" fill="rgb(215,92,2)" fg:x="17010" fg:w="102"/><text x="39.7301%" y="1135.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (102 samples, 0.24%)</title><rect x="39.4801%" y="1109" width="0.2367%" height="15" fill="rgb(249,143,25)" fg:x="17010" fg:w="102"/><text x="39.7301%" y="1119.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (102 samples, 0.24%)</title><rect x="39.4801%" y="1093" width="0.2367%" height="15" fill="rgb(252,7,35)" fg:x="17010" fg:w="102"/><text x="39.7301%" y="1103.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (60 samples, 0.14%)</title><rect x="39.5776%" y="1077" width="0.1393%" height="15" fill="rgb(216,69,40)" fg:x="17052" fg:w="60"/><text x="39.8276%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (14 samples, 0.03%)</title><rect x="39.6843%" y="1061" width="0.0325%" height="15" fill="rgb(240,36,33)" fg:x="17098" fg:w="14"/><text x="39.9343%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (14 samples, 0.03%)</title><rect x="39.6843%" y="1045" width="0.0325%" height="15" fill="rgb(231,128,14)" fg:x="17098" fg:w="14"/><text x="39.9343%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (14 samples, 0.03%)</title><rect x="39.6843%" y="1029" width="0.0325%" height="15" fill="rgb(245,143,14)" fg:x="17098" fg:w="14"/><text x="39.9343%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (14 samples, 0.03%)</title><rect x="39.6843%" y="1013" width="0.0325%" height="15" fill="rgb(222,130,28)" fg:x="17098" fg:w="14"/><text x="39.9343%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="39.6983%" y="997" width="0.0186%" height="15" fill="rgb(212,10,48)" fg:x="17104" fg:w="8"/><text x="39.9483%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="39.6983%" y="981" width="0.0186%" height="15" fill="rgb(254,118,45)" fg:x="17104" fg:w="8"/><text x="39.9483%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="39.6983%" y="965" width="0.0186%" height="15" fill="rgb(228,6,45)" fg:x="17104" fg:w="8"/><text x="39.9483%" y="975.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="39.7168%" y="1061" width="0.0116%" height="15" fill="rgb(241,18,35)" fg:x="17112" fg:w="5"/><text x="39.9668%" y="1071.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::join_ (5 samples, 0.01%)</title><rect x="39.7284%" y="1045" width="0.0116%" height="15" fill="rgb(227,214,53)" fg:x="17117" fg:w="5"/><text x="39.9784%" y="1055.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (8 samples, 0.02%)</title><rect x="39.7284%" y="1061" width="0.0186%" height="15" fill="rgb(224,107,51)" fg:x="17117" fg:w="8"/><text x="39.9784%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="39.7563%" y="981" width="0.0232%" height="15" fill="rgb(248,60,28)" fg:x="17129" fg:w="10"/><text x="40.0063%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="39.7586%" y="965" width="0.0209%" height="15" fill="rgb(249,101,23)" fg:x="17130" fg:w="9"/><text x="40.0086%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="39.7586%" y="949" width="0.0209%" height="15" fill="rgb(228,51,19)" fg:x="17130" fg:w="9"/><text x="40.0086%" y="959.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="39.7470%" y="1061" width="0.0395%" height="15" fill="rgb(213,20,6)" fg:x="17125" fg:w="17"/><text x="39.9970%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="39.7470%" y="1045" width="0.0395%" height="15" fill="rgb(212,124,10)" fg:x="17125" fg:w="17"/><text x="39.9970%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.03%)</title><rect x="39.7517%" y="1029" width="0.0348%" height="15" fill="rgb(248,3,40)" fg:x="17127" fg:w="15"/><text x="40.0017%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.03%)</title><rect x="39.7517%" y="1013" width="0.0348%" height="15" fill="rgb(223,178,23)" fg:x="17127" fg:w="15"/><text x="40.0017%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.03%)</title><rect x="39.7517%" y="997" width="0.0348%" height="15" fill="rgb(240,132,45)" fg:x="17127" fg:w="15"/><text x="40.0017%" y="1007.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (10 samples, 0.02%)</title><rect x="39.7865%" y="1061" width="0.0232%" height="15" fill="rgb(245,164,36)" fg:x="17142" fg:w="10"/><text x="40.0365%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (10 samples, 0.02%)</title><rect x="39.7865%" y="1045" width="0.0232%" height="15" fill="rgb(231,188,53)" fg:x="17142" fg:w="10"/><text x="40.0365%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.02%)</title><rect x="39.7865%" y="1029" width="0.0232%" height="15" fill="rgb(237,198,39)" fg:x="17142" fg:w="10"/><text x="40.0365%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="39.8329%" y="1061" width="0.0139%" height="15" fill="rgb(223,120,35)" fg:x="17162" fg:w="6"/><text x="40.0829%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="39.8329%" y="1045" width="0.0139%" height="15" fill="rgb(253,107,49)" fg:x="17162" fg:w="6"/><text x="40.0829%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="39.8329%" y="1029" width="0.0139%" height="15" fill="rgb(216,44,31)" fg:x="17162" fg:w="6"/><text x="40.0829%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.01%)</title><rect x="39.8329%" y="1013" width="0.0139%" height="15" fill="rgb(253,87,21)" fg:x="17162" fg:w="6"/><text x="40.0829%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="39.8329%" y="997" width="0.0139%" height="15" fill="rgb(226,18,2)" fg:x="17162" fg:w="6"/><text x="40.0829%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="39.8631%" y="1045" width="0.0348%" height="15" fill="rgb(216,8,46)" fg:x="17175" fg:w="15"/><text x="40.1131%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (12 samples, 0.03%)</title><rect x="39.8700%" y="1029" width="0.0279%" height="15" fill="rgb(226,140,39)" fg:x="17178" fg:w="12"/><text x="40.1200%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="39.8979%" y="1045" width="0.0186%" height="15" fill="rgb(221,194,54)" fg:x="17190" fg:w="8"/><text x="40.1479%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="39.9257%" y="1029" width="0.0116%" height="15" fill="rgb(213,92,11)" fg:x="17202" fg:w="5"/><text x="40.1757%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.02%)</title><rect x="39.9257%" y="1045" width="0.0162%" height="15" fill="rgb(229,162,46)" fg:x="17202" fg:w="7"/><text x="40.1757%" y="1055.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (44 samples, 0.10%)</title><rect x="39.8468%" y="1061" width="0.1021%" height="15" fill="rgb(214,111,36)" fg:x="17168" fg:w="44"/><text x="40.0968%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (6 samples, 0.01%)</title><rect x="39.9489%" y="1061" width="0.0139%" height="15" fill="rgb(207,6,21)" fg:x="17212" fg:w="6"/><text x="40.1989%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (5 samples, 0.01%)</title><rect x="39.9513%" y="1045" width="0.0116%" height="15" fill="rgb(213,127,38)" fg:x="17213" fg:w="5"/><text x="40.2013%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="39.9513%" y="1029" width="0.0116%" height="15" fill="rgb(238,118,32)" fg:x="17213" fg:w="5"/><text x="40.2013%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (16 samples, 0.04%)</title><rect x="39.9629%" y="1045" width="0.0371%" height="15" fill="rgb(240,139,39)" fg:x="17218" fg:w="16"/><text x="40.2129%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (12 samples, 0.03%)</title><rect x="39.9721%" y="1029" width="0.0279%" height="15" fill="rgb(235,10,37)" fg:x="17222" fg:w="12"/><text x="40.2221%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="39.9721%" y="1013" width="0.0279%" height="15" fill="rgb(249,171,38)" fg:x="17222" fg:w="12"/><text x="40.2221%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.02%)</title><rect x="39.9814%" y="997" width="0.0186%" height="15" fill="rgb(242,144,32)" fg:x="17226" fg:w="8"/><text x="40.2314%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState&gt; (23 samples, 0.05%)</title><rect x="39.9629%" y="1061" width="0.0534%" height="15" fill="rgb(217,117,21)" fg:x="17218" fg:w="23"/><text x="40.2129%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (7 samples, 0.02%)</title><rect x="40.0000%" y="1045" width="0.0162%" height="15" fill="rgb(249,87,1)" fg:x="17234" fg:w="7"/><text x="40.2500%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (6 samples, 0.01%)</title><rect x="40.0023%" y="1029" width="0.0139%" height="15" fill="rgb(248,196,48)" fg:x="17235" fg:w="6"/><text x="40.2523%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="40.0023%" y="1013" width="0.0139%" height="15" fill="rgb(251,206,33)" fg:x="17235" fg:w="6"/><text x="40.2523%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="40.0209%" y="949" width="0.0162%" height="15" fill="rgb(232,141,28)" fg:x="17243" fg:w="7"/><text x="40.2709%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="40.0650%" y="933" width="0.0209%" height="15" fill="rgb(209,167,14)" fg:x="17262" fg:w="9"/><text x="40.3150%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.07%)</title><rect x="40.0162%" y="997" width="0.0743%" height="15" fill="rgb(225,11,50)" fg:x="17241" fg:w="32"/><text x="40.2662%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.07%)</title><rect x="40.0162%" y="981" width="0.0743%" height="15" fill="rgb(209,50,20)" fg:x="17241" fg:w="32"/><text x="40.2662%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.07%)</title><rect x="40.0162%" y="965" width="0.0743%" height="15" fill="rgb(212,17,46)" fg:x="17241" fg:w="32"/><text x="40.2662%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.05%)</title><rect x="40.0371%" y="949" width="0.0534%" height="15" fill="rgb(216,101,39)" fg:x="17250" fg:w="23"/><text x="40.2871%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.02%)</title><rect x="40.0905%" y="997" width="0.0232%" height="15" fill="rgb(212,228,48)" fg:x="17273" fg:w="10"/><text x="40.3405%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.02%)</title><rect x="40.0952%" y="981" width="0.0186%" height="15" fill="rgb(250,6,50)" fg:x="17275" fg:w="8"/><text x="40.3452%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (54 samples, 0.13%)</title><rect x="40.0162%" y="1013" width="0.1253%" height="15" fill="rgb(250,160,48)" fg:x="17241" fg:w="54"/><text x="40.2662%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (12 samples, 0.03%)</title><rect x="40.1137%" y="997" width="0.0279%" height="15" fill="rgb(244,216,33)" fg:x="17283" fg:w="12"/><text x="40.3637%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u16 (10 samples, 0.02%)</title><rect x="40.1184%" y="981" width="0.0232%" height="15" fill="rgb(207,157,5)" fg:x="17285" fg:w="10"/><text x="40.3684%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="40.1184%" y="965" width="0.0232%" height="15" fill="rgb(228,199,8)" fg:x="17285" fg:w="10"/><text x="40.3684%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="40.1184%" y="949" width="0.0232%" height="15" fill="rgb(227,80,20)" fg:x="17285" fg:w="10"/><text x="40.3684%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="40.1184%" y="933" width="0.0232%" height="15" fill="rgb(222,9,33)" fg:x="17285" fg:w="10"/><text x="40.3684%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="40.1277%" y="917" width="0.0139%" height="15" fill="rgb(239,44,28)" fg:x="17289" fg:w="6"/><text x="40.3777%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="40.1555%" y="981" width="0.0209%" height="15" fill="rgb(249,187,43)" fg:x="17301" fg:w="9"/><text x="40.4055%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (7 samples, 0.02%)</title><rect x="40.1601%" y="965" width="0.0162%" height="15" fill="rgb(216,141,28)" fg:x="17303" fg:w="7"/><text x="40.4101%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (77 samples, 0.18%)</title><rect x="40.0162%" y="1061" width="0.1787%" height="15" fill="rgb(230,154,53)" fg:x="17241" fg:w="77"/><text x="40.2662%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (77 samples, 0.18%)</title><rect x="40.0162%" y="1045" width="0.1787%" height="15" fill="rgb(227,82,4)" fg:x="17241" fg:w="77"/><text x="40.2662%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (77 samples, 0.18%)</title><rect x="40.0162%" y="1029" width="0.1787%" height="15" fill="rgb(220,107,16)" fg:x="17241" fg:w="77"/><text x="40.2662%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (23 samples, 0.05%)</title><rect x="40.1416%" y="1013" width="0.0534%" height="15" fill="rgb(207,187,2)" fg:x="17295" fg:w="23"/><text x="40.3916%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.04%)</title><rect x="40.1509%" y="997" width="0.0441%" height="15" fill="rgb(210,162,52)" fg:x="17299" fg:w="19"/><text x="40.4009%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.01%)</title><rect x="40.1834%" y="981" width="0.0116%" height="15" fill="rgb(217,216,49)" fg:x="17313" fg:w="5"/><text x="40.4334%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.01%)</title><rect x="40.1834%" y="965" width="0.0116%" height="15" fill="rgb(218,146,49)" fg:x="17313" fg:w="5"/><text x="40.4334%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (6 samples, 0.01%)</title><rect x="40.1996%" y="1029" width="0.0139%" height="15" fill="rgb(216,55,40)" fg:x="17320" fg:w="6"/><text x="40.4496%" y="1039.50"></text></g><g><title>std::collections::hash::map::RandomState::new (6 samples, 0.01%)</title><rect x="40.1996%" y="1013" width="0.0139%" height="15" fill="rgb(208,196,21)" fg:x="17320" fg:w="6"/><text x="40.4496%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="40.1996%" y="997" width="0.0139%" height="15" fill="rgb(242,117,42)" fg:x="17320" fg:w="6"/><text x="40.4496%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="40.2019%" y="981" width="0.0116%" height="15" fill="rgb(210,11,23)" fg:x="17321" fg:w="5"/><text x="40.4519%" y="991.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (215 samples, 0.50%)</title><rect x="39.7168%" y="1077" width="0.4990%" height="15" fill="rgb(217,110,2)" fg:x="17112" fg:w="215"/><text x="39.9668%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (7 samples, 0.02%)</title><rect x="40.1996%" y="1061" width="0.0162%" height="15" fill="rgb(229,77,54)" fg:x="17320" fg:w="7"/><text x="40.4496%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (7 samples, 0.02%)</title><rect x="40.1996%" y="1045" width="0.0162%" height="15" fill="rgb(218,53,16)" fg:x="17320" fg:w="7"/><text x="40.4496%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="40.2159%" y="1045" width="0.0162%" height="15" fill="rgb(215,38,13)" fg:x="17327" fg:w="7"/><text x="40.4659%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="40.2159%" y="1029" width="0.0162%" height="15" fill="rgb(235,42,18)" fg:x="17327" fg:w="7"/><text x="40.4659%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="40.2159%" y="1013" width="0.0162%" height="15" fill="rgb(219,66,54)" fg:x="17327" fg:w="7"/><text x="40.4659%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="40.2182%" y="997" width="0.0139%" height="15" fill="rgb(222,205,4)" fg:x="17328" fg:w="6"/><text x="40.4682%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="40.2182%" y="981" width="0.0139%" height="15" fill="rgb(227,213,46)" fg:x="17328" fg:w="6"/><text x="40.4682%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="40.2182%" y="965" width="0.0139%" height="15" fill="rgb(250,145,42)" fg:x="17328" fg:w="6"/><text x="40.4682%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="40.2182%" y="949" width="0.0139%" height="15" fill="rgb(219,15,2)" fg:x="17328" fg:w="6"/><text x="40.4682%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="40.2205%" y="933" width="0.0116%" height="15" fill="rgb(231,181,52)" fg:x="17329" fg:w="5"/><text x="40.4705%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.03%)</title><rect x="40.2321%" y="933" width="0.0279%" height="15" fill="rgb(235,1,42)" fg:x="17334" fg:w="12"/><text x="40.4821%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.03%)</title><rect x="40.2344%" y="917" width="0.0255%" height="15" fill="rgb(249,88,27)" fg:x="17335" fg:w="11"/><text x="40.4844%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.02%)</title><rect x="40.2600%" y="901" width="0.0209%" height="15" fill="rgb(235,145,16)" fg:x="17346" fg:w="9"/><text x="40.5100%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.01%)</title><rect x="40.2669%" y="885" width="0.0139%" height="15" fill="rgb(237,114,19)" fg:x="17349" fg:w="6"/><text x="40.5169%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="40.2692%" y="869" width="0.0116%" height="15" fill="rgb(238,51,50)" fg:x="17350" fg:w="5"/><text x="40.5192%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="40.2600%" y="933" width="0.0255%" height="15" fill="rgb(205,194,25)" fg:x="17346" fg:w="11"/><text x="40.5100%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.03%)</title><rect x="40.2600%" y="917" width="0.0255%" height="15" fill="rgb(215,203,17)" fg:x="17346" fg:w="11"/><text x="40.5100%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.07%)</title><rect x="40.2321%" y="949" width="0.0673%" height="15" fill="rgb(233,112,49)" fg:x="17334" fg:w="29"/><text x="40.4821%" y="959.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (252 samples, 0.58%)</title><rect x="39.7168%" y="1093" width="0.5849%" height="15" fill="rgb(241,130,26)" fg:x="17112" fg:w="252"/><text x="39.9668%" y="1103.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (37 samples, 0.09%)</title><rect x="40.2159%" y="1077" width="0.0859%" height="15" fill="rgb(252,223,19)" fg:x="17327" fg:w="37"/><text x="40.4659%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (37 samples, 0.09%)</title><rect x="40.2159%" y="1061" width="0.0859%" height="15" fill="rgb(211,95,25)" fg:x="17327" fg:w="37"/><text x="40.4659%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (30 samples, 0.07%)</title><rect x="40.2321%" y="1045" width="0.0696%" height="15" fill="rgb(251,182,27)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="1055.50"></text></g><g><title>core::iter::adapters::process_results (30 samples, 0.07%)</title><rect x="40.2321%" y="1029" width="0.0696%" height="15" fill="rgb(238,24,4)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (30 samples, 0.07%)</title><rect x="40.2321%" y="1013" width="0.0696%" height="15" fill="rgb(224,220,25)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.07%)</title><rect x="40.2321%" y="997" width="0.0696%" height="15" fill="rgb(239,133,26)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 0.07%)</title><rect x="40.2321%" y="981" width="0.0696%" height="15" fill="rgb(211,94,48)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.07%)</title><rect x="40.2321%" y="965" width="0.0696%" height="15" fill="rgb(239,87,6)" fg:x="17334" fg:w="30"/><text x="40.4821%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (9 samples, 0.02%)</title><rect x="40.3273%" y="1029" width="0.0209%" height="15" fill="rgb(227,62,0)" fg:x="17375" fg:w="9"/><text x="40.5773%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (9 samples, 0.02%)</title><rect x="40.3273%" y="1013" width="0.0209%" height="15" fill="rgb(211,226,4)" fg:x="17375" fg:w="9"/><text x="40.5773%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="40.3273%" y="997" width="0.0209%" height="15" fill="rgb(253,38,52)" fg:x="17375" fg:w="9"/><text x="40.5773%" y="1007.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (22 samples, 0.05%)</title><rect x="40.3087%" y="1045" width="0.0511%" height="15" fill="rgb(229,126,40)" fg:x="17367" fg:w="22"/><text x="40.5587%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="40.3806%" y="965" width="0.0116%" height="15" fill="rgb(229,165,44)" fg:x="17398" fg:w="5"/><text x="40.6306%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (15 samples, 0.03%)</title><rect x="40.3598%" y="1045" width="0.0348%" height="15" fill="rgb(247,95,47)" fg:x="17389" fg:w="15"/><text x="40.6098%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.03%)</title><rect x="40.3598%" y="1029" width="0.0348%" height="15" fill="rgb(216,140,30)" fg:x="17389" fg:w="15"/><text x="40.6098%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.02%)</title><rect x="40.3714%" y="1013" width="0.0232%" height="15" fill="rgb(246,214,8)" fg:x="17394" fg:w="10"/><text x="40.6214%" y="1023.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join::_{{closure}} (10 samples, 0.02%)</title><rect x="40.3714%" y="997" width="0.0232%" height="15" fill="rgb(227,224,15)" fg:x="17394" fg:w="10"/><text x="40.6214%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (9 samples, 0.02%)</title><rect x="40.3737%" y="981" width="0.0209%" height="15" fill="rgb(233,175,4)" fg:x="17395" fg:w="9"/><text x="40.6237%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (5 samples, 0.01%)</title><rect x="40.3946%" y="1029" width="0.0116%" height="15" fill="rgb(221,66,45)" fg:x="17404" fg:w="5"/><text x="40.6446%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="40.3946%" y="1013" width="0.0116%" height="15" fill="rgb(221,178,18)" fg:x="17404" fg:w="5"/><text x="40.6446%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (5 samples, 0.01%)</title><rect x="40.3946%" y="997" width="0.0116%" height="15" fill="rgb(213,81,29)" fg:x="17404" fg:w="5"/><text x="40.6446%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="40.3946%" y="981" width="0.0116%" height="15" fill="rgb(220,89,49)" fg:x="17404" fg:w="5"/><text x="40.6446%" y="991.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (48 samples, 0.11%)</title><rect x="40.3017%" y="1061" width="0.1114%" height="15" fill="rgb(227,60,33)" fg:x="17364" fg:w="48"/><text x="40.5517%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (8 samples, 0.02%)</title><rect x="40.3946%" y="1045" width="0.0186%" height="15" fill="rgb(205,113,12)" fg:x="17404" fg:w="8"/><text x="40.6446%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (9 samples, 0.02%)</title><rect x="40.4131%" y="1013" width="0.0209%" height="15" fill="rgb(211,32,1)" fg:x="17412" fg:w="9"/><text x="40.6631%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="40.4155%" y="997" width="0.0186%" height="15" fill="rgb(246,2,12)" fg:x="17413" fg:w="8"/><text x="40.6655%" y="1007.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="40.4155%" y="981" width="0.0186%" height="15" fill="rgb(243,37,27)" fg:x="17413" fg:w="8"/><text x="40.6655%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="40.4804%" y="965" width="0.0186%" height="15" fill="rgb(248,211,31)" fg:x="17441" fg:w="8"/><text x="40.7304%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (8 samples, 0.02%)</title><rect x="40.5060%" y="965" width="0.0186%" height="15" fill="rgb(242,146,47)" fg:x="17452" fg:w="8"/><text x="40.7560%" y="975.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (63 samples, 0.15%)</title><rect x="40.4131%" y="1061" width="0.1462%" height="15" fill="rgb(206,70,20)" fg:x="17412" fg:w="63"/><text x="40.6631%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (63 samples, 0.15%)</title><rect x="40.4131%" y="1045" width="0.1462%" height="15" fill="rgb(215,10,51)" fg:x="17412" fg:w="63"/><text x="40.6631%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (63 samples, 0.15%)</title><rect x="40.4131%" y="1029" width="0.1462%" height="15" fill="rgb(243,178,53)" fg:x="17412" fg:w="63"/><text x="40.6631%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (54 samples, 0.13%)</title><rect x="40.4340%" y="1013" width="0.1253%" height="15" fill="rgb(233,221,20)" fg:x="17421" fg:w="54"/><text x="40.6840%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (50 samples, 0.12%)</title><rect x="40.4433%" y="997" width="0.1160%" height="15" fill="rgb(218,95,35)" fg:x="17425" fg:w="50"/><text x="40.6933%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (48 samples, 0.11%)</title><rect x="40.4480%" y="981" width="0.1114%" height="15" fill="rgb(229,13,5)" fg:x="17427" fg:w="48"/><text x="40.6980%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.03%)</title><rect x="40.5338%" y="965" width="0.0255%" height="15" fill="rgb(252,164,30)" fg:x="17464" fg:w="11"/><text x="40.7838%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="40.5431%" y="949" width="0.0162%" height="15" fill="rgb(232,68,36)" fg:x="17468" fg:w="7"/><text x="40.7931%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.03%)</title><rect x="40.5594%" y="1061" width="0.0302%" height="15" fill="rgb(219,59,54)" fg:x="17475" fg:w="13"/><text x="40.8094%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.03%)</title><rect x="40.5594%" y="1045" width="0.0302%" height="15" fill="rgb(250,92,33)" fg:x="17475" fg:w="13"/><text x="40.8094%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.03%)</title><rect x="40.5594%" y="1029" width="0.0302%" height="15" fill="rgb(229,162,54)" fg:x="17475" fg:w="13"/><text x="40.8094%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (13 samples, 0.03%)</title><rect x="40.5594%" y="1013" width="0.0302%" height="15" fill="rgb(244,114,52)" fg:x="17475" fg:w="13"/><text x="40.8094%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.03%)</title><rect x="40.5594%" y="997" width="0.0302%" height="15" fill="rgb(212,211,43)" fg:x="17475" fg:w="13"/><text x="40.8094%" y="1007.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="40.7056%" y="997" width="0.0139%" height="15" fill="rgb(226,147,8)" fg:x="17538" fg:w="6"/><text x="40.9556%" y="1007.50"></text></g><g><title>core::mem::replace (12 samples, 0.03%)</title><rect x="40.6986%" y="1013" width="0.0279%" height="15" fill="rgb(226,23,13)" fg:x="17535" fg:w="12"/><text x="40.9486%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.09%)</title><rect x="40.6592%" y="1045" width="0.0882%" height="15" fill="rgb(240,63,4)" fg:x="17518" fg:w="38"/><text x="40.9092%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (35 samples, 0.08%)</title><rect x="40.6661%" y="1029" width="0.0812%" height="15" fill="rgb(221,1,32)" fg:x="17521" fg:w="35"/><text x="40.9161%" y="1039.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (9 samples, 0.02%)</title><rect x="40.7265%" y="1013" width="0.0209%" height="15" fill="rgb(242,117,10)" fg:x="17547" fg:w="9"/><text x="40.9765%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (10 samples, 0.02%)</title><rect x="40.7566%" y="1013" width="0.0232%" height="15" fill="rgb(249,172,44)" fg:x="17560" fg:w="10"/><text x="41.0066%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="40.7659%" y="997" width="0.0139%" height="15" fill="rgb(244,46,45)" fg:x="17564" fg:w="6"/><text x="41.0159%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.03%)</title><rect x="40.7566%" y="1029" width="0.0279%" height="15" fill="rgb(206,43,17)" fg:x="17560" fg:w="12"/><text x="41.0066%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (23 samples, 0.05%)</title><rect x="40.7474%" y="1045" width="0.0534%" height="15" fill="rgb(239,218,39)" fg:x="17556" fg:w="23"/><text x="40.9974%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.02%)</title><rect x="40.7845%" y="1029" width="0.0162%" height="15" fill="rgb(208,169,54)" fg:x="17572" fg:w="7"/><text x="41.0345%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="40.8100%" y="1029" width="0.0139%" height="15" fill="rgb(247,25,42)" fg:x="17583" fg:w="6"/><text x="41.0600%" y="1039.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="40.8007%" y="1045" width="0.0279%" height="15" fill="rgb(226,23,31)" fg:x="17579" fg:w="12"/><text x="41.0507%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (11 samples, 0.03%)</title><rect x="40.8286%" y="1045" width="0.0255%" height="15" fill="rgb(247,16,28)" fg:x="17591" fg:w="11"/><text x="41.0786%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="40.8356%" y="1029" width="0.0186%" height="15" fill="rgb(231,147,38)" fg:x="17594" fg:w="8"/><text x="41.0856%" y="1039.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (12 samples, 0.03%)</title><rect x="40.8541%" y="1045" width="0.0279%" height="15" fill="rgb(253,81,48)" fg:x="17602" fg:w="12"/><text x="41.1041%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (10 samples, 0.02%)</title><rect x="40.8588%" y="1029" width="0.0232%" height="15" fill="rgb(249,222,43)" fg:x="17604" fg:w="10"/><text x="41.1088%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (8 samples, 0.02%)</title><rect x="40.8634%" y="1013" width="0.0186%" height="15" fill="rgb(221,3,27)" fg:x="17606" fg:w="8"/><text x="41.1134%" y="1023.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (13 samples, 0.03%)</title><rect x="40.8820%" y="1045" width="0.0302%" height="15" fill="rgb(228,180,5)" fg:x="17614" fg:w="13"/><text x="41.1320%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (10 samples, 0.02%)</title><rect x="40.9191%" y="1045" width="0.0232%" height="15" fill="rgb(227,131,42)" fg:x="17630" fg:w="10"/><text x="41.1691%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.01%)</title><rect x="40.9307%" y="1029" width="0.0116%" height="15" fill="rgb(212,3,39)" fg:x="17635" fg:w="5"/><text x="41.1807%" y="1039.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (155 samples, 0.36%)</title><rect x="40.5895%" y="1061" width="0.3598%" height="15" fill="rgb(226,45,5)" fg:x="17488" fg:w="155"/><text x="40.8395%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (6 samples, 0.01%)</title><rect x="40.9632%" y="933" width="0.0139%" height="15" fill="rgb(215,167,45)" fg:x="17649" fg:w="6"/><text x="41.2132%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (14 samples, 0.03%)</title><rect x="40.9539%" y="965" width="0.0325%" height="15" fill="rgb(250,218,53)" fg:x="17645" fg:w="14"/><text x="41.2039%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (13 samples, 0.03%)</title><rect x="40.9562%" y="949" width="0.0302%" height="15" fill="rgb(207,140,0)" fg:x="17646" fg:w="13"/><text x="41.2062%" y="959.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="41.0027%" y="933" width="0.0116%" height="15" fill="rgb(238,133,51)" fg:x="17666" fg:w="5"/><text x="41.2527%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (13 samples, 0.03%)</title><rect x="40.9864%" y="965" width="0.0302%" height="15" fill="rgb(218,203,53)" fg:x="17659" fg:w="13"/><text x="41.2364%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.03%)</title><rect x="40.9864%" y="949" width="0.0302%" height="15" fill="rgb(226,184,25)" fg:x="17659" fg:w="13"/><text x="41.2364%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (32 samples, 0.07%)</title><rect x="40.9493%" y="1045" width="0.0743%" height="15" fill="rgb(231,121,21)" fg:x="17643" fg:w="32"/><text x="41.1993%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.07%)</title><rect x="40.9493%" y="1029" width="0.0743%" height="15" fill="rgb(251,14,34)" fg:x="17643" fg:w="32"/><text x="41.1993%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (30 samples, 0.07%)</title><rect x="40.9539%" y="1013" width="0.0696%" height="15" fill="rgb(249,193,11)" fg:x="17645" fg:w="30"/><text x="41.2039%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.07%)</title><rect x="40.9539%" y="997" width="0.0696%" height="15" fill="rgb(220,172,37)" fg:x="17645" fg:w="30"/><text x="41.2039%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (30 samples, 0.07%)</title><rect x="40.9539%" y="981" width="0.0696%" height="15" fill="rgb(231,229,43)" fg:x="17645" fg:w="30"/><text x="41.2039%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (7 samples, 0.02%)</title><rect x="41.0398%" y="917" width="0.0162%" height="15" fill="rgb(250,161,5)" fg:x="17682" fg:w="7"/><text x="41.2898%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (16 samples, 0.04%)</title><rect x="41.0305%" y="949" width="0.0371%" height="15" fill="rgb(218,225,18)" fg:x="17678" fg:w="16"/><text x="41.2805%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (14 samples, 0.03%)</title><rect x="41.0352%" y="933" width="0.0325%" height="15" fill="rgb(245,45,42)" fg:x="17680" fg:w="14"/><text x="41.2852%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (7 samples, 0.02%)</title><rect x="41.0677%" y="949" width="0.0162%" height="15" fill="rgb(211,115,1)" fg:x="17694" fg:w="7"/><text x="41.3177%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="41.0677%" y="933" width="0.0162%" height="15" fill="rgb(248,133,52)" fg:x="17694" fg:w="7"/><text x="41.3177%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (26 samples, 0.06%)</title><rect x="41.0282%" y="965" width="0.0603%" height="15" fill="rgb(238,100,21)" fg:x="17677" fg:w="26"/><text x="41.2782%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="41.0978%" y="869" width="0.0116%" height="15" fill="rgb(247,144,11)" fg:x="17707" fg:w="5"/><text x="41.3478%" y="879.50"></text></g><g><title>core::mem::take (5 samples, 0.01%)</title><rect x="41.0978%" y="853" width="0.0116%" height="15" fill="rgb(206,164,16)" fg:x="17707" fg:w="5"/><text x="41.3478%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (70 samples, 0.16%)</title><rect x="40.9493%" y="1061" width="0.1625%" height="15" fill="rgb(222,34,3)" fg:x="17643" fg:w="70"/><text x="41.1993%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (38 samples, 0.09%)</title><rect x="41.0236%" y="1045" width="0.0882%" height="15" fill="rgb(248,82,4)" fg:x="17675" fg:w="38"/><text x="41.2736%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (38 samples, 0.09%)</title><rect x="41.0236%" y="1029" width="0.0882%" height="15" fill="rgb(228,81,46)" fg:x="17675" fg:w="38"/><text x="41.2736%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.09%)</title><rect x="41.0236%" y="1013" width="0.0882%" height="15" fill="rgb(227,67,47)" fg:x="17675" fg:w="38"/><text x="41.2736%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (36 samples, 0.08%)</title><rect x="41.0282%" y="997" width="0.0836%" height="15" fill="rgb(215,93,53)" fg:x="17677" fg:w="36"/><text x="41.2782%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.08%)</title><rect x="41.0282%" y="981" width="0.0836%" height="15" fill="rgb(248,194,39)" fg:x="17677" fg:w="36"/><text x="41.2782%" y="991.50"></text></g><g><title>core::mem::drop (10 samples, 0.02%)</title><rect x="41.0885%" y="965" width="0.0232%" height="15" fill="rgb(215,5,19)" fg:x="17703" fg:w="10"/><text x="41.3385%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (10 samples, 0.02%)</title><rect x="41.0885%" y="949" width="0.0232%" height="15" fill="rgb(226,215,51)" fg:x="17703" fg:w="10"/><text x="41.3385%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (10 samples, 0.02%)</title><rect x="41.0885%" y="933" width="0.0232%" height="15" fill="rgb(225,56,26)" fg:x="17703" fg:w="10"/><text x="41.3385%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (6 samples, 0.01%)</title><rect x="41.0978%" y="917" width="0.0139%" height="15" fill="rgb(222,75,29)" fg:x="17707" fg:w="6"/><text x="41.3478%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="41.0978%" y="901" width="0.0139%" height="15" fill="rgb(236,139,6)" fg:x="17707" fg:w="6"/><text x="41.3478%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="41.0978%" y="885" width="0.0139%" height="15" fill="rgb(223,137,36)" fg:x="17707" fg:w="6"/><text x="41.3478%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.03%)</title><rect x="41.1118%" y="949" width="0.0302%" height="15" fill="rgb(226,99,2)" fg:x="17713" fg:w="13"/><text x="41.3618%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="41.1651%" y="933" width="0.0186%" height="15" fill="rgb(206,133,23)" fg:x="17736" fg:w="8"/><text x="41.4151%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.08%)</title><rect x="41.1118%" y="997" width="0.0766%" height="15" fill="rgb(243,173,15)" fg:x="17713" fg:w="33"/><text x="41.3618%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.08%)</title><rect x="41.1118%" y="981" width="0.0766%" height="15" fill="rgb(228,69,28)" fg:x="17713" fg:w="33"/><text x="41.3618%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.08%)</title><rect x="41.1118%" y="965" width="0.0766%" height="15" fill="rgb(212,51,22)" fg:x="17713" fg:w="33"/><text x="41.3618%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.05%)</title><rect x="41.1419%" y="949" width="0.0464%" height="15" fill="rgb(227,113,0)" fg:x="17726" fg:w="20"/><text x="41.3919%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (51 samples, 0.12%)</title><rect x="41.1118%" y="1013" width="0.1184%" height="15" fill="rgb(252,84,27)" fg:x="17713" fg:w="51"/><text x="41.3618%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (16 samples, 0.04%)</title><rect x="41.1930%" y="997" width="0.0371%" height="15" fill="rgb(223,145,39)" fg:x="17748" fg:w="16"/><text x="41.4430%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u16 (16 samples, 0.04%)</title><rect x="41.1930%" y="981" width="0.0371%" height="15" fill="rgb(239,219,30)" fg:x="17748" fg:w="16"/><text x="41.4430%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="41.1930%" y="965" width="0.0371%" height="15" fill="rgb(224,196,39)" fg:x="17748" fg:w="16"/><text x="41.4430%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="41.1930%" y="949" width="0.0371%" height="15" fill="rgb(205,35,43)" fg:x="17748" fg:w="16"/><text x="41.4430%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="41.1930%" y="933" width="0.0371%" height="15" fill="rgb(228,201,21)" fg:x="17748" fg:w="16"/><text x="41.4430%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="41.2046%" y="917" width="0.0255%" height="15" fill="rgb(237,118,16)" fg:x="17753" fg:w="11"/><text x="41.4546%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="41.2626%" y="949" width="0.0139%" height="15" fill="rgb(241,17,19)" fg:x="17778" fg:w="6"/><text x="41.5126%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="41.2557%" y="965" width="0.0255%" height="15" fill="rgb(214,10,25)" fg:x="17775" fg:w="11"/><text x="41.5057%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="41.2464%" y="981" width="0.0441%" height="15" fill="rgb(238,37,29)" fg:x="17771" fg:w="19"/><text x="41.4964%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.02%)</title><rect x="41.3299%" y="933" width="0.0186%" height="15" fill="rgb(253,83,25)" fg:x="17807" fg:w="8"/><text x="41.5799%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (23 samples, 0.05%)</title><rect x="41.3090%" y="949" width="0.0534%" height="15" fill="rgb(234,192,12)" fg:x="17798" fg:w="23"/><text x="41.5590%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="41.3485%" y="933" width="0.0139%" height="15" fill="rgb(241,216,45)" fg:x="17815" fg:w="6"/><text x="41.5985%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.01%)</title><rect x="41.3508%" y="917" width="0.0116%" height="15" fill="rgb(242,22,33)" fg:x="17816" fg:w="5"/><text x="41.6008%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (109 samples, 0.25%)</title><rect x="41.1118%" y="1061" width="0.2530%" height="15" fill="rgb(231,105,49)" fg:x="17713" fg:w="109"/><text x="41.3618%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (109 samples, 0.25%)</title><rect x="41.1118%" y="1045" width="0.2530%" height="15" fill="rgb(218,204,15)" fg:x="17713" fg:w="109"/><text x="41.3618%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (109 samples, 0.25%)</title><rect x="41.1118%" y="1029" width="0.2530%" height="15" fill="rgb(235,138,41)" fg:x="17713" fg:w="109"/><text x="41.3618%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (58 samples, 0.13%)</title><rect x="41.2301%" y="1013" width="0.1346%" height="15" fill="rgb(246,0,9)" fg:x="17764" fg:w="58"/><text x="41.4801%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.13%)</title><rect x="41.2324%" y="997" width="0.1323%" height="15" fill="rgb(210,74,4)" fg:x="17765" fg:w="57"/><text x="41.4824%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (27 samples, 0.06%)</title><rect x="41.3021%" y="981" width="0.0627%" height="15" fill="rgb(250,60,41)" fg:x="17795" fg:w="27"/><text x="41.5521%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (27 samples, 0.06%)</title><rect x="41.3021%" y="965" width="0.0627%" height="15" fill="rgb(220,115,12)" fg:x="17795" fg:w="27"/><text x="41.5521%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.01%)</title><rect x="41.3647%" y="1061" width="0.0139%" height="15" fill="rgb(237,100,13)" fg:x="17822" fg:w="6"/><text x="41.6147%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="41.3647%" y="1045" width="0.0139%" height="15" fill="rgb(213,55,26)" fg:x="17822" fg:w="6"/><text x="41.6147%" y="1055.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (467 samples, 1.08%)</title><rect x="40.3017%" y="1077" width="1.0839%" height="15" fill="rgb(216,17,4)" fg:x="17364" fg:w="467"/><text x="40.5517%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.03%)</title><rect x="41.3856%" y="1061" width="0.0348%" height="15" fill="rgb(220,153,47)" fg:x="17831" fg:w="15"/><text x="41.6356%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (15 samples, 0.03%)</title><rect x="41.3856%" y="1045" width="0.0348%" height="15" fill="rgb(215,131,9)" fg:x="17831" fg:w="15"/><text x="41.6356%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.03%)</title><rect x="41.3856%" y="1029" width="0.0348%" height="15" fill="rgb(233,46,42)" fg:x="17831" fg:w="15"/><text x="41.6356%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (15 samples, 0.03%)</title><rect x="41.3856%" y="1013" width="0.0348%" height="15" fill="rgb(226,86,7)" fg:x="17831" fg:w="15"/><text x="41.6356%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.02%)</title><rect x="41.3972%" y="997" width="0.0232%" height="15" fill="rgb(239,226,21)" fg:x="17836" fg:w="10"/><text x="41.6472%" y="1007.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (21 samples, 0.05%)</title><rect x="41.3856%" y="1077" width="0.0487%" height="15" fill="rgb(244,137,22)" fg:x="17831" fg:w="21"/><text x="41.6356%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (6 samples, 0.01%)</title><rect x="41.4204%" y="1061" width="0.0139%" height="15" fill="rgb(211,139,35)" fg:x="17846" fg:w="6"/><text x="41.6704%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (6 samples, 0.01%)</title><rect x="41.4204%" y="1045" width="0.0139%" height="15" fill="rgb(214,62,50)" fg:x="17846" fg:w="6"/><text x="41.6704%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (6 samples, 0.01%)</title><rect x="41.4204%" y="1029" width="0.0139%" height="15" fill="rgb(212,113,44)" fg:x="17846" fg:w="6"/><text x="41.6704%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="41.4228%" y="1013" width="0.0116%" height="15" fill="rgb(226,150,43)" fg:x="17847" fg:w="5"/><text x="41.6728%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="41.4228%" y="997" width="0.0116%" height="15" fill="rgb(250,71,37)" fg:x="17847" fg:w="5"/><text x="41.6728%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="41.4228%" y="981" width="0.0116%" height="15" fill="rgb(219,76,19)" fg:x="17847" fg:w="5"/><text x="41.6728%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="41.4228%" y="965" width="0.0116%" height="15" fill="rgb(250,39,11)" fg:x="17847" fg:w="5"/><text x="41.6728%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="41.4228%" y="949" width="0.0116%" height="15" fill="rgb(230,64,31)" fg:x="17847" fg:w="5"/><text x="41.6728%" y="959.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (741 samples, 1.72%)</title><rect x="39.7168%" y="1141" width="1.7199%" height="15" fill="rgb(208,222,23)" fg:x="17112" fg:w="741"/><text x="39.9668%" y="1151.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (741 samples, 1.72%)</title><rect x="39.7168%" y="1125" width="1.7199%" height="15" fill="rgb(227,125,18)" fg:x="17112" fg:w="741"/><text x="39.9668%" y="1135.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (741 samples, 1.72%)</title><rect x="39.7168%" y="1109" width="1.7199%" height="15" fill="rgb(234,210,9)" fg:x="17112" fg:w="741"/><text x="39.9668%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (489 samples, 1.13%)</title><rect x="40.3017%" y="1093" width="1.1350%" height="15" fill="rgb(217,127,24)" fg:x="17364" fg:w="489"/><text x="40.5517%" y="1103.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (6 samples, 0.01%)</title><rect x="41.4947%" y="965" width="0.0139%" height="15" fill="rgb(239,141,48)" fg:x="17878" fg:w="6"/><text x="41.7447%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (10 samples, 0.02%)</title><rect x="41.4878%" y="1029" width="0.0232%" height="15" fill="rgb(227,109,8)" fg:x="17875" fg:w="10"/><text x="41.7378%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.02%)</title><rect x="41.4878%" y="1013" width="0.0232%" height="15" fill="rgb(235,184,23)" fg:x="17875" fg:w="10"/><text x="41.7378%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.02%)</title><rect x="41.4878%" y="997" width="0.0232%" height="15" fill="rgb(227,226,48)" fg:x="17875" fg:w="10"/><text x="41.7378%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.02%)</title><rect x="41.4878%" y="981" width="0.0232%" height="15" fill="rgb(206,150,11)" fg:x="17875" fg:w="10"/><text x="41.7378%" y="991.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (11 samples, 0.03%)</title><rect x="41.4878%" y="1061" width="0.0255%" height="15" fill="rgb(254,2,33)" fg:x="17875" fg:w="11"/><text x="41.7378%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (11 samples, 0.03%)</title><rect x="41.4878%" y="1045" width="0.0255%" height="15" fill="rgb(243,160,20)" fg:x="17875" fg:w="11"/><text x="41.7378%" y="1055.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (12 samples, 0.03%)</title><rect x="41.4878%" y="1077" width="0.0279%" height="15" fill="rgb(218,208,30)" fg:x="17875" fg:w="12"/><text x="41.7378%" y="1087.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (16 samples, 0.04%)</title><rect x="41.4854%" y="1141" width="0.0371%" height="15" fill="rgb(224,120,49)" fg:x="17874" fg:w="16"/><text x="41.7354%" y="1151.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (16 samples, 0.04%)</title><rect x="41.4854%" y="1125" width="0.0371%" height="15" fill="rgb(246,12,2)" fg:x="17874" fg:w="16"/><text x="41.7354%" y="1135.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (16 samples, 0.04%)</title><rect x="41.4854%" y="1109" width="0.0371%" height="15" fill="rgb(236,117,3)" fg:x="17874" fg:w="16"/><text x="41.7354%" y="1119.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (16 samples, 0.04%)</title><rect x="41.4854%" y="1093" width="0.0371%" height="15" fill="rgb(216,128,52)" fg:x="17874" fg:w="16"/><text x="41.7354%" y="1103.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (5 samples, 0.01%)</title><rect x="41.5319%" y="949" width="0.0116%" height="15" fill="rgb(246,145,19)" fg:x="17894" fg:w="5"/><text x="41.7819%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (5 samples, 0.01%)</title><rect x="41.5319%" y="933" width="0.0116%" height="15" fill="rgb(222,11,46)" fg:x="17894" fg:w="5"/><text x="41.7819%" y="943.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (7 samples, 0.02%)</title><rect x="41.5319%" y="965" width="0.0162%" height="15" fill="rgb(245,82,36)" fg:x="17894" fg:w="7"/><text x="41.7819%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (13 samples, 0.03%)</title><rect x="41.5249%" y="1061" width="0.0302%" height="15" fill="rgb(250,73,51)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.03%)</title><rect x="41.5249%" y="1045" width="0.0302%" height="15" fill="rgb(221,189,23)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (13 samples, 0.03%)</title><rect x="41.5249%" y="1029" width="0.0302%" height="15" fill="rgb(210,33,7)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.03%)</title><rect x="41.5249%" y="1013" width="0.0302%" height="15" fill="rgb(210,107,22)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.03%)</title><rect x="41.5249%" y="997" width="0.0302%" height="15" fill="rgb(222,116,37)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="41.5249%" y="981" width="0.0302%" height="15" fill="rgb(254,17,48)" fg:x="17891" fg:w="13"/><text x="41.7749%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="41.5574%" y="933" width="0.0116%" height="15" fill="rgb(224,36,32)" fg:x="17905" fg:w="5"/><text x="41.8074%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.01%)</title><rect x="41.5574%" y="917" width="0.0116%" height="15" fill="rgb(232,90,46)" fg:x="17905" fg:w="5"/><text x="41.8074%" y="927.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (21 samples, 0.05%)</title><rect x="41.5226%" y="1141" width="0.0487%" height="15" fill="rgb(241,66,40)" fg:x="17890" fg:w="21"/><text x="41.7726%" y="1151.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (21 samples, 0.05%)</title><rect x="41.5226%" y="1125" width="0.0487%" height="15" fill="rgb(249,184,29)" fg:x="17890" fg:w="21"/><text x="41.7726%" y="1135.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (21 samples, 0.05%)</title><rect x="41.5226%" y="1109" width="0.0487%" height="15" fill="rgb(231,181,1)" fg:x="17890" fg:w="21"/><text x="41.7726%" y="1119.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (21 samples, 0.05%)</title><rect x="41.5226%" y="1093" width="0.0487%" height="15" fill="rgb(224,94,2)" fg:x="17890" fg:w="21"/><text x="41.7726%" y="1103.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.05%)</title><rect x="41.5249%" y="1077" width="0.0464%" height="15" fill="rgb(229,170,15)" fg:x="17891" fg:w="20"/><text x="41.7749%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (6 samples, 0.01%)</title><rect x="41.5574%" y="1061" width="0.0139%" height="15" fill="rgb(240,127,35)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="41.5574%" y="1045" width="0.0139%" height="15" fill="rgb(248,196,34)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="41.5574%" y="1029" width="0.0139%" height="15" fill="rgb(236,137,7)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (6 samples, 0.01%)</title><rect x="41.5574%" y="1013" width="0.0139%" height="15" fill="rgb(235,127,16)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="41.5574%" y="997" width="0.0139%" height="15" fill="rgb(250,192,54)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="41.5574%" y="981" width="0.0139%" height="15" fill="rgb(218,98,20)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="41.5574%" y="965" width="0.0139%" height="15" fill="rgb(230,176,47)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="41.5574%" y="949" width="0.0139%" height="15" fill="rgb(244,2,33)" fg:x="17905" fg:w="6"/><text x="41.8074%" y="959.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module (5 samples, 0.01%)</title><rect x="41.5713%" y="1141" width="0.0116%" height="15" fill="rgb(231,100,17)" fg:x="17911" fg:w="5"/><text x="41.8213%" y="1151.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (5 samples, 0.01%)</title><rect x="41.5713%" y="1125" width="0.0116%" height="15" fill="rgb(245,23,12)" fg:x="17911" fg:w="5"/><text x="41.8213%" y="1135.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (5 samples, 0.01%)</title><rect x="41.5713%" y="1109" width="0.0116%" height="15" fill="rgb(249,55,22)" fg:x="17911" fg:w="5"/><text x="41.8213%" y="1119.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (5 samples, 0.01%)</title><rect x="41.5713%" y="1093" width="0.0116%" height="15" fill="rgb(207,134,9)" fg:x="17911" fg:w="5"/><text x="41.8213%" y="1103.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (5 samples, 0.01%)</title><rect x="41.5713%" y="1077" width="0.0116%" height="15" fill="rgb(218,134,0)" fg:x="17911" fg:w="5"/><text x="41.8213%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="41.6038%" y="965" width="0.0209%" height="15" fill="rgb(213,212,33)" fg:x="17925" fg:w="9"/><text x="41.8538%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="41.6131%" y="949" width="0.0116%" height="15" fill="rgb(252,106,18)" fg:x="17929" fg:w="5"/><text x="41.8631%" y="959.50"></text></g><g><title>core::cmp::min (5 samples, 0.01%)</title><rect x="41.6549%" y="869" width="0.0116%" height="15" fill="rgb(208,126,42)" fg:x="17947" fg:w="5"/><text x="41.9049%" y="879.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (18 samples, 0.04%)</title><rect x="41.6270%" y="949" width="0.0418%" height="15" fill="rgb(246,175,29)" fg:x="17935" fg:w="18"/><text x="41.8770%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (17 samples, 0.04%)</title><rect x="41.6293%" y="933" width="0.0395%" height="15" fill="rgb(215,13,50)" fg:x="17936" fg:w="17"/><text x="41.8793%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (13 samples, 0.03%)</title><rect x="41.6386%" y="917" width="0.0302%" height="15" fill="rgb(216,172,15)" fg:x="17940" fg:w="13"/><text x="41.8886%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.03%)</title><rect x="41.6433%" y="901" width="0.0255%" height="15" fill="rgb(212,103,13)" fg:x="17942" fg:w="11"/><text x="41.8933%" y="911.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.03%)</title><rect x="41.6433%" y="885" width="0.0255%" height="15" fill="rgb(231,171,36)" fg:x="17942" fg:w="11"/><text x="41.8933%" y="895.50"></text></g><g><title>core::cmp::min (8 samples, 0.02%)</title><rect x="41.6874%" y="869" width="0.0186%" height="15" fill="rgb(250,123,20)" fg:x="17961" fg:w="8"/><text x="41.9374%" y="879.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="41.6943%" y="853" width="0.0116%" height="15" fill="rgb(212,53,50)" fg:x="17964" fg:w="5"/><text x="41.9443%" y="863.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="41.6943%" y="837" width="0.0116%" height="15" fill="rgb(243,54,12)" fg:x="17964" fg:w="5"/><text x="41.9443%" y="847.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (36 samples, 0.08%)</title><rect x="41.6247%" y="965" width="0.0836%" height="15" fill="rgb(234,101,34)" fg:x="17934" fg:w="36"/><text x="41.8747%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (17 samples, 0.04%)</title><rect x="41.6688%" y="949" width="0.0395%" height="15" fill="rgb(254,67,22)" fg:x="17953" fg:w="17"/><text x="41.9188%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (14 samples, 0.03%)</title><rect x="41.6758%" y="933" width="0.0325%" height="15" fill="rgb(250,35,47)" fg:x="17956" fg:w="14"/><text x="41.9258%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (13 samples, 0.03%)</title><rect x="41.6781%" y="917" width="0.0302%" height="15" fill="rgb(226,126,38)" fg:x="17957" fg:w="13"/><text x="41.9281%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.03%)</title><rect x="41.6827%" y="901" width="0.0255%" height="15" fill="rgb(216,138,53)" fg:x="17959" fg:w="11"/><text x="41.9327%" y="911.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.03%)</title><rect x="41.6827%" y="885" width="0.0255%" height="15" fill="rgb(246,199,43)" fg:x="17959" fg:w="11"/><text x="41.9327%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="41.7106%" y="965" width="0.0162%" height="15" fill="rgb(232,125,11)" fg:x="17971" fg:w="7"/><text x="41.9606%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (62 samples, 0.14%)</title><rect x="41.5922%" y="1013" width="0.1439%" height="15" fill="rgb(218,219,45)" fg:x="17920" fg:w="62"/><text x="41.8422%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (59 samples, 0.14%)</title><rect x="41.5992%" y="997" width="0.1369%" height="15" fill="rgb(216,102,54)" fg:x="17923" fg:w="59"/><text x="41.8492%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (59 samples, 0.14%)</title><rect x="41.5992%" y="981" width="0.1369%" height="15" fill="rgb(250,228,7)" fg:x="17923" fg:w="59"/><text x="41.8492%" y="991.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (63 samples, 0.15%)</title><rect x="41.5922%" y="1061" width="0.1462%" height="15" fill="rgb(226,125,25)" fg:x="17920" fg:w="63"/><text x="41.8422%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (63 samples, 0.15%)</title><rect x="41.5922%" y="1045" width="0.1462%" height="15" fill="rgb(224,165,27)" fg:x="17920" fg:w="63"/><text x="41.8422%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (63 samples, 0.15%)</title><rect x="41.5922%" y="1029" width="0.1462%" height="15" fill="rgb(233,86,3)" fg:x="17920" fg:w="63"/><text x="41.8422%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="41.7431%" y="1013" width="0.0116%" height="15" fill="rgb(228,116,20)" fg:x="17985" fg:w="5"/><text x="41.9931%" y="1023.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (8 samples, 0.02%)</title><rect x="41.7431%" y="1045" width="0.0186%" height="15" fill="rgb(209,192,17)" fg:x="17985" fg:w="8"/><text x="41.9931%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.02%)</title><rect x="41.7431%" y="1029" width="0.0186%" height="15" fill="rgb(224,88,34)" fg:x="17985" fg:w="8"/><text x="41.9931%" y="1039.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (18 samples, 0.04%)</title><rect x="41.7384%" y="1061" width="0.0418%" height="15" fill="rgb(233,38,6)" fg:x="17983" fg:w="18"/><text x="41.9884%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (6 samples, 0.01%)</title><rect x="41.7663%" y="1045" width="0.0139%" height="15" fill="rgb(212,59,30)" fg:x="17995" fg:w="6"/><text x="42.0163%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="41.7825%" y="901" width="0.0186%" height="15" fill="rgb(213,80,3)" fg:x="18002" fg:w="8"/><text x="42.0325%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="41.7872%" y="885" width="0.0139%" height="15" fill="rgb(251,178,7)" fg:x="18004" fg:w="6"/><text x="42.0372%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="41.7895%" y="869" width="0.0116%" height="15" fill="rgb(213,154,26)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="879.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (5 samples, 0.01%)</title><rect x="41.7895%" y="853" width="0.0116%" height="15" fill="rgb(238,165,49)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="863.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (5 samples, 0.01%)</title><rect x="41.7895%" y="837" width="0.0116%" height="15" fill="rgb(248,91,46)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="847.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (5 samples, 0.01%)</title><rect x="41.7895%" y="821" width="0.0116%" height="15" fill="rgb(244,21,52)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="831.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (5 samples, 0.01%)</title><rect x="41.7895%" y="805" width="0.0116%" height="15" fill="rgb(247,122,20)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="41.7895%" y="789" width="0.0116%" height="15" fill="rgb(218,27,9)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.01%)</title><rect x="41.7895%" y="773" width="0.0116%" height="15" fill="rgb(246,7,6)" fg:x="18005" fg:w="5"/><text x="42.0395%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="41.7825%" y="933" width="0.0255%" height="15" fill="rgb(227,135,54)" fg:x="18002" fg:w="11"/><text x="42.0325%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.03%)</title><rect x="41.7825%" y="917" width="0.0255%" height="15" fill="rgb(247,14,11)" fg:x="18002" fg:w="11"/><text x="42.0325%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.03%)</title><rect x="41.7825%" y="1045" width="0.0348%" height="15" fill="rgb(206,149,34)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (15 samples, 0.03%)</title><rect x="41.7825%" y="1029" width="0.0348%" height="15" fill="rgb(227,228,4)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (15 samples, 0.03%)</title><rect x="41.7825%" y="1013" width="0.0348%" height="15" fill="rgb(238,218,28)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.03%)</title><rect x="41.7825%" y="997" width="0.0348%" height="15" fill="rgb(252,86,40)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="41.7825%" y="981" width="0.0348%" height="15" fill="rgb(251,225,11)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="41.7825%" y="965" width="0.0348%" height="15" fill="rgb(206,46,49)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="41.7825%" y="949" width="0.0348%" height="15" fill="rgb(245,128,24)" fg:x="18002" fg:w="15"/><text x="42.0325%" y="959.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (100 samples, 0.23%)</title><rect x="41.5922%" y="1077" width="0.2321%" height="15" fill="rgb(219,177,34)" fg:x="17920" fg:w="100"/><text x="41.8422%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (19 samples, 0.04%)</title><rect x="41.7802%" y="1061" width="0.0441%" height="15" fill="rgb(218,60,48)" fg:x="18001" fg:w="19"/><text x="42.0302%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="41.8243%" y="917" width="0.0139%" height="15" fill="rgb(221,11,5)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="41.8243%" y="901" width="0.0139%" height="15" fill="rgb(220,148,13)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.01%)</title><rect x="41.8243%" y="885" width="0.0139%" height="15" fill="rgb(210,16,3)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="895.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (6 samples, 0.01%)</title><rect x="41.8243%" y="869" width="0.0139%" height="15" fill="rgb(236,80,2)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="879.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (6 samples, 0.01%)</title><rect x="41.8243%" y="853" width="0.0139%" height="15" fill="rgb(239,129,19)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="863.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (6 samples, 0.01%)</title><rect x="41.8243%" y="837" width="0.0139%" height="15" fill="rgb(220,106,35)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="847.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.01%)</title><rect x="41.8243%" y="821" width="0.0139%" height="15" fill="rgb(252,139,45)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="41.8243%" y="805" width="0.0139%" height="15" fill="rgb(229,8,36)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.01%)</title><rect x="41.8243%" y="789" width="0.0139%" height="15" fill="rgb(230,126,33)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="41.8243%" y="773" width="0.0139%" height="15" fill="rgb(239,140,21)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="41.8243%" y="757" width="0.0139%" height="15" fill="rgb(254,104,9)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="41.8243%" y="741" width="0.0139%" height="15" fill="rgb(239,52,14)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="41.8243%" y="725" width="0.0139%" height="15" fill="rgb(208,227,44)" fg:x="18020" fg:w="6"/><text x="42.0743%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="41.8266%" y="709" width="0.0116%" height="15" fill="rgb(246,18,19)" fg:x="18021" fg:w="5"/><text x="42.0766%" y="719.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="41.8382%" y="805" width="0.0116%" height="15" fill="rgb(235,228,25)" fg:x="18026" fg:w="5"/><text x="42.0882%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.03%)</title><rect x="41.8243%" y="949" width="0.0279%" height="15" fill="rgb(240,156,20)" fg:x="18020" fg:w="12"/><text x="42.0743%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 0.03%)</title><rect x="41.8243%" y="933" width="0.0279%" height="15" fill="rgb(224,8,20)" fg:x="18020" fg:w="12"/><text x="42.0743%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="41.8382%" y="917" width="0.0139%" height="15" fill="rgb(214,12,52)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="41.8382%" y="901" width="0.0139%" height="15" fill="rgb(211,220,47)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.01%)</title><rect x="41.8382%" y="885" width="0.0139%" height="15" fill="rgb(250,173,5)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="41.8382%" y="869" width="0.0139%" height="15" fill="rgb(250,125,52)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="41.8382%" y="853" width="0.0139%" height="15" fill="rgb(209,133,18)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="41.8382%" y="837" width="0.0139%" height="15" fill="rgb(216,173,22)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="41.8382%" y="821" width="0.0139%" height="15" fill="rgb(205,3,22)" fg:x="18026" fg:w="6"/><text x="42.0882%" y="831.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (118 samples, 0.27%)</title><rect x="41.5829%" y="1141" width="0.2739%" height="15" fill="rgb(248,22,20)" fg:x="17916" fg:w="118"/><text x="41.8329%" y="1151.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (118 samples, 0.27%)</title><rect x="41.5829%" y="1125" width="0.2739%" height="15" fill="rgb(233,6,29)" fg:x="17916" fg:w="118"/><text x="41.8329%" y="1135.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (118 samples, 0.27%)</title><rect x="41.5829%" y="1109" width="0.2739%" height="15" fill="rgb(240,22,54)" fg:x="17916" fg:w="118"/><text x="41.8329%" y="1119.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (118 samples, 0.27%)</title><rect x="41.5829%" y="1093" width="0.2739%" height="15" fill="rgb(231,133,32)" fg:x="17916" fg:w="118"/><text x="41.8329%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (14 samples, 0.03%)</title><rect x="41.8243%" y="1077" width="0.0325%" height="15" fill="rgb(248,193,4)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.03%)</title><rect x="41.8243%" y="1061" width="0.0325%" height="15" fill="rgb(211,178,46)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (14 samples, 0.03%)</title><rect x="41.8243%" y="1045" width="0.0325%" height="15" fill="rgb(224,5,42)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (14 samples, 0.03%)</title><rect x="41.8243%" y="1029" width="0.0325%" height="15" fill="rgb(239,176,25)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.03%)</title><rect x="41.8243%" y="1013" width="0.0325%" height="15" fill="rgb(245,187,50)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="41.8243%" y="997" width="0.0325%" height="15" fill="rgb(248,24,15)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="41.8243%" y="981" width="0.0325%" height="15" fill="rgb(205,166,13)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="41.8243%" y="965" width="0.0325%" height="15" fill="rgb(208,114,23)" fg:x="18020" fg:w="14"/><text x="42.0743%" y="975.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (11 samples, 0.03%)</title><rect x="41.8777%" y="1141" width="0.0255%" height="15" fill="rgb(239,127,18)" fg:x="18043" fg:w="11"/><text x="42.1277%" y="1151.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (11 samples, 0.03%)</title><rect x="41.8777%" y="1125" width="0.0255%" height="15" fill="rgb(219,154,28)" fg:x="18043" fg:w="11"/><text x="42.1277%" y="1135.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (7 samples, 0.02%)</title><rect x="41.8870%" y="1109" width="0.0162%" height="15" fill="rgb(225,157,23)" fg:x="18047" fg:w="7"/><text x="42.1370%" y="1119.50"></text></g><g><title>bytecode_verifier::dependencies::compare_cross_module_signatures (7 samples, 0.02%)</title><rect x="41.8870%" y="1093" width="0.0162%" height="15" fill="rgb(219,8,6)" fg:x="18047" fg:w="7"/><text x="42.1370%" y="1103.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (7 samples, 0.02%)</title><rect x="41.8870%" y="1077" width="0.0162%" height="15" fill="rgb(212,47,6)" fg:x="18047" fg:w="7"/><text x="42.1370%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (9 samples, 0.02%)</title><rect x="41.9079%" y="789" width="0.0209%" height="15" fill="rgb(224,190,4)" fg:x="18056" fg:w="9"/><text x="42.1579%" y="799.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (15 samples, 0.03%)</title><rect x="41.9032%" y="1125" width="0.0348%" height="15" fill="rgb(239,183,29)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1135.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (15 samples, 0.03%)</title><rect x="41.9032%" y="1109" width="0.0348%" height="15" fill="rgb(213,57,7)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.03%)</title><rect x="41.9032%" y="1093" width="0.0348%" height="15" fill="rgb(216,148,1)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="41.9032%" y="1077" width="0.0348%" height="15" fill="rgb(236,182,29)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 0.03%)</title><rect x="41.9032%" y="1061" width="0.0348%" height="15" fill="rgb(244,120,48)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.03%)</title><rect x="41.9032%" y="1045" width="0.0348%" height="15" fill="rgb(206,71,34)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="41.9032%" y="1029" width="0.0348%" height="15" fill="rgb(242,32,6)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="41.9032%" y="1013" width="0.0348%" height="15" fill="rgb(241,35,3)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="41.9032%" y="997" width="0.0348%" height="15" fill="rgb(222,62,19)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="41.9032%" y="981" width="0.0348%" height="15" fill="rgb(223,110,41)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="41.9032%" y="965" width="0.0348%" height="15" fill="rgb(208,224,4)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="41.9032%" y="949" width="0.0348%" height="15" fill="rgb(241,137,19)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.03%)</title><rect x="41.9032%" y="933" width="0.0348%" height="15" fill="rgb(244,24,17)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="943.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="41.9032%" y="917" width="0.0348%" height="15" fill="rgb(245,178,49)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="41.9032%" y="901" width="0.0348%" height="15" fill="rgb(219,160,38)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.03%)</title><rect x="41.9032%" y="885" width="0.0348%" height="15" fill="rgb(228,137,14)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (15 samples, 0.03%)</title><rect x="41.9032%" y="869" width="0.0348%" height="15" fill="rgb(237,134,11)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.03%)</title><rect x="41.9032%" y="853" width="0.0348%" height="15" fill="rgb(211,126,44)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (15 samples, 0.03%)</title><rect x="41.9032%" y="837" width="0.0348%" height="15" fill="rgb(226,171,33)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.03%)</title><rect x="41.9032%" y="821" width="0.0348%" height="15" fill="rgb(253,99,13)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (15 samples, 0.03%)</title><rect x="41.9032%" y="805" width="0.0348%" height="15" fill="rgb(244,48,7)" fg:x="18054" fg:w="15"/><text x="42.1532%" y="815.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (20 samples, 0.05%)</title><rect x="41.9032%" y="1141" width="0.0464%" height="15" fill="rgb(244,217,54)" fg:x="18054" fg:w="20"/><text x="42.1532%" y="1151.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (5 samples, 0.01%)</title><rect x="41.9380%" y="1125" width="0.0116%" height="15" fill="rgb(224,15,18)" fg:x="18069" fg:w="5"/><text x="42.1880%" y="1135.50"></text></g><g><title>bytecode_verifier::dependencies::compare_cross_module_signatures (5 samples, 0.01%)</title><rect x="41.9380%" y="1109" width="0.0116%" height="15" fill="rgb(244,99,12)" fg:x="18069" fg:w="5"/><text x="42.1880%" y="1119.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (5 samples, 0.01%)</title><rect x="41.9380%" y="1093" width="0.0116%" height="15" fill="rgb(233,226,8)" fg:x="18069" fg:w="5"/><text x="42.1880%" y="1103.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (5 samples, 0.01%)</title><rect x="41.9380%" y="1077" width="0.0116%" height="15" fill="rgb(229,211,3)" fg:x="18069" fg:w="5"/><text x="42.1880%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.05%)</title><rect x="41.9752%" y="1125" width="0.0487%" height="15" fill="rgb(216,140,21)" fg:x="18085" fg:w="21"/><text x="42.2252%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="41.9961%" y="1109" width="0.0279%" height="15" fill="rgb(234,122,30)" fg:x="18094" fg:w="12"/><text x="42.2461%" y="1119.50"></text></g><g><title>bytecode_verifier::instruction_consistency::InstructionConsistency::check_instructions (41 samples, 0.10%)</title><rect x="41.9520%" y="1141" width="0.0952%" height="15" fill="rgb(236,25,46)" fg:x="18075" fg:w="41"/><text x="42.2020%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="42.0703%" y="773" width="0.0186%" height="15" fill="rgb(217,52,54)" fg:x="18126" fg:w="8"/><text x="42.3203%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="42.0703%" y="757" width="0.0186%" height="15" fill="rgb(222,29,26)" fg:x="18126" fg:w="8"/><text x="42.3203%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.02%)</title><rect x="42.0703%" y="741" width="0.0186%" height="15" fill="rgb(216,177,29)" fg:x="18126" fg:w="8"/><text x="42.3203%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.03%)</title><rect x="42.0587%" y="981" width="0.0325%" height="15" fill="rgb(247,136,51)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14 samples, 0.03%)</title><rect x="42.0587%" y="965" width="0.0325%" height="15" fill="rgb(231,47,47)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="42.0587%" y="949" width="0.0325%" height="15" fill="rgb(211,192,36)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.03%)</title><rect x="42.0587%" y="933" width="0.0325%" height="15" fill="rgb(229,156,32)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.03%)</title><rect x="42.0587%" y="917" width="0.0325%" height="15" fill="rgb(248,213,20)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.03%)</title><rect x="42.0587%" y="901" width="0.0325%" height="15" fill="rgb(217,64,7)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.03%)</title><rect x="42.0587%" y="885" width="0.0325%" height="15" fill="rgb(232,142,8)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.03%)</title><rect x="42.0587%" y="869" width="0.0325%" height="15" fill="rgb(224,92,44)" fg:x="18121" fg:w="14"/><text x="42.3087%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.02%)</title><rect x="42.0680%" y="853" width="0.0232%" height="15" fill="rgb(214,169,17)" fg:x="18125" fg:w="10"/><text x="42.3180%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="42.0680%" y="837" width="0.0232%" height="15" fill="rgb(210,59,37)" fg:x="18125" fg:w="10"/><text x="42.3180%" y="847.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new::_{{closure}} (10 samples, 0.02%)</title><rect x="42.0680%" y="821" width="0.0232%" height="15" fill="rgb(214,116,48)" fg:x="18125" fg:w="10"/><text x="42.3180%" y="831.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (10 samples, 0.02%)</title><rect x="42.0680%" y="805" width="0.0232%" height="15" fill="rgb(244,191,6)" fg:x="18125" fg:w="10"/><text x="42.3180%" y="815.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (10 samples, 0.02%)</title><rect x="42.0680%" y="789" width="0.0232%" height="15" fill="rgb(241,50,52)" fg:x="18125" fg:w="10"/><text x="42.3180%" y="799.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (17 samples, 0.04%)</title><rect x="42.0587%" y="1141" width="0.0395%" height="15" fill="rgb(236,75,39)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1151.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (17 samples, 0.04%)</title><rect x="42.0587%" y="1125" width="0.0395%" height="15" fill="rgb(236,99,0)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.04%)</title><rect x="42.0587%" y="1109" width="0.0395%" height="15" fill="rgb(207,202,15)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="42.0587%" y="1093" width="0.0395%" height="15" fill="rgb(233,207,14)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1103.50"></text></g><g><title>core::iter::adapters::process_results (17 samples, 0.04%)</title><rect x="42.0587%" y="1077" width="0.0395%" height="15" fill="rgb(226,27,51)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (17 samples, 0.04%)</title><rect x="42.0587%" y="1061" width="0.0395%" height="15" fill="rgb(206,104,42)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.04%)</title><rect x="42.0587%" y="1045" width="0.0395%" height="15" fill="rgb(212,225,4)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="42.0587%" y="1029" width="0.0395%" height="15" fill="rgb(233,96,42)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="42.0587%" y="1013" width="0.0395%" height="15" fill="rgb(229,21,32)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="42.0587%" y="997" width="0.0395%" height="15" fill="rgb(226,216,24)" fg:x="18121" fg:w="17"/><text x="42.3087%" y="1007.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (6 samples, 0.01%)</title><rect x="42.1098%" y="1141" width="0.0139%" height="15" fill="rgb(221,163,17)" fg:x="18143" fg:w="6"/><text x="42.3598%" y="1151.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::frame_root (7 samples, 0.02%)</title><rect x="42.1330%" y="1141" width="0.0162%" height="15" fill="rgb(216,216,42)" fg:x="18153" fg:w="7"/><text x="42.3830%" y="1151.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (5 samples, 0.01%)</title><rect x="42.1748%" y="1141" width="0.0116%" height="15" fill="rgb(240,118,7)" fg:x="18171" fg:w="5"/><text x="42.4248%" y="1151.50"></text></g><g><title>bytecode_verifier::reference_safety::call (5 samples, 0.01%)</title><rect x="42.2049%" y="1141" width="0.0116%" height="15" fill="rgb(221,67,37)" fg:x="18184" fg:w="5"/><text x="42.4549%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="42.3558%" y="1109" width="0.0302%" height="15" fill="rgb(241,32,44)" fg:x="18249" fg:w="13"/><text x="42.6058%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (18 samples, 0.04%)</title><rect x="42.3488%" y="1125" width="0.0418%" height="15" fill="rgb(235,204,43)" fg:x="18246" fg:w="18"/><text x="42.5988%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5 samples, 0.01%)</title><rect x="42.3906%" y="1109" width="0.0116%" height="15" fill="rgb(213,116,10)" fg:x="18264" fg:w="5"/><text x="42.6406%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.03%)</title><rect x="42.3906%" y="1125" width="0.0279%" height="15" fill="rgb(239,15,48)" fg:x="18264" fg:w="12"/><text x="42.6406%" y="1135.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="42.4069%" y="1109" width="0.0116%" height="15" fill="rgb(207,123,36)" fg:x="18271" fg:w="5"/><text x="42.6569%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (6 samples, 0.01%)</title><rect x="42.4603%" y="1045" width="0.0139%" height="15" fill="rgb(209,103,30)" fg:x="18294" fg:w="6"/><text x="42.7103%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="42.4742%" y="1045" width="0.0279%" height="15" fill="rgb(238,100,19)" fg:x="18300" fg:w="12"/><text x="42.7242%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.02%)</title><rect x="42.5020%" y="1045" width="0.0232%" height="15" fill="rgb(244,30,14)" fg:x="18312" fg:w="10"/><text x="42.7520%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="42.5136%" y="1029" width="0.0116%" height="15" fill="rgb(249,174,6)" fg:x="18317" fg:w="5"/><text x="42.7636%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.09%)</title><rect x="42.4486%" y="1061" width="0.0882%" height="15" fill="rgb(235,213,41)" fg:x="18289" fg:w="38"/><text x="42.6986%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.10%)</title><rect x="42.4440%" y="1109" width="0.0952%" height="15" fill="rgb(213,118,6)" fg:x="18287" fg:w="41"/><text x="42.6940%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.10%)</title><rect x="42.4440%" y="1093" width="0.0952%" height="15" fill="rgb(235,44,51)" fg:x="18287" fg:w="41"/><text x="42.6940%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (40 samples, 0.09%)</title><rect x="42.4463%" y="1077" width="0.0928%" height="15" fill="rgb(217,9,53)" fg:x="18288" fg:w="40"/><text x="42.6963%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (59 samples, 0.14%)</title><rect x="42.4185%" y="1125" width="0.1369%" height="15" fill="rgb(237,172,34)" fg:x="18276" fg:w="59"/><text x="42.6685%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="42.5763%" y="1061" width="0.0116%" height="15" fill="rgb(206,206,11)" fg:x="18344" fg:w="5"/><text x="42.8263%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="42.5763%" y="1045" width="0.0116%" height="15" fill="rgb(214,149,29)" fg:x="18344" fg:w="5"/><text x="42.8263%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="42.5740%" y="1077" width="0.0162%" height="15" fill="rgb(208,123,3)" fg:x="18343" fg:w="7"/><text x="42.8240%" y="1087.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="42.6065%" y="1061" width="0.0162%" height="15" fill="rgb(229,126,4)" fg:x="18357" fg:w="7"/><text x="42.8565%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (7 samples, 0.02%)</title><rect x="42.6366%" y="1061" width="0.0162%" height="15" fill="rgb(222,92,36)" fg:x="18370" fg:w="7"/><text x="42.8866%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="42.6413%" y="1045" width="0.0116%" height="15" fill="rgb(216,39,41)" fg:x="18372" fg:w="5"/><text x="42.8913%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="42.6413%" y="1029" width="0.0116%" height="15" fill="rgb(253,127,28)" fg:x="18372" fg:w="5"/><text x="42.8913%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="42.6413%" y="1013" width="0.0116%" height="15" fill="rgb(249,152,51)" fg:x="18372" fg:w="5"/><text x="42.8913%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (6 samples, 0.01%)</title><rect x="42.6715%" y="917" width="0.0139%" height="15" fill="rgb(209,123,42)" fg:x="18385" fg:w="6"/><text x="42.9215%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6 samples, 0.01%)</title><rect x="42.6715%" y="901" width="0.0139%" height="15" fill="rgb(241,118,22)" fg:x="18385" fg:w="6"/><text x="42.9215%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.01%)</title><rect x="42.6715%" y="885" width="0.0139%" height="15" fill="rgb(208,25,7)" fg:x="18385" fg:w="6"/><text x="42.9215%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (12 samples, 0.03%)</title><rect x="42.6622%" y="1013" width="0.0279%" height="15" fill="rgb(243,144,39)" fg:x="18381" fg:w="12"/><text x="42.9122%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (12 samples, 0.03%)</title><rect x="42.6622%" y="997" width="0.0279%" height="15" fill="rgb(250,50,5)" fg:x="18381" fg:w="12"/><text x="42.9122%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.02%)</title><rect x="42.6668%" y="981" width="0.0232%" height="15" fill="rgb(207,67,11)" fg:x="18383" fg:w="10"/><text x="42.9168%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (10 samples, 0.02%)</title><rect x="42.6668%" y="965" width="0.0232%" height="15" fill="rgb(245,204,40)" fg:x="18383" fg:w="10"/><text x="42.9168%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (10 samples, 0.02%)</title><rect x="42.6668%" y="949" width="0.0232%" height="15" fill="rgb(238,228,24)" fg:x="18383" fg:w="10"/><text x="42.9168%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (10 samples, 0.02%)</title><rect x="42.6668%" y="933" width="0.0232%" height="15" fill="rgb(217,116,22)" fg:x="18383" fg:w="10"/><text x="42.9168%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (22 samples, 0.05%)</title><rect x="42.6599%" y="1029" width="0.0511%" height="15" fill="rgb(234,98,12)" fg:x="18380" fg:w="22"/><text x="42.9099%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="42.6900%" y="1013" width="0.0209%" height="15" fill="rgb(242,170,50)" fg:x="18393" fg:w="9"/><text x="42.9400%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.02%)</title><rect x="42.6900%" y="997" width="0.0209%" height="15" fill="rgb(235,7,5)" fg:x="18393" fg:w="9"/><text x="42.9400%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.01%)</title><rect x="42.6970%" y="981" width="0.0139%" height="15" fill="rgb(241,114,28)" fg:x="18396" fg:w="6"/><text x="42.9470%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="42.7248%" y="965" width="0.0232%" height="15" fill="rgb(246,112,42)" fg:x="18408" fg:w="10"/><text x="42.9748%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (21 samples, 0.05%)</title><rect x="42.7109%" y="1029" width="0.0487%" height="15" fill="rgb(248,228,14)" fg:x="18402" fg:w="21"/><text x="42.9609%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.04%)</title><rect x="42.7156%" y="1013" width="0.0441%" height="15" fill="rgb(208,133,18)" fg:x="18404" fg:w="19"/><text x="42.9656%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.04%)</title><rect x="42.7156%" y="997" width="0.0441%" height="15" fill="rgb(207,35,49)" fg:x="18404" fg:w="19"/><text x="42.9656%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.04%)</title><rect x="42.7156%" y="981" width="0.0441%" height="15" fill="rgb(205,68,36)" fg:x="18404" fg:w="19"/><text x="42.9656%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (10 samples, 0.02%)</title><rect x="42.7597%" y="1029" width="0.0232%" height="15" fill="rgb(245,62,40)" fg:x="18423" fg:w="10"/><text x="43.0097%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="42.7597%" y="1013" width="0.0232%" height="15" fill="rgb(228,27,24)" fg:x="18423" fg:w="10"/><text x="43.0097%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (10 samples, 0.02%)</title><rect x="42.7597%" y="997" width="0.0232%" height="15" fill="rgb(253,19,12)" fg:x="18423" fg:w="10"/><text x="43.0097%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.02%)</title><rect x="42.7643%" y="981" width="0.0186%" height="15" fill="rgb(232,28,20)" fg:x="18425" fg:w="8"/><text x="43.0143%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (6 samples, 0.01%)</title><rect x="42.7689%" y="965" width="0.0139%" height="15" fill="rgb(218,35,51)" fg:x="18427" fg:w="6"/><text x="43.0189%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="42.8014%" y="853" width="0.0116%" height="15" fill="rgb(212,90,40)" fg:x="18441" fg:w="5"/><text x="43.0514%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (10 samples, 0.02%)</title><rect x="42.7991%" y="885" width="0.0232%" height="15" fill="rgb(220,172,12)" fg:x="18440" fg:w="10"/><text x="43.0491%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.02%)</title><rect x="42.7991%" y="869" width="0.0232%" height="15" fill="rgb(226,159,20)" fg:x="18440" fg:w="10"/><text x="43.0491%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (14 samples, 0.03%)</title><rect x="42.7968%" y="901" width="0.0325%" height="15" fill="rgb(234,205,16)" fg:x="18439" fg:w="14"/><text x="43.0468%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (15 samples, 0.03%)</title><rect x="42.7968%" y="981" width="0.0348%" height="15" fill="rgb(207,9,39)" fg:x="18439" fg:w="15"/><text x="43.0468%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (15 samples, 0.03%)</title><rect x="42.7968%" y="965" width="0.0348%" height="15" fill="rgb(249,143,15)" fg:x="18439" fg:w="15"/><text x="43.0468%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.03%)</title><rect x="42.7968%" y="949" width="0.0348%" height="15" fill="rgb(253,133,29)" fg:x="18439" fg:w="15"/><text x="43.0468%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (15 samples, 0.03%)</title><rect x="42.7968%" y="933" width="0.0348%" height="15" fill="rgb(221,187,0)" fg:x="18439" fg:w="15"/><text x="43.0468%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (15 samples, 0.03%)</title><rect x="42.7968%" y="917" width="0.0348%" height="15" fill="rgb(205,204,26)" fg:x="18439" fg:w="15"/><text x="43.0468%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (33 samples, 0.08%)</title><rect x="42.7898%" y="997" width="0.0766%" height="15" fill="rgb(224,68,54)" fg:x="18436" fg:w="33"/><text x="43.0398%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.03%)</title><rect x="42.8316%" y="981" width="0.0348%" height="15" fill="rgb(209,67,4)" fg:x="18454" fg:w="15"/><text x="43.0816%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.03%)</title><rect x="42.8386%" y="965" width="0.0279%" height="15" fill="rgb(228,229,18)" fg:x="18457" fg:w="12"/><text x="43.0886%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.03%)</title><rect x="42.8409%" y="949" width="0.0255%" height="15" fill="rgb(231,89,13)" fg:x="18458" fg:w="11"/><text x="43.0909%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (53 samples, 0.12%)</title><rect x="42.7829%" y="1013" width="0.1230%" height="15" fill="rgb(210,182,18)" fg:x="18433" fg:w="53"/><text x="43.0329%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (17 samples, 0.04%)</title><rect x="42.8664%" y="997" width="0.0395%" height="15" fill="rgb(240,105,2)" fg:x="18469" fg:w="17"/><text x="43.1164%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (16 samples, 0.04%)</title><rect x="42.8687%" y="981" width="0.0371%" height="15" fill="rgb(207,170,50)" fg:x="18470" fg:w="16"/><text x="43.1187%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.03%)</title><rect x="42.8780%" y="965" width="0.0279%" height="15" fill="rgb(232,133,24)" fg:x="18474" fg:w="12"/><text x="43.1280%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.02%)</title><rect x="42.8827%" y="949" width="0.0232%" height="15" fill="rgb(235,166,27)" fg:x="18476" fg:w="10"/><text x="43.1327%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (107 samples, 0.25%)</title><rect x="42.6599%" y="1061" width="0.2483%" height="15" fill="rgb(209,19,13)" fg:x="18380" fg:w="107"/><text x="42.9099%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (107 samples, 0.25%)</title><rect x="42.6599%" y="1045" width="0.2483%" height="15" fill="rgb(226,79,39)" fg:x="18380" fg:w="107"/><text x="42.9099%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (54 samples, 0.13%)</title><rect x="42.7829%" y="1029" width="0.1253%" height="15" fill="rgb(222,163,10)" fg:x="18433" fg:w="54"/><text x="43.0329%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (6 samples, 0.01%)</title><rect x="42.9152%" y="1013" width="0.0139%" height="15" fill="rgb(214,44,19)" fg:x="18490" fg:w="6"/><text x="43.1652%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (6 samples, 0.01%)</title><rect x="42.9152%" y="997" width="0.0139%" height="15" fill="rgb(210,217,13)" fg:x="18490" fg:w="6"/><text x="43.1652%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (8 samples, 0.02%)</title><rect x="42.9152%" y="1029" width="0.0186%" height="15" fill="rgb(237,61,54)" fg:x="18490" fg:w="8"/><text x="43.1652%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (5 samples, 0.01%)</title><rect x="42.9639%" y="917" width="0.0116%" height="15" fill="rgb(226,184,24)" fg:x="18511" fg:w="5"/><text x="43.2139%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (7 samples, 0.02%)</title><rect x="42.9755%" y="917" width="0.0162%" height="15" fill="rgb(223,226,4)" fg:x="18516" fg:w="7"/><text x="43.2255%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.04%)</title><rect x="42.9500%" y="965" width="0.0441%" height="15" fill="rgb(210,26,41)" fg:x="18505" fg:w="19"/><text x="43.2000%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (18 samples, 0.04%)</title><rect x="42.9523%" y="949" width="0.0418%" height="15" fill="rgb(220,221,6)" fg:x="18506" fg:w="18"/><text x="43.2023%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (17 samples, 0.04%)</title><rect x="42.9546%" y="933" width="0.0395%" height="15" fill="rgb(225,89,49)" fg:x="18507" fg:w="17"/><text x="43.2046%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="42.9430%" y="997" width="0.0580%" height="15" fill="rgb(218,70,45)" fg:x="18502" fg:w="25"/><text x="43.1930%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (22 samples, 0.05%)</title><rect x="42.9500%" y="981" width="0.0511%" height="15" fill="rgb(238,166,21)" fg:x="18505" fg:w="22"/><text x="43.2000%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="43.0103%" y="965" width="0.0162%" height="15" fill="rgb(224,141,44)" fg:x="18531" fg:w="7"/><text x="43.2603%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="43.0126%" y="949" width="0.0139%" height="15" fill="rgb(230,12,49)" fg:x="18532" fg:w="6"/><text x="43.2626%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="43.0266%" y="949" width="0.0186%" height="15" fill="rgb(212,174,12)" fg:x="18538" fg:w="8"/><text x="43.2766%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (8 samples, 0.02%)</title><rect x="43.0266%" y="933" width="0.0186%" height="15" fill="rgb(246,67,9)" fg:x="18538" fg:w="8"/><text x="43.2766%" y="943.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (9 samples, 0.02%)</title><rect x="43.0266%" y="965" width="0.0209%" height="15" fill="rgb(239,35,23)" fg:x="18538" fg:w="9"/><text x="43.2766%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="43.0521%" y="853" width="0.0116%" height="15" fill="rgb(211,167,0)" fg:x="18549" fg:w="5"/><text x="43.3021%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.0521%" y="933" width="0.0139%" height="15" fill="rgb(225,119,45)" fg:x="18549" fg:w="6"/><text x="43.3021%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.0521%" y="917" width="0.0139%" height="15" fill="rgb(210,162,6)" fg:x="18549" fg:w="6"/><text x="43.3021%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="43.0521%" y="901" width="0.0139%" height="15" fill="rgb(208,118,35)" fg:x="18549" fg:w="6"/><text x="43.3021%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="43.0521%" y="885" width="0.0139%" height="15" fill="rgb(239,4,53)" fg:x="18549" fg:w="6"/><text x="43.3021%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="43.0521%" y="869" width="0.0139%" height="15" fill="rgb(213,130,21)" fg:x="18549" fg:w="6"/><text x="43.3021%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="43.0684%" y="837" width="0.0162%" height="15" fill="rgb(235,148,0)" fg:x="18556" fg:w="7"/><text x="43.3184%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="43.0660%" y="933" width="0.0232%" height="15" fill="rgb(244,224,18)" fg:x="18555" fg:w="10"/><text x="43.3160%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="43.0660%" y="917" width="0.0232%" height="15" fill="rgb(211,214,4)" fg:x="18555" fg:w="10"/><text x="43.3160%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="43.0684%" y="901" width="0.0209%" height="15" fill="rgb(206,119,25)" fg:x="18556" fg:w="9"/><text x="43.3184%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="43.0684%" y="885" width="0.0209%" height="15" fill="rgb(243,93,47)" fg:x="18556" fg:w="9"/><text x="43.3184%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="43.0684%" y="869" width="0.0209%" height="15" fill="rgb(224,194,6)" fg:x="18556" fg:w="9"/><text x="43.3184%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="43.0684%" y="853" width="0.0209%" height="15" fill="rgb(243,229,6)" fg:x="18556" fg:w="9"/><text x="43.3184%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="43.1264%" y="805" width="0.0162%" height="15" fill="rgb(207,23,50)" fg:x="18581" fg:w="7"/><text x="43.3764%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.1287%" y="789" width="0.0139%" height="15" fill="rgb(253,192,32)" fg:x="18582" fg:w="6"/><text x="43.3787%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="43.1449%" y="805" width="0.0139%" height="15" fill="rgb(213,21,6)" fg:x="18589" fg:w="6"/><text x="43.3949%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="43.1449%" y="789" width="0.0139%" height="15" fill="rgb(243,151,13)" fg:x="18589" fg:w="6"/><text x="43.3949%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="43.1473%" y="773" width="0.0116%" height="15" fill="rgb(233,165,41)" fg:x="18590" fg:w="5"/><text x="43.3973%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (29 samples, 0.07%)</title><rect x="43.0962%" y="869" width="0.0673%" height="15" fill="rgb(246,176,45)" fg:x="18568" fg:w="29"/><text x="43.3462%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.06%)</title><rect x="43.1008%" y="853" width="0.0627%" height="15" fill="rgb(217,170,52)" fg:x="18570" fg:w="27"/><text x="43.3508%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.06%)</title><rect x="43.1008%" y="837" width="0.0627%" height="15" fill="rgb(214,203,54)" fg:x="18570" fg:w="27"/><text x="43.3508%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.06%)</title><rect x="43.1078%" y="821" width="0.0557%" height="15" fill="rgb(248,215,49)" fg:x="18573" fg:w="24"/><text x="43.3578%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (30 samples, 0.07%)</title><rect x="43.0962%" y="885" width="0.0696%" height="15" fill="rgb(208,46,10)" fg:x="18568" fg:w="30"/><text x="43.3462%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.02%)</title><rect x="43.1821%" y="853" width="0.0232%" height="15" fill="rgb(254,5,31)" fg:x="18605" fg:w="10"/><text x="43.4321%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="43.1867%" y="837" width="0.0186%" height="15" fill="rgb(222,104,33)" fg:x="18607" fg:w="8"/><text x="43.4367%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="43.1890%" y="821" width="0.0162%" height="15" fill="rgb(248,49,16)" fg:x="18608" fg:w="7"/><text x="43.4390%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.04%)</title><rect x="43.1658%" y="869" width="0.0418%" height="15" fill="rgb(232,198,41)" fg:x="18598" fg:w="18"/><text x="43.4158%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (19 samples, 0.04%)</title><rect x="43.1658%" y="885" width="0.0441%" height="15" fill="rgb(214,125,3)" fg:x="18598" fg:w="19"/><text x="43.4158%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.2215%" y="789" width="0.0139%" height="15" fill="rgb(229,220,28)" fg:x="18622" fg:w="6"/><text x="43.4715%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.04%)</title><rect x="43.2123%" y="837" width="0.0371%" height="15" fill="rgb(222,64,37)" fg:x="18618" fg:w="16"/><text x="43.4623%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.03%)</title><rect x="43.2146%" y="821" width="0.0348%" height="15" fill="rgb(249,184,13)" fg:x="18619" fg:w="15"/><text x="43.4646%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="43.2192%" y="805" width="0.0302%" height="15" fill="rgb(252,176,6)" fg:x="18621" fg:w="13"/><text x="43.4692%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.04%)</title><rect x="43.2099%" y="853" width="0.0418%" height="15" fill="rgb(228,153,7)" fg:x="18617" fg:w="18"/><text x="43.4599%" y="863.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (150 samples, 0.35%)</title><rect x="42.9082%" y="1045" width="0.3481%" height="15" fill="rgb(242,193,5)" fg:x="18487" fg:w="150"/><text x="43.1582%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (139 samples, 0.32%)</title><rect x="42.9337%" y="1029" width="0.3226%" height="15" fill="rgb(232,140,9)" fg:x="18498" fg:w="139"/><text x="43.1837%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (138 samples, 0.32%)</title><rect x="42.9361%" y="1013" width="0.3203%" height="15" fill="rgb(213,222,16)" fg:x="18499" fg:w="138"/><text x="43.1861%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (110 samples, 0.26%)</title><rect x="43.0010%" y="997" width="0.2553%" height="15" fill="rgb(222,75,50)" fg:x="18527" fg:w="110"/><text x="43.2510%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (109 samples, 0.25%)</title><rect x="43.0034%" y="981" width="0.2530%" height="15" fill="rgb(205,180,2)" fg:x="18528" fg:w="109"/><text x="43.2534%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (90 samples, 0.21%)</title><rect x="43.0475%" y="965" width="0.2089%" height="15" fill="rgb(216,34,7)" fg:x="18547" fg:w="90"/><text x="43.2975%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (88 samples, 0.20%)</title><rect x="43.0521%" y="949" width="0.2042%" height="15" fill="rgb(253,16,32)" fg:x="18549" fg:w="88"/><text x="43.3021%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (71 samples, 0.16%)</title><rect x="43.0916%" y="933" width="0.1648%" height="15" fill="rgb(208,97,28)" fg:x="18566" fg:w="71"/><text x="43.3416%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (70 samples, 0.16%)</title><rect x="43.0939%" y="917" width="0.1625%" height="15" fill="rgb(225,92,11)" fg:x="18567" fg:w="70"/><text x="43.3439%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (69 samples, 0.16%)</title><rect x="43.0962%" y="901" width="0.1601%" height="15" fill="rgb(243,38,12)" fg:x="18568" fg:w="69"/><text x="43.3462%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (20 samples, 0.05%)</title><rect x="43.2099%" y="885" width="0.0464%" height="15" fill="rgb(208,139,16)" fg:x="18617" fg:w="20"/><text x="43.4599%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (20 samples, 0.05%)</title><rect x="43.2099%" y="869" width="0.0464%" height="15" fill="rgb(227,24,9)" fg:x="18617" fg:w="20"/><text x="43.4599%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (5 samples, 0.01%)</title><rect x="43.2564%" y="1029" width="0.0116%" height="15" fill="rgb(206,62,11)" fg:x="18637" fg:w="5"/><text x="43.5064%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="43.2564%" y="1013" width="0.0116%" height="15" fill="rgb(228,134,27)" fg:x="18637" fg:w="5"/><text x="43.5064%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (5 samples, 0.01%)</title><rect x="43.3028%" y="901" width="0.0116%" height="15" fill="rgb(205,55,33)" fg:x="18657" fg:w="5"/><text x="43.5528%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="43.3144%" y="901" width="0.0139%" height="15" fill="rgb(243,75,43)" fg:x="18662" fg:w="6"/><text x="43.5644%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (17 samples, 0.04%)</title><rect x="43.2935%" y="917" width="0.0395%" height="15" fill="rgb(223,27,42)" fg:x="18653" fg:w="17"/><text x="43.5435%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.06%)</title><rect x="43.2842%" y="949" width="0.0557%" height="15" fill="rgb(232,189,33)" fg:x="18649" fg:w="24"/><text x="43.5342%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.06%)</title><rect x="43.2842%" y="933" width="0.0557%" height="15" fill="rgb(210,9,39)" fg:x="18649" fg:w="24"/><text x="43.5342%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.07%)</title><rect x="43.2796%" y="981" width="0.0673%" height="15" fill="rgb(242,85,26)" fg:x="18647" fg:w="29"/><text x="43.5296%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (28 samples, 0.06%)</title><rect x="43.2819%" y="965" width="0.0650%" height="15" fill="rgb(248,44,4)" fg:x="18648" fg:w="28"/><text x="43.5319%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="43.2796%" y="997" width="0.0789%" height="15" fill="rgb(250,96,46)" fg:x="18647" fg:w="34"/><text x="43.5296%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="43.3469%" y="981" width="0.0116%" height="15" fill="rgb(229,116,26)" fg:x="18676" fg:w="5"/><text x="43.5969%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.03%)</title><rect x="43.3608%" y="965" width="0.0302%" height="15" fill="rgb(246,94,34)" fg:x="18682" fg:w="13"/><text x="43.6108%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.03%)</title><rect x="43.3631%" y="949" width="0.0279%" height="15" fill="rgb(251,73,21)" fg:x="18683" fg:w="12"/><text x="43.6131%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (11 samples, 0.03%)</title><rect x="43.3910%" y="965" width="0.0255%" height="15" fill="rgb(254,121,25)" fg:x="18695" fg:w="11"/><text x="43.6410%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (9 samples, 0.02%)</title><rect x="43.3956%" y="949" width="0.0209%" height="15" fill="rgb(215,161,49)" fg:x="18697" fg:w="9"/><text x="43.6456%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="43.4003%" y="933" width="0.0162%" height="15" fill="rgb(221,43,13)" fg:x="18699" fg:w="7"/><text x="43.6503%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (7 samples, 0.02%)</title><rect x="43.4397%" y="837" width="0.0162%" height="15" fill="rgb(249,5,37)" fg:x="18716" fg:w="7"/><text x="43.6897%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.03%)</title><rect x="43.4397%" y="853" width="0.0302%" height="15" fill="rgb(226,25,44)" fg:x="18716" fg:w="13"/><text x="43.6897%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.03%)</title><rect x="43.4397%" y="885" width="0.0325%" height="15" fill="rgb(238,189,16)" fg:x="18716" fg:w="14"/><text x="43.6897%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.03%)</title><rect x="43.4397%" y="869" width="0.0325%" height="15" fill="rgb(251,186,8)" fg:x="18716" fg:w="14"/><text x="43.6897%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="43.4327%" y="933" width="0.0418%" height="15" fill="rgb(254,34,31)" fg:x="18713" fg:w="18"/><text x="43.6827%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="43.4351%" y="917" width="0.0395%" height="15" fill="rgb(225,215,27)" fg:x="18714" fg:w="17"/><text x="43.6851%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (16 samples, 0.04%)</title><rect x="43.4374%" y="901" width="0.0371%" height="15" fill="rgb(221,192,48)" fg:x="18715" fg:w="16"/><text x="43.6874%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="43.4768%" y="901" width="0.0279%" height="15" fill="rgb(219,137,20)" fg:x="18732" fg:w="12"/><text x="43.7268%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="43.4768%" y="885" width="0.0279%" height="15" fill="rgb(219,84,11)" fg:x="18732" fg:w="12"/><text x="43.7268%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="43.4768%" y="869" width="0.0279%" height="15" fill="rgb(224,10,23)" fg:x="18732" fg:w="12"/><text x="43.7268%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="43.4792%" y="853" width="0.0255%" height="15" fill="rgb(248,22,39)" fg:x="18733" fg:w="11"/><text x="43.7292%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.02%)</title><rect x="43.4815%" y="837" width="0.0232%" height="15" fill="rgb(212,154,20)" fg:x="18734" fg:w="10"/><text x="43.7315%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="43.4745%" y="933" width="0.0325%" height="15" fill="rgb(236,199,50)" fg:x="18731" fg:w="14"/><text x="43.7245%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="43.4745%" y="917" width="0.0325%" height="15" fill="rgb(211,9,17)" fg:x="18731" fg:w="14"/><text x="43.7245%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="43.5209%" y="869" width="0.0139%" height="15" fill="rgb(243,216,36)" fg:x="18751" fg:w="6"/><text x="43.7709%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="43.5488%" y="821" width="0.0279%" height="15" fill="rgb(250,2,10)" fg:x="18763" fg:w="12"/><text x="43.7988%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="43.5581%" y="805" width="0.0186%" height="15" fill="rgb(226,50,48)" fg:x="18767" fg:w="8"/><text x="43.8081%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="43.5790%" y="821" width="0.0162%" height="15" fill="rgb(243,81,16)" fg:x="18776" fg:w="7"/><text x="43.8290%" y="831.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (149 samples, 0.35%)</title><rect x="43.2564%" y="1045" width="0.3458%" height="15" fill="rgb(250,14,2)" fg:x="18637" fg:w="149"/><text x="43.5064%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (144 samples, 0.33%)</title><rect x="43.2680%" y="1029" width="0.3342%" height="15" fill="rgb(233,135,29)" fg:x="18642" fg:w="144"/><text x="43.5180%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (140 samples, 0.32%)</title><rect x="43.2772%" y="1013" width="0.3249%" height="15" fill="rgb(224,64,43)" fg:x="18646" fg:w="140"/><text x="43.5272%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (105 samples, 0.24%)</title><rect x="43.3585%" y="997" width="0.2437%" height="15" fill="rgb(238,84,13)" fg:x="18681" fg:w="105"/><text x="43.6085%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (105 samples, 0.24%)</title><rect x="43.3585%" y="981" width="0.2437%" height="15" fill="rgb(253,48,26)" fg:x="18681" fg:w="105"/><text x="43.6085%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (80 samples, 0.19%)</title><rect x="43.4165%" y="965" width="0.1857%" height="15" fill="rgb(205,223,31)" fg:x="18706" fg:w="80"/><text x="43.6665%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 0.18%)</title><rect x="43.4235%" y="949" width="0.1787%" height="15" fill="rgb(221,41,32)" fg:x="18709" fg:w="77"/><text x="43.6735%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (39 samples, 0.09%)</title><rect x="43.5117%" y="933" width="0.0905%" height="15" fill="rgb(213,158,31)" fg:x="18747" fg:w="39"/><text x="43.7617%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (37 samples, 0.09%)</title><rect x="43.5163%" y="917" width="0.0859%" height="15" fill="rgb(245,126,43)" fg:x="18749" fg:w="37"/><text x="43.7663%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (37 samples, 0.09%)</title><rect x="43.5163%" y="901" width="0.0859%" height="15" fill="rgb(227,7,22)" fg:x="18749" fg:w="37"/><text x="43.7663%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (37 samples, 0.09%)</title><rect x="43.5163%" y="885" width="0.0859%" height="15" fill="rgb(252,90,44)" fg:x="18749" fg:w="37"/><text x="43.7663%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (29 samples, 0.07%)</title><rect x="43.5349%" y="869" width="0.0673%" height="15" fill="rgb(253,91,0)" fg:x="18757" fg:w="29"/><text x="43.7849%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.06%)</title><rect x="43.5372%" y="853" width="0.0650%" height="15" fill="rgb(252,175,49)" fg:x="18758" fg:w="28"/><text x="43.7872%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.06%)</title><rect x="43.5395%" y="837" width="0.0627%" height="15" fill="rgb(246,150,1)" fg:x="18759" fg:w="27"/><text x="43.7895%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="43.6022%" y="1029" width="0.0162%" height="15" fill="rgb(241,192,25)" fg:x="18786" fg:w="7"/><text x="43.8522%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="43.6463%" y="917" width="0.0139%" height="15" fill="rgb(239,187,11)" fg:x="18805" fg:w="6"/><text x="43.8963%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.03%)</title><rect x="43.6324%" y="933" width="0.0302%" height="15" fill="rgb(218,202,51)" fg:x="18799" fg:w="13"/><text x="43.8824%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.04%)</title><rect x="43.6231%" y="965" width="0.0441%" height="15" fill="rgb(225,176,8)" fg:x="18795" fg:w="19"/><text x="43.8731%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (19 samples, 0.04%)</title><rect x="43.6231%" y="949" width="0.0441%" height="15" fill="rgb(219,122,41)" fg:x="18795" fg:w="19"/><text x="43.8731%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.05%)</title><rect x="43.6184%" y="997" width="0.0534%" height="15" fill="rgb(248,140,20)" fg:x="18793" fg:w="23"/><text x="43.8684%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (21 samples, 0.05%)</title><rect x="43.6231%" y="981" width="0.0487%" height="15" fill="rgb(245,41,37)" fg:x="18795" fg:w="21"/><text x="43.8731%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (10 samples, 0.02%)</title><rect x="43.6741%" y="965" width="0.0232%" height="15" fill="rgb(235,82,39)" fg:x="18817" fg:w="10"/><text x="43.9241%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="43.6834%" y="949" width="0.0139%" height="15" fill="rgb(230,108,42)" fg:x="18821" fg:w="6"/><text x="43.9334%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (12 samples, 0.03%)</title><rect x="43.6973%" y="965" width="0.0279%" height="15" fill="rgb(215,150,50)" fg:x="18827" fg:w="12"/><text x="43.9473%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.03%)</title><rect x="43.6997%" y="949" width="0.0255%" height="15" fill="rgb(233,212,5)" fg:x="18828" fg:w="11"/><text x="43.9497%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="43.7113%" y="933" width="0.0139%" height="15" fill="rgb(245,80,22)" fg:x="18833" fg:w="6"/><text x="43.9613%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (5 samples, 0.01%)</title><rect x="43.7136%" y="917" width="0.0116%" height="15" fill="rgb(238,129,16)" fg:x="18834" fg:w="5"/><text x="43.9636%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (5 samples, 0.01%)</title><rect x="43.7136%" y="901" width="0.0116%" height="15" fill="rgb(240,19,0)" fg:x="18834" fg:w="5"/><text x="43.9636%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="43.7275%" y="949" width="0.0139%" height="15" fill="rgb(232,42,35)" fg:x="18840" fg:w="6"/><text x="43.9775%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.7577%" y="933" width="0.0139%" height="15" fill="rgb(223,130,24)" fg:x="18853" fg:w="6"/><text x="44.0077%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="43.7577%" y="917" width="0.0139%" height="15" fill="rgb(237,16,22)" fg:x="18853" fg:w="6"/><text x="44.0077%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="43.7577%" y="901" width="0.0139%" height="15" fill="rgb(248,192,20)" fg:x="18853" fg:w="6"/><text x="44.0077%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="43.7577%" y="885" width="0.0139%" height="15" fill="rgb(233,167,2)" fg:x="18853" fg:w="6"/><text x="44.0077%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="43.7577%" y="869" width="0.0139%" height="15" fill="rgb(252,71,44)" fg:x="18853" fg:w="6"/><text x="44.0077%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="43.7716%" y="901" width="0.0279%" height="15" fill="rgb(238,37,47)" fg:x="18859" fg:w="12"/><text x="44.0216%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="43.7716%" y="885" width="0.0279%" height="15" fill="rgb(214,202,54)" fg:x="18859" fg:w="12"/><text x="44.0216%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="43.7716%" y="869" width="0.0279%" height="15" fill="rgb(254,165,40)" fg:x="18859" fg:w="12"/><text x="44.0216%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.03%)</title><rect x="43.7716%" y="853" width="0.0279%" height="15" fill="rgb(246,173,38)" fg:x="18859" fg:w="12"/><text x="44.0216%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.03%)</title><rect x="43.7739%" y="837" width="0.0255%" height="15" fill="rgb(215,3,27)" fg:x="18860" fg:w="11"/><text x="44.0239%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="43.7716%" y="933" width="0.0348%" height="15" fill="rgb(239,169,51)" fg:x="18859" fg:w="15"/><text x="44.0216%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="43.7716%" y="917" width="0.0348%" height="15" fill="rgb(212,5,25)" fg:x="18859" fg:w="15"/><text x="44.0216%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (390 samples, 0.91%)</title><rect x="42.9082%" y="1061" width="0.9052%" height="15" fill="rgb(243,45,17)" fg:x="18487" fg:w="390"/><text x="43.1582%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (91 samples, 0.21%)</title><rect x="43.6022%" y="1045" width="0.2112%" height="15" fill="rgb(242,97,9)" fg:x="18786" fg:w="91"/><text x="43.8522%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (84 samples, 0.19%)</title><rect x="43.6184%" y="1029" width="0.1950%" height="15" fill="rgb(228,71,31)" fg:x="18793" fg:w="84"/><text x="43.8684%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (84 samples, 0.19%)</title><rect x="43.6184%" y="1013" width="0.1950%" height="15" fill="rgb(252,184,16)" fg:x="18793" fg:w="84"/><text x="43.8684%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (61 samples, 0.14%)</title><rect x="43.6718%" y="997" width="0.1416%" height="15" fill="rgb(236,169,46)" fg:x="18816" fg:w="61"/><text x="43.9218%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (60 samples, 0.14%)</title><rect x="43.6741%" y="981" width="0.1393%" height="15" fill="rgb(207,17,47)" fg:x="18817" fg:w="60"/><text x="43.9241%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (38 samples, 0.09%)</title><rect x="43.7252%" y="965" width="0.0882%" height="15" fill="rgb(206,201,28)" fg:x="18839" fg:w="38"/><text x="43.9752%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.07%)</title><rect x="43.7414%" y="949" width="0.0720%" height="15" fill="rgb(224,184,23)" fg:x="18846" fg:w="31"/><text x="43.9914%" y="959.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_field_borrow (539 samples, 1.25%)</title><rect x="42.5693%" y="1109" width="1.2510%" height="15" fill="rgb(208,139,48)" fg:x="18341" fg:w="539"/><text x="42.8193%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_field_borrow (538 samples, 1.25%)</title><rect x="42.5717%" y="1093" width="1.2487%" height="15" fill="rgb(208,130,10)" fg:x="18342" fg:w="538"/><text x="42.8217%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (529 samples, 1.23%)</title><rect x="42.5925%" y="1077" width="1.2278%" height="15" fill="rgb(211,213,45)" fg:x="18351" fg:w="529"/><text x="42.8425%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (6 samples, 0.01%)</title><rect x="43.8227%" y="1061" width="0.0139%" height="15" fill="rgb(235,100,30)" fg:x="18881" fg:w="6"/><text x="44.0727%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="43.8227%" y="1045" width="0.0139%" height="15" fill="rgb(206,144,31)" fg:x="18881" fg:w="6"/><text x="44.0727%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (7 samples, 0.02%)</title><rect x="43.8227%" y="1077" width="0.0162%" height="15" fill="rgb(224,200,26)" fg:x="18881" fg:w="7"/><text x="44.0727%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (5 samples, 0.01%)</title><rect x="43.8436%" y="1045" width="0.0116%" height="15" fill="rgb(247,104,53)" fg:x="18890" fg:w="5"/><text x="44.0936%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field::_{{closure}} (18 samples, 0.04%)</title><rect x="43.8204%" y="1109" width="0.0418%" height="15" fill="rgb(220,14,17)" fg:x="18880" fg:w="18"/><text x="44.0704%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_readable (17 samples, 0.04%)</title><rect x="43.8227%" y="1093" width="0.0395%" height="15" fill="rgb(230,140,40)" fg:x="18881" fg:w="17"/><text x="44.0727%" y="1103.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_freezable (10 samples, 0.02%)</title><rect x="43.8389%" y="1077" width="0.0232%" height="15" fill="rgb(229,2,41)" fg:x="18888" fg:w="10"/><text x="44.0889%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (9 samples, 0.02%)</title><rect x="43.8412%" y="1061" width="0.0209%" height="15" fill="rgb(232,89,16)" fg:x="18889" fg:w="9"/><text x="44.0912%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (5 samples, 0.01%)</title><rect x="43.8853%" y="997" width="0.0116%" height="15" fill="rgb(247,59,52)" fg:x="18908" fg:w="5"/><text x="44.1353%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (18 samples, 0.04%)</title><rect x="43.8621%" y="1077" width="0.0418%" height="15" fill="rgb(226,110,21)" fg:x="18898" fg:w="18"/><text x="44.1121%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (15 samples, 0.03%)</title><rect x="43.8691%" y="1061" width="0.0348%" height="15" fill="rgb(224,176,43)" fg:x="18901" fg:w="15"/><text x="44.1191%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (14 samples, 0.03%)</title><rect x="43.8714%" y="1045" width="0.0325%" height="15" fill="rgb(221,73,6)" fg:x="18902" fg:w="14"/><text x="44.1214%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (11 samples, 0.03%)</title><rect x="43.8784%" y="1029" width="0.0255%" height="15" fill="rgb(232,78,19)" fg:x="18905" fg:w="11"/><text x="44.1284%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.02%)</title><rect x="43.8807%" y="1013" width="0.0232%" height="15" fill="rgb(233,112,48)" fg:x="18906" fg:w="10"/><text x="44.1307%" y="1023.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (19 samples, 0.04%)</title><rect x="43.8621%" y="1109" width="0.0441%" height="15" fill="rgb(243,131,47)" fg:x="18898" fg:w="19"/><text x="44.1121%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (19 samples, 0.04%)</title><rect x="43.8621%" y="1093" width="0.0441%" height="15" fill="rgb(226,51,1)" fg:x="18898" fg:w="19"/><text x="44.1121%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="43.9202%" y="1077" width="0.0116%" height="15" fill="rgb(247,58,7)" fg:x="18923" fg:w="5"/><text x="44.1702%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="43.9318%" y="1077" width="0.0116%" height="15" fill="rgb(209,7,32)" fg:x="18928" fg:w="5"/><text x="44.1818%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="43.9318%" y="1061" width="0.0116%" height="15" fill="rgb(209,39,41)" fg:x="18928" fg:w="5"/><text x="44.1818%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="43.9318%" y="1045" width="0.0116%" height="15" fill="rgb(226,182,46)" fg:x="18928" fg:w="5"/><text x="44.1818%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="43.9318%" y="1029" width="0.0116%" height="15" fill="rgb(230,219,10)" fg:x="18928" fg:w="5"/><text x="44.1818%" y="1039.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="43.9318%" y="1013" width="0.0116%" height="15" fill="rgb(227,175,30)" fg:x="18928" fg:w="5"/><text x="44.1818%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (7 samples, 0.02%)</title><rect x="43.9503%" y="1029" width="0.0162%" height="15" fill="rgb(217,2,50)" fg:x="18936" fg:w="7"/><text x="44.2003%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (9 samples, 0.02%)</title><rect x="43.9503%" y="1045" width="0.0209%" height="15" fill="rgb(229,160,0)" fg:x="18936" fg:w="9"/><text x="44.2003%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.04%)</title><rect x="43.9434%" y="1077" width="0.0371%" height="15" fill="rgb(207,78,37)" fg:x="18933" fg:w="16"/><text x="44.1934%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.04%)</title><rect x="43.9434%" y="1061" width="0.0371%" height="15" fill="rgb(225,57,0)" fg:x="18933" fg:w="16"/><text x="44.1934%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (12 samples, 0.03%)</title><rect x="43.9898%" y="997" width="0.0279%" height="15" fill="rgb(232,154,2)" fg:x="18953" fg:w="12"/><text x="44.2398%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (13 samples, 0.03%)</title><rect x="43.9898%" y="1013" width="0.0302%" height="15" fill="rgb(241,212,25)" fg:x="18953" fg:w="13"/><text x="44.2398%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (18 samples, 0.04%)</title><rect x="43.9805%" y="1045" width="0.0418%" height="15" fill="rgb(226,69,20)" fg:x="18949" fg:w="18"/><text x="44.2305%" y="1055.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.04%)</title><rect x="43.9851%" y="1029" width="0.0371%" height="15" fill="rgb(247,184,54)" fg:x="18951" fg:w="16"/><text x="44.2351%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="43.9805%" y="1061" width="0.0511%" height="15" fill="rgb(210,145,0)" fg:x="18949" fg:w="22"/><text x="44.2305%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="43.9805%" y="1077" width="0.0580%" height="15" fill="rgb(253,82,12)" fg:x="18949" fg:w="25"/><text x="44.2305%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="44.0455%" y="965" width="0.0116%" height="15" fill="rgb(245,42,11)" fg:x="18977" fg:w="5"/><text x="44.2955%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.02%)</title><rect x="44.0432%" y="981" width="0.0232%" height="15" fill="rgb(219,147,32)" fg:x="18976" fg:w="10"/><text x="44.2932%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="44.0385%" y="1045" width="0.0325%" height="15" fill="rgb(246,12,7)" fg:x="18974" fg:w="14"/><text x="44.2885%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (13 samples, 0.03%)</title><rect x="44.0408%" y="1029" width="0.0302%" height="15" fill="rgb(243,50,9)" fg:x="18975" fg:w="13"/><text x="44.2908%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.03%)</title><rect x="44.0408%" y="1013" width="0.0302%" height="15" fill="rgb(219,149,6)" fg:x="18975" fg:w="13"/><text x="44.2908%" y="1023.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.03%)</title><rect x="44.0408%" y="997" width="0.0302%" height="15" fill="rgb(241,51,42)" fg:x="18975" fg:w="13"/><text x="44.2908%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="44.0385%" y="1061" width="0.0371%" height="15" fill="rgb(226,128,27)" fg:x="18974" fg:w="16"/><text x="44.2885%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="44.0385%" y="1077" width="0.0395%" height="15" fill="rgb(244,144,4)" fg:x="18974" fg:w="17"/><text x="44.2885%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (8 samples, 0.02%)</title><rect x="44.0780%" y="1077" width="0.0186%" height="15" fill="rgb(221,4,13)" fg:x="18991" fg:w="8"/><text x="44.3280%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="44.0826%" y="1061" width="0.0139%" height="15" fill="rgb(208,170,28)" fg:x="18993" fg:w="6"/><text x="44.3326%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="44.0849%" y="1045" width="0.0116%" height="15" fill="rgb(226,131,13)" fg:x="18994" fg:w="5"/><text x="44.3349%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="44.0849%" y="1029" width="0.0116%" height="15" fill="rgb(215,72,41)" fg:x="18994" fg:w="5"/><text x="44.3349%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;Node,Type&gt;::into_node (5 samples, 0.01%)</title><rect x="44.1244%" y="981" width="0.0116%" height="15" fill="rgb(243,108,20)" fg:x="19011" fg:w="5"/><text x="44.3744%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.01%)</title><rect x="44.1685%" y="949" width="0.0116%" height="15" fill="rgb(230,189,17)" fg:x="19030" fg:w="5"/><text x="44.4185%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5 samples, 0.01%)</title><rect x="44.1685%" y="933" width="0.0116%" height="15" fill="rgb(220,50,17)" fg:x="19030" fg:w="5"/><text x="44.4185%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (16 samples, 0.04%)</title><rect x="44.1453%" y="981" width="0.0371%" height="15" fill="rgb(248,152,48)" fg:x="19020" fg:w="16"/><text x="44.3953%" y="991.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (8 samples, 0.02%)</title><rect x="44.1639%" y="965" width="0.0186%" height="15" fill="rgb(244,91,11)" fg:x="19028" fg:w="8"/><text x="44.4139%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (42 samples, 0.10%)</title><rect x="44.1128%" y="1045" width="0.0975%" height="15" fill="rgb(220,157,5)" fg:x="19006" fg:w="42"/><text x="44.3628%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (42 samples, 0.10%)</title><rect x="44.1128%" y="1029" width="0.0975%" height="15" fill="rgb(253,137,8)" fg:x="19006" fg:w="42"/><text x="44.3628%" y="1039.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (41 samples, 0.10%)</title><rect x="44.1151%" y="1013" width="0.0952%" height="15" fill="rgb(217,137,51)" fg:x="19007" fg:w="41"/><text x="44.3651%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (39 samples, 0.09%)</title><rect x="44.1198%" y="997" width="0.0905%" height="15" fill="rgb(218,209,53)" fg:x="19009" fg:w="39"/><text x="44.3698%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (6 samples, 0.01%)</title><rect x="44.1964%" y="981" width="0.0139%" height="15" fill="rgb(249,137,25)" fg:x="19042" fg:w="6"/><text x="44.4464%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (54 samples, 0.13%)</title><rect x="44.1012%" y="1061" width="0.1253%" height="15" fill="rgb(239,155,26)" fg:x="19001" fg:w="54"/><text x="44.3512%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="44.2126%" y="1045" width="0.0139%" height="15" fill="rgb(227,85,46)" fg:x="19049" fg:w="6"/><text x="44.4626%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="44.2149%" y="1029" width="0.0116%" height="15" fill="rgb(251,107,43)" fg:x="19050" fg:w="5"/><text x="44.4649%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="44.2149%" y="1013" width="0.0116%" height="15" fill="rgb(234,170,33)" fg:x="19050" fg:w="5"/><text x="44.4649%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (60 samples, 0.14%)</title><rect x="44.1012%" y="1077" width="0.1393%" height="15" fill="rgb(206,29,35)" fg:x="19001" fg:w="60"/><text x="44.3512%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="44.2265%" y="1061" width="0.0139%" height="15" fill="rgb(227,138,25)" fg:x="19055" fg:w="6"/><text x="44.4765%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (9 samples, 0.02%)</title><rect x="44.2660%" y="965" width="0.0209%" height="15" fill="rgb(249,131,35)" fg:x="19072" fg:w="9"/><text x="44.5160%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (23 samples, 0.05%)</title><rect x="44.2497%" y="1029" width="0.0534%" height="15" fill="rgb(239,6,40)" fg:x="19065" fg:w="23"/><text x="44.4997%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (23 samples, 0.05%)</title><rect x="44.2497%" y="1013" width="0.0534%" height="15" fill="rgb(246,136,47)" fg:x="19065" fg:w="23"/><text x="44.4997%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (23 samples, 0.05%)</title><rect x="44.2497%" y="997" width="0.0534%" height="15" fill="rgb(253,58,26)" fg:x="19065" fg:w="23"/><text x="44.4997%" y="1007.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (23 samples, 0.05%)</title><rect x="44.2497%" y="981" width="0.0534%" height="15" fill="rgb(237,141,10)" fg:x="19065" fg:w="23"/><text x="44.4997%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (31 samples, 0.07%)</title><rect x="44.2405%" y="1045" width="0.0720%" height="15" fill="rgb(234,156,12)" fg:x="19061" fg:w="31"/><text x="44.4905%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (32 samples, 0.07%)</title><rect x="44.2405%" y="1077" width="0.0743%" height="15" fill="rgb(243,224,36)" fg:x="19061" fg:w="32"/><text x="44.4905%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (32 samples, 0.07%)</title><rect x="44.2405%" y="1061" width="0.0743%" height="15" fill="rgb(205,229,51)" fg:x="19061" fg:w="32"/><text x="44.4905%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="44.3147%" y="1045" width="0.0116%" height="15" fill="rgb(223,189,4)" fg:x="19093" fg:w="5"/><text x="44.5647%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="44.3542%" y="933" width="0.0116%" height="15" fill="rgb(249,167,54)" fg:x="19110" fg:w="5"/><text x="44.6042%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (15 samples, 0.03%)</title><rect x="44.3333%" y="949" width="0.0348%" height="15" fill="rgb(218,34,28)" fg:x="19101" fg:w="15"/><text x="44.5833%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="44.3310%" y="1013" width="0.0395%" height="15" fill="rgb(232,109,42)" fg:x="19100" fg:w="17"/><text x="44.5810%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (17 samples, 0.04%)</title><rect x="44.3310%" y="997" width="0.0395%" height="15" fill="rgb(248,214,46)" fg:x="19100" fg:w="17"/><text x="44.5810%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.04%)</title><rect x="44.3310%" y="981" width="0.0395%" height="15" fill="rgb(244,216,40)" fg:x="19100" fg:w="17"/><text x="44.5810%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.04%)</title><rect x="44.3310%" y="965" width="0.0395%" height="15" fill="rgb(231,226,31)" fg:x="19100" fg:w="17"/><text x="44.5810%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="44.3797%" y="981" width="0.0162%" height="15" fill="rgb(238,38,43)" fg:x="19121" fg:w="7"/><text x="44.6297%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="44.3820%" y="965" width="0.0139%" height="15" fill="rgb(208,88,43)" fg:x="19122" fg:w="6"/><text x="44.6320%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (7 samples, 0.02%)</title><rect x="44.3960%" y="981" width="0.0162%" height="15" fill="rgb(205,136,37)" fg:x="19128" fg:w="7"/><text x="44.6460%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="44.3960%" y="965" width="0.0162%" height="15" fill="rgb(237,34,14)" fg:x="19128" fg:w="7"/><text x="44.6460%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="44.3983%" y="949" width="0.0139%" height="15" fill="rgb(236,193,44)" fg:x="19129" fg:w="6"/><text x="44.6483%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="44.4424%" y="869" width="0.0139%" height="15" fill="rgb(231,48,10)" fg:x="19148" fg:w="6"/><text x="44.6924%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="44.4331%" y="933" width="0.0279%" height="15" fill="rgb(213,141,34)" fg:x="19144" fg:w="12"/><text x="44.6831%" y="943.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="44.4331%" y="917" width="0.0279%" height="15" fill="rgb(249,130,34)" fg:x="19144" fg:w="12"/><text x="44.6831%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="44.4331%" y="901" width="0.0279%" height="15" fill="rgb(219,42,41)" fg:x="19144" fg:w="12"/><text x="44.6831%" y="911.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="44.4354%" y="885" width="0.0255%" height="15" fill="rgb(224,100,54)" fg:x="19145" fg:w="11"/><text x="44.6854%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="44.4308%" y="949" width="0.0325%" height="15" fill="rgb(229,200,27)" fg:x="19143" fg:w="14"/><text x="44.6808%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="44.4726%" y="837" width="0.0116%" height="15" fill="rgb(217,118,10)" fg:x="19161" fg:w="5"/><text x="44.7226%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="44.4656%" y="917" width="0.0325%" height="15" fill="rgb(206,22,3)" fg:x="19158" fg:w="14"/><text x="44.7156%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (14 samples, 0.03%)</title><rect x="44.4656%" y="901" width="0.0325%" height="15" fill="rgb(232,163,46)" fg:x="19158" fg:w="14"/><text x="44.7156%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.03%)</title><rect x="44.4679%" y="885" width="0.0302%" height="15" fill="rgb(206,95,13)" fg:x="19159" fg:w="13"/><text x="44.7179%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.03%)</title><rect x="44.4679%" y="869" width="0.0302%" height="15" fill="rgb(253,154,18)" fg:x="19159" fg:w="13"/><text x="44.7179%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.03%)</title><rect x="44.4679%" y="853" width="0.0302%" height="15" fill="rgb(219,32,23)" fg:x="19159" fg:w="13"/><text x="44.7179%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="44.4865%" y="837" width="0.0116%" height="15" fill="rgb(230,191,45)" fg:x="19167" fg:w="5"/><text x="44.7365%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="44.4633%" y="949" width="0.0371%" height="15" fill="rgb(229,64,36)" fg:x="19157" fg:w="16"/><text x="44.7133%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="44.4633%" y="933" width="0.0371%" height="15" fill="rgb(205,129,25)" fg:x="19157" fg:w="16"/><text x="44.7133%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="44.5352%" y="821" width="0.0139%" height="15" fill="rgb(254,112,7)" fg:x="19188" fg:w="6"/><text x="44.7852%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.04%)</title><rect x="44.5213%" y="869" width="0.0395%" height="15" fill="rgb(226,53,48)" fg:x="19182" fg:w="17"/><text x="44.7713%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.04%)</title><rect x="44.5213%" y="853" width="0.0395%" height="15" fill="rgb(214,153,38)" fg:x="19182" fg:w="17"/><text x="44.7713%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.04%)</title><rect x="44.5236%" y="837" width="0.0371%" height="15" fill="rgb(243,101,7)" fg:x="19183" fg:w="16"/><text x="44.7736%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (25 samples, 0.06%)</title><rect x="44.5050%" y="885" width="0.0580%" height="15" fill="rgb(240,140,22)" fg:x="19175" fg:w="25"/><text x="44.7550%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (26 samples, 0.06%)</title><rect x="44.5050%" y="901" width="0.0603%" height="15" fill="rgb(235,114,2)" fg:x="19175" fg:w="26"/><text x="44.7550%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (17 samples, 0.04%)</title><rect x="44.5654%" y="885" width="0.0395%" height="15" fill="rgb(242,59,12)" fg:x="19201" fg:w="17"/><text x="44.8154%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="44.5770%" y="869" width="0.0279%" height="15" fill="rgb(252,134,9)" fg:x="19206" fg:w="12"/><text x="44.8270%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.03%)</title><rect x="44.5770%" y="853" width="0.0279%" height="15" fill="rgb(236,4,44)" fg:x="19206" fg:w="12"/><text x="44.8270%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.03%)</title><rect x="44.5770%" y="837" width="0.0279%" height="15" fill="rgb(254,172,41)" fg:x="19206" fg:w="12"/><text x="44.8270%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (18 samples, 0.04%)</title><rect x="44.5654%" y="901" width="0.0418%" height="15" fill="rgb(244,63,20)" fg:x="19201" fg:w="18"/><text x="44.8154%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="44.6165%" y="853" width="0.0162%" height="15" fill="rgb(250,73,31)" fg:x="19223" fg:w="7"/><text x="44.8665%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.01%)</title><rect x="44.6188%" y="837" width="0.0139%" height="15" fill="rgb(241,38,36)" fg:x="19224" fg:w="6"/><text x="44.8688%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="44.6211%" y="821" width="0.0116%" height="15" fill="rgb(245,211,2)" fg:x="19225" fg:w="5"/><text x="44.8711%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.03%)</title><rect x="44.6095%" y="869" width="0.0279%" height="15" fill="rgb(206,120,28)" fg:x="19220" fg:w="12"/><text x="44.8595%" y="879.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (140 samples, 0.32%)</title><rect x="44.3147%" y="1061" width="0.3249%" height="15" fill="rgb(211,59,34)" fg:x="19093" fg:w="140"/><text x="44.5647%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (135 samples, 0.31%)</title><rect x="44.3263%" y="1045" width="0.3133%" height="15" fill="rgb(233,168,5)" fg:x="19098" fg:w="135"/><text x="44.5763%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (134 samples, 0.31%)</title><rect x="44.3287%" y="1029" width="0.3110%" height="15" fill="rgb(234,33,13)" fg:x="19099" fg:w="134"/><text x="44.5787%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (116 samples, 0.27%)</title><rect x="44.3704%" y="1013" width="0.2692%" height="15" fill="rgb(231,150,26)" fg:x="19117" fg:w="116"/><text x="44.6204%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (115 samples, 0.27%)</title><rect x="44.3728%" y="997" width="0.2669%" height="15" fill="rgb(217,191,4)" fg:x="19118" fg:w="115"/><text x="44.6228%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (98 samples, 0.23%)</title><rect x="44.4122%" y="981" width="0.2275%" height="15" fill="rgb(246,198,38)" fg:x="19135" fg:w="98"/><text x="44.6622%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (94 samples, 0.22%)</title><rect x="44.4215%" y="965" width="0.2182%" height="15" fill="rgb(245,64,37)" fg:x="19139" fg:w="94"/><text x="44.6715%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (60 samples, 0.14%)</title><rect x="44.5004%" y="949" width="0.1393%" height="15" fill="rgb(250,30,36)" fg:x="19173" fg:w="60"/><text x="44.7504%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (60 samples, 0.14%)</title><rect x="44.5004%" y="933" width="0.1393%" height="15" fill="rgb(217,86,53)" fg:x="19173" fg:w="60"/><text x="44.7504%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (59 samples, 0.14%)</title><rect x="44.5027%" y="917" width="0.1369%" height="15" fill="rgb(228,157,16)" fg:x="19174" fg:w="59"/><text x="44.7527%" y="927.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (14 samples, 0.03%)</title><rect x="44.6072%" y="901" width="0.0325%" height="15" fill="rgb(217,59,31)" fg:x="19219" fg:w="14"/><text x="44.8572%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (14 samples, 0.03%)</title><rect x="44.6072%" y="885" width="0.0325%" height="15" fill="rgb(237,138,41)" fg:x="19219" fg:w="14"/><text x="44.8572%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="44.6420%" y="1029" width="0.0116%" height="15" fill="rgb(227,91,49)" fg:x="19234" fg:w="5"/><text x="44.8920%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (6 samples, 0.01%)</title><rect x="44.6420%" y="1045" width="0.0139%" height="15" fill="rgb(247,21,44)" fg:x="19234" fg:w="6"/><text x="44.8920%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="44.6884%" y="917" width="0.0139%" height="15" fill="rgb(219,210,51)" fg:x="19254" fg:w="6"/><text x="44.9384%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.03%)</title><rect x="44.6791%" y="933" width="0.0255%" height="15" fill="rgb(209,140,6)" fg:x="19250" fg:w="11"/><text x="44.9291%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="44.6675%" y="997" width="0.0441%" height="15" fill="rgb(221,188,24)" fg:x="19245" fg:w="19"/><text x="44.9175%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (18 samples, 0.04%)</title><rect x="44.6698%" y="981" width="0.0418%" height="15" fill="rgb(232,154,20)" fg:x="19246" fg:w="18"/><text x="44.9198%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (18 samples, 0.04%)</title><rect x="44.6698%" y="965" width="0.0418%" height="15" fill="rgb(244,137,50)" fg:x="19246" fg:w="18"/><text x="44.9198%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.04%)</title><rect x="44.6722%" y="949" width="0.0395%" height="15" fill="rgb(225,185,43)" fg:x="19247" fg:w="17"/><text x="44.9222%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="44.6652%" y="1013" width="0.0511%" height="15" fill="rgb(213,205,38)" fg:x="19244" fg:w="22"/><text x="44.9152%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="44.7209%" y="965" width="0.0162%" height="15" fill="rgb(236,73,12)" fg:x="19268" fg:w="7"/><text x="44.9709%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="44.7209%" y="981" width="0.0186%" height="15" fill="rgb(235,219,13)" fg:x="19268" fg:w="8"/><text x="44.9709%" y="991.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (8 samples, 0.02%)</title><rect x="44.7395%" y="981" width="0.0186%" height="15" fill="rgb(218,59,36)" fg:x="19276" fg:w="8"/><text x="44.9895%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="44.7418%" y="965" width="0.0162%" height="15" fill="rgb(205,110,39)" fg:x="19277" fg:w="7"/><text x="44.9918%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="44.7418%" y="949" width="0.0162%" height="15" fill="rgb(218,206,42)" fg:x="19277" fg:w="7"/><text x="44.9918%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="44.7720%" y="869" width="0.0186%" height="15" fill="rgb(248,125,24)" fg:x="19290" fg:w="8"/><text x="45.0220%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="44.7696%" y="933" width="0.0232%" height="15" fill="rgb(242,28,27)" fg:x="19289" fg:w="10"/><text x="45.0196%" y="943.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="44.7696%" y="917" width="0.0232%" height="15" fill="rgb(216,228,15)" fg:x="19289" fg:w="10"/><text x="45.0196%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="44.7720%" y="901" width="0.0209%" height="15" fill="rgb(235,116,46)" fg:x="19290" fg:w="9"/><text x="45.0220%" y="911.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="44.7720%" y="885" width="0.0209%" height="15" fill="rgb(224,18,32)" fg:x="19290" fg:w="9"/><text x="45.0220%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="44.7650%" y="949" width="0.0348%" height="15" fill="rgb(252,5,12)" fg:x="19287" fg:w="15"/><text x="45.0150%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="44.8021%" y="885" width="0.0232%" height="15" fill="rgb(251,36,5)" fg:x="19303" fg:w="10"/><text x="45.0521%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="44.8021%" y="869" width="0.0232%" height="15" fill="rgb(217,53,14)" fg:x="19303" fg:w="10"/><text x="45.0521%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.02%)</title><rect x="44.8021%" y="853" width="0.0232%" height="15" fill="rgb(215,86,45)" fg:x="19303" fg:w="10"/><text x="45.0521%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="44.7998%" y="949" width="0.0279%" height="15" fill="rgb(242,169,11)" fg:x="19302" fg:w="12"/><text x="45.0498%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="44.7998%" y="933" width="0.0279%" height="15" fill="rgb(211,213,45)" fg:x="19302" fg:w="12"/><text x="45.0498%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="44.7998%" y="917" width="0.0279%" height="15" fill="rgb(205,88,11)" fg:x="19302" fg:w="12"/><text x="45.0498%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="44.7998%" y="901" width="0.0279%" height="15" fill="rgb(252,69,26)" fg:x="19302" fg:w="12"/><text x="45.0498%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="44.8857%" y="837" width="0.0139%" height="15" fill="rgb(246,123,37)" fg:x="19339" fg:w="6"/><text x="45.1357%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="44.8996%" y="837" width="0.0116%" height="15" fill="rgb(212,205,5)" fg:x="19345" fg:w="5"/><text x="45.1496%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="44.8996%" y="821" width="0.0116%" height="15" fill="rgb(253,148,0)" fg:x="19345" fg:w="5"/><text x="45.1496%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="44.8996%" y="805" width="0.0116%" height="15" fill="rgb(239,22,4)" fg:x="19345" fg:w="5"/><text x="45.1496%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (119 samples, 0.28%)</title><rect x="44.6397%" y="1061" width="0.2762%" height="15" fill="rgb(226,26,53)" fg:x="19233" fg:w="119"/><text x="44.8897%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (112 samples, 0.26%)</title><rect x="44.6559%" y="1045" width="0.2600%" height="15" fill="rgb(225,229,45)" fg:x="19240" fg:w="112"/><text x="44.9059%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (110 samples, 0.26%)</title><rect x="44.6606%" y="1029" width="0.2553%" height="15" fill="rgb(220,60,37)" fg:x="19242" fg:w="110"/><text x="44.9106%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (86 samples, 0.20%)</title><rect x="44.7163%" y="1013" width="0.1996%" height="15" fill="rgb(217,180,35)" fg:x="19266" fg:w="86"/><text x="44.9663%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (85 samples, 0.20%)</title><rect x="44.7186%" y="997" width="0.1973%" height="15" fill="rgb(229,7,53)" fg:x="19267" fg:w="85"/><text x="44.9686%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (68 samples, 0.16%)</title><rect x="44.7580%" y="981" width="0.1578%" height="15" fill="rgb(254,137,3)" fg:x="19284" fg:w="68"/><text x="45.0080%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (65 samples, 0.15%)</title><rect x="44.7650%" y="965" width="0.1509%" height="15" fill="rgb(215,140,41)" fg:x="19287" fg:w="65"/><text x="45.0150%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (36 samples, 0.08%)</title><rect x="44.8323%" y="949" width="0.0836%" height="15" fill="rgb(250,80,15)" fg:x="19316" fg:w="36"/><text x="45.0823%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (33 samples, 0.08%)</title><rect x="44.8393%" y="933" width="0.0766%" height="15" fill="rgb(252,191,6)" fg:x="19319" fg:w="33"/><text x="45.0893%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (33 samples, 0.08%)</title><rect x="44.8393%" y="917" width="0.0766%" height="15" fill="rgb(246,217,18)" fg:x="19319" fg:w="33"/><text x="45.0893%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (33 samples, 0.08%)</title><rect x="44.8393%" y="901" width="0.0766%" height="15" fill="rgb(223,93,7)" fg:x="19319" fg:w="33"/><text x="45.0893%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.06%)</title><rect x="44.8555%" y="885" width="0.0603%" height="15" fill="rgb(225,55,52)" fg:x="19326" fg:w="26"/><text x="45.1055%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (24 samples, 0.06%)</title><rect x="44.8602%" y="869" width="0.0557%" height="15" fill="rgb(240,31,24)" fg:x="19328" fg:w="24"/><text x="45.1102%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.05%)</title><rect x="44.8648%" y="853" width="0.0511%" height="15" fill="rgb(205,56,52)" fg:x="19330" fg:w="22"/><text x="45.1148%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="44.9437%" y="933" width="0.0116%" height="15" fill="rgb(246,146,12)" fg:x="19364" fg:w="5"/><text x="45.1937%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.03%)</title><rect x="44.9414%" y="949" width="0.0255%" height="15" fill="rgb(239,84,36)" fg:x="19363" fg:w="11"/><text x="45.1914%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="44.9275%" y="1013" width="0.0464%" height="15" fill="rgb(207,41,40)" fg:x="19357" fg:w="20"/><text x="45.1775%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (19 samples, 0.04%)</title><rect x="44.9298%" y="997" width="0.0441%" height="15" fill="rgb(241,179,25)" fg:x="19358" fg:w="19"/><text x="45.1798%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (18 samples, 0.04%)</title><rect x="44.9321%" y="981" width="0.0418%" height="15" fill="rgb(210,0,34)" fg:x="19359" fg:w="18"/><text x="45.1821%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.04%)</title><rect x="44.9344%" y="965" width="0.0395%" height="15" fill="rgb(225,217,29)" fg:x="19360" fg:w="17"/><text x="45.1844%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.03%)</title><rect x="44.9809%" y="981" width="0.0255%" height="15" fill="rgb(216,191,38)" fg:x="19380" fg:w="11"/><text x="45.2309%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (11 samples, 0.03%)</title><rect x="44.9809%" y="965" width="0.0255%" height="15" fill="rgb(232,140,52)" fg:x="19380" fg:w="11"/><text x="45.2309%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (7 samples, 0.02%)</title><rect x="44.9901%" y="949" width="0.0162%" height="15" fill="rgb(223,158,51)" fg:x="19384" fg:w="7"/><text x="45.2401%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (6 samples, 0.01%)</title><rect x="44.9925%" y="933" width="0.0139%" height="15" fill="rgb(235,29,51)" fg:x="19385" fg:w="6"/><text x="45.2425%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="45.0110%" y="965" width="0.0186%" height="15" fill="rgb(215,181,18)" fg:x="19393" fg:w="8"/><text x="45.2610%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (8 samples, 0.02%)</title><rect x="45.0110%" y="949" width="0.0186%" height="15" fill="rgb(227,125,34)" fg:x="19393" fg:w="8"/><text x="45.2610%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (11 samples, 0.03%)</title><rect x="45.0064%" y="981" width="0.0255%" height="15" fill="rgb(230,197,49)" fg:x="19391" fg:w="11"/><text x="45.2564%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="45.0598%" y="949" width="0.0116%" height="15" fill="rgb(239,141,16)" fg:x="19414" fg:w="5"/><text x="45.3098%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="45.0598%" y="933" width="0.0116%" height="15" fill="rgb(225,105,43)" fg:x="19414" fg:w="5"/><text x="45.3098%" y="943.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="45.0598%" y="917" width="0.0116%" height="15" fill="rgb(214,131,14)" fg:x="19414" fg:w="5"/><text x="45.3098%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="45.0598%" y="901" width="0.0116%" height="15" fill="rgb(229,177,11)" fg:x="19414" fg:w="5"/><text x="45.3098%" y="911.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="45.0598%" y="885" width="0.0116%" height="15" fill="rgb(231,180,14)" fg:x="19414" fg:w="5"/><text x="45.3098%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="45.0737%" y="853" width="0.0162%" height="15" fill="rgb(232,88,2)" fg:x="19420" fg:w="7"/><text x="45.3237%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="45.0714%" y="917" width="0.0255%" height="15" fill="rgb(205,220,8)" fg:x="19419" fg:w="11"/><text x="45.3214%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="45.0714%" y="901" width="0.0255%" height="15" fill="rgb(225,23,53)" fg:x="19419" fg:w="11"/><text x="45.3214%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="45.0737%" y="885" width="0.0232%" height="15" fill="rgb(213,62,29)" fg:x="19420" fg:w="10"/><text x="45.3237%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="45.0737%" y="869" width="0.0232%" height="15" fill="rgb(227,75,7)" fg:x="19420" fg:w="10"/><text x="45.3237%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="45.0714%" y="949" width="0.0325%" height="15" fill="rgb(207,105,14)" fg:x="19419" fg:w="14"/><text x="45.3214%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="45.0714%" y="933" width="0.0325%" height="15" fill="rgb(245,62,29)" fg:x="19419" fg:w="14"/><text x="45.3214%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (347 samples, 0.81%)</title><rect x="44.3147%" y="1077" width="0.8054%" height="15" fill="rgb(236,202,4)" fg:x="19093" fg:w="347"/><text x="44.5647%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (88 samples, 0.20%)</title><rect x="44.9159%" y="1061" width="0.2042%" height="15" fill="rgb(250,67,1)" fg:x="19352" fg:w="88"/><text x="45.1659%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (86 samples, 0.20%)</title><rect x="44.9205%" y="1045" width="0.1996%" height="15" fill="rgb(253,115,44)" fg:x="19354" fg:w="86"/><text x="45.1705%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (86 samples, 0.20%)</title><rect x="44.9205%" y="1029" width="0.1996%" height="15" fill="rgb(251,139,18)" fg:x="19354" fg:w="86"/><text x="45.1705%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (62 samples, 0.14%)</title><rect x="44.9762%" y="1013" width="0.1439%" height="15" fill="rgb(218,22,32)" fg:x="19378" fg:w="62"/><text x="45.2262%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (61 samples, 0.14%)</title><rect x="44.9785%" y="997" width="0.1416%" height="15" fill="rgb(243,53,5)" fg:x="19379" fg:w="61"/><text x="45.2285%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (38 samples, 0.09%)</title><rect x="45.0319%" y="981" width="0.0882%" height="15" fill="rgb(227,56,16)" fg:x="19402" fg:w="38"/><text x="45.2819%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.07%)</title><rect x="45.0482%" y="965" width="0.0720%" height="15" fill="rgb(245,53,0)" fg:x="19409" fg:w="31"/><text x="45.2982%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="45.1410%" y="949" width="0.0162%" height="15" fill="rgb(216,170,35)" fg:x="19449" fg:w="7"/><text x="45.3910%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="45.1456%" y="933" width="0.0116%" height="15" fill="rgb(211,200,8)" fg:x="19451" fg:w="5"/><text x="45.3956%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="45.1364%" y="997" width="0.0255%" height="15" fill="rgb(228,204,44)" fg:x="19447" fg:w="11"/><text x="45.3864%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="45.1364%" y="981" width="0.0255%" height="15" fill="rgb(214,121,17)" fg:x="19447" fg:w="11"/><text x="45.3864%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.03%)</title><rect x="45.1364%" y="965" width="0.0255%" height="15" fill="rgb(233,64,38)" fg:x="19447" fg:w="11"/><text x="45.3864%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="45.1224%" y="1061" width="0.0441%" height="15" fill="rgb(253,54,19)" fg:x="19441" fg:w="19"/><text x="45.3724%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.04%)</title><rect x="45.1248%" y="1045" width="0.0418%" height="15" fill="rgb(253,94,18)" fg:x="19442" fg:w="18"/><text x="45.3748%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.04%)</title><rect x="45.1248%" y="1029" width="0.0418%" height="15" fill="rgb(227,57,52)" fg:x="19442" fg:w="18"/><text x="45.3748%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.04%)</title><rect x="45.1248%" y="1013" width="0.0418%" height="15" fill="rgb(230,228,50)" fg:x="19442" fg:w="18"/><text x="45.3748%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="45.1758%" y="1045" width="0.0116%" height="15" fill="rgb(217,205,27)" fg:x="19464" fg:w="5"/><text x="45.4258%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (16 samples, 0.04%)</title><rect x="45.1874%" y="1045" width="0.0371%" height="15" fill="rgb(252,71,50)" fg:x="19469" fg:w="16"/><text x="45.4374%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="45.1967%" y="1029" width="0.0279%" height="15" fill="rgb(209,86,4)" fg:x="19473" fg:w="12"/><text x="45.4467%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.02%)</title><rect x="45.2013%" y="1013" width="0.0232%" height="15" fill="rgb(229,94,0)" fg:x="19475" fg:w="10"/><text x="45.4513%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.02%)</title><rect x="45.2013%" y="997" width="0.0232%" height="15" fill="rgb(252,223,21)" fg:x="19475" fg:w="10"/><text x="45.4513%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (9 samples, 0.02%)</title><rect x="45.2246%" y="1045" width="0.0209%" height="15" fill="rgb(230,210,4)" fg:x="19485" fg:w="9"/><text x="45.4746%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="45.2246%" y="1029" width="0.0209%" height="15" fill="rgb(240,149,38)" fg:x="19485" fg:w="9"/><text x="45.4746%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (9 samples, 0.02%)</title><rect x="45.2246%" y="1013" width="0.0209%" height="15" fill="rgb(254,105,20)" fg:x="19485" fg:w="9"/><text x="45.4746%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (7 samples, 0.02%)</title><rect x="45.2292%" y="997" width="0.0162%" height="15" fill="rgb(253,87,46)" fg:x="19487" fg:w="7"/><text x="45.4792%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (5 samples, 0.01%)</title><rect x="45.2338%" y="981" width="0.0116%" height="15" fill="rgb(253,116,33)" fg:x="19489" fg:w="5"/><text x="45.4838%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="45.2663%" y="997" width="0.0279%" height="15" fill="rgb(229,198,5)" fg:x="19503" fg:w="12"/><text x="45.5163%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.02%)</title><rect x="45.2710%" y="981" width="0.0232%" height="15" fill="rgb(242,38,37)" fg:x="19505" fg:w="10"/><text x="45.5210%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.02%)</title><rect x="45.2710%" y="965" width="0.0232%" height="15" fill="rgb(242,69,53)" fg:x="19505" fg:w="10"/><text x="45.5210%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (20 samples, 0.05%)</title><rect x="45.2501%" y="1013" width="0.0464%" height="15" fill="rgb(249,80,16)" fg:x="19496" fg:w="20"/><text x="45.5001%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (20 samples, 0.05%)</title><rect x="45.3081%" y="965" width="0.0464%" height="15" fill="rgb(206,128,11)" fg:x="19521" fg:w="20"/><text x="45.5581%" y="975.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (11 samples, 0.03%)</title><rect x="45.3290%" y="949" width="0.0255%" height="15" fill="rgb(212,35,20)" fg:x="19530" fg:w="11"/><text x="45.5790%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (81 samples, 0.19%)</title><rect x="45.1689%" y="1061" width="0.1880%" height="15" fill="rgb(236,79,13)" fg:x="19461" fg:w="81"/><text x="45.4189%" y="1071.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (48 samples, 0.11%)</title><rect x="45.2454%" y="1045" width="0.1114%" height="15" fill="rgb(233,123,3)" fg:x="19494" fg:w="48"/><text x="45.4954%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (48 samples, 0.11%)</title><rect x="45.2454%" y="1029" width="0.1114%" height="15" fill="rgb(214,93,52)" fg:x="19494" fg:w="48"/><text x="45.4954%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (26 samples, 0.06%)</title><rect x="45.2965%" y="1013" width="0.0603%" height="15" fill="rgb(251,37,40)" fg:x="19516" fg:w="26"/><text x="45.5465%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (25 samples, 0.06%)</title><rect x="45.2988%" y="997" width="0.0580%" height="15" fill="rgb(227,80,54)" fg:x="19517" fg:w="25"/><text x="45.5488%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (24 samples, 0.06%)</title><rect x="45.3011%" y="981" width="0.0557%" height="15" fill="rgb(254,48,11)" fg:x="19518" fg:w="24"/><text x="45.5511%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="45.3592%" y="949" width="0.0116%" height="15" fill="rgb(235,193,26)" fg:x="19543" fg:w="5"/><text x="45.6092%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="45.3592%" y="933" width="0.0116%" height="15" fill="rgb(229,99,21)" fg:x="19543" fg:w="5"/><text x="45.6092%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="45.3592%" y="917" width="0.0116%" height="15" fill="rgb(211,140,41)" fg:x="19543" fg:w="5"/><text x="45.6092%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="45.3592%" y="901" width="0.0116%" height="15" fill="rgb(240,227,30)" fg:x="19543" fg:w="5"/><text x="45.6092%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="45.3569%" y="1045" width="0.0162%" height="15" fill="rgb(215,224,45)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (7 samples, 0.02%)</title><rect x="45.3569%" y="1029" width="0.0162%" height="15" fill="rgb(206,123,31)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="45.3569%" y="1013" width="0.0162%" height="15" fill="rgb(210,138,16)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="45.3569%" y="997" width="0.0162%" height="15" fill="rgb(228,57,28)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="45.3569%" y="981" width="0.0162%" height="15" fill="rgb(242,170,10)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="45.3569%" y="965" width="0.0162%" height="15" fill="rgb(228,214,39)" fg:x="19542" fg:w="7"/><text x="45.6069%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (8 samples, 0.02%)</title><rect x="45.3731%" y="1045" width="0.0186%" height="15" fill="rgb(218,179,33)" fg:x="19549" fg:w="8"/><text x="45.6231%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.02%)</title><rect x="45.3731%" y="1029" width="0.0186%" height="15" fill="rgb(235,193,39)" fg:x="19549" fg:w="8"/><text x="45.6231%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.02%)</title><rect x="45.3731%" y="1013" width="0.0186%" height="15" fill="rgb(219,221,36)" fg:x="19549" fg:w="8"/><text x="45.6231%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.02%)</title><rect x="45.3731%" y="997" width="0.0186%" height="15" fill="rgb(248,218,19)" fg:x="19549" fg:w="8"/><text x="45.6231%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.02%)</title><rect x="45.3731%" y="981" width="0.0186%" height="15" fill="rgb(205,50,9)" fg:x="19549" fg:w="8"/><text x="45.6231%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.03%)</title><rect x="45.3917%" y="1029" width="0.0255%" height="15" fill="rgb(238,81,28)" fg:x="19557" fg:w="11"/><text x="45.6417%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="45.3940%" y="1013" width="0.0232%" height="15" fill="rgb(235,110,19)" fg:x="19558" fg:w="10"/><text x="45.6440%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="45.3940%" y="997" width="0.0232%" height="15" fill="rgb(214,7,14)" fg:x="19558" fg:w="10"/><text x="45.6440%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (10 samples, 0.02%)</title><rect x="45.3940%" y="981" width="0.0232%" height="15" fill="rgb(211,77,3)" fg:x="19558" fg:w="10"/><text x="45.6440%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="45.3940%" y="965" width="0.0232%" height="15" fill="rgb(229,5,9)" fg:x="19558" fg:w="10"/><text x="45.6440%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (12 samples, 0.03%)</title><rect x="45.3917%" y="1045" width="0.0279%" height="15" fill="rgb(225,90,11)" fg:x="19557" fg:w="12"/><text x="45.6417%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (132 samples, 0.31%)</title><rect x="45.1201%" y="1077" width="0.3064%" height="15" fill="rgb(242,56,8)" fg:x="19440" fg:w="132"/><text x="45.3701%" y="1087.50"></text></g><g><title>borrow_graph::paths::append (30 samples, 0.07%)</title><rect x="45.3569%" y="1061" width="0.0696%" height="15" fill="rgb(249,212,39)" fg:x="19542" fg:w="30"/><text x="45.6069%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="45.4265%" y="1077" width="0.0209%" height="15" fill="rgb(236,90,9)" fg:x="19572" fg:w="9"/><text x="45.6765%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (9 samples, 0.02%)</title><rect x="45.4265%" y="1061" width="0.0209%" height="15" fill="rgb(206,88,35)" fg:x="19572" fg:w="9"/><text x="45.6765%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="45.4265%" y="1045" width="0.0209%" height="15" fill="rgb(205,126,30)" fg:x="19572" fg:w="9"/><text x="45.6765%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (8 samples, 0.02%)</title><rect x="45.4288%" y="1029" width="0.0186%" height="15" fill="rgb(230,176,12)" fg:x="19573" fg:w="8"/><text x="45.6788%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="45.4288%" y="1013" width="0.0186%" height="15" fill="rgb(243,19,9)" fg:x="19573" fg:w="8"/><text x="45.6788%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (7 samples, 0.02%)</title><rect x="45.4311%" y="997" width="0.0162%" height="15" fill="rgb(245,171,17)" fg:x="19574" fg:w="7"/><text x="45.6811%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (7 samples, 0.02%)</title><rect x="45.4311%" y="981" width="0.0162%" height="15" fill="rgb(227,52,21)" fg:x="19574" fg:w="7"/><text x="45.6811%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (7 samples, 0.02%)</title><rect x="45.4311%" y="965" width="0.0162%" height="15" fill="rgb(238,69,14)" fg:x="19574" fg:w="7"/><text x="45.6811%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="45.4845%" y="949" width="0.0162%" height="15" fill="rgb(241,156,39)" fg:x="19597" fg:w="7"/><text x="45.7345%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (7 samples, 0.02%)</title><rect x="45.4845%" y="933" width="0.0162%" height="15" fill="rgb(212,227,28)" fg:x="19597" fg:w="7"/><text x="45.7345%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (9 samples, 0.02%)</title><rect x="45.4822%" y="981" width="0.0209%" height="15" fill="rgb(209,118,27)" fg:x="19596" fg:w="9"/><text x="45.7322%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="45.4822%" y="965" width="0.0209%" height="15" fill="rgb(226,102,5)" fg:x="19596" fg:w="9"/><text x="45.7322%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (14 samples, 0.03%)</title><rect x="45.4729%" y="997" width="0.0325%" height="15" fill="rgb(223,34,3)" fg:x="19592" fg:w="14"/><text x="45.7229%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="45.5124%" y="869" width="0.0116%" height="15" fill="rgb(221,81,38)" fg:x="19609" fg:w="5"/><text x="45.7624%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="45.5240%" y="837" width="0.0186%" height="15" fill="rgb(236,219,28)" fg:x="19614" fg:w="8"/><text x="45.7740%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (8 samples, 0.02%)</title><rect x="45.5240%" y="821" width="0.0186%" height="15" fill="rgb(213,200,14)" fg:x="19614" fg:w="8"/><text x="45.7740%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (17 samples, 0.04%)</title><rect x="45.5077%" y="885" width="0.0395%" height="15" fill="rgb(240,33,19)" fg:x="19607" fg:w="17"/><text x="45.7577%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.02%)</title><rect x="45.5240%" y="869" width="0.0232%" height="15" fill="rgb(233,113,27)" fg:x="19614" fg:w="10"/><text x="45.7740%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="45.5240%" y="853" width="0.0232%" height="15" fill="rgb(220,221,18)" fg:x="19614" fg:w="10"/><text x="45.7740%" y="863.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (1,291 samples, 3.00%)</title><rect x="42.5601%" y="1125" width="2.9964%" height="15" fill="rgb(238,92,8)" fg:x="18337" fg:w="1291"/><text x="42.8101%" y="1135.50">byt..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (711 samples, 1.65%)</title><rect x="43.9062%" y="1109" width="1.6502%" height="15" fill="rgb(222,164,16)" fg:x="18917" fg:w="711"/><text x="44.1562%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (711 samples, 1.65%)</title><rect x="43.9062%" y="1093" width="1.6502%" height="15" fill="rgb(241,119,3)" fg:x="18917" fg:w="711"/><text x="44.1562%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (42 samples, 0.10%)</title><rect x="45.4590%" y="1077" width="0.0975%" height="15" fill="rgb(241,44,8)" fg:x="19586" fg:w="42"/><text x="45.7090%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (42 samples, 0.10%)</title><rect x="45.4590%" y="1061" width="0.0975%" height="15" fill="rgb(230,36,40)" fg:x="19586" fg:w="42"/><text x="45.7090%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.10%)</title><rect x="45.4590%" y="1045" width="0.0975%" height="15" fill="rgb(243,16,36)" fg:x="19586" fg:w="42"/><text x="45.7090%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (38 samples, 0.09%)</title><rect x="45.4683%" y="1029" width="0.0882%" height="15" fill="rgb(231,4,26)" fg:x="19590" fg:w="38"/><text x="45.7183%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.09%)</title><rect x="45.4683%" y="1013" width="0.0882%" height="15" fill="rgb(240,9,31)" fg:x="19590" fg:w="38"/><text x="45.7183%" y="1023.50"></text></g><g><title>core::mem::drop (22 samples, 0.05%)</title><rect x="45.5054%" y="997" width="0.0511%" height="15" fill="rgb(207,173,15)" fg:x="19606" fg:w="22"/><text x="45.7554%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (22 samples, 0.05%)</title><rect x="45.5054%" y="981" width="0.0511%" height="15" fill="rgb(224,192,53)" fg:x="19606" fg:w="22"/><text x="45.7554%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (22 samples, 0.05%)</title><rect x="45.5054%" y="965" width="0.0511%" height="15" fill="rgb(223,67,28)" fg:x="19606" fg:w="22"/><text x="45.7554%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (22 samples, 0.05%)</title><rect x="45.5054%" y="949" width="0.0511%" height="15" fill="rgb(211,20,47)" fg:x="19606" fg:w="22"/><text x="45.7554%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.05%)</title><rect x="45.5054%" y="933" width="0.0511%" height="15" fill="rgb(240,228,2)" fg:x="19606" fg:w="22"/><text x="45.7554%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (21 samples, 0.05%)</title><rect x="45.5077%" y="917" width="0.0487%" height="15" fill="rgb(248,151,12)" fg:x="19607" fg:w="21"/><text x="45.7577%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="45.5077%" y="901" width="0.0487%" height="15" fill="rgb(244,8,39)" fg:x="19607" fg:w="21"/><text x="45.7577%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (7 samples, 0.02%)</title><rect x="45.5657%" y="1045" width="0.0162%" height="15" fill="rgb(222,26,8)" fg:x="19632" fg:w="7"/><text x="45.8157%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (6 samples, 0.01%)</title><rect x="45.5681%" y="1029" width="0.0139%" height="15" fill="rgb(213,106,44)" fg:x="19633" fg:w="6"/><text x="45.8181%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (5 samples, 0.01%)</title><rect x="45.5704%" y="1013" width="0.0116%" height="15" fill="rgb(214,129,20)" fg:x="19634" fg:w="5"/><text x="45.8204%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.01%)</title><rect x="45.5890%" y="1045" width="0.0139%" height="15" fill="rgb(212,32,13)" fg:x="19642" fg:w="6"/><text x="45.8390%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.01%)</title><rect x="45.5890%" y="1029" width="0.0139%" height="15" fill="rgb(208,168,33)" fg:x="19642" fg:w="6"/><text x="45.8390%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.01%)</title><rect x="45.5890%" y="1013" width="0.0139%" height="15" fill="rgb(231,207,8)" fg:x="19642" fg:w="6"/><text x="45.8390%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (6 samples, 0.01%)</title><rect x="45.5890%" y="997" width="0.0139%" height="15" fill="rgb(235,219,23)" fg:x="19642" fg:w="6"/><text x="45.8390%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (5 samples, 0.01%)</title><rect x="45.5913%" y="981" width="0.0116%" height="15" fill="rgb(226,216,26)" fg:x="19643" fg:w="5"/><text x="45.8413%" y="991.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (6 samples, 0.01%)</title><rect x="45.6122%" y="917" width="0.0139%" height="15" fill="rgb(239,137,16)" fg:x="19652" fg:w="6"/><text x="45.8622%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (10 samples, 0.02%)</title><rect x="45.6098%" y="997" width="0.0232%" height="15" fill="rgb(207,12,36)" fg:x="19651" fg:w="10"/><text x="45.8598%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (10 samples, 0.02%)</title><rect x="45.6098%" y="981" width="0.0232%" height="15" fill="rgb(210,214,24)" fg:x="19651" fg:w="10"/><text x="45.8598%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="45.6122%" y="965" width="0.0209%" height="15" fill="rgb(206,56,30)" fg:x="19652" fg:w="9"/><text x="45.8622%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (9 samples, 0.02%)</title><rect x="45.6122%" y="949" width="0.0209%" height="15" fill="rgb(228,143,26)" fg:x="19652" fg:w="9"/><text x="45.8622%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9 samples, 0.02%)</title><rect x="45.6122%" y="933" width="0.0209%" height="15" fill="rgb(216,218,46)" fg:x="19652" fg:w="9"/><text x="45.8622%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (24 samples, 0.06%)</title><rect x="45.6052%" y="1013" width="0.0557%" height="15" fill="rgb(206,6,19)" fg:x="19649" fg:w="24"/><text x="45.8552%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="45.6331%" y="997" width="0.0279%" height="15" fill="rgb(239,177,51)" fg:x="19661" fg:w="12"/><text x="45.8831%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.03%)</title><rect x="45.6331%" y="981" width="0.0279%" height="15" fill="rgb(216,55,25)" fg:x="19661" fg:w="12"/><text x="45.8831%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.03%)</title><rect x="45.6354%" y="965" width="0.0255%" height="15" fill="rgb(231,163,29)" fg:x="19662" fg:w="11"/><text x="45.8854%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (7 samples, 0.02%)</title><rect x="45.6702%" y="965" width="0.0162%" height="15" fill="rgb(232,149,50)" fg:x="19677" fg:w="7"/><text x="45.9202%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (37 samples, 0.09%)</title><rect x="45.6029%" y="1045" width="0.0859%" height="15" fill="rgb(223,142,48)" fg:x="19648" fg:w="37"/><text x="45.8529%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (37 samples, 0.09%)</title><rect x="45.6029%" y="1029" width="0.0859%" height="15" fill="rgb(245,83,23)" fg:x="19648" fg:w="37"/><text x="45.8529%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (12 samples, 0.03%)</title><rect x="45.6609%" y="1013" width="0.0279%" height="15" fill="rgb(224,63,2)" fg:x="19673" fg:w="12"/><text x="45.9109%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (12 samples, 0.03%)</title><rect x="45.6609%" y="997" width="0.0279%" height="15" fill="rgb(218,65,53)" fg:x="19673" fg:w="12"/><text x="45.9109%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.02%)</title><rect x="45.6702%" y="981" width="0.0186%" height="15" fill="rgb(221,84,29)" fg:x="19677" fg:w="8"/><text x="45.9202%" y="991.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_resource_borrow (58 samples, 0.13%)</title><rect x="45.5565%" y="1109" width="0.1346%" height="15" fill="rgb(234,0,32)" fg:x="19628" fg:w="58"/><text x="45.8065%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_weak_field_borrow (58 samples, 0.13%)</title><rect x="45.5565%" y="1093" width="0.1346%" height="15" fill="rgb(206,20,16)" fg:x="19628" fg:w="58"/><text x="45.8065%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (55 samples, 0.13%)</title><rect x="45.5634%" y="1077" width="0.1277%" height="15" fill="rgb(244,172,18)" fg:x="19631" fg:w="55"/><text x="45.8134%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (54 samples, 0.13%)</title><rect x="45.5657%" y="1061" width="0.1253%" height="15" fill="rgb(254,133,1)" fg:x="19632" fg:w="54"/><text x="45.8157%" y="1071.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_global (69 samples, 0.16%)</title><rect x="45.5565%" y="1125" width="0.1601%" height="15" fill="rgb(222,206,41)" fg:x="19628" fg:w="69"/><text x="45.8065%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (5 samples, 0.01%)</title><rect x="45.7050%" y="1109" width="0.0116%" height="15" fill="rgb(212,3,42)" fg:x="19692" fg:w="5"/><text x="45.9550%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (5 samples, 0.01%)</title><rect x="45.7050%" y="1093" width="0.0116%" height="15" fill="rgb(241,11,4)" fg:x="19692" fg:w="5"/><text x="45.9550%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="45.7050%" y="1077" width="0.0116%" height="15" fill="rgb(205,19,26)" fg:x="19692" fg:w="5"/><text x="45.9550%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (5 samples, 0.01%)</title><rect x="45.7259%" y="1077" width="0.0116%" height="15" fill="rgb(210,179,32)" fg:x="19701" fg:w="5"/><text x="45.9759%" y="1087.50"></text></g><g><title>alloc::slice::hack::into_vec (5 samples, 0.01%)</title><rect x="45.7259%" y="1061" width="0.0116%" height="15" fill="rgb(227,116,49)" fg:x="19701" fg:w="5"/><text x="45.9759%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (5 samples, 0.01%)</title><rect x="45.7770%" y="1061" width="0.0116%" height="15" fill="rgb(211,146,6)" fg:x="19723" fg:w="5"/><text x="46.0270%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (7 samples, 0.02%)</title><rect x="45.8002%" y="1013" width="0.0162%" height="15" fill="rgb(219,44,39)" fg:x="19733" fg:w="7"/><text x="46.0502%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.02%)</title><rect x="45.8002%" y="997" width="0.0162%" height="15" fill="rgb(234,128,11)" fg:x="19733" fg:w="7"/><text x="46.0502%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="45.8002%" y="981" width="0.0162%" height="15" fill="rgb(220,183,53)" fg:x="19733" fg:w="7"/><text x="46.0502%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (7 samples, 0.02%)</title><rect x="45.8002%" y="965" width="0.0162%" height="15" fill="rgb(213,219,32)" fg:x="19733" fg:w="7"/><text x="46.0502%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (6 samples, 0.01%)</title><rect x="45.8025%" y="949" width="0.0139%" height="15" fill="rgb(232,156,16)" fg:x="19734" fg:w="6"/><text x="46.0525%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (6 samples, 0.01%)</title><rect x="45.8025%" y="933" width="0.0139%" height="15" fill="rgb(246,135,34)" fg:x="19734" fg:w="6"/><text x="46.0525%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (15 samples, 0.03%)</title><rect x="45.7955%" y="1029" width="0.0348%" height="15" fill="rgb(241,99,0)" fg:x="19731" fg:w="15"/><text x="46.0455%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="45.8187%" y="1013" width="0.0116%" height="15" fill="rgb(222,103,45)" fg:x="19741" fg:w="5"/><text x="46.0687%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="45.8187%" y="997" width="0.0116%" height="15" fill="rgb(212,57,4)" fg:x="19741" fg:w="5"/><text x="46.0687%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="45.8187%" y="981" width="0.0116%" height="15" fill="rgb(215,68,47)" fg:x="19741" fg:w="5"/><text x="46.0687%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (5 samples, 0.01%)</title><rect x="45.8303%" y="1029" width="0.0116%" height="15" fill="rgb(230,84,2)" fg:x="19746" fg:w="5"/><text x="46.0803%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.01%)</title><rect x="45.8419%" y="1029" width="0.0139%" height="15" fill="rgb(220,102,14)" fg:x="19751" fg:w="6"/><text x="46.0919%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="45.8443%" y="1013" width="0.0116%" height="15" fill="rgb(240,10,32)" fg:x="19752" fg:w="5"/><text x="46.0943%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="45.8443%" y="997" width="0.0116%" height="15" fill="rgb(215,47,27)" fg:x="19752" fg:w="5"/><text x="46.0943%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (9 samples, 0.02%)</title><rect x="45.8698%" y="981" width="0.0209%" height="15" fill="rgb(233,188,43)" fg:x="19763" fg:w="9"/><text x="46.1198%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (9 samples, 0.02%)</title><rect x="45.8698%" y="965" width="0.0209%" height="15" fill="rgb(253,190,1)" fg:x="19763" fg:w="9"/><text x="46.1198%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="45.8721%" y="949" width="0.0186%" height="15" fill="rgb(206,114,52)" fg:x="19764" fg:w="8"/><text x="46.1221%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (8 samples, 0.02%)</title><rect x="45.8721%" y="933" width="0.0186%" height="15" fill="rgb(233,120,37)" fg:x="19764" fg:w="8"/><text x="46.1221%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.02%)</title><rect x="45.8721%" y="917" width="0.0186%" height="15" fill="rgb(214,52,39)" fg:x="19764" fg:w="8"/><text x="46.1221%" y="927.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="45.8721%" y="901" width="0.0186%" height="15" fill="rgb(223,80,29)" fg:x="19764" fg:w="8"/><text x="46.1221%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (7 samples, 0.02%)</title><rect x="45.8744%" y="885" width="0.0162%" height="15" fill="rgb(230,101,40)" fg:x="19765" fg:w="7"/><text x="46.1244%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.02%)</title><rect x="45.8744%" y="869" width="0.0162%" height="15" fill="rgb(219,211,8)" fg:x="19765" fg:w="7"/><text x="46.1244%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="45.8791%" y="853" width="0.0116%" height="15" fill="rgb(252,126,28)" fg:x="19767" fg:w="5"/><text x="46.1291%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="45.9023%" y="933" width="0.0139%" height="15" fill="rgb(215,56,38)" fg:x="19777" fg:w="6"/><text x="46.1523%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (25 samples, 0.06%)</title><rect x="45.8628%" y="997" width="0.0580%" height="15" fill="rgb(249,55,44)" fg:x="19760" fg:w="25"/><text x="46.1128%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.03%)</title><rect x="45.8907%" y="981" width="0.0302%" height="15" fill="rgb(220,221,32)" fg:x="19772" fg:w="13"/><text x="46.1407%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.03%)</title><rect x="45.8953%" y="965" width="0.0255%" height="15" fill="rgb(212,216,41)" fg:x="19774" fg:w="11"/><text x="46.1453%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.02%)</title><rect x="45.8976%" y="949" width="0.0232%" height="15" fill="rgb(228,213,43)" fg:x="19775" fg:w="10"/><text x="46.1476%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (68 samples, 0.16%)</title><rect x="45.7932%" y="1061" width="0.1578%" height="15" fill="rgb(211,31,26)" fg:x="19730" fg:w="68"/><text x="46.0432%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (68 samples, 0.16%)</title><rect x="45.7932%" y="1045" width="0.1578%" height="15" fill="rgb(229,202,19)" fg:x="19730" fg:w="68"/><text x="46.0432%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (41 samples, 0.10%)</title><rect x="45.8559%" y="1029" width="0.0952%" height="15" fill="rgb(229,105,46)" fg:x="19757" fg:w="41"/><text x="46.1059%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (38 samples, 0.09%)</title><rect x="45.8628%" y="1013" width="0.0882%" height="15" fill="rgb(235,108,1)" fg:x="19760" fg:w="38"/><text x="46.1128%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (13 samples, 0.03%)</title><rect x="45.9209%" y="997" width="0.0302%" height="15" fill="rgb(245,111,35)" fg:x="19785" fg:w="13"/><text x="46.1709%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (12 samples, 0.03%)</title><rect x="45.9232%" y="981" width="0.0279%" height="15" fill="rgb(219,185,31)" fg:x="19786" fg:w="12"/><text x="46.1732%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (10 samples, 0.02%)</title><rect x="45.9278%" y="965" width="0.0232%" height="15" fill="rgb(214,4,43)" fg:x="19788" fg:w="10"/><text x="46.1778%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.02%)</title><rect x="45.9278%" y="949" width="0.0232%" height="15" fill="rgb(235,227,40)" fg:x="19788" fg:w="10"/><text x="46.1778%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="45.9533%" y="1029" width="0.0162%" height="15" fill="rgb(230,88,30)" fg:x="19799" fg:w="7"/><text x="46.2033%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="45.9696%" y="997" width="0.0139%" height="15" fill="rgb(216,217,1)" fg:x="19806" fg:w="6"/><text x="46.2196%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (5 samples, 0.01%)</title><rect x="45.9951%" y="949" width="0.0116%" height="15" fill="rgb(248,139,50)" fg:x="19817" fg:w="5"/><text x="46.2451%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (6 samples, 0.01%)</title><rect x="45.9951%" y="965" width="0.0139%" height="15" fill="rgb(233,1,21)" fg:x="19817" fg:w="6"/><text x="46.2451%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (5 samples, 0.01%)</title><rect x="46.0439%" y="885" width="0.0116%" height="15" fill="rgb(215,183,12)" fg:x="19838" fg:w="5"/><text x="46.2939%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="46.0439%" y="869" width="0.0116%" height="15" fill="rgb(229,104,42)" fg:x="19838" fg:w="5"/><text x="46.2939%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="46.0555%" y="885" width="0.0116%" height="15" fill="rgb(243,34,48)" fg:x="19843" fg:w="5"/><text x="46.3055%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="46.0555%" y="869" width="0.0116%" height="15" fill="rgb(239,11,44)" fg:x="19843" fg:w="5"/><text x="46.3055%" y="879.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (55 samples, 0.13%)</title><rect x="45.9510%" y="1045" width="0.1277%" height="15" fill="rgb(231,98,35)" fg:x="19798" fg:w="55"/><text x="46.2010%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (47 samples, 0.11%)</title><rect x="45.9696%" y="1029" width="0.1091%" height="15" fill="rgb(233,28,25)" fg:x="19806" fg:w="47"/><text x="46.2196%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.11%)</title><rect x="45.9696%" y="1013" width="0.1091%" height="15" fill="rgb(234,123,11)" fg:x="19806" fg:w="47"/><text x="46.2196%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (41 samples, 0.10%)</title><rect x="45.9835%" y="997" width="0.0952%" height="15" fill="rgb(220,69,3)" fg:x="19812" fg:w="41"/><text x="46.2335%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (41 samples, 0.10%)</title><rect x="45.9835%" y="981" width="0.0952%" height="15" fill="rgb(214,64,36)" fg:x="19812" fg:w="41"/><text x="46.2335%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (30 samples, 0.07%)</title><rect x="46.0091%" y="965" width="0.0696%" height="15" fill="rgb(211,138,32)" fg:x="19823" fg:w="30"/><text x="46.2591%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.06%)</title><rect x="46.0230%" y="949" width="0.0557%" height="15" fill="rgb(213,118,47)" fg:x="19829" fg:w="24"/><text x="46.2730%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (15 samples, 0.03%)</title><rect x="46.0439%" y="933" width="0.0348%" height="15" fill="rgb(243,124,49)" fg:x="19838" fg:w="15"/><text x="46.2939%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (15 samples, 0.03%)</title><rect x="46.0439%" y="917" width="0.0348%" height="15" fill="rgb(221,30,28)" fg:x="19838" fg:w="15"/><text x="46.2939%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (15 samples, 0.03%)</title><rect x="46.0439%" y="901" width="0.0348%" height="15" fill="rgb(246,37,13)" fg:x="19838" fg:w="15"/><text x="46.2939%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (5 samples, 0.01%)</title><rect x="46.0671%" y="885" width="0.0116%" height="15" fill="rgb(249,66,14)" fg:x="19848" fg:w="5"/><text x="46.3171%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (8 samples, 0.02%)</title><rect x="46.0787%" y="1029" width="0.0186%" height="15" fill="rgb(213,166,5)" fg:x="19853" fg:w="8"/><text x="46.3287%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="46.0833%" y="1013" width="0.0139%" height="15" fill="rgb(221,66,24)" fg:x="19855" fg:w="6"/><text x="46.3333%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (9 samples, 0.02%)</title><rect x="46.1019%" y="917" width="0.0209%" height="15" fill="rgb(210,132,17)" fg:x="19863" fg:w="9"/><text x="46.3519%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="46.0972%" y="997" width="0.0302%" height="15" fill="rgb(243,202,5)" fg:x="19861" fg:w="13"/><text x="46.3472%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="46.0996%" y="981" width="0.0279%" height="15" fill="rgb(233,70,48)" fg:x="19862" fg:w="12"/><text x="46.3496%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="46.1019%" y="965" width="0.0255%" height="15" fill="rgb(238,41,26)" fg:x="19863" fg:w="11"/><text x="46.3519%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="46.1019%" y="949" width="0.0255%" height="15" fill="rgb(241,19,31)" fg:x="19863" fg:w="11"/><text x="46.3519%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="46.1019%" y="933" width="0.0255%" height="15" fill="rgb(214,76,10)" fg:x="19863" fg:w="11"/><text x="46.3519%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (5 samples, 0.01%)</title><rect x="46.1321%" y="965" width="0.0116%" height="15" fill="rgb(254,202,22)" fg:x="19876" fg:w="5"/><text x="46.3821%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="46.1321%" y="949" width="0.0116%" height="15" fill="rgb(214,72,24)" fg:x="19876" fg:w="5"/><text x="46.3821%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="46.1530%" y="933" width="0.0139%" height="15" fill="rgb(221,92,46)" fg:x="19885" fg:w="6"/><text x="46.4030%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="46.1669%" y="933" width="0.0139%" height="15" fill="rgb(246,13,50)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="46.1669%" y="917" width="0.0139%" height="15" fill="rgb(240,165,38)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="46.1669%" y="901" width="0.0139%" height="15" fill="rgb(241,24,51)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="46.1669%" y="885" width="0.0139%" height="15" fill="rgb(227,51,44)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="46.1669%" y="869" width="0.0139%" height="15" fill="rgb(231,121,3)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="46.1669%" y="853" width="0.0139%" height="15" fill="rgb(245,3,41)" fg:x="19891" fg:w="6"/><text x="46.4169%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (13 samples, 0.03%)</title><rect x="46.1831%" y="885" width="0.0302%" height="15" fill="rgb(214,13,26)" fg:x="19898" fg:w="13"/><text x="46.4331%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="46.1854%" y="869" width="0.0279%" height="15" fill="rgb(252,75,11)" fg:x="19899" fg:w="12"/><text x="46.4354%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.03%)</title><rect x="46.1854%" y="853" width="0.0279%" height="15" fill="rgb(218,226,17)" fg:x="19899" fg:w="12"/><text x="46.4354%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.03%)</title><rect x="46.1878%" y="837" width="0.0255%" height="15" fill="rgb(248,89,38)" fg:x="19900" fg:w="11"/><text x="46.4378%" y="847.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (59 samples, 0.14%)</title><rect x="46.0787%" y="1045" width="0.1369%" height="15" fill="rgb(237,73,46)" fg:x="19853" fg:w="59"/><text x="46.3287%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (51 samples, 0.12%)</title><rect x="46.0972%" y="1029" width="0.1184%" height="15" fill="rgb(242,78,33)" fg:x="19861" fg:w="51"/><text x="46.3472%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51 samples, 0.12%)</title><rect x="46.0972%" y="1013" width="0.1184%" height="15" fill="rgb(235,60,3)" fg:x="19861" fg:w="51"/><text x="46.3472%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (38 samples, 0.09%)</title><rect x="46.1274%" y="997" width="0.0882%" height="15" fill="rgb(216,172,19)" fg:x="19874" fg:w="38"/><text x="46.3774%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (37 samples, 0.09%)</title><rect x="46.1297%" y="981" width="0.0859%" height="15" fill="rgb(227,6,42)" fg:x="19875" fg:w="37"/><text x="46.3797%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (29 samples, 0.07%)</title><rect x="46.1483%" y="965" width="0.0673%" height="15" fill="rgb(223,207,42)" fg:x="19883" fg:w="29"/><text x="46.3983%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.07%)</title><rect x="46.1483%" y="949" width="0.0673%" height="15" fill="rgb(246,138,30)" fg:x="19883" fg:w="29"/><text x="46.3983%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (14 samples, 0.03%)</title><rect x="46.1831%" y="933" width="0.0325%" height="15" fill="rgb(251,199,47)" fg:x="19898" fg:w="14"/><text x="46.4331%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (14 samples, 0.03%)</title><rect x="46.1831%" y="917" width="0.0325%" height="15" fill="rgb(228,218,44)" fg:x="19898" fg:w="14"/><text x="46.4331%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (14 samples, 0.03%)</title><rect x="46.1831%" y="901" width="0.0325%" height="15" fill="rgb(220,68,6)" fg:x="19898" fg:w="14"/><text x="46.4331%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="46.2272%" y="933" width="0.0162%" height="15" fill="rgb(240,60,26)" fg:x="19917" fg:w="7"/><text x="46.4772%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="46.2249%" y="997" width="0.0209%" height="15" fill="rgb(211,200,19)" fg:x="19916" fg:w="9"/><text x="46.4749%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="46.2249%" y="981" width="0.0209%" height="15" fill="rgb(242,145,30)" fg:x="19916" fg:w="9"/><text x="46.4749%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="46.2249%" y="965" width="0.0209%" height="15" fill="rgb(225,64,13)" fg:x="19916" fg:w="9"/><text x="46.4749%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="46.2249%" y="949" width="0.0209%" height="15" fill="rgb(218,103,35)" fg:x="19916" fg:w="9"/><text x="46.4749%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="46.2620%" y="901" width="0.0139%" height="15" fill="rgb(216,93,46)" fg:x="19932" fg:w="6"/><text x="46.5120%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="46.2620%" y="885" width="0.0139%" height="15" fill="rgb(225,159,27)" fg:x="19932" fg:w="6"/><text x="46.5120%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="46.2620%" y="869" width="0.0139%" height="15" fill="rgb(225,204,11)" fg:x="19932" fg:w="6"/><text x="46.5120%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="46.2620%" y="853" width="0.0139%" height="15" fill="rgb(205,56,4)" fg:x="19932" fg:w="6"/><text x="46.5120%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="46.2597%" y="933" width="0.0209%" height="15" fill="rgb(206,6,35)" fg:x="19931" fg:w="9"/><text x="46.5097%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="46.2620%" y="917" width="0.0186%" height="15" fill="rgb(247,73,52)" fg:x="19932" fg:w="8"/><text x="46.5120%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (143 samples, 0.33%)</title><rect x="45.9510%" y="1061" width="0.3319%" height="15" fill="rgb(246,97,4)" fg:x="19798" fg:w="143"/><text x="46.2010%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (29 samples, 0.07%)</title><rect x="46.2156%" y="1045" width="0.0673%" height="15" fill="rgb(212,37,15)" fg:x="19912" fg:w="29"/><text x="46.4656%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.06%)</title><rect x="46.2203%" y="1029" width="0.0627%" height="15" fill="rgb(208,130,40)" fg:x="19914" fg:w="27"/><text x="46.4703%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.06%)</title><rect x="46.2226%" y="1013" width="0.0603%" height="15" fill="rgb(236,55,29)" fg:x="19915" fg:w="26"/><text x="46.4726%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.04%)</title><rect x="46.2458%" y="997" width="0.0371%" height="15" fill="rgb(209,156,45)" fg:x="19925" fg:w="16"/><text x="46.4958%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (16 samples, 0.04%)</title><rect x="46.2458%" y="981" width="0.0371%" height="15" fill="rgb(249,107,4)" fg:x="19925" fg:w="16"/><text x="46.4958%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.03%)</title><rect x="46.2504%" y="965" width="0.0325%" height="15" fill="rgb(227,7,13)" fg:x="19927" fg:w="14"/><text x="46.5004%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.03%)</title><rect x="46.2551%" y="949" width="0.0279%" height="15" fill="rgb(250,129,14)" fg:x="19929" fg:w="12"/><text x="46.5051%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(borrow_graph::references::RefID,borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt;&gt; (5 samples, 0.01%)</title><rect x="46.2945%" y="1061" width="0.0116%" height="15" fill="rgb(229,92,13)" fg:x="19946" fg:w="5"/><text x="46.5445%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="46.2945%" y="1045" width="0.0116%" height="15" fill="rgb(245,98,39)" fg:x="19946" fg:w="5"/><text x="46.5445%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_local_borrow (253 samples, 0.59%)</title><rect x="45.7212%" y="1109" width="0.5872%" height="15" fill="rgb(234,135,48)" fg:x="19699" fg:w="253"/><text x="45.9712%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_field_borrow (253 samples, 0.59%)</title><rect x="45.7212%" y="1093" width="0.5872%" height="15" fill="rgb(230,98,28)" fg:x="19699" fg:w="253"/><text x="45.9712%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (246 samples, 0.57%)</title><rect x="45.7375%" y="1077" width="0.5710%" height="15" fill="rgb(223,121,0)" fg:x="19706" fg:w="246"/><text x="45.9875%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (10 samples, 0.02%)</title><rect x="46.3085%" y="1077" width="0.0232%" height="15" fill="rgb(234,173,33)" fg:x="19952" fg:w="10"/><text x="46.5585%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_mutably_borrowed (12 samples, 0.03%)</title><rect x="46.3085%" y="1109" width="0.0279%" height="15" fill="rgb(245,47,8)" fg:x="19952" fg:w="12"/><text x="46.5585%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (12 samples, 0.03%)</title><rect x="46.3085%" y="1093" width="0.0279%" height="15" fill="rgb(205,17,20)" fg:x="19952" fg:w="12"/><text x="46.5585%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="46.3386%" y="1061" width="0.0116%" height="15" fill="rgb(232,151,16)" fg:x="19965" fg:w="5"/><text x="46.5886%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="46.3386%" y="1045" width="0.0116%" height="15" fill="rgb(208,30,32)" fg:x="19965" fg:w="5"/><text x="46.5886%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_loc (278 samples, 0.65%)</title><rect x="45.7166%" y="1125" width="0.6452%" height="15" fill="rgb(254,26,3)" fg:x="19697" fg:w="278"/><text x="45.9666%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (11 samples, 0.03%)</title><rect x="46.3363%" y="1109" width="0.0255%" height="15" fill="rgb(240,177,30)" fg:x="19964" fg:w="11"/><text x="46.5863%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (10 samples, 0.02%)</title><rect x="46.3386%" y="1093" width="0.0232%" height="15" fill="rgb(248,76,44)" fg:x="19965" fg:w="10"/><text x="46.5886%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="46.3386%" y="1077" width="0.0232%" height="15" fill="rgb(241,186,54)" fg:x="19965" fg:w="10"/><text x="46.5886%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="46.3502%" y="1061" width="0.0116%" height="15" fill="rgb(249,171,29)" fg:x="19970" fg:w="5"/><text x="46.6002%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="46.3502%" y="1045" width="0.0116%" height="15" fill="rgb(237,151,44)" fg:x="19970" fg:w="5"/><text x="46.6002%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::comparison (13 samples, 0.03%)</title><rect x="46.3618%" y="1125" width="0.0302%" height="15" fill="rgb(228,174,30)" fg:x="19975" fg:w="13"/><text x="46.6118%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (13 samples, 0.03%)</title><rect x="46.3618%" y="1109" width="0.0302%" height="15" fill="rgb(252,14,37)" fg:x="19975" fg:w="13"/><text x="46.6118%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (13 samples, 0.03%)</title><rect x="46.3618%" y="1093" width="0.0302%" height="15" fill="rgb(207,111,40)" fg:x="19975" fg:w="13"/><text x="46.6118%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (10 samples, 0.02%)</title><rect x="46.3688%" y="1077" width="0.0232%" height="15" fill="rgb(248,171,54)" fg:x="19978" fg:w="10"/><text x="46.6188%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="46.4570%" y="1045" width="0.0162%" height="15" fill="rgb(211,127,2)" fg:x="20016" fg:w="7"/><text x="46.7070%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="46.4616%" y="1029" width="0.0116%" height="15" fill="rgb(236,87,47)" fg:x="20018" fg:w="5"/><text x="46.7116%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.06%)</title><rect x="46.4315%" y="1093" width="0.0627%" height="15" fill="rgb(223,190,45)" fg:x="20005" fg:w="27"/><text x="46.6815%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.06%)</title><rect x="46.4361%" y="1077" width="0.0580%" height="15" fill="rgb(215,5,16)" fg:x="20007" fg:w="25"/><text x="46.6861%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.05%)</title><rect x="46.4408%" y="1061" width="0.0534%" height="15" fill="rgb(252,82,33)" fg:x="20009" fg:w="23"/><text x="46.6908%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.02%)</title><rect x="46.4779%" y="1045" width="0.0162%" height="15" fill="rgb(247,213,44)" fg:x="20025" fg:w="7"/><text x="46.7279%" y="1055.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="46.4779%" y="1029" width="0.0162%" height="15" fill="rgb(205,196,44)" fg:x="20025" fg:w="7"/><text x="46.7279%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (42 samples, 0.10%)</title><rect x="46.3990%" y="1109" width="0.0975%" height="15" fill="rgb(237,96,54)" fg:x="19991" fg:w="42"/><text x="46.6490%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (16 samples, 0.04%)</title><rect x="46.4965%" y="1109" width="0.0371%" height="15" fill="rgb(230,113,34)" fg:x="20033" fg:w="16"/><text x="46.7465%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (16 samples, 0.04%)</title><rect x="46.4965%" y="1093" width="0.0371%" height="15" fill="rgb(221,224,12)" fg:x="20033" fg:w="16"/><text x="46.7465%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.03%)</title><rect x="46.5011%" y="1077" width="0.0325%" height="15" fill="rgb(219,112,44)" fg:x="20035" fg:w="14"/><text x="46.7511%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.03%)</title><rect x="46.5011%" y="1061" width="0.0325%" height="15" fill="rgb(210,31,13)" fg:x="20035" fg:w="14"/><text x="46.7511%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="46.5034%" y="1045" width="0.0302%" height="15" fill="rgb(230,25,16)" fg:x="20036" fg:w="13"/><text x="46.7534%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="46.5707%" y="1061" width="0.0139%" height="15" fill="rgb(246,108,53)" fg:x="20065" fg:w="6"/><text x="46.8207%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (8 samples, 0.02%)</title><rect x="46.5986%" y="1061" width="0.0186%" height="15" fill="rgb(241,172,50)" fg:x="20077" fg:w="8"/><text x="46.8486%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="46.6055%" y="1045" width="0.0116%" height="15" fill="rgb(235,141,10)" fg:x="20080" fg:w="5"/><text x="46.8555%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="46.6055%" y="1029" width="0.0116%" height="15" fill="rgb(220,174,43)" fg:x="20080" fg:w="5"/><text x="46.8555%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="46.6055%" y="1013" width="0.0116%" height="15" fill="rgb(215,181,40)" fg:x="20080" fg:w="5"/><text x="46.8555%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (9 samples, 0.02%)</title><rect x="46.6427%" y="1029" width="0.0209%" height="15" fill="rgb(230,97,2)" fg:x="20096" fg:w="9"/><text x="46.8927%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="46.6520%" y="1013" width="0.0116%" height="15" fill="rgb(211,25,27)" fg:x="20100" fg:w="5"/><text x="46.9020%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="46.6520%" y="997" width="0.0116%" height="15" fill="rgb(230,87,26)" fg:x="20100" fg:w="5"/><text x="46.9020%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (10 samples, 0.02%)</title><rect x="46.6636%" y="1029" width="0.0232%" height="15" fill="rgb(227,160,17)" fg:x="20105" fg:w="10"/><text x="46.9136%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="46.6705%" y="1013" width="0.0162%" height="15" fill="rgb(244,85,34)" fg:x="20108" fg:w="7"/><text x="46.9205%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (7 samples, 0.02%)</title><rect x="46.6705%" y="997" width="0.0162%" height="15" fill="rgb(207,70,0)" fg:x="20108" fg:w="7"/><text x="46.9205%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.01%)</title><rect x="46.6729%" y="981" width="0.0139%" height="15" fill="rgb(223,129,7)" fg:x="20109" fg:w="6"/><text x="46.9229%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (9 samples, 0.02%)</title><rect x="46.6868%" y="1029" width="0.0209%" height="15" fill="rgb(246,105,7)" fg:x="20115" fg:w="9"/><text x="46.9368%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="46.6868%" y="1013" width="0.0209%" height="15" fill="rgb(215,154,42)" fg:x="20115" fg:w="9"/><text x="46.9368%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.02%)</title><rect x="46.6914%" y="997" width="0.0162%" height="15" fill="rgb(220,215,30)" fg:x="20117" fg:w="7"/><text x="46.9414%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="46.7425%" y="837" width="0.0139%" height="15" fill="rgb(228,81,51)" fg:x="20139" fg:w="6"/><text x="46.9925%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="46.7425%" y="821" width="0.0139%" height="15" fill="rgb(247,71,54)" fg:x="20139" fg:w="6"/><text x="46.9925%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.03%)</title><rect x="46.7378%" y="853" width="0.0255%" height="15" fill="rgb(234,176,34)" fg:x="20137" fg:w="11"/><text x="46.9878%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (13 samples, 0.03%)</title><rect x="46.7355%" y="885" width="0.0302%" height="15" fill="rgb(241,103,54)" fg:x="20136" fg:w="13"/><text x="46.9855%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13 samples, 0.03%)</title><rect x="46.7355%" y="869" width="0.0302%" height="15" fill="rgb(228,22,34)" fg:x="20136" fg:w="13"/><text x="46.9855%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (17 samples, 0.04%)</title><rect x="46.7332%" y="901" width="0.0395%" height="15" fill="rgb(241,179,48)" fg:x="20135" fg:w="17"/><text x="46.9832%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (23 samples, 0.05%)</title><rect x="46.7262%" y="981" width="0.0534%" height="15" fill="rgb(235,167,37)" fg:x="20132" fg:w="23"/><text x="46.9762%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (22 samples, 0.05%)</title><rect x="46.7286%" y="965" width="0.0511%" height="15" fill="rgb(213,109,30)" fg:x="20133" fg:w="22"/><text x="46.9786%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.05%)</title><rect x="46.7332%" y="949" width="0.0464%" height="15" fill="rgb(222,172,16)" fg:x="20135" fg:w="20"/><text x="46.9832%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (20 samples, 0.05%)</title><rect x="46.7332%" y="933" width="0.0464%" height="15" fill="rgb(233,192,5)" fg:x="20135" fg:w="20"/><text x="46.9832%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (20 samples, 0.05%)</title><rect x="46.7332%" y="917" width="0.0464%" height="15" fill="rgb(247,189,41)" fg:x="20135" fg:w="20"/><text x="46.9832%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.03%)</title><rect x="46.7796%" y="981" width="0.0348%" height="15" fill="rgb(218,134,47)" fg:x="20155" fg:w="15"/><text x="47.0296%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.03%)</title><rect x="46.7819%" y="965" width="0.0325%" height="15" fill="rgb(216,29,3)" fg:x="20156" fg:w="14"/><text x="47.0319%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="46.7843%" y="949" width="0.0302%" height="15" fill="rgb(246,140,12)" fg:x="20157" fg:w="13"/><text x="47.0343%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (42 samples, 0.10%)</title><rect x="46.7193%" y="997" width="0.0975%" height="15" fill="rgb(230,136,11)" fg:x="20129" fg:w="42"/><text x="46.9693%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="46.8376%" y="933" width="0.0139%" height="15" fill="rgb(247,22,47)" fg:x="20180" fg:w="6"/><text x="47.0876%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (16 samples, 0.04%)</title><rect x="46.8284%" y="949" width="0.0371%" height="15" fill="rgb(218,84,22)" fg:x="20176" fg:w="16"/><text x="47.0784%" y="959.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (6 samples, 0.01%)</title><rect x="46.8516%" y="933" width="0.0139%" height="15" fill="rgb(216,87,39)" fg:x="20186" fg:w="6"/><text x="47.1016%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (68 samples, 0.16%)</title><rect x="46.7123%" y="1013" width="0.1578%" height="15" fill="rgb(221,178,8)" fg:x="20126" fg:w="68"/><text x="46.9623%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (23 samples, 0.05%)</title><rect x="46.8168%" y="997" width="0.0534%" height="15" fill="rgb(230,42,11)" fg:x="20171" fg:w="23"/><text x="47.0668%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.05%)</title><rect x="46.8168%" y="981" width="0.0534%" height="15" fill="rgb(237,229,4)" fg:x="20171" fg:w="23"/><text x="47.0668%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (20 samples, 0.05%)</title><rect x="46.8237%" y="965" width="0.0464%" height="15" fill="rgb(222,31,33)" fg:x="20174" fg:w="20"/><text x="47.0737%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (101 samples, 0.23%)</title><rect x="46.6380%" y="1061" width="0.2344%" height="15" fill="rgb(210,17,39)" fg:x="20094" fg:w="101"/><text x="46.8880%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (100 samples, 0.23%)</title><rect x="46.6404%" y="1045" width="0.2321%" height="15" fill="rgb(244,93,20)" fg:x="20095" fg:w="100"/><text x="46.8904%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (71 samples, 0.16%)</title><rect x="46.7077%" y="1029" width="0.1648%" height="15" fill="rgb(210,40,47)" fg:x="20124" fg:w="71"/><text x="46.9577%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (7 samples, 0.02%)</title><rect x="46.8910%" y="917" width="0.0162%" height="15" fill="rgb(239,211,47)" fg:x="20203" fg:w="7"/><text x="47.1410%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="46.9119%" y="917" width="0.0186%" height="15" fill="rgb(251,223,49)" fg:x="20212" fg:w="8"/><text x="47.1619%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (19 samples, 0.04%)</title><rect x="46.8887%" y="933" width="0.0441%" height="15" fill="rgb(221,149,5)" fg:x="20202" fg:w="19"/><text x="47.1387%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (22 samples, 0.05%)</title><rect x="46.8841%" y="965" width="0.0511%" height="15" fill="rgb(219,224,51)" fg:x="20200" fg:w="22"/><text x="47.1341%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (21 samples, 0.05%)</title><rect x="46.8864%" y="949" width="0.0487%" height="15" fill="rgb(223,7,8)" fg:x="20201" fg:w="21"/><text x="47.1364%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.05%)</title><rect x="46.8841%" y="997" width="0.0534%" height="15" fill="rgb(241,217,22)" fg:x="20200" fg:w="23"/><text x="47.1341%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (23 samples, 0.05%)</title><rect x="46.8841%" y="981" width="0.0534%" height="15" fill="rgb(248,209,0)" fg:x="20200" fg:w="23"/><text x="47.1341%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="46.9444%" y="965" width="0.0186%" height="15" fill="rgb(217,205,4)" fg:x="20226" fg:w="8"/><text x="47.1944%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="46.9467%" y="949" width="0.0162%" height="15" fill="rgb(228,124,39)" fg:x="20227" fg:w="7"/><text x="47.1967%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (7 samples, 0.02%)</title><rect x="46.9630%" y="965" width="0.0162%" height="15" fill="rgb(250,116,42)" fg:x="20234" fg:w="7"/><text x="47.2130%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (6 samples, 0.01%)</title><rect x="46.9653%" y="949" width="0.0139%" height="15" fill="rgb(223,202,9)" fg:x="20235" fg:w="6"/><text x="47.2153%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="46.9676%" y="933" width="0.0116%" height="15" fill="rgb(242,222,40)" fg:x="20236" fg:w="5"/><text x="47.2176%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="47.0048%" y="917" width="0.0116%" height="15" fill="rgb(229,99,46)" fg:x="20252" fg:w="5"/><text x="47.2548%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="47.0048%" y="901" width="0.0116%" height="15" fill="rgb(225,56,46)" fg:x="20252" fg:w="5"/><text x="47.2548%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="47.0048%" y="885" width="0.0116%" height="15" fill="rgb(227,94,5)" fg:x="20252" fg:w="5"/><text x="47.2548%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="47.0048%" y="933" width="0.0186%" height="15" fill="rgb(205,112,38)" fg:x="20252" fg:w="8"/><text x="47.2548%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="47.0233%" y="901" width="0.0162%" height="15" fill="rgb(231,133,46)" fg:x="20260" fg:w="7"/><text x="47.2733%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="47.0233%" y="885" width="0.0162%" height="15" fill="rgb(217,16,9)" fg:x="20260" fg:w="7"/><text x="47.2733%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="47.0233%" y="869" width="0.0162%" height="15" fill="rgb(249,173,9)" fg:x="20260" fg:w="7"/><text x="47.2733%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="47.0233%" y="853" width="0.0162%" height="15" fill="rgb(205,163,53)" fg:x="20260" fg:w="7"/><text x="47.2733%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="47.0233%" y="933" width="0.0232%" height="15" fill="rgb(217,54,41)" fg:x="20260" fg:w="10"/><text x="47.2733%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="47.0233%" y="917" width="0.0232%" height="15" fill="rgb(228,216,12)" fg:x="20260" fg:w="10"/><text x="47.2733%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (18 samples, 0.04%)</title><rect x="47.0535%" y="885" width="0.0418%" height="15" fill="rgb(244,228,15)" fg:x="20273" fg:w="18"/><text x="47.3035%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.04%)</title><rect x="47.0535%" y="869" width="0.0418%" height="15" fill="rgb(221,176,53)" fg:x="20273" fg:w="18"/><text x="47.3035%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.03%)</title><rect x="47.0651%" y="853" width="0.0302%" height="15" fill="rgb(205,94,34)" fg:x="20278" fg:w="13"/><text x="47.3151%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.03%)</title><rect x="47.0674%" y="837" width="0.0279%" height="15" fill="rgb(213,110,48)" fg:x="20279" fg:w="12"/><text x="47.3174%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.03%)</title><rect x="47.0674%" y="821" width="0.0279%" height="15" fill="rgb(236,142,28)" fg:x="20279" fg:w="12"/><text x="47.3174%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (12 samples, 0.03%)</title><rect x="47.0953%" y="885" width="0.0279%" height="15" fill="rgb(225,135,29)" fg:x="20291" fg:w="12"/><text x="47.3453%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.03%)</title><rect x="47.0953%" y="869" width="0.0279%" height="15" fill="rgb(252,45,31)" fg:x="20291" fg:w="12"/><text x="47.3453%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="47.1092%" y="853" width="0.0139%" height="15" fill="rgb(211,187,50)" fg:x="20297" fg:w="6"/><text x="47.3592%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (5 samples, 0.01%)</title><rect x="47.1324%" y="837" width="0.0116%" height="15" fill="rgb(229,109,7)" fg:x="20307" fg:w="5"/><text x="47.3824%" y="847.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (124 samples, 0.29%)</title><rect x="46.8725%" y="1045" width="0.2878%" height="15" fill="rgb(251,131,51)" fg:x="20195" fg:w="124"/><text x="47.1225%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (122 samples, 0.28%)</title><rect x="46.8771%" y="1029" width="0.2832%" height="15" fill="rgb(251,180,35)" fg:x="20197" fg:w="122"/><text x="47.1271%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (121 samples, 0.28%)</title><rect x="46.8794%" y="1013" width="0.2808%" height="15" fill="rgb(211,46,32)" fg:x="20198" fg:w="121"/><text x="47.1294%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (96 samples, 0.22%)</title><rect x="46.9374%" y="997" width="0.2228%" height="15" fill="rgb(248,123,17)" fg:x="20223" fg:w="96"/><text x="47.1874%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (94 samples, 0.22%)</title><rect x="46.9421%" y="981" width="0.2182%" height="15" fill="rgb(227,141,18)" fg:x="20225" fg:w="94"/><text x="47.1921%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (78 samples, 0.18%)</title><rect x="46.9792%" y="965" width="0.1810%" height="15" fill="rgb(216,102,9)" fg:x="20241" fg:w="78"/><text x="47.2292%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (70 samples, 0.16%)</title><rect x="46.9978%" y="949" width="0.1625%" height="15" fill="rgb(253,47,13)" fg:x="20249" fg:w="70"/><text x="47.2478%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (49 samples, 0.11%)</title><rect x="47.0465%" y="933" width="0.1137%" height="15" fill="rgb(226,93,23)" fg:x="20270" fg:w="49"/><text x="47.2965%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (47 samples, 0.11%)</title><rect x="47.0512%" y="917" width="0.1091%" height="15" fill="rgb(247,104,17)" fg:x="20272" fg:w="47"/><text x="47.3012%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (47 samples, 0.11%)</title><rect x="47.0512%" y="901" width="0.1091%" height="15" fill="rgb(233,203,26)" fg:x="20272" fg:w="47"/><text x="47.3012%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (16 samples, 0.04%)</title><rect x="47.1231%" y="885" width="0.0371%" height="15" fill="rgb(244,98,49)" fg:x="20303" fg:w="16"/><text x="47.3731%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (16 samples, 0.04%)</title><rect x="47.1231%" y="869" width="0.0371%" height="15" fill="rgb(235,134,22)" fg:x="20303" fg:w="16"/><text x="47.3731%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (16 samples, 0.04%)</title><rect x="47.1231%" y="853" width="0.0371%" height="15" fill="rgb(221,70,32)" fg:x="20303" fg:w="16"/><text x="47.3731%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="47.1440%" y="837" width="0.0162%" height="15" fill="rgb(238,15,50)" fg:x="20312" fg:w="7"/><text x="47.3940%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="47.1487%" y="821" width="0.0116%" height="15" fill="rgb(215,221,48)" fg:x="20314" fg:w="5"/><text x="47.3987%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="47.1487%" y="805" width="0.0116%" height="15" fill="rgb(236,73,3)" fg:x="20314" fg:w="5"/><text x="47.3987%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="47.2044%" y="901" width="0.0116%" height="15" fill="rgb(250,107,11)" fg:x="20338" fg:w="5"/><text x="47.4544%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (18 samples, 0.04%)</title><rect x="47.1951%" y="917" width="0.0418%" height="15" fill="rgb(242,39,14)" fg:x="20334" fg:w="18"/><text x="47.4451%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (22 samples, 0.05%)</title><rect x="47.1928%" y="949" width="0.0511%" height="15" fill="rgb(248,164,37)" fg:x="20333" fg:w="22"/><text x="47.4428%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (22 samples, 0.05%)</title><rect x="47.1928%" y="933" width="0.0511%" height="15" fill="rgb(217,60,12)" fg:x="20333" fg:w="22"/><text x="47.4428%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.06%)</title><rect x="47.1881%" y="981" width="0.0627%" height="15" fill="rgb(240,125,29)" fg:x="20331" fg:w="27"/><text x="47.4381%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (27 samples, 0.06%)</title><rect x="47.1881%" y="965" width="0.0627%" height="15" fill="rgb(208,207,28)" fg:x="20331" fg:w="27"/><text x="47.4381%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.07%)</title><rect x="47.1858%" y="997" width="0.0673%" height="15" fill="rgb(209,159,27)" fg:x="20330" fg:w="29"/><text x="47.4358%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (5 samples, 0.01%)</title><rect x="47.2810%" y="933" width="0.0116%" height="15" fill="rgb(251,176,53)" fg:x="20371" fg:w="5"/><text x="47.5310%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (12 samples, 0.03%)</title><rect x="47.2670%" y="965" width="0.0279%" height="15" fill="rgb(211,85,7)" fg:x="20365" fg:w="12"/><text x="47.5170%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.03%)</title><rect x="47.2670%" y="949" width="0.0279%" height="15" fill="rgb(216,64,54)" fg:x="20365" fg:w="12"/><text x="47.5170%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (7 samples, 0.02%)</title><rect x="47.3088%" y="917" width="0.0162%" height="15" fill="rgb(217,54,24)" fg:x="20383" fg:w="7"/><text x="47.5588%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (7 samples, 0.02%)</title><rect x="47.3088%" y="901" width="0.0162%" height="15" fill="rgb(208,206,53)" fg:x="20383" fg:w="7"/><text x="47.5588%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (14 samples, 0.03%)</title><rect x="47.2949%" y="965" width="0.0325%" height="15" fill="rgb(251,74,39)" fg:x="20377" fg:w="14"/><text x="47.5449%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.03%)</title><rect x="47.2972%" y="949" width="0.0302%" height="15" fill="rgb(226,47,5)" fg:x="20378" fg:w="13"/><text x="47.5472%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.03%)</title><rect x="47.2972%" y="933" width="0.0302%" height="15" fill="rgb(234,111,33)" fg:x="20378" fg:w="13"/><text x="47.5472%" y="943.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="47.3297%" y="949" width="0.0116%" height="15" fill="rgb(251,14,10)" fg:x="20392" fg:w="5"/><text x="47.5797%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (9 samples, 0.02%)</title><rect x="47.3506%" y="853" width="0.0209%" height="15" fill="rgb(232,43,0)" fg:x="20401" fg:w="9"/><text x="47.6006%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="47.3459%" y="933" width="0.0279%" height="15" fill="rgb(222,68,43)" fg:x="20399" fg:w="12"/><text x="47.5959%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="47.3459%" y="917" width="0.0279%" height="15" fill="rgb(217,24,23)" fg:x="20399" fg:w="12"/><text x="47.5959%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="47.3506%" y="901" width="0.0232%" height="15" fill="rgb(229,209,14)" fg:x="20401" fg:w="10"/><text x="47.6006%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="47.3506%" y="885" width="0.0232%" height="15" fill="rgb(250,149,48)" fg:x="20401" fg:w="10"/><text x="47.6006%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="47.3506%" y="869" width="0.0232%" height="15" fill="rgb(210,120,37)" fg:x="20401" fg:w="10"/><text x="47.6006%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="47.3831%" y="821" width="0.0116%" height="15" fill="rgb(210,21,8)" fg:x="20415" fg:w="5"/><text x="47.6331%" y="831.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="47.3831%" y="837" width="0.0162%" height="15" fill="rgb(243,145,7)" fg:x="20415" fg:w="7"/><text x="47.6331%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="47.3784%" y="869" width="0.0279%" height="15" fill="rgb(238,178,32)" fg:x="20413" fg:w="12"/><text x="47.6284%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="47.3808%" y="853" width="0.0255%" height="15" fill="rgb(222,4,10)" fg:x="20414" fg:w="11"/><text x="47.6308%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="47.3738%" y="901" width="0.0348%" height="15" fill="rgb(239,7,37)" fg:x="20411" fg:w="15"/><text x="47.6238%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.03%)</title><rect x="47.3738%" y="885" width="0.0348%" height="15" fill="rgb(215,31,37)" fg:x="20411" fg:w="15"/><text x="47.6238%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="47.3738%" y="933" width="0.0371%" height="15" fill="rgb(224,83,33)" fg:x="20411" fg:w="16"/><text x="47.6238%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="47.3738%" y="917" width="0.0371%" height="15" fill="rgb(239,55,3)" fg:x="20411" fg:w="16"/><text x="47.6238%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="47.4457%" y="821" width="0.0116%" height="15" fill="rgb(247,92,11)" fg:x="20442" fg:w="5"/><text x="47.6957%" y="831.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (133 samples, 0.31%)</title><rect x="47.1603%" y="1045" width="0.3087%" height="15" fill="rgb(239,200,7)" fg:x="20319" fg:w="133"/><text x="47.4103%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (129 samples, 0.30%)</title><rect x="47.1695%" y="1029" width="0.2994%" height="15" fill="rgb(227,115,8)" fg:x="20323" fg:w="129"/><text x="47.4195%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (128 samples, 0.30%)</title><rect x="47.1719%" y="1013" width="0.2971%" height="15" fill="rgb(215,189,27)" fg:x="20324" fg:w="128"/><text x="47.4219%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (93 samples, 0.22%)</title><rect x="47.2531%" y="997" width="0.2159%" height="15" fill="rgb(251,216,39)" fg:x="20359" fg:w="93"/><text x="47.5031%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (92 samples, 0.21%)</title><rect x="47.2554%" y="981" width="0.2135%" height="15" fill="rgb(207,29,47)" fg:x="20360" fg:w="92"/><text x="47.5054%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (61 samples, 0.14%)</title><rect x="47.3274%" y="965" width="0.1416%" height="15" fill="rgb(210,71,34)" fg:x="20391" fg:w="61"/><text x="47.5774%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (55 samples, 0.13%)</title><rect x="47.3413%" y="949" width="0.1277%" height="15" fill="rgb(253,217,51)" fg:x="20397" fg:w="55"/><text x="47.5913%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (25 samples, 0.06%)</title><rect x="47.4109%" y="933" width="0.0580%" height="15" fill="rgb(222,117,46)" fg:x="20427" fg:w="25"/><text x="47.6609%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (24 samples, 0.06%)</title><rect x="47.4133%" y="917" width="0.0557%" height="15" fill="rgb(226,132,6)" fg:x="20428" fg:w="24"/><text x="47.6633%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (23 samples, 0.05%)</title><rect x="47.4156%" y="901" width="0.0534%" height="15" fill="rgb(254,145,51)" fg:x="20429" fg:w="23"/><text x="47.6656%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (22 samples, 0.05%)</title><rect x="47.4179%" y="885" width="0.0511%" height="15" fill="rgb(231,199,27)" fg:x="20430" fg:w="22"/><text x="47.6679%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.04%)</title><rect x="47.4318%" y="869" width="0.0371%" height="15" fill="rgb(245,158,14)" fg:x="20436" fg:w="16"/><text x="47.6818%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.04%)</title><rect x="47.4318%" y="853" width="0.0371%" height="15" fill="rgb(240,113,14)" fg:x="20436" fg:w="16"/><text x="47.6818%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.04%)</title><rect x="47.4318%" y="837" width="0.0371%" height="15" fill="rgb(210,20,13)" fg:x="20436" fg:w="16"/><text x="47.6818%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (9 samples, 0.02%)</title><rect x="47.4829%" y="917" width="0.0209%" height="15" fill="rgb(241,144,13)" fg:x="20458" fg:w="9"/><text x="47.7329%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (18 samples, 0.04%)</title><rect x="47.4829%" y="933" width="0.0418%" height="15" fill="rgb(235,43,34)" fg:x="20458" fg:w="18"/><text x="47.7329%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.05%)</title><rect x="47.4782%" y="997" width="0.0487%" height="15" fill="rgb(208,36,20)" fg:x="20456" fg:w="21"/><text x="47.7282%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (21 samples, 0.05%)</title><rect x="47.4782%" y="981" width="0.0487%" height="15" fill="rgb(239,204,10)" fg:x="20456" fg:w="21"/><text x="47.7282%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (21 samples, 0.05%)</title><rect x="47.4782%" y="965" width="0.0487%" height="15" fill="rgb(217,84,43)" fg:x="20456" fg:w="21"/><text x="47.7282%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (21 samples, 0.05%)</title><rect x="47.4782%" y="949" width="0.0487%" height="15" fill="rgb(241,170,50)" fg:x="20456" fg:w="21"/><text x="47.7282%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (10 samples, 0.02%)</title><rect x="47.5316%" y="965" width="0.0232%" height="15" fill="rgb(226,205,29)" fg:x="20479" fg:w="10"/><text x="47.7816%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="47.5386%" y="949" width="0.0162%" height="15" fill="rgb(233,113,1)" fg:x="20482" fg:w="7"/><text x="47.7886%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (10 samples, 0.02%)</title><rect x="47.5548%" y="965" width="0.0232%" height="15" fill="rgb(253,98,13)" fg:x="20489" fg:w="10"/><text x="47.8048%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (10 samples, 0.02%)</title><rect x="47.5548%" y="949" width="0.0232%" height="15" fill="rgb(211,115,12)" fg:x="20489" fg:w="10"/><text x="47.8048%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.02%)</title><rect x="47.5548%" y="933" width="0.0232%" height="15" fill="rgb(208,12,16)" fg:x="20489" fg:w="10"/><text x="47.8048%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (8 samples, 0.02%)</title><rect x="47.5595%" y="917" width="0.0186%" height="15" fill="rgb(237,193,54)" fg:x="20491" fg:w="8"/><text x="47.8095%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (8 samples, 0.02%)</title><rect x="47.5595%" y="901" width="0.0186%" height="15" fill="rgb(243,22,42)" fg:x="20491" fg:w="8"/><text x="47.8095%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="47.5804%" y="949" width="0.0116%" height="15" fill="rgb(233,151,36)" fg:x="20500" fg:w="5"/><text x="47.8304%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="47.6105%" y="901" width="0.0139%" height="15" fill="rgb(237,57,45)" fg:x="20513" fg:w="6"/><text x="47.8605%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="47.6105%" y="885" width="0.0139%" height="15" fill="rgb(221,88,17)" fg:x="20513" fg:w="6"/><text x="47.8605%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="47.6129%" y="869" width="0.0116%" height="15" fill="rgb(230,79,15)" fg:x="20514" fg:w="5"/><text x="47.8629%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="47.6129%" y="853" width="0.0116%" height="15" fill="rgb(213,57,13)" fg:x="20514" fg:w="5"/><text x="47.8629%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="47.6129%" y="837" width="0.0116%" height="15" fill="rgb(222,116,39)" fg:x="20514" fg:w="5"/><text x="47.8629%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="47.6129%" y="821" width="0.0116%" height="15" fill="rgb(245,107,2)" fg:x="20514" fg:w="5"/><text x="47.8629%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="47.6082%" y="933" width="0.0209%" height="15" fill="rgb(238,1,10)" fg:x="20512" fg:w="9"/><text x="47.8582%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="47.6082%" y="917" width="0.0209%" height="15" fill="rgb(249,4,48)" fg:x="20512" fg:w="9"/><text x="47.8582%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (329 samples, 0.76%)</title><rect x="46.8725%" y="1061" width="0.7636%" height="15" fill="rgb(223,151,18)" fg:x="20195" fg:w="329"/><text x="47.1225%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (72 samples, 0.17%)</title><rect x="47.4690%" y="1045" width="0.1671%" height="15" fill="rgb(227,65,43)" fg:x="20452" fg:w="72"/><text x="47.7190%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (70 samples, 0.16%)</title><rect x="47.4736%" y="1029" width="0.1625%" height="15" fill="rgb(218,40,45)" fg:x="20454" fg:w="70"/><text x="47.7236%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69 samples, 0.16%)</title><rect x="47.4759%" y="1013" width="0.1601%" height="15" fill="rgb(252,121,31)" fg:x="20455" fg:w="69"/><text x="47.7259%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (47 samples, 0.11%)</title><rect x="47.5270%" y="997" width="0.1091%" height="15" fill="rgb(219,158,43)" fg:x="20477" fg:w="47"/><text x="47.7770%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (47 samples, 0.11%)</title><rect x="47.5270%" y="981" width="0.1091%" height="15" fill="rgb(231,162,42)" fg:x="20477" fg:w="47"/><text x="47.7770%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (25 samples, 0.06%)</title><rect x="47.5780%" y="965" width="0.0580%" height="15" fill="rgb(217,179,25)" fg:x="20499" fg:w="25"/><text x="47.8280%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.04%)</title><rect x="47.5920%" y="949" width="0.0441%" height="15" fill="rgb(206,212,31)" fg:x="20505" fg:w="19"/><text x="47.8420%" y="959.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_copy (483 samples, 1.12%)</title><rect x="46.5336%" y="1109" width="1.1210%" height="15" fill="rgb(235,144,12)" fg:x="20049" fg:w="483"/><text x="46.7836%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_borrow (483 samples, 1.12%)</title><rect x="46.5336%" y="1093" width="1.1210%" height="15" fill="rgb(213,51,10)" fg:x="20049" fg:w="483"/><text x="46.7836%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (482 samples, 1.12%)</title><rect x="46.5359%" y="1077" width="1.1187%" height="15" fill="rgb(231,145,14)" fg:x="20050" fg:w="482"/><text x="46.7859%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (9 samples, 0.02%)</title><rect x="47.6662%" y="1077" width="0.0209%" height="15" fill="rgb(235,15,28)" fg:x="20537" fg:w="9"/><text x="47.9162%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="47.6709%" y="1061" width="0.0162%" height="15" fill="rgb(237,206,10)" fg:x="20539" fg:w="7"/><text x="47.9209%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="47.6755%" y="1045" width="0.0116%" height="15" fill="rgb(236,227,27)" fg:x="20541" fg:w="5"/><text x="47.9255%" y="1055.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="47.7034%" y="1061" width="0.0139%" height="15" fill="rgb(246,83,35)" fg:x="20553" fg:w="6"/><text x="47.9534%" y="1071.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (6 samples, 0.01%)</title><rect x="47.7034%" y="1045" width="0.0139%" height="15" fill="rgb(220,136,24)" fg:x="20553" fg:w="6"/><text x="47.9534%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (6 samples, 0.01%)</title><rect x="47.7034%" y="1029" width="0.0139%" height="15" fill="rgb(217,3,25)" fg:x="20553" fg:w="6"/><text x="47.9534%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="47.7173%" y="1061" width="0.0116%" height="15" fill="rgb(239,24,14)" fg:x="20559" fg:w="5"/><text x="47.9673%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="47.7173%" y="1045" width="0.0116%" height="15" fill="rgb(244,16,53)" fg:x="20559" fg:w="5"/><text x="47.9673%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.01%)</title><rect x="47.7521%" y="949" width="0.0116%" height="15" fill="rgb(208,175,44)" fg:x="20574" fg:w="5"/><text x="48.0021%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="47.7521%" y="933" width="0.0116%" height="15" fill="rgb(252,18,48)" fg:x="20574" fg:w="5"/><text x="48.0021%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (8 samples, 0.02%)</title><rect x="47.7475%" y="1045" width="0.0186%" height="15" fill="rgb(234,199,32)" fg:x="20572" fg:w="8"/><text x="47.9975%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (8 samples, 0.02%)</title><rect x="47.7475%" y="1029" width="0.0186%" height="15" fill="rgb(225,77,54)" fg:x="20572" fg:w="8"/><text x="47.9975%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="47.7498%" y="1013" width="0.0162%" height="15" fill="rgb(225,42,25)" fg:x="20573" fg:w="7"/><text x="47.9998%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (7 samples, 0.02%)</title><rect x="47.7498%" y="997" width="0.0162%" height="15" fill="rgb(242,227,46)" fg:x="20573" fg:w="7"/><text x="47.9998%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (7 samples, 0.02%)</title><rect x="47.7498%" y="981" width="0.0162%" height="15" fill="rgb(246,197,35)" fg:x="20573" fg:w="7"/><text x="47.9998%" y="991.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (7 samples, 0.02%)</title><rect x="47.7498%" y="965" width="0.0162%" height="15" fill="rgb(215,159,26)" fg:x="20573" fg:w="7"/><text x="47.9998%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (20 samples, 0.05%)</title><rect x="47.7382%" y="1061" width="0.0464%" height="15" fill="rgb(212,194,50)" fg:x="20568" fg:w="20"/><text x="47.9882%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="47.7660%" y="1045" width="0.0186%" height="15" fill="rgb(246,132,1)" fg:x="20580" fg:w="8"/><text x="48.0160%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="47.7660%" y="1029" width="0.0186%" height="15" fill="rgb(217,71,7)" fg:x="20580" fg:w="8"/><text x="48.0160%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="47.7684%" y="1013" width="0.0162%" height="15" fill="rgb(252,59,32)" fg:x="20581" fg:w="7"/><text x="48.0184%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="47.8055%" y="997" width="0.0139%" height="15" fill="rgb(253,204,25)" fg:x="20597" fg:w="6"/><text x="48.0555%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (16 samples, 0.04%)</title><rect x="47.7846%" y="1061" width="0.0371%" height="15" fill="rgb(232,21,16)" fg:x="20588" fg:w="16"/><text x="48.0346%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.03%)</title><rect x="47.7869%" y="1045" width="0.0348%" height="15" fill="rgb(248,90,29)" fg:x="20589" fg:w="15"/><text x="48.0369%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.03%)</title><rect x="47.7893%" y="1029" width="0.0325%" height="15" fill="rgb(249,223,7)" fg:x="20590" fg:w="14"/><text x="48.0393%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.03%)</title><rect x="47.7893%" y="1013" width="0.0325%" height="15" fill="rgb(231,119,42)" fg:x="20590" fg:w="14"/><text x="48.0393%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (6 samples, 0.01%)</title><rect x="47.8241%" y="1045" width="0.0139%" height="15" fill="rgb(215,41,35)" fg:x="20605" fg:w="6"/><text x="48.0741%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.03%)</title><rect x="47.8217%" y="1061" width="0.0279%" height="15" fill="rgb(220,44,45)" fg:x="20604" fg:w="12"/><text x="48.0717%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="47.8380%" y="1045" width="0.0116%" height="15" fill="rgb(253,197,36)" fg:x="20611" fg:w="5"/><text x="48.0880%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="47.8380%" y="1029" width="0.0116%" height="15" fill="rgb(245,225,54)" fg:x="20611" fg:w="5"/><text x="48.0880%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (5 samples, 0.01%)</title><rect x="47.8380%" y="1013" width="0.0116%" height="15" fill="rgb(239,94,37)" fg:x="20611" fg:w="5"/><text x="48.0880%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (80 samples, 0.19%)</title><rect x="47.6871%" y="1077" width="0.1857%" height="15" fill="rgb(242,217,10)" fg:x="20546" fg:w="80"/><text x="47.9371%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (10 samples, 0.02%)</title><rect x="47.8496%" y="1061" width="0.0232%" height="15" fill="rgb(250,193,7)" fg:x="20616" fg:w="10"/><text x="48.0996%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="47.8519%" y="1045" width="0.0209%" height="15" fill="rgb(230,104,19)" fg:x="20617" fg:w="9"/><text x="48.1019%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.02%)</title><rect x="47.8542%" y="1029" width="0.0186%" height="15" fill="rgb(230,181,4)" fg:x="20618" fg:w="8"/><text x="48.1042%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (7 samples, 0.02%)</title><rect x="47.8566%" y="1013" width="0.0162%" height="15" fill="rgb(216,219,49)" fg:x="20619" fg:w="7"/><text x="48.1066%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (5 samples, 0.01%)</title><rect x="47.8612%" y="997" width="0.0116%" height="15" fill="rgb(254,144,0)" fg:x="20621" fg:w="5"/><text x="48.1112%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (6 samples, 0.01%)</title><rect x="47.8728%" y="1061" width="0.0139%" height="15" fill="rgb(205,209,38)" fg:x="20626" fg:w="6"/><text x="48.1228%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="47.8751%" y="1045" width="0.0116%" height="15" fill="rgb(240,21,42)" fg:x="20627" fg:w="5"/><text x="48.1251%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::all_immutable (10 samples, 0.02%)</title><rect x="47.8728%" y="1077" width="0.0232%" height="15" fill="rgb(241,132,3)" fg:x="20626" fg:w="10"/><text x="48.1228%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (8 samples, 0.02%)</title><rect x="47.9239%" y="949" width="0.0186%" height="15" fill="rgb(225,14,2)" fg:x="20648" fg:w="8"/><text x="48.1739%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (13 samples, 0.03%)</title><rect x="47.9146%" y="1013" width="0.0302%" height="15" fill="rgb(210,141,35)" fg:x="20644" fg:w="13"/><text x="48.1646%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (9 samples, 0.02%)</title><rect x="47.9239%" y="997" width="0.0209%" height="15" fill="rgb(251,14,44)" fg:x="20648" fg:w="9"/><text x="48.1739%" y="1007.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="47.9239%" y="981" width="0.0209%" height="15" fill="rgb(247,48,18)" fg:x="20648" fg:w="9"/><text x="48.1739%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (9 samples, 0.02%)</title><rect x="47.9239%" y="965" width="0.0209%" height="15" fill="rgb(225,0,40)" fg:x="20648" fg:w="9"/><text x="48.1739%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="47.9517%" y="901" width="0.0116%" height="15" fill="rgb(221,31,33)" fg:x="20660" fg:w="5"/><text x="48.2017%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (5 samples, 0.01%)</title><rect x="47.9517%" y="885" width="0.0116%" height="15" fill="rgb(237,42,40)" fg:x="20660" fg:w="5"/><text x="48.2017%" y="895.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_mutably_borrowed (136 samples, 0.32%)</title><rect x="47.6546%" y="1109" width="0.3157%" height="15" fill="rgb(233,51,29)" fg:x="20532" fg:w="136"/><text x="47.9046%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (135 samples, 0.31%)</title><rect x="47.6570%" y="1093" width="0.3133%" height="15" fill="rgb(226,58,20)" fg:x="20533" fg:w="135"/><text x="47.9070%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (28 samples, 0.06%)</title><rect x="47.9053%" y="1077" width="0.0650%" height="15" fill="rgb(208,98,7)" fg:x="20640" fg:w="28"/><text x="48.1553%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.06%)</title><rect x="47.9053%" y="1061" width="0.0650%" height="15" fill="rgb(228,143,44)" fg:x="20640" fg:w="28"/><text x="48.1553%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (24 samples, 0.06%)</title><rect x="47.9146%" y="1045" width="0.0557%" height="15" fill="rgb(246,55,38)" fg:x="20644" fg:w="24"/><text x="48.1646%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.06%)</title><rect x="47.9146%" y="1029" width="0.0557%" height="15" fill="rgb(247,87,16)" fg:x="20644" fg:w="24"/><text x="48.1646%" y="1039.50"></text></g><g><title>core::mem::drop (11 samples, 0.03%)</title><rect x="47.9448%" y="1013" width="0.0255%" height="15" fill="rgb(234,129,42)" fg:x="20657" fg:w="11"/><text x="48.1948%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;)&gt; (11 samples, 0.03%)</title><rect x="47.9448%" y="997" width="0.0255%" height="15" fill="rgb(220,82,16)" fg:x="20657" fg:w="11"/><text x="48.1948%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (11 samples, 0.03%)</title><rect x="47.9448%" y="981" width="0.0255%" height="15" fill="rgb(211,88,4)" fg:x="20657" fg:w="11"/><text x="48.1948%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="47.9448%" y="965" width="0.0255%" height="15" fill="rgb(248,151,21)" fg:x="20657" fg:w="11"/><text x="48.1948%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (10 samples, 0.02%)</title><rect x="47.9471%" y="949" width="0.0232%" height="15" fill="rgb(238,163,6)" fg:x="20658" fg:w="10"/><text x="48.1971%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="47.9471%" y="933" width="0.0232%" height="15" fill="rgb(209,183,11)" fg:x="20658" fg:w="10"/><text x="48.1971%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (8 samples, 0.02%)</title><rect x="47.9517%" y="917" width="0.0186%" height="15" fill="rgb(219,37,20)" fg:x="20660" fg:w="8"/><text x="48.2017%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (11 samples, 0.03%)</title><rect x="47.9703%" y="1061" width="0.0255%" height="15" fill="rgb(210,158,4)" fg:x="20668" fg:w="11"/><text x="48.2203%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="47.9773%" y="1045" width="0.0186%" height="15" fill="rgb(221,167,53)" fg:x="20671" fg:w="8"/><text x="48.2273%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="47.9773%" y="1029" width="0.0186%" height="15" fill="rgb(237,151,45)" fg:x="20671" fg:w="8"/><text x="48.2273%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="47.9796%" y="1013" width="0.0162%" height="15" fill="rgb(231,39,3)" fg:x="20672" fg:w="7"/><text x="48.2296%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (23 samples, 0.05%)</title><rect x="47.9703%" y="1077" width="0.0534%" height="15" fill="rgb(212,167,28)" fg:x="20668" fg:w="23"/><text x="48.2203%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (12 samples, 0.03%)</title><rect x="47.9958%" y="1061" width="0.0279%" height="15" fill="rgb(232,178,8)" fg:x="20679" fg:w="12"/><text x="48.2458%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.03%)</title><rect x="47.9981%" y="1045" width="0.0255%" height="15" fill="rgb(225,151,20)" fg:x="20680" fg:w="11"/><text x="48.2481%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (10 samples, 0.02%)</title><rect x="48.0005%" y="1029" width="0.0232%" height="15" fill="rgb(238,3,37)" fg:x="20681" fg:w="10"/><text x="48.2505%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (10 samples, 0.02%)</title><rect x="48.0005%" y="1013" width="0.0232%" height="15" fill="rgb(251,147,42)" fg:x="20681" fg:w="10"/><text x="48.2505%" y="1023.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (27 samples, 0.06%)</title><rect x="47.9703%" y="1109" width="0.0627%" height="15" fill="rgb(208,173,10)" fg:x="20668" fg:w="27"/><text x="48.2203%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (27 samples, 0.06%)</title><rect x="47.9703%" y="1093" width="0.0627%" height="15" fill="rgb(246,225,4)" fg:x="20668" fg:w="27"/><text x="48.2203%" y="1103.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::copy_loc (708 samples, 1.64%)</title><rect x="46.3920%" y="1125" width="1.6433%" height="15" fill="rgb(248,102,6)" fg:x="19988" fg:w="708"/><text x="46.6420%" y="1135.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (15 samples, 0.03%)</title><rect x="48.0399%" y="1045" width="0.0348%" height="15" fill="rgb(232,6,21)" fg:x="20698" fg:w="15"/><text x="48.2899%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (15 samples, 0.03%)</title><rect x="48.0399%" y="1029" width="0.0348%" height="15" fill="rgb(221,179,22)" fg:x="20698" fg:w="15"/><text x="48.2899%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.03%)</title><rect x="48.0399%" y="1013" width="0.0348%" height="15" fill="rgb(252,50,20)" fg:x="20698" fg:w="15"/><text x="48.2899%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.02%)</title><rect x="48.0515%" y="997" width="0.0232%" height="15" fill="rgb(222,56,38)" fg:x="20703" fg:w="10"/><text x="48.3015%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (10 samples, 0.02%)</title><rect x="48.0515%" y="981" width="0.0232%" height="15" fill="rgb(206,193,29)" fg:x="20703" fg:w="10"/><text x="48.3015%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.02%)</title><rect x="48.0585%" y="965" width="0.0162%" height="15" fill="rgb(239,192,45)" fg:x="20706" fg:w="7"/><text x="48.3085%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="48.0585%" y="949" width="0.0162%" height="15" fill="rgb(254,18,36)" fg:x="20706" fg:w="7"/><text x="48.3085%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="48.0608%" y="933" width="0.0139%" height="15" fill="rgb(221,127,11)" fg:x="20707" fg:w="6"/><text x="48.3108%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="48.0608%" y="917" width="0.0139%" height="15" fill="rgb(234,146,35)" fg:x="20707" fg:w="6"/><text x="48.3108%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="48.0608%" y="901" width="0.0139%" height="15" fill="rgb(254,201,37)" fg:x="20707" fg:w="6"/><text x="48.3108%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (8 samples, 0.02%)</title><rect x="48.0747%" y="1045" width="0.0186%" height="15" fill="rgb(211,202,23)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.02%)</title><rect x="48.0747%" y="1029" width="0.0186%" height="15" fill="rgb(237,91,2)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="48.0747%" y="1013" width="0.0186%" height="15" fill="rgb(226,228,36)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.02%)</title><rect x="48.0747%" y="997" width="0.0186%" height="15" fill="rgb(213,63,50)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (8 samples, 0.02%)</title><rect x="48.0747%" y="981" width="0.0186%" height="15" fill="rgb(235,194,19)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.02%)</title><rect x="48.0747%" y="965" width="0.0186%" height="15" fill="rgb(207,204,18)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="48.0747%" y="949" width="0.0186%" height="15" fill="rgb(248,8,7)" fg:x="20713" fg:w="8"/><text x="48.3247%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.01%)</title><rect x="48.0817%" y="933" width="0.0116%" height="15" fill="rgb(223,145,47)" fg:x="20716" fg:w="5"/><text x="48.3317%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (5 samples, 0.01%)</title><rect x="48.0817%" y="917" width="0.0116%" height="15" fill="rgb(228,84,11)" fg:x="20716" fg:w="5"/><text x="48.3317%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="48.0817%" y="901" width="0.0116%" height="15" fill="rgb(218,76,45)" fg:x="20716" fg:w="5"/><text x="48.3317%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="48.0817%" y="885" width="0.0116%" height="15" fill="rgb(223,80,15)" fg:x="20716" fg:w="5"/><text x="48.3317%" y="895.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_copy (27 samples, 0.06%)</title><rect x="48.0353%" y="1109" width="0.0627%" height="15" fill="rgb(219,218,33)" fg:x="20696" fg:w="27"/><text x="48.2853%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_borrow (27 samples, 0.06%)</title><rect x="48.0353%" y="1093" width="0.0627%" height="15" fill="rgb(208,51,11)" fg:x="20696" fg:w="27"/><text x="48.2853%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (27 samples, 0.06%)</title><rect x="48.0353%" y="1077" width="0.0627%" height="15" fill="rgb(229,165,39)" fg:x="20696" fg:w="27"/><text x="48.2853%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (25 samples, 0.06%)</title><rect x="48.0399%" y="1061" width="0.0580%" height="15" fill="rgb(241,100,24)" fg:x="20698" fg:w="25"/><text x="48.2899%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (6 samples, 0.01%)</title><rect x="48.1212%" y="1077" width="0.0139%" height="15" fill="rgb(228,14,23)" fg:x="20733" fg:w="6"/><text x="48.3712%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (6 samples, 0.01%)</title><rect x="48.1212%" y="1061" width="0.0139%" height="15" fill="rgb(247,116,52)" fg:x="20733" fg:w="6"/><text x="48.3712%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (15 samples, 0.03%)</title><rect x="48.1374%" y="1061" width="0.0348%" height="15" fill="rgb(216,149,33)" fg:x="20740" fg:w="15"/><text x="48.3874%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.03%)</title><rect x="48.1397%" y="1045" width="0.0325%" height="15" fill="rgb(238,142,29)" fg:x="20741" fg:w="14"/><text x="48.3897%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.03%)</title><rect x="48.1397%" y="1029" width="0.0325%" height="15" fill="rgb(224,83,40)" fg:x="20741" fg:w="14"/><text x="48.3897%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (13 samples, 0.03%)</title><rect x="48.1420%" y="1013" width="0.0302%" height="15" fill="rgb(234,165,11)" fg:x="20742" fg:w="13"/><text x="48.3920%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (13 samples, 0.03%)</title><rect x="48.1420%" y="997" width="0.0302%" height="15" fill="rgb(215,96,23)" fg:x="20742" fg:w="13"/><text x="48.3920%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (9 samples, 0.02%)</title><rect x="48.1513%" y="981" width="0.0209%" height="15" fill="rgb(233,179,26)" fg:x="20746" fg:w="9"/><text x="48.4013%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="48.1513%" y="965" width="0.0209%" height="15" fill="rgb(225,129,33)" fg:x="20746" fg:w="9"/><text x="48.4013%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="48.1583%" y="949" width="0.0139%" height="15" fill="rgb(237,49,13)" fg:x="20749" fg:w="6"/><text x="48.4083%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="48.1583%" y="933" width="0.0139%" height="15" fill="rgb(211,3,31)" fg:x="20749" fg:w="6"/><text x="48.4083%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="48.1583%" y="917" width="0.0139%" height="15" fill="rgb(216,152,19)" fg:x="20749" fg:w="6"/><text x="48.4083%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (7 samples, 0.02%)</title><rect x="48.1722%" y="1061" width="0.0162%" height="15" fill="rgb(251,121,35)" fg:x="20755" fg:w="7"/><text x="48.4222%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.02%)</title><rect x="48.1722%" y="1045" width="0.0162%" height="15" fill="rgb(210,217,47)" fg:x="20755" fg:w="7"/><text x="48.4222%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="48.1722%" y="1029" width="0.0162%" height="15" fill="rgb(244,116,22)" fg:x="20755" fg:w="7"/><text x="48.4222%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="48.1745%" y="1013" width="0.0139%" height="15" fill="rgb(228,17,21)" fg:x="20756" fg:w="6"/><text x="48.4245%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="48.1745%" y="997" width="0.0139%" height="15" fill="rgb(240,149,34)" fg:x="20756" fg:w="6"/><text x="48.4245%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.01%)</title><rect x="48.1769%" y="981" width="0.0116%" height="15" fill="rgb(208,125,47)" fg:x="20757" fg:w="5"/><text x="48.4269%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="48.1769%" y="965" width="0.0116%" height="15" fill="rgb(249,186,39)" fg:x="20757" fg:w="5"/><text x="48.4269%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (28 samples, 0.06%)</title><rect x="48.1374%" y="1077" width="0.0650%" height="15" fill="rgb(240,220,33)" fg:x="20740" fg:w="28"/><text x="48.3874%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (6 samples, 0.01%)</title><rect x="48.1885%" y="1061" width="0.0139%" height="15" fill="rgb(243,110,23)" fg:x="20762" fg:w="6"/><text x="48.4385%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.01%)</title><rect x="48.1885%" y="1045" width="0.0139%" height="15" fill="rgb(219,163,46)" fg:x="20762" fg:w="6"/><text x="48.4385%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="48.1885%" y="1029" width="0.0139%" height="15" fill="rgb(216,126,30)" fg:x="20762" fg:w="6"/><text x="48.4385%" y="1039.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (5 samples, 0.01%)</title><rect x="48.2024%" y="1077" width="0.0116%" height="15" fill="rgb(208,139,11)" fg:x="20768" fg:w="5"/><text x="48.4524%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::freeze_ref (82 samples, 0.19%)</title><rect x="48.0353%" y="1125" width="0.1903%" height="15" fill="rgb(213,118,36)" fg:x="20696" fg:w="82"/><text x="48.2853%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (50 samples, 0.12%)</title><rect x="48.1096%" y="1109" width="0.1160%" height="15" fill="rgb(226,43,17)" fg:x="20728" fg:w="50"/><text x="48.3596%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (50 samples, 0.12%)</title><rect x="48.1096%" y="1093" width="0.1160%" height="15" fill="rgb(254,217,4)" fg:x="20728" fg:w="50"/><text x="48.3596%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="48.2302%" y="1077" width="0.0116%" height="15" fill="rgb(210,134,47)" fg:x="20780" fg:w="5"/><text x="48.4802%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (9 samples, 0.02%)</title><rect x="48.2952%" y="997" width="0.0209%" height="15" fill="rgb(237,24,49)" fg:x="20808" fg:w="9"/><text x="48.5452%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="48.3045%" y="981" width="0.0116%" height="15" fill="rgb(251,39,46)" fg:x="20812" fg:w="5"/><text x="48.5545%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.02%)</title><rect x="48.3161%" y="997" width="0.0232%" height="15" fill="rgb(251,220,3)" fg:x="20817" fg:w="10"/><text x="48.5661%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (8 samples, 0.02%)</title><rect x="48.3208%" y="981" width="0.0186%" height="15" fill="rgb(228,105,12)" fg:x="20819" fg:w="8"/><text x="48.5708%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (8 samples, 0.02%)</title><rect x="48.3208%" y="965" width="0.0186%" height="15" fill="rgb(215,196,1)" fg:x="20819" fg:w="8"/><text x="48.5708%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="48.3231%" y="949" width="0.0162%" height="15" fill="rgb(214,33,39)" fg:x="20820" fg:w="7"/><text x="48.5731%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.01%)</title><rect x="48.3417%" y="981" width="0.0116%" height="15" fill="rgb(220,19,52)" fg:x="20828" fg:w="5"/><text x="48.5917%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (36 samples, 0.08%)</title><rect x="48.2813%" y="1013" width="0.0836%" height="15" fill="rgb(221,78,38)" fg:x="20802" fg:w="36"/><text x="48.5313%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (11 samples, 0.03%)</title><rect x="48.3393%" y="997" width="0.0255%" height="15" fill="rgb(253,30,16)" fg:x="20827" fg:w="11"/><text x="48.5893%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (6 samples, 0.01%)</title><rect x="48.3672%" y="1013" width="0.0139%" height="15" fill="rgb(242,65,0)" fg:x="20839" fg:w="6"/><text x="48.6172%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (8 samples, 0.02%)</title><rect x="48.3927%" y="997" width="0.0186%" height="15" fill="rgb(235,201,12)" fg:x="20850" fg:w="8"/><text x="48.6427%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (75 samples, 0.17%)</title><rect x="48.2442%" y="1077" width="0.1741%" height="15" fill="rgb(233,161,9)" fg:x="20786" fg:w="75"/><text x="48.4942%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (75 samples, 0.17%)</title><rect x="48.2442%" y="1061" width="0.1741%" height="15" fill="rgb(241,207,41)" fg:x="20786" fg:w="75"/><text x="48.4942%" y="1071.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (71 samples, 0.16%)</title><rect x="48.2535%" y="1045" width="0.1648%" height="15" fill="rgb(212,69,46)" fg:x="20790" fg:w="71"/><text x="48.5035%" y="1055.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (69 samples, 0.16%)</title><rect x="48.2581%" y="1029" width="0.1601%" height="15" fill="rgb(239,69,45)" fg:x="20792" fg:w="69"/><text x="48.5081%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (15 samples, 0.03%)</title><rect x="48.3834%" y="1013" width="0.0348%" height="15" fill="rgb(242,117,48)" fg:x="20846" fg:w="15"/><text x="48.6334%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="48.4577%" y="997" width="0.0116%" height="15" fill="rgb(228,41,36)" fg:x="20878" fg:w="5"/><text x="48.7077%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.05%)</title><rect x="48.4391%" y="1029" width="0.0534%" height="15" fill="rgb(212,3,32)" fg:x="20870" fg:w="23"/><text x="48.6891%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="48.4507%" y="1013" width="0.0418%" height="15" fill="rgb(233,41,49)" fg:x="20875" fg:w="18"/><text x="48.7007%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (7 samples, 0.02%)</title><rect x="48.4763%" y="997" width="0.0162%" height="15" fill="rgb(252,170,49)" fg:x="20886" fg:w="7"/><text x="48.7263%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="48.4925%" y="1029" width="0.0139%" height="15" fill="rgb(229,53,26)" fg:x="20893" fg:w="6"/><text x="48.7425%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="48.4948%" y="1013" width="0.0116%" height="15" fill="rgb(217,157,12)" fg:x="20894" fg:w="5"/><text x="48.7448%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="48.4948%" y="997" width="0.0116%" height="15" fill="rgb(227,17,9)" fg:x="20894" fg:w="5"/><text x="48.7448%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="48.4948%" y="981" width="0.0116%" height="15" fill="rgb(218,84,12)" fg:x="20894" fg:w="5"/><text x="48.7448%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (127 samples, 0.29%)</title><rect x="48.2279%" y="1093" width="0.2948%" height="15" fill="rgb(212,79,24)" fg:x="20779" fg:w="127"/><text x="48.4779%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (45 samples, 0.10%)</title><rect x="48.4182%" y="1077" width="0.1044%" height="15" fill="rgb(217,222,37)" fg:x="20861" fg:w="45"/><text x="48.6682%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (43 samples, 0.10%)</title><rect x="48.4229%" y="1061" width="0.0998%" height="15" fill="rgb(246,208,8)" fg:x="20863" fg:w="43"/><text x="48.6729%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (41 samples, 0.10%)</title><rect x="48.4275%" y="1045" width="0.0952%" height="15" fill="rgb(244,133,10)" fg:x="20865" fg:w="41"/><text x="48.6775%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="48.5111%" y="1029" width="0.0116%" height="15" fill="rgb(209,219,41)" fg:x="20901" fg:w="5"/><text x="48.7611%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (129 samples, 0.30%)</title><rect x="48.2279%" y="1109" width="0.2994%" height="15" fill="rgb(253,175,45)" fg:x="20779" fg:w="129"/><text x="48.4779%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (6 samples, 0.01%)</title><rect x="48.5366%" y="1077" width="0.0139%" height="15" fill="rgb(235,100,37)" fg:x="20912" fg:w="6"/><text x="48.7866%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="48.5366%" y="1061" width="0.0139%" height="15" fill="rgb(225,87,19)" fg:x="20912" fg:w="6"/><text x="48.7866%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="48.5389%" y="1045" width="0.0116%" height="15" fill="rgb(217,152,17)" fg:x="20913" fg:w="5"/><text x="48.7889%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="48.5877%" y="1061" width="0.0116%" height="15" fill="rgb(235,72,13)" fg:x="20934" fg:w="5"/><text x="48.8377%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="48.5877%" y="1045" width="0.0116%" height="15" fill="rgb(233,140,18)" fg:x="20934" fg:w="5"/><text x="48.8377%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.01%)</title><rect x="48.6062%" y="949" width="0.0116%" height="15" fill="rgb(207,212,28)" fg:x="20942" fg:w="5"/><text x="48.8562%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="48.6062%" y="933" width="0.0116%" height="15" fill="rgb(220,130,25)" fg:x="20942" fg:w="5"/><text x="48.8562%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (8 samples, 0.02%)</title><rect x="48.6039%" y="1045" width="0.0186%" height="15" fill="rgb(205,55,34)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (8 samples, 0.02%)</title><rect x="48.6039%" y="1029" width="0.0186%" height="15" fill="rgb(237,54,35)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="48.6039%" y="1013" width="0.0186%" height="15" fill="rgb(208,67,23)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (8 samples, 0.02%)</title><rect x="48.6039%" y="997" width="0.0186%" height="15" fill="rgb(206,207,50)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.02%)</title><rect x="48.6039%" y="981" width="0.0186%" height="15" fill="rgb(213,211,42)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="991.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="48.6039%" y="965" width="0.0186%" height="15" fill="rgb(252,197,50)" fg:x="20941" fg:w="8"/><text x="48.8539%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (12 samples, 0.03%)</title><rect x="48.6016%" y="1061" width="0.0279%" height="15" fill="rgb(251,211,41)" fg:x="20940" fg:w="12"/><text x="48.8516%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.03%)</title><rect x="48.6295%" y="1061" width="0.0279%" height="15" fill="rgb(229,211,5)" fg:x="20952" fg:w="12"/><text x="48.8795%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="48.6387%" y="1045" width="0.0186%" height="15" fill="rgb(239,36,31)" fg:x="20956" fg:w="8"/><text x="48.8887%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.01%)</title><rect x="48.6434%" y="1029" width="0.0139%" height="15" fill="rgb(248,67,31)" fg:x="20958" fg:w="6"/><text x="48.8934%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="48.6457%" y="1013" width="0.0116%" height="15" fill="rgb(249,55,44)" fg:x="20959" fg:w="5"/><text x="48.8957%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (6 samples, 0.01%)</title><rect x="48.6573%" y="1045" width="0.0139%" height="15" fill="rgb(216,82,12)" fg:x="20964" fg:w="6"/><text x="48.9073%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (6 samples, 0.01%)</title><rect x="48.6573%" y="1029" width="0.0139%" height="15" fill="rgb(242,174,1)" fg:x="20964" fg:w="6"/><text x="48.9073%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (6 samples, 0.01%)</title><rect x="48.6573%" y="1013" width="0.0139%" height="15" fill="rgb(208,120,29)" fg:x="20964" fg:w="6"/><text x="48.9073%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="48.6596%" y="997" width="0.0116%" height="15" fill="rgb(221,105,43)" fg:x="20965" fg:w="5"/><text x="48.9096%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (5 samples, 0.01%)</title><rect x="48.6596%" y="981" width="0.0116%" height="15" fill="rgb(234,124,22)" fg:x="20965" fg:w="5"/><text x="48.9096%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (7 samples, 0.02%)</title><rect x="48.6573%" y="1061" width="0.0162%" height="15" fill="rgb(212,23,30)" fg:x="20964" fg:w="7"/><text x="48.9073%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.01%)</title><rect x="48.6759%" y="1061" width="0.0139%" height="15" fill="rgb(219,122,53)" fg:x="20972" fg:w="6"/><text x="48.9259%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (6 samples, 0.01%)</title><rect x="48.6759%" y="1045" width="0.0139%" height="15" fill="rgb(248,84,24)" fg:x="20972" fg:w="6"/><text x="48.9259%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (61 samples, 0.14%)</title><rect x="48.5505%" y="1077" width="0.1416%" height="15" fill="rgb(245,115,18)" fg:x="20918" fg:w="61"/><text x="48.8005%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (5 samples, 0.01%)</title><rect x="48.7060%" y="1013" width="0.0116%" height="15" fill="rgb(227,176,51)" fg:x="20985" fg:w="5"/><text x="48.9560%" y="1023.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::move_loc (215 samples, 0.50%)</title><rect x="48.2256%" y="1125" width="0.4990%" height="15" fill="rgb(229,63,42)" fg:x="20778" fg:w="215"/><text x="48.4756%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_borrowed (85 samples, 0.20%)</title><rect x="48.5273%" y="1109" width="0.1973%" height="15" fill="rgb(247,202,24)" fg:x="20908" fg:w="85"/><text x="48.7773%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (83 samples, 0.19%)</title><rect x="48.5320%" y="1093" width="0.1926%" height="15" fill="rgb(244,173,20)" fg:x="20910" fg:w="83"/><text x="48.7820%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="48.7037%" y="1077" width="0.0209%" height="15" fill="rgb(242,81,47)" fg:x="20984" fg:w="9"/><text x="48.9537%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="48.7037%" y="1061" width="0.0209%" height="15" fill="rgb(231,185,54)" fg:x="20984" fg:w="9"/><text x="48.9537%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="48.7060%" y="1045" width="0.0186%" height="15" fill="rgb(243,55,32)" fg:x="20985" fg:w="8"/><text x="48.9560%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="48.7060%" y="1029" width="0.0186%" height="15" fill="rgb(208,167,19)" fg:x="20985" fg:w="8"/><text x="48.9560%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="48.7385%" y="1077" width="0.0162%" height="15" fill="rgb(231,72,35)" fg:x="20999" fg:w="7"/><text x="48.9885%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="48.7385%" y="1061" width="0.0162%" height="15" fill="rgb(250,173,51)" fg:x="20999" fg:w="7"/><text x="48.9885%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="48.7594%" y="1013" width="0.0116%" height="15" fill="rgb(209,5,22)" fg:x="21008" fg:w="5"/><text x="49.0094%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.01%)</title><rect x="48.7594%" y="997" width="0.0116%" height="15" fill="rgb(250,174,19)" fg:x="21008" fg:w="5"/><text x="49.0094%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="48.7548%" y="1077" width="0.0186%" height="15" fill="rgb(217,3,49)" fg:x="21006" fg:w="8"/><text x="49.0048%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="48.7571%" y="1061" width="0.0162%" height="15" fill="rgb(218,225,5)" fg:x="21007" fg:w="7"/><text x="49.0071%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (7 samples, 0.02%)</title><rect x="48.7571%" y="1045" width="0.0162%" height="15" fill="rgb(236,89,11)" fg:x="21007" fg:w="7"/><text x="49.0071%" y="1055.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="48.7594%" y="1029" width="0.0139%" height="15" fill="rgb(206,33,28)" fg:x="21008" fg:w="6"/><text x="49.0094%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (15 samples, 0.03%)</title><rect x="48.8082%" y="981" width="0.0348%" height="15" fill="rgb(241,56,42)" fg:x="21029" fg:w="15"/><text x="49.0582%" y="991.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (9 samples, 0.02%)</title><rect x="48.8221%" y="965" width="0.0209%" height="15" fill="rgb(222,44,11)" fg:x="21035" fg:w="9"/><text x="49.0721%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (29 samples, 0.07%)</title><rect x="48.7896%" y="1045" width="0.0673%" height="15" fill="rgb(234,111,20)" fg:x="21021" fg:w="29"/><text x="49.0396%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (29 samples, 0.07%)</title><rect x="48.7896%" y="1029" width="0.0673%" height="15" fill="rgb(237,77,6)" fg:x="21021" fg:w="29"/><text x="49.0396%" y="1039.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (29 samples, 0.07%)</title><rect x="48.7896%" y="1013" width="0.0673%" height="15" fill="rgb(235,111,23)" fg:x="21021" fg:w="29"/><text x="49.0396%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (27 samples, 0.06%)</title><rect x="48.7942%" y="997" width="0.0627%" height="15" fill="rgb(251,135,29)" fg:x="21023" fg:w="27"/><text x="49.0442%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="48.8569%" y="1045" width="0.0186%" height="15" fill="rgb(217,57,1)" fg:x="21050" fg:w="8"/><text x="49.1069%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="48.8569%" y="1029" width="0.0186%" height="15" fill="rgb(249,119,31)" fg:x="21050" fg:w="8"/><text x="49.1069%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="48.8569%" y="1013" width="0.0186%" height="15" fill="rgb(233,164,33)" fg:x="21050" fg:w="8"/><text x="49.1069%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (40 samples, 0.09%)</title><rect x="48.7850%" y="1061" width="0.0928%" height="15" fill="rgb(250,217,43)" fg:x="21019" fg:w="40"/><text x="49.0350%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (41 samples, 0.10%)</title><rect x="48.7850%" y="1077" width="0.0952%" height="15" fill="rgb(232,154,50)" fg:x="21019" fg:w="41"/><text x="49.0350%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="48.8987%" y="981" width="0.0209%" height="15" fill="rgb(227,190,8)" fg:x="21068" fg:w="9"/><text x="49.1487%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (8 samples, 0.02%)</title><rect x="48.9010%" y="965" width="0.0186%" height="15" fill="rgb(209,217,32)" fg:x="21069" fg:w="8"/><text x="49.1510%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="48.9033%" y="949" width="0.0162%" height="15" fill="rgb(243,203,50)" fg:x="21070" fg:w="7"/><text x="49.1533%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="48.8940%" y="1013" width="0.0279%" height="15" fill="rgb(232,152,27)" fg:x="21066" fg:w="12"/><text x="49.1440%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="48.8987%" y="997" width="0.0232%" height="15" fill="rgb(240,34,29)" fg:x="21068" fg:w="10"/><text x="49.1487%" y="1007.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (7 samples, 0.02%)</title><rect x="48.9312%" y="981" width="0.0162%" height="15" fill="rgb(215,185,52)" fg:x="21082" fg:w="7"/><text x="49.1812%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (10 samples, 0.02%)</title><rect x="48.9683%" y="901" width="0.0232%" height="15" fill="rgb(240,89,49)" fg:x="21098" fg:w="10"/><text x="49.2183%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.02%)</title><rect x="48.9683%" y="885" width="0.0232%" height="15" fill="rgb(225,12,52)" fg:x="21098" fg:w="10"/><text x="49.2183%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="48.9753%" y="869" width="0.0162%" height="15" fill="rgb(239,128,45)" fg:x="21101" fg:w="7"/><text x="49.2253%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (7 samples, 0.02%)</title><rect x="48.9753%" y="853" width="0.0162%" height="15" fill="rgb(211,78,47)" fg:x="21101" fg:w="7"/><text x="49.2253%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="48.9753%" y="837" width="0.0162%" height="15" fill="rgb(232,31,21)" fg:x="21101" fg:w="7"/><text x="49.2253%" y="847.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (54 samples, 0.13%)</title><rect x="48.8801%" y="1061" width="0.1253%" height="15" fill="rgb(222,168,14)" fg:x="21060" fg:w="54"/><text x="49.1301%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (50 samples, 0.12%)</title><rect x="48.8894%" y="1045" width="0.1160%" height="15" fill="rgb(209,128,24)" fg:x="21064" fg:w="50"/><text x="49.1394%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (49 samples, 0.11%)</title><rect x="48.8917%" y="1029" width="0.1137%" height="15" fill="rgb(249,35,13)" fg:x="21065" fg:w="49"/><text x="49.1417%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (36 samples, 0.08%)</title><rect x="48.9219%" y="1013" width="0.0836%" height="15" fill="rgb(218,7,2)" fg:x="21078" fg:w="36"/><text x="49.1719%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (36 samples, 0.08%)</title><rect x="48.9219%" y="997" width="0.0836%" height="15" fill="rgb(238,107,27)" fg:x="21078" fg:w="36"/><text x="49.1719%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (25 samples, 0.06%)</title><rect x="48.9474%" y="981" width="0.0580%" height="15" fill="rgb(217,88,38)" fg:x="21089" fg:w="25"/><text x="49.1974%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.06%)</title><rect x="48.9474%" y="965" width="0.0580%" height="15" fill="rgb(230,207,0)" fg:x="21089" fg:w="25"/><text x="49.1974%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.04%)</title><rect x="48.9683%" y="949" width="0.0371%" height="15" fill="rgb(249,64,54)" fg:x="21098" fg:w="16"/><text x="49.2183%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (16 samples, 0.04%)</title><rect x="48.9683%" y="933" width="0.0371%" height="15" fill="rgb(231,7,11)" fg:x="21098" fg:w="16"/><text x="49.2183%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (16 samples, 0.04%)</title><rect x="48.9683%" y="917" width="0.0371%" height="15" fill="rgb(205,149,21)" fg:x="21098" fg:w="16"/><text x="49.2183%" y="927.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (5 samples, 0.01%)</title><rect x="48.9938%" y="901" width="0.0116%" height="15" fill="rgb(215,126,34)" fg:x="21109" fg:w="5"/><text x="49.2438%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="48.9938%" y="885" width="0.0116%" height="15" fill="rgb(241,132,45)" fg:x="21109" fg:w="5"/><text x="49.2438%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="48.9938%" y="869" width="0.0116%" height="15" fill="rgb(252,69,32)" fg:x="21109" fg:w="5"/><text x="49.2438%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.0171%" y="1013" width="0.0116%" height="15" fill="rgb(232,204,19)" fg:x="21119" fg:w="5"/><text x="49.2671%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.0171%" y="997" width="0.0116%" height="15" fill="rgb(249,15,47)" fg:x="21119" fg:w="5"/><text x="49.2671%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="49.0171%" y="981" width="0.0116%" height="15" fill="rgb(209,227,23)" fg:x="21119" fg:w="5"/><text x="49.2671%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="49.0171%" y="965" width="0.0116%" height="15" fill="rgb(248,92,24)" fg:x="21119" fg:w="5"/><text x="49.2671%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="49.0171%" y="949" width="0.0116%" height="15" fill="rgb(247,59,2)" fg:x="21119" fg:w="5"/><text x="49.2671%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (24 samples, 0.06%)</title><rect x="49.0055%" y="1061" width="0.0557%" height="15" fill="rgb(221,30,5)" fg:x="21114" fg:w="24"/><text x="49.2555%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (22 samples, 0.05%)</title><rect x="49.0101%" y="1045" width="0.0511%" height="15" fill="rgb(208,108,53)" fg:x="21116" fg:w="22"/><text x="49.2601%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.05%)</title><rect x="49.0124%" y="1029" width="0.0487%" height="15" fill="rgb(211,183,26)" fg:x="21117" fg:w="21"/><text x="49.2624%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (14 samples, 0.03%)</title><rect x="49.0287%" y="1013" width="0.0325%" height="15" fill="rgb(232,132,4)" fg:x="21124" fg:w="14"/><text x="49.2787%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (14 samples, 0.03%)</title><rect x="49.0287%" y="997" width="0.0325%" height="15" fill="rgb(253,128,37)" fg:x="21124" fg:w="14"/><text x="49.2787%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.03%)</title><rect x="49.0356%" y="981" width="0.0255%" height="15" fill="rgb(221,58,24)" fg:x="21127" fg:w="11"/><text x="49.2856%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="49.0379%" y="965" width="0.0232%" height="15" fill="rgb(230,54,45)" fg:x="21128" fg:w="10"/><text x="49.2879%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.02%)</title><rect x="49.0426%" y="949" width="0.0186%" height="15" fill="rgb(254,21,18)" fg:x="21130" fg:w="8"/><text x="49.2926%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (8 samples, 0.02%)</title><rect x="49.0426%" y="933" width="0.0186%" height="15" fill="rgb(221,108,0)" fg:x="21130" fg:w="8"/><text x="49.2926%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (8 samples, 0.02%)</title><rect x="49.0426%" y="917" width="0.0186%" height="15" fill="rgb(206,95,1)" fg:x="21130" fg:w="8"/><text x="49.2926%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (8 samples, 0.02%)</title><rect x="49.0426%" y="901" width="0.0186%" height="15" fill="rgb(237,52,5)" fg:x="21130" fg:w="8"/><text x="49.2926%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="49.0449%" y="885" width="0.0162%" height="15" fill="rgb(218,150,34)" fg:x="21131" fg:w="7"/><text x="49.2949%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.01%)</title><rect x="49.0472%" y="869" width="0.0139%" height="15" fill="rgb(235,194,28)" fg:x="21132" fg:w="6"/><text x="49.2972%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.01%)</title><rect x="49.0472%" y="853" width="0.0139%" height="15" fill="rgb(245,92,18)" fg:x="21132" fg:w="6"/><text x="49.2972%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.0658%" y="1013" width="0.0116%" height="15" fill="rgb(253,203,53)" fg:x="21140" fg:w="5"/><text x="49.3158%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.0983%" y="949" width="0.0116%" height="15" fill="rgb(249,185,47)" fg:x="21154" fg:w="5"/><text x="49.3483%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.0983%" y="933" width="0.0116%" height="15" fill="rgb(252,194,52)" fg:x="21154" fg:w="5"/><text x="49.3483%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (101 samples, 0.23%)</title><rect x="48.8801%" y="1077" width="0.2344%" height="15" fill="rgb(210,53,36)" fg:x="21060" fg:w="101"/><text x="49.1301%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (23 samples, 0.05%)</title><rect x="49.0612%" y="1061" width="0.0534%" height="15" fill="rgb(237,37,25)" fg:x="21138" fg:w="23"/><text x="49.3112%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (22 samples, 0.05%)</title><rect x="49.0635%" y="1045" width="0.0511%" height="15" fill="rgb(242,116,27)" fg:x="21139" fg:w="22"/><text x="49.3135%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.05%)</title><rect x="49.0635%" y="1029" width="0.0511%" height="15" fill="rgb(213,185,26)" fg:x="21139" fg:w="22"/><text x="49.3135%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.04%)</title><rect x="49.0774%" y="1013" width="0.0371%" height="15" fill="rgb(225,204,8)" fg:x="21145" fg:w="16"/><text x="49.3274%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (16 samples, 0.04%)</title><rect x="49.0774%" y="997" width="0.0371%" height="15" fill="rgb(254,111,37)" fg:x="21145" fg:w="16"/><text x="49.3274%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.03%)</title><rect x="49.0867%" y="981" width="0.0279%" height="15" fill="rgb(242,35,9)" fg:x="21149" fg:w="12"/><text x="49.3367%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="49.0890%" y="965" width="0.0255%" height="15" fill="rgb(232,138,49)" fg:x="21150" fg:w="11"/><text x="49.3390%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (6 samples, 0.01%)</title><rect x="49.1238%" y="1077" width="0.0139%" height="15" fill="rgb(247,56,4)" fg:x="21165" fg:w="6"/><text x="49.3738%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (6 samples, 0.01%)</title><rect x="49.1238%" y="1061" width="0.0139%" height="15" fill="rgb(226,179,17)" fg:x="21165" fg:w="6"/><text x="49.3738%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="49.1238%" y="1045" width="0.0139%" height="15" fill="rgb(216,163,45)" fg:x="21165" fg:w="6"/><text x="49.3738%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (5 samples, 0.01%)</title><rect x="49.1261%" y="1029" width="0.0116%" height="15" fill="rgb(211,157,3)" fg:x="21166" fg:w="5"/><text x="49.3761%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="49.1261%" y="1013" width="0.0116%" height="15" fill="rgb(234,44,20)" fg:x="21166" fg:w="5"/><text x="49.3761%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (5 samples, 0.01%)</title><rect x="49.1261%" y="997" width="0.0116%" height="15" fill="rgb(254,138,23)" fg:x="21166" fg:w="5"/><text x="49.3761%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="49.1261%" y="981" width="0.0116%" height="15" fill="rgb(206,119,39)" fg:x="21166" fg:w="5"/><text x="49.3761%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (5 samples, 0.01%)</title><rect x="49.1261%" y="965" width="0.0116%" height="15" fill="rgb(231,105,52)" fg:x="21166" fg:w="5"/><text x="49.3761%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::read_ref (181 samples, 0.42%)</title><rect x="48.7246%" y="1125" width="0.4201%" height="15" fill="rgb(250,20,5)" fg:x="20993" fg:w="181"/><text x="48.9746%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (177 samples, 0.41%)</title><rect x="48.7339%" y="1109" width="0.4108%" height="15" fill="rgb(215,198,30)" fg:x="20997" fg:w="177"/><text x="48.9839%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (177 samples, 0.41%)</title><rect x="48.7339%" y="1093" width="0.4108%" height="15" fill="rgb(246,142,8)" fg:x="20997" fg:w="177"/><text x="48.9839%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="49.1563%" y="1077" width="0.0162%" height="15" fill="rgb(243,26,38)" fg:x="21179" fg:w="7"/><text x="49.4063%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="49.1563%" y="1061" width="0.0162%" height="15" fill="rgb(205,133,28)" fg:x="21179" fg:w="7"/><text x="49.4063%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (7 samples, 0.02%)</title><rect x="49.1726%" y="1045" width="0.0162%" height="15" fill="rgb(212,34,0)" fg:x="21186" fg:w="7"/><text x="49.4226%" y="1055.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="49.1726%" y="1029" width="0.0162%" height="15" fill="rgb(251,226,22)" fg:x="21186" fg:w="7"/><text x="49.4226%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="49.1749%" y="1013" width="0.0139%" height="15" fill="rgb(252,119,9)" fg:x="21187" fg:w="6"/><text x="49.4249%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (6 samples, 0.01%)</title><rect x="49.1749%" y="997" width="0.0139%" height="15" fill="rgb(213,150,50)" fg:x="21187" fg:w="6"/><text x="49.4249%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="49.1726%" y="1061" width="0.0209%" height="15" fill="rgb(212,24,39)" fg:x="21186" fg:w="9"/><text x="49.4226%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="49.1726%" y="1077" width="0.0255%" height="15" fill="rgb(213,46,39)" fg:x="21186" fg:w="11"/><text x="49.4226%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (11 samples, 0.03%)</title><rect x="49.2027%" y="1045" width="0.0255%" height="15" fill="rgb(239,106,12)" fg:x="21199" fg:w="11"/><text x="49.4527%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (11 samples, 0.03%)</title><rect x="49.2027%" y="1029" width="0.0255%" height="15" fill="rgb(249,229,21)" fg:x="21199" fg:w="11"/><text x="49.4527%" y="1039.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (11 samples, 0.03%)</title><rect x="49.2027%" y="1013" width="0.0255%" height="15" fill="rgb(212,158,3)" fg:x="21199" fg:w="11"/><text x="49.4527%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (9 samples, 0.02%)</title><rect x="49.2074%" y="997" width="0.0209%" height="15" fill="rgb(253,26,48)" fg:x="21201" fg:w="9"/><text x="49.4574%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (18 samples, 0.04%)</title><rect x="49.2027%" y="1061" width="0.0418%" height="15" fill="rgb(238,178,20)" fg:x="21199" fg:w="18"/><text x="49.4527%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="49.2283%" y="1045" width="0.0162%" height="15" fill="rgb(208,86,15)" fg:x="21210" fg:w="7"/><text x="49.4783%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="49.2329%" y="1029" width="0.0116%" height="15" fill="rgb(239,42,53)" fg:x="21212" fg:w="5"/><text x="49.4829%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="49.2329%" y="1013" width="0.0116%" height="15" fill="rgb(245,226,8)" fg:x="21212" fg:w="5"/><text x="49.4829%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (19 samples, 0.04%)</title><rect x="49.2027%" y="1077" width="0.0441%" height="15" fill="rgb(216,176,32)" fg:x="21199" fg:w="19"/><text x="49.4527%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (5 samples, 0.01%)</title><rect x="49.2817%" y="901" width="0.0116%" height="15" fill="rgb(231,186,21)" fg:x="21233" fg:w="5"/><text x="49.5317%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="49.2933%" y="901" width="0.0116%" height="15" fill="rgb(205,95,49)" fg:x="21238" fg:w="5"/><text x="49.5433%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="49.2933%" y="885" width="0.0116%" height="15" fill="rgb(217,145,8)" fg:x="21238" fg:w="5"/><text x="49.5433%" y="895.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (27 samples, 0.06%)</title><rect x="49.2468%" y="1061" width="0.0627%" height="15" fill="rgb(239,144,48)" fg:x="21218" fg:w="27"/><text x="49.4968%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (26 samples, 0.06%)</title><rect x="49.2492%" y="1045" width="0.0603%" height="15" fill="rgb(214,189,23)" fg:x="21219" fg:w="26"/><text x="49.4992%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.06%)</title><rect x="49.2492%" y="1029" width="0.0603%" height="15" fill="rgb(229,157,17)" fg:x="21219" fg:w="26"/><text x="49.4992%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (22 samples, 0.05%)</title><rect x="49.2584%" y="1013" width="0.0511%" height="15" fill="rgb(230,5,48)" fg:x="21223" fg:w="22"/><text x="49.5084%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (22 samples, 0.05%)</title><rect x="49.2584%" y="997" width="0.0511%" height="15" fill="rgb(224,156,48)" fg:x="21223" fg:w="22"/><text x="49.5084%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.04%)</title><rect x="49.2724%" y="981" width="0.0371%" height="15" fill="rgb(223,14,29)" fg:x="21229" fg:w="16"/><text x="49.5224%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.03%)</title><rect x="49.2747%" y="965" width="0.0348%" height="15" fill="rgb(229,96,36)" fg:x="21230" fg:w="15"/><text x="49.5247%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.03%)</title><rect x="49.2817%" y="949" width="0.0279%" height="15" fill="rgb(231,102,53)" fg:x="21233" fg:w="12"/><text x="49.5317%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (12 samples, 0.03%)</title><rect x="49.2817%" y="933" width="0.0279%" height="15" fill="rgb(210,77,38)" fg:x="21233" fg:w="12"/><text x="49.5317%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (12 samples, 0.03%)</title><rect x="49.2817%" y="917" width="0.0279%" height="15" fill="rgb(235,131,6)" fg:x="21233" fg:w="12"/><text x="49.5317%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (8 samples, 0.02%)</title><rect x="49.3095%" y="1045" width="0.0186%" height="15" fill="rgb(252,55,38)" fg:x="21245" fg:w="8"/><text x="49.5595%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="49.3118%" y="1029" width="0.0162%" height="15" fill="rgb(246,38,14)" fg:x="21246" fg:w="7"/><text x="49.5618%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (5 samples, 0.01%)</title><rect x="49.3443%" y="917" width="0.0116%" height="15" fill="rgb(242,27,5)" fg:x="21260" fg:w="5"/><text x="49.5943%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="49.3374%" y="997" width="0.0255%" height="15" fill="rgb(228,65,35)" fg:x="21257" fg:w="11"/><text x="49.5874%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="49.3397%" y="981" width="0.0232%" height="15" fill="rgb(245,93,11)" fg:x="21258" fg:w="10"/><text x="49.5897%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="49.3420%" y="965" width="0.0209%" height="15" fill="rgb(213,1,31)" fg:x="21259" fg:w="9"/><text x="49.5920%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="49.3420%" y="949" width="0.0209%" height="15" fill="rgb(237,205,14)" fg:x="21259" fg:w="9"/><text x="49.5920%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="49.3443%" y="933" width="0.0186%" height="15" fill="rgb(232,118,45)" fg:x="21260" fg:w="8"/><text x="49.5943%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="49.3350%" y="1013" width="0.0302%" height="15" fill="rgb(218,5,6)" fg:x="21256" fg:w="13"/><text x="49.5850%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (8 samples, 0.02%)</title><rect x="49.3675%" y="981" width="0.0186%" height="15" fill="rgb(251,87,51)" fg:x="21270" fg:w="8"/><text x="49.6175%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="49.3699%" y="965" width="0.0162%" height="15" fill="rgb(207,225,20)" fg:x="21271" fg:w="7"/><text x="49.6199%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (46 samples, 0.11%)</title><rect x="49.3095%" y="1061" width="0.1068%" height="15" fill="rgb(222,78,54)" fg:x="21245" fg:w="46"/><text x="49.5595%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (38 samples, 0.09%)</title><rect x="49.3281%" y="1045" width="0.0882%" height="15" fill="rgb(232,85,16)" fg:x="21253" fg:w="38"/><text x="49.5781%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.09%)</title><rect x="49.3304%" y="1029" width="0.0859%" height="15" fill="rgb(244,25,33)" fg:x="21254" fg:w="37"/><text x="49.5804%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (22 samples, 0.05%)</title><rect x="49.3652%" y="1013" width="0.0511%" height="15" fill="rgb(233,24,36)" fg:x="21269" fg:w="22"/><text x="49.6152%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (21 samples, 0.05%)</title><rect x="49.3675%" y="997" width="0.0487%" height="15" fill="rgb(253,49,54)" fg:x="21270" fg:w="21"/><text x="49.6175%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.02%)</title><rect x="49.3931%" y="981" width="0.0232%" height="15" fill="rgb(245,12,22)" fg:x="21281" fg:w="10"/><text x="49.6431%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="49.3954%" y="965" width="0.0209%" height="15" fill="rgb(253,141,28)" fg:x="21282" fg:w="9"/><text x="49.6454%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="49.4256%" y="1013" width="0.0279%" height="15" fill="rgb(225,207,27)" fg:x="21295" fg:w="12"/><text x="49.6756%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="49.4302%" y="997" width="0.0232%" height="15" fill="rgb(220,84,2)" fg:x="21297" fg:w="10"/><text x="49.6802%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="49.4302%" y="981" width="0.0232%" height="15" fill="rgb(224,37,37)" fg:x="21297" fg:w="10"/><text x="49.6802%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.02%)</title><rect x="49.4302%" y="965" width="0.0232%" height="15" fill="rgb(220,143,18)" fg:x="21297" fg:w="10"/><text x="49.6802%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="49.4348%" y="949" width="0.0186%" height="15" fill="rgb(210,88,33)" fg:x="21299" fg:w="8"/><text x="49.6848%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (99 samples, 0.23%)</title><rect x="49.2468%" y="1077" width="0.2298%" height="15" fill="rgb(219,87,51)" fg:x="21218" fg:w="99"/><text x="49.4968%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (26 samples, 0.06%)</title><rect x="49.4163%" y="1061" width="0.0603%" height="15" fill="rgb(211,7,35)" fg:x="21291" fg:w="26"/><text x="49.6663%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (24 samples, 0.06%)</title><rect x="49.4209%" y="1045" width="0.0557%" height="15" fill="rgb(232,77,2)" fg:x="21293" fg:w="24"/><text x="49.6709%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.06%)</title><rect x="49.4209%" y="1029" width="0.0557%" height="15" fill="rgb(249,94,25)" fg:x="21293" fg:w="24"/><text x="49.6709%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.02%)</title><rect x="49.4580%" y="1013" width="0.0186%" height="15" fill="rgb(215,112,2)" fg:x="21309" fg:w="8"/><text x="49.7080%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (7 samples, 0.02%)</title><rect x="49.4604%" y="997" width="0.0162%" height="15" fill="rgb(226,115,48)" fg:x="21310" fg:w="7"/><text x="49.7104%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.01%)</title><rect x="49.4650%" y="981" width="0.0116%" height="15" fill="rgb(249,196,10)" fg:x="21312" fg:w="5"/><text x="49.7150%" y="991.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release_value (150 samples, 0.35%)</title><rect x="49.1447%" y="1125" width="0.3481%" height="15" fill="rgb(237,109,14)" fg:x="21174" fg:w="150"/><text x="49.3947%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (150 samples, 0.35%)</title><rect x="49.1447%" y="1109" width="0.3481%" height="15" fill="rgb(217,103,53)" fg:x="21174" fg:w="150"/><text x="49.3947%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (150 samples, 0.35%)</title><rect x="49.1447%" y="1093" width="0.3481%" height="15" fill="rgb(244,137,9)" fg:x="21174" fg:w="150"/><text x="49.3947%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="49.5091%" y="1045" width="0.0186%" height="15" fill="rgb(227,201,3)" fg:x="21331" fg:w="8"/><text x="49.7591%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="49.5021%" y="1109" width="0.0302%" height="15" fill="rgb(243,94,6)" fg:x="21328" fg:w="13"/><text x="49.7521%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="49.5045%" y="1093" width="0.0279%" height="15" fill="rgb(235,118,5)" fg:x="21329" fg:w="12"/><text x="49.7545%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="49.5068%" y="1077" width="0.0255%" height="15" fill="rgb(247,10,30)" fg:x="21330" fg:w="11"/><text x="49.7568%" y="1087.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="49.5068%" y="1061" width="0.0255%" height="15" fill="rgb(205,26,28)" fg:x="21330" fg:w="11"/><text x="49.7568%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="49.5393%" y="1109" width="0.0139%" height="15" fill="rgb(206,99,35)" fg:x="21344" fg:w="6"/><text x="49.7893%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6 samples, 0.01%)</title><rect x="49.5393%" y="1093" width="0.0139%" height="15" fill="rgb(238,130,40)" fg:x="21344" fg:w="6"/><text x="49.7893%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.01%)</title><rect x="49.5393%" y="1077" width="0.0139%" height="15" fill="rgb(224,126,31)" fg:x="21344" fg:w="6"/><text x="49.7893%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (10 samples, 0.02%)</title><rect x="49.5764%" y="1077" width="0.0232%" height="15" fill="rgb(254,105,17)" fg:x="21360" fg:w="10"/><text x="49.8264%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (8 samples, 0.02%)</title><rect x="49.5811%" y="1061" width="0.0186%" height="15" fill="rgb(216,87,36)" fg:x="21362" fg:w="8"/><text x="49.8311%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="49.5880%" y="1045" width="0.0116%" height="15" fill="rgb(240,21,12)" fg:x="21365" fg:w="5"/><text x="49.8380%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="49.5880%" y="1029" width="0.0116%" height="15" fill="rgb(245,192,34)" fg:x="21365" fg:w="5"/><text x="49.8380%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="49.5880%" y="1013" width="0.0116%" height="15" fill="rgb(226,100,49)" fg:x="21365" fg:w="5"/><text x="49.8380%" y="1023.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_frame_safe_to_destroy (20 samples, 0.05%)</title><rect x="49.5625%" y="1109" width="0.0464%" height="15" fill="rgb(245,188,27)" fg:x="21354" fg:w="20"/><text x="49.8125%" y="1119.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (19 samples, 0.04%)</title><rect x="49.5648%" y="1093" width="0.0441%" height="15" fill="rgb(212,170,8)" fg:x="21355" fg:w="19"/><text x="49.8148%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="49.6112%" y="1109" width="0.0116%" height="15" fill="rgb(217,113,29)" fg:x="21375" fg:w="5"/><text x="49.8612%" y="1119.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (5 samples, 0.01%)</title><rect x="49.6228%" y="1061" width="0.0116%" height="15" fill="rgb(237,30,3)" fg:x="21380" fg:w="5"/><text x="49.8728%" y="1071.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (5 samples, 0.01%)</title><rect x="49.6228%" y="1045" width="0.0116%" height="15" fill="rgb(227,19,28)" fg:x="21380" fg:w="5"/><text x="49.8728%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::ret (66 samples, 0.15%)</title><rect x="49.4929%" y="1125" width="0.1532%" height="15" fill="rgb(239,172,45)" fg:x="21324" fg:w="66"/><text x="49.7429%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;,bytecode_verifier::reference_safety::abstract_state::AbstractState::ret::{{closure}}&gt;&gt; (10 samples, 0.02%)</title><rect x="49.6228%" y="1109" width="0.0232%" height="15" fill="rgb(254,55,39)" fg:x="21380" fg:w="10"/><text x="49.8728%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (10 samples, 0.02%)</title><rect x="49.6228%" y="1093" width="0.0232%" height="15" fill="rgb(249,208,12)" fg:x="21380" fg:w="10"/><text x="49.8728%" y="1103.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="49.6228%" y="1077" width="0.0232%" height="15" fill="rgb(240,52,13)" fg:x="21380" fg:w="10"/><text x="49.8728%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,alloc::alloc::Global&gt;&gt; (5 samples, 0.01%)</title><rect x="49.6344%" y="1061" width="0.0116%" height="15" fill="rgb(252,149,13)" fg:x="21385" fg:w="5"/><text x="49.8844%" y="1071.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="49.6344%" y="1045" width="0.0116%" height="15" fill="rgb(232,81,48)" fg:x="21385" fg:w="5"/><text x="49.8844%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="49.6809%" y="1029" width="0.0116%" height="15" fill="rgb(222,144,2)" fg:x="21405" fg:w="5"/><text x="49.9309%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="49.6994%" y="1029" width="0.0162%" height="15" fill="rgb(216,81,32)" fg:x="21413" fg:w="7"/><text x="49.9494%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (8 samples, 0.02%)</title><rect x="49.7180%" y="1029" width="0.0186%" height="15" fill="rgb(244,78,51)" fg:x="21421" fg:w="8"/><text x="49.9680%" y="1039.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="49.7226%" y="1013" width="0.0139%" height="15" fill="rgb(217,66,21)" fg:x="21423" fg:w="6"/><text x="49.9726%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (38 samples, 0.09%)</title><rect x="49.6507%" y="1093" width="0.0882%" height="15" fill="rgb(247,101,42)" fg:x="21392" fg:w="38"/><text x="49.9007%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (34 samples, 0.08%)</title><rect x="49.6600%" y="1077" width="0.0789%" height="15" fill="rgb(227,81,39)" fg:x="21396" fg:w="34"/><text x="49.9100%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (31 samples, 0.07%)</title><rect x="49.6669%" y="1061" width="0.0720%" height="15" fill="rgb(220,223,44)" fg:x="21399" fg:w="31"/><text x="49.9169%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (29 samples, 0.07%)</title><rect x="49.6716%" y="1045" width="0.0673%" height="15" fill="rgb(205,218,2)" fg:x="21401" fg:w="29"/><text x="49.9216%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (5 samples, 0.01%)</title><rect x="49.7575%" y="1029" width="0.0116%" height="15" fill="rgb(212,207,28)" fg:x="21438" fg:w="5"/><text x="50.0075%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="49.7853%" y="997" width="0.0139%" height="15" fill="rgb(224,12,41)" fg:x="21450" fg:w="6"/><text x="50.0353%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="49.7853%" y="981" width="0.0139%" height="15" fill="rgb(216,118,12)" fg:x="21450" fg:w="6"/><text x="50.0353%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (14 samples, 0.03%)</title><rect x="49.7691%" y="1029" width="0.0325%" height="15" fill="rgb(252,97,46)" fg:x="21443" fg:w="14"/><text x="50.0191%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="49.7853%" y="1013" width="0.0162%" height="15" fill="rgb(244,206,19)" fg:x="21450" fg:w="7"/><text x="50.0353%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.02%)</title><rect x="49.8132%" y="1013" width="0.0162%" height="15" fill="rgb(231,84,31)" fg:x="21462" fg:w="7"/><text x="50.0632%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.01%)</title><rect x="49.8178%" y="997" width="0.0116%" height="15" fill="rgb(244,133,0)" fg:x="21464" fg:w="5"/><text x="50.0678%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (38 samples, 0.09%)</title><rect x="49.7459%" y="1061" width="0.0882%" height="15" fill="rgb(223,15,50)" fg:x="21433" fg:w="38"/><text x="49.9959%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (37 samples, 0.09%)</title><rect x="49.7482%" y="1045" width="0.0859%" height="15" fill="rgb(250,118,49)" fg:x="21434" fg:w="37"/><text x="49.9982%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (14 samples, 0.03%)</title><rect x="49.8016%" y="1029" width="0.0325%" height="15" fill="rgb(248,25,38)" fg:x="21457" fg:w="14"/><text x="50.0516%" y="1039.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::st_loc (82 samples, 0.19%)</title><rect x="49.6460%" y="1125" width="0.1903%" height="15" fill="rgb(215,70,14)" fg:x="21390" fg:w="82"/><text x="49.8960%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (82 samples, 0.19%)</title><rect x="49.6460%" y="1109" width="0.1903%" height="15" fill="rgb(215,28,15)" fg:x="21390" fg:w="82"/><text x="49.8960%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (42 samples, 0.10%)</title><rect x="49.7389%" y="1093" width="0.0975%" height="15" fill="rgb(243,6,28)" fg:x="21430" fg:w="42"/><text x="49.9889%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (41 samples, 0.10%)</title><rect x="49.7412%" y="1077" width="0.0952%" height="15" fill="rgb(222,130,1)" fg:x="21431" fg:w="41"/><text x="49.9912%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_writable (6 samples, 0.01%)</title><rect x="49.8364%" y="1109" width="0.0139%" height="15" fill="rgb(236,166,44)" fg:x="21472" fg:w="6"/><text x="50.0864%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (5 samples, 0.01%)</title><rect x="49.8758%" y="981" width="0.0116%" height="15" fill="rgb(221,108,14)" fg:x="21489" fg:w="5"/><text x="50.1258%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (8 samples, 0.02%)</title><rect x="49.8712%" y="1045" width="0.0186%" height="15" fill="rgb(252,3,45)" fg:x="21487" fg:w="8"/><text x="50.1212%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (8 samples, 0.02%)</title><rect x="49.8712%" y="1029" width="0.0186%" height="15" fill="rgb(237,68,30)" fg:x="21487" fg:w="8"/><text x="50.1212%" y="1039.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (8 samples, 0.02%)</title><rect x="49.8712%" y="1013" width="0.0186%" height="15" fill="rgb(211,79,22)" fg:x="21487" fg:w="8"/><text x="50.1212%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (7 samples, 0.02%)</title><rect x="49.8735%" y="997" width="0.0162%" height="15" fill="rgb(252,185,21)" fg:x="21488" fg:w="7"/><text x="50.1235%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (10 samples, 0.02%)</title><rect x="49.8712%" y="1061" width="0.0232%" height="15" fill="rgb(225,189,26)" fg:x="21487" fg:w="10"/><text x="50.1212%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (11 samples, 0.03%)</title><rect x="49.8712%" y="1077" width="0.0255%" height="15" fill="rgb(241,30,40)" fg:x="21487" fg:w="11"/><text x="50.1212%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="49.9060%" y="981" width="0.0162%" height="15" fill="rgb(235,215,44)" fg:x="21502" fg:w="7"/><text x="50.1560%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="49.9060%" y="965" width="0.0162%" height="15" fill="rgb(205,8,29)" fg:x="21502" fg:w="7"/><text x="50.1560%" y="975.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (23 samples, 0.05%)</title><rect x="49.8967%" y="1061" width="0.0534%" height="15" fill="rgb(241,137,42)" fg:x="21498" fg:w="23"/><text x="50.1467%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (23 samples, 0.05%)</title><rect x="49.8967%" y="1045" width="0.0534%" height="15" fill="rgb(237,155,2)" fg:x="21498" fg:w="23"/><text x="50.1467%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.05%)</title><rect x="49.8967%" y="1029" width="0.0534%" height="15" fill="rgb(245,29,42)" fg:x="21498" fg:w="23"/><text x="50.1467%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (20 samples, 0.05%)</title><rect x="49.9037%" y="1013" width="0.0464%" height="15" fill="rgb(234,101,35)" fg:x="21501" fg:w="20"/><text x="50.1537%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (20 samples, 0.05%)</title><rect x="49.9037%" y="997" width="0.0464%" height="15" fill="rgb(228,64,37)" fg:x="21501" fg:w="20"/><text x="50.1537%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.02%)</title><rect x="49.9315%" y="981" width="0.0186%" height="15" fill="rgb(217,214,36)" fg:x="21513" fg:w="8"/><text x="50.1815%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="49.9315%" y="965" width="0.0186%" height="15" fill="rgb(243,70,3)" fg:x="21513" fg:w="8"/><text x="50.1815%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (7 samples, 0.02%)</title><rect x="49.9339%" y="949" width="0.0162%" height="15" fill="rgb(253,158,52)" fg:x="21514" fg:w="7"/><text x="50.1839%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (7 samples, 0.02%)</title><rect x="49.9339%" y="933" width="0.0162%" height="15" fill="rgb(234,111,54)" fg:x="21514" fg:w="7"/><text x="50.1839%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (7 samples, 0.02%)</title><rect x="49.9339%" y="917" width="0.0162%" height="15" fill="rgb(217,70,32)" fg:x="21514" fg:w="7"/><text x="50.1839%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (14 samples, 0.03%)</title><rect x="49.9501%" y="1061" width="0.0325%" height="15" fill="rgb(234,18,33)" fg:x="21521" fg:w="14"/><text x="50.2001%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.03%)</title><rect x="49.9501%" y="1045" width="0.0325%" height="15" fill="rgb(234,12,49)" fg:x="21521" fg:w="14"/><text x="50.2001%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.03%)</title><rect x="49.9501%" y="1029" width="0.0325%" height="15" fill="rgb(236,10,21)" fg:x="21521" fg:w="14"/><text x="50.2001%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.03%)</title><rect x="49.9547%" y="1013" width="0.0279%" height="15" fill="rgb(248,182,45)" fg:x="21523" fg:w="12"/><text x="50.2047%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (12 samples, 0.03%)</title><rect x="49.9547%" y="997" width="0.0279%" height="15" fill="rgb(217,95,36)" fg:x="21523" fg:w="12"/><text x="50.2047%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.02%)</title><rect x="49.9594%" y="981" width="0.0232%" height="15" fill="rgb(212,110,31)" fg:x="21525" fg:w="10"/><text x="50.2094%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="49.9617%" y="965" width="0.0209%" height="15" fill="rgb(206,32,53)" fg:x="21526" fg:w="9"/><text x="50.2117%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="49.9687%" y="949" width="0.0139%" height="15" fill="rgb(246,141,37)" fg:x="21529" fg:w="6"/><text x="50.2187%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (6 samples, 0.01%)</title><rect x="49.9687%" y="933" width="0.0139%" height="15" fill="rgb(219,16,7)" fg:x="21529" fg:w="6"/><text x="50.2187%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="49.9710%" y="917" width="0.0116%" height="15" fill="rgb(230,205,45)" fg:x="21530" fg:w="5"/><text x="50.2210%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="49.9710%" y="901" width="0.0116%" height="15" fill="rgb(231,43,49)" fg:x="21530" fg:w="5"/><text x="50.2210%" y="911.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::write_ref (76 samples, 0.18%)</title><rect x="49.8364%" y="1125" width="0.1764%" height="15" fill="rgb(212,106,34)" fg:x="21472" fg:w="76"/><text x="50.0864%" y="1135.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (70 samples, 0.16%)</title><rect x="49.8503%" y="1109" width="0.1625%" height="15" fill="rgb(206,83,17)" fg:x="21478" fg:w="70"/><text x="50.1003%" y="1119.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (70 samples, 0.16%)</title><rect x="49.8503%" y="1093" width="0.1625%" height="15" fill="rgb(244,154,49)" fg:x="21478" fg:w="70"/><text x="50.1003%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (50 samples, 0.12%)</title><rect x="49.8967%" y="1077" width="0.1160%" height="15" fill="rgb(244,149,49)" fg:x="21498" fg:w="50"/><text x="50.1467%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (13 samples, 0.03%)</title><rect x="49.9826%" y="1061" width="0.0302%" height="15" fill="rgb(227,134,18)" fg:x="21535" fg:w="13"/><text x="50.2326%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.03%)</title><rect x="49.9872%" y="1045" width="0.0255%" height="15" fill="rgb(237,116,36)" fg:x="21537" fg:w="11"/><text x="50.2372%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="49.9872%" y="1029" width="0.0255%" height="15" fill="rgb(205,129,40)" fg:x="21537" fg:w="11"/><text x="50.2372%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (7 samples, 0.02%)</title><rect x="49.9965%" y="1013" width="0.0162%" height="15" fill="rgb(236,178,4)" fg:x="21541" fg:w="7"/><text x="50.2465%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (7 samples, 0.02%)</title><rect x="49.9965%" y="997" width="0.0162%" height="15" fill="rgb(251,76,53)" fg:x="21541" fg:w="7"/><text x="50.2465%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="50.0522%" y="1109" width="0.0116%" height="15" fill="rgb(242,92,40)" fg:x="21565" fg:w="5"/><text x="50.3022%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="50.0638%" y="1109" width="0.0209%" height="15" fill="rgb(209,45,30)" fg:x="21570" fg:w="9"/><text x="50.3138%" y="1119.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.01%)</title><rect x="50.0731%" y="1093" width="0.0116%" height="15" fill="rgb(218,157,36)" fg:x="21574" fg:w="5"/><text x="50.3231%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (5 samples, 0.01%)</title><rect x="50.1497%" y="1061" width="0.0116%" height="15" fill="rgb(222,186,16)" fg:x="21607" fg:w="5"/><text x="50.3997%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="50.1497%" y="1045" width="0.0116%" height="15" fill="rgb(254,72,35)" fg:x="21607" fg:w="5"/><text x="50.3997%" y="1055.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.02%)</title><rect x="50.1427%" y="1093" width="0.0209%" height="15" fill="rgb(224,25,35)" fg:x="21604" fg:w="9"/><text x="50.3927%" y="1103.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (8 samples, 0.02%)</title><rect x="50.1451%" y="1077" width="0.0186%" height="15" fill="rgb(206,135,52)" fg:x="21605" fg:w="8"/><text x="50.3951%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (5 samples, 0.01%)</title><rect x="50.1683%" y="1061" width="0.0116%" height="15" fill="rgb(229,174,47)" fg:x="21615" fg:w="5"/><text x="50.4183%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.03%)</title><rect x="50.1660%" y="1077" width="0.0302%" height="15" fill="rgb(242,184,21)" fg:x="21614" fg:w="13"/><text x="50.4160%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.01%)</title><rect x="50.1822%" y="1061" width="0.0139%" height="15" fill="rgb(213,22,45)" fg:x="21621" fg:w="6"/><text x="50.4322%" y="1071.50"></text></g><g><title>core::mem::take (5 samples, 0.01%)</title><rect x="50.1845%" y="1045" width="0.0116%" height="15" fill="rgb(237,81,54)" fg:x="21622" fg:w="5"/><text x="50.4345%" y="1055.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="50.1845%" y="1029" width="0.0116%" height="15" fill="rgb(248,177,18)" fg:x="21622" fg:w="5"/><text x="50.4345%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.03%)</title><rect x="50.1636%" y="1093" width="0.0348%" height="15" fill="rgb(254,31,16)" fg:x="21613" fg:w="15"/><text x="50.4136%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (15 samples, 0.03%)</title><rect x="50.2077%" y="1029" width="0.0348%" height="15" fill="rgb(235,20,31)" fg:x="21632" fg:w="15"/><text x="50.4577%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (14 samples, 0.03%)</title><rect x="50.2100%" y="1013" width="0.0325%" height="15" fill="rgb(240,56,43)" fg:x="21633" fg:w="14"/><text x="50.4600%" y="1023.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="50.2309%" y="997" width="0.0116%" height="15" fill="rgb(237,197,51)" fg:x="21642" fg:w="5"/><text x="50.4809%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (20 samples, 0.05%)</title><rect x="50.2077%" y="1061" width="0.0464%" height="15" fill="rgb(241,162,44)" fg:x="21632" fg:w="20"/><text x="50.4577%" y="1071.50"></text></g><g><title>alloc::collections::btree::mem::replace (20 samples, 0.05%)</title><rect x="50.2077%" y="1045" width="0.0464%" height="15" fill="rgb(224,23,20)" fg:x="21632" fg:w="20"/><text x="50.4577%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="50.1984%" y="1093" width="0.0603%" height="15" fill="rgb(250,109,34)" fg:x="21628" fg:w="26"/><text x="50.4484%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="50.2008%" y="1077" width="0.0580%" height="15" fill="rgb(214,175,50)" fg:x="21629" fg:w="25"/><text x="50.4508%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="50.2588%" y="1093" width="0.0232%" height="15" fill="rgb(213,182,5)" fg:x="21654" fg:w="10"/><text x="50.5088%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="50.2634%" y="1077" width="0.0186%" height="15" fill="rgb(209,199,19)" fg:x="21656" fg:w="8"/><text x="50.5134%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="50.2704%" y="1061" width="0.0116%" height="15" fill="rgb(236,224,42)" fg:x="21659" fg:w="5"/><text x="50.5204%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="50.2820%" y="1093" width="0.0162%" height="15" fill="rgb(246,226,29)" fg:x="21664" fg:w="7"/><text x="50.5320%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="50.2982%" y="1093" width="0.0209%" height="15" fill="rgb(227,223,11)" fg:x="21671" fg:w="9"/><text x="50.5482%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (9 samples, 0.02%)</title><rect x="50.2982%" y="1077" width="0.0209%" height="15" fill="rgb(219,7,51)" fg:x="21671" fg:w="9"/><text x="50.5482%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.02%)</title><rect x="50.3447%" y="917" width="0.0162%" height="15" fill="rgb(245,167,10)" fg:x="21691" fg:w="7"/><text x="50.5947%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.03%)</title><rect x="50.3400%" y="949" width="0.0255%" height="15" fill="rgb(237,224,16)" fg:x="21689" fg:w="11"/><text x="50.5900%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.02%)</title><rect x="50.3423%" y="933" width="0.0232%" height="15" fill="rgb(226,132,13)" fg:x="21690" fg:w="10"/><text x="50.5923%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.04%)</title><rect x="50.3377%" y="965" width="0.0371%" height="15" fill="rgb(214,140,3)" fg:x="21688" fg:w="16"/><text x="50.5877%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (21 samples, 0.05%)</title><rect x="50.3307%" y="1045" width="0.0487%" height="15" fill="rgb(221,177,4)" fg:x="21685" fg:w="21"/><text x="50.5807%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (19 samples, 0.04%)</title><rect x="50.3354%" y="1029" width="0.0441%" height="15" fill="rgb(238,139,3)" fg:x="21687" fg:w="19"/><text x="50.5854%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.04%)</title><rect x="50.3354%" y="1013" width="0.0441%" height="15" fill="rgb(216,17,39)" fg:x="21687" fg:w="19"/><text x="50.5854%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (19 samples, 0.04%)</title><rect x="50.3354%" y="997" width="0.0441%" height="15" fill="rgb(238,120,9)" fg:x="21687" fg:w="19"/><text x="50.5854%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (19 samples, 0.04%)</title><rect x="50.3354%" y="981" width="0.0441%" height="15" fill="rgb(244,92,53)" fg:x="21687" fg:w="19"/><text x="50.5854%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (33 samples, 0.08%)</title><rect x="50.3261%" y="1061" width="0.0766%" height="15" fill="rgb(224,148,33)" fg:x="21683" fg:w="33"/><text x="50.5761%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.02%)</title><rect x="50.3795%" y="1045" width="0.0232%" height="15" fill="rgb(243,6,36)" fg:x="21706" fg:w="10"/><text x="50.6295%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="50.3841%" y="1029" width="0.0186%" height="15" fill="rgb(230,102,11)" fg:x="21708" fg:w="8"/><text x="50.6341%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="50.3841%" y="1013" width="0.0186%" height="15" fill="rgb(234,148,36)" fg:x="21708" fg:w="8"/><text x="50.6341%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (5 samples, 0.01%)</title><rect x="50.4259%" y="997" width="0.0116%" height="15" fill="rgb(251,153,25)" fg:x="21726" fg:w="5"/><text x="50.6759%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="50.4259%" y="981" width="0.0116%" height="15" fill="rgb(215,129,8)" fg:x="21726" fg:w="5"/><text x="50.6759%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (7 samples, 0.02%)</title><rect x="50.4375%" y="997" width="0.0162%" height="15" fill="rgb(224,128,35)" fg:x="21731" fg:w="7"/><text x="50.6875%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="50.4421%" y="981" width="0.0116%" height="15" fill="rgb(237,56,52)" fg:x="21733" fg:w="5"/><text x="50.6921%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.04%)</title><rect x="50.4236%" y="1013" width="0.0395%" height="15" fill="rgb(234,213,19)" fg:x="21725" fg:w="17"/><text x="50.6736%" y="1023.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (64 samples, 0.15%)</title><rect x="50.3215%" y="1093" width="0.1485%" height="15" fill="rgb(252,82,23)" fg:x="21681" fg:w="64"/><text x="50.5715%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (64 samples, 0.15%)</title><rect x="50.3215%" y="1077" width="0.1485%" height="15" fill="rgb(254,201,21)" fg:x="21681" fg:w="64"/><text x="50.5715%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (29 samples, 0.07%)</title><rect x="50.4027%" y="1061" width="0.0673%" height="15" fill="rgb(250,186,11)" fg:x="21716" fg:w="29"/><text x="50.6527%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (25 samples, 0.06%)</title><rect x="50.4120%" y="1045" width="0.0580%" height="15" fill="rgb(211,174,5)" fg:x="21720" fg:w="25"/><text x="50.6620%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (22 samples, 0.05%)</title><rect x="50.4189%" y="1029" width="0.0511%" height="15" fill="rgb(214,121,10)" fg:x="21723" fg:w="22"/><text x="50.6689%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="50.4793%" y="1061" width="0.0209%" height="15" fill="rgb(241,66,2)" fg:x="21749" fg:w="9"/><text x="50.7293%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="50.4816%" y="1045" width="0.0186%" height="15" fill="rgb(220,167,19)" fg:x="21750" fg:w="8"/><text x="50.7316%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="50.4839%" y="1029" width="0.0162%" height="15" fill="rgb(231,54,50)" fg:x="21751" fg:w="7"/><text x="50.7339%" y="1039.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (12 samples, 0.03%)</title><rect x="50.4746%" y="1093" width="0.0279%" height="15" fill="rgb(239,217,53)" fg:x="21747" fg:w="12"/><text x="50.7246%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.03%)</title><rect x="50.4746%" y="1077" width="0.0279%" height="15" fill="rgb(248,8,0)" fg:x="21747" fg:w="12"/><text x="50.7246%" y="1087.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (13 samples, 0.03%)</title><rect x="50.5095%" y="1061" width="0.0302%" height="15" fill="rgb(229,118,37)" fg:x="21762" fg:w="13"/><text x="50.7595%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="50.5280%" y="1045" width="0.0116%" height="15" fill="rgb(253,223,43)" fg:x="21770" fg:w="5"/><text x="50.7780%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_global_borrowed (17 samples, 0.04%)</title><rect x="50.5025%" y="1093" width="0.0395%" height="15" fill="rgb(211,77,36)" fg:x="21759" fg:w="17"/><text x="50.7525%" y="1103.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (16 samples, 0.04%)</title><rect x="50.5048%" y="1077" width="0.0371%" height="15" fill="rgb(219,3,53)" fg:x="21760" fg:w="16"/><text x="50.7548%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_writable (6 samples, 0.01%)</title><rect x="50.5420%" y="1093" width="0.0139%" height="15" fill="rgb(244,45,42)" fg:x="21776" fg:w="6"/><text x="50.7920%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (5 samples, 0.01%)</title><rect x="50.5907%" y="1013" width="0.0116%" height="15" fill="rgb(225,95,27)" fg:x="21797" fg:w="5"/><text x="50.8407%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (8 samples, 0.02%)</title><rect x="50.5861%" y="1029" width="0.0186%" height="15" fill="rgb(207,74,8)" fg:x="21795" fg:w="8"/><text x="50.8361%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.04%)</title><rect x="50.5744%" y="1061" width="0.0371%" height="15" fill="rgb(243,63,36)" fg:x="21790" fg:w="16"/><text x="50.8244%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.03%)</title><rect x="50.5791%" y="1045" width="0.0325%" height="15" fill="rgb(211,180,12)" fg:x="21792" fg:w="14"/><text x="50.8291%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="50.6487%" y="965" width="0.0139%" height="15" fill="rgb(254,166,49)" fg:x="21822" fg:w="6"/><text x="50.8987%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="50.6510%" y="949" width="0.0116%" height="15" fill="rgb(205,19,0)" fg:x="21823" fg:w="5"/><text x="50.9010%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (20 samples, 0.05%)</title><rect x="50.6185%" y="981" width="0.0464%" height="15" fill="rgb(224,172,32)" fg:x="21809" fg:w="20"/><text x="50.8685%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (24 samples, 0.06%)</title><rect x="50.6185%" y="997" width="0.0557%" height="15" fill="rgb(254,136,30)" fg:x="21809" fg:w="24"/><text x="50.8685%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (27 samples, 0.06%)</title><rect x="50.6139%" y="1029" width="0.0627%" height="15" fill="rgb(246,19,35)" fg:x="21807" fg:w="27"/><text x="50.8639%" y="1039.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.06%)</title><rect x="50.6139%" y="1013" width="0.0627%" height="15" fill="rgb(219,24,36)" fg:x="21807" fg:w="27"/><text x="50.8639%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.07%)</title><rect x="50.6116%" y="1045" width="0.0673%" height="15" fill="rgb(251,55,1)" fg:x="21806" fg:w="29"/><text x="50.8616%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.07%)</title><rect x="50.6116%" y="1061" width="0.0696%" height="15" fill="rgb(218,117,39)" fg:x="21806" fg:w="30"/><text x="50.8616%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (9 samples, 0.02%)</title><rect x="50.6859%" y="1061" width="0.0209%" height="15" fill="rgb(248,169,11)" fg:x="21838" fg:w="9"/><text x="50.9359%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="50.6928%" y="1045" width="0.0139%" height="15" fill="rgb(244,40,44)" fg:x="21841" fg:w="6"/><text x="50.9428%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.01%)</title><rect x="50.6928%" y="1029" width="0.0139%" height="15" fill="rgb(234,62,37)" fg:x="21841" fg:w="6"/><text x="50.9428%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.01%)</title><rect x="50.6928%" y="1013" width="0.0139%" height="15" fill="rgb(207,117,42)" fg:x="21841" fg:w="6"/><text x="50.9428%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="50.7207%" y="1029" width="0.0116%" height="15" fill="rgb(213,43,2)" fg:x="21853" fg:w="5"/><text x="50.9707%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.01%)</title><rect x="50.7207%" y="1013" width="0.0116%" height="15" fill="rgb(244,202,51)" fg:x="21853" fg:w="5"/><text x="50.9707%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (9 samples, 0.02%)</title><rect x="50.8112%" y="949" width="0.0209%" height="15" fill="rgb(253,174,46)" fg:x="21892" fg:w="9"/><text x="51.0612%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (8 samples, 0.02%)</title><rect x="50.8460%" y="933" width="0.0186%" height="15" fill="rgb(251,23,1)" fg:x="21907" fg:w="8"/><text x="51.0960%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (8 samples, 0.02%)</title><rect x="50.8460%" y="917" width="0.0186%" height="15" fill="rgb(253,26,1)" fg:x="21907" fg:w="8"/><text x="51.0960%" y="927.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="50.8483%" y="901" width="0.0162%" height="15" fill="rgb(216,89,31)" fg:x="21908" fg:w="7"/><text x="51.0983%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (37 samples, 0.09%)</title><rect x="50.7880%" y="965" width="0.0859%" height="15" fill="rgb(209,109,5)" fg:x="21882" fg:w="37"/><text x="51.0380%" y="975.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (18 samples, 0.04%)</title><rect x="50.8321%" y="949" width="0.0418%" height="15" fill="rgb(229,63,13)" fg:x="21901" fg:w="18"/><text x="51.0821%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="50.9017%" y="933" width="0.0139%" height="15" fill="rgb(238,137,54)" fg:x="21931" fg:w="6"/><text x="51.1517%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (11 samples, 0.03%)</title><rect x="50.8947%" y="949" width="0.0255%" height="15" fill="rgb(228,1,9)" fg:x="21928" fg:w="11"/><text x="51.1447%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (79 samples, 0.18%)</title><rect x="50.7392%" y="1029" width="0.1834%" height="15" fill="rgb(249,120,48)" fg:x="21861" fg:w="79"/><text x="50.9892%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (79 samples, 0.18%)</title><rect x="50.7392%" y="1013" width="0.1834%" height="15" fill="rgb(209,72,36)" fg:x="21861" fg:w="79"/><text x="50.9892%" y="1023.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (78 samples, 0.18%)</title><rect x="50.7416%" y="997" width="0.1810%" height="15" fill="rgb(247,98,49)" fg:x="21862" fg:w="78"/><text x="50.9916%" y="1007.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (74 samples, 0.17%)</title><rect x="50.7508%" y="981" width="0.1718%" height="15" fill="rgb(233,75,36)" fg:x="21866" fg:w="74"/><text x="51.0008%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (12 samples, 0.03%)</title><rect x="50.8947%" y="965" width="0.0279%" height="15" fill="rgb(225,14,24)" fg:x="21928" fg:w="12"/><text x="51.1447%" y="975.50"></text></g><g><title>&lt;borrow_graph::references::RefID as core::cmp::Ord&gt;::cmp (5 samples, 0.01%)</title><rect x="50.9342%" y="981" width="0.0116%" height="15" fill="rgb(237,193,20)" fg:x="21945" fg:w="5"/><text x="51.1842%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (109 samples, 0.25%)</title><rect x="50.7114%" y="1045" width="0.2530%" height="15" fill="rgb(239,122,19)" fg:x="21849" fg:w="109"/><text x="50.9614%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.04%)</title><rect x="50.9226%" y="1029" width="0.0418%" height="15" fill="rgb(231,220,10)" fg:x="21940" fg:w="18"/><text x="51.1726%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.04%)</title><rect x="50.9249%" y="1013" width="0.0395%" height="15" fill="rgb(220,66,15)" fg:x="21941" fg:w="17"/><text x="51.1749%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.04%)</title><rect x="50.9249%" y="997" width="0.0395%" height="15" fill="rgb(215,171,52)" fg:x="21941" fg:w="17"/><text x="51.1749%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="50.9528%" y="981" width="0.0116%" height="15" fill="rgb(241,169,50)" fg:x="21953" fg:w="5"/><text x="51.2028%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (114 samples, 0.26%)</title><rect x="50.7067%" y="1061" width="0.2646%" height="15" fill="rgb(236,189,0)" fg:x="21847" fg:w="114"/><text x="50.9567%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (8 samples, 0.02%)</title><rect x="50.9853%" y="1029" width="0.0186%" height="15" fill="rgb(217,147,20)" fg:x="21967" fg:w="8"/><text x="51.2353%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (5 samples, 0.01%)</title><rect x="50.9922%" y="1013" width="0.0116%" height="15" fill="rgb(206,188,39)" fg:x="21970" fg:w="5"/><text x="51.2422%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (7 samples, 0.02%)</title><rect x="51.0317%" y="917" width="0.0162%" height="15" fill="rgb(227,118,25)" fg:x="21987" fg:w="7"/><text x="51.2817%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (7 samples, 0.02%)</title><rect x="51.0479%" y="917" width="0.0162%" height="15" fill="rgb(248,171,40)" fg:x="21994" fg:w="7"/><text x="51.2979%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (17 samples, 0.04%)</title><rect x="51.0270%" y="933" width="0.0395%" height="15" fill="rgb(251,90,54)" fg:x="21985" fg:w="17"/><text x="51.2770%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (23 samples, 0.05%)</title><rect x="51.0154%" y="965" width="0.0534%" height="15" fill="rgb(234,11,46)" fg:x="21980" fg:w="23"/><text x="51.2654%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.05%)</title><rect x="51.0154%" y="949" width="0.0534%" height="15" fill="rgb(229,134,13)" fg:x="21980" fg:w="23"/><text x="51.2654%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="51.0131%" y="997" width="0.0603%" height="15" fill="rgb(223,129,3)" fg:x="21979" fg:w="26"/><text x="51.2631%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.06%)</title><rect x="51.0154%" y="981" width="0.0580%" height="15" fill="rgb(221,124,13)" fg:x="21980" fg:w="25"/><text x="51.2654%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="51.0874%" y="965" width="0.0162%" height="15" fill="rgb(234,3,18)" fg:x="22011" fg:w="7"/><text x="51.3374%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (6 samples, 0.01%)</title><rect x="51.0897%" y="949" width="0.0139%" height="15" fill="rgb(249,199,20)" fg:x="22012" fg:w="6"/><text x="51.3397%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (12 samples, 0.03%)</title><rect x="51.1036%" y="965" width="0.0279%" height="15" fill="rgb(224,134,6)" fg:x="22018" fg:w="12"/><text x="51.3536%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (10 samples, 0.02%)</title><rect x="51.1083%" y="949" width="0.0232%" height="15" fill="rgb(254,83,26)" fg:x="22020" fg:w="10"/><text x="51.3583%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="51.1152%" y="933" width="0.0162%" height="15" fill="rgb(217,88,9)" fg:x="22023" fg:w="7"/><text x="51.3652%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="51.1640%" y="933" width="0.0139%" height="15" fill="rgb(225,73,2)" fg:x="22044" fg:w="6"/><text x="51.4140%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="51.1640%" y="917" width="0.0139%" height="15" fill="rgb(226,44,39)" fg:x="22044" fg:w="6"/><text x="51.4140%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="51.1663%" y="901" width="0.0116%" height="15" fill="rgb(228,53,17)" fg:x="22045" fg:w="5"/><text x="51.4163%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="51.1663%" y="885" width="0.0116%" height="15" fill="rgb(212,27,27)" fg:x="22045" fg:w="5"/><text x="51.4163%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="51.1663%" y="869" width="0.0116%" height="15" fill="rgb(241,50,6)" fg:x="22045" fg:w="5"/><text x="51.4163%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="51.1802%" y="869" width="0.0139%" height="15" fill="rgb(225,28,51)" fg:x="22051" fg:w="6"/><text x="51.4302%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="51.1802%" y="853" width="0.0139%" height="15" fill="rgb(215,33,16)" fg:x="22051" fg:w="6"/><text x="51.4302%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="51.1779%" y="933" width="0.0186%" height="15" fill="rgb(243,40,39)" fg:x="22050" fg:w="8"/><text x="51.4279%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="51.1779%" y="917" width="0.0186%" height="15" fill="rgb(225,11,42)" fg:x="22050" fg:w="8"/><text x="51.4279%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="51.1802%" y="901" width="0.0162%" height="15" fill="rgb(241,220,38)" fg:x="22051" fg:w="7"/><text x="51.4302%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="51.1802%" y="885" width="0.0162%" height="15" fill="rgb(244,52,35)" fg:x="22051" fg:w="7"/><text x="51.4302%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.04%)</title><rect x="51.2081%" y="869" width="0.0418%" height="15" fill="rgb(246,42,46)" fg:x="22063" fg:w="18"/><text x="51.4581%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.03%)</title><rect x="51.2150%" y="853" width="0.0348%" height="15" fill="rgb(205,184,13)" fg:x="22066" fg:w="15"/><text x="51.4650%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.03%)</title><rect x="51.2174%" y="837" width="0.0325%" height="15" fill="rgb(209,48,36)" fg:x="22067" fg:w="14"/><text x="51.4674%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.03%)</title><rect x="51.2197%" y="821" width="0.0302%" height="15" fill="rgb(244,34,51)" fg:x="22068" fg:w="13"/><text x="51.4697%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (19 samples, 0.04%)</title><rect x="51.2081%" y="885" width="0.0441%" height="15" fill="rgb(221,107,33)" fg:x="22063" fg:w="19"/><text x="51.4581%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (10 samples, 0.02%)</title><rect x="51.2522%" y="885" width="0.0232%" height="15" fill="rgb(224,203,12)" fg:x="22082" fg:w="10"/><text x="51.5022%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.02%)</title><rect x="51.2522%" y="869" width="0.0232%" height="15" fill="rgb(230,215,18)" fg:x="22082" fg:w="10"/><text x="51.5022%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="51.2591%" y="853" width="0.0162%" height="15" fill="rgb(206,185,35)" fg:x="22085" fg:w="7"/><text x="51.5091%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (7 samples, 0.02%)</title><rect x="51.2591%" y="837" width="0.0162%" height="15" fill="rgb(228,140,34)" fg:x="22085" fg:w="7"/><text x="51.5091%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="51.2591%" y="821" width="0.0162%" height="15" fill="rgb(208,93,13)" fg:x="22085" fg:w="7"/><text x="51.5091%" y="831.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (136 samples, 0.32%)</title><rect x="50.9853%" y="1045" width="0.3157%" height="15" fill="rgb(221,193,39)" fg:x="21967" fg:w="136"/><text x="51.2353%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (128 samples, 0.30%)</title><rect x="51.0038%" y="1029" width="0.2971%" height="15" fill="rgb(241,132,34)" fg:x="21975" fg:w="128"/><text x="51.2538%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (128 samples, 0.30%)</title><rect x="51.0038%" y="1013" width="0.2971%" height="15" fill="rgb(221,141,10)" fg:x="21975" fg:w="128"/><text x="51.2538%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (98 samples, 0.23%)</title><rect x="51.0735%" y="997" width="0.2275%" height="15" fill="rgb(226,90,31)" fg:x="22005" fg:w="98"/><text x="51.3235%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (96 samples, 0.22%)</title><rect x="51.0781%" y="981" width="0.2228%" height="15" fill="rgb(243,75,5)" fg:x="22007" fg:w="96"/><text x="51.3281%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (73 samples, 0.17%)</title><rect x="51.1315%" y="965" width="0.1694%" height="15" fill="rgb(227,156,21)" fg:x="22030" fg:w="73"/><text x="51.3815%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 0.15%)</title><rect x="51.1547%" y="949" width="0.1462%" height="15" fill="rgb(250,195,8)" fg:x="22040" fg:w="63"/><text x="51.4047%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (43 samples, 0.10%)</title><rect x="51.2011%" y="933" width="0.0998%" height="15" fill="rgb(220,134,5)" fg:x="22060" fg:w="43"/><text x="51.4511%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (43 samples, 0.10%)</title><rect x="51.2011%" y="917" width="0.0998%" height="15" fill="rgb(246,106,34)" fg:x="22060" fg:w="43"/><text x="51.4511%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (42 samples, 0.10%)</title><rect x="51.2034%" y="901" width="0.0975%" height="15" fill="rgb(205,1,4)" fg:x="22061" fg:w="42"/><text x="51.4534%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (11 samples, 0.03%)</title><rect x="51.2754%" y="885" width="0.0255%" height="15" fill="rgb(224,151,29)" fg:x="22092" fg:w="11"/><text x="51.5254%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (10 samples, 0.02%)</title><rect x="51.2777%" y="869" width="0.0232%" height="15" fill="rgb(251,196,0)" fg:x="22093" fg:w="10"/><text x="51.5277%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.02%)</title><rect x="51.2777%" y="853" width="0.0232%" height="15" fill="rgb(212,127,0)" fg:x="22093" fg:w="10"/><text x="51.5277%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="51.2847%" y="837" width="0.0162%" height="15" fill="rgb(236,71,53)" fg:x="22096" fg:w="7"/><text x="51.5347%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="51.2893%" y="821" width="0.0116%" height="15" fill="rgb(227,99,0)" fg:x="22098" fg:w="5"/><text x="51.5393%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="51.2893%" y="805" width="0.0116%" height="15" fill="rgb(239,89,21)" fg:x="22098" fg:w="5"/><text x="51.5393%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (7 samples, 0.02%)</title><rect x="51.3125%" y="997" width="0.0162%" height="15" fill="rgb(243,122,19)" fg:x="22108" fg:w="7"/><text x="51.5625%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (7 samples, 0.02%)</title><rect x="51.3125%" y="981" width="0.0162%" height="15" fill="rgb(229,192,45)" fg:x="22108" fg:w="7"/><text x="51.5625%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (13 samples, 0.03%)</title><rect x="51.3032%" y="1029" width="0.0302%" height="15" fill="rgb(235,165,35)" fg:x="22104" fg:w="13"/><text x="51.5532%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (11 samples, 0.03%)</title><rect x="51.3079%" y="1013" width="0.0255%" height="15" fill="rgb(253,202,0)" fg:x="22106" fg:w="11"/><text x="51.5579%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.02%)</title><rect x="51.3636%" y="901" width="0.0232%" height="15" fill="rgb(235,51,20)" fg:x="22130" fg:w="10"/><text x="51.6136%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (7 samples, 0.02%)</title><rect x="51.3961%" y="901" width="0.0162%" height="15" fill="rgb(218,95,46)" fg:x="22144" fg:w="7"/><text x="51.6461%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (28 samples, 0.06%)</title><rect x="51.3520%" y="949" width="0.0650%" height="15" fill="rgb(212,81,10)" fg:x="22125" fg:w="28"/><text x="51.6020%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (28 samples, 0.06%)</title><rect x="51.3520%" y="933" width="0.0650%" height="15" fill="rgb(240,59,0)" fg:x="22125" fg:w="28"/><text x="51.6020%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (25 samples, 0.06%)</title><rect x="51.3589%" y="917" width="0.0580%" height="15" fill="rgb(212,191,42)" fg:x="22128" fg:w="25"/><text x="51.6089%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.08%)</title><rect x="51.3450%" y="981" width="0.0766%" height="15" fill="rgb(233,140,3)" fg:x="22122" fg:w="33"/><text x="51.5950%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (30 samples, 0.07%)</title><rect x="51.3520%" y="965" width="0.0696%" height="15" fill="rgb(215,69,23)" fg:x="22125" fg:w="30"/><text x="51.6020%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="51.3450%" y="997" width="0.0789%" height="15" fill="rgb(240,202,20)" fg:x="22122" fg:w="34"/><text x="51.5950%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (11 samples, 0.03%)</title><rect x="51.4355%" y="949" width="0.0255%" height="15" fill="rgb(209,146,50)" fg:x="22161" fg:w="11"/><text x="51.6855%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (9 samples, 0.02%)</title><rect x="51.4402%" y="933" width="0.0209%" height="15" fill="rgb(253,102,54)" fg:x="22163" fg:w="9"/><text x="51.6902%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (9 samples, 0.02%)</title><rect x="51.4402%" y="917" width="0.0209%" height="15" fill="rgb(250,173,47)" fg:x="22163" fg:w="9"/><text x="51.6902%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (14 samples, 0.03%)</title><rect x="51.4309%" y="965" width="0.0325%" height="15" fill="rgb(232,142,7)" fg:x="22159" fg:w="14"/><text x="51.6809%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (6 samples, 0.01%)</title><rect x="51.4820%" y="917" width="0.0139%" height="15" fill="rgb(230,157,47)" fg:x="22181" fg:w="6"/><text x="51.7320%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (5 samples, 0.01%)</title><rect x="51.4843%" y="901" width="0.0116%" height="15" fill="rgb(214,177,35)" fg:x="22182" fg:w="5"/><text x="51.7343%" y="911.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (16 samples, 0.04%)</title><rect x="51.4634%" y="965" width="0.0371%" height="15" fill="rgb(234,119,46)" fg:x="22173" fg:w="16"/><text x="51.7134%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.03%)</title><rect x="51.4703%" y="949" width="0.0302%" height="15" fill="rgb(241,180,50)" fg:x="22176" fg:w="13"/><text x="51.7203%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.03%)</title><rect x="51.4703%" y="933" width="0.0302%" height="15" fill="rgb(221,54,25)" fg:x="22176" fg:w="13"/><text x="51.7203%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="51.5237%" y="917" width="0.0255%" height="15" fill="rgb(209,157,44)" fg:x="22199" fg:w="11"/><text x="51.7737%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="51.5261%" y="901" width="0.0232%" height="15" fill="rgb(246,115,41)" fg:x="22200" fg:w="10"/><text x="51.7761%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.02%)</title><rect x="51.5261%" y="885" width="0.0232%" height="15" fill="rgb(229,86,1)" fg:x="22200" fg:w="10"/><text x="51.7761%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="51.5284%" y="869" width="0.0209%" height="15" fill="rgb(240,108,53)" fg:x="22201" fg:w="9"/><text x="51.7784%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="51.5307%" y="853" width="0.0186%" height="15" fill="rgb(227,134,2)" fg:x="22202" fg:w="8"/><text x="51.7807%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="51.5237%" y="933" width="0.0371%" height="15" fill="rgb(213,129,25)" fg:x="22199" fg:w="16"/><text x="51.7737%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="51.5493%" y="917" width="0.0116%" height="15" fill="rgb(226,35,21)" fg:x="22210" fg:w="5"/><text x="51.7993%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="51.5632%" y="837" width="0.0139%" height="15" fill="rgb(208,129,26)" fg:x="22216" fg:w="6"/><text x="51.8132%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (8 samples, 0.02%)</title><rect x="51.5609%" y="869" width="0.0186%" height="15" fill="rgb(224,83,6)" fg:x="22215" fg:w="8"/><text x="51.8109%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="51.5632%" y="853" width="0.0162%" height="15" fill="rgb(227,52,39)" fg:x="22216" fg:w="7"/><text x="51.8132%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="51.5609%" y="901" width="0.0209%" height="15" fill="rgb(241,30,17)" fg:x="22215" fg:w="9"/><text x="51.8109%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="51.5609%" y="885" width="0.0209%" height="15" fill="rgb(246,186,42)" fg:x="22215" fg:w="9"/><text x="51.8109%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="51.5609%" y="933" width="0.0232%" height="15" fill="rgb(221,169,15)" fg:x="22215" fg:w="10"/><text x="51.8109%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="51.5609%" y="917" width="0.0232%" height="15" fill="rgb(235,108,21)" fg:x="22215" fg:w="10"/><text x="51.8109%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.03%)</title><rect x="51.6026%" y="869" width="0.0279%" height="15" fill="rgb(219,148,30)" fg:x="22233" fg:w="12"/><text x="51.8526%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.03%)</title><rect x="51.6050%" y="853" width="0.0255%" height="15" fill="rgb(220,109,5)" fg:x="22234" fg:w="11"/><text x="51.8550%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.02%)</title><rect x="51.6073%" y="837" width="0.0232%" height="15" fill="rgb(213,203,48)" fg:x="22235" fg:w="10"/><text x="51.8573%" y="847.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (144 samples, 0.33%)</title><rect x="51.3009%" y="1045" width="0.3342%" height="15" fill="rgb(244,71,33)" fg:x="22103" fg:w="144"/><text x="51.5509%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (130 samples, 0.30%)</title><rect x="51.3334%" y="1029" width="0.3017%" height="15" fill="rgb(209,23,2)" fg:x="22117" fg:w="130"/><text x="51.5834%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (129 samples, 0.30%)</title><rect x="51.3357%" y="1013" width="0.2994%" height="15" fill="rgb(219,97,7)" fg:x="22118" fg:w="129"/><text x="51.5857%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (91 samples, 0.21%)</title><rect x="51.4239%" y="997" width="0.2112%" height="15" fill="rgb(216,161,23)" fg:x="22156" fg:w="91"/><text x="51.6739%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (89 samples, 0.21%)</title><rect x="51.4286%" y="981" width="0.2066%" height="15" fill="rgb(207,45,42)" fg:x="22158" fg:w="89"/><text x="51.6786%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (58 samples, 0.13%)</title><rect x="51.5005%" y="965" width="0.1346%" height="15" fill="rgb(241,61,4)" fg:x="22189" fg:w="58"/><text x="51.7505%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (52 samples, 0.12%)</title><rect x="51.5144%" y="949" width="0.1207%" height="15" fill="rgb(236,170,1)" fg:x="22195" fg:w="52"/><text x="51.7644%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (22 samples, 0.05%)</title><rect x="51.5841%" y="933" width="0.0511%" height="15" fill="rgb(239,72,5)" fg:x="22225" fg:w="22"/><text x="51.8341%" y="943.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (22 samples, 0.05%)</title><rect x="51.5841%" y="917" width="0.0511%" height="15" fill="rgb(214,13,50)" fg:x="22225" fg:w="22"/><text x="51.8341%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (22 samples, 0.05%)</title><rect x="51.5841%" y="901" width="0.0511%" height="15" fill="rgb(224,88,9)" fg:x="22225" fg:w="22"/><text x="51.8341%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (21 samples, 0.05%)</title><rect x="51.5864%" y="885" width="0.0487%" height="15" fill="rgb(238,192,34)" fg:x="22226" fg:w="21"/><text x="51.8364%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (7 samples, 0.02%)</title><rect x="51.6351%" y="1029" width="0.0162%" height="15" fill="rgb(217,203,50)" fg:x="22247" fg:w="7"/><text x="51.8851%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (5 samples, 0.01%)</title><rect x="51.6398%" y="1013" width="0.0116%" height="15" fill="rgb(241,123,32)" fg:x="22249" fg:w="5"/><text x="51.8898%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (5 samples, 0.01%)</title><rect x="51.6398%" y="997" width="0.0116%" height="15" fill="rgb(248,151,39)" fg:x="22249" fg:w="5"/><text x="51.8898%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (7 samples, 0.02%)</title><rect x="51.6862%" y="917" width="0.0162%" height="15" fill="rgb(208,89,6)" fg:x="22269" fg:w="7"/><text x="51.9362%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.01%)</title><rect x="51.6908%" y="901" width="0.0116%" height="15" fill="rgb(254,43,26)" fg:x="22271" fg:w="5"/><text x="51.9408%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (21 samples, 0.05%)</title><rect x="51.6723%" y="933" width="0.0487%" height="15" fill="rgb(216,158,13)" fg:x="22263" fg:w="21"/><text x="51.9223%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="51.7024%" y="917" width="0.0186%" height="15" fill="rgb(212,47,37)" fg:x="22276" fg:w="8"/><text x="51.9524%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (26 samples, 0.06%)</title><rect x="51.6676%" y="965" width="0.0603%" height="15" fill="rgb(254,16,10)" fg:x="22261" fg:w="26"/><text x="51.9176%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (26 samples, 0.06%)</title><rect x="51.6676%" y="949" width="0.0603%" height="15" fill="rgb(223,228,16)" fg:x="22261" fg:w="26"/><text x="51.9176%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="51.6653%" y="997" width="0.0650%" height="15" fill="rgb(249,108,50)" fg:x="22260" fg:w="28"/><text x="51.9153%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (28 samples, 0.06%)</title><rect x="51.6653%" y="981" width="0.0650%" height="15" fill="rgb(208,220,5)" fg:x="22260" fg:w="28"/><text x="51.9153%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (7 samples, 0.02%)</title><rect x="51.7303%" y="965" width="0.0162%" height="15" fill="rgb(217,89,48)" fg:x="22288" fg:w="7"/><text x="51.9803%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="51.7349%" y="949" width="0.0116%" height="15" fill="rgb(212,113,41)" fg:x="22290" fg:w="5"/><text x="51.9849%" y="959.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (7 samples, 0.02%)</title><rect x="51.7465%" y="965" width="0.0162%" height="15" fill="rgb(231,127,5)" fg:x="22295" fg:w="7"/><text x="51.9965%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="51.8115%" y="885" width="0.0162%" height="15" fill="rgb(217,141,17)" fg:x="22323" fg:w="7"/><text x="52.0615%" y="895.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="51.8115%" y="869" width="0.0162%" height="15" fill="rgb(245,125,54)" fg:x="22323" fg:w="7"/><text x="52.0615%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="51.8139%" y="853" width="0.0139%" height="15" fill="rgb(248,125,3)" fg:x="22324" fg:w="6"/><text x="52.0639%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="51.8092%" y="917" width="0.0209%" height="15" fill="rgb(236,119,51)" fg:x="22322" fg:w="9"/><text x="52.0592%" y="927.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (8 samples, 0.02%)</title><rect x="51.8115%" y="901" width="0.0186%" height="15" fill="rgb(239,99,8)" fg:x="22323" fg:w="8"/><text x="52.0615%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="51.8046%" y="933" width="0.0279%" height="15" fill="rgb(224,228,4)" fg:x="22320" fg:w="12"/><text x="52.0546%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="51.8324%" y="901" width="0.0186%" height="15" fill="rgb(220,131,45)" fg:x="22332" fg:w="8"/><text x="52.0824%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="51.8371%" y="885" width="0.0139%" height="15" fill="rgb(215,62,5)" fg:x="22334" fg:w="6"/><text x="52.0871%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="51.8371%" y="869" width="0.0139%" height="15" fill="rgb(253,12,24)" fg:x="22334" fg:w="6"/><text x="52.0871%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="51.8371%" y="853" width="0.0139%" height="15" fill="rgb(248,120,50)" fg:x="22334" fg:w="6"/><text x="52.0871%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="51.8324%" y="933" width="0.0255%" height="15" fill="rgb(245,194,10)" fg:x="22332" fg:w="11"/><text x="52.0824%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="51.8324%" y="917" width="0.0255%" height="15" fill="rgb(241,149,38)" fg:x="22332" fg:w="11"/><text x="52.0824%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (382 samples, 0.89%)</title><rect x="50.9806%" y="1061" width="0.8866%" height="15" fill="rgb(219,215,7)" fg:x="21965" fg:w="382"/><text x="51.2306%" y="1071.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (100 samples, 0.23%)</title><rect x="51.6351%" y="1045" width="0.2321%" height="15" fill="rgb(208,120,31)" fg:x="22247" fg:w="100"/><text x="51.8851%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (93 samples, 0.22%)</title><rect x="51.6514%" y="1029" width="0.2159%" height="15" fill="rgb(244,30,8)" fg:x="22254" fg:w="93"/><text x="51.9014%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (92 samples, 0.21%)</title><rect x="51.6537%" y="1013" width="0.2135%" height="15" fill="rgb(238,35,44)" fg:x="22255" fg:w="92"/><text x="51.9037%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (59 samples, 0.14%)</title><rect x="51.7303%" y="997" width="0.1369%" height="15" fill="rgb(243,218,37)" fg:x="22288" fg:w="59"/><text x="51.9803%" y="1007.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (59 samples, 0.14%)</title><rect x="51.7303%" y="981" width="0.1369%" height="15" fill="rgb(218,169,10)" fg:x="22288" fg:w="59"/><text x="51.9803%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (45 samples, 0.10%)</title><rect x="51.7628%" y="965" width="0.1044%" height="15" fill="rgb(221,144,10)" fg:x="22302" fg:w="45"/><text x="52.0128%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.08%)</title><rect x="51.7837%" y="949" width="0.0836%" height="15" fill="rgb(226,41,38)" fg:x="22311" fg:w="36"/><text x="52.0337%" y="959.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (5 samples, 0.01%)</title><rect x="51.8672%" y="1045" width="0.0116%" height="15" fill="rgb(228,3,1)" fg:x="22347" fg:w="5"/><text x="52.1172%" y="1055.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (10 samples, 0.02%)</title><rect x="51.8672%" y="1061" width="0.0232%" height="15" fill="rgb(209,129,12)" fg:x="22347" fg:w="10"/><text x="52.1172%" y="1071.50"></text></g><g><title>borrow_graph::paths::append (5 samples, 0.01%)</title><rect x="51.8788%" y="1045" width="0.0116%" height="15" fill="rgb(213,136,33)" fg:x="22352" fg:w="5"/><text x="52.1288%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.01%)</title><rect x="51.9067%" y="933" width="0.0116%" height="15" fill="rgb(209,181,29)" fg:x="22364" fg:w="5"/><text x="52.1567%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (8 samples, 0.02%)</title><rect x="51.9021%" y="965" width="0.0186%" height="15" fill="rgb(234,173,18)" fg:x="22362" fg:w="8"/><text x="52.1521%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (8 samples, 0.02%)</title><rect x="51.9021%" y="949" width="0.0186%" height="15" fill="rgb(227,73,47)" fg:x="22362" fg:w="8"/><text x="52.1521%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="51.8928%" y="1061" width="0.0302%" height="15" fill="rgb(234,9,34)" fg:x="22358" fg:w="13"/><text x="52.1428%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (13 samples, 0.03%)</title><rect x="51.8928%" y="1045" width="0.0302%" height="15" fill="rgb(235,172,15)" fg:x="22358" fg:w="13"/><text x="52.1428%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="51.8928%" y="1029" width="0.0302%" height="15" fill="rgb(245,61,2)" fg:x="22358" fg:w="13"/><text x="52.1428%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (11 samples, 0.03%)</title><rect x="51.8974%" y="1013" width="0.0255%" height="15" fill="rgb(238,39,47)" fg:x="22360" fg:w="11"/><text x="52.1474%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="51.8974%" y="997" width="0.0255%" height="15" fill="rgb(234,37,24)" fg:x="22360" fg:w="11"/><text x="52.1474%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (9 samples, 0.02%)</title><rect x="51.9021%" y="981" width="0.0209%" height="15" fill="rgb(248,223,24)" fg:x="22362" fg:w="9"/><text x="52.1521%" y="991.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (610 samples, 1.42%)</title><rect x="50.5559%" y="1093" width="1.4158%" height="15" fill="rgb(223,12,15)" fg:x="21782" fg:w="610"/><text x="50.8059%" y="1103.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (609 samples, 1.41%)</title><rect x="50.5582%" y="1077" width="1.4135%" height="15" fill="rgb(249,6,3)" fg:x="21783" fg:w="609"/><text x="50.8082%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (13 samples, 0.03%)</title><rect x="51.9415%" y="1061" width="0.0302%" height="15" fill="rgb(237,105,33)" fg:x="22379" fg:w="13"/><text x="52.1915%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="51.9415%" y="1045" width="0.0302%" height="15" fill="rgb(252,208,35)" fg:x="22379" fg:w="13"/><text x="52.1915%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="51.9415%" y="1029" width="0.0302%" height="15" fill="rgb(215,181,35)" fg:x="22379" fg:w="13"/><text x="52.1915%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="51.9531%" y="1013" width="0.0186%" height="15" fill="rgb(246,212,3)" fg:x="22384" fg:w="8"/><text x="52.2031%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="51.9531%" y="997" width="0.0186%" height="15" fill="rgb(247,156,24)" fg:x="22384" fg:w="8"/><text x="52.2031%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="52.0158%" y="965" width="0.0209%" height="15" fill="rgb(248,9,31)" fg:x="22411" fg:w="9"/><text x="52.2658%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="52.0251%" y="949" width="0.0116%" height="15" fill="rgb(234,26,45)" fg:x="22415" fg:w="5"/><text x="52.2751%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.05%)</title><rect x="52.0065%" y="997" width="0.0534%" height="15" fill="rgb(249,11,32)" fg:x="22407" fg:w="23"/><text x="52.2565%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.05%)</title><rect x="52.0111%" y="981" width="0.0487%" height="15" fill="rgb(249,162,33)" fg:x="22409" fg:w="21"/><text x="52.2611%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="52.0367%" y="965" width="0.0232%" height="15" fill="rgb(232,4,32)" fg:x="22420" fg:w="10"/><text x="52.2867%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::call::_{{closure}} (10 samples, 0.02%)</title><rect x="52.0367%" y="949" width="0.0232%" height="15" fill="rgb(212,5,45)" fg:x="22420" fg:w="10"/><text x="52.2867%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27 samples, 0.06%)</title><rect x="52.0019%" y="1013" width="0.0627%" height="15" fill="rgb(227,95,13)" fg:x="22405" fg:w="27"/><text x="52.2519%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 0.09%)</title><rect x="51.9833%" y="1029" width="0.0859%" height="15" fill="rgb(223,205,10)" fg:x="22397" fg:w="37"/><text x="52.2333%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="52.0901%" y="933" width="0.0116%" height="15" fill="rgb(222,178,8)" fg:x="22443" fg:w="5"/><text x="52.3401%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="52.0831%" y="965" width="0.0325%" height="15" fill="rgb(216,13,22)" fg:x="22440" fg:w="14"/><text x="52.3331%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="52.0831%" y="949" width="0.0325%" height="15" fill="rgb(240,167,12)" fg:x="22440" fg:w="14"/><text x="52.3331%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73 samples, 0.17%)</title><rect x="51.9763%" y="1077" width="0.1694%" height="15" fill="rgb(235,68,35)" fg:x="22394" fg:w="73"/><text x="52.2263%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.16%)</title><rect x="51.9810%" y="1061" width="0.1648%" height="15" fill="rgb(253,40,27)" fg:x="22396" fg:w="71"/><text x="52.2310%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (71 samples, 0.16%)</title><rect x="51.9810%" y="1045" width="0.1648%" height="15" fill="rgb(214,19,28)" fg:x="22396" fg:w="71"/><text x="52.2310%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.07%)</title><rect x="52.0761%" y="1029" width="0.0696%" height="15" fill="rgb(210,167,45)" fg:x="22437" fg:w="30"/><text x="52.3261%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.07%)</title><rect x="52.0761%" y="1013" width="0.0696%" height="15" fill="rgb(232,97,40)" fg:x="22437" fg:w="30"/><text x="52.3261%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.07%)</title><rect x="52.0784%" y="997" width="0.0673%" height="15" fill="rgb(250,35,23)" fg:x="22438" fg:w="29"/><text x="52.3284%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.06%)</title><rect x="52.0808%" y="981" width="0.0650%" height="15" fill="rgb(248,47,53)" fg:x="22439" fg:w="28"/><text x="52.3308%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.03%)</title><rect x="52.1179%" y="965" width="0.0279%" height="15" fill="rgb(226,58,50)" fg:x="22455" fg:w="12"/><text x="52.3679%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8 samples, 0.02%)</title><rect x="52.1272%" y="949" width="0.0186%" height="15" fill="rgb(217,105,26)" fg:x="22459" fg:w="8"/><text x="52.3772%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (76 samples, 0.18%)</title><rect x="51.9717%" y="1093" width="0.1764%" height="15" fill="rgb(208,64,1)" fg:x="22392" fg:w="76"/><text x="52.2217%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="52.1597%" y="1045" width="0.0116%" height="15" fill="rgb(214,80,1)" fg:x="22473" fg:w="5"/><text x="52.4097%" y="1055.50"></text></g><g><title>core::mem::take (5 samples, 0.01%)</title><rect x="52.1597%" y="1029" width="0.0116%" height="15" fill="rgb(206,175,26)" fg:x="22473" fg:w="5"/><text x="52.4097%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (6 samples, 0.01%)</title><rect x="52.1759%" y="997" width="0.0139%" height="15" fill="rgb(235,156,37)" fg:x="22480" fg:w="6"/><text x="52.4259%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (5 samples, 0.01%)</title><rect x="52.1783%" y="981" width="0.0116%" height="15" fill="rgb(213,100,9)" fg:x="22481" fg:w="5"/><text x="52.4283%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (14 samples, 0.03%)</title><rect x="52.1597%" y="1093" width="0.0325%" height="15" fill="rgb(241,15,13)" fg:x="22473" fg:w="14"/><text x="52.4097%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (14 samples, 0.03%)</title><rect x="52.1597%" y="1077" width="0.0325%" height="15" fill="rgb(205,97,43)" fg:x="22473" fg:w="14"/><text x="52.4097%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="52.1597%" y="1061" width="0.0325%" height="15" fill="rgb(216,106,32)" fg:x="22473" fg:w="14"/><text x="52.4097%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (9 samples, 0.02%)</title><rect x="52.1713%" y="1045" width="0.0209%" height="15" fill="rgb(226,200,8)" fg:x="22478" fg:w="9"/><text x="52.4213%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="52.1713%" y="1029" width="0.0209%" height="15" fill="rgb(244,54,29)" fg:x="22478" fg:w="9"/><text x="52.4213%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (8 samples, 0.02%)</title><rect x="52.1736%" y="1013" width="0.0186%" height="15" fill="rgb(252,169,12)" fg:x="22479" fg:w="8"/><text x="52.4236%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (14 samples, 0.03%)</title><rect x="52.1922%" y="1093" width="0.0325%" height="15" fill="rgb(231,199,11)" fg:x="22487" fg:w="14"/><text x="52.4422%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (10 samples, 0.02%)</title><rect x="52.2015%" y="1077" width="0.0232%" height="15" fill="rgb(233,191,18)" fg:x="22491" fg:w="10"/><text x="52.4515%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="52.2015%" y="1061" width="0.0232%" height="15" fill="rgb(215,83,47)" fg:x="22491" fg:w="10"/><text x="52.4515%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.01%)</title><rect x="52.2131%" y="1045" width="0.0116%" height="15" fill="rgb(251,67,19)" fg:x="22496" fg:w="5"/><text x="52.4631%" y="1055.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::call (918 samples, 2.13%)</title><rect x="50.1056%" y="1109" width="2.1307%" height="15" fill="rgb(240,7,20)" fg:x="21588" fg:w="918"/><text x="50.3556%" y="1119.50">b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="52.2247%" y="1093" width="0.0116%" height="15" fill="rgb(210,150,26)" fg:x="22501" fg:w="5"/><text x="52.4747%" y="1103.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="52.2247%" y="1077" width="0.0116%" height="15" fill="rgb(228,75,42)" fg:x="22501" fg:w="5"/><text x="52.4747%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.01%)</title><rect x="52.2479%" y="1029" width="0.0116%" height="15" fill="rgb(237,134,48)" fg:x="22511" fg:w="5"/><text x="52.4979%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15 samples, 0.03%)</title><rect x="52.2363%" y="1109" width="0.0348%" height="15" fill="rgb(205,80,50)" fg:x="22506" fg:w="15"/><text x="52.4863%" y="1119.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandle as core::cmp::PartialEq&gt;::eq (15 samples, 0.03%)</title><rect x="52.2363%" y="1093" width="0.0348%" height="15" fill="rgb(217,74,48)" fg:x="22506" fg:w="15"/><text x="52.4863%" y="1103.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (13 samples, 0.03%)</title><rect x="52.2409%" y="1077" width="0.0302%" height="15" fill="rgb(205,82,50)" fg:x="22508" fg:w="13"/><text x="52.4909%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.02%)</title><rect x="52.2479%" y="1061" width="0.0232%" height="15" fill="rgb(228,1,33)" fg:x="22511" fg:w="10"/><text x="52.4979%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.02%)</title><rect x="52.2479%" y="1045" width="0.0232%" height="15" fill="rgb(214,50,23)" fg:x="22511" fg:w="10"/><text x="52.4979%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="52.2595%" y="1029" width="0.0116%" height="15" fill="rgb(210,62,9)" fg:x="22516" fg:w="5"/><text x="52.5095%" y="1039.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="52.2595%" y="1013" width="0.0116%" height="15" fill="rgb(210,104,37)" fg:x="22516" fg:w="5"/><text x="52.5095%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (5 samples, 0.01%)</title><rect x="52.2873%" y="917" width="0.0116%" height="15" fill="rgb(232,104,43)" fg:x="22528" fg:w="5"/><text x="52.5373%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="52.2873%" y="933" width="0.0232%" height="15" fill="rgb(244,52,6)" fg:x="22528" fg:w="10"/><text x="52.5373%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="52.2989%" y="917" width="0.0116%" height="15" fill="rgb(211,174,52)" fg:x="22533" fg:w="5"/><text x="52.5489%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.04%)</title><rect x="52.2757%" y="1093" width="0.0371%" height="15" fill="rgb(229,48,4)" fg:x="22523" fg:w="16"/><text x="52.5257%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.03%)</title><rect x="52.2781%" y="1077" width="0.0348%" height="15" fill="rgb(205,155,16)" fg:x="22524" fg:w="15"/><text x="52.5281%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.03%)</title><rect x="52.2804%" y="1061" width="0.0325%" height="15" fill="rgb(211,141,53)" fg:x="22525" fg:w="14"/><text x="52.5304%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.03%)</title><rect x="52.2804%" y="1045" width="0.0325%" height="15" fill="rgb(240,148,11)" fg:x="22525" fg:w="14"/><text x="52.5304%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.03%)</title><rect x="52.2827%" y="1029" width="0.0302%" height="15" fill="rgb(214,45,23)" fg:x="22526" fg:w="13"/><text x="52.5327%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.03%)</title><rect x="52.2827%" y="1013" width="0.0302%" height="15" fill="rgb(248,74,26)" fg:x="22526" fg:w="13"/><text x="52.5327%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.03%)</title><rect x="52.2850%" y="997" width="0.0279%" height="15" fill="rgb(218,121,16)" fg:x="22527" fg:w="12"/><text x="52.5350%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (11 samples, 0.03%)</title><rect x="52.2873%" y="981" width="0.0255%" height="15" fill="rgb(218,10,47)" fg:x="22528" fg:w="11"/><text x="52.5373%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (11 samples, 0.03%)</title><rect x="52.2873%" y="965" width="0.0255%" height="15" fill="rgb(227,99,14)" fg:x="22528" fg:w="11"/><text x="52.5373%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (11 samples, 0.03%)</title><rect x="52.2873%" y="949" width="0.0255%" height="15" fill="rgb(229,83,46)" fg:x="22528" fg:w="11"/><text x="52.5373%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="52.3384%" y="1029" width="0.0209%" height="15" fill="rgb(228,25,1)" fg:x="22550" fg:w="9"/><text x="52.5884%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="52.3430%" y="1013" width="0.0162%" height="15" fill="rgb(252,190,15)" fg:x="22552" fg:w="7"/><text x="52.5930%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.02%)</title><rect x="52.3430%" y="997" width="0.0162%" height="15" fill="rgb(213,103,51)" fg:x="22552" fg:w="7"/><text x="52.5930%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.01%)</title><rect x="52.3732%" y="965" width="0.0139%" height="15" fill="rgb(220,38,44)" fg:x="22565" fg:w="6"/><text x="52.6232%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::call::_{{closure}} (5 samples, 0.01%)</title><rect x="52.3895%" y="949" width="0.0116%" height="15" fill="rgb(210,45,26)" fg:x="22572" fg:w="5"/><text x="52.6395%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.01%)</title><rect x="52.3895%" y="933" width="0.0116%" height="15" fill="rgb(205,95,48)" fg:x="22572" fg:w="5"/><text x="52.6395%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.04%)</title><rect x="52.3663%" y="1013" width="0.0371%" height="15" fill="rgb(225,179,37)" fg:x="22562" fg:w="16"/><text x="52.6163%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::rfold (16 samples, 0.04%)</title><rect x="52.3663%" y="997" width="0.0371%" height="15" fill="rgb(230,209,3)" fg:x="22562" fg:w="16"/><text x="52.6163%" y="1007.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (15 samples, 0.03%)</title><rect x="52.3686%" y="981" width="0.0348%" height="15" fill="rgb(248,12,46)" fg:x="22563" fg:w="15"/><text x="52.6186%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7 samples, 0.02%)</title><rect x="52.3871%" y="965" width="0.0162%" height="15" fill="rgb(234,18,0)" fg:x="22571" fg:w="7"/><text x="52.6371%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 0.04%)</title><rect x="52.3616%" y="1029" width="0.0441%" height="15" fill="rgb(238,197,14)" fg:x="22560" fg:w="19"/><text x="52.6116%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41 samples, 0.10%)</title><rect x="52.3152%" y="1045" width="0.0952%" height="15" fill="rgb(251,162,48)" fg:x="22540" fg:w="41"/><text x="52.5652%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="52.4266%" y="981" width="0.0186%" height="15" fill="rgb(237,73,42)" fg:x="22588" fg:w="8"/><text x="52.6766%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="52.4266%" y="965" width="0.0186%" height="15" fill="rgb(211,108,8)" fg:x="22588" fg:w="8"/><text x="52.6766%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (6 samples, 0.01%)</title><rect x="52.4614%" y="949" width="0.0139%" height="15" fill="rgb(213,45,22)" fg:x="22603" fg:w="6"/><text x="52.7114%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (9 samples, 0.02%)</title><rect x="52.4568%" y="965" width="0.0209%" height="15" fill="rgb(252,154,5)" fg:x="22601" fg:w="9"/><text x="52.7068%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array (21 samples, 0.05%)</title><rect x="52.4475%" y="981" width="0.0487%" height="15" fill="rgb(221,79,52)" fg:x="22597" fg:w="21"/><text x="52.6975%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8 samples, 0.02%)</title><rect x="52.4777%" y="965" width="0.0186%" height="15" fill="rgb(229,220,36)" fg:x="22610" fg:w="8"/><text x="52.7277%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 0.23%)</title><rect x="52.2757%" y="1109" width="0.2275%" height="15" fill="rgb(211,17,16)" fg:x="22523" fg:w="98"/><text x="52.5257%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (82 samples, 0.19%)</title><rect x="52.3129%" y="1093" width="0.1903%" height="15" fill="rgb(222,55,31)" fg:x="22539" fg:w="82"/><text x="52.5629%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82 samples, 0.19%)</title><rect x="52.3129%" y="1077" width="0.1903%" height="15" fill="rgb(221,221,31)" fg:x="22539" fg:w="82"/><text x="52.5629%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (82 samples, 0.19%)</title><rect x="52.3129%" y="1061" width="0.1903%" height="15" fill="rgb(227,168,26)" fg:x="22539" fg:w="82"/><text x="52.5629%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 0.09%)</title><rect x="52.4127%" y="1045" width="0.0905%" height="15" fill="rgb(224,139,9)" fg:x="22582" fg:w="39"/><text x="52.6627%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (39 samples, 0.09%)</title><rect x="52.4127%" y="1029" width="0.0905%" height="15" fill="rgb(254,172,0)" fg:x="22582" fg:w="39"/><text x="52.6627%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.09%)</title><rect x="52.4150%" y="1013" width="0.0882%" height="15" fill="rgb(235,203,1)" fg:x="22583" fg:w="38"/><text x="52.6650%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.09%)</title><rect x="52.4150%" y="997" width="0.0882%" height="15" fill="rgb(216,205,24)" fg:x="22583" fg:w="38"/><text x="52.6650%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (5 samples, 0.01%)</title><rect x="52.5032%" y="1109" width="0.0116%" height="15" fill="rgb(233,24,6)" fg:x="22621" fg:w="5"/><text x="52.7532%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (5 samples, 0.01%)</title><rect x="52.5032%" y="1093" width="0.0116%" height="15" fill="rgb(244,110,9)" fg:x="22621" fg:w="5"/><text x="52.7532%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="52.5032%" y="1077" width="0.0116%" height="15" fill="rgb(239,222,42)" fg:x="22621" fg:w="5"/><text x="52.7532%" y="1087.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (9 samples, 0.02%)</title><rect x="52.5148%" y="1061" width="0.0209%" height="15" fill="rgb(218,145,13)" fg:x="22626" fg:w="9"/><text x="52.7648%" y="1071.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (7 samples, 0.02%)</title><rect x="52.5194%" y="1045" width="0.0162%" height="15" fill="rgb(207,69,11)" fg:x="22628" fg:w="7"/><text x="52.7694%" y="1055.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (11 samples, 0.03%)</title><rect x="52.5148%" y="1077" width="0.0255%" height="15" fill="rgb(220,223,22)" fg:x="22626" fg:w="11"/><text x="52.7648%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (17 samples, 0.04%)</title><rect x="52.5148%" y="1109" width="0.0395%" height="15" fill="rgb(245,102,5)" fg:x="22626" fg:w="17"/><text x="52.7648%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="52.5148%" y="1093" width="0.0395%" height="15" fill="rgb(211,148,2)" fg:x="22626" fg:w="17"/><text x="52.7648%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,alloc::alloc::Global&gt;&gt; (6 samples, 0.01%)</title><rect x="52.5403%" y="1077" width="0.0139%" height="15" fill="rgb(241,13,44)" fg:x="22637" fg:w="6"/><text x="52.7903%" y="1087.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="52.5403%" y="1061" width="0.0139%" height="15" fill="rgb(219,137,21)" fg:x="22637" fg:w="6"/><text x="52.7903%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="52.5543%" y="1109" width="0.0116%" height="15" fill="rgb(242,206,5)" fg:x="22643" fg:w="5"/><text x="52.8043%" y="1119.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="52.5543%" y="1093" width="0.0116%" height="15" fill="rgb(217,114,22)" fg:x="22643" fg:w="5"/><text x="52.8043%" y="1103.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_def_at (8 samples, 0.02%)</title><rect x="52.5659%" y="1109" width="0.0186%" height="15" fill="rgb(253,206,42)" fg:x="22648" fg:w="8"/><text x="52.8159%" y="1119.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_def_at (8 samples, 0.02%)</title><rect x="52.5659%" y="1093" width="0.0186%" height="15" fill="rgb(236,102,18)" fg:x="22648" fg:w="8"/><text x="52.8159%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="52.5867%" y="1077" width="0.0116%" height="15" fill="rgb(208,59,49)" fg:x="22657" fg:w="5"/><text x="52.8367%" y="1087.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (8 samples, 0.02%)</title><rect x="52.5844%" y="1109" width="0.0186%" height="15" fill="rgb(215,194,28)" fg:x="22656" fg:w="8"/><text x="52.8344%" y="1119.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (7 samples, 0.02%)</title><rect x="52.5867%" y="1093" width="0.0162%" height="15" fill="rgb(243,207,11)" fg:x="22657" fg:w="7"/><text x="52.8367%" y="1103.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="52.6146%" y="1045" width="0.0162%" height="15" fill="rgb(254,179,35)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (7 samples, 0.02%)</title><rect x="52.6146%" y="1029" width="0.0162%" height="15" fill="rgb(235,97,3)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u16 (7 samples, 0.02%)</title><rect x="52.6146%" y="1013" width="0.0162%" height="15" fill="rgb(215,155,33)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="52.6146%" y="997" width="0.0162%" height="15" fill="rgb(223,128,12)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="52.6146%" y="981" width="0.0162%" height="15" fill="rgb(208,157,18)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="52.6146%" y="965" width="0.0162%" height="15" fill="rgb(249,70,54)" fg:x="22669" fg:w="7"/><text x="52.8646%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="52.6587%" y="981" width="0.0116%" height="15" fill="rgb(244,118,24)" fg:x="22688" fg:w="5"/><text x="52.9087%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.04%)</title><rect x="52.6308%" y="1045" width="0.0418%" height="15" fill="rgb(211,54,0)" fg:x="22676" fg:w="18"/><text x="52.8808%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.04%)</title><rect x="52.6332%" y="1029" width="0.0395%" height="15" fill="rgb(245,137,45)" fg:x="22677" fg:w="17"/><text x="52.8832%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.04%)</title><rect x="52.6332%" y="1013" width="0.0395%" height="15" fill="rgb(232,154,31)" fg:x="22677" fg:w="17"/><text x="52.8832%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.03%)</title><rect x="52.6425%" y="997" width="0.0302%" height="15" fill="rgb(253,6,39)" fg:x="22681" fg:w="13"/><text x="52.8925%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.01%)</title><rect x="52.6749%" y="1029" width="0.0116%" height="15" fill="rgb(234,183,24)" fg:x="22695" fg:w="5"/><text x="52.9249%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.07%)</title><rect x="52.6146%" y="1061" width="0.0743%" height="15" fill="rgb(252,84,40)" fg:x="22669" fg:w="32"/><text x="52.8646%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.02%)</title><rect x="52.6726%" y="1045" width="0.0162%" height="15" fill="rgb(224,65,2)" fg:x="22694" fg:w="7"/><text x="52.9226%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="52.7098%" y="997" width="0.0139%" height="15" fill="rgb(229,38,24)" fg:x="22710" fg:w="6"/><text x="52.9598%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="52.7005%" y="1013" width="0.0325%" height="15" fill="rgb(218,131,50)" fg:x="22706" fg:w="14"/><text x="52.9505%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="52.7005%" y="1029" width="0.0348%" height="15" fill="rgb(233,106,18)" fg:x="22706" fg:w="15"/><text x="52.9505%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (5 samples, 0.01%)</title><rect x="52.7771%" y="965" width="0.0116%" height="15" fill="rgb(220,216,11)" fg:x="22739" fg:w="5"/><text x="53.0271%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (30 samples, 0.07%)</title><rect x="52.7492%" y="997" width="0.0696%" height="15" fill="rgb(251,100,45)" fg:x="22727" fg:w="30"/><text x="52.9992%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (19 samples, 0.04%)</title><rect x="52.7747%" y="981" width="0.0441%" height="15" fill="rgb(235,143,32)" fg:x="22738" fg:w="19"/><text x="53.0247%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (11 samples, 0.03%)</title><rect x="52.7933%" y="965" width="0.0255%" height="15" fill="rgb(248,124,34)" fg:x="22746" fg:w="11"/><text x="53.0433%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.02%)</title><rect x="52.7956%" y="949" width="0.0232%" height="15" fill="rgb(225,221,4)" fg:x="22747" fg:w="10"/><text x="53.0456%" y="959.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.01%)</title><rect x="52.8072%" y="933" width="0.0116%" height="15" fill="rgb(242,27,43)" fg:x="22752" fg:w="5"/><text x="53.0572%" y="943.50"></text></g><g><title>bytecode_verifier::reference_safety::call (1,205 samples, 2.80%)</title><rect x="50.0244%" y="1125" width="2.7968%" height="15" fill="rgb(227,54,8)" fg:x="21553" fg:w="1205"/><text x="50.2744%" y="1135.50">by..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (94 samples, 0.22%)</title><rect x="52.6030%" y="1109" width="0.2182%" height="15" fill="rgb(253,139,49)" fg:x="22664" fg:w="94"/><text x="52.8530%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (94 samples, 0.22%)</title><rect x="52.6030%" y="1093" width="0.2182%" height="15" fill="rgb(231,26,43)" fg:x="22664" fg:w="94"/><text x="52.8530%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (93 samples, 0.22%)</title><rect x="52.6053%" y="1077" width="0.2159%" height="15" fill="rgb(207,121,39)" fg:x="22665" fg:w="93"/><text x="52.8553%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (57 samples, 0.13%)</title><rect x="52.6889%" y="1061" width="0.1323%" height="15" fill="rgb(223,101,35)" fg:x="22701" fg:w="57"/><text x="52.9389%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (55 samples, 0.13%)</title><rect x="52.6935%" y="1045" width="0.1277%" height="15" fill="rgb(232,87,23)" fg:x="22703" fg:w="55"/><text x="52.9435%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (33 samples, 0.08%)</title><rect x="52.7446%" y="1029" width="0.0766%" height="15" fill="rgb(225,180,29)" fg:x="22725" fg:w="33"/><text x="52.9946%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (31 samples, 0.07%)</title><rect x="52.7492%" y="1013" width="0.0720%" height="15" fill="rgb(225,25,17)" fg:x="22727" fg:w="31"/><text x="52.9992%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.01%)</title><rect x="52.8328%" y="1125" width="0.0116%" height="15" fill="rgb(223,8,52)" fg:x="22763" fg:w="5"/><text x="53.0828%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::constant_at (5 samples, 0.01%)</title><rect x="52.8513%" y="1125" width="0.0116%" height="15" fill="rgb(246,42,21)" fg:x="22771" fg:w="5"/><text x="53.1013%" y="1135.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (5 samples, 0.01%)</title><rect x="52.8513%" y="1109" width="0.0116%" height="15" fill="rgb(205,64,43)" fg:x="22771" fg:w="5"/><text x="53.1013%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="52.8513%" y="1093" width="0.0116%" height="15" fill="rgb(221,160,13)" fg:x="22771" fg:w="5"/><text x="53.1013%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.03%)</title><rect x="52.8769%" y="1093" width="0.0255%" height="15" fill="rgb(239,58,35)" fg:x="22782" fg:w="11"/><text x="53.1269%" y="1103.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (16 samples, 0.04%)</title><rect x="52.8699%" y="1109" width="0.0371%" height="15" fill="rgb(251,26,40)" fg:x="22779" fg:w="16"/><text x="53.1199%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (18 samples, 0.04%)</title><rect x="52.8676%" y="1125" width="0.0418%" height="15" fill="rgb(247,0,4)" fg:x="22778" fg:w="18"/><text x="53.1176%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_instantiation_at (6 samples, 0.01%)</title><rect x="52.9094%" y="1125" width="0.0139%" height="15" fill="rgb(218,130,10)" fg:x="22796" fg:w="6"/><text x="53.1594%" y="1135.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_instantiation_at (5 samples, 0.01%)</title><rect x="52.9117%" y="1109" width="0.0116%" height="15" fill="rgb(239,32,7)" fg:x="22797" fg:w="5"/><text x="53.1617%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="52.9117%" y="1093" width="0.0116%" height="15" fill="rgb(210,192,24)" fg:x="22797" fg:w="5"/><text x="53.1617%" y="1103.50"></text></g><g><title>bytecode_verifier::reference_safety::execute_inner (4,616 samples, 10.71%)</title><rect x="42.2165%" y="1141" width="10.7137%" height="15" fill="rgb(226,212,17)" fg:x="18189" fg:w="4616"/><text x="42.4665%" y="1151.50">bytecode_verifie..</text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="52.9372%" y="933" width="0.0139%" height="15" fill="rgb(219,201,28)" fg:x="22808" fg:w="6"/><text x="53.1872%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="52.9372%" y="917" width="0.0139%" height="15" fill="rgb(235,207,41)" fg:x="22808" fg:w="6"/><text x="53.1872%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="52.9372%" y="901" width="0.0139%" height="15" fill="rgb(241,95,54)" fg:x="22808" fg:w="6"/><text x="53.1872%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="52.9372%" y="885" width="0.0139%" height="15" fill="rgb(248,12,23)" fg:x="22808" fg:w="6"/><text x="53.1872%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="52.9372%" y="869" width="0.0139%" height="15" fill="rgb(228,173,4)" fg:x="22808" fg:w="6"/><text x="53.1872%" y="879.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1109" width="0.0395%" height="15" fill="rgb(254,99,5)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1119.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1093" width="0.0395%" height="15" fill="rgb(212,184,17)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1077" width="0.0395%" height="15" fill="rgb(252,174,1)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.04%)</title><rect x="52.9349%" y="1061" width="0.0395%" height="15" fill="rgb(241,118,51)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1071.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1045" width="0.0395%" height="15" fill="rgb(227,94,47)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1055.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1029" width="0.0395%" height="15" fill="rgb(229,104,2)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="1013" width="0.0395%" height="15" fill="rgb(219,28,31)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.04%)</title><rect x="52.9349%" y="997" width="0.0395%" height="15" fill="rgb(233,109,36)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="981" width="0.0395%" height="15" fill="rgb(246,88,11)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="52.9349%" y="965" width="0.0395%" height="15" fill="rgb(209,212,17)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (17 samples, 0.04%)</title><rect x="52.9349%" y="949" width="0.0395%" height="15" fill="rgb(243,59,29)" fg:x="22807" fg:w="17"/><text x="53.1849%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="52.9744%" y="997" width="0.0116%" height="15" fill="rgb(244,205,48)" fg:x="22824" fg:w="5"/><text x="53.2244%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="52.9744%" y="981" width="0.0116%" height="15" fill="rgb(227,30,6)" fg:x="22824" fg:w="5"/><text x="53.2244%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.01%)</title><rect x="52.9744%" y="965" width="0.0116%" height="15" fill="rgb(220,205,48)" fg:x="22824" fg:w="5"/><text x="53.2244%" y="975.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="52.9744%" y="1061" width="0.0348%" height="15" fill="rgb(250,94,14)" fg:x="22824" fg:w="15"/><text x="53.2244%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="52.9744%" y="1045" width="0.0348%" height="15" fill="rgb(216,119,42)" fg:x="22824" fg:w="15"/><text x="53.2244%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.03%)</title><rect x="52.9744%" y="1029" width="0.0348%" height="15" fill="rgb(232,155,0)" fg:x="22824" fg:w="15"/><text x="53.2244%" y="1039.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="52.9744%" y="1013" width="0.0348%" height="15" fill="rgb(212,24,32)" fg:x="22824" fg:w="15"/><text x="53.2244%" y="1023.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="52.9860%" y="997" width="0.0232%" height="15" fill="rgb(216,69,20)" fg:x="22829" fg:w="10"/><text x="53.2360%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="52.9860%" y="981" width="0.0232%" height="15" fill="rgb(229,73,31)" fg:x="22829" fg:w="10"/><text x="53.2360%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.02%)</title><rect x="52.9860%" y="965" width="0.0232%" height="15" fill="rgb(224,219,20)" fg:x="22829" fg:w="10"/><text x="53.2360%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (7 samples, 0.02%)</title><rect x="53.0092%" y="981" width="0.0162%" height="15" fill="rgb(215,146,41)" fg:x="22839" fg:w="7"/><text x="53.2592%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="53.0138%" y="965" width="0.0116%" height="15" fill="rgb(244,71,31)" fg:x="22841" fg:w="5"/><text x="53.2638%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="53.0254%" y="949" width="0.0116%" height="15" fill="rgb(224,24,11)" fg:x="22846" fg:w="5"/><text x="53.2754%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="53.0254%" y="981" width="0.0139%" height="15" fill="rgb(229,76,15)" fg:x="22846" fg:w="6"/><text x="53.2754%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.0254%" y="965" width="0.0139%" height="15" fill="rgb(209,93,2)" fg:x="22846" fg:w="6"/><text x="53.2754%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (20 samples, 0.05%)</title><rect x="53.0092%" y="1061" width="0.0464%" height="15" fill="rgb(216,200,50)" fg:x="22839" fg:w="20"/><text x="53.2592%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (20 samples, 0.05%)</title><rect x="53.0092%" y="1045" width="0.0464%" height="15" fill="rgb(211,67,34)" fg:x="22839" fg:w="20"/><text x="53.2592%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (20 samples, 0.05%)</title><rect x="53.0092%" y="1029" width="0.0464%" height="15" fill="rgb(225,87,47)" fg:x="22839" fg:w="20"/><text x="53.2592%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (20 samples, 0.05%)</title><rect x="53.0092%" y="1013" width="0.0464%" height="15" fill="rgb(217,185,16)" fg:x="22839" fg:w="20"/><text x="53.2592%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (20 samples, 0.05%)</title><rect x="53.0092%" y="997" width="0.0464%" height="15" fill="rgb(205,0,0)" fg:x="22839" fg:w="20"/><text x="53.2592%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (7 samples, 0.02%)</title><rect x="53.0393%" y="981" width="0.0162%" height="15" fill="rgb(207,116,45)" fg:x="22852" fg:w="7"/><text x="53.2893%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="53.0556%" y="1045" width="0.0209%" height="15" fill="rgb(221,156,26)" fg:x="22859" fg:w="9"/><text x="53.3056%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.02%)</title><rect x="53.0579%" y="1029" width="0.0186%" height="15" fill="rgb(213,140,4)" fg:x="22860" fg:w="8"/><text x="53.3079%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.02%)</title><rect x="53.0579%" y="1013" width="0.0186%" height="15" fill="rgb(231,224,15)" fg:x="22860" fg:w="8"/><text x="53.3079%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (5 samples, 0.01%)</title><rect x="53.0927%" y="949" width="0.0116%" height="15" fill="rgb(244,76,20)" fg:x="22875" fg:w="5"/><text x="53.3427%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.02%)</title><rect x="53.1275%" y="933" width="0.0232%" height="15" fill="rgb(238,117,7)" fg:x="22890" fg:w="10"/><text x="53.3775%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.1368%" y="917" width="0.0139%" height="15" fill="rgb(235,1,10)" fg:x="22894" fg:w="6"/><text x="53.3868%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.1368%" y="901" width="0.0139%" height="15" fill="rgb(216,165,6)" fg:x="22894" fg:w="6"/><text x="53.3868%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.1368%" y="885" width="0.0139%" height="15" fill="rgb(246,91,35)" fg:x="22894" fg:w="6"/><text x="53.3868%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="53.1531%" y="933" width="0.0139%" height="15" fill="rgb(228,96,24)" fg:x="22901" fg:w="6"/><text x="53.4031%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.01%)</title><rect x="53.1856%" y="917" width="0.0116%" height="15" fill="rgb(254,217,53)" fg:x="22915" fg:w="5"/><text x="53.4356%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5 samples, 0.01%)</title><rect x="53.1856%" y="901" width="0.0116%" height="15" fill="rgb(209,60,0)" fg:x="22915" fg:w="5"/><text x="53.4356%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="53.1972%" y="917" width="0.0116%" height="15" fill="rgb(250,93,26)" fg:x="22920" fg:w="5"/><text x="53.4472%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (46 samples, 0.11%)</title><rect x="53.1043%" y="949" width="0.1068%" height="15" fill="rgb(211,9,40)" fg:x="22880" fg:w="46"/><text x="53.3543%" y="959.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (19 samples, 0.04%)</title><rect x="53.1670%" y="933" width="0.0441%" height="15" fill="rgb(242,57,20)" fg:x="22907" fg:w="19"/><text x="53.4170%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::cast_to_leaf_unchecked (5 samples, 0.01%)</title><rect x="53.2111%" y="949" width="0.0116%" height="15" fill="rgb(248,85,48)" fg:x="22926" fg:w="5"/><text x="53.4611%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.01%)</title><rect x="53.2227%" y="949" width="0.0116%" height="15" fill="rgb(212,117,2)" fg:x="22931" fg:w="5"/><text x="53.4727%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (7 samples, 0.02%)</title><rect x="53.2343%" y="933" width="0.0162%" height="15" fill="rgb(243,19,3)" fg:x="22936" fg:w="7"/><text x="53.4843%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (76 samples, 0.18%)</title><rect x="53.0765%" y="1045" width="0.1764%" height="15" fill="rgb(232,217,24)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (76 samples, 0.18%)</title><rect x="53.0765%" y="1029" width="0.1764%" height="15" fill="rgb(224,175,40)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (76 samples, 0.18%)</title><rect x="53.0765%" y="1013" width="0.1764%" height="15" fill="rgb(212,162,32)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (76 samples, 0.18%)</title><rect x="53.0765%" y="997" width="0.1764%" height="15" fill="rgb(215,9,4)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="1007.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (76 samples, 0.18%)</title><rect x="53.0765%" y="981" width="0.1764%" height="15" fill="rgb(242,42,7)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="991.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (76 samples, 0.18%)</title><rect x="53.0765%" y="965" width="0.1764%" height="15" fill="rgb(242,184,45)" fg:x="22868" fg:w="76"/><text x="53.3265%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (8 samples, 0.02%)</title><rect x="53.2343%" y="949" width="0.0186%" height="15" fill="rgb(228,111,51)" fg:x="22936" fg:w="8"/><text x="53.4843%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (8 samples, 0.02%)</title><rect x="53.2598%" y="869" width="0.0186%" height="15" fill="rgb(236,147,17)" fg:x="22947" fg:w="8"/><text x="53.5098%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (8 samples, 0.02%)</title><rect x="53.2598%" y="853" width="0.0186%" height="15" fill="rgb(210,75,22)" fg:x="22947" fg:w="8"/><text x="53.5098%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="53.2598%" y="837" width="0.0186%" height="15" fill="rgb(217,159,45)" fg:x="22947" fg:w="8"/><text x="53.5098%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="53.2598%" y="821" width="0.0186%" height="15" fill="rgb(245,165,53)" fg:x="22947" fg:w="8"/><text x="53.5098%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="53.2598%" y="805" width="0.0186%" height="15" fill="rgb(251,190,50)" fg:x="22947" fg:w="8"/><text x="53.5098%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (16 samples, 0.04%)</title><rect x="53.2529%" y="1029" width="0.0371%" height="15" fill="rgb(208,203,29)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.04%)</title><rect x="53.2529%" y="1013" width="0.0371%" height="15" fill="rgb(207,209,35)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.04%)</title><rect x="53.2529%" y="997" width="0.0371%" height="15" fill="rgb(230,144,49)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.04%)</title><rect x="53.2529%" y="981" width="0.0371%" height="15" fill="rgb(229,31,6)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="991.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (16 samples, 0.04%)</title><rect x="53.2529%" y="965" width="0.0371%" height="15" fill="rgb(251,129,24)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.04%)</title><rect x="53.2529%" y="949" width="0.0371%" height="15" fill="rgb(235,105,15)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.04%)</title><rect x="53.2529%" y="933" width="0.0371%" height="15" fill="rgb(216,52,43)" fg:x="22944" fg:w="16"/><text x="53.5029%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (13 samples, 0.03%)</title><rect x="53.2598%" y="917" width="0.0302%" height="15" fill="rgb(238,144,41)" fg:x="22947" fg:w="13"/><text x="53.5098%" y="927.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (13 samples, 0.03%)</title><rect x="53.2598%" y="901" width="0.0302%" height="15" fill="rgb(243,63,9)" fg:x="22947" fg:w="13"/><text x="53.5098%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (13 samples, 0.03%)</title><rect x="53.2598%" y="885" width="0.0302%" height="15" fill="rgb(246,208,1)" fg:x="22947" fg:w="13"/><text x="53.5098%" y="895.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (22 samples, 0.05%)</title><rect x="53.2529%" y="1045" width="0.0511%" height="15" fill="rgb(233,182,18)" fg:x="22944" fg:w="22"/><text x="53.5029%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (7 samples, 0.02%)</title><rect x="53.3225%" y="901" width="0.0162%" height="15" fill="rgb(242,224,8)" fg:x="22974" fg:w="7"/><text x="53.5725%" y="911.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (124 samples, 0.29%)</title><rect x="53.0556%" y="1061" width="0.2878%" height="15" fill="rgb(243,54,37)" fg:x="22859" fg:w="124"/><text x="53.3056%" y="1071.50"></text></g><g><title>borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (17 samples, 0.04%)</title><rect x="53.3039%" y="1045" width="0.0395%" height="15" fill="rgb(233,192,12)" fg:x="22966" fg:w="17"/><text x="53.5539%" y="1055.50"></text></g><g><title>borrow_graph::shared::remap_set (13 samples, 0.03%)</title><rect x="53.3132%" y="1029" width="0.0302%" height="15" fill="rgb(251,192,53)" fg:x="22970" fg:w="13"/><text x="53.5632%" y="1039.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (9 samples, 0.02%)</title><rect x="53.3225%" y="1013" width="0.0209%" height="15" fill="rgb(246,141,26)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (9 samples, 0.02%)</title><rect x="53.3225%" y="997" width="0.0209%" height="15" fill="rgb(239,195,19)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (9 samples, 0.02%)</title><rect x="53.3225%" y="981" width="0.0209%" height="15" fill="rgb(241,16,39)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (9 samples, 0.02%)</title><rect x="53.3225%" y="965" width="0.0209%" height="15" fill="rgb(223,13,53)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (9 samples, 0.02%)</title><rect x="53.3225%" y="949" width="0.0209%" height="15" fill="rgb(214,227,0)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="959.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (9 samples, 0.02%)</title><rect x="53.3225%" y="933" width="0.0209%" height="15" fill="rgb(228,103,26)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="943.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (9 samples, 0.02%)</title><rect x="53.3225%" y="917" width="0.0209%" height="15" fill="rgb(254,177,53)" fg:x="22974" fg:w="9"/><text x="53.5725%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.02%)</title><rect x="53.3527%" y="885" width="0.0186%" height="15" fill="rgb(208,201,34)" fg:x="22987" fg:w="8"/><text x="53.6027%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (7 samples, 0.02%)</title><rect x="53.3550%" y="869" width="0.0162%" height="15" fill="rgb(212,39,5)" fg:x="22988" fg:w="7"/><text x="53.6050%" y="879.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state::_{{closure}} (13 samples, 0.03%)</title><rect x="53.3434%" y="949" width="0.0302%" height="15" fill="rgb(246,117,3)" fg:x="22983" fg:w="13"/><text x="53.5934%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.03%)</title><rect x="53.3434%" y="933" width="0.0302%" height="15" fill="rgb(244,118,39)" fg:x="22983" fg:w="13"/><text x="53.5934%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="53.3504%" y="917" width="0.0232%" height="15" fill="rgb(241,64,10)" fg:x="22986" fg:w="10"/><text x="53.6004%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (10 samples, 0.02%)</title><rect x="53.3504%" y="901" width="0.0232%" height="15" fill="rgb(229,39,44)" fg:x="22986" fg:w="10"/><text x="53.6004%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (8 samples, 0.02%)</title><rect x="53.3736%" y="885" width="0.0186%" height="15" fill="rgb(230,226,3)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (8 samples, 0.02%)</title><rect x="53.3736%" y="869" width="0.0186%" height="15" fill="rgb(222,13,42)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="53.3736%" y="853" width="0.0186%" height="15" fill="rgb(247,180,54)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (8 samples, 0.02%)</title><rect x="53.3736%" y="837" width="0.0186%" height="15" fill="rgb(205,96,16)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.02%)</title><rect x="53.3736%" y="821" width="0.0186%" height="15" fill="rgb(205,100,21)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="831.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="53.3736%" y="805" width="0.0186%" height="15" fill="rgb(248,51,4)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (8 samples, 0.02%)</title><rect x="53.3736%" y="789" width="0.0186%" height="15" fill="rgb(217,197,30)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.02%)</title><rect x="53.3736%" y="773" width="0.0186%" height="15" fill="rgb(240,179,40)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.02%)</title><rect x="53.3736%" y="757" width="0.0186%" height="15" fill="rgb(212,185,35)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="53.3736%" y="741" width="0.0186%" height="15" fill="rgb(251,222,31)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="53.3736%" y="725" width="0.0186%" height="15" fill="rgb(208,140,36)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="735.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="53.3736%" y="709" width="0.0186%" height="15" fill="rgb(220,148,1)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="719.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="53.3736%" y="693" width="0.0186%" height="15" fill="rgb(254,4,28)" fg:x="22996" fg:w="8"/><text x="53.6236%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="53.4107%" y="805" width="0.0116%" height="15" fill="rgb(222,185,44)" fg:x="23012" fg:w="5"/><text x="53.6607%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.02%)</title><rect x="53.4223%" y="805" width="0.0162%" height="15" fill="rgb(215,74,39)" fg:x="23017" fg:w="7"/><text x="53.6723%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="53.3921%" y="837" width="0.0557%" height="15" fill="rgb(247,86,4)" fg:x="23004" fg:w="24"/><text x="53.6421%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="53.3968%" y="821" width="0.0511%" height="15" fill="rgb(231,105,32)" fg:x="23006" fg:w="22"/><text x="53.6468%" y="831.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="53.4478%" y="837" width="0.0116%" height="15" fill="rgb(222,65,35)" fg:x="23028" fg:w="5"/><text x="53.6978%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="53.4478%" y="821" width="0.0116%" height="15" fill="rgb(218,145,35)" fg:x="23028" fg:w="5"/><text x="53.6978%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="53.4478%" y="805" width="0.0116%" height="15" fill="rgb(208,7,15)" fg:x="23028" fg:w="5"/><text x="53.6978%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (41 samples, 0.10%)</title><rect x="53.3736%" y="901" width="0.0952%" height="15" fill="rgb(209,83,13)" fg:x="22996" fg:w="41"/><text x="53.6236%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.08%)</title><rect x="53.3921%" y="885" width="0.0766%" height="15" fill="rgb(218,3,10)" fg:x="23004" fg:w="33"/><text x="53.6421%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (33 samples, 0.08%)</title><rect x="53.3921%" y="869" width="0.0766%" height="15" fill="rgb(211,219,4)" fg:x="23004" fg:w="33"/><text x="53.6421%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.08%)</title><rect x="53.3921%" y="853" width="0.0766%" height="15" fill="rgb(228,194,12)" fg:x="23004" fg:w="33"/><text x="53.6421%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="53.5035%" y="853" width="0.0116%" height="15" fill="rgb(210,175,7)" fg:x="23052" fg:w="5"/><text x="53.7535%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (13 samples, 0.03%)</title><rect x="53.5407%" y="837" width="0.0302%" height="15" fill="rgb(243,132,6)" fg:x="23068" fg:w="13"/><text x="53.7907%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="53.5546%" y="821" width="0.0162%" height="15" fill="rgb(207,72,18)" fg:x="23074" fg:w="7"/><text x="53.8046%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.5569%" y="805" width="0.0139%" height="15" fill="rgb(236,1,18)" fg:x="23075" fg:w="6"/><text x="53.8069%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="53.5592%" y="789" width="0.0116%" height="15" fill="rgb(227,0,18)" fg:x="23076" fg:w="5"/><text x="53.8092%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="53.5778%" y="805" width="0.0116%" height="15" fill="rgb(247,37,5)" fg:x="23084" fg:w="5"/><text x="53.8278%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (5 samples, 0.01%)</title><rect x="53.5778%" y="789" width="0.0116%" height="15" fill="rgb(237,179,24)" fg:x="23084" fg:w="5"/><text x="53.8278%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (14 samples, 0.03%)</title><rect x="53.5708%" y="837" width="0.0325%" height="15" fill="rgb(226,53,20)" fg:x="23081" fg:w="14"/><text x="53.8208%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (13 samples, 0.03%)</title><rect x="53.5732%" y="821" width="0.0302%" height="15" fill="rgb(247,75,7)" fg:x="23082" fg:w="13"/><text x="53.8232%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="53.5894%" y="805" width="0.0139%" height="15" fill="rgb(233,96,12)" fg:x="23089" fg:w="6"/><text x="53.8394%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (58 samples, 0.13%)</title><rect x="53.5151%" y="853" width="0.1346%" height="15" fill="rgb(224,125,0)" fg:x="23057" fg:w="58"/><text x="53.7651%" y="863.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (20 samples, 0.05%)</title><rect x="53.6033%" y="837" width="0.0464%" height="15" fill="rgb(224,92,25)" fg:x="23095" fg:w="20"/><text x="53.8533%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (68 samples, 0.16%)</title><rect x="53.4989%" y="869" width="0.1578%" height="15" fill="rgb(224,42,24)" fg:x="23050" fg:w="68"/><text x="53.7489%" y="879.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (295 samples, 0.68%)</title><rect x="52.9744%" y="1077" width="0.6847%" height="15" fill="rgb(234,132,49)" fg:x="22824" fg:w="295"/><text x="53.2244%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (136 samples, 0.32%)</title><rect x="53.3434%" y="1061" width="0.3157%" height="15" fill="rgb(248,100,35)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (136 samples, 0.32%)</title><rect x="53.3434%" y="1045" width="0.3157%" height="15" fill="rgb(239,94,40)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (136 samples, 0.32%)</title><rect x="53.3434%" y="1029" width="0.3157%" height="15" fill="rgb(235,139,28)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (136 samples, 0.32%)</title><rect x="53.3434%" y="1013" width="0.3157%" height="15" fill="rgb(217,144,7)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (136 samples, 0.32%)</title><rect x="53.3434%" y="997" width="0.3157%" height="15" fill="rgb(227,55,4)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (136 samples, 0.32%)</title><rect x="53.3434%" y="981" width="0.3157%" height="15" fill="rgb(252,82,54)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (136 samples, 0.32%)</title><rect x="53.3434%" y="965" width="0.3157%" height="15" fill="rgb(245,172,4)" fg:x="22983" fg:w="136"/><text x="53.5934%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (123 samples, 0.29%)</title><rect x="53.3736%" y="949" width="0.2855%" height="15" fill="rgb(207,26,27)" fg:x="22996" fg:w="123"/><text x="53.6236%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (123 samples, 0.29%)</title><rect x="53.3736%" y="933" width="0.2855%" height="15" fill="rgb(252,98,18)" fg:x="22996" fg:w="123"/><text x="53.6236%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (123 samples, 0.29%)</title><rect x="53.3736%" y="917" width="0.2855%" height="15" fill="rgb(244,8,26)" fg:x="22996" fg:w="123"/><text x="53.6236%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (82 samples, 0.19%)</title><rect x="53.4687%" y="901" width="0.1903%" height="15" fill="rgb(237,173,45)" fg:x="23037" fg:w="82"/><text x="53.7187%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (82 samples, 0.19%)</title><rect x="53.4687%" y="885" width="0.1903%" height="15" fill="rgb(208,213,49)" fg:x="23037" fg:w="82"/><text x="53.7187%" y="895.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (299 samples, 0.69%)</title><rect x="52.9744%" y="1093" width="0.6940%" height="15" fill="rgb(212,122,37)" fg:x="22824" fg:w="299"/><text x="53.2244%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="53.6753%" y="965" width="0.0232%" height="15" fill="rgb(213,80,17)" fg:x="23126" fg:w="10"/><text x="53.9253%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="53.6753%" y="949" width="0.0232%" height="15" fill="rgb(206,210,43)" fg:x="23126" fg:w="10"/><text x="53.9253%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.02%)</title><rect x="53.6753%" y="933" width="0.0232%" height="15" fill="rgb(229,214,3)" fg:x="23126" fg:w="10"/><text x="53.9253%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (5 samples, 0.01%)</title><rect x="53.6869%" y="917" width="0.0116%" height="15" fill="rgb(235,213,29)" fg:x="23131" fg:w="5"/><text x="53.9369%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (5 samples, 0.01%)</title><rect x="53.6869%" y="901" width="0.0116%" height="15" fill="rgb(248,135,26)" fg:x="23131" fg:w="5"/><text x="53.9369%" y="911.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.01%)</title><rect x="53.6869%" y="885" width="0.0116%" height="15" fill="rgb(242,188,12)" fg:x="23131" fg:w="5"/><text x="53.9369%" y="895.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (333 samples, 0.77%)</title><rect x="52.9303%" y="1141" width="0.7729%" height="15" fill="rgb(245,38,12)" fg:x="22805" fg:w="333"/><text x="53.1803%" y="1151.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (333 samples, 0.77%)</title><rect x="52.9303%" y="1125" width="0.7729%" height="15" fill="rgb(218,42,13)" fg:x="22805" fg:w="333"/><text x="53.1803%" y="1135.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (314 samples, 0.73%)</title><rect x="52.9744%" y="1109" width="0.7288%" height="15" fill="rgb(238,132,49)" fg:x="22824" fg:w="314"/><text x="53.2244%" y="1119.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="53.6683%" y="1093" width="0.0348%" height="15" fill="rgb(209,196,19)" fg:x="23123" fg:w="15"/><text x="53.9183%" y="1103.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="53.6683%" y="1077" width="0.0348%" height="15" fill="rgb(244,131,22)" fg:x="23123" fg:w="15"/><text x="53.9183%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="53.6683%" y="1061" width="0.0348%" height="15" fill="rgb(223,18,34)" fg:x="23123" fg:w="15"/><text x="53.9183%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.03%)</title><rect x="53.6683%" y="1045" width="0.0348%" height="15" fill="rgb(252,124,54)" fg:x="23123" fg:w="15"/><text x="53.9183%" y="1055.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="53.6683%" y="1029" width="0.0348%" height="15" fill="rgb(229,106,42)" fg:x="23123" fg:w="15"/><text x="53.9183%" y="1039.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="53.6753%" y="1013" width="0.0279%" height="15" fill="rgb(221,129,1)" fg:x="23126" fg:w="12"/><text x="53.9253%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="53.6753%" y="997" width="0.0279%" height="15" fill="rgb(229,74,15)" fg:x="23126" fg:w="12"/><text x="53.9253%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (12 samples, 0.03%)</title><rect x="53.6753%" y="981" width="0.0279%" height="15" fill="rgb(210,206,50)" fg:x="23126" fg:w="12"/><text x="53.9253%" y="991.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (7 samples, 0.02%)</title><rect x="53.7078%" y="1141" width="0.0162%" height="15" fill="rgb(251,114,31)" fg:x="23140" fg:w="7"/><text x="53.9578%" y="1151.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_generic_instance (6 samples, 0.01%)</title><rect x="53.7101%" y="1125" width="0.0139%" height="15" fill="rgb(215,225,28)" fg:x="23141" fg:w="6"/><text x="53.9601%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (6 samples, 0.01%)</title><rect x="53.7101%" y="1109" width="0.0139%" height="15" fill="rgb(237,109,14)" fg:x="23141" fg:w="6"/><text x="53.9601%" y="1119.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_generic_instance (6 samples, 0.01%)</title><rect x="53.7240%" y="1109" width="0.0139%" height="15" fill="rgb(230,13,37)" fg:x="23147" fg:w="6"/><text x="53.9740%" y="1119.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code_units (8 samples, 0.02%)</title><rect x="53.7240%" y="1141" width="0.0186%" height="15" fill="rgb(231,40,28)" fg:x="23147" fg:w="8"/><text x="53.9740%" y="1151.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (8 samples, 0.02%)</title><rect x="53.7240%" y="1125" width="0.0186%" height="15" fill="rgb(231,202,18)" fg:x="23147" fg:w="8"/><text x="53.9740%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="53.7658%" y="1093" width="0.0418%" height="15" fill="rgb(225,33,18)" fg:x="23165" fg:w="18"/><text x="54.0158%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="53.7890%" y="1077" width="0.0186%" height="15" fill="rgb(223,64,47)" fg:x="23175" fg:w="8"/><text x="54.0390%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="53.8076%" y="1093" width="0.0116%" height="15" fill="rgb(234,114,13)" fg:x="23183" fg:w="5"/><text x="54.0576%" y="1103.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="53.8076%" y="1077" width="0.0116%" height="15" fill="rgb(248,56,40)" fg:x="23183" fg:w="5"/><text x="54.0576%" y="1087.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_instantiation (5 samples, 0.01%)</title><rect x="53.8262%" y="1093" width="0.0116%" height="15" fill="rgb(221,194,21)" fg:x="23191" fg:w="5"/><text x="54.0762%" y="1103.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module_impl (54 samples, 0.13%)</title><rect x="53.7426%" y="1141" width="0.1253%" height="15" fill="rgb(242,108,46)" fg:x="23155" fg:w="54"/><text x="53.9926%" y="1151.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code_units (54 samples, 0.13%)</title><rect x="53.7426%" y="1125" width="0.1253%" height="15" fill="rgb(220,106,10)" fg:x="23155" fg:w="54"/><text x="53.9926%" y="1135.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (54 samples, 0.13%)</title><rect x="53.7426%" y="1109" width="0.1253%" height="15" fill="rgb(211,88,4)" fg:x="23155" fg:w="54"/><text x="53.9926%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="53.9445%" y="1125" width="0.0116%" height="15" fill="rgb(214,95,34)" fg:x="23242" fg:w="5"/><text x="54.1945%" y="1135.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="53.9677%" y="1077" width="0.0302%" height="15" fill="rgb(250,160,33)" fg:x="23252" fg:w="13"/><text x="54.2177%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="53.9793%" y="1061" width="0.0186%" height="15" fill="rgb(225,29,10)" fg:x="23257" fg:w="8"/><text x="54.2293%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="53.9840%" y="1045" width="0.0139%" height="15" fill="rgb(224,28,30)" fg:x="23259" fg:w="6"/><text x="54.2340%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="53.9840%" y="1029" width="0.0139%" height="15" fill="rgb(231,77,4)" fg:x="23259" fg:w="6"/><text x="54.2340%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="53.9840%" y="1013" width="0.0139%" height="15" fill="rgb(209,63,21)" fg:x="23259" fg:w="6"/><text x="54.2340%" y="1023.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.04%)</title><rect x="53.9677%" y="1093" width="0.0371%" height="15" fill="rgb(226,22,11)" fg:x="23252" fg:w="16"/><text x="54.2177%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.02%)</title><rect x="54.0072%" y="1077" width="0.0232%" height="15" fill="rgb(216,82,30)" fg:x="23269" fg:w="10"/><text x="54.2572%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (16 samples, 0.04%)</title><rect x="54.0049%" y="1093" width="0.0371%" height="15" fill="rgb(246,227,38)" fg:x="23268" fg:w="16"/><text x="54.2549%" y="1103.50"></text></g><g><title>core::alloc::layout::Layout::new (5 samples, 0.01%)</title><rect x="54.0304%" y="1077" width="0.0116%" height="15" fill="rgb(251,203,53)" fg:x="23279" fg:w="5"/><text x="54.2804%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.08%)</title><rect x="53.9677%" y="1109" width="0.0812%" height="15" fill="rgb(254,101,1)" fg:x="23252" fg:w="35"/><text x="54.2177%" y="1119.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (42 samples, 0.10%)</title><rect x="53.9561%" y="1125" width="0.0975%" height="15" fill="rgb(241,180,5)" fg:x="23247" fg:w="42"/><text x="54.2061%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (11 samples, 0.03%)</title><rect x="54.0629%" y="1125" width="0.0255%" height="15" fill="rgb(218,168,4)" fg:x="23293" fg:w="11"/><text x="54.3129%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.02%)</title><rect x="54.0931%" y="1109" width="0.0186%" height="15" fill="rgb(224,223,32)" fg:x="23306" fg:w="8"/><text x="54.3431%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="54.1000%" y="1093" width="0.0116%" height="15" fill="rgb(236,106,22)" fg:x="23309" fg:w="5"/><text x="54.3500%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="54.1186%" y="1029" width="0.0139%" height="15" fill="rgb(206,121,5)" fg:x="23317" fg:w="6"/><text x="54.3686%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="54.1186%" y="1013" width="0.0139%" height="15" fill="rgb(233,87,28)" fg:x="23317" fg:w="6"/><text x="54.3686%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="54.1209%" y="997" width="0.0116%" height="15" fill="rgb(236,137,17)" fg:x="23318" fg:w="5"/><text x="54.3709%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="54.1186%" y="1045" width="0.0162%" height="15" fill="rgb(209,183,38)" fg:x="23317" fg:w="7"/><text x="54.3686%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (5 samples, 0.01%)</title><rect x="54.1372%" y="1029" width="0.0116%" height="15" fill="rgb(206,162,44)" fg:x="23325" fg:w="5"/><text x="54.3872%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="54.1348%" y="1045" width="0.0162%" height="15" fill="rgb(237,70,39)" fg:x="23324" fg:w="7"/><text x="54.3848%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="54.1116%" y="1109" width="0.0418%" height="15" fill="rgb(212,176,5)" fg:x="23314" fg:w="18"/><text x="54.3616%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="54.1116%" y="1093" width="0.0418%" height="15" fill="rgb(232,95,16)" fg:x="23314" fg:w="18"/><text x="54.3616%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.04%)</title><rect x="54.1116%" y="1077" width="0.0418%" height="15" fill="rgb(219,115,35)" fg:x="23314" fg:w="18"/><text x="54.3616%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.04%)</title><rect x="54.1116%" y="1061" width="0.0418%" height="15" fill="rgb(251,67,27)" fg:x="23314" fg:w="18"/><text x="54.3616%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.07%)</title><rect x="54.0884%" y="1125" width="0.0673%" height="15" fill="rgb(222,95,40)" fg:x="23304" fg:w="29"/><text x="54.3384%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (5 samples, 0.01%)</title><rect x="54.1557%" y="1125" width="0.0116%" height="15" fill="rgb(250,35,16)" fg:x="23333" fg:w="5"/><text x="54.4057%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (5 samples, 0.01%)</title><rect x="54.1557%" y="1109" width="0.0116%" height="15" fill="rgb(224,86,44)" fg:x="23333" fg:w="5"/><text x="54.4057%" y="1119.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::local_at (11 samples, 0.03%)</title><rect x="54.1673%" y="1125" width="0.0255%" height="15" fill="rgb(237,53,53)" fg:x="23338" fg:w="11"/><text x="54.4173%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::Locals::local_at (10 samples, 0.02%)</title><rect x="54.1697%" y="1109" width="0.0232%" height="15" fill="rgb(208,171,33)" fg:x="23339" fg:w="10"/><text x="54.4197%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="54.1766%" y="1093" width="0.0162%" height="15" fill="rgb(222,64,27)" fg:x="23342" fg:w="7"/><text x="54.4266%" y="1103.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="54.2091%" y="1109" width="0.0116%" height="15" fill="rgb(221,121,35)" fg:x="23356" fg:w="5"/><text x="54.4591%" y="1119.50"></text></g><g><title>bytecode_verifier::type_safety::materialize_type (5 samples, 0.01%)</title><rect x="54.2393%" y="1109" width="0.0116%" height="15" fill="rgb(228,137,42)" fg:x="23369" fg:w="5"/><text x="54.4893%" y="1119.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_field (32 samples, 0.07%)</title><rect x="54.1929%" y="1125" width="0.0743%" height="15" fill="rgb(227,54,21)" fg:x="23349" fg:w="32"/><text x="54.4429%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (9 samples, 0.02%)</title><rect x="54.2788%" y="1109" width="0.0209%" height="15" fill="rgb(240,168,33)" fg:x="23386" fg:w="9"/><text x="54.5288%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (9 samples, 0.02%)</title><rect x="54.2788%" y="1093" width="0.0209%" height="15" fill="rgb(243,159,6)" fg:x="23386" fg:w="9"/><text x="54.5288%" y="1103.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (5 samples, 0.01%)</title><rect x="54.2880%" y="1077" width="0.0116%" height="15" fill="rgb(205,211,41)" fg:x="23390" fg:w="5"/><text x="54.5380%" y="1087.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_global (19 samples, 0.04%)</title><rect x="54.2671%" y="1125" width="0.0441%" height="15" fill="rgb(253,30,1)" fg:x="23381" fg:w="19"/><text x="54.5171%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_loc (9 samples, 0.02%)</title><rect x="54.3112%" y="1125" width="0.0209%" height="15" fill="rgb(226,80,18)" fg:x="23400" fg:w="9"/><text x="54.5612%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="54.3484%" y="1109" width="0.0162%" height="15" fill="rgb(253,156,46)" fg:x="23416" fg:w="7"/><text x="54.5984%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (7 samples, 0.02%)</title><rect x="54.3484%" y="1093" width="0.0162%" height="15" fill="rgb(248,87,27)" fg:x="23416" fg:w="7"/><text x="54.5984%" y="1103.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::cmp::PartialEq&gt;::ne (6 samples, 0.01%)</title><rect x="54.3739%" y="1109" width="0.0139%" height="15" fill="rgb(227,122,2)" fg:x="23427" fg:w="6"/><text x="54.6239%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (7 samples, 0.02%)</title><rect x="54.3878%" y="1109" width="0.0162%" height="15" fill="rgb(229,94,39)" fg:x="23433" fg:w="7"/><text x="54.6378%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="54.4180%" y="1093" width="0.0139%" height="15" fill="rgb(225,173,31)" fg:x="23446" fg:w="6"/><text x="54.6680%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.01%)</title><rect x="54.4180%" y="1077" width="0.0139%" height="15" fill="rgb(239,176,30)" fg:x="23446" fg:w="6"/><text x="54.6680%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="54.4203%" y="1061" width="0.0116%" height="15" fill="rgb(212,104,21)" fg:x="23447" fg:w="5"/><text x="54.6703%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="54.4203%" y="1045" width="0.0116%" height="15" fill="rgb(240,209,40)" fg:x="23447" fg:w="5"/><text x="54.6703%" y="1055.50"></text></g><g><title>bytecode_verifier::type_safety::instantiate (5 samples, 0.01%)</title><rect x="54.4319%" y="1093" width="0.0116%" height="15" fill="rgb(234,195,5)" fg:x="23452" fg:w="5"/><text x="54.6819%" y="1103.50"></text></g><g><title>bytecode_verifier::type_safety::instantiate (19 samples, 0.04%)</title><rect x="54.4134%" y="1109" width="0.0441%" height="15" fill="rgb(238,213,1)" fg:x="23444" fg:w="19"/><text x="54.6634%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="54.4435%" y="1093" width="0.0139%" height="15" fill="rgb(235,182,54)" fg:x="23457" fg:w="6"/><text x="54.6935%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.4435%" y="1077" width="0.0139%" height="15" fill="rgb(229,50,46)" fg:x="23457" fg:w="6"/><text x="54.6935%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.4435%" y="1061" width="0.0139%" height="15" fill="rgb(219,145,13)" fg:x="23457" fg:w="6"/><text x="54.6935%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.4435%" y="1045" width="0.0139%" height="15" fill="rgb(220,226,10)" fg:x="23457" fg:w="6"/><text x="54.6935%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (8 samples, 0.02%)</title><rect x="54.4598%" y="1109" width="0.0186%" height="15" fill="rgb(248,47,30)" fg:x="23464" fg:w="8"/><text x="54.7098%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (7 samples, 0.02%)</title><rect x="54.4621%" y="1093" width="0.0162%" height="15" fill="rgb(231,209,44)" fg:x="23465" fg:w="7"/><text x="54.7121%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.01%)</title><rect x="54.4784%" y="1109" width="0.0139%" height="15" fill="rgb(209,80,30)" fg:x="23472" fg:w="6"/><text x="54.7284%" y="1119.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="54.4784%" y="1093" width="0.0139%" height="15" fill="rgb(232,9,14)" fg:x="23472" fg:w="6"/><text x="54.7284%" y="1103.50"></text></g><g><title>bytecode_verifier::type_safety::call (75 samples, 0.17%)</title><rect x="54.3321%" y="1125" width="0.1741%" height="15" fill="rgb(243,91,43)" fg:x="23409" fg:w="75"/><text x="54.5821%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (6 samples, 0.01%)</title><rect x="54.4923%" y="1109" width="0.0139%" height="15" fill="rgb(231,90,52)" fg:x="23478" fg:w="6"/><text x="54.7423%" y="1119.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (5 samples, 0.01%)</title><rect x="54.4946%" y="1093" width="0.0116%" height="15" fill="rgb(253,192,44)" fg:x="23479" fg:w="5"/><text x="54.7446%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="54.4946%" y="1077" width="0.0116%" height="15" fill="rgb(241,66,31)" fg:x="23479" fg:w="5"/><text x="54.7446%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="54.5132%" y="965" width="0.0116%" height="15" fill="rgb(235,81,37)" fg:x="23487" fg:w="5"/><text x="54.7632%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="54.5132%" y="1077" width="0.0139%" height="15" fill="rgb(223,221,9)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.5132%" y="1061" width="0.0139%" height="15" fill="rgb(242,180,7)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1071.50"></text></g><g><title>core::iter::adapters::process_results (6 samples, 0.01%)</title><rect x="54.5132%" y="1045" width="0.0139%" height="15" fill="rgb(243,78,19)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (6 samples, 0.01%)</title><rect x="54.5132%" y="1029" width="0.0139%" height="15" fill="rgb(233,23,17)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="54.5132%" y="1013" width="0.0139%" height="15" fill="rgb(252,122,45)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.5132%" y="997" width="0.0139%" height="15" fill="rgb(247,108,20)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="54.5132%" y="981" width="0.0139%" height="15" fill="rgb(235,84,21)" fg:x="23487" fg:w="6"/><text x="54.7632%" y="991.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (15 samples, 0.03%)</title><rect x="54.5132%" y="1109" width="0.0348%" height="15" fill="rgb(247,129,10)" fg:x="23487" fg:w="15"/><text x="54.7632%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (15 samples, 0.03%)</title><rect x="54.5132%" y="1093" width="0.0348%" height="15" fill="rgb(208,173,14)" fg:x="23487" fg:w="15"/><text x="54.7632%" y="1103.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (6 samples, 0.01%)</title><rect x="54.5341%" y="1077" width="0.0139%" height="15" fill="rgb(236,31,38)" fg:x="23496" fg:w="6"/><text x="54.7841%" y="1087.50"></text></g><g><title>bytecode_verifier::type_safety::materialize_type (5 samples, 0.01%)</title><rect x="54.5480%" y="1109" width="0.0116%" height="15" fill="rgb(232,65,17)" fg:x="23502" fg:w="5"/><text x="54.7980%" y="1119.50"></text></g><g><title>bytecode_verifier::type_safety::exists (24 samples, 0.06%)</title><rect x="54.5062%" y="1125" width="0.0557%" height="15" fill="rgb(224,45,49)" fg:x="23484" fg:w="24"/><text x="54.7562%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::move_to (6 samples, 0.01%)</title><rect x="54.5619%" y="1125" width="0.0139%" height="15" fill="rgb(225,2,53)" fg:x="23508" fg:w="6"/><text x="54.8119%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::type_fields_signature (5 samples, 0.01%)</title><rect x="54.5828%" y="1109" width="0.0116%" height="15" fill="rgb(248,210,53)" fg:x="23517" fg:w="5"/><text x="54.8328%" y="1119.50"></text></g><g><title>bytecode_verifier::type_safety::pack (11 samples, 0.03%)</title><rect x="54.5758%" y="1125" width="0.0255%" height="15" fill="rgb(211,1,30)" fg:x="23514" fg:w="11"/><text x="54.8258%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (6 samples, 0.01%)</title><rect x="54.6199%" y="1125" width="0.0139%" height="15" fill="rgb(224,96,15)" fg:x="23533" fg:w="6"/><text x="54.8699%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (6 samples, 0.01%)</title><rect x="54.6199%" y="1109" width="0.0139%" height="15" fill="rgb(252,45,11)" fg:x="23533" fg:w="6"/><text x="54.8699%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (5 samples, 0.01%)</title><rect x="54.6339%" y="1125" width="0.0116%" height="15" fill="rgb(220,125,38)" fg:x="23539" fg:w="5"/><text x="54.8839%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (6 samples, 0.01%)</title><rect x="54.6455%" y="1125" width="0.0139%" height="15" fill="rgb(243,161,33)" fg:x="23544" fg:w="6"/><text x="54.8955%" y="1135.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::field_instantiation_at (5 samples, 0.01%)</title><rect x="54.6687%" y="1125" width="0.0116%" height="15" fill="rgb(248,197,34)" fg:x="23554" fg:w="5"/><text x="54.9187%" y="1135.50"></text></g><g><title>move_binary_format::access::ModuleAccess::field_instantiation_at (5 samples, 0.01%)</title><rect x="54.6687%" y="1109" width="0.0116%" height="15" fill="rgb(228,165,23)" fg:x="23554" fg:w="5"/><text x="54.9187%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (5 samples, 0.01%)</title><rect x="54.6803%" y="1125" width="0.0116%" height="15" fill="rgb(236,94,38)" fg:x="23559" fg:w="5"/><text x="54.9303%" y="1135.50"></text></g><g><title>bytecode_verifier::type_safety::verify_instr (354 samples, 0.82%)</title><rect x="53.8842%" y="1141" width="0.8216%" height="15" fill="rgb(220,13,23)" fg:x="23216" fg:w="354"/><text x="54.1342%" y="1151.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module (10 samples, 0.02%)</title><rect x="54.7058%" y="1125" width="0.0232%" height="15" fill="rgb(234,26,39)" fg:x="23570" fg:w="10"/><text x="54.9558%" y="1135.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module_impl (10 samples, 0.02%)</title><rect x="54.7058%" y="1109" width="0.0232%" height="15" fill="rgb(205,117,44)" fg:x="23570" fg:w="10"/><text x="54.9558%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (7 samples, 0.02%)</title><rect x="54.7128%" y="1093" width="0.0162%" height="15" fill="rgb(250,42,2)" fg:x="23573" fg:w="7"/><text x="54.9628%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_address_identifiers (7 samples, 0.02%)</title><rect x="54.7313%" y="1093" width="0.0162%" height="15" fill="rgb(223,83,14)" fg:x="23581" fg:w="7"/><text x="54.9813%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (7 samples, 0.02%)</title><rect x="54.7313%" y="1077" width="0.0162%" height="15" fill="rgb(241,147,50)" fg:x="23581" fg:w="7"/><text x="54.9813%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.01%)</title><rect x="54.7337%" y="1061" width="0.0139%" height="15" fill="rgb(218,90,6)" fg:x="23582" fg:w="6"/><text x="54.9837%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="54.7337%" y="1045" width="0.0139%" height="15" fill="rgb(210,191,5)" fg:x="23582" fg:w="6"/><text x="54.9837%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="54.7337%" y="1029" width="0.0139%" height="15" fill="rgb(225,139,19)" fg:x="23582" fg:w="6"/><text x="54.9837%" y="1039.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (14 samples, 0.03%)</title><rect x="54.7569%" y="1061" width="0.0325%" height="15" fill="rgb(210,1,33)" fg:x="23592" fg:w="14"/><text x="55.0069%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="54.7569%" y="1045" width="0.0325%" height="15" fill="rgb(213,50,3)" fg:x="23592" fg:w="14"/><text x="55.0069%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="54.7592%" y="1029" width="0.0302%" height="15" fill="rgb(234,227,4)" fg:x="23593" fg:w="13"/><text x="55.0092%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.02%)</title><rect x="54.7731%" y="1013" width="0.0162%" height="15" fill="rgb(246,63,5)" fg:x="23599" fg:w="7"/><text x="55.0231%" y="1023.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_constants (19 samples, 0.04%)</title><rect x="54.7476%" y="1093" width="0.0441%" height="15" fill="rgb(245,136,27)" fg:x="23588" fg:w="19"/><text x="54.9976%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (19 samples, 0.04%)</title><rect x="54.7476%" y="1077" width="0.0441%" height="15" fill="rgb(247,199,27)" fg:x="23588" fg:w="19"/><text x="54.9976%" y="1087.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_field_instantiations (5 samples, 0.01%)</title><rect x="54.8010%" y="1093" width="0.0116%" height="15" fill="rgb(252,158,49)" fg:x="23611" fg:w="5"/><text x="55.0510%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (5 samples, 0.01%)</title><rect x="54.8335%" y="1077" width="0.0116%" height="15" fill="rgb(254,73,1)" fg:x="23625" fg:w="5"/><text x="55.0835%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="54.8335%" y="1061" width="0.0116%" height="15" fill="rgb(248,93,19)" fg:x="23625" fg:w="5"/><text x="55.0835%" y="1071.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions (18 samples, 0.04%)</title><rect x="54.8126%" y="1093" width="0.0418%" height="15" fill="rgb(206,67,5)" fg:x="23616" fg:w="18"/><text x="55.0626%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="54.8590%" y="1061" width="0.0116%" height="15" fill="rgb(209,210,4)" fg:x="23636" fg:w="5"/><text x="55.1090%" y="1071.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.02%)</title><rect x="54.8752%" y="1013" width="0.0162%" height="15" fill="rgb(214,185,36)" fg:x="23643" fg:w="7"/><text x="55.1252%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.01%)</title><rect x="54.9101%" y="997" width="0.0139%" height="15" fill="rgb(233,191,26)" fg:x="23658" fg:w="6"/><text x="55.1601%" y="1007.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (32 samples, 0.07%)</title><rect x="54.8544%" y="1077" width="0.0743%" height="15" fill="rgb(248,94,17)" fg:x="23634" fg:w="32"/><text x="55.1044%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (25 samples, 0.06%)</title><rect x="54.8706%" y="1061" width="0.0580%" height="15" fill="rgb(250,64,4)" fg:x="23641" fg:w="25"/><text x="55.1206%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (24 samples, 0.06%)</title><rect x="54.8729%" y="1045" width="0.0557%" height="15" fill="rgb(218,41,53)" fg:x="23642" fg:w="24"/><text x="55.1229%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.06%)</title><rect x="54.8729%" y="1029" width="0.0557%" height="15" fill="rgb(251,176,28)" fg:x="23642" fg:w="24"/><text x="55.1229%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.03%)</title><rect x="54.8961%" y="1013" width="0.0325%" height="15" fill="rgb(247,22,9)" fg:x="23652" fg:w="14"/><text x="55.1461%" y="1023.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_handles (33 samples, 0.08%)</title><rect x="54.8544%" y="1093" width="0.0766%" height="15" fill="rgb(218,201,14)" fg:x="23634" fg:w="33"/><text x="55.1044%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_instantiations (14 samples, 0.03%)</title><rect x="54.9310%" y="1093" width="0.0325%" height="15" fill="rgb(218,94,10)" fg:x="23667" fg:w="14"/><text x="55.1810%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (14 samples, 0.03%)</title><rect x="54.9310%" y="1077" width="0.0325%" height="15" fill="rgb(222,183,52)" fg:x="23667" fg:w="14"/><text x="55.1810%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (9 samples, 0.02%)</title><rect x="54.9426%" y="1061" width="0.0209%" height="15" fill="rgb(242,140,25)" fg:x="23672" fg:w="9"/><text x="55.1926%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="54.9426%" y="1045" width="0.0209%" height="15" fill="rgb(235,197,38)" fg:x="23672" fg:w="9"/><text x="55.1926%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="54.9426%" y="1029" width="0.0209%" height="15" fill="rgb(237,136,15)" fg:x="23672" fg:w="9"/><text x="55.1926%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="54.9727%" y="949" width="0.0162%" height="15" fill="rgb(223,44,49)" fg:x="23685" fg:w="7"/><text x="55.2227%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.04%)</title><rect x="54.9727%" y="997" width="0.0371%" height="15" fill="rgb(227,71,15)" fg:x="23685" fg:w="16"/><text x="55.2227%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.04%)</title><rect x="54.9727%" y="981" width="0.0371%" height="15" fill="rgb(225,153,20)" fg:x="23685" fg:w="16"/><text x="55.2227%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.04%)</title><rect x="54.9727%" y="965" width="0.0371%" height="15" fill="rgb(210,190,26)" fg:x="23685" fg:w="16"/><text x="55.2227%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.02%)</title><rect x="54.9890%" y="949" width="0.0209%" height="15" fill="rgb(223,147,5)" fg:x="23692" fg:w="9"/><text x="55.2390%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="55.0215%" y="933" width="0.0302%" height="15" fill="rgb(207,14,23)" fg:x="23706" fg:w="13"/><text x="55.2715%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.0261%" y="917" width="0.0255%" height="15" fill="rgb(211,195,53)" fg:x="23708" fg:w="11"/><text x="55.2761%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.0261%" y="901" width="0.0255%" height="15" fill="rgb(237,75,46)" fg:x="23708" fg:w="11"/><text x="55.2761%" y="911.50"></text></g><g><title>hashbrown::map::make_insert_hash (37 samples, 0.09%)</title><rect x="54.9727%" y="1013" width="0.0859%" height="15" fill="rgb(254,55,14)" fg:x="23685" fg:w="37"/><text x="55.2227%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.04%)</title><rect x="55.0168%" y="997" width="0.0418%" height="15" fill="rgb(230,185,30)" fg:x="23704" fg:w="18"/><text x="55.2668%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (18 samples, 0.04%)</title><rect x="55.0168%" y="981" width="0.0418%" height="15" fill="rgb(220,14,11)" fg:x="23704" fg:w="18"/><text x="55.2668%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (18 samples, 0.04%)</title><rect x="55.0168%" y="965" width="0.0418%" height="15" fill="rgb(215,169,44)" fg:x="23704" fg:w="18"/><text x="55.2668%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.04%)</title><rect x="55.0191%" y="949" width="0.0395%" height="15" fill="rgb(253,203,20)" fg:x="23705" fg:w="17"/><text x="55.2691%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.01%)</title><rect x="55.0586%" y="1013" width="0.0116%" height="15" fill="rgb(229,225,17)" fg:x="23722" fg:w="5"/><text x="55.3086%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="55.0586%" y="997" width="0.0116%" height="15" fill="rgb(236,76,26)" fg:x="23722" fg:w="5"/><text x="55.3086%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (7 samples, 0.02%)</title><rect x="55.0888%" y="997" width="0.0162%" height="15" fill="rgb(234,15,30)" fg:x="23735" fg:w="7"/><text x="55.3388%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.01%)</title><rect x="55.1073%" y="965" width="0.0116%" height="15" fill="rgb(211,113,48)" fg:x="23743" fg:w="5"/><text x="55.3573%" y="975.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (68 samples, 0.16%)</title><rect x="54.9634%" y="1093" width="0.1578%" height="15" fill="rgb(221,31,36)" fg:x="23681" fg:w="68"/><text x="55.2134%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (68 samples, 0.16%)</title><rect x="54.9634%" y="1077" width="0.1578%" height="15" fill="rgb(215,118,52)" fg:x="23681" fg:w="68"/><text x="55.2134%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (65 samples, 0.15%)</title><rect x="54.9704%" y="1061" width="0.1509%" height="15" fill="rgb(241,151,27)" fg:x="23684" fg:w="65"/><text x="55.2204%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (65 samples, 0.15%)</title><rect x="54.9704%" y="1045" width="0.1509%" height="15" fill="rgb(253,51,3)" fg:x="23684" fg:w="65"/><text x="55.2204%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.15%)</title><rect x="54.9704%" y="1029" width="0.1509%" height="15" fill="rgb(216,201,24)" fg:x="23684" fg:w="65"/><text x="55.2204%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.05%)</title><rect x="55.0702%" y="1013" width="0.0511%" height="15" fill="rgb(231,107,4)" fg:x="23727" fg:w="22"/><text x="55.3202%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (7 samples, 0.02%)</title><rect x="55.1050%" y="997" width="0.0162%" height="15" fill="rgb(243,97,54)" fg:x="23742" fg:w="7"/><text x="55.3550%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (6 samples, 0.01%)</title><rect x="55.1073%" y="981" width="0.0139%" height="15" fill="rgb(221,32,51)" fg:x="23743" fg:w="6"/><text x="55.3573%" y="991.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_module_handles (13 samples, 0.03%)</title><rect x="55.1213%" y="1093" width="0.0302%" height="15" fill="rgb(218,171,35)" fg:x="23749" fg:w="13"/><text x="55.3713%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (12 samples, 0.03%)</title><rect x="55.1236%" y="1077" width="0.0279%" height="15" fill="rgb(214,20,53)" fg:x="23750" fg:w="12"/><text x="55.3736%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.02%)</title><rect x="55.1329%" y="1061" width="0.0186%" height="15" fill="rgb(239,9,52)" fg:x="23754" fg:w="8"/><text x="55.3829%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="55.1329%" y="1045" width="0.0186%" height="15" fill="rgb(215,114,45)" fg:x="23754" fg:w="8"/><text x="55.3829%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="55.1329%" y="1029" width="0.0186%" height="15" fill="rgb(208,118,9)" fg:x="23754" fg:w="8"/><text x="55.3829%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.01%)</title><rect x="55.1375%" y="1013" width="0.0139%" height="15" fill="rgb(235,7,39)" fg:x="23756" fg:w="6"/><text x="55.3875%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="55.1677%" y="997" width="0.0209%" height="15" fill="rgb(243,225,15)" fg:x="23769" fg:w="9"/><text x="55.4177%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="55.1677%" y="981" width="0.0209%" height="15" fill="rgb(225,216,18)" fg:x="23769" fg:w="9"/><text x="55.4177%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="55.1677%" y="965" width="0.0209%" height="15" fill="rgb(233,36,38)" fg:x="23769" fg:w="9"/><text x="55.4177%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.02%)</title><rect x="55.1723%" y="949" width="0.0162%" height="15" fill="rgb(239,88,23)" fg:x="23771" fg:w="7"/><text x="55.4223%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.05%)</title><rect x="55.1677%" y="1013" width="0.0464%" height="15" fill="rgb(219,181,35)" fg:x="23769" fg:w="20"/><text x="55.4177%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.02%)</title><rect x="55.1932%" y="997" width="0.0209%" height="15" fill="rgb(215,18,46)" fg:x="23780" fg:w="9"/><text x="55.4432%" y="1007.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="55.1932%" y="981" width="0.0209%" height="15" fill="rgb(241,38,11)" fg:x="23780" fg:w="9"/><text x="55.4432%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="55.1932%" y="965" width="0.0209%" height="15" fill="rgb(248,169,45)" fg:x="23780" fg:w="9"/><text x="55.4432%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.01%)</title><rect x="55.2025%" y="949" width="0.0116%" height="15" fill="rgb(239,50,49)" fg:x="23784" fg:w="5"/><text x="55.4525%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.01%)</title><rect x="55.2373%" y="997" width="0.0116%" height="15" fill="rgb(231,96,31)" fg:x="23799" fg:w="5"/><text x="55.4873%" y="1007.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (37 samples, 0.09%)</title><rect x="55.1654%" y="1061" width="0.0859%" height="15" fill="rgb(224,193,37)" fg:x="23768" fg:w="37"/><text x="55.4154%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (37 samples, 0.09%)</title><rect x="55.1654%" y="1045" width="0.0859%" height="15" fill="rgb(227,153,50)" fg:x="23768" fg:w="37"/><text x="55.4154%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.09%)</title><rect x="55.1654%" y="1029" width="0.0859%" height="15" fill="rgb(249,228,3)" fg:x="23768" fg:w="37"/><text x="55.4154%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.03%)</title><rect x="55.2211%" y="1013" width="0.0302%" height="15" fill="rgb(219,164,43)" fg:x="23792" fg:w="13"/><text x="55.4711%" y="1023.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_signatures (44 samples, 0.10%)</title><rect x="55.1514%" y="1093" width="0.1021%" height="15" fill="rgb(216,45,41)" fg:x="23762" fg:w="44"/><text x="55.4014%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (44 samples, 0.10%)</title><rect x="55.1514%" y="1077" width="0.1021%" height="15" fill="rgb(210,226,51)" fg:x="23762" fg:w="44"/><text x="55.4014%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.02%)</title><rect x="55.2582%" y="1061" width="0.0162%" height="15" fill="rgb(209,117,49)" fg:x="23808" fg:w="7"/><text x="55.5082%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="55.2582%" y="1045" width="0.0162%" height="15" fill="rgb(206,196,24)" fg:x="23808" fg:w="7"/><text x="55.5082%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="55.2582%" y="1029" width="0.0162%" height="15" fill="rgb(253,218,3)" fg:x="23808" fg:w="7"/><text x="55.5082%" y="1039.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_handles (9 samples, 0.02%)</title><rect x="55.2559%" y="1093" width="0.0209%" height="15" fill="rgb(252,166,2)" fg:x="23807" fg:w="9"/><text x="55.5059%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (9 samples, 0.02%)</title><rect x="55.2559%" y="1077" width="0.0209%" height="15" fill="rgb(236,218,26)" fg:x="23807" fg:w="9"/><text x="55.5059%" y="1087.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module (241 samples, 0.56%)</title><rect x="54.7290%" y="1125" width="0.5594%" height="15" fill="rgb(254,84,19)" fg:x="23580" fg:w="241"/><text x="54.9790%" y="1135.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (241 samples, 0.56%)</title><rect x="54.7290%" y="1109" width="0.5594%" height="15" fill="rgb(219,137,29)" fg:x="23580" fg:w="241"/><text x="54.9790%" y="1119.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_instantiations (5 samples, 0.01%)</title><rect x="55.2768%" y="1093" width="0.0116%" height="15" fill="rgb(227,47,52)" fg:x="23816" fg:w="5"/><text x="55.5268%" y="1103.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (5 samples, 0.01%)</title><rect x="55.2768%" y="1077" width="0.0116%" height="15" fill="rgb(229,167,24)" fg:x="23816" fg:w="5"/><text x="55.5268%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="55.3371%" y="1061" width="0.0116%" height="15" fill="rgb(233,164,1)" fg:x="23842" fg:w="5"/><text x="55.5871%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.01%)</title><rect x="55.3371%" y="1045" width="0.0116%" height="15" fill="rgb(218,88,48)" fg:x="23842" fg:w="5"/><text x="55.5871%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="55.3255%" y="1077" width="0.0464%" height="15" fill="rgb(226,214,24)" fg:x="23837" fg:w="20"/><text x="55.5755%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="55.3487%" y="1061" width="0.0232%" height="15" fill="rgb(233,29,12)" fg:x="23847" fg:w="10"/><text x="55.5987%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="55.3998%" y="1061" width="0.0116%" height="15" fill="rgb(219,120,34)" fg:x="23869" fg:w="5"/><text x="55.6498%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="55.3998%" y="1045" width="0.0116%" height="15" fill="rgb(226,78,44)" fg:x="23869" fg:w="5"/><text x="55.6498%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="55.4114%" y="1045" width="0.0232%" height="15" fill="rgb(240,15,48)" fg:x="23874" fg:w="10"/><text x="55.6614%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (9 samples, 0.02%)</title><rect x="55.4137%" y="1029" width="0.0209%" height="15" fill="rgb(253,176,7)" fg:x="23875" fg:w="9"/><text x="55.6637%" y="1039.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="55.4137%" y="1013" width="0.0209%" height="15" fill="rgb(206,166,28)" fg:x="23875" fg:w="9"/><text x="55.6637%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (9 samples, 0.02%)</title><rect x="55.4137%" y="997" width="0.0209%" height="15" fill="rgb(241,53,51)" fg:x="23875" fg:w="9"/><text x="55.6637%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (8 samples, 0.02%)</title><rect x="55.4160%" y="981" width="0.0186%" height="15" fill="rgb(249,112,30)" fg:x="23876" fg:w="8"/><text x="55.6660%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="55.4114%" y="1061" width="0.0279%" height="15" fill="rgb(217,85,30)" fg:x="23874" fg:w="12"/><text x="55.6614%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.01%)</title><rect x="55.4625%" y="1045" width="0.0139%" height="15" fill="rgb(233,49,7)" fg:x="23896" fg:w="6"/><text x="55.7125%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.07%)</title><rect x="55.4439%" y="1061" width="0.0696%" height="15" fill="rgb(234,109,9)" fg:x="23888" fg:w="30"/><text x="55.6939%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="55.4764%" y="1045" width="0.0371%" height="15" fill="rgb(253,95,22)" fg:x="23902" fg:w="16"/><text x="55.7264%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.01%)</title><rect x="55.5135%" y="1061" width="0.0139%" height="15" fill="rgb(233,176,25)" fg:x="23918" fg:w="6"/><text x="55.7635%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="55.5135%" y="1045" width="0.0139%" height="15" fill="rgb(236,33,39)" fg:x="23918" fg:w="6"/><text x="55.7635%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="55.5274%" y="1061" width="0.0209%" height="15" fill="rgb(223,226,42)" fg:x="23924" fg:w="9"/><text x="55.7774%" y="1071.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::append (9 samples, 0.02%)</title><rect x="55.5971%" y="1029" width="0.0209%" height="15" fill="rgb(216,99,33)" fg:x="23954" fg:w="9"/><text x="55.8471%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (8 samples, 0.02%)</title><rect x="55.5994%" y="1013" width="0.0186%" height="15" fill="rgb(235,84,23)" fg:x="23955" fg:w="8"/><text x="55.8494%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (9 samples, 0.02%)</title><rect x="55.6296%" y="821" width="0.0209%" height="15" fill="rgb(232,2,27)" fg:x="23968" fg:w="9"/><text x="55.8796%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="55.6365%" y="805" width="0.0139%" height="15" fill="rgb(241,23,22)" fg:x="23971" fg:w="6"/><text x="55.8865%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.01%)</title><rect x="55.6365%" y="789" width="0.0139%" height="15" fill="rgb(211,73,27)" fg:x="23971" fg:w="6"/><text x="55.8865%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.01%)</title><rect x="55.6365%" y="773" width="0.0139%" height="15" fill="rgb(235,109,49)" fg:x="23971" fg:w="6"/><text x="55.8865%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.03%)</title><rect x="55.6272%" y="981" width="0.0348%" height="15" fill="rgb(230,99,29)" fg:x="23967" fg:w="15"/><text x="55.8772%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.03%)</title><rect x="55.6272%" y="965" width="0.0348%" height="15" fill="rgb(245,199,7)" fg:x="23967" fg:w="15"/><text x="55.8772%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="55.6272%" y="949" width="0.0348%" height="15" fill="rgb(217,179,10)" fg:x="23967" fg:w="15"/><text x="55.8772%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="55.6272%" y="933" width="0.0348%" height="15" fill="rgb(254,99,47)" fg:x="23967" fg:w="15"/><text x="55.8772%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="55.6272%" y="917" width="0.0348%" height="15" fill="rgb(251,121,7)" fg:x="23967" fg:w="15"/><text x="55.8772%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14 samples, 0.03%)</title><rect x="55.6296%" y="901" width="0.0325%" height="15" fill="rgb(250,177,26)" fg:x="23968" fg:w="14"/><text x="55.8796%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14 samples, 0.03%)</title><rect x="55.6296%" y="885" width="0.0325%" height="15" fill="rgb(232,88,15)" fg:x="23968" fg:w="14"/><text x="55.8796%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (14 samples, 0.03%)</title><rect x="55.6296%" y="869" width="0.0325%" height="15" fill="rgb(251,54,54)" fg:x="23968" fg:w="14"/><text x="55.8796%" y="879.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (14 samples, 0.03%)</title><rect x="55.6296%" y="853" width="0.0325%" height="15" fill="rgb(208,177,15)" fg:x="23968" fg:w="14"/><text x="55.8796%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (14 samples, 0.03%)</title><rect x="55.6296%" y="837" width="0.0325%" height="15" fill="rgb(205,97,32)" fg:x="23968" fg:w="14"/><text x="55.8796%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="55.6505%" y="821" width="0.0116%" height="15" fill="rgb(217,192,13)" fg:x="23977" fg:w="5"/><text x="55.9005%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="55.6505%" y="805" width="0.0116%" height="15" fill="rgb(215,163,41)" fg:x="23977" fg:w="5"/><text x="55.9005%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (5 samples, 0.01%)</title><rect x="55.6505%" y="789" width="0.0116%" height="15" fill="rgb(246,83,29)" fg:x="23977" fg:w="5"/><text x="55.9005%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (5 samples, 0.01%)</title><rect x="55.6505%" y="773" width="0.0116%" height="15" fill="rgb(219,2,45)" fg:x="23977" fg:w="5"/><text x="55.9005%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.04%)</title><rect x="55.6272%" y="1013" width="0.0371%" height="15" fill="rgb(242,215,33)" fg:x="23967" fg:w="16"/><text x="55.8772%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.04%)</title><rect x="55.6272%" y="997" width="0.0371%" height="15" fill="rgb(217,1,6)" fg:x="23967" fg:w="16"/><text x="55.8772%" y="1007.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::function_acquired_resources (26 samples, 0.06%)</title><rect x="55.6226%" y="1029" width="0.0603%" height="15" fill="rgb(207,85,52)" fg:x="23965" fg:w="26"/><text x="55.8726%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="55.6667%" y="1013" width="0.0162%" height="15" fill="rgb(231,171,19)" fg:x="23984" fg:w="7"/><text x="55.9167%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.02%)</title><rect x="55.6667%" y="997" width="0.0162%" height="15" fill="rgb(207,128,4)" fg:x="23984" fg:w="7"/><text x="55.9167%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="55.6667%" y="981" width="0.0162%" height="15" fill="rgb(219,208,4)" fg:x="23984" fg:w="7"/><text x="55.9167%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="55.6713%" y="965" width="0.0116%" height="15" fill="rgb(235,161,42)" fg:x="23986" fg:w="5"/><text x="55.9213%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="55.6713%" y="949" width="0.0116%" height="15" fill="rgb(247,218,18)" fg:x="23986" fg:w="5"/><text x="55.9213%" y="959.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::call_acquire (58 samples, 0.13%)</title><rect x="55.5762%" y="1045" width="0.1346%" height="15" fill="rgb(232,114,51)" fg:x="23945" fg:w="58"/><text x="55.8262%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (9 samples, 0.02%)</title><rect x="55.6899%" y="1029" width="0.0209%" height="15" fill="rgb(222,95,3)" fg:x="23994" fg:w="9"/><text x="55.9399%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="55.6969%" y="1013" width="0.0139%" height="15" fill="rgb(240,65,29)" fg:x="23997" fg:w="6"/><text x="55.9469%" y="1023.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (5 samples, 0.01%)</title><rect x="55.7108%" y="1029" width="0.0116%" height="15" fill="rgb(249,209,20)" fg:x="24003" fg:w="5"/><text x="55.9608%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="55.7108%" y="1013" width="0.0116%" height="15" fill="rgb(241,48,37)" fg:x="24003" fg:w="5"/><text x="55.9608%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="55.7108%" y="997" width="0.0116%" height="15" fill="rgb(230,140,42)" fg:x="24003" fg:w="5"/><text x="55.9608%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (6 samples, 0.01%)</title><rect x="55.7224%" y="997" width="0.0139%" height="15" fill="rgb(230,176,45)" fg:x="24008" fg:w="6"/><text x="55.9724%" y="1007.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::struct_acquire (15 samples, 0.03%)</title><rect x="55.7108%" y="1045" width="0.0348%" height="15" fill="rgb(245,112,21)" fg:x="24003" fg:w="15"/><text x="55.9608%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (10 samples, 0.02%)</title><rect x="55.7224%" y="1029" width="0.0232%" height="15" fill="rgb(207,183,35)" fg:x="24008" fg:w="10"/><text x="55.9724%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="55.7224%" y="1013" width="0.0232%" height="15" fill="rgb(227,44,33)" fg:x="24008" fg:w="10"/><text x="55.9724%" y="1023.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify_instruction (86 samples, 0.20%)</title><rect x="55.5576%" y="1061" width="0.1996%" height="15" fill="rgb(246,120,21)" fg:x="23937" fg:w="86"/><text x="55.8076%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (5 samples, 0.01%)</title><rect x="55.7781%" y="853" width="0.0116%" height="15" fill="rgb(235,57,52)" fg:x="24032" fg:w="5"/><text x="56.0281%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (5 samples, 0.01%)</title><rect x="55.7781%" y="837" width="0.0116%" height="15" fill="rgb(238,84,10)" fg:x="24032" fg:w="5"/><text x="56.0281%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (15 samples, 0.03%)</title><rect x="55.7758%" y="869" width="0.0348%" height="15" fill="rgb(251,200,32)" fg:x="24031" fg:w="15"/><text x="56.0258%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="55.7897%" y="853" width="0.0209%" height="15" fill="rgb(247,159,13)" fg:x="24037" fg:w="9"/><text x="56.0397%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.02%)</title><rect x="55.7897%" y="837" width="0.0209%" height="15" fill="rgb(238,64,4)" fg:x="24037" fg:w="9"/><text x="56.0397%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.02%)</title><rect x="55.7897%" y="821" width="0.0209%" height="15" fill="rgb(221,131,51)" fg:x="24037" fg:w="9"/><text x="56.0397%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.07%)</title><rect x="55.7642%" y="1061" width="0.0673%" height="15" fill="rgb(242,5,29)" fg:x="24026" fg:w="29"/><text x="56.0142%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.07%)</title><rect x="55.7642%" y="1045" width="0.0673%" height="15" fill="rgb(214,130,32)" fg:x="24026" fg:w="29"/><text x="56.0142%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (28 samples, 0.06%)</title><rect x="55.7665%" y="1029" width="0.0650%" height="15" fill="rgb(244,210,16)" fg:x="24027" fg:w="28"/><text x="56.0165%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 0.06%)</title><rect x="55.7665%" y="1013" width="0.0650%" height="15" fill="rgb(234,48,26)" fg:x="24027" fg:w="28"/><text x="56.0165%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.06%)</title><rect x="55.7688%" y="997" width="0.0627%" height="15" fill="rgb(231,82,38)" fg:x="24028" fg:w="27"/><text x="56.0188%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.06%)</title><rect x="55.7688%" y="981" width="0.0627%" height="15" fill="rgb(254,128,41)" fg:x="24028" fg:w="27"/><text x="56.0188%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.06%)</title><rect x="55.7712%" y="965" width="0.0603%" height="15" fill="rgb(212,73,49)" fg:x="24029" fg:w="26"/><text x="56.0212%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (25 samples, 0.06%)</title><rect x="55.7735%" y="949" width="0.0580%" height="15" fill="rgb(205,62,54)" fg:x="24030" fg:w="25"/><text x="56.0235%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (25 samples, 0.06%)</title><rect x="55.7735%" y="933" width="0.0580%" height="15" fill="rgb(228,0,8)" fg:x="24030" fg:w="25"/><text x="56.0235%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (25 samples, 0.06%)</title><rect x="55.7735%" y="917" width="0.0580%" height="15" fill="rgb(251,28,17)" fg:x="24030" fg:w="25"/><text x="56.0235%" y="927.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (25 samples, 0.06%)</title><rect x="55.7735%" y="901" width="0.0580%" height="15" fill="rgb(238,105,27)" fg:x="24030" fg:w="25"/><text x="56.0235%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (25 samples, 0.06%)</title><rect x="55.7735%" y="885" width="0.0580%" height="15" fill="rgb(237,216,33)" fg:x="24030" fg:w="25"/><text x="56.0235%" y="895.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="55.8106%" y="869" width="0.0209%" height="15" fill="rgb(229,228,25)" fg:x="24046" fg:w="9"/><text x="56.0606%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.02%)</title><rect x="55.8129%" y="853" width="0.0186%" height="15" fill="rgb(233,75,23)" fg:x="24047" fg:w="8"/><text x="56.0629%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (7 samples, 0.02%)</title><rect x="55.8152%" y="837" width="0.0162%" height="15" fill="rgb(231,207,16)" fg:x="24048" fg:w="7"/><text x="56.0652%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (7 samples, 0.02%)</title><rect x="55.8152%" y="821" width="0.0162%" height="15" fill="rgb(231,191,45)" fg:x="24048" fg:w="7"/><text x="56.0652%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (6 samples, 0.01%)</title><rect x="55.8385%" y="1061" width="0.0139%" height="15" fill="rgb(224,133,17)" fg:x="24058" fg:w="6"/><text x="56.0885%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (6 samples, 0.01%)</title><rect x="55.8385%" y="1045" width="0.0139%" height="15" fill="rgb(209,178,27)" fg:x="24058" fg:w="6"/><text x="56.0885%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="55.8385%" y="1029" width="0.0139%" height="15" fill="rgb(218,37,11)" fg:x="24058" fg:w="6"/><text x="56.0885%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (5 samples, 0.01%)</title><rect x="55.8408%" y="1013" width="0.0116%" height="15" fill="rgb(251,226,25)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="55.8408%" y="997" width="0.0116%" height="15" fill="rgb(209,222,27)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (5 samples, 0.01%)</title><rect x="55.8408%" y="981" width="0.0116%" height="15" fill="rgb(238,22,21)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.01%)</title><rect x="55.8408%" y="965" width="0.0116%" height="15" fill="rgb(233,161,25)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="55.8408%" y="949" width="0.0116%" height="15" fill="rgb(226,122,53)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="55.8408%" y="933" width="0.0116%" height="15" fill="rgb(220,123,17)" fg:x="24059" fg:w="5"/><text x="56.0908%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (8 samples, 0.02%)</title><rect x="55.8524%" y="1061" width="0.0186%" height="15" fill="rgb(230,224,35)" fg:x="24064" fg:w="8"/><text x="56.1024%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (8 samples, 0.02%)</title><rect x="55.8524%" y="1045" width="0.0186%" height="15" fill="rgb(246,83,8)" fg:x="24064" fg:w="8"/><text x="56.1024%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="55.8524%" y="1029" width="0.0186%" height="15" fill="rgb(230,214,17)" fg:x="24064" fg:w="8"/><text x="56.1024%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (6 samples, 0.01%)</title><rect x="55.8570%" y="1013" width="0.0139%" height="15" fill="rgb(222,97,18)" fg:x="24066" fg:w="6"/><text x="56.1070%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="55.8570%" y="997" width="0.0139%" height="15" fill="rgb(206,79,1)" fg:x="24066" fg:w="6"/><text x="56.1070%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (6 samples, 0.01%)</title><rect x="55.8570%" y="981" width="0.0139%" height="15" fill="rgb(214,121,34)" fg:x="24066" fg:w="6"/><text x="56.1070%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (6 samples, 0.01%)</title><rect x="55.8570%" y="965" width="0.0139%" height="15" fill="rgb(249,199,46)" fg:x="24066" fg:w="6"/><text x="56.1070%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (6 samples, 0.01%)</title><rect x="55.8570%" y="949" width="0.0139%" height="15" fill="rgb(214,222,46)" fg:x="24066" fg:w="6"/><text x="56.1070%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.01%)</title><rect x="55.8710%" y="981" width="0.0116%" height="15" fill="rgb(248,168,30)" fg:x="24072" fg:w="5"/><text x="56.1210%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition&gt;&gt; (7 samples, 0.02%)</title><rect x="55.8710%" y="1061" width="0.0162%" height="15" fill="rgb(226,14,28)" fg:x="24072" fg:w="7"/><text x="56.1210%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition,std::collections::hash::map::RandomState&gt;&gt; (7 samples, 0.02%)</title><rect x="55.8710%" y="1045" width="0.0162%" height="15" fill="rgb(253,123,1)" fg:x="24072" fg:w="7"/><text x="56.1210%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition)&gt;&gt; (7 samples, 0.02%)</title><rect x="55.8710%" y="1029" width="0.0162%" height="15" fill="rgb(225,24,42)" fg:x="24072" fg:w="7"/><text x="56.1210%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="55.8710%" y="1013" width="0.0162%" height="15" fill="rgb(216,161,37)" fg:x="24072" fg:w="7"/><text x="56.1210%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (7 samples, 0.02%)</title><rect x="55.8710%" y="997" width="0.0162%" height="15" fill="rgb(251,164,26)" fg:x="24072" fg:w="7"/><text x="56.1210%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="55.8872%" y="1061" width="0.0116%" height="15" fill="rgb(219,177,3)" fg:x="24079" fg:w="5"/><text x="56.1372%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="55.9754%" y="885" width="0.0116%" height="15" fill="rgb(222,65,0)" fg:x="24117" fg:w="5"/><text x="56.2254%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="55.9754%" y="901" width="0.0162%" height="15" fill="rgb(223,69,54)" fg:x="24117" fg:w="7"/><text x="56.2254%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.06%)</title><rect x="55.9383%" y="965" width="0.0580%" height="15" fill="rgb(235,30,27)" fg:x="24101" fg:w="25"/><text x="56.1883%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.06%)</title><rect x="55.9406%" y="949" width="0.0557%" height="15" fill="rgb(220,183,50)" fg:x="24102" fg:w="24"/><text x="56.1906%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.05%)</title><rect x="55.9429%" y="933" width="0.0534%" height="15" fill="rgb(248,198,15)" fg:x="24103" fg:w="23"/><text x="56.1929%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.04%)</title><rect x="55.9568%" y="917" width="0.0395%" height="15" fill="rgb(222,211,4)" fg:x="24109" fg:w="17"/><text x="56.2068%" y="927.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (30 samples, 0.07%)</title><rect x="55.9313%" y="1013" width="0.0696%" height="15" fill="rgb(214,102,34)" fg:x="24098" fg:w="30"/><text x="56.1813%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (30 samples, 0.07%)</title><rect x="55.9313%" y="997" width="0.0696%" height="15" fill="rgb(245,92,5)" fg:x="24098" fg:w="30"/><text x="56.1813%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u16 (30 samples, 0.07%)</title><rect x="55.9313%" y="981" width="0.0696%" height="15" fill="rgb(252,72,51)" fg:x="24098" fg:w="30"/><text x="56.1813%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="56.0334%" y="949" width="0.0186%" height="15" fill="rgb(252,208,19)" fg:x="24142" fg:w="8"/><text x="56.2834%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.04%)</title><rect x="56.0125%" y="965" width="0.0418%" height="15" fill="rgb(211,69,7)" fg:x="24133" fg:w="18"/><text x="56.2625%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.07%)</title><rect x="56.1147%" y="949" width="0.0673%" height="15" fill="rgb(211,27,16)" fg:x="24177" fg:w="29"/><text x="56.3647%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (81 samples, 0.19%)</title><rect x="56.0009%" y="1013" width="0.1880%" height="15" fill="rgb(219,216,14)" fg:x="24128" fg:w="81"/><text x="56.2509%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (81 samples, 0.19%)</title><rect x="56.0009%" y="997" width="0.1880%" height="15" fill="rgb(219,71,8)" fg:x="24128" fg:w="81"/><text x="56.2509%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (77 samples, 0.18%)</title><rect x="56.0102%" y="981" width="0.1787%" height="15" fill="rgb(223,170,53)" fg:x="24132" fg:w="77"/><text x="56.2602%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (58 samples, 0.13%)</title><rect x="56.0543%" y="965" width="0.1346%" height="15" fill="rgb(246,21,26)" fg:x="24151" fg:w="58"/><text x="56.3043%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (126 samples, 0.29%)</title><rect x="55.9313%" y="1029" width="0.2924%" height="15" fill="rgb(248,20,46)" fg:x="24098" fg:w="126"/><text x="56.1813%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.03%)</title><rect x="56.1889%" y="1013" width="0.0348%" height="15" fill="rgb(252,94,11)" fg:x="24209" fg:w="15"/><text x="56.4389%" y="1023.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.02%)</title><rect x="56.2029%" y="997" width="0.0209%" height="15" fill="rgb(236,163,8)" fg:x="24215" fg:w="9"/><text x="56.4529%" y="1007.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="56.2400%" y="997" width="0.0139%" height="15" fill="rgb(217,221,45)" fg:x="24231" fg:w="6"/><text x="56.4900%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="56.2702%" y="965" width="0.0116%" height="15" fill="rgb(238,38,17)" fg:x="24244" fg:w="5"/><text x="56.5202%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (8 samples, 0.02%)</title><rect x="56.3050%" y="933" width="0.0186%" height="15" fill="rgb(242,210,23)" fg:x="24259" fg:w="8"/><text x="56.5550%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="56.3235%" y="933" width="0.0255%" height="15" fill="rgb(250,86,53)" fg:x="24267" fg:w="11"/><text x="56.5735%" y="943.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="56.3352%" y="917" width="0.0139%" height="15" fill="rgb(223,168,25)" fg:x="24272" fg:w="6"/><text x="56.5852%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="56.2539%" y="981" width="0.1114%" height="15" fill="rgb(251,189,4)" fg:x="24237" fg:w="48"/><text x="56.5039%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (32 samples, 0.07%)</title><rect x="56.2911%" y="965" width="0.0743%" height="15" fill="rgb(245,19,28)" fg:x="24253" fg:w="32"/><text x="56.5411%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (31 samples, 0.07%)</title><rect x="56.2934%" y="949" width="0.0720%" height="15" fill="rgb(207,10,34)" fg:x="24254" fg:w="31"/><text x="56.5434%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.02%)</title><rect x="56.3491%" y="933" width="0.0162%" height="15" fill="rgb(235,153,31)" fg:x="24278" fg:w="7"/><text x="56.5991%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="56.3514%" y="917" width="0.0139%" height="15" fill="rgb(228,72,37)" fg:x="24279" fg:w="6"/><text x="56.6014%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.11%)</title><rect x="56.2539%" y="997" width="0.1137%" height="15" fill="rgb(215,15,16)" fg:x="24237" fg:w="49"/><text x="56.5039%" y="1007.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.02%)</title><rect x="56.4233%" y="949" width="0.0209%" height="15" fill="rgb(250,119,29)" fg:x="24310" fg:w="9"/><text x="56.6733%" y="959.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="56.4326%" y="933" width="0.0116%" height="15" fill="rgb(214,59,1)" fg:x="24314" fg:w="5"/><text x="56.6826%" y="943.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="56.4326%" y="917" width="0.0116%" height="15" fill="rgb(223,109,25)" fg:x="24314" fg:w="5"/><text x="56.6826%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="56.4442%" y="949" width="0.0139%" height="15" fill="rgb(230,198,22)" fg:x="24319" fg:w="6"/><text x="56.6942%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (12 samples, 0.03%)</title><rect x="56.4814%" y="933" width="0.0279%" height="15" fill="rgb(245,184,46)" fg:x="24335" fg:w="12"/><text x="56.7314%" y="943.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="56.4953%" y="917" width="0.0139%" height="15" fill="rgb(253,73,16)" fg:x="24341" fg:w="6"/><text x="56.7453%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="56.5092%" y="933" width="0.0255%" height="15" fill="rgb(206,94,45)" fg:x="24347" fg:w="11"/><text x="56.7592%" y="943.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.02%)</title><rect x="56.5185%" y="917" width="0.0162%" height="15" fill="rgb(236,83,27)" fg:x="24351" fg:w="7"/><text x="56.7685%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (146 samples, 0.34%)</title><rect x="56.2237%" y="1029" width="0.3389%" height="15" fill="rgb(220,196,8)" fg:x="24224" fg:w="146"/><text x="56.4737%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (145 samples, 0.34%)</title><rect x="56.2261%" y="1013" width="0.3365%" height="15" fill="rgb(254,185,14)" fg:x="24225" fg:w="145"/><text x="56.4761%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (81 samples, 0.19%)</title><rect x="56.3746%" y="997" width="0.1880%" height="15" fill="rgb(226,50,22)" fg:x="24289" fg:w="81"/><text x="56.6246%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (80 samples, 0.19%)</title><rect x="56.3769%" y="981" width="0.1857%" height="15" fill="rgb(253,147,0)" fg:x="24290" fg:w="80"/><text x="56.6269%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (76 samples, 0.18%)</title><rect x="56.3862%" y="965" width="0.1764%" height="15" fill="rgb(252,46,33)" fg:x="24294" fg:w="76"/><text x="56.6362%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (45 samples, 0.10%)</title><rect x="56.4582%" y="949" width="0.1044%" height="15" fill="rgb(242,22,54)" fg:x="24325" fg:w="45"/><text x="56.7082%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.03%)</title><rect x="56.5348%" y="933" width="0.0279%" height="15" fill="rgb(223,178,32)" fg:x="24358" fg:w="12"/><text x="56.7848%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.02%)</title><rect x="56.5464%" y="917" width="0.0162%" height="15" fill="rgb(214,106,53)" fg:x="24363" fg:w="7"/><text x="56.7964%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (7 samples, 0.02%)</title><rect x="56.5858%" y="1013" width="0.0162%" height="15" fill="rgb(232,65,50)" fg:x="24380" fg:w="7"/><text x="56.8358%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="56.6044%" y="997" width="0.0255%" height="15" fill="rgb(231,110,28)" fg:x="24388" fg:w="11"/><text x="56.8544%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="56.6160%" y="981" width="0.0139%" height="15" fill="rgb(216,71,40)" fg:x="24393" fg:w="6"/><text x="56.8660%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (15 samples, 0.03%)</title><rect x="56.6021%" y="1013" width="0.0348%" height="15" fill="rgb(229,89,53)" fg:x="24387" fg:w="15"/><text x="56.8521%" y="1023.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (9 samples, 0.02%)</title><rect x="56.7529%" y="901" width="0.0209%" height="15" fill="rgb(210,124,14)" fg:x="24452" fg:w="9"/><text x="57.0029%" y="911.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (7 samples, 0.02%)</title><rect x="56.7576%" y="885" width="0.0162%" height="15" fill="rgb(236,213,6)" fg:x="24454" fg:w="7"/><text x="57.0076%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.03%)</title><rect x="56.7483%" y="917" width="0.0302%" height="15" fill="rgb(228,41,5)" fg:x="24450" fg:w="13"/><text x="56.9983%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (20 samples, 0.05%)</title><rect x="56.7367%" y="933" width="0.0464%" height="15" fill="rgb(221,167,25)" fg:x="24445" fg:w="20"/><text x="56.9867%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.01%)</title><rect x="56.7831%" y="933" width="0.0116%" height="15" fill="rgb(228,144,37)" fg:x="24465" fg:w="5"/><text x="57.0331%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.09%)</title><rect x="56.7088%" y="965" width="0.0928%" height="15" fill="rgb(227,189,38)" fg:x="24433" fg:w="40"/><text x="56.9588%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.09%)</title><rect x="56.7112%" y="949" width="0.0905%" height="15" fill="rgb(218,8,2)" fg:x="24434" fg:w="39"/><text x="56.9612%" y="959.50"></text></g><g><title>core::mem::swap (10 samples, 0.02%)</title><rect x="56.8063%" y="965" width="0.0232%" height="15" fill="rgb(209,61,28)" fg:x="24475" fg:w="10"/><text x="57.0563%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.02%)</title><rect x="56.8063%" y="949" width="0.0232%" height="15" fill="rgb(233,140,39)" fg:x="24475" fg:w="10"/><text x="57.0563%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping (10 samples, 0.02%)</title><rect x="56.8063%" y="933" width="0.0232%" height="15" fill="rgb(251,66,48)" fg:x="24475" fg:w="10"/><text x="57.0563%" y="943.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (7 samples, 0.02%)</title><rect x="56.8133%" y="917" width="0.0162%" height="15" fill="rgb(210,44,45)" fg:x="24478" fg:w="7"/><text x="57.0633%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (7 samples, 0.02%)</title><rect x="56.8295%" y="965" width="0.0162%" height="15" fill="rgb(214,136,46)" fg:x="24485" fg:w="7"/><text x="57.0795%" y="975.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="56.8295%" y="949" width="0.0162%" height="15" fill="rgb(207,130,50)" fg:x="24485" fg:w="7"/><text x="57.0795%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (7 samples, 0.02%)</title><rect x="56.8295%" y="933" width="0.0162%" height="15" fill="rgb(228,102,49)" fg:x="24485" fg:w="7"/><text x="57.0795%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.01%)</title><rect x="56.8318%" y="917" width="0.0139%" height="15" fill="rgb(253,55,1)" fg:x="24486" fg:w="6"/><text x="57.0818%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.05%)</title><rect x="56.8690%" y="885" width="0.0464%" height="15" fill="rgb(238,222,9)" fg:x="24502" fg:w="20"/><text x="57.1190%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="56.8713%" y="869" width="0.0441%" height="15" fill="rgb(246,99,6)" fg:x="24503" fg:w="19"/><text x="57.1213%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="56.8713%" y="853" width="0.0441%" height="15" fill="rgb(219,110,26)" fg:x="24503" fg:w="19"/><text x="57.1213%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (14 samples, 0.03%)</title><rect x="56.8829%" y="837" width="0.0325%" height="15" fill="rgb(239,160,33)" fg:x="24508" fg:w="14"/><text x="57.1329%" y="847.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (26 samples, 0.06%)</title><rect x="56.8597%" y="933" width="0.0603%" height="15" fill="rgb(220,202,23)" fg:x="24498" fg:w="26"/><text x="57.1097%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (26 samples, 0.06%)</title><rect x="56.8597%" y="917" width="0.0603%" height="15" fill="rgb(208,80,26)" fg:x="24498" fg:w="26"/><text x="57.1097%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u16 (25 samples, 0.06%)</title><rect x="56.8620%" y="901" width="0.0580%" height="15" fill="rgb(243,85,7)" fg:x="24499" fg:w="25"/><text x="57.1120%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="56.9549%" y="869" width="0.0255%" height="15" fill="rgb(228,77,47)" fg:x="24539" fg:w="11"/><text x="57.2049%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (22 samples, 0.05%)</title><rect x="56.9316%" y="885" width="0.0511%" height="15" fill="rgb(212,226,8)" fg:x="24529" fg:w="22"/><text x="57.1816%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (37 samples, 0.09%)</title><rect x="57.0407%" y="869" width="0.0859%" height="15" fill="rgb(241,120,54)" fg:x="24576" fg:w="37"/><text x="57.2907%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (94 samples, 0.22%)</title><rect x="56.9200%" y="933" width="0.2182%" height="15" fill="rgb(226,80,16)" fg:x="24524" fg:w="94"/><text x="57.1700%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (94 samples, 0.22%)</title><rect x="56.9200%" y="917" width="0.2182%" height="15" fill="rgb(240,76,13)" fg:x="24524" fg:w="94"/><text x="57.1700%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (94 samples, 0.22%)</title><rect x="56.9200%" y="901" width="0.2182%" height="15" fill="rgb(252,74,8)" fg:x="24524" fg:w="94"/><text x="57.1700%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (67 samples, 0.16%)</title><rect x="56.9827%" y="885" width="0.1555%" height="15" fill="rgb(244,155,2)" fg:x="24551" fg:w="67"/><text x="57.2327%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.01%)</title><rect x="57.1266%" y="869" width="0.0116%" height="15" fill="rgb(215,81,35)" fg:x="24613" fg:w="5"/><text x="57.3766%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="57.1405%" y="917" width="0.0186%" height="15" fill="rgb(206,55,2)" fg:x="24619" fg:w="8"/><text x="57.3905%" y="927.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (146 samples, 0.34%)</title><rect x="56.8458%" y="965" width="0.3389%" height="15" fill="rgb(231,2,34)" fg:x="24492" fg:w="146"/><text x="57.0958%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (144 samples, 0.33%)</title><rect x="56.8504%" y="949" width="0.3342%" height="15" fill="rgb(242,176,48)" fg:x="24494" fg:w="144"/><text x="57.1004%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.05%)</title><rect x="57.1382%" y="933" width="0.0464%" height="15" fill="rgb(249,31,36)" fg:x="24618" fg:w="20"/><text x="57.3882%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.03%)</title><rect x="57.1591%" y="917" width="0.0255%" height="15" fill="rgb(205,18,17)" fg:x="24627" fg:w="11"/><text x="57.4091%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.01%)</title><rect x="57.1707%" y="901" width="0.0139%" height="15" fill="rgb(254,130,5)" fg:x="24632" fg:w="6"/><text x="57.4207%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="57.1846%" y="965" width="0.0139%" height="15" fill="rgb(229,42,45)" fg:x="24638" fg:w="6"/><text x="57.4346%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="57.1846%" y="949" width="0.0139%" height="15" fill="rgb(245,95,25)" fg:x="24638" fg:w="6"/><text x="57.4346%" y="959.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (7 samples, 0.02%)</title><rect x="57.2264%" y="901" width="0.0162%" height="15" fill="rgb(249,193,38)" fg:x="24656" fg:w="7"/><text x="57.4764%" y="911.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (8 samples, 0.02%)</title><rect x="57.2264%" y="917" width="0.0186%" height="15" fill="rgb(241,140,43)" fg:x="24656" fg:w="8"/><text x="57.4764%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.03%)</title><rect x="57.2218%" y="933" width="0.0302%" height="15" fill="rgb(245,78,48)" fg:x="24654" fg:w="13"/><text x="57.4718%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (24 samples, 0.06%)</title><rect x="57.1986%" y="965" width="0.0557%" height="15" fill="rgb(214,92,39)" fg:x="24644" fg:w="24"/><text x="57.4486%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (18 samples, 0.04%)</title><rect x="57.2125%" y="949" width="0.0418%" height="15" fill="rgb(211,189,14)" fg:x="24650" fg:w="18"/><text x="57.4625%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (15 samples, 0.03%)</title><rect x="57.2543%" y="965" width="0.0348%" height="15" fill="rgb(218,7,24)" fg:x="24668" fg:w="15"/><text x="57.5043%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="57.2635%" y="949" width="0.0255%" height="15" fill="rgb(224,200,49)" fg:x="24672" fg:w="11"/><text x="57.5135%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (7 samples, 0.02%)</title><rect x="57.2728%" y="933" width="0.0162%" height="15" fill="rgb(218,210,14)" fg:x="24676" fg:w="7"/><text x="57.5228%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.01%)</title><rect x="57.2752%" y="917" width="0.0139%" height="15" fill="rgb(234,142,31)" fg:x="24677" fg:w="6"/><text x="57.5252%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.02%)</title><rect x="57.2891%" y="949" width="0.0162%" height="15" fill="rgb(227,165,2)" fg:x="24683" fg:w="7"/><text x="57.5391%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.01%)</title><rect x="57.2937%" y="933" width="0.0116%" height="15" fill="rgb(232,44,46)" fg:x="24685" fg:w="5"/><text x="57.5437%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (13 samples, 0.03%)</title><rect x="57.2891%" y="965" width="0.0302%" height="15" fill="rgb(236,149,47)" fg:x="24683" fg:w="13"/><text x="57.5391%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (6 samples, 0.01%)</title><rect x="57.3053%" y="949" width="0.0139%" height="15" fill="rgb(227,45,31)" fg:x="24690" fg:w="6"/><text x="57.5553%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.02%)</title><rect x="57.3773%" y="933" width="0.0186%" height="15" fill="rgb(240,176,51)" fg:x="24721" fg:w="8"/><text x="57.6273%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (5 samples, 0.01%)</title><rect x="57.3842%" y="917" width="0.0116%" height="15" fill="rgb(249,146,41)" fg:x="24724" fg:w="5"/><text x="57.6342%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.02%)</title><rect x="57.3982%" y="933" width="0.0209%" height="15" fill="rgb(213,208,4)" fg:x="24730" fg:w="9"/><text x="57.6482%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.02%)</title><rect x="57.4005%" y="917" width="0.0186%" height="15" fill="rgb(245,84,36)" fg:x="24731" fg:w="8"/><text x="57.6505%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="57.4075%" y="901" width="0.0116%" height="15" fill="rgb(254,84,18)" fg:x="24734" fg:w="5"/><text x="57.6575%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (47 samples, 0.11%)</title><rect x="57.3355%" y="949" width="0.1091%" height="15" fill="rgb(225,38,54)" fg:x="24703" fg:w="47"/><text x="57.5855%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.03%)</title><rect x="57.4191%" y="933" width="0.0255%" height="15" fill="rgb(246,50,30)" fg:x="24739" fg:w="11"/><text x="57.6691%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.02%)</title><rect x="57.4237%" y="917" width="0.0209%" height="15" fill="rgb(246,148,9)" fg:x="24741" fg:w="9"/><text x="57.6737%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (6 samples, 0.01%)</title><rect x="57.4446%" y="933" width="0.0139%" height="15" fill="rgb(223,75,4)" fg:x="24750" fg:w="6"/><text x="57.6946%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (65 samples, 0.15%)</title><rect x="57.3193%" y="965" width="0.1509%" height="15" fill="rgb(239,148,41)" fg:x="24696" fg:w="65"/><text x="57.5693%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (11 samples, 0.03%)</title><rect x="57.4446%" y="949" width="0.0255%" height="15" fill="rgb(205,195,3)" fg:x="24750" fg:w="11"/><text x="57.6946%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.01%)</title><rect x="57.4585%" y="933" width="0.0116%" height="15" fill="rgb(254,161,1)" fg:x="24756" fg:w="5"/><text x="57.7085%" y="943.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="57.4585%" y="917" width="0.0116%" height="15" fill="rgb(211,229,8)" fg:x="24756" fg:w="5"/><text x="57.7085%" y="927.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (11 samples, 0.03%)</title><rect x="57.5328%" y="917" width="0.0255%" height="15" fill="rgb(220,97,9)" fg:x="24788" fg:w="11"/><text x="57.7828%" y="927.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="57.5606%" y="853" width="0.0209%" height="15" fill="rgb(240,218,8)" fg:x="24800" fg:w="9"/><text x="57.8106%" y="863.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="57.5606%" y="869" width="0.0232%" height="15" fill="rgb(250,44,0)" fg:x="24800" fg:w="10"/><text x="57.8106%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.03%)</title><rect x="57.5606%" y="901" width="0.0302%" height="15" fill="rgb(236,41,53)" fg:x="24800" fg:w="13"/><text x="57.8106%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.03%)</title><rect x="57.5606%" y="885" width="0.0302%" height="15" fill="rgb(218,227,13)" fg:x="24800" fg:w="13"/><text x="57.8106%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.04%)</title><rect x="57.5583%" y="917" width="0.0418%" height="15" fill="rgb(217,94,32)" fg:x="24799" fg:w="18"/><text x="57.8083%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (33 samples, 0.08%)</title><rect x="57.5258%" y="933" width="0.0766%" height="15" fill="rgb(213,217,12)" fg:x="24785" fg:w="33"/><text x="57.7758%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (54 samples, 0.13%)</title><rect x="57.4840%" y="949" width="0.1253%" height="15" fill="rgb(229,13,46)" fg:x="24767" fg:w="54"/><text x="57.7340%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (61 samples, 0.14%)</title><rect x="57.4701%" y="965" width="0.1416%" height="15" fill="rgb(243,139,5)" fg:x="24761" fg:w="61"/><text x="57.7201%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (425 samples, 0.99%)</title><rect x="56.6369%" y="1013" width="0.9864%" height="15" fill="rgb(249,38,45)" fg:x="24402" fg:w="425"/><text x="56.8869%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (424 samples, 0.98%)</title><rect x="56.6392%" y="997" width="0.9841%" height="15" fill="rgb(216,70,11)" fg:x="24403" fg:w="424"/><text x="56.8892%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (416 samples, 0.97%)</title><rect x="56.6578%" y="981" width="0.9655%" height="15" fill="rgb(253,101,25)" fg:x="24411" fg:w="416"/><text x="56.9078%" y="991.50"></text></g><g><title>hashbrown::raw::TableLayout::new (5 samples, 0.01%)</title><rect x="57.6117%" y="965" width="0.0116%" height="15" fill="rgb(207,197,30)" fg:x="24822" fg:w="5"/><text x="57.8617%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (9 samples, 0.02%)</title><rect x="57.6581%" y="997" width="0.0209%" height="15" fill="rgb(238,87,13)" fg:x="24842" fg:w="9"/><text x="57.9081%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="57.6674%" y="981" width="0.0116%" height="15" fill="rgb(215,155,8)" fg:x="24846" fg:w="5"/><text x="57.9174%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.03%)</title><rect x="57.6790%" y="997" width="0.0279%" height="15" fill="rgb(239,166,38)" fg:x="24851" fg:w="12"/><text x="57.9290%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (7 samples, 0.02%)</title><rect x="57.6906%" y="981" width="0.0162%" height="15" fill="rgb(240,194,35)" fg:x="24856" fg:w="7"/><text x="57.9406%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.02%)</title><rect x="57.7069%" y="997" width="0.0209%" height="15" fill="rgb(219,10,44)" fg:x="24863" fg:w="9"/><text x="57.9569%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="57.7138%" y="981" width="0.0139%" height="15" fill="rgb(251,220,35)" fg:x="24866" fg:w="6"/><text x="57.9638%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (46 samples, 0.11%)</title><rect x="57.6326%" y="1013" width="0.1068%" height="15" fill="rgb(218,117,13)" fg:x="24831" fg:w="46"/><text x="57.8826%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.01%)</title><rect x="57.7277%" y="997" width="0.0116%" height="15" fill="rgb(221,213,40)" fg:x="24872" fg:w="5"/><text x="57.9777%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (7 samples, 0.02%)</title><rect x="57.7417%" y="981" width="0.0162%" height="15" fill="rgb(251,224,35)" fg:x="24878" fg:w="7"/><text x="57.9917%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (5 samples, 0.01%)</title><rect x="57.7463%" y="965" width="0.0116%" height="15" fill="rgb(241,33,39)" fg:x="24880" fg:w="5"/><text x="57.9963%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (798 samples, 1.85%)</title><rect x="55.9197%" y="1061" width="1.8522%" height="15" fill="rgb(222,74,17)" fg:x="24093" fg:w="798"/><text x="56.1697%" y="1071.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (797 samples, 1.85%)</title><rect x="55.9220%" y="1045" width="1.8498%" height="15" fill="rgb(225,103,0)" fg:x="24094" fg:w="797"/><text x="56.1720%" y="1055.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (521 samples, 1.21%)</title><rect x="56.5626%" y="1029" width="1.2092%" height="15" fill="rgb(240,0,12)" fg:x="24370" fg:w="521"/><text x="56.8126%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (14 samples, 0.03%)</title><rect x="57.7394%" y="1013" width="0.0325%" height="15" fill="rgb(233,213,37)" fg:x="24877" fg:w="14"/><text x="57.9894%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (13 samples, 0.03%)</title><rect x="57.7417%" y="997" width="0.0302%" height="15" fill="rgb(225,84,52)" fg:x="24878" fg:w="13"/><text x="57.9917%" y="1007.50"></text></g><g><title>hashbrown::raw::h2 (6 samples, 0.01%)</title><rect x="57.7579%" y="981" width="0.0139%" height="15" fill="rgb(247,160,51)" fg:x="24885" fg:w="6"/><text x="58.0079%" y="991.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="57.7602%" y="965" width="0.0116%" height="15" fill="rgb(244,60,51)" fg:x="24886" fg:w="5"/><text x="58.0102%" y="975.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="57.7602%" y="949" width="0.0116%" height="15" fill="rgb(233,114,7)" fg:x="24886" fg:w="5"/><text x="58.0102%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (9 samples, 0.02%)</title><rect x="57.7718%" y="1029" width="0.0209%" height="15" fill="rgb(246,136,16)" fg:x="24891" fg:w="9"/><text x="58.0218%" y="1039.50"></text></g><g><title>std::collections::hash::map::RandomState::new (9 samples, 0.02%)</title><rect x="57.7718%" y="1013" width="0.0209%" height="15" fill="rgb(243,114,45)" fg:x="24891" fg:w="9"/><text x="58.0218%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="57.7718%" y="997" width="0.0209%" height="15" fill="rgb(247,183,43)" fg:x="24891" fg:w="9"/><text x="58.0218%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="57.7788%" y="981" width="0.0139%" height="15" fill="rgb(251,210,42)" fg:x="24894" fg:w="6"/><text x="58.0288%" y="991.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (5 samples, 0.01%)</title><rect x="57.7811%" y="965" width="0.0116%" height="15" fill="rgb(221,88,35)" fg:x="24895" fg:w="5"/><text x="58.0311%" y="975.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (1,046 samples, 2.43%)</title><rect x="55.3719%" y="1077" width="2.4278%" height="15" fill="rgb(242,21,20)" fg:x="23857" fg:w="1046"/><text x="55.6219%" y="1087.50">by..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (12 samples, 0.03%)</title><rect x="57.7718%" y="1061" width="0.0279%" height="15" fill="rgb(233,226,36)" fg:x="24891" fg:w="12"/><text x="58.0218%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.03%)</title><rect x="57.7718%" y="1045" width="0.0279%" height="15" fill="rgb(243,189,34)" fg:x="24891" fg:w="12"/><text x="58.0218%" y="1055.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (10 samples, 0.02%)</title><rect x="57.8716%" y="933" width="0.0232%" height="15" fill="rgb(207,145,50)" fg:x="24934" fg:w="10"/><text x="58.1216%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (20 samples, 0.05%)</title><rect x="57.8647%" y="949" width="0.0464%" height="15" fill="rgb(242,1,50)" fg:x="24931" fg:w="20"/><text x="58.1147%" y="959.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (7 samples, 0.02%)</title><rect x="57.8949%" y="933" width="0.0162%" height="15" fill="rgb(231,65,32)" fg:x="24944" fg:w="7"/><text x="58.1449%" y="943.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (6 samples, 0.01%)</title><rect x="57.8972%" y="917" width="0.0139%" height="15" fill="rgb(208,68,49)" fg:x="24945" fg:w="6"/><text x="58.1472%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.01%)</title><rect x="57.8995%" y="901" width="0.0116%" height="15" fill="rgb(253,54,49)" fg:x="24946" fg:w="5"/><text x="58.1495%" y="911.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (5 samples, 0.01%)</title><rect x="57.8995%" y="885" width="0.0116%" height="15" fill="rgb(245,186,24)" fg:x="24946" fg:w="5"/><text x="58.1495%" y="895.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (5 samples, 0.01%)</title><rect x="57.8995%" y="869" width="0.0116%" height="15" fill="rgb(209,2,41)" fg:x="24946" fg:w="5"/><text x="58.1495%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.01%)</title><rect x="57.8995%" y="853" width="0.0116%" height="15" fill="rgb(242,208,54)" fg:x="24946" fg:w="5"/><text x="58.1495%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.07%)</title><rect x="57.8577%" y="981" width="0.0673%" height="15" fill="rgb(225,9,51)" fg:x="24928" fg:w="29"/><text x="58.1077%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (29 samples, 0.07%)</title><rect x="57.8577%" y="965" width="0.0673%" height="15" fill="rgb(207,207,25)" fg:x="24928" fg:w="29"/><text x="58.1077%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (6 samples, 0.01%)</title><rect x="57.9111%" y="949" width="0.0139%" height="15" fill="rgb(253,96,18)" fg:x="24951" fg:w="6"/><text x="58.1611%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="57.8531%" y="997" width="0.0812%" height="15" fill="rgb(252,215,20)" fg:x="24926" fg:w="35"/><text x="58.1031%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="57.9343%" y="997" width="0.0116%" height="15" fill="rgb(245,227,26)" fg:x="24961" fg:w="5"/><text x="58.1843%" y="1007.50"></text></g><g><title>bytecode_verifier::control_flow::check_breaks::_{{closure}} (7 samples, 0.02%)</title><rect x="57.9529%" y="997" width="0.0162%" height="15" fill="rgb(241,208,0)" fg:x="24969" fg:w="7"/><text x="58.2029%" y="1007.50"></text></g><g><title>bytecode_verifier::control_flow::check_breaks (60 samples, 0.14%)</title><rect x="57.8322%" y="1029" width="0.1393%" height="15" fill="rgb(224,130,10)" fg:x="24917" fg:w="60"/><text x="58.0822%" y="1039.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (60 samples, 0.14%)</title><rect x="57.8322%" y="1013" width="0.1393%" height="15" fill="rgb(237,29,0)" fg:x="24917" fg:w="60"/><text x="58.0822%" y="1023.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (9 samples, 0.02%)</title><rect x="58.0272%" y="933" width="0.0209%" height="15" fill="rgb(219,27,41)" fg:x="25001" fg:w="9"/><text x="58.2772%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (32 samples, 0.07%)</title><rect x="58.0225%" y="949" width="0.0743%" height="15" fill="rgb(245,101,19)" fg:x="24999" fg:w="32"/><text x="58.2725%" y="959.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (21 samples, 0.05%)</title><rect x="58.0480%" y="933" width="0.0487%" height="15" fill="rgb(243,44,37)" fg:x="25010" fg:w="21"/><text x="58.2980%" y="943.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (19 samples, 0.04%)</title><rect x="58.0527%" y="917" width="0.0441%" height="15" fill="rgb(228,213,43)" fg:x="25012" fg:w="19"/><text x="58.3027%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (17 samples, 0.04%)</title><rect x="58.0573%" y="901" width="0.0395%" height="15" fill="rgb(219,163,21)" fg:x="25014" fg:w="17"/><text x="58.3073%" y="911.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (9 samples, 0.02%)</title><rect x="58.0759%" y="885" width="0.0209%" height="15" fill="rgb(234,86,24)" fg:x="25022" fg:w="9"/><text x="58.3259%" y="895.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (6 samples, 0.01%)</title><rect x="58.0829%" y="869" width="0.0139%" height="15" fill="rgb(225,10,24)" fg:x="25025" fg:w="6"/><text x="58.3329%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.10%)</title><rect x="58.0063%" y="981" width="0.1044%" height="15" fill="rgb(218,109,7)" fg:x="24992" fg:w="45"/><text x="58.2563%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (45 samples, 0.10%)</title><rect x="58.0063%" y="965" width="0.1044%" height="15" fill="rgb(210,20,26)" fg:x="24992" fg:w="45"/><text x="58.2563%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (6 samples, 0.01%)</title><rect x="58.0968%" y="949" width="0.0139%" height="15" fill="rgb(216,18,1)" fg:x="25031" fg:w="6"/><text x="58.3468%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.12%)</title><rect x="58.0039%" y="997" width="0.1230%" height="15" fill="rgb(206,163,23)" fg:x="24991" fg:w="53"/><text x="58.2539%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="58.1107%" y="981" width="0.0162%" height="15" fill="rgb(229,150,31)" fg:x="25037" fg:w="7"/><text x="58.3607%" y="991.50"></text></g><g><title>core::cmp::min (5 samples, 0.01%)</title><rect x="58.1548%" y="933" width="0.0116%" height="15" fill="rgb(231,10,5)" fg:x="25056" fg:w="5"/><text x="58.4048%" y="943.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="58.1548%" y="917" width="0.0116%" height="15" fill="rgb(250,40,50)" fg:x="25056" fg:w="5"/><text x="58.4048%" y="927.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="58.1548%" y="901" width="0.0116%" height="15" fill="rgb(217,119,7)" fg:x="25056" fg:w="5"/><text x="58.4048%" y="911.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (9 samples, 0.02%)</title><rect x="58.1502%" y="965" width="0.0209%" height="15" fill="rgb(245,214,40)" fg:x="25054" fg:w="9"/><text x="58.4002%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (9 samples, 0.02%)</title><rect x="58.1502%" y="949" width="0.0209%" height="15" fill="rgb(216,187,1)" fg:x="25054" fg:w="9"/><text x="58.4002%" y="959.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::labeled_code (15 samples, 0.03%)</title><rect x="58.1409%" y="997" width="0.0348%" height="15" fill="rgb(237,146,21)" fg:x="25050" fg:w="15"/><text x="58.3909%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (12 samples, 0.03%)</title><rect x="58.1478%" y="981" width="0.0279%" height="15" fill="rgb(210,174,47)" fg:x="25053" fg:w="12"/><text x="58.3978%" y="991.50"></text></g><g><title>bytecode_verifier::control_flow::check_continues::_{{closure}} (5 samples, 0.01%)</title><rect x="58.1757%" y="997" width="0.0116%" height="15" fill="rgb(218,111,39)" fg:x="25065" fg:w="5"/><text x="58.4257%" y="1007.50"></text></g><g><title>bytecode_verifier::control_flow::check_continues (97 samples, 0.23%)</title><rect x="57.9715%" y="1029" width="0.2251%" height="15" fill="rgb(224,95,19)" fg:x="24977" fg:w="97"/><text x="58.2215%" y="1039.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (96 samples, 0.22%)</title><rect x="57.9738%" y="1013" width="0.2228%" height="15" fill="rgb(234,15,38)" fg:x="24978" fg:w="96"/><text x="58.2238%" y="1023.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (7 samples, 0.02%)</title><rect x="58.2476%" y="933" width="0.0162%" height="15" fill="rgb(246,56,12)" fg:x="25096" fg:w="7"/><text x="58.4976%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (25 samples, 0.06%)</title><rect x="58.2314%" y="949" width="0.0580%" height="15" fill="rgb(247,16,17)" fg:x="25089" fg:w="25"/><text x="58.4814%" y="959.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (11 samples, 0.03%)</title><rect x="58.2639%" y="933" width="0.0255%" height="15" fill="rgb(215,151,11)" fg:x="25103" fg:w="11"/><text x="58.5139%" y="943.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (10 samples, 0.02%)</title><rect x="58.2662%" y="917" width="0.0232%" height="15" fill="rgb(225,16,24)" fg:x="25104" fg:w="10"/><text x="58.5162%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (10 samples, 0.02%)</title><rect x="58.2662%" y="901" width="0.0232%" height="15" fill="rgb(217,117,5)" fg:x="25104" fg:w="10"/><text x="58.5162%" y="911.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (9 samples, 0.02%)</title><rect x="58.2685%" y="885" width="0.0209%" height="15" fill="rgb(246,187,53)" fg:x="25105" fg:w="9"/><text x="58.5185%" y="895.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (8 samples, 0.02%)</title><rect x="58.2709%" y="869" width="0.0186%" height="15" fill="rgb(241,71,40)" fg:x="25106" fg:w="8"/><text x="58.5209%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (8 samples, 0.02%)</title><rect x="58.2709%" y="853" width="0.0186%" height="15" fill="rgb(231,67,39)" fg:x="25106" fg:w="8"/><text x="58.5209%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.01%)</title><rect x="58.2755%" y="837" width="0.0139%" height="15" fill="rgb(222,120,24)" fg:x="25108" fg:w="6"/><text x="58.5255%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.06%)</title><rect x="58.2291%" y="981" width="0.0650%" height="15" fill="rgb(248,3,3)" fg:x="25088" fg:w="28"/><text x="58.4791%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (28 samples, 0.06%)</title><rect x="58.2291%" y="965" width="0.0650%" height="15" fill="rgb(228,218,5)" fg:x="25088" fg:w="28"/><text x="58.4791%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="58.2291%" y="997" width="0.0812%" height="15" fill="rgb(212,202,43)" fg:x="25088" fg:w="35"/><text x="58.4791%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="58.2941%" y="981" width="0.0162%" height="15" fill="rgb(235,183,2)" fg:x="25116" fg:w="7"/><text x="58.5441%" y="991.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::labeled_code (5 samples, 0.01%)</title><rect x="58.3242%" y="997" width="0.0116%" height="15" fill="rgb(230,165,10)" fg:x="25129" fg:w="5"/><text x="58.5742%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="58.3498%" y="981" width="0.0116%" height="15" fill="rgb(219,54,40)" fg:x="25140" fg:w="5"/><text x="58.5998%" y="991.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (71 samples, 0.16%)</title><rect x="58.1989%" y="1013" width="0.1648%" height="15" fill="rgb(244,73,9)" fg:x="25075" fg:w="71"/><text x="58.4489%" y="1023.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits::_{{closure}} (12 samples, 0.03%)</title><rect x="58.3358%" y="997" width="0.0279%" height="15" fill="rgb(212,32,45)" fg:x="25134" fg:w="12"/><text x="58.5858%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="58.4008%" y="997" width="0.0371%" height="15" fill="rgb(205,58,31)" fg:x="25162" fg:w="16"/><text x="58.6508%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="58.4240%" y="981" width="0.0139%" height="15" fill="rgb(250,120,43)" fg:x="25172" fg:w="6"/><text x="58.6740%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="58.4565%" y="981" width="0.0116%" height="15" fill="rgb(235,13,10)" fg:x="25186" fg:w="5"/><text x="58.7065%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.01%)</title><rect x="58.4821%" y="917" width="0.0139%" height="15" fill="rgb(232,219,31)" fg:x="25197" fg:w="6"/><text x="58.7321%" y="927.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="58.5192%" y="869" width="0.0116%" height="15" fill="rgb(218,157,51)" fg:x="25213" fg:w="5"/><text x="58.7692%" y="879.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.01%)</title><rect x="58.5192%" y="853" width="0.0116%" height="15" fill="rgb(211,91,52)" fg:x="25213" fg:w="5"/><text x="58.7692%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.04%)</title><rect x="58.5030%" y="917" width="0.0395%" height="15" fill="rgb(240,173,1)" fg:x="25206" fg:w="17"/><text x="58.7530%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="58.5169%" y="901" width="0.0255%" height="15" fill="rgb(248,20,47)" fg:x="25212" fg:w="11"/><text x="58.7669%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="58.5169%" y="885" width="0.0255%" height="15" fill="rgb(217,221,40)" fg:x="25212" fg:w="11"/><text x="58.7669%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (7 samples, 0.02%)</title><rect x="58.5471%" y="901" width="0.0162%" height="15" fill="rgb(226,149,51)" fg:x="25225" fg:w="7"/><text x="58.7971%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.03%)</title><rect x="58.5424%" y="917" width="0.0279%" height="15" fill="rgb(252,193,7)" fg:x="25223" fg:w="12"/><text x="58.7924%" y="927.50"></text></g><g><title>core::cmp::max (5 samples, 0.01%)</title><rect x="58.5703%" y="917" width="0.0116%" height="15" fill="rgb(205,123,0)" fg:x="25235" fg:w="5"/><text x="58.8203%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.12%)</title><rect x="58.4751%" y="933" width="0.1160%" height="15" fill="rgb(233,173,25)" fg:x="25194" fg:w="50"/><text x="58.7251%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (55 samples, 0.13%)</title><rect x="58.4681%" y="981" width="0.1277%" height="15" fill="rgb(216,63,32)" fg:x="25191" fg:w="55"/><text x="58.7181%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.13%)</title><rect x="58.4681%" y="965" width="0.1277%" height="15" fill="rgb(209,56,45)" fg:x="25191" fg:w="55"/><text x="58.7181%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (55 samples, 0.13%)</title><rect x="58.4681%" y="949" width="0.1277%" height="15" fill="rgb(226,111,49)" fg:x="25191" fg:w="55"/><text x="58.7181%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.02%)</title><rect x="58.5958%" y="981" width="0.0186%" height="15" fill="rgb(244,181,21)" fg:x="25246" fg:w="8"/><text x="58.8458%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (77 samples, 0.18%)</title><rect x="58.4380%" y="997" width="0.1787%" height="15" fill="rgb(222,126,15)" fg:x="25178" fg:w="77"/><text x="58.6880%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="58.6561%" y="837" width="0.0139%" height="15" fill="rgb(222,95,17)" fg:x="25272" fg:w="6"/><text x="58.9061%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="58.6399%" y="853" width="0.0395%" height="15" fill="rgb(254,46,5)" fg:x="25265" fg:w="17"/><text x="58.8899%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27 samples, 0.06%)</title><rect x="58.6260%" y="917" width="0.0627%" height="15" fill="rgb(236,216,35)" fg:x="25259" fg:w="27"/><text x="58.8760%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.06%)</title><rect x="58.6283%" y="901" width="0.0603%" height="15" fill="rgb(217,187,26)" fg:x="25260" fg:w="26"/><text x="58.8783%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.06%)</title><rect x="58.6329%" y="885" width="0.0557%" height="15" fill="rgb(207,192,25)" fg:x="25262" fg:w="24"/><text x="58.8829%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (23 samples, 0.05%)</title><rect x="58.6353%" y="869" width="0.0534%" height="15" fill="rgb(253,135,27)" fg:x="25263" fg:w="23"/><text x="58.8853%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (33 samples, 0.08%)</title><rect x="58.6167%" y="965" width="0.0766%" height="15" fill="rgb(211,122,29)" fg:x="25255" fg:w="33"/><text x="58.8667%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (33 samples, 0.08%)</title><rect x="58.6167%" y="949" width="0.0766%" height="15" fill="rgb(233,162,40)" fg:x="25255" fg:w="33"/><text x="58.8667%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (31 samples, 0.07%)</title><rect x="58.6213%" y="933" width="0.0720%" height="15" fill="rgb(222,184,47)" fg:x="25257" fg:w="31"/><text x="58.8713%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.08%)</title><rect x="58.6167%" y="997" width="0.0836%" height="15" fill="rgb(249,99,23)" fg:x="25255" fg:w="36"/><text x="58.8667%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (36 samples, 0.08%)</title><rect x="58.6167%" y="981" width="0.0836%" height="15" fill="rgb(214,60,12)" fg:x="25255" fg:w="36"/><text x="58.8667%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="58.7327%" y="853" width="0.0139%" height="15" fill="rgb(250,229,36)" fg:x="25305" fg:w="6"/><text x="58.9827%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.04%)</title><rect x="58.7118%" y="869" width="0.0395%" height="15" fill="rgb(232,195,10)" fg:x="25296" fg:w="17"/><text x="58.9618%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (29 samples, 0.07%)</title><rect x="58.8186%" y="853" width="0.0673%" height="15" fill="rgb(205,213,31)" fg:x="25342" fg:w="29"/><text x="59.0686%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (82 samples, 0.19%)</title><rect x="58.7095%" y="917" width="0.1903%" height="15" fill="rgb(237,43,8)" fg:x="25295" fg:w="82"/><text x="58.9595%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (82 samples, 0.19%)</title><rect x="58.7095%" y="901" width="0.1903%" height="15" fill="rgb(216,208,3)" fg:x="25295" fg:w="82"/><text x="58.9595%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (82 samples, 0.19%)</title><rect x="58.7095%" y="885" width="0.1903%" height="15" fill="rgb(228,179,44)" fg:x="25295" fg:w="82"/><text x="58.9595%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (64 samples, 0.15%)</title><rect x="58.7513%" y="869" width="0.1485%" height="15" fill="rgb(230,192,27)" fg:x="25313" fg:w="64"/><text x="59.0013%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="58.8859%" y="853" width="0.0139%" height="15" fill="rgb(251,30,38)" fg:x="25371" fg:w="6"/><text x="59.1359%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.03%)</title><rect x="58.8998%" y="917" width="0.0348%" height="15" fill="rgb(246,55,52)" fg:x="25377" fg:w="15"/><text x="59.1498%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.03%)</title><rect x="58.9091%" y="901" width="0.0255%" height="15" fill="rgb(249,79,26)" fg:x="25381" fg:w="11"/><text x="59.1591%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.01%)</title><rect x="58.9207%" y="885" width="0.0139%" height="15" fill="rgb(220,202,16)" fg:x="25386" fg:w="6"/><text x="59.1707%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="58.9602%" y="837" width="0.0255%" height="15" fill="rgb(250,170,23)" fg:x="25403" fg:w="11"/><text x="59.2102%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (120 samples, 0.28%)</title><rect x="58.7095%" y="933" width="0.2785%" height="15" fill="rgb(230,7,37)" fg:x="25295" fg:w="120"/><text x="58.9595%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (23 samples, 0.05%)</title><rect x="58.9347%" y="917" width="0.0534%" height="15" fill="rgb(213,71,1)" fg:x="25392" fg:w="23"/><text x="59.1847%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u16 (22 samples, 0.05%)</title><rect x="58.9370%" y="901" width="0.0511%" height="15" fill="rgb(227,87,39)" fg:x="25393" fg:w="22"/><text x="59.1870%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="58.9439%" y="885" width="0.0441%" height="15" fill="rgb(210,41,29)" fg:x="25396" fg:w="19"/><text x="59.1939%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="58.9439%" y="869" width="0.0441%" height="15" fill="rgb(206,191,31)" fg:x="25396" fg:w="19"/><text x="59.1939%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="58.9439%" y="853" width="0.0441%" height="15" fill="rgb(247,75,54)" fg:x="25396" fg:w="19"/><text x="59.1939%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="59.0229%" y="853" width="0.0116%" height="15" fill="rgb(208,54,50)" fg:x="25430" fg:w="5"/><text x="59.2729%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="59.0205%" y="869" width="0.0162%" height="15" fill="rgb(214,90,37)" fg:x="25429" fg:w="7"/><text x="59.2705%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (8 samples, 0.02%)</title><rect x="59.0507%" y="837" width="0.0186%" height="15" fill="rgb(220,132,6)" fg:x="25442" fg:w="8"/><text x="59.3007%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.03%)</title><rect x="59.0693%" y="837" width="0.0325%" height="15" fill="rgb(213,167,7)" fg:x="25450" fg:w="14"/><text x="59.3193%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.14%)</title><rect x="59.0066%" y="901" width="0.1369%" height="15" fill="rgb(243,36,27)" fg:x="25423" fg:w="59"/><text x="59.2566%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.14%)</title><rect x="59.0066%" y="885" width="0.1369%" height="15" fill="rgb(235,147,12)" fg:x="25423" fg:w="59"/><text x="59.2566%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (44 samples, 0.10%)</title><rect x="59.0414%" y="869" width="0.1021%" height="15" fill="rgb(212,198,44)" fg:x="25438" fg:w="44"/><text x="59.2914%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (44 samples, 0.10%)</title><rect x="59.0414%" y="853" width="0.1021%" height="15" fill="rgb(218,68,50)" fg:x="25438" fg:w="44"/><text x="59.2914%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (18 samples, 0.04%)</title><rect x="59.1018%" y="837" width="0.0418%" height="15" fill="rgb(224,79,48)" fg:x="25464" fg:w="18"/><text x="59.3518%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.03%)</title><rect x="59.1157%" y="821" width="0.0279%" height="15" fill="rgb(213,191,50)" fg:x="25470" fg:w="12"/><text x="59.3657%" y="831.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.02%)</title><rect x="59.1273%" y="805" width="0.0162%" height="15" fill="rgb(254,146,10)" fg:x="25475" fg:w="7"/><text x="59.3773%" y="815.50"></text></g><g><title>hashbrown::raw::h2 (6 samples, 0.01%)</title><rect x="59.1877%" y="853" width="0.0139%" height="15" fill="rgb(215,175,11)" fg:x="25501" fg:w="6"/><text x="59.4377%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.01%)</title><rect x="59.2016%" y="853" width="0.0116%" height="15" fill="rgb(207,49,7)" fg:x="25507" fg:w="5"/><text x="59.4516%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (7 samples, 0.02%)</title><rect x="59.2318%" y="837" width="0.0162%" height="15" fill="rgb(234,144,29)" fg:x="25520" fg:w="7"/><text x="59.4818%" y="847.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="59.2341%" y="821" width="0.0139%" height="15" fill="rgb(213,222,48)" fg:x="25521" fg:w="6"/><text x="59.4841%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="59.2480%" y="837" width="0.0162%" height="15" fill="rgb(222,8,6)" fg:x="25527" fg:w="7"/><text x="59.4980%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (66 samples, 0.15%)</title><rect x="59.1459%" y="901" width="0.1532%" height="15" fill="rgb(221,114,49)" fg:x="25483" fg:w="66"/><text x="59.3959%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (66 samples, 0.15%)</title><rect x="59.1459%" y="885" width="0.1532%" height="15" fill="rgb(250,140,42)" fg:x="25483" fg:w="66"/><text x="59.3959%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (62 samples, 0.14%)</title><rect x="59.1552%" y="869" width="0.1439%" height="15" fill="rgb(250,150,27)" fg:x="25487" fg:w="62"/><text x="59.4052%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (37 samples, 0.09%)</title><rect x="59.2132%" y="853" width="0.0859%" height="15" fill="rgb(252,159,3)" fg:x="25512" fg:w="37"/><text x="59.4632%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (15 samples, 0.03%)</title><rect x="59.2642%" y="837" width="0.0348%" height="15" fill="rgb(241,182,3)" fg:x="25534" fg:w="15"/><text x="59.5142%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (11 samples, 0.03%)</title><rect x="59.2735%" y="821" width="0.0255%" height="15" fill="rgb(236,3,9)" fg:x="25538" fg:w="11"/><text x="59.5235%" y="831.50"></text></g><g><title>bytecode_verifier::control_flow::count_loop_depth (404 samples, 0.94%)</title><rect x="58.3637%" y="1013" width="0.9377%" height="15" fill="rgb(223,227,51)" fg:x="25146" fg:w="404"/><text x="58.6137%" y="1023.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (256 samples, 0.59%)</title><rect x="58.7072%" y="997" width="0.5942%" height="15" fill="rgb(232,133,30)" fg:x="25294" fg:w="256"/><text x="58.9572%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (256 samples, 0.59%)</title><rect x="58.7072%" y="981" width="0.5942%" height="15" fill="rgb(209,93,27)" fg:x="25294" fg:w="256"/><text x="58.9572%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (256 samples, 0.59%)</title><rect x="58.7072%" y="965" width="0.5942%" height="15" fill="rgb(208,108,34)" fg:x="25294" fg:w="256"/><text x="58.9572%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (255 samples, 0.59%)</title><rect x="58.7095%" y="949" width="0.5919%" height="15" fill="rgb(215,189,13)" fg:x="25295" fg:w="255"/><text x="58.9595%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (135 samples, 0.31%)</title><rect x="58.9880%" y="933" width="0.3133%" height="15" fill="rgb(206,88,23)" fg:x="25415" fg:w="135"/><text x="59.2380%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (134 samples, 0.31%)</title><rect x="58.9904%" y="917" width="0.3110%" height="15" fill="rgb(240,173,0)" fg:x="25416" fg:w="134"/><text x="59.2404%" y="927.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits (479 samples, 1.11%)</title><rect x="58.1966%" y="1029" width="1.1118%" height="15" fill="rgb(223,106,52)" fg:x="25074" fg:w="479"/><text x="58.4466%" y="1039.50"></text></g><g><title>bytecode_verifier::control_flow::check_jumps (646 samples, 1.50%)</title><rect x="57.8252%" y="1045" width="1.4994%" height="15" fill="rgb(206,130,16)" fg:x="24914" fg:w="646"/><text x="58.0752%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::control_flow::Label&gt;&gt; (7 samples, 0.02%)</title><rect x="59.3083%" y="1029" width="0.0162%" height="15" fill="rgb(220,54,25)" fg:x="25553" fg:w="7"/><text x="59.5583%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="59.3524%" y="1013" width="0.0348%" height="15" fill="rgb(210,4,38)" fg:x="25572" fg:w="15"/><text x="59.6024%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="59.3664%" y="997" width="0.0209%" height="15" fill="rgb(238,94,39)" fg:x="25578" fg:w="9"/><text x="59.6164%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="59.3455%" y="1029" width="0.0789%" height="15" fill="rgb(234,124,34)" fg:x="25569" fg:w="34"/><text x="59.5955%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.04%)</title><rect x="59.3873%" y="1013" width="0.0371%" height="15" fill="rgb(221,91,40)" fg:x="25587" fg:w="16"/><text x="59.6373%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.03%)</title><rect x="59.3942%" y="997" width="0.0302%" height="15" fill="rgb(246,53,28)" fg:x="25590" fg:w="13"/><text x="59.6442%" y="1007.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (8 samples, 0.02%)</title><rect x="59.4058%" y="981" width="0.0186%" height="15" fill="rgb(229,109,7)" fg:x="25595" fg:w="8"/><text x="59.6558%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.01%)</title><rect x="59.4569%" y="901" width="0.0116%" height="15" fill="rgb(249,117,8)" fg:x="25617" fg:w="5"/><text x="59.7069%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.04%)</title><rect x="59.4476%" y="949" width="0.0418%" height="15" fill="rgb(210,181,1)" fg:x="25613" fg:w="18"/><text x="59.6976%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="59.4476%" y="933" width="0.0418%" height="15" fill="rgb(211,66,1)" fg:x="25613" fg:w="18"/><text x="59.6976%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.04%)</title><rect x="59.4522%" y="917" width="0.0371%" height="15" fill="rgb(221,90,14)" fg:x="25615" fg:w="16"/><text x="59.7022%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="59.4685%" y="901" width="0.0209%" height="15" fill="rgb(219,222,44)" fg:x="25622" fg:w="9"/><text x="59.7185%" y="911.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="59.4755%" y="885" width="0.0139%" height="15" fill="rgb(246,34,33)" fg:x="25625" fg:w="6"/><text x="59.7255%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.06%)</title><rect x="59.4406%" y="965" width="0.0580%" height="15" fill="rgb(227,135,41)" fg:x="25610" fg:w="25"/><text x="59.6906%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.02%)</title><rect x="59.5103%" y="901" width="0.0232%" height="15" fill="rgb(226,15,14)" fg:x="25640" fg:w="10"/><text x="59.7603%" y="911.50"></text></g><g><title>bytecode_verifier::control_flow::verify (742 samples, 1.72%)</title><rect x="57.8159%" y="1061" width="1.7222%" height="15" fill="rgb(236,148,47)" fg:x="24910" fg:w="742"/><text x="58.0659%" y="1071.50"></text></g><g><title>bytecode_verifier::control_flow::instruction_labels (92 samples, 0.21%)</title><rect x="59.3246%" y="1045" width="0.2135%" height="15" fill="rgb(233,162,52)" fg:x="25560" fg:w="92"/><text x="59.5746%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.10%)</title><rect x="59.4337%" y="1029" width="0.1044%" height="15" fill="rgb(244,35,28)" fg:x="25607" fg:w="45"/><text x="59.6837%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.10%)</title><rect x="59.4337%" y="1013" width="0.1044%" height="15" fill="rgb(205,121,10)" fg:x="25607" fg:w="45"/><text x="59.6837%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 0.10%)</title><rect x="59.4360%" y="997" width="0.1021%" height="15" fill="rgb(250,58,18)" fg:x="25608" fg:w="44"/><text x="59.6860%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (44 samples, 0.10%)</title><rect x="59.4360%" y="981" width="0.1021%" height="15" fill="rgb(216,37,13)" fg:x="25608" fg:w="44"/><text x="59.6860%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.04%)</title><rect x="59.5010%" y="965" width="0.0371%" height="15" fill="rgb(221,215,42)" fg:x="25636" fg:w="16"/><text x="59.7510%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="59.5010%" y="949" width="0.0371%" height="15" fill="rgb(217,214,19)" fg:x="25636" fg:w="16"/><text x="59.7510%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="59.5010%" y="933" width="0.0371%" height="15" fill="rgb(233,139,13)" fg:x="25636" fg:w="16"/><text x="59.7510%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.04%)</title><rect x="59.5010%" y="917" width="0.0371%" height="15" fill="rgb(247,168,23)" fg:x="25636" fg:w="16"/><text x="59.7510%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (7 samples, 0.02%)</title><rect x="59.5683%" y="997" width="0.0162%" height="15" fill="rgb(207,202,1)" fg:x="25665" fg:w="7"/><text x="59.8183%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (5 samples, 0.01%)</title><rect x="59.5729%" y="981" width="0.0116%" height="15" fill="rgb(220,155,48)" fg:x="25667" fg:w="5"/><text x="59.8229%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.04%)</title><rect x="59.5567%" y="1045" width="0.0395%" height="15" fill="rgb(250,43,26)" fg:x="25660" fg:w="17"/><text x="59.8067%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.04%)</title><rect x="59.5590%" y="1029" width="0.0371%" height="15" fill="rgb(212,190,23)" fg:x="25661" fg:w="16"/><text x="59.8090%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.03%)</title><rect x="59.5637%" y="1013" width="0.0325%" height="15" fill="rgb(216,39,24)" fg:x="25663" fg:w="14"/><text x="59.8137%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.01%)</title><rect x="59.5845%" y="997" width="0.0116%" height="15" fill="rgb(252,113,16)" fg:x="25672" fg:w="5"/><text x="59.8345%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (6 samples, 0.01%)</title><rect x="59.6194%" y="981" width="0.0139%" height="15" fill="rgb(208,113,19)" fg:x="25687" fg:w="6"/><text x="59.8694%" y="991.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="59.6217%" y="965" width="0.0116%" height="15" fill="rgb(234,107,25)" fg:x="25688" fg:w="5"/><text x="59.8717%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="59.5961%" y="1045" width="0.0418%" height="15" fill="rgb(234,217,51)" fg:x="25677" fg:w="18"/><text x="59.8461%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="59.5961%" y="1029" width="0.0418%" height="15" fill="rgb(251,29,42)" fg:x="25677" fg:w="18"/><text x="59.8461%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="59.5985%" y="1013" width="0.0395%" height="15" fill="rgb(221,62,51)" fg:x="25678" fg:w="17"/><text x="59.8485%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (10 samples, 0.02%)</title><rect x="59.6147%" y="997" width="0.0232%" height="15" fill="rgb(240,192,43)" fg:x="25685" fg:w="10"/><text x="59.8647%" y="1007.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (10 samples, 0.02%)</title><rect x="59.6402%" y="1045" width="0.0232%" height="15" fill="rgb(224,157,47)" fg:x="25696" fg:w="10"/><text x="59.8902%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="59.6890%" y="949" width="0.0116%" height="15" fill="rgb(226,84,45)" fg:x="25717" fg:w="5"/><text x="59.9390%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.02%)</title><rect x="59.6820%" y="965" width="0.0209%" height="15" fill="rgb(208,207,23)" fg:x="25714" fg:w="9"/><text x="59.9320%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.05%)</title><rect x="59.6727%" y="1013" width="0.0464%" height="15" fill="rgb(253,34,51)" fg:x="25710" fg:w="20"/><text x="59.9227%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="59.6751%" y="997" width="0.0441%" height="15" fill="rgb(227,26,34)" fg:x="25711" fg:w="19"/><text x="59.9251%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="59.6797%" y="981" width="0.0395%" height="15" fill="rgb(245,75,19)" fg:x="25713" fg:w="17"/><text x="59.9297%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="59.7076%" y="965" width="0.0116%" height="15" fill="rgb(250,191,31)" fg:x="25725" fg:w="5"/><text x="59.9576%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="59.7192%" y="1013" width="0.0162%" height="15" fill="rgb(224,11,50)" fg:x="25730" fg:w="7"/><text x="59.9692%" y="1023.50"></text></g><g><title>core::iter::adapters::process_results (6 samples, 0.01%)</title><rect x="59.7215%" y="997" width="0.0139%" height="15" fill="rgb(231,171,7)" fg:x="25731" fg:w="6"/><text x="59.9715%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.07%)</title><rect x="59.6704%" y="1029" width="0.0673%" height="15" fill="rgb(252,214,10)" fg:x="25709" fg:w="29"/><text x="59.9204%" y="1039.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (34 samples, 0.08%)</title><rect x="59.6635%" y="1045" width="0.0789%" height="15" fill="rgb(249,45,46)" fg:x="25706" fg:w="34"/><text x="59.9135%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (10 samples, 0.02%)</title><rect x="59.7424%" y="1029" width="0.0232%" height="15" fill="rgb(240,173,7)" fg:x="25740" fg:w="10"/><text x="59.9924%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (8 samples, 0.02%)</title><rect x="59.7470%" y="1013" width="0.0186%" height="15" fill="rgb(235,214,13)" fg:x="25742" fg:w="8"/><text x="59.9970%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="59.7470%" y="997" width="0.0186%" height="15" fill="rgb(245,156,8)" fg:x="25742" fg:w="8"/><text x="59.9970%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState&gt; (18 samples, 0.04%)</title><rect x="59.7424%" y="1045" width="0.0418%" height="15" fill="rgb(235,46,12)" fg:x="25740" fg:w="18"/><text x="59.9924%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (8 samples, 0.02%)</title><rect x="59.7656%" y="1029" width="0.0186%" height="15" fill="rgb(221,81,14)" fg:x="25750" fg:w="8"/><text x="60.0156%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (5 samples, 0.01%)</title><rect x="59.7725%" y="1013" width="0.0116%" height="15" fill="rgb(238,207,9)" fg:x="25753" fg:w="5"/><text x="60.0225%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="59.7725%" y="997" width="0.0116%" height="15" fill="rgb(224,129,35)" fg:x="25753" fg:w="5"/><text x="60.0225%" y="1007.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (110 samples, 0.26%)</title><rect x="59.5381%" y="1061" width="0.2553%" height="15" fill="rgb(243,218,34)" fg:x="25652" fg:w="110"/><text x="59.7881%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (13 samples, 0.03%)</title><rect x="59.8166%" y="997" width="0.0302%" height="15" fill="rgb(220,166,13)" fg:x="25772" fg:w="13"/><text x="60.0666%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (12 samples, 0.03%)</title><rect x="59.8190%" y="981" width="0.0279%" height="15" fill="rgb(227,167,49)" fg:x="25773" fg:w="12"/><text x="60.0690%" y="991.50"></text></g><g><title>hashbrown::raw::calculate_layout (6 samples, 0.01%)</title><rect x="59.8329%" y="965" width="0.0139%" height="15" fill="rgb(234,142,12)" fg:x="25779" fg:w="6"/><text x="60.0829%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (26 samples, 0.06%)</title><rect x="59.8120%" y="1045" width="0.0603%" height="15" fill="rgb(207,100,48)" fg:x="25770" fg:w="26"/><text x="60.0620%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (24 samples, 0.06%)</title><rect x="59.8166%" y="1029" width="0.0557%" height="15" fill="rgb(210,25,14)" fg:x="25772" fg:w="24"/><text x="60.0666%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (24 samples, 0.06%)</title><rect x="59.8166%" y="1013" width="0.0557%" height="15" fill="rgb(246,116,27)" fg:x="25772" fg:w="24"/><text x="60.0666%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (11 samples, 0.03%)</title><rect x="59.8468%" y="997" width="0.0255%" height="15" fill="rgb(214,193,42)" fg:x="25785" fg:w="11"/><text x="60.0968%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="59.8561%" y="981" width="0.0162%" height="15" fill="rgb(214,122,8)" fg:x="25789" fg:w="7"/><text x="60.1061%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="59.8770%" y="997" width="0.0162%" height="15" fill="rgb(244,173,18)" fg:x="25798" fg:w="7"/><text x="60.1270%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="59.8816%" y="981" width="0.0116%" height="15" fill="rgb(232,68,19)" fg:x="25800" fg:w="5"/><text x="60.1316%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (9 samples, 0.02%)</title><rect x="59.9002%" y="981" width="0.0209%" height="15" fill="rgb(236,224,1)" fg:x="25808" fg:w="9"/><text x="60.1502%" y="991.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="59.9025%" y="965" width="0.0186%" height="15" fill="rgb(240,11,8)" fg:x="25809" fg:w="8"/><text x="60.1525%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (15 samples, 0.03%)</title><rect x="59.8956%" y="997" width="0.0348%" height="15" fill="rgb(244,159,20)" fg:x="25806" fg:w="15"/><text x="60.1456%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="59.8723%" y="1045" width="0.0603%" height="15" fill="rgb(240,223,54)" fg:x="25796" fg:w="26"/><text x="60.1223%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="59.8723%" y="1029" width="0.0603%" height="15" fill="rgb(237,146,5)" fg:x="25796" fg:w="26"/><text x="60.1223%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="59.8723%" y="1013" width="0.0603%" height="15" fill="rgb(218,221,32)" fg:x="25796" fg:w="26"/><text x="60.1223%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.01%)</title><rect x="59.9838%" y="981" width="0.0116%" height="15" fill="rgb(244,96,26)" fg:x="25844" fg:w="5"/><text x="60.2338%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.01%)</title><rect x="59.9838%" y="997" width="0.0139%" height="15" fill="rgb(245,184,37)" fg:x="25844" fg:w="6"/><text x="60.2338%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="59.9814%" y="1013" width="0.0255%" height="15" fill="rgb(248,91,47)" fg:x="25843" fg:w="11"/><text x="60.2314%" y="1023.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.04%)</title><rect x="59.9768%" y="1029" width="0.0395%" height="15" fill="rgb(243,199,8)" fg:x="25841" fg:w="17"/><text x="60.2268%" y="1039.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="60.0186%" y="1029" width="0.0116%" height="15" fill="rgb(249,12,15)" fg:x="25859" fg:w="5"/><text x="60.2686%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="60.0302%" y="1029" width="0.0116%" height="15" fill="rgb(245,97,12)" fg:x="25864" fg:w="5"/><text x="60.2802%" y="1039.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (8 samples, 0.02%)</title><rect x="60.0418%" y="1029" width="0.0186%" height="15" fill="rgb(244,61,1)" fg:x="25869" fg:w="8"/><text x="60.2918%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (6 samples, 0.01%)</title><rect x="60.0464%" y="1013" width="0.0139%" height="15" fill="rgb(222,194,10)" fg:x="25871" fg:w="6"/><text x="60.2964%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.03%)</title><rect x="60.0650%" y="1029" width="0.0325%" height="15" fill="rgb(226,178,8)" fg:x="25879" fg:w="14"/><text x="60.3150%" y="1039.50"></text></g><g><title>core::ptr::read (6 samples, 0.01%)</title><rect x="60.0836%" y="1013" width="0.0139%" height="15" fill="rgb(241,32,34)" fg:x="25887" fg:w="6"/><text x="60.3336%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.02%)</title><rect x="60.0975%" y="1029" width="0.0209%" height="15" fill="rgb(254,26,6)" fg:x="25893" fg:w="9"/><text x="60.3475%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (5 samples, 0.01%)</title><rect x="60.1184%" y="1029" width="0.0116%" height="15" fill="rgb(249,71,11)" fg:x="25902" fg:w="5"/><text x="60.3684%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (5 samples, 0.01%)</title><rect x="60.1369%" y="1013" width="0.0116%" height="15" fill="rgb(232,170,27)" fg:x="25910" fg:w="5"/><text x="60.3869%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="60.1369%" y="997" width="0.0116%" height="15" fill="rgb(214,223,17)" fg:x="25910" fg:w="5"/><text x="60.3869%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (8 samples, 0.02%)</title><rect x="60.1346%" y="1029" width="0.0186%" height="15" fill="rgb(250,18,15)" fg:x="25909" fg:w="8"/><text x="60.3846%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (13 samples, 0.03%)</title><rect x="60.1532%" y="1029" width="0.0302%" height="15" fill="rgb(212,153,51)" fg:x="25917" fg:w="13"/><text x="60.4032%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (12 samples, 0.03%)</title><rect x="60.1555%" y="1013" width="0.0279%" height="15" fill="rgb(219,194,12)" fg:x="25918" fg:w="12"/><text x="60.4055%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (8 samples, 0.02%)</title><rect x="60.1648%" y="997" width="0.0186%" height="15" fill="rgb(212,58,17)" fg:x="25922" fg:w="8"/><text x="60.4148%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.01%)</title><rect x="60.1718%" y="981" width="0.0116%" height="15" fill="rgb(254,5,10)" fg:x="25925" fg:w="5"/><text x="60.4218%" y="991.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (108 samples, 0.25%)</title><rect x="59.9350%" y="1045" width="0.2507%" height="15" fill="rgb(246,91,7)" fg:x="25823" fg:w="108"/><text x="60.1850%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="60.2135%" y="1029" width="0.0116%" height="15" fill="rgb(218,108,49)" fg:x="25943" fg:w="5"/><text x="60.4635%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (6 samples, 0.01%)</title><rect x="60.2391%" y="917" width="0.0139%" height="15" fill="rgb(238,123,20)" fg:x="25954" fg:w="6"/><text x="60.4891%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (7 samples, 0.02%)</title><rect x="60.2391%" y="997" width="0.0162%" height="15" fill="rgb(231,69,23)" fg:x="25954" fg:w="7"/><text x="60.4891%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.02%)</title><rect x="60.2391%" y="981" width="0.0162%" height="15" fill="rgb(230,209,3)" fg:x="25954" fg:w="7"/><text x="60.4891%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="60.2391%" y="965" width="0.0162%" height="15" fill="rgb(231,19,0)" fg:x="25954" fg:w="7"/><text x="60.4891%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (7 samples, 0.02%)</title><rect x="60.2391%" y="949" width="0.0162%" height="15" fill="rgb(226,192,25)" fg:x="25954" fg:w="7"/><text x="60.4891%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (7 samples, 0.02%)</title><rect x="60.2391%" y="933" width="0.0162%" height="15" fill="rgb(223,175,53)" fg:x="25954" fg:w="7"/><text x="60.4891%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="60.2623%" y="949" width="0.0139%" height="15" fill="rgb(248,35,51)" fg:x="25964" fg:w="6"/><text x="60.5123%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="60.2762%" y="917" width="0.0116%" height="15" fill="rgb(230,37,26)" fg:x="25970" fg:w="5"/><text x="60.5262%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="60.2762%" y="901" width="0.0116%" height="15" fill="rgb(206,120,22)" fg:x="25970" fg:w="5"/><text x="60.5262%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="60.2762%" y="949" width="0.0139%" height="15" fill="rgb(207,165,28)" fg:x="25970" fg:w="6"/><text x="60.5262%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="60.2762%" y="933" width="0.0139%" height="15" fill="rgb(226,23,46)" fg:x="25970" fg:w="6"/><text x="60.5262%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (31 samples, 0.07%)</title><rect x="60.2275%" y="1013" width="0.0720%" height="15" fill="rgb(208,130,44)" fg:x="25949" fg:w="31"/><text x="60.4775%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19 samples, 0.04%)</title><rect x="60.2553%" y="997" width="0.0441%" height="15" fill="rgb(231,67,8)" fg:x="25961" fg:w="19"/><text x="60.5053%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.04%)</title><rect x="60.2576%" y="981" width="0.0418%" height="15" fill="rgb(205,183,22)" fg:x="25962" fg:w="18"/><text x="60.5076%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.04%)</title><rect x="60.2576%" y="965" width="0.0418%" height="15" fill="rgb(224,47,9)" fg:x="25962" fg:w="18"/><text x="60.5076%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (36 samples, 0.08%)</title><rect x="60.2251%" y="1029" width="0.0836%" height="15" fill="rgb(250,183,49)" fg:x="25948" fg:w="36"/><text x="60.4751%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.01%)</title><rect x="60.3365%" y="885" width="0.0116%" height="15" fill="rgb(220,151,39)" fg:x="25996" fg:w="5"/><text x="60.5865%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="60.3365%" y="869" width="0.0116%" height="15" fill="rgb(220,118,20)" fg:x="25996" fg:w="5"/><text x="60.5865%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (10 samples, 0.02%)</title><rect x="60.3342%" y="901" width="0.0232%" height="15" fill="rgb(231,65,51)" fg:x="25995" fg:w="10"/><text x="60.5842%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (14 samples, 0.03%)</title><rect x="60.3342%" y="981" width="0.0325%" height="15" fill="rgb(253,125,37)" fg:x="25995" fg:w="14"/><text x="60.5842%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (14 samples, 0.03%)</title><rect x="60.3342%" y="965" width="0.0325%" height="15" fill="rgb(232,102,6)" fg:x="25995" fg:w="14"/><text x="60.5842%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.03%)</title><rect x="60.3342%" y="949" width="0.0325%" height="15" fill="rgb(251,105,13)" fg:x="25995" fg:w="14"/><text x="60.5842%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (14 samples, 0.03%)</title><rect x="60.3342%" y="933" width="0.0325%" height="15" fill="rgb(222,179,29)" fg:x="25995" fg:w="14"/><text x="60.5842%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (14 samples, 0.03%)</title><rect x="60.3342%" y="917" width="0.0325%" height="15" fill="rgb(229,180,53)" fg:x="25995" fg:w="14"/><text x="60.5842%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (24 samples, 0.06%)</title><rect x="60.3203%" y="997" width="0.0557%" height="15" fill="rgb(238,104,13)" fg:x="25989" fg:w="24"/><text x="60.5703%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (30 samples, 0.07%)</title><rect x="60.3110%" y="1013" width="0.0696%" height="15" fill="rgb(210,130,5)" fg:x="25985" fg:w="30"/><text x="60.5610%" y="1023.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (34 samples, 0.08%)</title><rect x="60.3087%" y="1029" width="0.0789%" height="15" fill="rgb(233,87,49)" fg:x="25984" fg:w="34"/><text x="60.5587%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (5 samples, 0.01%)</title><rect x="60.3922%" y="1013" width="0.0116%" height="15" fill="rgb(243,34,9)" fg:x="26020" fg:w="5"/><text x="60.6422%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="60.4201%" y="949" width="0.0255%" height="15" fill="rgb(235,225,10)" fg:x="26032" fg:w="11"/><text x="60.6701%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="60.4201%" y="933" width="0.0255%" height="15" fill="rgb(212,0,30)" fg:x="26032" fg:w="11"/><text x="60.6701%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="60.4271%" y="917" width="0.0186%" height="15" fill="rgb(211,177,0)" fg:x="26035" fg:w="8"/><text x="60.6771%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="60.4155%" y="981" width="0.0348%" height="15" fill="rgb(225,220,11)" fg:x="26030" fg:w="15"/><text x="60.6655%" y="991.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (13 samples, 0.03%)</title><rect x="60.4201%" y="965" width="0.0302%" height="15" fill="rgb(215,10,13)" fg:x="26032" fg:w="13"/><text x="60.6701%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (34 samples, 0.08%)</title><rect x="60.3876%" y="1029" width="0.0789%" height="15" fill="rgb(240,177,14)" fg:x="26018" fg:w="34"/><text x="60.6376%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.06%)</title><rect x="60.4039%" y="1013" width="0.0627%" height="15" fill="rgb(243,7,39)" fg:x="26025" fg:w="27"/><text x="60.6539%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.05%)</title><rect x="60.4131%" y="997" width="0.0534%" height="15" fill="rgb(212,99,0)" fg:x="26029" fg:w="23"/><text x="60.6631%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (6 samples, 0.01%)</title><rect x="60.4526%" y="981" width="0.0139%" height="15" fill="rgb(225,162,48)" fg:x="26046" fg:w="6"/><text x="60.7026%" y="991.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical::_{{closure}} (5 samples, 0.01%)</title><rect x="60.4549%" y="965" width="0.0116%" height="15" fill="rgb(246,16,25)" fg:x="26047" fg:w="5"/><text x="60.7049%" y="975.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (125 samples, 0.29%)</title><rect x="60.1880%" y="1045" width="0.2901%" height="15" fill="rgb(220,150,2)" fg:x="25932" fg:w="125"/><text x="60.4380%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis&gt; (5 samples, 0.01%)</title><rect x="60.4781%" y="1045" width="0.0116%" height="15" fill="rgb(237,113,11)" fg:x="26057" fg:w="5"/><text x="60.7281%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (5 samples, 0.01%)</title><rect x="60.4781%" y="1029" width="0.0116%" height="15" fill="rgb(236,70,20)" fg:x="26057" fg:w="5"/><text x="60.7281%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.01%)</title><rect x="60.5269%" y="917" width="0.0116%" height="15" fill="rgb(234,94,7)" fg:x="26078" fg:w="5"/><text x="60.7769%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (13 samples, 0.03%)</title><rect x="60.5153%" y="949" width="0.0302%" height="15" fill="rgb(250,221,0)" fg:x="26073" fg:w="13"/><text x="60.7653%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (11 samples, 0.03%)</title><rect x="60.5199%" y="933" width="0.0255%" height="15" fill="rgb(245,149,46)" fg:x="26075" fg:w="11"/><text x="60.7699%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (5 samples, 0.01%)</title><rect x="60.6081%" y="885" width="0.0116%" height="15" fill="rgb(215,37,27)" fg:x="26113" fg:w="5"/><text x="60.8581%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.01%)</title><rect x="60.6638%" y="837" width="0.0116%" height="15" fill="rgb(232,65,3)" fg:x="26137" fg:w="5"/><text x="60.9138%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (23 samples, 0.05%)</title><rect x="60.6267%" y="885" width="0.0534%" height="15" fill="rgb(214,2,16)" fg:x="26121" fg:w="23"/><text x="60.8767%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.03%)</title><rect x="60.6452%" y="869" width="0.0348%" height="15" fill="rgb(227,131,50)" fg:x="26129" fg:w="15"/><text x="60.8952%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="60.6499%" y="853" width="0.0302%" height="15" fill="rgb(247,131,45)" fg:x="26131" fg:w="13"/><text x="60.8999%" y="863.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="60.6801%" y="885" width="0.0116%" height="15" fill="rgb(215,97,47)" fg:x="26144" fg:w="5"/><text x="60.9301%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (54 samples, 0.13%)</title><rect x="60.5686%" y="901" width="0.1253%" height="15" fill="rgb(233,143,12)" fg:x="26096" fg:w="54"/><text x="60.8186%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (59 samples, 0.14%)</title><rect x="60.5594%" y="917" width="0.1369%" height="15" fill="rgb(222,57,17)" fg:x="26092" fg:w="59"/><text x="60.8094%" y="927.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="60.6963%" y="917" width="0.0162%" height="15" fill="rgb(214,119,38)" fg:x="26151" fg:w="7"/><text x="60.9463%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (97 samples, 0.23%)</title><rect x="60.4897%" y="1029" width="0.2251%" height="15" fill="rgb(217,28,47)" fg:x="26062" fg:w="97"/><text x="60.7397%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.23%)</title><rect x="60.4897%" y="1013" width="0.2251%" height="15" fill="rgb(231,14,52)" fg:x="26062" fg:w="97"/><text x="60.7397%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (92 samples, 0.21%)</title><rect x="60.5013%" y="997" width="0.2135%" height="15" fill="rgb(220,158,18)" fg:x="26067" fg:w="92"/><text x="60.7513%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.21%)</title><rect x="60.5013%" y="981" width="0.2135%" height="15" fill="rgb(222,143,46)" fg:x="26067" fg:w="92"/><text x="60.7513%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (88 samples, 0.20%)</title><rect x="60.5106%" y="965" width="0.2042%" height="15" fill="rgb(227,165,5)" fg:x="26071" fg:w="88"/><text x="60.7606%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (73 samples, 0.17%)</title><rect x="60.5454%" y="949" width="0.1694%" height="15" fill="rgb(216,222,49)" fg:x="26086" fg:w="73"/><text x="60.7954%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (73 samples, 0.17%)</title><rect x="60.5454%" y="933" width="0.1694%" height="15" fill="rgb(238,73,39)" fg:x="26086" fg:w="73"/><text x="60.7954%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="60.7427%" y="885" width="0.0116%" height="15" fill="rgb(252,115,9)" fg:x="26171" fg:w="5"/><text x="60.9927%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="60.7427%" y="901" width="0.0139%" height="15" fill="rgb(238,202,4)" fg:x="26171" fg:w="6"/><text x="60.9927%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (12 samples, 0.03%)</title><rect x="60.7358%" y="933" width="0.0279%" height="15" fill="rgb(252,153,44)" fg:x="26168" fg:w="12"/><text x="60.9858%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (9 samples, 0.02%)</title><rect x="60.7427%" y="917" width="0.0209%" height="15" fill="rgb(235,128,27)" fg:x="26171" fg:w="9"/><text x="60.9927%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (6 samples, 0.01%)</title><rect x="60.7799%" y="869" width="0.0139%" height="15" fill="rgb(221,121,47)" fg:x="26187" fg:w="6"/><text x="61.0299%" y="879.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="60.8054%" y="869" width="0.0139%" height="15" fill="rgb(247,211,47)" fg:x="26198" fg:w="6"/><text x="61.0554%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (28 samples, 0.06%)</title><rect x="60.7706%" y="901" width="0.0650%" height="15" fill="rgb(252,47,49)" fg:x="26183" fg:w="28"/><text x="61.0206%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (28 samples, 0.06%)</title><rect x="60.7706%" y="885" width="0.0650%" height="15" fill="rgb(219,119,53)" fg:x="26183" fg:w="28"/><text x="61.0206%" y="895.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="60.8193%" y="869" width="0.0162%" height="15" fill="rgb(243,165,53)" fg:x="26204" fg:w="7"/><text x="61.0693%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (50 samples, 0.12%)</title><rect x="60.7311%" y="949" width="0.1160%" height="15" fill="rgb(230,12,35)" fg:x="26166" fg:w="50"/><text x="60.9811%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (36 samples, 0.08%)</title><rect x="60.7636%" y="933" width="0.0836%" height="15" fill="rgb(239,57,49)" fg:x="26180" fg:w="36"/><text x="61.0136%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (36 samples, 0.08%)</title><rect x="60.7636%" y="917" width="0.0836%" height="15" fill="rgb(231,154,7)" fg:x="26180" fg:w="36"/><text x="61.0136%" y="927.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="60.8356%" y="901" width="0.0116%" height="15" fill="rgb(248,81,34)" fg:x="26211" fg:w="5"/><text x="61.0856%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (6 samples, 0.01%)</title><rect x="60.8611%" y="805" width="0.0139%" height="15" fill="rgb(247,9,5)" fg:x="26222" fg:w="6"/><text x="61.1111%" y="815.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="60.8611%" y="789" width="0.0139%" height="15" fill="rgb(228,172,27)" fg:x="26222" fg:w="6"/><text x="61.1111%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="60.8634%" y="773" width="0.0116%" height="15" fill="rgb(230,57,44)" fg:x="26223" fg:w="5"/><text x="61.1134%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.01%)</title><rect x="60.8634%" y="757" width="0.0116%" height="15" fill="rgb(249,35,22)" fg:x="26223" fg:w="5"/><text x="61.1134%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (13 samples, 0.03%)</title><rect x="60.8472%" y="901" width="0.0302%" height="15" fill="rgb(250,137,27)" fg:x="26216" fg:w="13"/><text x="61.0972%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (13 samples, 0.03%)</title><rect x="60.8472%" y="885" width="0.0302%" height="15" fill="rgb(251,57,31)" fg:x="26216" fg:w="13"/><text x="61.0972%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="60.8472%" y="869" width="0.0302%" height="15" fill="rgb(238,60,0)" fg:x="26216" fg:w="13"/><text x="61.0972%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (9 samples, 0.02%)</title><rect x="60.8564%" y="853" width="0.0209%" height="15" fill="rgb(242,185,39)" fg:x="26220" fg:w="9"/><text x="61.1064%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="60.8564%" y="837" width="0.0209%" height="15" fill="rgb(240,63,43)" fg:x="26220" fg:w="9"/><text x="61.1064%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (9 samples, 0.02%)</title><rect x="60.8564%" y="821" width="0.0209%" height="15" fill="rgb(236,155,6)" fg:x="26220" fg:w="9"/><text x="61.1064%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (6 samples, 0.01%)</title><rect x="60.8866%" y="821" width="0.0139%" height="15" fill="rgb(215,11,29)" fg:x="26233" fg:w="6"/><text x="61.1366%" y="831.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.01%)</title><rect x="60.8889%" y="805" width="0.0116%" height="15" fill="rgb(228,180,48)" fg:x="26234" fg:w="5"/><text x="61.1389%" y="815.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="60.8889%" y="789" width="0.0116%" height="15" fill="rgb(241,102,12)" fg:x="26234" fg:w="5"/><text x="61.1389%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (5 samples, 0.01%)</title><rect x="60.8889%" y="773" width="0.0116%" height="15" fill="rgb(246,213,4)" fg:x="26234" fg:w="5"/><text x="61.1389%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.01%)</title><rect x="60.8889%" y="757" width="0.0116%" height="15" fill="rgb(218,134,35)" fg:x="26234" fg:w="5"/><text x="61.1389%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (183 samples, 0.42%)</title><rect x="60.4897%" y="1045" width="0.4247%" height="15" fill="rgb(251,117,35)" fg:x="26062" fg:w="183"/><text x="60.7397%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (86 samples, 0.20%)</title><rect x="60.7149%" y="1029" width="0.1996%" height="15" fill="rgb(206,156,45)" fg:x="26159" fg:w="86"/><text x="60.9649%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (86 samples, 0.20%)</title><rect x="60.7149%" y="1013" width="0.1996%" height="15" fill="rgb(218,52,27)" fg:x="26159" fg:w="86"/><text x="60.9649%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.20%)</title><rect x="60.7149%" y="997" width="0.1996%" height="15" fill="rgb(238,83,36)" fg:x="26159" fg:w="86"/><text x="60.9649%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (83 samples, 0.19%)</title><rect x="60.7218%" y="981" width="0.1926%" height="15" fill="rgb(218,53,43)" fg:x="26162" fg:w="83"/><text x="60.9718%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.19%)</title><rect x="60.7218%" y="965" width="0.1926%" height="15" fill="rgb(239,54,39)" fg:x="26162" fg:w="83"/><text x="60.9718%" y="975.50"></text></g><g><title>core::mem::drop (29 samples, 0.07%)</title><rect x="60.8472%" y="949" width="0.0673%" height="15" fill="rgb(212,198,13)" fg:x="26216" fg:w="29"/><text x="61.0972%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (29 samples, 0.07%)</title><rect x="60.8472%" y="933" width="0.0673%" height="15" fill="rgb(234,54,46)" fg:x="26216" fg:w="29"/><text x="61.0972%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (29 samples, 0.07%)</title><rect x="60.8472%" y="917" width="0.0673%" height="15" fill="rgb(217,120,7)" fg:x="26216" fg:w="29"/><text x="61.0972%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (16 samples, 0.04%)</title><rect x="60.8773%" y="901" width="0.0371%" height="15" fill="rgb(246,39,15)" fg:x="26229" fg:w="16"/><text x="61.1273%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (16 samples, 0.04%)</title><rect x="60.8773%" y="885" width="0.0371%" height="15" fill="rgb(242,143,31)" fg:x="26229" fg:w="16"/><text x="61.1273%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="60.8773%" y="869" width="0.0371%" height="15" fill="rgb(252,60,24)" fg:x="26229" fg:w="16"/><text x="61.1273%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="60.8866%" y="853" width="0.0279%" height="15" fill="rgb(249,220,7)" fg:x="26233" fg:w="12"/><text x="61.1366%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="60.8866%" y="837" width="0.0279%" height="15" fill="rgb(236,67,13)" fg:x="26233" fg:w="12"/><text x="61.1366%" y="847.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="60.9005%" y="821" width="0.0139%" height="15" fill="rgb(210,62,39)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (6 samples, 0.01%)</title><rect x="60.9005%" y="805" width="0.0139%" height="15" fill="rgb(219,122,53)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="60.9005%" y="789" width="0.0139%" height="15" fill="rgb(218,87,25)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (6 samples, 0.01%)</title><rect x="60.9005%" y="773" width="0.0139%" height="15" fill="rgb(234,179,48)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="60.9005%" y="757" width="0.0139%" height="15" fill="rgb(248,90,0)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (6 samples, 0.01%)</title><rect x="60.9005%" y="741" width="0.0139%" height="15" fill="rgb(207,228,37)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="60.9005%" y="725" width="0.0139%" height="15" fill="rgb(235,214,15)" fg:x="26239" fg:w="6"/><text x="61.1505%" y="735.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (486 samples, 1.13%)</title><rect x="59.7934%" y="1061" width="1.1280%" height="15" fill="rgb(210,144,39)" fg:x="25762" fg:w="486"/><text x="60.0434%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (9 samples, 0.02%)</title><rect x="60.9539%" y="1029" width="0.0209%" height="15" fill="rgb(222,67,41)" fg:x="26262" fg:w="9"/><text x="61.2039%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (9 samples, 0.02%)</title><rect x="60.9539%" y="1013" width="0.0209%" height="15" fill="rgb(205,35,37)" fg:x="26262" fg:w="9"/><text x="61.2039%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (7 samples, 0.02%)</title><rect x="60.9586%" y="997" width="0.0162%" height="15" fill="rgb(216,125,40)" fg:x="26264" fg:w="7"/><text x="61.2086%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (7 samples, 0.02%)</title><rect x="60.9586%" y="981" width="0.0162%" height="15" fill="rgb(228,227,20)" fg:x="26264" fg:w="7"/><text x="61.2086%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="60.9911%" y="869" width="0.0139%" height="15" fill="rgb(242,173,45)" fg:x="26278" fg:w="6"/><text x="61.2411%" y="879.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="60.9911%" y="853" width="0.0139%" height="15" fill="rgb(215,79,24)" fg:x="26278" fg:w="6"/><text x="61.2411%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="60.9887%" y="901" width="0.0186%" height="15" fill="rgb(238,164,38)" fg:x="26277" fg:w="8"/><text x="61.2387%" y="911.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="60.9911%" y="885" width="0.0162%" height="15" fill="rgb(245,196,38)" fg:x="26278" fg:w="7"/><text x="61.2411%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="60.9864%" y="933" width="0.0255%" height="15" fill="rgb(231,217,29)" fg:x="26276" fg:w="11"/><text x="61.2364%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="60.9887%" y="917" width="0.0232%" height="15" fill="rgb(245,6,4)" fg:x="26277" fg:w="10"/><text x="61.2387%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.03%)</title><rect x="60.9864%" y="965" width="0.0302%" height="15" fill="rgb(214,76,49)" fg:x="26276" fg:w="13"/><text x="61.2364%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (13 samples, 0.03%)</title><rect x="60.9864%" y="949" width="0.0302%" height="15" fill="rgb(205,96,12)" fg:x="26276" fg:w="13"/><text x="61.2364%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="61.0189%" y="901" width="0.0255%" height="15" fill="rgb(243,131,4)" fg:x="26290" fg:w="11"/><text x="61.2689%" y="911.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="61.0189%" y="885" width="0.0255%" height="15" fill="rgb(214,114,4)" fg:x="26290" fg:w="11"/><text x="61.2689%" y="895.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.02%)</title><rect x="61.0212%" y="869" width="0.0232%" height="15" fill="rgb(234,215,15)" fg:x="26291" fg:w="10"/><text x="61.2712%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="61.0166%" y="965" width="0.0302%" height="15" fill="rgb(250,216,45)" fg:x="26289" fg:w="13"/><text x="61.2666%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="61.0166%" y="949" width="0.0302%" height="15" fill="rgb(236,128,4)" fg:x="26289" fg:w="13"/><text x="61.2666%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="61.0166%" y="933" width="0.0302%" height="15" fill="rgb(234,50,33)" fg:x="26289" fg:w="13"/><text x="61.2666%" y="943.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.03%)</title><rect x="61.0189%" y="917" width="0.0279%" height="15" fill="rgb(253,131,37)" fg:x="26290" fg:w="12"/><text x="61.2689%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.04%)</title><rect x="61.0561%" y="965" width="0.0371%" height="15" fill="rgb(218,55,27)" fg:x="26306" fg:w="16"/><text x="61.3061%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="61.0561%" y="949" width="0.0371%" height="15" fill="rgb(241,220,28)" fg:x="26306" fg:w="16"/><text x="61.3061%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="61.0561%" y="933" width="0.0371%" height="15" fill="rgb(241,90,48)" fg:x="26306" fg:w="16"/><text x="61.3061%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.03%)</title><rect x="61.0584%" y="917" width="0.0348%" height="15" fill="rgb(216,43,37)" fg:x="26307" fg:w="15"/><text x="61.3084%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.02%)</title><rect x="61.0746%" y="901" width="0.0186%" height="15" fill="rgb(207,173,9)" fg:x="26314" fg:w="8"/><text x="61.3246%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.12%)</title><rect x="60.9795%" y="997" width="0.1160%" height="15" fill="rgb(240,126,30)" fg:x="26273" fg:w="50"/><text x="61.2295%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 0.11%)</title><rect x="60.9818%" y="981" width="0.1137%" height="15" fill="rgb(228,178,53)" fg:x="26274" fg:w="49"/><text x="61.2318%" y="991.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::blocks (62 samples, 0.14%)</title><rect x="60.9539%" y="1045" width="0.1439%" height="15" fill="rgb(217,33,4)" fg:x="26262" fg:w="62"/><text x="61.2039%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (51 samples, 0.12%)</title><rect x="60.9795%" y="1029" width="0.1184%" height="15" fill="rgb(206,124,34)" fg:x="26273" fg:w="51"/><text x="61.2295%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (51 samples, 0.12%)</title><rect x="60.9795%" y="1013" width="0.1184%" height="15" fill="rgb(208,122,53)" fg:x="26273" fg:w="51"/><text x="61.2295%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="61.1280%" y="1013" width="0.0139%" height="15" fill="rgb(215,202,26)" fg:x="26337" fg:w="6"/><text x="61.3780%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.03%)</title><rect x="61.1210%" y="1029" width="0.0255%" height="15" fill="rgb(232,198,31)" fg:x="26334" fg:w="11"/><text x="61.3710%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (13 samples, 0.03%)</title><rect x="61.1466%" y="1029" width="0.0302%" height="15" fill="rgb(222,23,35)" fg:x="26345" fg:w="13"/><text x="61.3966%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.03%)</title><rect x="61.1512%" y="1013" width="0.0255%" height="15" fill="rgb(242,27,53)" fg:x="26347" fg:w="11"/><text x="61.4012%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="61.2000%" y="933" width="0.0186%" height="15" fill="rgb(210,216,42)" fg:x="26368" fg:w="8"/><text x="61.4500%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (7 samples, 0.02%)</title><rect x="61.2185%" y="933" width="0.0162%" height="15" fill="rgb(234,39,38)" fg:x="26376" fg:w="7"/><text x="61.4685%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="61.2208%" y="917" width="0.0139%" height="15" fill="rgb(235,126,54)" fg:x="26377" fg:w="6"/><text x="61.4708%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (28 samples, 0.06%)</title><rect x="61.1767%" y="997" width="0.0650%" height="15" fill="rgb(235,150,33)" fg:x="26358" fg:w="28"/><text x="61.4267%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (23 samples, 0.05%)</title><rect x="61.1883%" y="981" width="0.0534%" height="15" fill="rgb(249,49,53)" fg:x="26363" fg:w="23"/><text x="61.4383%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.05%)</title><rect x="61.1907%" y="965" width="0.0511%" height="15" fill="rgb(238,60,50)" fg:x="26364" fg:w="22"/><text x="61.4407%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.05%)</title><rect x="61.1907%" y="949" width="0.0511%" height="15" fill="rgb(210,5,2)" fg:x="26364" fg:w="22"/><text x="61.4407%" y="959.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (29 samples, 0.07%)</title><rect x="61.1767%" y="1029" width="0.0673%" height="15" fill="rgb(214,207,24)" fg:x="26358" fg:w="29"/><text x="61.4267%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (29 samples, 0.07%)</title><rect x="61.1767%" y="1013" width="0.0673%" height="15" fill="rgb(228,173,2)" fg:x="26358" fg:w="29"/><text x="61.4267%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="61.2858%" y="933" width="0.0116%" height="15" fill="rgb(244,26,8)" fg:x="26405" fg:w="5"/><text x="61.5358%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="61.2974%" y="933" width="0.0139%" height="15" fill="rgb(249,153,35)" fg:x="26410" fg:w="6"/><text x="61.5474%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.08%)</title><rect x="61.2580%" y="981" width="0.0766%" height="15" fill="rgb(221,215,40)" fg:x="26393" fg:w="33"/><text x="61.5080%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (31 samples, 0.07%)</title><rect x="61.2626%" y="965" width="0.0720%" height="15" fill="rgb(238,106,35)" fg:x="26395" fg:w="31"/><text x="61.5126%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.06%)</title><rect x="61.2696%" y="949" width="0.0650%" height="15" fill="rgb(207,195,21)" fg:x="26398" fg:w="28"/><text x="61.5196%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (6 samples, 0.01%)</title><rect x="61.3206%" y="933" width="0.0139%" height="15" fill="rgb(205,43,29)" fg:x="26420" fg:w="6"/><text x="61.5706%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="61.3206%" y="917" width="0.0139%" height="15" fill="rgb(236,35,21)" fg:x="26420" fg:w="6"/><text x="61.5706%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (40 samples, 0.09%)</title><rect x="61.2441%" y="997" width="0.0928%" height="15" fill="rgb(244,74,8)" fg:x="26387" fg:w="40"/><text x="61.4941%" y="1007.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (42 samples, 0.10%)</title><rect x="61.2441%" y="1029" width="0.0975%" height="15" fill="rgb(241,229,7)" fg:x="26387" fg:w="42"/><text x="61.4941%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (42 samples, 0.10%)</title><rect x="61.2441%" y="1013" width="0.0975%" height="15" fill="rgb(212,223,25)" fg:x="26387" fg:w="42"/><text x="61.4941%" y="1023.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="61.3717%" y="1013" width="0.0116%" height="15" fill="rgb(234,58,53)" fg:x="26442" fg:w="5"/><text x="61.6217%" y="1023.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify_block (128 samples, 0.30%)</title><rect x="61.0978%" y="1045" width="0.2971%" height="15" fill="rgb(244,36,1)" fg:x="26324" fg:w="128"/><text x="61.3478%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (23 samples, 0.05%)</title><rect x="61.3415%" y="1029" width="0.0534%" height="15" fill="rgb(222,40,54)" fg:x="26429" fg:w="23"/><text x="61.5915%" y="1039.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (5 samples, 0.01%)</title><rect x="61.3833%" y="1013" width="0.0116%" height="15" fill="rgb(210,207,39)" fg:x="26447" fg:w="5"/><text x="61.6333%" y="1023.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (5 samples, 0.01%)</title><rect x="61.3972%" y="1013" width="0.0116%" height="15" fill="rgb(234,52,14)" fg:x="26453" fg:w="5"/><text x="61.6472%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u16&gt;&gt; (14 samples, 0.03%)</title><rect x="61.3949%" y="1045" width="0.0325%" height="15" fill="rgb(239,108,46)" fg:x="26452" fg:w="14"/><text x="61.6449%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="61.3949%" y="1029" width="0.0325%" height="15" fill="rgb(252,223,5)" fg:x="26452" fg:w="14"/><text x="61.6449%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u16,alloc::alloc::Global&gt;&gt; (8 samples, 0.02%)</title><rect x="61.4088%" y="1013" width="0.0186%" height="15" fill="rgb(227,181,11)" fg:x="26458" fg:w="8"/><text x="61.6588%" y="1023.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="61.4088%" y="997" width="0.0186%" height="15" fill="rgb(248,126,40)" fg:x="26458" fg:w="8"/><text x="61.6588%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (6 samples, 0.01%)</title><rect x="61.4135%" y="981" width="0.0139%" height="15" fill="rgb(243,1,18)" fg:x="26460" fg:w="6"/><text x="61.6635%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="61.4135%" y="965" width="0.0139%" height="15" fill="rgb(214,145,23)" fg:x="26460" fg:w="6"/><text x="61.6635%" y="975.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify (219 samples, 0.51%)</title><rect x="60.9214%" y="1061" width="0.5083%" height="15" fill="rgb(241,218,11)" fg:x="26248" fg:w="219"/><text x="61.1714%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="61.4437%" y="1045" width="0.0279%" height="15" fill="rgb(214,219,24)" fg:x="26473" fg:w="12"/><text x="61.6937%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (11 samples, 0.03%)</title><rect x="61.4460%" y="1029" width="0.0255%" height="15" fill="rgb(235,32,7)" fg:x="26474" fg:w="11"/><text x="61.6960%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="61.4831%" y="1029" width="0.0255%" height="15" fill="rgb(227,121,28)" fg:x="26490" fg:w="11"/><text x="61.7331%" y="1039.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.01%)</title><rect x="61.4947%" y="1013" width="0.0139%" height="15" fill="rgb(216,129,49)" fg:x="26495" fg:w="6"/><text x="61.7447%" y="1023.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.01%)</title><rect x="61.4947%" y="997" width="0.0139%" height="15" fill="rgb(207,194,50)" fg:x="26495" fg:w="6"/><text x="61.7447%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (17 samples, 0.04%)</title><rect x="61.4762%" y="1045" width="0.0395%" height="15" fill="rgb(207,4,18)" fg:x="26487" fg:w="17"/><text x="61.7262%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="61.5388%" y="965" width="0.0116%" height="15" fill="rgb(213,50,30)" fg:x="26514" fg:w="5"/><text x="61.7888%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.01%)</title><rect x="61.5388%" y="949" width="0.0116%" height="15" fill="rgb(208,77,22)" fg:x="26514" fg:w="5"/><text x="61.7888%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="61.5365%" y="997" width="0.0395%" height="15" fill="rgb(244,204,34)" fg:x="26513" fg:w="17"/><text x="61.7865%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.04%)</title><rect x="61.5365%" y="981" width="0.0395%" height="15" fill="rgb(230,20,17)" fg:x="26513" fg:w="17"/><text x="61.7865%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="61.5620%" y="965" width="0.0139%" height="15" fill="rgb(237,83,15)" fg:x="26524" fg:w="6"/><text x="61.8120%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="61.5620%" y="949" width="0.0139%" height="15" fill="rgb(221,109,25)" fg:x="26524" fg:w="6"/><text x="61.8120%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="61.5620%" y="933" width="0.0139%" height="15" fill="rgb(205,194,52)" fg:x="26524" fg:w="6"/><text x="61.8120%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="61.5620%" y="917" width="0.0139%" height="15" fill="rgb(244,173,54)" fg:x="26524" fg:w="6"/><text x="61.8120%" y="927.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::blocks (22 samples, 0.05%)</title><rect x="61.5272%" y="1045" width="0.0511%" height="15" fill="rgb(227,181,18)" fg:x="26509" fg:w="22"/><text x="61.7772%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.04%)</title><rect x="61.5342%" y="1029" width="0.0441%" height="15" fill="rgb(238,36,30)" fg:x="26512" fg:w="19"/><text x="61.7842%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="61.5342%" y="1013" width="0.0441%" height="15" fill="rgb(254,85,0)" fg:x="26512" fg:w="19"/><text x="61.7842%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="61.5945%" y="933" width="0.0279%" height="15" fill="rgb(247,63,33)" fg:x="26538" fg:w="12"/><text x="61.8445%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="61.6038%" y="917" width="0.0186%" height="15" fill="rgb(220,7,54)" fg:x="26542" fg:w="8"/><text x="61.8538%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (26 samples, 0.06%)</title><rect x="61.5829%" y="997" width="0.0603%" height="15" fill="rgb(238,227,21)" fg:x="26533" fg:w="26"/><text x="61.8329%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (24 samples, 0.06%)</title><rect x="61.5876%" y="981" width="0.0557%" height="15" fill="rgb(237,29,31)" fg:x="26535" fg:w="24"/><text x="61.8376%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.05%)</title><rect x="61.5922%" y="965" width="0.0511%" height="15" fill="rgb(211,21,50)" fg:x="26537" fg:w="22"/><text x="61.8422%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.05%)</title><rect x="61.5922%" y="949" width="0.0511%" height="15" fill="rgb(239,119,2)" fg:x="26537" fg:w="22"/><text x="61.8422%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="61.6317%" y="933" width="0.0116%" height="15" fill="rgb(250,2,39)" fg:x="26554" fg:w="5"/><text x="61.8817%" y="943.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (27 samples, 0.06%)</title><rect x="61.5829%" y="1029" width="0.0627%" height="15" fill="rgb(244,46,53)" fg:x="26533" fg:w="27"/><text x="61.8329%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (27 samples, 0.06%)</title><rect x="61.5829%" y="1013" width="0.0627%" height="15" fill="rgb(209,21,19)" fg:x="26533" fg:w="27"/><text x="61.8329%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="61.6595%" y="933" width="0.0232%" height="15" fill="rgb(236,145,4)" fg:x="26566" fg:w="10"/><text x="61.9095%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="61.6665%" y="917" width="0.0162%" height="15" fill="rgb(220,133,36)" fg:x="26569" fg:w="7"/><text x="61.9165%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (27 samples, 0.06%)</title><rect x="61.6456%" y="997" width="0.0627%" height="15" fill="rgb(244,18,3)" fg:x="26560" fg:w="27"/><text x="61.8956%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.06%)</title><rect x="61.6479%" y="981" width="0.0603%" height="15" fill="rgb(232,171,48)" fg:x="26561" fg:w="26"/><text x="61.8979%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.05%)</title><rect x="61.6572%" y="965" width="0.0511%" height="15" fill="rgb(223,223,53)" fg:x="26565" fg:w="22"/><text x="61.9072%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.05%)</title><rect x="61.6572%" y="949" width="0.0511%" height="15" fill="rgb(246,92,13)" fg:x="26565" fg:w="22"/><text x="61.9072%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="61.6966%" y="933" width="0.0116%" height="15" fill="rgb(229,171,10)" fg:x="26582" fg:w="5"/><text x="61.9466%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="61.6966%" y="917" width="0.0116%" height="15" fill="rgb(213,131,26)" fg:x="26582" fg:w="5"/><text x="61.9466%" y="927.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (28 samples, 0.06%)</title><rect x="61.6456%" y="1029" width="0.0650%" height="15" fill="rgb(242,87,54)" fg:x="26560" fg:w="28"/><text x="61.8956%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (28 samples, 0.06%)</title><rect x="61.6456%" y="1013" width="0.0650%" height="15" fill="rgb(237,21,35)" fg:x="26560" fg:w="28"/><text x="61.8956%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="61.7222%" y="965" width="0.0116%" height="15" fill="rgb(253,13,47)" fg:x="26593" fg:w="5"/><text x="61.9722%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.03%)</title><rect x="61.7175%" y="997" width="0.0279%" height="15" fill="rgb(215,122,49)" fg:x="26591" fg:w="12"/><text x="61.9675%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="61.7199%" y="981" width="0.0255%" height="15" fill="rgb(209,179,30)" fg:x="26592" fg:w="11"/><text x="61.9699%" y="991.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (74 samples, 0.17%)</title><rect x="61.5783%" y="1045" width="0.1718%" height="15" fill="rgb(235,100,24)" fg:x="26531" fg:w="74"/><text x="61.8283%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.04%)</title><rect x="61.7106%" y="1029" width="0.0395%" height="15" fill="rgb(209,67,24)" fg:x="26588" fg:w="17"/><text x="61.9606%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.04%)</title><rect x="61.7106%" y="1013" width="0.0395%" height="15" fill="rgb(206,74,32)" fg:x="26588" fg:w="17"/><text x="61.9606%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="61.7756%" y="1013" width="0.0209%" height="15" fill="rgb(212,45,25)" fg:x="26616" fg:w="9"/><text x="62.0256%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="61.7779%" y="997" width="0.0186%" height="15" fill="rgb(239,26,3)" fg:x="26617" fg:w="8"/><text x="62.0279%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (21 samples, 0.05%)</title><rect x="61.7547%" y="1045" width="0.0487%" height="15" fill="rgb(218,36,15)" fg:x="26607" fg:w="21"/><text x="62.0047%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.04%)</title><rect x="61.7593%" y="1029" width="0.0441%" height="15" fill="rgb(206,108,24)" fg:x="26609" fg:w="19"/><text x="62.0093%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u16&gt;&gt; (9 samples, 0.02%)</title><rect x="61.8034%" y="1045" width="0.0209%" height="15" fill="rgb(234,204,42)" fg:x="26628" fg:w="9"/><text x="62.0534%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="61.8034%" y="1029" width="0.0209%" height="15" fill="rgb(229,2,11)" fg:x="26628" fg:w="9"/><text x="62.0534%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u16,alloc::alloc::Global&gt;&gt; (8 samples, 0.02%)</title><rect x="61.8057%" y="1013" width="0.0186%" height="15" fill="rgb(221,20,48)" fg:x="26629" fg:w="8"/><text x="62.0557%" y="1023.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="61.8057%" y="997" width="0.0186%" height="15" fill="rgb(244,164,10)" fg:x="26629" fg:w="8"/><text x="62.0557%" y="1007.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (1,737 samples, 4.03%)</title><rect x="57.7997%" y="1077" width="4.0316%" height="15" fill="rgb(243,229,2)" fg:x="24903" fg:w="1737"/><text x="58.0497%" y="1087.50">byte..</text></g><g><title>bytecode_verifier::type_safety::verify (173 samples, 0.40%)</title><rect x="61.4297%" y="1061" width="0.4015%" height="15" fill="rgb(232,131,37)" fg:x="26467" fg:w="173"/><text x="61.6797%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.02%)</title><rect x="61.8429%" y="997" width="0.0232%" height="15" fill="rgb(217,156,11)" fg:x="26645" fg:w="10"/><text x="62.0929%" y="1007.50"></text></g><g><title>core::mem::take (8 samples, 0.02%)</title><rect x="61.8475%" y="981" width="0.0186%" height="15" fill="rgb(239,99,48)" fg:x="26647" fg:w="8"/><text x="62.0975%" y="991.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="61.8522%" y="965" width="0.0139%" height="15" fill="rgb(231,209,9)" fg:x="26649" fg:w="6"/><text x="62.1022%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (9 samples, 0.02%)</title><rect x="61.8916%" y="917" width="0.0209%" height="15" fill="rgb(254,97,27)" fg:x="26666" fg:w="9"/><text x="62.1416%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.04%)</title><rect x="61.8777%" y="949" width="0.0418%" height="15" fill="rgb(223,151,38)" fg:x="26660" fg:w="18"/><text x="62.1277%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (13 samples, 0.03%)</title><rect x="61.8893%" y="933" width="0.0302%" height="15" fill="rgb(219,206,35)" fg:x="26665" fg:w="13"/><text x="62.1393%" y="943.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (5 samples, 0.01%)</title><rect x="61.9311%" y="885" width="0.0116%" height="15" fill="rgb(216,130,31)" fg:x="26683" fg:w="5"/><text x="62.1811%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (7 samples, 0.02%)</title><rect x="61.9473%" y="885" width="0.0162%" height="15" fill="rgb(251,97,34)" fg:x="26690" fg:w="7"/><text x="62.1973%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (7 samples, 0.02%)</title><rect x="61.9659%" y="885" width="0.0162%" height="15" fill="rgb(246,159,47)" fg:x="26698" fg:w="7"/><text x="62.2159%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="61.9705%" y="869" width="0.0116%" height="15" fill="rgb(232,87,10)" fg:x="26700" fg:w="5"/><text x="62.2205%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (27 samples, 0.06%)</title><rect x="61.9264%" y="901" width="0.0627%" height="15" fill="rgb(249,1,37)" fg:x="26681" fg:w="27"/><text x="62.1764%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (28 samples, 0.06%)</title><rect x="61.9264%" y="917" width="0.0650%" height="15" fill="rgb(239,135,14)" fg:x="26681" fg:w="28"/><text x="62.1764%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (33 samples, 0.08%)</title><rect x="61.9195%" y="949" width="0.0766%" height="15" fill="rgb(253,116,46)" fg:x="26678" fg:w="33"/><text x="62.1695%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (33 samples, 0.08%)</title><rect x="61.9195%" y="933" width="0.0766%" height="15" fill="rgb(222,217,37)" fg:x="26678" fg:w="33"/><text x="62.1695%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (54 samples, 0.13%)</title><rect x="61.8730%" y="965" width="0.1253%" height="15" fill="rgb(252,96,8)" fg:x="26658" fg:w="54"/><text x="62.1230%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::binary_views::FunctionView&gt; (78 samples, 0.18%)</title><rect x="61.8336%" y="1061" width="0.1810%" height="15" fill="rgb(254,103,41)" fg:x="26641" fg:w="78"/><text x="62.0836%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::control_flow_graph::VMControlFlowGraph&gt; (78 samples, 0.18%)</title><rect x="61.8336%" y="1045" width="0.1810%" height="15" fill="rgb(218,213,19)" fg:x="26641" fg:w="78"/><text x="62.0836%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,move_binary_format::control_flow_graph::BasicBlock&gt;&gt; (78 samples, 0.18%)</title><rect x="61.8336%" y="1029" width="0.1810%" height="15" fill="rgb(253,95,21)" fg:x="26641" fg:w="78"/><text x="62.0836%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.18%)</title><rect x="61.8336%" y="1013" width="0.1810%" height="15" fill="rgb(229,26,28)" fg:x="26641" fg:w="78"/><text x="62.0836%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u16,move_binary_format::control_flow_graph::BasicBlock&gt;&gt; (64 samples, 0.15%)</title><rect x="61.8661%" y="997" width="0.1485%" height="15" fill="rgb(230,129,16)" fg:x="26655" fg:w="64"/><text x="62.1161%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.15%)</title><rect x="61.8661%" y="981" width="0.1485%" height="15" fill="rgb(236,126,17)" fg:x="26655" fg:w="64"/><text x="62.1161%" y="991.50"></text></g><g><title>core::mem::drop (7 samples, 0.02%)</title><rect x="61.9984%" y="965" width="0.0162%" height="15" fill="rgb(209,33,33)" fg:x="26712" fg:w="7"/><text x="62.2484%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,move_binary_format::control_flow_graph::BasicBlock)&gt; (7 samples, 0.02%)</title><rect x="61.9984%" y="949" width="0.0162%" height="15" fill="rgb(227,85,29)" fg:x="26712" fg:w="7"/><text x="62.2484%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::control_flow_graph::BasicBlock&gt; (7 samples, 0.02%)</title><rect x="61.9984%" y="933" width="0.0162%" height="15" fill="rgb(241,53,46)" fg:x="26712" fg:w="7"/><text x="62.2484%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (7 samples, 0.02%)</title><rect x="61.9984%" y="917" width="0.0162%" height="15" fill="rgb(228,167,53)" fg:x="26712" fg:w="7"/><text x="62.2484%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (5 samples, 0.01%)</title><rect x="62.0030%" y="901" width="0.0116%" height="15" fill="rgb(238,195,45)" fg:x="26714" fg:w="5"/><text x="62.2530%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="62.0030%" y="885" width="0.0116%" height="15" fill="rgb(252,124,45)" fg:x="26714" fg:w="5"/><text x="62.2530%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::code_unit_verifier::CodeUnitVerifier&gt; (83 samples, 0.19%)</title><rect x="61.8336%" y="1077" width="0.1926%" height="15" fill="rgb(251,38,35)" fg:x="26641" fg:w="83"/><text x="62.0836%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex&gt;&gt; (5 samples, 0.01%)</title><rect x="62.0146%" y="1061" width="0.0116%" height="15" fill="rgb(227,33,2)" fg:x="26719" fg:w="5"/><text x="62.2646%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.01%)</title><rect x="62.0146%" y="1045" width="0.0116%" height="15" fill="rgb(223,157,46)" fg:x="26719" fg:w="5"/><text x="62.2646%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex)&gt;&gt; (5 samples, 0.01%)</title><rect x="62.0146%" y="1029" width="0.0116%" height="15" fill="rgb(222,78,41)" fg:x="26719" fg:w="5"/><text x="62.2646%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="62.0146%" y="1013" width="0.0116%" height="15" fill="rgb(248,176,11)" fg:x="26719" fg:w="5"/><text x="62.2646%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.01%)</title><rect x="62.0146%" y="997" width="0.0116%" height="15" fill="rgb(241,221,18)" fg:x="26719" fg:w="5"/><text x="62.2646%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.02%)</title><rect x="62.0587%" y="1029" width="0.0162%" height="15" fill="rgb(218,85,22)" fg:x="26738" fg:w="7"/><text x="62.3087%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="62.0634%" y="1013" width="0.0116%" height="15" fill="rgb(222,223,7)" fg:x="26740" fg:w="5"/><text x="62.3134%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.03%)</title><rect x="62.0494%" y="1061" width="0.0279%" height="15" fill="rgb(254,59,39)" fg:x="26734" fg:w="12"/><text x="62.2994%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.02%)</title><rect x="62.0587%" y="1045" width="0.0186%" height="15" fill="rgb(247,100,27)" fg:x="26738" fg:w="8"/><text x="62.3087%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (22 samples, 0.05%)</title><rect x="62.0355%" y="1077" width="0.0511%" height="15" fill="rgb(237,207,10)" fg:x="26728" fg:w="22"/><text x="62.2855%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="62.0866%" y="1061" width="0.0116%" height="15" fill="rgb(220,121,28)" fg:x="26750" fg:w="5"/><text x="62.3366%" y="1071.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (5 samples, 0.01%)</title><rect x="62.0982%" y="1061" width="0.0116%" height="15" fill="rgb(213,223,20)" fg:x="26755" fg:w="5"/><text x="62.3482%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="62.0982%" y="1045" width="0.0116%" height="15" fill="rgb(205,121,27)" fg:x="26755" fg:w="5"/><text x="62.3482%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="62.1608%" y="933" width="0.0186%" height="15" fill="rgb(253,24,53)" fg:x="26782" fg:w="8"/><text x="62.4108%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (8 samples, 0.02%)</title><rect x="62.1608%" y="917" width="0.0186%" height="15" fill="rgb(224,224,47)" fg:x="26782" fg:w="8"/><text x="62.4108%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.02%)</title><rect x="62.1632%" y="901" width="0.0162%" height="15" fill="rgb(250,125,36)" fg:x="26783" fg:w="7"/><text x="62.4132%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="62.1678%" y="885" width="0.0116%" height="15" fill="rgb(240,144,38)" fg:x="26785" fg:w="5"/><text x="62.4178%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (9 samples, 0.02%)</title><rect x="62.1608%" y="1013" width="0.0209%" height="15" fill="rgb(250,15,50)" fg:x="26782" fg:w="9"/><text x="62.4108%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (9 samples, 0.02%)</title><rect x="62.1608%" y="997" width="0.0209%" height="15" fill="rgb(210,24,26)" fg:x="26782" fg:w="9"/><text x="62.4108%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="62.1608%" y="981" width="0.0209%" height="15" fill="rgb(234,53,53)" fg:x="26782" fg:w="9"/><text x="62.4108%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (9 samples, 0.02%)</title><rect x="62.1608%" y="965" width="0.0209%" height="15" fill="rgb(208,108,28)" fg:x="26782" fg:w="9"/><text x="62.4108%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9 samples, 0.02%)</title><rect x="62.1608%" y="949" width="0.0209%" height="15" fill="rgb(227,143,7)" fg:x="26782" fg:w="9"/><text x="62.4108%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="62.2003%" y="965" width="0.0325%" height="15" fill="rgb(238,189,38)" fg:x="26799" fg:w="14"/><text x="62.4503%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="62.2119%" y="949" width="0.0209%" height="15" fill="rgb(222,69,15)" fg:x="26804" fg:w="9"/><text x="62.4619%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="62.2328%" y="965" width="0.0116%" height="15" fill="rgb(213,169,7)" fg:x="26813" fg:w="5"/><text x="62.4828%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="62.2328%" y="949" width="0.0116%" height="15" fill="rgb(251,219,4)" fg:x="26813" fg:w="5"/><text x="62.4828%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="62.2328%" y="933" width="0.0116%" height="15" fill="rgb(241,55,40)" fg:x="26813" fg:w="5"/><text x="62.4828%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.07%)</title><rect x="62.1817%" y="1013" width="0.0696%" height="15" fill="rgb(243,57,30)" fg:x="26791" fg:w="30"/><text x="62.4317%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.06%)</title><rect x="62.1864%" y="997" width="0.0650%" height="15" fill="rgb(234,50,30)" fg:x="26793" fg:w="28"/><text x="62.4364%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.06%)</title><rect x="62.1887%" y="981" width="0.0627%" height="15" fill="rgb(239,23,42)" fg:x="26794" fg:w="27"/><text x="62.4387%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (44 samples, 0.10%)</title><rect x="62.1516%" y="1029" width="0.1021%" height="15" fill="rgb(217,38,19)" fg:x="26778" fg:w="44"/><text x="62.4016%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (7 samples, 0.02%)</title><rect x="62.2955%" y="933" width="0.0162%" height="15" fill="rgb(215,179,16)" fg:x="26840" fg:w="7"/><text x="62.5455%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.01%)</title><rect x="62.2978%" y="917" width="0.0139%" height="15" fill="rgb(254,21,37)" fg:x="26841" fg:w="6"/><text x="62.5478%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (8 samples, 0.02%)</title><rect x="62.2955%" y="965" width="0.0186%" height="15" fill="rgb(219,207,48)" fg:x="26840" fg:w="8"/><text x="62.5455%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (8 samples, 0.02%)</title><rect x="62.2955%" y="949" width="0.0186%" height="15" fill="rgb(227,225,41)" fg:x="26840" fg:w="8"/><text x="62.5455%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (23 samples, 0.05%)</title><rect x="62.2723%" y="981" width="0.0534%" height="15" fill="rgb(223,130,1)" fg:x="26830" fg:w="23"/><text x="62.5223%" y="991.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (5 samples, 0.01%)</title><rect x="62.3140%" y="965" width="0.0116%" height="15" fill="rgb(249,54,42)" fg:x="26848" fg:w="5"/><text x="62.5640%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (83 samples, 0.19%)</title><rect x="62.1492%" y="1045" width="0.1926%" height="15" fill="rgb(248,69,25)" fg:x="26777" fg:w="83"/><text x="62.3992%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (38 samples, 0.09%)</title><rect x="62.2537%" y="1029" width="0.0882%" height="15" fill="rgb(234,21,32)" fg:x="26822" fg:w="38"/><text x="62.5037%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (37 samples, 0.09%)</title><rect x="62.2560%" y="1013" width="0.0859%" height="15" fill="rgb(252,136,6)" fg:x="26823" fg:w="37"/><text x="62.5060%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (30 samples, 0.07%)</title><rect x="62.2723%" y="997" width="0.0696%" height="15" fill="rgb(245,87,12)" fg:x="26830" fg:w="30"/><text x="62.5223%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="62.3744%" y="853" width="0.0139%" height="15" fill="rgb(208,12,15)" fg:x="26874" fg:w="6"/><text x="62.6244%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="62.3744%" y="837" width="0.0139%" height="15" fill="rgb(250,98,2)" fg:x="26874" fg:w="6"/><text x="62.6244%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.02%)</title><rect x="62.3721%" y="869" width="0.0232%" height="15" fill="rgb(205,213,15)" fg:x="26873" fg:w="10"/><text x="62.6221%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.03%)</title><rect x="62.3721%" y="901" width="0.0255%" height="15" fill="rgb(248,192,44)" fg:x="26873" fg:w="11"/><text x="62.6221%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.03%)</title><rect x="62.3721%" y="885" width="0.0255%" height="15" fill="rgb(221,89,17)" fg:x="26873" fg:w="11"/><text x="62.6221%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (19 samples, 0.04%)</title><rect x="62.3628%" y="997" width="0.0441%" height="15" fill="rgb(209,55,3)" fg:x="26869" fg:w="19"/><text x="62.6128%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (19 samples, 0.04%)</title><rect x="62.3628%" y="981" width="0.0441%" height="15" fill="rgb(247,23,45)" fg:x="26869" fg:w="19"/><text x="62.6128%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.04%)</title><rect x="62.3674%" y="965" width="0.0395%" height="15" fill="rgb(235,152,23)" fg:x="26871" fg:w="17"/><text x="62.6174%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (17 samples, 0.04%)</title><rect x="62.3674%" y="949" width="0.0395%" height="15" fill="rgb(244,63,13)" fg:x="26871" fg:w="17"/><text x="62.6174%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (17 samples, 0.04%)</title><rect x="62.3674%" y="933" width="0.0395%" height="15" fill="rgb(227,30,37)" fg:x="26871" fg:w="17"/><text x="62.6174%" y="943.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.04%)</title><rect x="62.3697%" y="917" width="0.0371%" height="15" fill="rgb(224,49,42)" fg:x="26872" fg:w="16"/><text x="62.6197%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (34 samples, 0.08%)</title><rect x="62.3512%" y="1013" width="0.0789%" height="15" fill="rgb(218,129,5)" fg:x="26864" fg:w="34"/><text x="62.6012%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.02%)</title><rect x="62.4069%" y="997" width="0.0232%" height="15" fill="rgb(240,199,54)" fg:x="26888" fg:w="10"/><text x="62.6569%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="62.4115%" y="981" width="0.0186%" height="15" fill="rgb(234,31,13)" fg:x="26890" fg:w="8"/><text x="62.6615%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.02%)</title><rect x="62.4138%" y="965" width="0.0162%" height="15" fill="rgb(219,73,54)" fg:x="26891" fg:w="7"/><text x="62.6638%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (6 samples, 0.01%)</title><rect x="62.4440%" y="949" width="0.0139%" height="15" fill="rgb(251,162,10)" fg:x="26904" fg:w="6"/><text x="62.6940%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="62.4603%" y="949" width="0.0139%" height="15" fill="rgb(240,138,47)" fg:x="26911" fg:w="6"/><text x="62.7103%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (16 samples, 0.04%)</title><rect x="62.4440%" y="965" width="0.0371%" height="15" fill="rgb(216,138,26)" fg:x="26904" fg:w="16"/><text x="62.6940%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (60 samples, 0.14%)</title><rect x="62.3442%" y="1029" width="0.1393%" height="15" fill="rgb(243,17,35)" fg:x="26861" fg:w="60"/><text x="62.5942%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (23 samples, 0.05%)</title><rect x="62.4301%" y="1013" width="0.0534%" height="15" fill="rgb(241,60,18)" fg:x="26898" fg:w="23"/><text x="62.6801%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.05%)</title><rect x="62.4301%" y="997" width="0.0534%" height="15" fill="rgb(234,2,44)" fg:x="26898" fg:w="23"/><text x="62.6801%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (18 samples, 0.04%)</title><rect x="62.4417%" y="981" width="0.0418%" height="15" fill="rgb(225,225,33)" fg:x="26903" fg:w="18"/><text x="62.6917%" y="991.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (62 samples, 0.14%)</title><rect x="62.3442%" y="1045" width="0.1439%" height="15" fill="rgb(234,50,31)" fg:x="26861" fg:w="62"/><text x="62.5942%" y="1055.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.02%)</title><rect x="62.5044%" y="1029" width="0.0162%" height="15" fill="rgb(249,6,25)" fg:x="26930" fg:w="7"/><text x="62.7544%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.01%)</title><rect x="62.5252%" y="1029" width="0.0116%" height="15" fill="rgb(241,5,17)" fg:x="26939" fg:w="5"/><text x="62.7752%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (25 samples, 0.06%)</title><rect x="62.4881%" y="1045" width="0.0580%" height="15" fill="rgb(207,116,10)" fg:x="26923" fg:w="25"/><text x="62.7381%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="62.5624%" y="949" width="0.0116%" height="15" fill="rgb(222,128,18)" fg:x="26955" fg:w="5"/><text x="62.8124%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (5 samples, 0.01%)</title><rect x="62.5949%" y="885" width="0.0116%" height="15" fill="rgb(229,109,25)" fg:x="26969" fg:w="5"/><text x="62.8449%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="62.6158%" y="885" width="0.0139%" height="15" fill="rgb(222,102,25)" fg:x="26978" fg:w="6"/><text x="62.8658%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="62.6181%" y="869" width="0.0116%" height="15" fill="rgb(239,211,5)" fg:x="26979" fg:w="5"/><text x="62.8681%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (19 samples, 0.04%)</title><rect x="62.5879%" y="901" width="0.0441%" height="15" fill="rgb(223,136,26)" fg:x="26966" fg:w="19"/><text x="62.8379%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (21 samples, 0.05%)</title><rect x="62.5856%" y="917" width="0.0487%" height="15" fill="rgb(227,30,15)" fg:x="26965" fg:w="21"/><text x="62.8356%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (27 samples, 0.06%)</title><rect x="62.5740%" y="949" width="0.0627%" height="15" fill="rgb(247,76,4)" fg:x="26960" fg:w="27"/><text x="62.8240%" y="959.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.06%)</title><rect x="62.5740%" y="933" width="0.0627%" height="15" fill="rgb(245,38,48)" fg:x="26960" fg:w="27"/><text x="62.8240%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;u16&gt;&gt; (40 samples, 0.09%)</title><rect x="62.5461%" y="1045" width="0.0928%" height="15" fill="rgb(210,220,14)" fg:x="26948" fg:w="40"/><text x="62.7961%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,()&gt;&gt; (40 samples, 0.09%)</title><rect x="62.5461%" y="1029" width="0.0928%" height="15" fill="rgb(224,60,51)" fg:x="26948" fg:w="40"/><text x="62.7961%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.09%)</title><rect x="62.5461%" y="1013" width="0.0928%" height="15" fill="rgb(212,133,49)" fg:x="26948" fg:w="40"/><text x="62.7961%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u16,()&gt;&gt; (35 samples, 0.08%)</title><rect x="62.5577%" y="997" width="0.0812%" height="15" fill="rgb(231,39,22)" fg:x="26953" fg:w="35"/><text x="62.8077%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.08%)</title><rect x="62.5577%" y="981" width="0.0812%" height="15" fill="rgb(236,173,22)" fg:x="26953" fg:w="35"/><text x="62.8077%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (33 samples, 0.08%)</title><rect x="62.5624%" y="965" width="0.0766%" height="15" fill="rgb(210,70,0)" fg:x="26955" fg:w="33"/><text x="62.8124%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.01%)</title><rect x="62.6807%" y="981" width="0.0139%" height="15" fill="rgb(215,170,11)" fg:x="27006" fg:w="6"/><text x="62.9307%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (10 samples, 0.02%)</title><rect x="62.7388%" y="965" width="0.0232%" height="15" fill="rgb(220,154,28)" fg:x="27031" fg:w="10"/><text x="62.9888%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.01%)</title><rect x="62.8896%" y="917" width="0.0139%" height="15" fill="rgb(240,160,41)" fg:x="27096" fg:w="6"/><text x="63.1396%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.01%)</title><rect x="62.8920%" y="901" width="0.0116%" height="15" fill="rgb(243,215,41)" fg:x="27097" fg:w="5"/><text x="63.1420%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.03%)</title><rect x="62.9384%" y="901" width="0.0255%" height="15" fill="rgb(214,208,31)" fg:x="27117" fg:w="11"/><text x="63.1884%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.03%)</title><rect x="62.9639%" y="901" width="0.0325%" height="15" fill="rgb(247,57,22)" fg:x="27128" fg:w="14"/><text x="63.2139%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.02%)</title><rect x="62.9802%" y="885" width="0.0162%" height="15" fill="rgb(228,73,52)" fg:x="27135" fg:w="7"/><text x="63.2302%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.17%)</title><rect x="62.8386%" y="933" width="0.1694%" height="15" fill="rgb(252,60,9)" fg:x="27074" fg:w="73"/><text x="63.0886%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.10%)</title><rect x="62.9036%" y="917" width="0.1044%" height="15" fill="rgb(233,9,51)" fg:x="27102" fg:w="45"/><text x="63.1536%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.03%)</title><rect x="63.0103%" y="933" width="0.0302%" height="15" fill="rgb(223,67,14)" fg:x="27148" fg:w="13"/><text x="63.2603%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="63.0266%" y="917" width="0.0139%" height="15" fill="rgb(222,86,2)" fg:x="27155" fg:w="6"/><text x="63.2766%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u16&gt;::cmp (5 samples, 0.01%)</title><rect x="63.0405%" y="933" width="0.0116%" height="15" fill="rgb(243,58,54)" fg:x="27161" fg:w="5"/><text x="63.2905%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (165 samples, 0.38%)</title><rect x="62.6970%" y="981" width="0.3830%" height="15" fill="rgb(210,200,39)" fg:x="27013" fg:w="165"/><text x="62.9470%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (137 samples, 0.32%)</title><rect x="62.7620%" y="965" width="0.3180%" height="15" fill="rgb(238,135,9)" fg:x="27041" fg:w="137"/><text x="63.0120%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (130 samples, 0.30%)</title><rect x="62.7782%" y="949" width="0.3017%" height="15" fill="rgb(232,179,7)" fg:x="27048" fg:w="130"/><text x="63.0282%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.03%)</title><rect x="63.0544%" y="933" width="0.0255%" height="15" fill="rgb(245,65,41)" fg:x="27167" fg:w="11"/><text x="63.3044%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="63.0544%" y="917" width="0.0255%" height="15" fill="rgb(227,43,8)" fg:x="27167" fg:w="11"/><text x="63.3044%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (182 samples, 0.42%)</title><rect x="62.6599%" y="997" width="0.4224%" height="15" fill="rgb(235,91,14)" fg:x="26997" fg:w="182"/><text x="62.9099%" y="1007.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::is_end_of_block (193 samples, 0.45%)</title><rect x="62.6390%" y="1045" width="0.4480%" height="15" fill="rgb(235,219,31)" fg:x="26988" fg:w="193"/><text x="62.8890%" y="1055.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (188 samples, 0.44%)</title><rect x="62.6506%" y="1029" width="0.4363%" height="15" fill="rgb(227,121,25)" fg:x="26993" fg:w="188"/><text x="62.9006%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (186 samples, 0.43%)</title><rect x="62.6552%" y="1013" width="0.4317%" height="15" fill="rgb(254,129,24)" fg:x="26995" fg:w="186"/><text x="62.9052%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="63.1287%" y="933" width="0.0464%" height="15" fill="rgb(226,144,49)" fg:x="27199" fg:w="20"/><text x="63.3787%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="63.1426%" y="917" width="0.0325%" height="15" fill="rgb(214,187,32)" fg:x="27205" fg:w="14"/><text x="63.3926%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="63.1635%" y="901" width="0.0116%" height="15" fill="rgb(243,129,46)" fg:x="27214" fg:w="5"/><text x="63.4135%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (41 samples, 0.10%)</title><rect x="63.1032%" y="981" width="0.0952%" height="15" fill="rgb(221,185,35)" fg:x="27188" fg:w="41"/><text x="63.3532%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (38 samples, 0.09%)</title><rect x="63.1101%" y="965" width="0.0882%" height="15" fill="rgb(205,0,32)" fg:x="27191" fg:w="38"/><text x="63.3601%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 0.08%)</title><rect x="63.1171%" y="949" width="0.0812%" height="15" fill="rgb(229,179,12)" fg:x="27194" fg:w="35"/><text x="63.3671%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.02%)</title><rect x="63.1821%" y="933" width="0.0162%" height="15" fill="rgb(252,107,19)" fg:x="27222" fg:w="7"/><text x="63.4321%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="63.1821%" y="917" width="0.0162%" height="15" fill="rgb(220,95,27)" fg:x="27222" fg:w="7"/><text x="63.4321%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (44 samples, 0.10%)</title><rect x="63.0985%" y="997" width="0.1021%" height="15" fill="rgb(240,113,40)" fg:x="27186" fg:w="44"/><text x="63.3485%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (6 samples, 0.01%)</title><rect x="63.2308%" y="933" width="0.0139%" height="15" fill="rgb(208,4,43)" fg:x="27243" fg:w="6"/><text x="63.4808%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (13 samples, 0.03%)</title><rect x="63.2215%" y="949" width="0.0302%" height="15" fill="rgb(247,189,30)" fg:x="27239" fg:w="13"/><text x="63.4715%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (18 samples, 0.04%)</title><rect x="63.2123%" y="981" width="0.0418%" height="15" fill="rgb(231,157,17)" fg:x="27235" fg:w="18"/><text x="63.4623%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (17 samples, 0.04%)</title><rect x="63.2146%" y="965" width="0.0395%" height="15" fill="rgb(224,139,6)" fg:x="27236" fg:w="17"/><text x="63.4646%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (71 samples, 0.16%)</title><rect x="63.0916%" y="1029" width="0.1648%" height="15" fill="rgb(223,83,16)" fg:x="27183" fg:w="71"/><text x="63.3416%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (69 samples, 0.16%)</title><rect x="63.0962%" y="1013" width="0.1601%" height="15" fill="rgb(232,211,20)" fg:x="27185" fg:w="69"/><text x="63.3462%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (21 samples, 0.05%)</title><rect x="63.2076%" y="997" width="0.0487%" height="15" fill="rgb(225,203,35)" fg:x="27233" fg:w="21"/><text x="63.4576%" y="1007.50"></text></g><g><title>move_binary_format::file_format::Bytecode::is_branch (6 samples, 0.01%)</title><rect x="63.2564%" y="1029" width="0.0139%" height="15" fill="rgb(215,211,44)" fg:x="27254" fg:w="6"/><text x="63.5064%" y="1039.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::record_block_ids (81 samples, 0.19%)</title><rect x="63.0869%" y="1045" width="0.1880%" height="15" fill="rgb(248,213,26)" fg:x="27181" fg:w="81"/><text x="63.3369%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="63.3051%" y="949" width="0.0186%" height="15" fill="rgb(214,23,52)" fg:x="27275" fg:w="8"/><text x="63.5551%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="63.3051%" y="933" width="0.0186%" height="15" fill="rgb(225,173,50)" fg:x="27275" fg:w="8"/><text x="63.5551%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="63.3051%" y="917" width="0.0186%" height="15" fill="rgb(206,150,22)" fg:x="27275" fg:w="8"/><text x="63.5551%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="63.3237%" y="949" width="0.0116%" height="15" fill="rgb(239,64,23)" fg:x="27283" fg:w="5"/><text x="63.5737%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.05%)</title><rect x="63.2981%" y="1029" width="0.0464%" height="15" fill="rgb(242,50,38)" fg:x="27272" fg:w="20"/><text x="63.5481%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.04%)</title><rect x="63.3005%" y="1013" width="0.0441%" height="15" fill="rgb(217,91,15)" fg:x="27273" fg:w="19"/><text x="63.5505%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="63.3028%" y="997" width="0.0418%" height="15" fill="rgb(230,172,6)" fg:x="27274" fg:w="18"/><text x="63.5528%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.04%)</title><rect x="63.3028%" y="981" width="0.0418%" height="15" fill="rgb(221,98,26)" fg:x="27274" fg:w="18"/><text x="63.5528%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.04%)</title><rect x="63.3028%" y="965" width="0.0418%" height="15" fill="rgb(227,210,45)" fg:x="27274" fg:w="18"/><text x="63.5528%" y="975.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (551 samples, 1.28%)</title><rect x="62.0866%" y="1077" width="1.2789%" height="15" fill="rgb(206,8,30)" fg:x="26750" fg:w="551"/><text x="62.3366%" y="1087.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (541 samples, 1.26%)</title><rect x="62.1098%" y="1061" width="1.2557%" height="15" fill="rgb(241,219,17)" fg:x="26760" fg:w="541"/><text x="62.3598%" y="1071.50"></text></g><g><title>move_binary_format::file_format::Bytecode::get_successors (39 samples, 0.09%)</title><rect x="63.2749%" y="1045" width="0.0905%" height="15" fill="rgb(247,121,29)" fg:x="27262" fg:w="39"/><text x="63.5249%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (5 samples, 0.01%)</title><rect x="63.3538%" y="1029" width="0.0116%" height="15" fill="rgb(219,169,49)" fg:x="27296" fg:w="5"/><text x="63.6038%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="63.4142%" y="933" width="0.0255%" height="15" fill="rgb(253,49,49)" fg:x="27322" fg:w="11"/><text x="63.6642%" y="943.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (17 samples, 0.04%)</title><rect x="63.4026%" y="1029" width="0.0395%" height="15" fill="rgb(217,178,3)" fg:x="27317" fg:w="17"/><text x="63.6526%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (17 samples, 0.04%)</title><rect x="63.4026%" y="1013" width="0.0395%" height="15" fill="rgb(234,73,37)" fg:x="27317" fg:w="17"/><text x="63.6526%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u16 (16 samples, 0.04%)</title><rect x="63.4049%" y="997" width="0.0371%" height="15" fill="rgb(250,98,22)" fg:x="27318" fg:w="16"/><text x="63.6549%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="63.4095%" y="981" width="0.0325%" height="15" fill="rgb(220,108,37)" fg:x="27320" fg:w="14"/><text x="63.6595%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="63.4095%" y="965" width="0.0325%" height="15" fill="rgb(225,168,10)" fg:x="27320" fg:w="14"/><text x="63.6595%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="63.4095%" y="949" width="0.0325%" height="15" fill="rgb(247,215,21)" fg:x="27320" fg:w="14"/><text x="63.6595%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.03%)</title><rect x="63.4722%" y="965" width="0.0279%" height="15" fill="rgb(253,189,31)" fg:x="27347" fg:w="12"/><text x="63.7222%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.05%)</title><rect x="63.4490%" y="981" width="0.0534%" height="15" fill="rgb(241,54,22)" fg:x="27337" fg:w="23"/><text x="63.6990%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.05%)</title><rect x="63.5650%" y="965" width="0.0487%" height="15" fill="rgb(211,87,4)" fg:x="27387" fg:w="21"/><text x="63.8150%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (76 samples, 0.18%)</title><rect x="63.4420%" y="1029" width="0.1764%" height="15" fill="rgb(245,112,24)" fg:x="27334" fg:w="76"/><text x="63.6920%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (76 samples, 0.18%)</title><rect x="63.4420%" y="1013" width="0.1764%" height="15" fill="rgb(235,190,41)" fg:x="27334" fg:w="76"/><text x="63.6920%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (75 samples, 0.17%)</title><rect x="63.4444%" y="997" width="0.1741%" height="15" fill="rgb(214,89,8)" fg:x="27335" fg:w="75"/><text x="63.6944%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (50 samples, 0.12%)</title><rect x="63.5024%" y="981" width="0.1160%" height="15" fill="rgb(249,155,35)" fg:x="27360" fg:w="50"/><text x="63.7524%" y="991.50"></text></g><g><title>hashbrown::map::make_insert_hash (107 samples, 0.25%)</title><rect x="63.4026%" y="1045" width="0.2483%" height="15" fill="rgb(249,88,26)" fg:x="27317" fg:w="107"/><text x="63.6526%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.03%)</title><rect x="63.6184%" y="1029" width="0.0325%" height="15" fill="rgb(232,56,8)" fg:x="27410" fg:w="14"/><text x="63.8684%" y="1039.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.03%)</title><rect x="63.6254%" y="1013" width="0.0255%" height="15" fill="rgb(240,95,3)" fg:x="27413" fg:w="11"/><text x="63.8754%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="63.7066%" y="981" width="0.0186%" height="15" fill="rgb(222,44,28)" fg:x="27448" fg:w="8"/><text x="63.9566%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (17 samples, 0.04%)</title><rect x="63.7461%" y="949" width="0.0395%" height="15" fill="rgb(234,16,30)" fg:x="27465" fg:w="17"/><text x="63.9961%" y="959.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.02%)</title><rect x="63.7693%" y="933" width="0.0162%" height="15" fill="rgb(223,26,17)" fg:x="27475" fg:w="7"/><text x="64.0193%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.03%)</title><rect x="63.7855%" y="949" width="0.0279%" height="15" fill="rgb(239,187,47)" fg:x="27482" fg:w="12"/><text x="64.0355%" y="959.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (8 samples, 0.02%)</title><rect x="63.7948%" y="933" width="0.0186%" height="15" fill="rgb(247,102,50)" fg:x="27486" fg:w="8"/><text x="64.0448%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.17%)</title><rect x="63.6741%" y="1013" width="0.1671%" height="15" fill="rgb(231,216,22)" fg:x="27434" fg:w="72"/><text x="63.9241%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.16%)</title><rect x="63.6765%" y="997" width="0.1648%" height="15" fill="rgb(216,201,26)" fg:x="27435" fg:w="71"/><text x="63.9265%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (48 samples, 0.11%)</title><rect x="63.7298%" y="981" width="0.1114%" height="15" fill="rgb(214,186,23)" fg:x="27458" fg:w="48"/><text x="63.9798%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (46 samples, 0.11%)</title><rect x="63.7345%" y="965" width="0.1068%" height="15" fill="rgb(235,184,4)" fg:x="27460" fg:w="46"/><text x="63.9845%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.03%)</title><rect x="63.8134%" y="949" width="0.0279%" height="15" fill="rgb(244,46,17)" fg:x="27494" fg:w="12"/><text x="64.0634%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.02%)</title><rect x="63.8180%" y="933" width="0.0232%" height="15" fill="rgb(248,74,46)" fg:x="27496" fg:w="10"/><text x="64.0680%" y="943.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.01%)</title><rect x="63.8273%" y="917" width="0.0139%" height="15" fill="rgb(243,79,5)" fg:x="27500" fg:w="6"/><text x="64.0773%" y="927.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.02%)</title><rect x="63.8807%" y="965" width="0.0232%" height="15" fill="rgb(213,148,1)" fg:x="27523" fg:w="10"/><text x="64.1307%" y="975.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="63.8853%" y="949" width="0.0186%" height="15" fill="rgb(221,30,0)" fg:x="27525" fg:w="8"/><text x="64.1353%" y="959.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="63.8900%" y="933" width="0.0139%" height="15" fill="rgb(207,85,29)" fg:x="27527" fg:w="6"/><text x="64.1400%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.02%)</title><rect x="63.9039%" y="965" width="0.0209%" height="15" fill="rgb(239,31,46)" fg:x="27533" fg:w="9"/><text x="64.1539%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="63.9109%" y="949" width="0.0139%" height="15" fill="rgb(219,6,1)" fg:x="27536" fg:w="6"/><text x="64.1609%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (9 samples, 0.02%)</title><rect x="63.9550%" y="949" width="0.0209%" height="15" fill="rgb(229,90,29)" fg:x="27555" fg:w="9"/><text x="64.2050%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (68 samples, 0.16%)</title><rect x="63.8575%" y="981" width="0.1578%" height="15" fill="rgb(242,201,42)" fg:x="27513" fg:w="68"/><text x="64.1075%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (39 samples, 0.09%)</title><rect x="63.9248%" y="965" width="0.0905%" height="15" fill="rgb(243,80,54)" fg:x="27542" fg:w="39"/><text x="64.1748%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.03%)</title><rect x="63.9851%" y="949" width="0.0302%" height="15" fill="rgb(223,166,15)" fg:x="27568" fg:w="13"/><text x="64.2351%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.02%)</title><rect x="63.9991%" y="933" width="0.0162%" height="15" fill="rgb(238,78,27)" fg:x="27574" fg:w="7"/><text x="64.2491%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (72 samples, 0.17%)</title><rect x="63.8505%" y="1013" width="0.1671%" height="15" fill="rgb(235,28,43)" fg:x="27510" fg:w="72"/><text x="64.1005%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (72 samples, 0.17%)</title><rect x="63.8505%" y="997" width="0.1671%" height="15" fill="rgb(240,210,28)" fg:x="27510" fg:w="72"/><text x="64.1005%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (159 samples, 0.37%)</title><rect x="63.6509%" y="1045" width="0.3690%" height="15" fill="rgb(253,6,46)" fg:x="27424" fg:w="159"/><text x="63.9009%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (158 samples, 0.37%)</title><rect x="63.6532%" y="1029" width="0.3667%" height="15" fill="rgb(250,159,47)" fg:x="27425" fg:w="158"/><text x="63.9032%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.01%)</title><rect x="64.0501%" y="1013" width="0.0116%" height="15" fill="rgb(216,139,2)" fg:x="27596" fg:w="5"/><text x="64.3001%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (20 samples, 0.05%)</title><rect x="64.0432%" y="1029" width="0.0464%" height="15" fill="rgb(221,124,44)" fg:x="27593" fg:w="20"/><text x="64.2932%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.03%)</title><rect x="64.0617%" y="1013" width="0.0279%" height="15" fill="rgb(205,37,22)" fg:x="27601" fg:w="12"/><text x="64.3117%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.02%)</title><rect x="64.0710%" y="997" width="0.0186%" height="15" fill="rgb(250,55,8)" fg:x="27605" fg:w="8"/><text x="64.3210%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="64.0919%" y="1013" width="0.0255%" height="15" fill="rgb(215,83,48)" fg:x="27614" fg:w="11"/><text x="64.3419%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (13 samples, 0.03%)</title><rect x="64.0896%" y="1029" width="0.0302%" height="15" fill="rgb(253,2,32)" fg:x="27613" fg:w="13"/><text x="64.3396%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (7 samples, 0.02%)</title><rect x="64.1917%" y="949" width="0.0162%" height="15" fill="rgb(236,67,28)" fg:x="27657" fg:w="7"/><text x="64.4417%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.01%)</title><rect x="64.1964%" y="933" width="0.0116%" height="15" fill="rgb(252,55,15)" fg:x="27659" fg:w="5"/><text x="64.4464%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="64.1639%" y="981" width="0.0580%" height="15" fill="rgb(243,173,17)" fg:x="27645" fg:w="25"/><text x="64.4139%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="64.1801%" y="965" width="0.0418%" height="15" fill="rgb(215,212,13)" fg:x="27652" fg:w="18"/><text x="64.4301%" y="975.50"></text></g><g><title>core::mem::swap (6 samples, 0.01%)</title><rect x="64.2219%" y="981" width="0.0139%" height="15" fill="rgb(253,176,6)" fg:x="27670" fg:w="6"/><text x="64.4719%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.01%)</title><rect x="64.2219%" y="965" width="0.0139%" height="15" fill="rgb(236,105,26)" fg:x="27670" fg:w="6"/><text x="64.4719%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping (5 samples, 0.01%)</title><rect x="64.2242%" y="949" width="0.0116%" height="15" fill="rgb(239,226,32)" fg:x="27671" fg:w="5"/><text x="64.4742%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (10 samples, 0.02%)</title><rect x="64.2358%" y="981" width="0.0232%" height="15" fill="rgb(236,104,51)" fg:x="27676" fg:w="10"/><text x="64.4858%" y="991.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="64.2358%" y="965" width="0.0232%" height="15" fill="rgb(220,172,33)" fg:x="27676" fg:w="10"/><text x="64.4858%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (10 samples, 0.02%)</title><rect x="64.2358%" y="949" width="0.0232%" height="15" fill="rgb(224,182,25)" fg:x="27676" fg:w="10"/><text x="64.4858%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (10 samples, 0.02%)</title><rect x="64.2358%" y="933" width="0.0232%" height="15" fill="rgb(236,184,24)" fg:x="27676" fg:w="10"/><text x="64.4858%" y="943.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (6 samples, 0.01%)</title><rect x="64.2451%" y="917" width="0.0139%" height="15" fill="rgb(241,221,14)" fg:x="27680" fg:w="6"/><text x="64.4951%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="64.2869%" y="837" width="0.0116%" height="15" fill="rgb(227,146,5)" fg:x="27698" fg:w="5"/><text x="64.5369%" y="847.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (16 samples, 0.04%)</title><rect x="64.2637%" y="949" width="0.0371%" height="15" fill="rgb(214,15,23)" fg:x="27688" fg:w="16"/><text x="64.5137%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (16 samples, 0.04%)</title><rect x="64.2637%" y="933" width="0.0371%" height="15" fill="rgb(233,157,31)" fg:x="27688" fg:w="16"/><text x="64.5137%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u16 (16 samples, 0.04%)</title><rect x="64.2637%" y="917" width="0.0371%" height="15" fill="rgb(211,27,52)" fg:x="27688" fg:w="16"/><text x="64.5137%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="64.2683%" y="901" width="0.0325%" height="15" fill="rgb(212,223,15)" fg:x="27690" fg:w="14"/><text x="64.5183%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="64.2683%" y="885" width="0.0325%" height="15" fill="rgb(254,211,0)" fg:x="27690" fg:w="14"/><text x="64.5183%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="64.2683%" y="869" width="0.0325%" height="15" fill="rgb(205,43,38)" fg:x="27690" fg:w="14"/><text x="64.5183%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.03%)</title><rect x="64.2729%" y="853" width="0.0279%" height="15" fill="rgb(242,206,46)" fg:x="27692" fg:w="12"/><text x="64.5229%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="64.3310%" y="885" width="0.0139%" height="15" fill="rgb(220,221,12)" fg:x="27717" fg:w="6"/><text x="64.5810%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.03%)</title><rect x="64.3194%" y="901" width="0.0279%" height="15" fill="rgb(217,156,35)" fg:x="27712" fg:w="12"/><text x="64.5694%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.06%)</title><rect x="64.3867%" y="885" width="0.0580%" height="15" fill="rgb(207,181,49)" fg:x="27741" fg:w="25"/><text x="64.6367%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (69 samples, 0.16%)</title><rect x="64.3008%" y="949" width="0.1601%" height="15" fill="rgb(235,103,47)" fg:x="27704" fg:w="69"/><text x="64.5508%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (68 samples, 0.16%)</title><rect x="64.3031%" y="933" width="0.1578%" height="15" fill="rgb(222,63,28)" fg:x="27705" fg:w="68"/><text x="64.5531%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (67 samples, 0.16%)</title><rect x="64.3054%" y="917" width="0.1555%" height="15" fill="rgb(244,137,21)" fg:x="27706" fg:w="67"/><text x="64.5554%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (49 samples, 0.11%)</title><rect x="64.3472%" y="901" width="0.1137%" height="15" fill="rgb(228,35,27)" fg:x="27724" fg:w="49"/><text x="64.5972%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="64.4447%" y="885" width="0.0162%" height="15" fill="rgb(226,191,41)" fg:x="27766" fg:w="7"/><text x="64.6947%" y="895.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (95 samples, 0.22%)</title><rect x="64.2590%" y="981" width="0.2205%" height="15" fill="rgb(210,154,3)" fg:x="27686" fg:w="95"/><text x="64.5090%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (95 samples, 0.22%)</title><rect x="64.2590%" y="965" width="0.2205%" height="15" fill="rgb(216,60,49)" fg:x="27686" fg:w="95"/><text x="64.5090%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.02%)</title><rect x="64.4609%" y="949" width="0.0186%" height="15" fill="rgb(226,17,20)" fg:x="27773" fg:w="8"/><text x="64.7109%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (6 samples, 0.01%)</title><rect x="64.4656%" y="933" width="0.0139%" height="15" fill="rgb(206,115,35)" fg:x="27775" fg:w="6"/><text x="64.7156%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="64.4818%" y="949" width="0.0139%" height="15" fill="rgb(227,88,1)" fg:x="27782" fg:w="6"/><text x="64.7318%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="64.4795%" y="981" width="0.0186%" height="15" fill="rgb(230,222,24)" fg:x="27781" fg:w="8"/><text x="64.7295%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (8 samples, 0.02%)</title><rect x="64.4795%" y="965" width="0.0186%" height="15" fill="rgb(214,124,32)" fg:x="27781" fg:w="8"/><text x="64.7295%" y="975.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (8 samples, 0.02%)</title><rect x="64.5236%" y="933" width="0.0186%" height="15" fill="rgb(240,41,36)" fg:x="27800" fg:w="8"/><text x="64.7736%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (7 samples, 0.02%)</title><rect x="64.5259%" y="917" width="0.0162%" height="15" fill="rgb(221,17,52)" fg:x="27801" fg:w="7"/><text x="64.7759%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (22 samples, 0.05%)</title><rect x="64.4981%" y="981" width="0.0511%" height="15" fill="rgb(252,70,16)" fg:x="27789" fg:w="22"/><text x="64.7481%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.04%)</title><rect x="64.5120%" y="965" width="0.0371%" height="15" fill="rgb(250,177,4)" fg:x="27795" fg:w="16"/><text x="64.7620%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.04%)</title><rect x="64.5120%" y="949" width="0.0371%" height="15" fill="rgb(240,188,47)" fg:x="27795" fg:w="16"/><text x="64.7620%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="64.5608%" y="965" width="0.0162%" height="15" fill="rgb(215,92,12)" fg:x="27816" fg:w="7"/><text x="64.8108%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (14 samples, 0.03%)</title><rect x="64.5491%" y="981" width="0.0325%" height="15" fill="rgb(242,110,29)" fg:x="27811" fg:w="14"/><text x="64.7991%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (11 samples, 0.03%)</title><rect x="64.5816%" y="981" width="0.0255%" height="15" fill="rgb(208,211,26)" fg:x="27825" fg:w="11"/><text x="64.8316%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (10 samples, 0.02%)</title><rect x="64.5840%" y="965" width="0.0232%" height="15" fill="rgb(244,147,6)" fg:x="27826" fg:w="10"/><text x="64.8340%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="64.5932%" y="949" width="0.0139%" height="15" fill="rgb(211,130,42)" fg:x="27830" fg:w="6"/><text x="64.8432%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (8 samples, 0.02%)</title><rect x="64.6629%" y="949" width="0.0186%" height="15" fill="rgb(220,63,1)" fg:x="27860" fg:w="8"/><text x="64.9129%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.02%)</title><rect x="64.6652%" y="933" width="0.0162%" height="15" fill="rgb(241,212,30)" fg:x="27861" fg:w="7"/><text x="64.9152%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.02%)</title><rect x="64.6838%" y="949" width="0.0232%" height="15" fill="rgb(233,153,17)" fg:x="27869" fg:w="10"/><text x="64.9338%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.02%)</title><rect x="64.7116%" y="949" width="0.0232%" height="15" fill="rgb(236,3,10)" fg:x="27881" fg:w="10"/><text x="64.9616%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.02%)</title><rect x="64.7186%" y="933" width="0.0162%" height="15" fill="rgb(232,41,21)" fg:x="27884" fg:w="7"/><text x="64.9686%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (65 samples, 0.15%)</title><rect x="64.6304%" y="965" width="0.1509%" height="15" fill="rgb(206,63,51)" fg:x="27846" fg:w="65"/><text x="64.8804%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (20 samples, 0.05%)</title><rect x="64.7348%" y="949" width="0.0464%" height="15" fill="rgb(250,214,3)" fg:x="27891" fg:w="20"/><text x="64.9848%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.04%)</title><rect x="64.7441%" y="933" width="0.0371%" height="15" fill="rgb(254,89,27)" fg:x="27895" fg:w="16"/><text x="64.9941%" y="943.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.02%)</title><rect x="64.7650%" y="917" width="0.0162%" height="15" fill="rgb(249,41,14)" fg:x="27904" fg:w="7"/><text x="65.0150%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (7 samples, 0.02%)</title><rect x="64.7812%" y="949" width="0.0162%" height="15" fill="rgb(221,196,51)" fg:x="27911" fg:w="7"/><text x="65.0312%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (93 samples, 0.22%)</title><rect x="64.6072%" y="981" width="0.2159%" height="15" fill="rgb(214,116,26)" fg:x="27836" fg:w="93"/><text x="64.8572%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (18 samples, 0.04%)</title><rect x="64.7812%" y="965" width="0.0418%" height="15" fill="rgb(236,67,7)" fg:x="27911" fg:w="18"/><text x="65.0312%" y="975.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.03%)</title><rect x="64.7975%" y="949" width="0.0255%" height="15" fill="rgb(253,179,32)" fg:x="27918" fg:w="11"/><text x="65.0475%" y="959.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="64.8091%" y="933" width="0.0139%" height="15" fill="rgb(218,33,15)" fg:x="27923" fg:w="6"/><text x="65.0591%" y="943.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="64.8091%" y="917" width="0.0139%" height="15" fill="rgb(217,202,41)" fg:x="27923" fg:w="6"/><text x="65.0591%" y="927.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (9 samples, 0.02%)</title><rect x="64.8741%" y="933" width="0.0209%" height="15" fill="rgb(234,133,5)" fg:x="27951" fg:w="9"/><text x="65.1241%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (19 samples, 0.04%)</title><rect x="64.8694%" y="949" width="0.0441%" height="15" fill="rgb(240,47,40)" fg:x="27949" fg:w="19"/><text x="65.1194%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.02%)</title><rect x="64.8950%" y="933" width="0.0186%" height="15" fill="rgb(234,166,26)" fg:x="27960" fg:w="8"/><text x="65.1450%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (34 samples, 0.08%)</title><rect x="64.8416%" y="965" width="0.0789%" height="15" fill="rgb(244,125,51)" fg:x="27937" fg:w="34"/><text x="65.0916%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (43 samples, 0.10%)</title><rect x="64.8230%" y="981" width="0.0998%" height="15" fill="rgb(229,171,11)" fg:x="27929" fg:w="43"/><text x="65.0730%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (344 samples, 0.80%)</title><rect x="64.1314%" y="997" width="0.7984%" height="15" fill="rgb(224,38,45)" fg:x="27631" fg:w="344"/><text x="64.3814%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (350 samples, 0.81%)</title><rect x="64.1198%" y="1029" width="0.8123%" height="15" fill="rgb(237,27,7)" fg:x="27626" fg:w="350"/><text x="64.3698%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (349 samples, 0.81%)</title><rect x="64.1221%" y="1013" width="0.8100%" height="15" fill="rgb(216,52,7)" fg:x="27627" fg:w="349"/><text x="64.3721%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (10 samples, 0.02%)</title><rect x="64.9716%" y="1013" width="0.0232%" height="15" fill="rgb(243,11,11)" fg:x="27993" fg:w="10"/><text x="65.2216%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.02%)</title><rect x="64.9785%" y="997" width="0.0162%" height="15" fill="rgb(253,167,20)" fg:x="27996" fg:w="7"/><text x="65.2285%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.03%)</title><rect x="64.9971%" y="1013" width="0.0302%" height="15" fill="rgb(215,207,5)" fg:x="28004" fg:w="13"/><text x="65.2471%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (5 samples, 0.01%)</title><rect x="65.0157%" y="997" width="0.0116%" height="15" fill="rgb(252,127,31)" fg:x="28012" fg:w="5"/><text x="65.2657%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.03%)</title><rect x="65.0319%" y="1013" width="0.0255%" height="15" fill="rgb(209,106,27)" fg:x="28019" fg:w="11"/><text x="65.2819%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.02%)</title><rect x="65.0389%" y="997" width="0.0186%" height="15" fill="rgb(214,220,18)" fg:x="28022" fg:w="8"/><text x="65.2889%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (63 samples, 0.15%)</title><rect x="64.9344%" y="1029" width="0.1462%" height="15" fill="rgb(237,89,12)" fg:x="27977" fg:w="63"/><text x="65.1844%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (10 samples, 0.02%)</title><rect x="65.0574%" y="1013" width="0.0232%" height="15" fill="rgb(209,167,36)" fg:x="28030" fg:w="10"/><text x="65.3074%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="65.0644%" y="997" width="0.0162%" height="15" fill="rgb(243,45,22)" fg:x="28033" fg:w="7"/><text x="65.3144%" y="1007.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (5 samples, 0.01%)</title><rect x="65.0690%" y="981" width="0.0116%" height="15" fill="rgb(239,2,46)" fg:x="28035" fg:w="5"/><text x="65.3190%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (8 samples, 0.02%)</title><rect x="65.0876%" y="997" width="0.0186%" height="15" fill="rgb(241,101,0)" fg:x="28043" fg:w="8"/><text x="65.3376%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (5 samples, 0.01%)</title><rect x="65.0946%" y="981" width="0.0116%" height="15" fill="rgb(244,34,31)" fg:x="28046" fg:w="5"/><text x="65.3446%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (14 samples, 0.03%)</title><rect x="65.0853%" y="1013" width="0.0325%" height="15" fill="rgb(248,23,22)" fg:x="28042" fg:w="14"/><text x="65.3353%" y="1023.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.01%)</title><rect x="65.1062%" y="997" width="0.0116%" height="15" fill="rgb(218,27,48)" fg:x="28051" fg:w="5"/><text x="65.3562%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (757 samples, 1.76%)</title><rect x="63.3654%" y="1077" width="1.7570%" height="15" fill="rgb(232,78,1)" fg:x="27301" fg:w="757"/><text x="63.6154%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (751 samples, 1.74%)</title><rect x="63.3794%" y="1061" width="1.7431%" height="15" fill="rgb(233,169,12)" fg:x="27307" fg:w="751"/><text x="63.6294%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (475 samples, 1.10%)</title><rect x="64.0200%" y="1045" width="1.1025%" height="15" fill="rgb(225,222,54)" fg:x="27583" fg:w="475"/><text x="64.2700%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (18 samples, 0.04%)</title><rect x="65.0807%" y="1029" width="0.0418%" height="15" fill="rgb(245,126,29)" fg:x="28040" fg:w="18"/><text x="65.3307%" y="1039.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (4,245 samples, 9.85%)</title><rect x="55.2884%" y="1125" width="9.8526%" height="15" fill="rgb(241,63,48)" fg:x="23821" fg:w="4245"/><text x="55.5384%" y="1135.50">bytecode_verif..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (4,245 samples, 9.85%)</title><rect x="55.2884%" y="1109" width="9.8526%" height="15" fill="rgb(235,126,38)" fg:x="23821" fg:w="4245"/><text x="55.5384%" y="1119.50">bytecode_verif..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (4,245 samples, 9.85%)</title><rect x="55.2884%" y="1093" width="9.8526%" height="15" fill="rgb(232,96,49)" fg:x="23821" fg:w="4245"/><text x="55.5384%" y="1103.50">bytecode_verif..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="65.1224%" y="1077" width="0.0186%" height="15" fill="rgb(211,146,40)" fg:x="28058" fg:w="8"/><text x="65.3724%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (8 samples, 0.02%)</title><rect x="65.1224%" y="1061" width="0.0186%" height="15" fill="rgb(247,93,44)" fg:x="28058" fg:w="8"/><text x="65.3724%" y="1071.50"></text></g><g><title>bcs::de::Deserializer::next (10 samples, 0.02%)</title><rect x="65.1665%" y="933" width="0.0232%" height="15" fill="rgb(251,41,49)" fg:x="28077" fg:w="10"/><text x="65.4165%" y="943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.02%)</title><rect x="65.1735%" y="917" width="0.0162%" height="15" fill="rgb(218,155,12)" fg:x="28080" fg:w="7"/><text x="65.4235%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="65.1758%" y="901" width="0.0139%" height="15" fill="rgb(221,161,30)" fg:x="28081" fg:w="6"/><text x="65.4258%" y="911.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="65.1758%" y="885" width="0.0139%" height="15" fill="rgb(221,179,11)" fg:x="28081" fg:w="6"/><text x="65.4258%" y="895.50"></text></g><g><title>bytecode_verifier::constants::verify_module (22 samples, 0.05%)</title><rect x="65.1410%" y="1125" width="0.0511%" height="15" fill="rgb(224,170,48)" fg:x="28066" fg:w="22"/><text x="65.3910%" y="1135.50"></text></g><g><title>bytecode_verifier::constants::verify_module_impl (22 samples, 0.05%)</title><rect x="65.1410%" y="1109" width="0.0511%" height="15" fill="rgb(223,117,5)" fg:x="28066" fg:w="22"/><text x="65.3910%" y="1119.50"></text></g><g><title>bytecode_verifier::constants::verify_constant (22 samples, 0.05%)</title><rect x="65.1410%" y="1093" width="0.0511%" height="15" fill="rgb(209,52,20)" fg:x="28066" fg:w="22"/><text x="65.3910%" y="1103.50"></text></g><g><title>bytecode_verifier::constants::verify_constant_data (22 samples, 0.05%)</title><rect x="65.1410%" y="1077" width="0.0511%" height="15" fill="rgb(209,19,41)" fg:x="28066" fg:w="22"/><text x="65.3910%" y="1087.50"></text></g><g><title>move_binary_format::constant::&lt;impl move_binary_format::file_format::Constant&gt;::deserialize_constant (22 samples, 0.05%)</title><rect x="65.1410%" y="1061" width="0.0511%" height="15" fill="rgb(210,177,12)" fg:x="28066" fg:w="22"/><text x="65.3910%" y="1071.50"></text></g><g><title>move_core_types::value::MoveValue::simple_deserialize (21 samples, 0.05%)</title><rect x="65.1433%" y="1045" width="0.0487%" height="15" fill="rgb(211,159,37)" fg:x="28067" fg:w="21"/><text x="65.3933%" y="1055.50"></text></g><g><title>bcs::de::from_bytes_seed (20 samples, 0.05%)</title><rect x="65.1456%" y="1029" width="0.0464%" height="15" fill="rgb(209,20,2)" fg:x="28068" fg:w="20"/><text x="65.3956%" y="1039.50"></text></g><g><title>&lt;&amp;move_core_types::value::MoveTypeLayout as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.04%)</title><rect x="65.1480%" y="1013" width="0.0441%" height="15" fill="rgb(244,3,46)" fg:x="28069" fg:w="19"/><text x="65.3980%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (14 samples, 0.03%)</title><rect x="65.1596%" y="997" width="0.0325%" height="15" fill="rgb(220,94,38)" fg:x="28074" fg:w="14"/><text x="65.4096%" y="1007.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (14 samples, 0.03%)</title><rect x="65.1596%" y="981" width="0.0325%" height="15" fill="rgb(253,14,31)" fg:x="28074" fg:w="14"/><text x="65.4096%" y="991.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (13 samples, 0.03%)</title><rect x="65.1619%" y="965" width="0.0302%" height="15" fill="rgb(234,176,13)" fg:x="28075" fg:w="13"/><text x="65.4119%" y="975.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (13 samples, 0.03%)</title><rect x="65.1619%" y="949" width="0.0302%" height="15" fill="rgb(218,62,25)" fg:x="28075" fg:w="13"/><text x="65.4119%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (9 samples, 0.02%)</title><rect x="65.2083%" y="981" width="0.0209%" height="15" fill="rgb(216,124,40)" fg:x="28095" fg:w="9"/><text x="65.4583%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="65.2083%" y="965" width="0.0209%" height="15" fill="rgb(228,170,12)" fg:x="28095" fg:w="9"/><text x="65.4583%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="65.2083%" y="949" width="0.0209%" height="15" fill="rgb(231,226,5)" fg:x="28095" fg:w="9"/><text x="65.4583%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (9 samples, 0.02%)</title><rect x="65.2083%" y="933" width="0.0209%" height="15" fill="rgb(237,122,22)" fg:x="28095" fg:w="9"/><text x="65.4583%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.03%)</title><rect x="65.2083%" y="1013" width="0.0348%" height="15" fill="rgb(209,185,25)" fg:x="28095" fg:w="15"/><text x="65.4583%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.03%)</title><rect x="65.2083%" y="997" width="0.0348%" height="15" fill="rgb(228,200,32)" fg:x="28095" fg:w="15"/><text x="65.4583%" y="1007.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::get_or_add_node (20 samples, 0.05%)</title><rect x="65.2013%" y="1029" width="0.0464%" height="15" fill="rgb(217,140,10)" fg:x="28092" fg:w="20"/><text x="65.4513%" y="1039.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::add_edge (24 samples, 0.06%)</title><rect x="65.2013%" y="1045" width="0.0557%" height="15" fill="rgb(253,17,24)" fg:x="28092" fg:w="24"/><text x="65.4513%" y="1055.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_call (27 samples, 0.06%)</title><rect x="65.1967%" y="1061" width="0.0627%" height="15" fill="rgb(212,61,6)" fg:x="28090" fg:w="27"/><text x="65.4467%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="65.2640%" y="997" width="0.0162%" height="15" fill="rgb(205,14,25)" fg:x="28119" fg:w="7"/><text x="65.5140%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="65.2640%" y="981" width="0.0162%" height="15" fill="rgb(232,69,41)" fg:x="28119" fg:w="7"/><text x="65.5140%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="65.2640%" y="965" width="0.0162%" height="15" fill="rgb(241,106,47)" fg:x="28119" fg:w="7"/><text x="65.5140%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.02%)</title><rect x="65.2617%" y="1013" width="0.0209%" height="15" fill="rgb(210,213,53)" fg:x="28118" fg:w="9"/><text x="65.5117%" y="1023.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph (45 samples, 0.10%)</title><rect x="65.1921%" y="1093" width="0.1044%" height="15" fill="rgb(253,175,27)" fg:x="28088" fg:w="45"/><text x="65.4421%" y="1103.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_function_def (45 samples, 0.10%)</title><rect x="65.1921%" y="1077" width="0.1044%" height="15" fill="rgb(211,171,24)" fg:x="28088" fg:w="45"/><text x="65.4421%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.03%)</title><rect x="65.2617%" y="1061" width="0.0348%" height="15" fill="rgb(229,80,7)" fg:x="28118" fg:w="15"/><text x="65.5117%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.03%)</title><rect x="65.2617%" y="1045" width="0.0348%" height="15" fill="rgb(212,46,39)" fg:x="28118" fg:w="15"/><text x="65.5117%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.03%)</title><rect x="65.2617%" y="1029" width="0.0348%" height="15" fill="rgb(240,80,45)" fg:x="28118" fg:w="15"/><text x="65.5117%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="65.2826%" y="1013" width="0.0139%" height="15" fill="rgb(253,177,40)" fg:x="28127" fg:w="6"/><text x="65.5326%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="65.2826%" y="997" width="0.0139%" height="15" fill="rgb(249,200,15)" fg:x="28127" fg:w="6"/><text x="65.5326%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="65.3058%" y="917" width="0.0116%" height="15" fill="rgb(217,78,26)" fg:x="28137" fg:w="5"/><text x="65.5558%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="65.3220%" y="789" width="0.0209%" height="15" fill="rgb(254,151,32)" fg:x="28144" fg:w="9"/><text x="65.5720%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (8 samples, 0.02%)</title><rect x="65.3244%" y="773" width="0.0186%" height="15" fill="rgb(226,165,27)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.02%)</title><rect x="65.3244%" y="757" width="0.0186%" height="15" fill="rgb(250,206,4)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="767.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 0.02%)</title><rect x="65.3244%" y="741" width="0.0186%" height="15" fill="rgb(231,229,27)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (8 samples, 0.02%)</title><rect x="65.3244%" y="725" width="0.0186%" height="15" fill="rgb(239,217,8)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (8 samples, 0.02%)</title><rect x="65.3244%" y="709" width="0.0186%" height="15" fill="rgb(225,204,27)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.02%)</title><rect x="65.3244%" y="693" width="0.0186%" height="15" fill="rgb(230,56,32)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.02%)</title><rect x="65.3244%" y="677" width="0.0186%" height="15" fill="rgb(222,56,27)" fg:x="28145" fg:w="8"/><text x="65.5744%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="65.3313%" y="661" width="0.0116%" height="15" fill="rgb(253,108,27)" fg:x="28148" fg:w="5"/><text x="65.5813%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="65.3313%" y="645" width="0.0116%" height="15" fill="rgb(212,87,36)" fg:x="28148" fg:w="5"/><text x="65.5813%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="65.3174%" y="901" width="0.0279%" height="15" fill="rgb(247,82,36)" fg:x="28142" fg:w="12"/><text x="65.5674%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="65.3174%" y="885" width="0.0279%" height="15" fill="rgb(222,143,9)" fg:x="28142" fg:w="12"/><text x="65.5674%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="65.3174%" y="869" width="0.0279%" height="15" fill="rgb(238,162,48)" fg:x="28142" fg:w="12"/><text x="65.5674%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="65.3174%" y="853" width="0.0279%" height="15" fill="rgb(221,59,43)" fg:x="28142" fg:w="12"/><text x="65.5674%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="65.3174%" y="837" width="0.0279%" height="15" fill="rgb(205,166,41)" fg:x="28142" fg:w="12"/><text x="65.5674%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="65.3220%" y="821" width="0.0232%" height="15" fill="rgb(241,186,40)" fg:x="28144" fg:w="10"/><text x="65.5720%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (10 samples, 0.02%)</title><rect x="65.3220%" y="805" width="0.0232%" height="15" fill="rgb(216,119,35)" fg:x="28144" fg:w="10"/><text x="65.5720%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.02%)</title><rect x="65.3452%" y="837" width="0.0232%" height="15" fill="rgb(208,68,38)" fg:x="28154" fg:w="10"/><text x="65.5952%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="65.3499%" y="821" width="0.0186%" height="15" fill="rgb(217,113,1)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="65.3499%" y="805" width="0.0186%" height="15" fill="rgb(242,153,3)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="65.3499%" y="789" width="0.0186%" height="15" fill="rgb(229,76,35)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.02%)</title><rect x="65.3499%" y="773" width="0.0186%" height="15" fill="rgb(229,125,34)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.02%)</title><rect x="65.3499%" y="757" width="0.0186%" height="15" fill="rgb(238,179,36)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.02%)</title><rect x="65.3499%" y="741" width="0.0186%" height="15" fill="rgb(244,183,19)" fg:x="28156" fg:w="8"/><text x="65.5999%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7 samples, 0.02%)</title><rect x="65.3522%" y="725" width="0.0162%" height="15" fill="rgb(216,85,49)" fg:x="28157" fg:w="7"/><text x="65.6022%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (7 samples, 0.02%)</title><rect x="65.3522%" y="709" width="0.0162%" height="15" fill="rgb(208,161,47)" fg:x="28157" fg:w="7"/><text x="65.6022%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="65.3522%" y="693" width="0.0162%" height="15" fill="rgb(233,210,18)" fg:x="28157" fg:w="7"/><text x="65.6022%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.06%)</title><rect x="65.3174%" y="917" width="0.0557%" height="15" fill="rgb(205,104,42)" fg:x="28142" fg:w="24"/><text x="65.5674%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="65.3452%" y="901" width="0.0279%" height="15" fill="rgb(248,90,43)" fg:x="28154" fg:w="12"/><text x="65.5952%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.03%)</title><rect x="65.3452%" y="885" width="0.0279%" height="15" fill="rgb(206,198,11)" fg:x="28154" fg:w="12"/><text x="65.5952%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.03%)</title><rect x="65.3452%" y="869" width="0.0279%" height="15" fill="rgb(239,165,27)" fg:x="28154" fg:w="12"/><text x="65.5952%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.03%)</title><rect x="65.3452%" y="853" width="0.0279%" height="15" fill="rgb(246,44,32)" fg:x="28154" fg:w="12"/><text x="65.5952%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.08%)</title><rect x="65.2988%" y="1013" width="0.0836%" height="15" fill="rgb(252,65,42)" fg:x="28134" fg:w="36"/><text x="65.5488%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (36 samples, 0.08%)</title><rect x="65.2988%" y="997" width="0.0836%" height="15" fill="rgb(246,197,18)" fg:x="28134" fg:w="36"/><text x="65.5488%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.08%)</title><rect x="65.2988%" y="981" width="0.0836%" height="15" fill="rgb(216,192,4)" fg:x="28134" fg:w="36"/><text x="65.5488%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (33 samples, 0.08%)</title><rect x="65.3058%" y="965" width="0.0766%" height="15" fill="rgb(208,117,10)" fg:x="28137" fg:w="33"/><text x="65.5558%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.08%)</title><rect x="65.3058%" y="949" width="0.0766%" height="15" fill="rgb(240,61,47)" fg:x="28137" fg:w="33"/><text x="65.5558%" y="959.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components::_{{closure}} (33 samples, 0.08%)</title><rect x="65.3058%" y="933" width="0.0766%" height="15" fill="rgb(228,178,21)" fg:x="28137" fg:w="33"/><text x="65.5558%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 0.09%)</title><rect x="65.2965%" y="1077" width="0.0928%" height="15" fill="rgb(219,96,54)" fg:x="28133" fg:w="40"/><text x="65.5465%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (40 samples, 0.09%)</title><rect x="65.2965%" y="1061" width="0.0928%" height="15" fill="rgb(250,177,24)" fg:x="28133" fg:w="40"/><text x="65.5465%" y="1071.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (40 samples, 0.09%)</title><rect x="65.2965%" y="1045" width="0.0928%" height="15" fill="rgb(242,154,46)" fg:x="28133" fg:w="40"/><text x="65.5465%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (40 samples, 0.09%)</title><rect x="65.2965%" y="1029" width="0.0928%" height="15" fill="rgb(226,176,29)" fg:x="28133" fg:w="40"/><text x="65.5465%" y="1039.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components (47 samples, 0.11%)</title><rect x="65.2965%" y="1093" width="0.1091%" height="15" fill="rgb(226,29,2)" fg:x="28133" fg:w="47"/><text x="65.5465%" y="1103.50"></text></g><g><title>petgraph::algo::tarjan_scc (7 samples, 0.02%)</title><rect x="65.3893%" y="1077" width="0.0162%" height="15" fill="rgb(237,104,14)" fg:x="28173" fg:w="7"/><text x="65.6393%" y="1087.50"></text></g><g><title>petgraph::algo::tarjan_scc::scc_visit (7 samples, 0.02%)</title><rect x="65.3893%" y="1061" width="0.0162%" height="15" fill="rgb(245,207,31)" fg:x="28173" fg:w="7"/><text x="65.6393%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.02%)</title><rect x="65.4172%" y="869" width="0.0162%" height="15" fill="rgb(229,211,45)" fg:x="28185" fg:w="7"/><text x="65.6672%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="65.4172%" y="853" width="0.0162%" height="15" fill="rgb(229,113,15)" fg:x="28185" fg:w="7"/><text x="65.6672%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.04%)</title><rect x="65.4056%" y="1013" width="0.0371%" height="15" fill="rgb(237,147,15)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.04%)</title><rect x="65.4056%" y="997" width="0.0371%" height="15" fill="rgb(244,120,12)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.04%)</title><rect x="65.4056%" y="981" width="0.0371%" height="15" fill="rgb(205,120,12)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.04%)</title><rect x="65.4056%" y="965" width="0.0371%" height="15" fill="rgb(231,26,45)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (16 samples, 0.04%)</title><rect x="65.4056%" y="949" width="0.0371%" height="15" fill="rgb(246,98,1)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.04%)</title><rect x="65.4056%" y="933" width="0.0371%" height="15" fill="rgb(207,68,45)" fg:x="28180" fg:w="16"/><text x="65.6556%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14 samples, 0.03%)</title><rect x="65.4102%" y="917" width="0.0325%" height="15" fill="rgb(231,27,38)" fg:x="28182" fg:w="14"/><text x="65.6602%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (14 samples, 0.03%)</title><rect x="65.4102%" y="901" width="0.0325%" height="15" fill="rgb(214,223,3)" fg:x="28182" fg:w="14"/><text x="65.6602%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="65.4102%" y="885" width="0.0325%" height="15" fill="rgb(228,195,46)" fg:x="28182" fg:w="14"/><text x="65.6602%" y="895.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module (111 samples, 0.26%)</title><rect x="65.1921%" y="1125" width="0.2576%" height="15" fill="rgb(231,100,42)" fg:x="28088" fg:w="111"/><text x="65.4421%" y="1135.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module_impl (111 samples, 0.26%)</title><rect x="65.1921%" y="1109" width="0.2576%" height="15" fill="rgb(236,53,4)" fg:x="28088" fg:w="111"/><text x="65.4421%" y="1119.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::new (19 samples, 0.04%)</title><rect x="65.4056%" y="1093" width="0.0441%" height="15" fill="rgb(230,152,12)" fg:x="28180" fg:w="19"/><text x="65.6556%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.04%)</title><rect x="65.4056%" y="1077" width="0.0441%" height="15" fill="rgb(226,101,19)" fg:x="28180" fg:w="19"/><text x="65.6556%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="65.4056%" y="1061" width="0.0441%" height="15" fill="rgb(250,149,32)" fg:x="28180" fg:w="19"/><text x="65.6556%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.04%)</title><rect x="65.4056%" y="1045" width="0.0441%" height="15" fill="rgb(232,178,12)" fg:x="28180" fg:w="19"/><text x="65.6556%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.04%)</title><rect x="65.4056%" y="1029" width="0.0441%" height="15" fill="rgb(246,151,17)" fg:x="28180" fg:w="19"/><text x="65.6556%" y="1039.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_fields (10 samples, 0.02%)</title><rect x="65.4590%" y="1093" width="0.0232%" height="15" fill="rgb(252,17,51)" fg:x="28203" fg:w="10"/><text x="65.7090%" y="1103.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="65.5100%" y="1061" width="0.0162%" height="15" fill="rgb(250,207,23)" fg:x="28225" fg:w="7"/><text x="65.7600%" y="1071.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_instantiation (21 samples, 0.05%)</title><rect x="65.5077%" y="1077" width="0.0487%" height="15" fill="rgb(205,27,5)" fg:x="28224" fg:w="21"/><text x="65.7577%" y="1087.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_function_signatures (44 samples, 0.10%)</title><rect x="65.4822%" y="1093" width="0.1021%" height="15" fill="rgb(224,32,19)" fg:x="28213" fg:w="44"/><text x="65.7322%" y="1103.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_signature (12 samples, 0.03%)</title><rect x="65.5565%" y="1077" width="0.0279%" height="15" fill="rgb(247,214,40)" fg:x="28245" fg:w="12"/><text x="65.8065%" y="1087.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_signature (10 samples, 0.02%)</title><rect x="65.5866%" y="1077" width="0.0232%" height="15" fill="rgb(239,199,17)" fg:x="28258" fg:w="10"/><text x="65.8366%" y="1087.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module (70 samples, 0.16%)</title><rect x="65.4497%" y="1125" width="0.1625%" height="15" fill="rgb(251,159,9)" fg:x="28199" fg:w="70"/><text x="65.6997%" y="1135.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module_impl (70 samples, 0.16%)</title><rect x="65.4497%" y="1109" width="0.1625%" height="15" fill="rgb(225,78,32)" fg:x="28199" fg:w="70"/><text x="65.6997%" y="1119.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_signature_pool (12 samples, 0.03%)</title><rect x="65.5843%" y="1093" width="0.0279%" height="15" fill="rgb(206,97,47)" fg:x="28257" fg:w="12"/><text x="65.8343%" y="1103.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_struct_defs (11 samples, 0.03%)</title><rect x="65.6191%" y="1077" width="0.0255%" height="15" fill="rgb(227,107,4)" fg:x="28272" fg:w="11"/><text x="65.8691%" y="1087.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (8 samples, 0.02%)</title><rect x="65.6261%" y="1061" width="0.0186%" height="15" fill="rgb(241,146,50)" fg:x="28275" fg:w="8"/><text x="65.8761%" y="1071.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (5 samples, 0.01%)</title><rect x="65.6331%" y="1045" width="0.0116%" height="15" fill="rgb(232,92,30)" fg:x="28278" fg:w="5"/><text x="65.8831%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="65.6516%" y="1029" width="0.0116%" height="15" fill="rgb(222,0,40)" fg:x="28286" fg:w="5"/><text x="65.9016%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="65.6516%" y="1013" width="0.0116%" height="15" fill="rgb(219,54,33)" fg:x="28286" fg:w="5"/><text x="65.9016%" y="1023.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.02%)</title><rect x="65.6725%" y="997" width="0.0162%" height="15" fill="rgb(226,209,28)" fg:x="28295" fg:w="7"/><text x="65.9225%" y="1007.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (7 samples, 0.02%)</title><rect x="65.6725%" y="981" width="0.0162%" height="15" fill="rgb(254,205,35)" fg:x="28295" fg:w="7"/><text x="65.9225%" y="991.50"></text></g><g><title>&lt;petgraph::graphmap::GraphMap&lt;N,E,Ty&gt; as core::iter::traits::collect::Extend&lt;Item&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="65.6516%" y="1045" width="0.0418%" height="15" fill="rgb(230,159,3)" fg:x="28286" fg:w="18"/><text x="65.9016%" y="1055.50"></text></g><g><title>petgraph::graphmap::GraphMap&lt;N,E,Ty&gt;::add_edge (13 samples, 0.03%)</title><rect x="65.6632%" y="1029" width="0.0302%" height="15" fill="rgb(232,190,24)" fg:x="28291" fg:w="13"/><text x="65.9132%" y="1039.50"></text></g><g><title>indexmap::map::core::Entry&lt;K,V&gt;::or_insert_with (9 samples, 0.02%)</title><rect x="65.6725%" y="1013" width="0.0209%" height="15" fill="rgb(217,227,44)" fg:x="28295" fg:w="9"/><text x="65.9225%" y="1023.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::build (36 samples, 0.08%)</title><rect x="65.6122%" y="1093" width="0.0836%" height="15" fill="rgb(236,211,1)" fg:x="28269" fg:w="36"/><text x="65.8622%" y="1103.50"></text></g><g><title>petgraph::graphmap::GraphMap&lt;N,E,Ty&gt;::from_edges (20 samples, 0.05%)</title><rect x="65.6493%" y="1077" width="0.0464%" height="15" fill="rgb(250,127,46)" fg:x="28285" fg:w="20"/><text x="65.8993%" y="1087.50"></text></g><g><title>&lt;petgraph::graphmap::GraphMap&lt;N,E,Ty&gt; as core::iter::traits::collect::FromIterator&lt;Item&gt;&gt;::from_iter (20 samples, 0.05%)</title><rect x="65.6493%" y="1061" width="0.0464%" height="15" fill="rgb(229,213,6)" fg:x="28285" fg:w="20"/><text x="65.8993%" y="1071.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::new (7 samples, 0.02%)</title><rect x="65.6957%" y="1093" width="0.0162%" height="15" fill="rgb(237,15,36)" fg:x="28305" fg:w="7"/><text x="65.9457%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="65.7004%" y="1077" width="0.0116%" height="15" fill="rgb(213,131,41)" fg:x="28307" fg:w="5"/><text x="65.9504%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;N,S&gt; as petgraph::visit::VisitMap&lt;N&gt;&gt;::visit (7 samples, 0.02%)</title><rect x="65.7445%" y="1045" width="0.0162%" height="15" fill="rgb(225,82,44)" fg:x="28326" fg:w="7"/><text x="65.9945%" y="1055.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.02%)</title><rect x="65.7445%" y="1029" width="0.0162%" height="15" fill="rgb(249,42,11)" fg:x="28326" fg:w="7"/><text x="65.9945%" y="1039.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="65.7445%" y="1013" width="0.0162%" height="15" fill="rgb(253,11,29)" fg:x="28326" fg:w="7"/><text x="65.9945%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="65.7445%" y="997" width="0.0162%" height="15" fill="rgb(206,8,54)" fg:x="28326" fg:w="7"/><text x="65.9945%" y="1007.50"></text></g><g><title>petgraph::visit::traversal::Dfs&lt;N,VM&gt;::next (6 samples, 0.01%)</title><rect x="65.7653%" y="1045" width="0.0139%" height="15" fill="rgb(222,186,2)" fg:x="28335" fg:w="6"/><text x="66.0153%" y="1055.50"></text></g><g><title>petgraph::algo::toposort::_{{closure}} (29 samples, 0.07%)</title><rect x="65.7143%" y="1061" width="0.0673%" height="15" fill="rgb(221,206,53)" fg:x="28313" fg:w="29"/><text x="65.9643%" y="1071.50"></text></g><g><title>bytecode_verifier::verifier::verify_module (4,775 samples, 11.08%)</title><rect x="54.7058%" y="1141" width="11.0827%" height="15" fill="rgb(230,150,21)" fg:x="23570" fg:w="4775"/><text x="54.9558%" y="1151.50">bytecode_verifie..</text></g><g><title>bytecode_verifier::struct_defs::RecursiveStructDefChecker::verify_module (76 samples, 0.18%)</title><rect x="65.6122%" y="1125" width="0.1764%" height="15" fill="rgb(253,202,10)" fg:x="28269" fg:w="76"/><text x="65.8622%" y="1135.50"></text></g><g><title>bytecode_verifier::struct_defs::RecursiveStructDefChecker::verify_module_impl (76 samples, 0.18%)</title><rect x="65.6122%" y="1109" width="0.1764%" height="15" fill="rgb(238,109,40)" fg:x="28269" fg:w="76"/><text x="65.8622%" y="1119.50"></text></g><g><title>petgraph::algo::toposort (33 samples, 0.08%)</title><rect x="65.7120%" y="1093" width="0.0766%" height="15" fill="rgb(247,120,22)" fg:x="28312" fg:w="33"/><text x="65.9620%" y="1103.50"></text></g><g><title>petgraph::algo::with_dfs (33 samples, 0.08%)</title><rect x="65.7120%" y="1077" width="0.0766%" height="15" fill="rgb(207,43,30)" fg:x="28312" fg:w="33"/><text x="65.9620%" y="1087.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (5 samples, 0.01%)</title><rect x="65.8071%" y="1077" width="0.0116%" height="15" fill="rgb(213,211,24)" fg:x="28353" fg:w="5"/><text x="66.0571%" y="1087.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_script (11 samples, 0.03%)</title><rect x="65.7955%" y="1125" width="0.0255%" height="15" fill="rgb(239,73,39)" fg:x="28348" fg:w="11"/><text x="66.0455%" y="1135.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_script_impl (11 samples, 0.03%)</title><rect x="65.7955%" y="1109" width="0.0255%" height="15" fill="rgb(245,182,19)" fg:x="28348" fg:w="11"/><text x="66.0455%" y="1119.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (11 samples, 0.03%)</title><rect x="65.7955%" y="1093" width="0.0255%" height="15" fill="rgb(247,143,26)" fg:x="28348" fg:w="11"/><text x="66.0455%" y="1103.50"></text></g><g><title>bytecode_verifier::verifier::verify_script (16 samples, 0.04%)</title><rect x="65.7886%" y="1141" width="0.0371%" height="15" fill="rgb(228,191,23)" fg:x="28345" fg:w="16"/><text x="66.0386%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::align (18 samples, 0.04%)</title><rect x="65.8257%" y="1141" width="0.0418%" height="15" fill="rgb(253,165,31)" fg:x="28361" fg:w="18"/><text x="66.0757%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.04%)</title><rect x="65.8675%" y="1141" width="0.0371%" height="15" fill="rgb(234,138,20)" fg:x="28379" fg:w="16"/><text x="66.1175%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (12 samples, 0.03%)</title><rect x="65.9069%" y="1141" width="0.0279%" height="15" fill="rgb(218,191,29)" fg:x="28396" fg:w="12"/><text x="66.1569%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::new (84 samples, 0.19%)</title><rect x="65.9348%" y="1141" width="0.1950%" height="15" fill="rgb(221,157,19)" fg:x="28408" fg:w="84"/><text x="66.1848%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (8 samples, 0.02%)</title><rect x="66.1344%" y="1141" width="0.0186%" height="15" fill="rgb(237,26,42)" fg:x="28494" fg:w="8"/><text x="66.3844%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::repeat (9 samples, 0.02%)</title><rect x="66.1530%" y="1141" width="0.0209%" height="15" fill="rgb(220,163,24)" fg:x="28502" fg:w="9"/><text x="66.4030%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::size (37 samples, 0.09%)</title><rect x="66.1738%" y="1141" width="0.0859%" height="15" fill="rgb(242,115,20)" fg:x="28511" fg:w="37"/><text x="66.4238%" y="1151.50"></text></g><g><title>core::alloc::layout::size_align (36 samples, 0.08%)</title><rect x="66.2597%" y="1141" width="0.0836%" height="15" fill="rgb(210,206,9)" fg:x="28548" fg:w="36"/><text x="66.5097%" y="1151.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (7 samples, 0.02%)</title><rect x="66.3433%" y="1141" width="0.0162%" height="15" fill="rgb(208,71,17)" fg:x="28584" fg:w="7"/><text x="66.5933%" y="1151.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (5 samples, 0.01%)</title><rect x="66.3595%" y="1141" width="0.0116%" height="15" fill="rgb(233,7,5)" fg:x="28591" fg:w="5"/><text x="66.6095%" y="1151.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (5 samples, 0.01%)</title><rect x="66.3874%" y="1141" width="0.0116%" height="15" fill="rgb(207,92,33)" fg:x="28603" fg:w="5"/><text x="66.6374%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.03%)</title><rect x="66.4036%" y="1141" width="0.0302%" height="15" fill="rgb(218,87,9)" fg:x="28610" fg:w="13"/><text x="66.6536%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.03%)</title><rect x="66.4338%" y="1141" width="0.0325%" height="15" fill="rgb(219,47,37)" fg:x="28623" fg:w="14"/><text x="66.6838%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.03%)</title><rect x="66.4663%" y="1141" width="0.0255%" height="15" fill="rgb(221,152,34)" fg:x="28637" fg:w="11"/><text x="66.7163%" y="1151.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (45 samples, 0.10%)</title><rect x="66.5011%" y="1141" width="0.1044%" height="15" fill="rgb(235,176,21)" fg:x="28652" fg:w="45"/><text x="66.7511%" y="1151.50"></text></g><g><title>core::cmp::Ord::max (8 samples, 0.02%)</title><rect x="66.6357%" y="1141" width="0.0186%" height="15" fill="rgb(232,212,21)" fg:x="28710" fg:w="8"/><text x="66.8857%" y="1151.50"></text></g><g><title>core::cmp::Ord::min (20 samples, 0.05%)</title><rect x="66.6543%" y="1141" width="0.0464%" height="15" fill="rgb(245,82,39)" fg:x="28718" fg:w="20"/><text x="66.9043%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u16&gt;::cmp (10 samples, 0.02%)</title><rect x="66.7007%" y="1141" width="0.0232%" height="15" fill="rgb(241,52,51)" fg:x="28738" fg:w="10"/><text x="66.9507%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (28 samples, 0.06%)</title><rect x="66.7286%" y="1141" width="0.0650%" height="15" fill="rgb(219,91,24)" fg:x="28750" fg:w="28"/><text x="66.9786%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.02%)</title><rect x="66.8284%" y="1141" width="0.0162%" height="15" fill="rgb(241,142,12)" fg:x="28793" fg:w="7"/><text x="67.0784%" y="1151.50"></text></g><g><title>core::cmp::max (6 samples, 0.01%)</title><rect x="66.8446%" y="1141" width="0.0139%" height="15" fill="rgb(230,27,9)" fg:x="28800" fg:w="6"/><text x="67.0946%" y="1151.50"></text></g><g><title>core::cmp::min (7 samples, 0.02%)</title><rect x="66.8632%" y="1141" width="0.0162%" height="15" fill="rgb(249,181,32)" fg:x="28808" fg:w="7"/><text x="67.1132%" y="1151.50"></text></g><g><title>core::cmp::min_by (16 samples, 0.04%)</title><rect x="66.8794%" y="1141" width="0.0371%" height="15" fill="rgb(230,107,3)" fg:x="28815" fg:w="16"/><text x="67.1294%" y="1151.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (29 samples, 0.07%)</title><rect x="66.9235%" y="1141" width="0.0673%" height="15" fill="rgb(246,204,14)" fg:x="28834" fg:w="29"/><text x="67.1735%" y="1151.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (22 samples, 0.05%)</title><rect x="66.9978%" y="1141" width="0.0511%" height="15" fill="rgb(213,192,47)" fg:x="28866" fg:w="22"/><text x="67.2478%" y="1151.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.03%)</title><rect x="67.0558%" y="1141" width="0.0302%" height="15" fill="rgb(240,44,36)" fg:x="28891" fg:w="13"/><text x="67.3058%" y="1151.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.02%)</title><rect x="67.0860%" y="1141" width="0.0209%" height="15" fill="rgb(244,209,38)" fg:x="28904" fg:w="9"/><text x="67.3360%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u16 (8 samples, 0.02%)</title><rect x="67.1185%" y="1141" width="0.0186%" height="15" fill="rgb(219,34,37)" fg:x="28918" fg:w="8"/><text x="67.3685%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.01%)</title><rect x="67.1371%" y="1141" width="0.0139%" height="15" fill="rgb(210,28,6)" fg:x="28926" fg:w="6"/><text x="67.3871%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (6 samples, 0.01%)</title><rect x="67.1556%" y="1141" width="0.0139%" height="15" fill="rgb(244,110,52)" fg:x="28934" fg:w="6"/><text x="67.4056%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.01%)</title><rect x="67.1695%" y="1141" width="0.0139%" height="15" fill="rgb(254,124,47)" fg:x="28940" fg:w="6"/><text x="67.4195%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (18 samples, 0.04%)</title><rect x="67.1881%" y="1141" width="0.0418%" height="15" fill="rgb(254,110,13)" fg:x="28948" fg:w="18"/><text x="67.4381%" y="1151.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.02%)</title><rect x="67.2415%" y="1141" width="0.0186%" height="15" fill="rgb(252,57,21)" fg:x="28971" fg:w="8"/><text x="67.4915%" y="1151.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.02%)</title><rect x="67.2624%" y="1141" width="0.0162%" height="15" fill="rgb(242,60,45)" fg:x="28980" fg:w="7"/><text x="67.5124%" y="1151.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.03%)</title><rect x="67.2786%" y="1141" width="0.0279%" height="15" fill="rgb(234,49,30)" fg:x="28987" fg:w="12"/><text x="67.5286%" y="1151.50"></text></g><g><title>core::intrinsics::copy (9 samples, 0.02%)</title><rect x="67.3065%" y="1141" width="0.0209%" height="15" fill="rgb(218,98,6)" fg:x="28999" fg:w="9"/><text x="67.5565%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (163 samples, 0.38%)</title><rect x="67.3274%" y="1141" width="0.3783%" height="15" fill="rgb(220,174,29)" fg:x="29008" fg:w="163"/><text x="67.5774%" y="1151.50"></text></g><g><title>core::iter::adapters::cloned::Cloned&lt;I&gt;::new (5 samples, 0.01%)</title><rect x="67.7103%" y="1141" width="0.0116%" height="15" fill="rgb(236,163,23)" fg:x="29173" fg:w="5"/><text x="67.9603%" y="1151.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (8 samples, 0.02%)</title><rect x="67.7219%" y="1141" width="0.0186%" height="15" fill="rgb(242,114,45)" fg:x="29178" fg:w="8"/><text x="67.9719%" y="1151.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (24 samples, 0.06%)</title><rect x="67.7428%" y="917" width="0.0557%" height="15" fill="rgb(232,10,53)" fg:x="29187" fg:w="24"/><text x="67.9928%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.06%)</title><rect x="67.7428%" y="901" width="0.0557%" height="15" fill="rgb(245,108,29)" fg:x="29187" fg:w="24"/><text x="67.9928%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.06%)</title><rect x="67.7428%" y="885" width="0.0557%" height="15" fill="rgb(240,89,53)" fg:x="29187" fg:w="24"/><text x="67.9928%" y="895.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::as_ref (20 samples, 0.05%)</title><rect x="67.7985%" y="917" width="0.0464%" height="15" fill="rgb(226,60,45)" fg:x="29211" fg:w="20"/><text x="68.0485%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (20 samples, 0.05%)</title><rect x="67.7985%" y="901" width="0.0464%" height="15" fill="rgb(230,41,44)" fg:x="29211" fg:w="20"/><text x="68.0485%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::low_bits (20 samples, 0.05%)</title><rect x="67.7985%" y="885" width="0.0464%" height="15" fill="rgb(230,26,20)" fg:x="29211" fg:w="20"/><text x="68.0485%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::trailing_zeros (7 samples, 0.02%)</title><rect x="67.8287%" y="869" width="0.0162%" height="15" fill="rgb(237,170,32)" fg:x="29224" fg:w="7"/><text x="68.0787%" y="879.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (85 samples, 0.20%)</title><rect x="67.7428%" y="1141" width="0.1973%" height="15" fill="rgb(212,35,42)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (85 samples, 0.20%)</title><rect x="67.7428%" y="1125" width="0.1973%" height="15" fill="rgb(227,31,34)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (85 samples, 0.20%)</title><rect x="67.7428%" y="1109" width="0.1973%" height="15" fill="rgb(216,19,18)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1119.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (85 samples, 0.20%)</title><rect x="67.7428%" y="1093" width="0.1973%" height="15" fill="rgb(211,133,42)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1103.50"></text></g><g><title>crossbeam_epoch::default::pin (85 samples, 0.20%)</title><rect x="67.7428%" y="1077" width="0.1973%" height="15" fill="rgb(244,66,13)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1087.50"></text></g><g><title>crossbeam_epoch::default::with_handle (85 samples, 0.20%)</title><rect x="67.7428%" y="1061" width="0.1973%" height="15" fill="rgb(218,185,50)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (85 samples, 0.20%)</title><rect x="67.7428%" y="1045" width="0.1973%" height="15" fill="rgb(219,149,13)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1055.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (85 samples, 0.20%)</title><rect x="67.7428%" y="1029" width="0.1973%" height="15" fill="rgb(221,125,0)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (85 samples, 0.20%)</title><rect x="67.7428%" y="1013" width="0.1973%" height="15" fill="rgb(247,126,27)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1023.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (85 samples, 0.20%)</title><rect x="67.7428%" y="997" width="0.1973%" height="15" fill="rgb(250,138,30)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="1007.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (85 samples, 0.20%)</title><rect x="67.7428%" y="981" width="0.1973%" height="15" fill="rgb(230,151,9)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="991.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (85 samples, 0.20%)</title><rect x="67.7428%" y="965" width="0.1973%" height="15" fill="rgb(233,80,38)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="975.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (85 samples, 0.20%)</title><rect x="67.7428%" y="949" width="0.1973%" height="15" fill="rgb(232,68,43)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="959.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.20%)</title><rect x="67.7428%" y="933" width="0.1973%" height="15" fill="rgb(254,5,50)" fg:x="29187" fg:w="85"/><text x="67.9928%" y="943.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (41 samples, 0.10%)</title><rect x="67.8450%" y="917" width="0.0952%" height="15" fill="rgb(225,45,5)" fg:x="29231" fg:w="41"/><text x="68.0950%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (41 samples, 0.10%)</title><rect x="67.8450%" y="901" width="0.0952%" height="15" fill="rgb(239,22,3)" fg:x="29231" fg:w="41"/><text x="68.0950%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::low_bits (41 samples, 0.10%)</title><rect x="67.8450%" y="885" width="0.0952%" height="15" fill="rgb(243,129,0)" fg:x="29231" fg:w="41"/><text x="68.0950%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::trailing_zeros (8 samples, 0.02%)</title><rect x="67.9216%" y="869" width="0.0186%" height="15" fill="rgb(223,164,0)" fg:x="29264" fg:w="8"/><text x="68.1716%" y="879.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (12 samples, 0.03%)</title><rect x="67.9494%" y="1141" width="0.0279%" height="15" fill="rgb(221,46,29)" fg:x="29276" fg:w="12"/><text x="68.1994%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.02%)</title><rect x="67.9865%" y="1141" width="0.0186%" height="15" fill="rgb(205,97,47)" fg:x="29292" fg:w="8"/><text x="68.2365%" y="1151.50"></text></g><g><title>core::iter::adapters::process_results (5 samples, 0.01%)</title><rect x="68.0074%" y="1141" width="0.0116%" height="15" fill="rgb(249,14,8)" fg:x="29301" fg:w="5"/><text x="68.2574%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.03%)</title><rect x="68.0538%" y="1141" width="0.0348%" height="15" fill="rgb(216,77,3)" fg:x="29321" fg:w="15"/><text x="68.3038%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (13 samples, 0.03%)</title><rect x="68.0910%" y="1141" width="0.0302%" height="15" fill="rgb(206,168,54)" fg:x="29337" fg:w="13"/><text x="68.3410%" y="1151.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (10 samples, 0.02%)</title><rect x="68.1258%" y="1141" width="0.0232%" height="15" fill="rgb(236,3,41)" fg:x="29352" fg:w="10"/><text x="68.3758%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (58 samples, 0.13%)</title><rect x="68.1490%" y="1141" width="0.1346%" height="15" fill="rgb(231,132,24)" fg:x="29362" fg:w="58"/><text x="68.3990%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check (28 samples, 0.06%)</title><rect x="68.2836%" y="1141" width="0.0650%" height="15" fill="rgb(227,221,40)" fg:x="29420" fg:w="28"/><text x="68.5336%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (29 samples, 0.07%)</title><rect x="68.3486%" y="1141" width="0.0673%" height="15" fill="rgb(233,151,11)" fg:x="29448" fg:w="29"/><text x="68.5986%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check (6 samples, 0.01%)</title><rect x="68.4252%" y="1141" width="0.0139%" height="15" fill="rgb(247,81,35)" fg:x="29481" fg:w="6"/><text x="68.6752%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cloned (6 samples, 0.01%)</title><rect x="68.4391%" y="1141" width="0.0139%" height="15" fill="rgb(243,128,48)" fg:x="29487" fg:w="6"/><text x="68.6891%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.07%)</title><rect x="68.4531%" y="1141" width="0.0673%" height="15" fill="rgb(253,16,10)" fg:x="29493" fg:w="29"/><text x="68.7031%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (34 samples, 0.08%)</title><rect x="68.5204%" y="1141" width="0.0789%" height="15" fill="rgb(228,67,27)" fg:x="29522" fg:w="34"/><text x="68.7704%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.02%)</title><rect x="68.6178%" y="1141" width="0.0186%" height="15" fill="rgb(231,105,25)" fg:x="29564" fg:w="8"/><text x="68.8678%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (11 samples, 0.03%)</title><rect x="68.6527%" y="1141" width="0.0255%" height="15" fill="rgb(213,166,47)" fg:x="29579" fg:w="11"/><text x="68.9027%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.01%)</title><rect x="68.6782%" y="1141" width="0.0139%" height="15" fill="rgb(209,27,10)" fg:x="29590" fg:w="6"/><text x="68.9282%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (17 samples, 0.04%)</title><rect x="68.6944%" y="1141" width="0.0395%" height="15" fill="rgb(241,44,30)" fg:x="29597" fg:w="17"/><text x="68.9444%" y="1151.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (8 samples, 0.02%)</title><rect x="68.8453%" y="901" width="0.0186%" height="15" fill="rgb(223,216,15)" fg:x="29662" fg:w="8"/><text x="69.0953%" y="911.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="68.8314%" y="917" width="0.0580%" height="15" fill="rgb(227,14,7)" fg:x="29656" fg:w="25"/><text x="69.0814%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (7 samples, 0.02%)</title><rect x="68.8732%" y="901" width="0.0162%" height="15" fill="rgb(237,14,5)" fg:x="29674" fg:w="7"/><text x="69.1232%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (7 samples, 0.02%)</title><rect x="68.8732%" y="885" width="0.0162%" height="15" fill="rgb(232,14,36)" fg:x="29674" fg:w="7"/><text x="69.1232%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (29 samples, 0.07%)</title><rect x="68.8314%" y="1125" width="0.0673%" height="15" fill="rgb(234,0,38)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (29 samples, 0.07%)</title><rect x="68.8314%" y="1109" width="0.0673%" height="15" fill="rgb(207,170,14)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (29 samples, 0.07%)</title><rect x="68.8314%" y="1093" width="0.0673%" height="15" fill="rgb(252,45,13)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1103.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (29 samples, 0.07%)</title><rect x="68.8314%" y="1077" width="0.0673%" height="15" fill="rgb(213,142,7)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1087.50"></text></g><g><title>crossbeam_epoch::default::pin (29 samples, 0.07%)</title><rect x="68.8314%" y="1061" width="0.0673%" height="15" fill="rgb(216,157,23)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::with_handle (29 samples, 0.07%)</title><rect x="68.8314%" y="1045" width="0.0673%" height="15" fill="rgb(212,145,33)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.07%)</title><rect x="68.8314%" y="1029" width="0.0673%" height="15" fill="rgb(233,26,13)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (29 samples, 0.07%)</title><rect x="68.8314%" y="1013" width="0.0673%" height="15" fill="rgb(219,196,19)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1023.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (29 samples, 0.07%)</title><rect x="68.8314%" y="997" width="0.0673%" height="15" fill="rgb(246,56,21)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="1007.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (29 samples, 0.07%)</title><rect x="68.8314%" y="981" width="0.0673%" height="15" fill="rgb(222,28,53)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="991.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (29 samples, 0.07%)</title><rect x="68.8314%" y="965" width="0.0673%" height="15" fill="rgb(224,5,27)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="975.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (29 samples, 0.07%)</title><rect x="68.8314%" y="949" width="0.0673%" height="15" fill="rgb(220,153,33)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (29 samples, 0.07%)</title><rect x="68.8314%" y="933" width="0.0673%" height="15" fill="rgb(226,58,19)" fg:x="29656" fg:w="29"/><text x="69.0814%" y="943.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (7 samples, 0.02%)</title><rect x="68.9173%" y="885" width="0.0162%" height="15" fill="rgb(239,112,23)" fg:x="29693" fg:w="7"/><text x="69.1673%" y="895.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="68.9010%" y="901" width="0.0441%" height="15" fill="rgb(251,213,20)" fg:x="29686" fg:w="19"/><text x="69.1510%" y="911.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (6 samples, 0.01%)</title><rect x="68.9451%" y="901" width="0.0139%" height="15" fill="rgb(215,181,21)" fg:x="29705" fg:w="6"/><text x="69.1951%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="68.9451%" y="885" width="0.0139%" height="15" fill="rgb(240,8,35)" fg:x="29705" fg:w="6"/><text x="69.1951%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93 samples, 0.22%)</title><rect x="68.7455%" y="1141" width="0.2159%" height="15" fill="rgb(232,203,3)" fg:x="29619" fg:w="93"/><text x="68.9955%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.06%)</title><rect x="68.9010%" y="1125" width="0.0603%" height="15" fill="rgb(214,202,43)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1135.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (26 samples, 0.06%)</title><rect x="68.9010%" y="1109" width="0.0603%" height="15" fill="rgb(254,35,11)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (26 samples, 0.06%)</title><rect x="68.9010%" y="1093" width="0.0603%" height="15" fill="rgb(239,173,13)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (26 samples, 0.06%)</title><rect x="68.9010%" y="1077" width="0.0603%" height="15" fill="rgb(220,141,0)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1087.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (26 samples, 0.06%)</title><rect x="68.9010%" y="1061" width="0.0603%" height="15" fill="rgb(210,98,12)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::pin (26 samples, 0.06%)</title><rect x="68.9010%" y="1045" width="0.0603%" height="15" fill="rgb(254,153,22)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1055.50"></text></g><g><title>crossbeam_epoch::default::with_handle (26 samples, 0.06%)</title><rect x="68.9010%" y="1029" width="0.0603%" height="15" fill="rgb(247,223,17)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.06%)</title><rect x="68.9010%" y="1013" width="0.0603%" height="15" fill="rgb(246,56,7)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1023.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (26 samples, 0.06%)</title><rect x="68.9010%" y="997" width="0.0603%" height="15" fill="rgb(240,226,12)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (26 samples, 0.06%)</title><rect x="68.9010%" y="981" width="0.0603%" height="15" fill="rgb(205,87,46)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="991.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (26 samples, 0.06%)</title><rect x="68.9010%" y="965" width="0.0603%" height="15" fill="rgb(245,214,51)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="975.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (26 samples, 0.06%)</title><rect x="68.9010%" y="949" width="0.0603%" height="15" fill="rgb(223,172,33)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (26 samples, 0.06%)</title><rect x="68.9010%" y="933" width="0.0603%" height="15" fill="rgb(227,203,34)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="943.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (26 samples, 0.06%)</title><rect x="68.9010%" y="917" width="0.0603%" height="15" fill="rgb(248,143,44)" fg:x="29686" fg:w="26"/><text x="69.1510%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (5 samples, 0.01%)</title><rect x="68.9614%" y="1141" width="0.0116%" height="15" fill="rgb(226,162,5)" fg:x="29712" fg:w="5"/><text x="69.2114%" y="1151.50"></text></g><g><title>core::mem::drop (20 samples, 0.05%)</title><rect x="68.9730%" y="1141" width="0.0464%" height="15" fill="rgb(211,143,1)" fg:x="29717" fg:w="20"/><text x="69.2230%" y="1151.50"></text></g><g><title>core::mem::forget (26 samples, 0.06%)</title><rect x="69.0194%" y="1141" width="0.0603%" height="15" fill="rgb(224,96,15)" fg:x="29737" fg:w="26"/><text x="69.2694%" y="1151.50"></text></g><g><title>core::mem::replace (44 samples, 0.10%)</title><rect x="69.0820%" y="1141" width="0.1021%" height="15" fill="rgb(222,4,38)" fg:x="29764" fg:w="44"/><text x="69.3320%" y="1151.50"></text></g><g><title>core::mem::swap (7 samples, 0.02%)</title><rect x="69.1911%" y="1141" width="0.0162%" height="15" fill="rgb(253,228,15)" fg:x="29811" fg:w="7"/><text x="69.4411%" y="1151.50"></text></g><g><title>core::mem::take (58 samples, 0.13%)</title><rect x="69.2074%" y="1141" width="0.1346%" height="15" fill="rgb(242,194,12)" fg:x="29818" fg:w="58"/><text x="69.4574%" y="1151.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (7 samples, 0.02%)</title><rect x="69.3420%" y="1141" width="0.0162%" height="15" fill="rgb(214,177,31)" fg:x="29876" fg:w="7"/><text x="69.5920%" y="1151.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (22 samples, 0.05%)</title><rect x="69.3582%" y="1141" width="0.0511%" height="15" fill="rgb(226,58,51)" fg:x="29883" fg:w="22"/><text x="69.6082%" y="1151.50"></text></g><g><title>core::num::&lt;impl u16&gt;::unchecked_add (6 samples, 0.01%)</title><rect x="69.4116%" y="1141" width="0.0139%" height="15" fill="rgb(250,119,16)" fg:x="29906" fg:w="6"/><text x="69.6616%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.04%)</title><rect x="69.4279%" y="1141" width="0.0418%" height="15" fill="rgb(223,128,53)" fg:x="29913" fg:w="18"/><text x="69.6779%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_le (11 samples, 0.03%)</title><rect x="69.4697%" y="1141" width="0.0255%" height="15" fill="rgb(251,199,15)" fg:x="29931" fg:w="11"/><text x="69.7197%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47 samples, 0.11%)</title><rect x="69.4952%" y="1141" width="0.1091%" height="15" fill="rgb(235,168,42)" fg:x="29942" fg:w="47"/><text x="69.7452%" y="1151.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.03%)</title><rect x="69.6043%" y="1141" width="0.0255%" height="15" fill="rgb(250,210,17)" fg:x="29989" fg:w="11"/><text x="69.8543%" y="1151.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (10 samples, 0.02%)</title><rect x="69.6298%" y="1141" width="0.0232%" height="15" fill="rgb(226,36,41)" fg:x="30000" fg:w="10"/><text x="69.8798%" y="1151.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (13 samples, 0.03%)</title><rect x="69.6809%" y="1141" width="0.0302%" height="15" fill="rgb(225,87,10)" fg:x="30022" fg:w="13"/><text x="69.9309%" y="1151.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (14 samples, 0.03%)</title><rect x="69.7110%" y="1141" width="0.0325%" height="15" fill="rgb(228,83,9)" fg:x="30035" fg:w="14"/><text x="69.9610%" y="1151.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (14 samples, 0.03%)</title><rect x="69.7435%" y="1141" width="0.0325%" height="15" fill="rgb(225,16,36)" fg:x="30049" fg:w="14"/><text x="69.9935%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (52 samples, 0.12%)</title><rect x="69.7876%" y="1141" width="0.1207%" height="15" fill="rgb(242,198,13)" fg:x="30068" fg:w="52"/><text x="70.0376%" y="1151.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (5 samples, 0.01%)</title><rect x="69.8967%" y="1125" width="0.0116%" height="15" fill="rgb(239,25,51)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1135.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (5 samples, 0.01%)</title><rect x="69.8967%" y="1109" width="0.0116%" height="15" fill="rgb(239,28,37)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::executor::FakeExecutor&gt; (5 samples, 0.01%)</title><rect x="69.8967%" y="1093" width="0.0116%" height="15" fill="rgb(234,70,17)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt;&gt; (5 samples, 0.01%)</title><rect x="69.8967%" y="1077" width="0.0116%" height="15" fill="rgb(231,215,53)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt; (5 samples, 0.01%)</title><rect x="69.8967%" y="1061" width="0.0116%" height="15" fill="rgb(218,140,42)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;goldenfile::mint::Mint&gt; (5 samples, 0.01%)</title><rect x="69.8967%" y="1045" width="0.0116%" height="15" fill="rgb(233,227,45)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1055.50"></text></g><g><title>&lt;goldenfile::mint::Mint as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="69.8967%" y="1029" width="0.0116%" height="15" fill="rgb(225,189,21)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1039.50"></text></g><g><title>goldenfile::mint::Mint::check_goldenfiles (5 samples, 0.01%)</title><rect x="69.8967%" y="1013" width="0.0116%" height="15" fill="rgb(237,176,54)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (5 samples, 0.01%)</title><rect x="69.8967%" y="997" width="0.0116%" height="15" fill="rgb(215,131,46)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="1007.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.01%)</title><rect x="69.8967%" y="981" width="0.0116%" height="15" fill="rgb(218,95,20)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="991.50"></text></g><g><title>goldenfile::differs::text_diff (5 samples, 0.01%)</title><rect x="69.8967%" y="965" width="0.0116%" height="15" fill="rgb(208,198,12)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="975.50"></text></g><g><title>difference::Changeset::new (5 samples, 0.01%)</title><rect x="69.8967%" y="949" width="0.0116%" height="15" fill="rgb(239,107,50)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="959.50"></text></g><g><title>difference::merge::merge (5 samples, 0.01%)</title><rect x="69.8967%" y="933" width="0.0116%" height="15" fill="rgb(240,217,37)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="943.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (5 samples, 0.01%)</title><rect x="69.8967%" y="917" width="0.0116%" height="15" fill="rgb(242,197,49)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (5 samples, 0.01%)</title><rect x="69.8967%" y="901" width="0.0116%" height="15" fill="rgb(219,171,17)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="911.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (5 samples, 0.01%)</title><rect x="69.8967%" y="885" width="0.0116%" height="15" fill="rgb(209,81,40)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="895.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="69.8967%" y="869" width="0.0116%" height="15" fill="rgb(237,156,30)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="879.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (5 samples, 0.01%)</title><rect x="69.8967%" y="853" width="0.0116%" height="15" fill="rgb(212,127,16)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="863.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.01%)</title><rect x="69.8967%" y="837" width="0.0116%" height="15" fill="rgb(226,66,32)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 0.01%)</title><rect x="69.8967%" y="821" width="0.0116%" height="15" fill="rgb(245,22,46)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.01%)</title><rect x="69.8967%" y="805" width="0.0116%" height="15" fill="rgb(210,112,21)" fg:x="30115" fg:w="5"/><text x="70.1467%" y="815.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (10 samples, 0.02%)</title><rect x="69.9246%" y="901" width="0.0232%" height="15" fill="rgb(207,118,39)" fg:x="30127" fg:w="10"/><text x="70.1746%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.02%)</title><rect x="69.9315%" y="885" width="0.0162%" height="15" fill="rgb(205,206,35)" fg:x="30130" fg:w="7"/><text x="70.1815%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.06%)</title><rect x="69.9106%" y="1141" width="0.0557%" height="15" fill="rgb(222,120,2)" fg:x="30121" fg:w="24"/><text x="70.1606%" y="1151.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (18 samples, 0.04%)</title><rect x="69.9246%" y="1125" width="0.0418%" height="15" fill="rgb(205,38,18)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (18 samples, 0.04%)</title><rect x="69.9246%" y="1109" width="0.0418%" height="15" fill="rgb(226,61,2)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (18 samples, 0.04%)</title><rect x="69.9246%" y="1093" width="0.0418%" height="15" fill="rgb(242,161,23)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1103.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (18 samples, 0.04%)</title><rect x="69.9246%" y="1077" width="0.0418%" height="15" fill="rgb(213,13,52)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1087.50"></text></g><g><title>crossbeam_epoch::default::pin (18 samples, 0.04%)</title><rect x="69.9246%" y="1061" width="0.0418%" height="15" fill="rgb(246,209,47)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::with_handle (18 samples, 0.04%)</title><rect x="69.9246%" y="1045" width="0.0418%" height="15" fill="rgb(214,41,3)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.04%)</title><rect x="69.9246%" y="1029" width="0.0418%" height="15" fill="rgb(236,119,38)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1039.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (18 samples, 0.04%)</title><rect x="69.9246%" y="1013" width="0.0418%" height="15" fill="rgb(218,50,11)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1023.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (18 samples, 0.04%)</title><rect x="69.9246%" y="997" width="0.0418%" height="15" fill="rgb(228,38,11)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="1007.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (18 samples, 0.04%)</title><rect x="69.9246%" y="981" width="0.0418%" height="15" fill="rgb(212,13,9)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="991.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (18 samples, 0.04%)</title><rect x="69.9246%" y="965" width="0.0418%" height="15" fill="rgb(208,211,9)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="975.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (18 samples, 0.04%)</title><rect x="69.9246%" y="949" width="0.0418%" height="15" fill="rgb(239,39,32)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="959.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (18 samples, 0.04%)</title><rect x="69.9246%" y="933" width="0.0418%" height="15" fill="rgb(254,179,26)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="943.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="69.9246%" y="917" width="0.0418%" height="15" fill="rgb(249,165,28)" fg:x="30127" fg:w="18"/><text x="70.1746%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (5 samples, 0.01%)</title><rect x="69.9547%" y="901" width="0.0116%" height="15" fill="rgb(225,59,50)" fg:x="30140" fg:w="5"/><text x="70.2047%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (5 samples, 0.01%)</title><rect x="69.9547%" y="885" width="0.0116%" height="15" fill="rgb(209,122,5)" fg:x="30140" fg:w="5"/><text x="70.2047%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (25 samples, 0.06%)</title><rect x="69.9803%" y="1141" width="0.0580%" height="15" fill="rgb(214,65,34)" fg:x="30151" fg:w="25"/><text x="70.2303%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.05%)</title><rect x="70.0383%" y="1141" width="0.0534%" height="15" fill="rgb(249,183,32)" fg:x="30176" fg:w="23"/><text x="70.2883%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (24 samples, 0.06%)</title><rect x="70.0986%" y="1141" width="0.0557%" height="15" fill="rgb(218,122,24)" fg:x="30202" fg:w="24"/><text x="70.3486%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (5 samples, 0.01%)</title><rect x="70.1543%" y="1141" width="0.0116%" height="15" fill="rgb(224,109,18)" fg:x="30226" fg:w="5"/><text x="70.4043%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.02%)</title><rect x="70.1660%" y="1141" width="0.0162%" height="15" fill="rgb(210,68,50)" fg:x="30231" fg:w="7"/><text x="70.4160%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (88 samples, 0.20%)</title><rect x="70.1822%" y="1141" width="0.2042%" height="15" fill="rgb(212,184,34)" fg:x="30238" fg:w="88"/><text x="70.4322%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (105 samples, 0.24%)</title><rect x="70.3864%" y="1141" width="0.2437%" height="15" fill="rgb(238,105,48)" fg:x="30326" fg:w="105"/><text x="70.6364%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (58 samples, 0.13%)</title><rect x="70.6394%" y="1141" width="0.1346%" height="15" fill="rgb(222,134,54)" fg:x="30435" fg:w="58"/><text x="70.8894%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (27 samples, 0.06%)</title><rect x="70.7741%" y="1141" width="0.0627%" height="15" fill="rgb(246,24,43)" fg:x="30493" fg:w="27"/><text x="71.0241%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (47 samples, 0.11%)</title><rect x="70.8437%" y="1141" width="0.1091%" height="15" fill="rgb(227,169,22)" fg:x="30523" fg:w="47"/><text x="71.0937%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (145 samples, 0.34%)</title><rect x="70.9528%" y="1141" width="0.3365%" height="15" fill="rgb(253,152,4)" fg:x="30570" fg:w="145"/><text x="71.2028%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (9 samples, 0.02%)</title><rect x="71.2893%" y="1141" width="0.0209%" height="15" fill="rgb(219,158,36)" fg:x="30715" fg:w="9"/><text x="71.5393%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (89 samples, 0.21%)</title><rect x="71.3102%" y="1141" width="0.2066%" height="15" fill="rgb(251,128,40)" fg:x="30724" fg:w="89"/><text x="71.5602%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (41 samples, 0.10%)</title><rect x="71.5214%" y="1141" width="0.0952%" height="15" fill="rgb(254,101,39)" fg:x="30815" fg:w="41"/><text x="71.7714%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (64 samples, 0.15%)</title><rect x="71.6166%" y="1141" width="0.1485%" height="15" fill="rgb(221,168,40)" fg:x="30856" fg:w="64"/><text x="71.8666%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (49 samples, 0.11%)</title><rect x="71.7651%" y="1141" width="0.1137%" height="15" fill="rgb(221,14,27)" fg:x="30920" fg:w="49"/><text x="72.0151%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (6 samples, 0.01%)</title><rect x="71.8788%" y="1141" width="0.0139%" height="15" fill="rgb(207,36,43)" fg:x="30969" fg:w="6"/><text x="72.1288%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (22 samples, 0.05%)</title><rect x="71.8928%" y="1141" width="0.0511%" height="15" fill="rgb(240,172,53)" fg:x="30975" fg:w="22"/><text x="72.1428%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (31 samples, 0.07%)</title><rect x="71.9438%" y="1141" width="0.0720%" height="15" fill="rgb(241,138,43)" fg:x="30997" fg:w="31"/><text x="72.1938%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (14 samples, 0.03%)</title><rect x="72.1063%" y="1141" width="0.0325%" height="15" fill="rgb(227,78,19)" fg:x="31067" fg:w="14"/><text x="72.3563%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="72.1388%" y="1141" width="0.0186%" height="15" fill="rgb(215,127,44)" fg:x="31081" fg:w="8"/><text x="72.3888%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (7 samples, 0.02%)</title><rect x="72.1759%" y="1141" width="0.0162%" height="15" fill="rgb(227,13,10)" fg:x="31097" fg:w="7"/><text x="72.4259%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (11 samples, 0.03%)</title><rect x="72.1991%" y="1141" width="0.0255%" height="15" fill="rgb(249,177,6)" fg:x="31107" fg:w="11"/><text x="72.4491%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (6 samples, 0.01%)</title><rect x="72.2409%" y="1141" width="0.0139%" height="15" fill="rgb(215,154,26)" fg:x="31125" fg:w="6"/><text x="72.4909%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (9 samples, 0.02%)</title><rect x="72.2665%" y="1141" width="0.0209%" height="15" fill="rgb(250,168,20)" fg:x="31136" fg:w="9"/><text x="72.5165%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (5 samples, 0.01%)</title><rect x="72.3013%" y="1141" width="0.0116%" height="15" fill="rgb(222,53,38)" fg:x="31151" fg:w="5"/><text x="72.5513%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (5 samples, 0.01%)</title><rect x="72.4196%" y="1141" width="0.0116%" height="15" fill="rgb(245,154,5)" fg:x="31202" fg:w="5"/><text x="72.6696%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (5 samples, 0.01%)</title><rect x="72.4498%" y="1141" width="0.0116%" height="15" fill="rgb(214,89,50)" fg:x="31215" fg:w="5"/><text x="72.6998%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (5 samples, 0.01%)</title><rect x="72.5055%" y="1141" width="0.0116%" height="15" fill="rgb(232,73,14)" fg:x="31239" fg:w="5"/><text x="72.7555%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (5 samples, 0.01%)</title><rect x="72.5171%" y="1141" width="0.0116%" height="15" fill="rgb(230,101,20)" fg:x="31244" fg:w="5"/><text x="72.7671%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (5 samples, 0.01%)</title><rect x="72.5380%" y="1141" width="0.0116%" height="15" fill="rgb(208,56,28)" fg:x="31253" fg:w="5"/><text x="72.7880%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (8 samples, 0.02%)</title><rect x="72.5659%" y="1141" width="0.0186%" height="15" fill="rgb(247,205,22)" fg:x="31265" fg:w="8"/><text x="72.8159%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::ops::range::RangeInclusive&lt;u16&gt;&gt; (5 samples, 0.01%)</title><rect x="72.6285%" y="1141" width="0.0116%" height="15" fill="rgb(252,109,51)" fg:x="31292" fg:w="5"/><text x="72.8785%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (9 samples, 0.02%)</title><rect x="72.6726%" y="1141" width="0.0209%" height="15" fill="rgb(220,40,24)" fg:x="31311" fg:w="9"/><text x="72.9226%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (5 samples, 0.01%)</title><rect x="72.7190%" y="1141" width="0.0116%" height="15" fill="rgb(251,108,7)" fg:x="31331" fg:w="5"/><text x="72.9690%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (9 samples, 0.02%)</title><rect x="72.7608%" y="1141" width="0.0209%" height="15" fill="rgb(238,102,51)" fg:x="31349" fg:w="9"/><text x="73.0108%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (7 samples, 0.02%)</title><rect x="72.7864%" y="1141" width="0.0162%" height="15" fill="rgb(219,149,34)" fg:x="31360" fg:w="7"/><text x="73.0364%" y="1151.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (39 samples, 0.09%)</title><rect x="72.8397%" y="1141" width="0.0905%" height="15" fill="rgb(239,70,0)" fg:x="31383" fg:w="39"/><text x="73.0897%" y="1151.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (29 samples, 0.07%)</title><rect x="72.9303%" y="1141" width="0.0673%" height="15" fill="rgb(246,214,23)" fg:x="31422" fg:w="29"/><text x="73.1803%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (74 samples, 0.17%)</title><rect x="73.0022%" y="1141" width="0.1718%" height="15" fill="rgb(239,221,51)" fg:x="31453" fg:w="74"/><text x="73.2522%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (61 samples, 0.14%)</title><rect x="73.1740%" y="1141" width="0.1416%" height="15" fill="rgb(254,62,14)" fg:x="31527" fg:w="61"/><text x="73.4240%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (6 samples, 0.01%)</title><rect x="73.3155%" y="1141" width="0.0139%" height="15" fill="rgb(253,57,33)" fg:x="31588" fg:w="6"/><text x="73.5655%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (29 samples, 0.07%)</title><rect x="73.3364%" y="1141" width="0.0673%" height="15" fill="rgb(229,34,6)" fg:x="31597" fg:w="29"/><text x="73.5864%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (106 samples, 0.25%)</title><rect x="73.4037%" y="1141" width="0.2460%" height="15" fill="rgb(235,191,23)" fg:x="31626" fg:w="106"/><text x="73.6537%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (24 samples, 0.06%)</title><rect x="73.6498%" y="1141" width="0.0557%" height="15" fill="rgb(217,207,27)" fg:x="31732" fg:w="24"/><text x="73.8998%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (27 samples, 0.06%)</title><rect x="73.7101%" y="1141" width="0.0627%" height="15" fill="rgb(232,41,44)" fg:x="31758" fg:w="27"/><text x="73.9601%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (52 samples, 0.12%)</title><rect x="73.7728%" y="1141" width="0.1207%" height="15" fill="rgb(221,188,19)" fg:x="31785" fg:w="52"/><text x="74.0228%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (27 samples, 0.06%)</title><rect x="73.9004%" y="1141" width="0.0627%" height="15" fill="rgb(245,180,45)" fg:x="31840" fg:w="27"/><text x="74.1504%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (308 samples, 0.71%)</title><rect x="73.9677%" y="1141" width="0.7149%" height="15" fill="rgb(250,220,42)" fg:x="31869" fg:w="308"/><text x="74.2177%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (18 samples, 0.04%)</title><rect x="74.6826%" y="1141" width="0.0418%" height="15" fill="rgb(234,16,34)" fg:x="32177" fg:w="18"/><text x="74.9326%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (37 samples, 0.09%)</title><rect x="74.7244%" y="1141" width="0.0859%" height="15" fill="rgb(233,217,23)" fg:x="32195" fg:w="37"/><text x="74.9744%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (19 samples, 0.04%)</title><rect x="74.8103%" y="1141" width="0.0441%" height="15" fill="rgb(209,22,46)" fg:x="32232" fg:w="19"/><text x="75.0603%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (65 samples, 0.15%)</title><rect x="74.8544%" y="1141" width="0.1509%" height="15" fill="rgb(213,101,18)" fg:x="32251" fg:w="65"/><text x="75.1044%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::as_non_null_ptr (5 samples, 0.01%)</title><rect x="75.0075%" y="1141" width="0.0116%" height="15" fill="rgb(215,179,52)" fg:x="32317" fg:w="5"/><text x="75.2575%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::len (9 samples, 0.02%)</title><rect x="75.0191%" y="1141" width="0.0209%" height="15" fill="rgb(223,50,25)" fg:x="32322" fg:w="9"/><text x="75.2691%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (18 samples, 0.04%)</title><rect x="75.0400%" y="1141" width="0.0418%" height="15" fill="rgb(224,51,44)" fg:x="32331" fg:w="18"/><text x="75.2900%" y="1151.50"></text></g><g><title>core::ptr::read (239 samples, 0.55%)</title><rect x="75.0818%" y="1141" width="0.5547%" height="15" fill="rgb(224,13,54)" fg:x="32349" fg:w="239"/><text x="75.3318%" y="1151.50"></text></g><g><title>core::ptr::slice_from_raw_parts (83 samples, 0.19%)</title><rect x="75.6365%" y="1141" width="0.1926%" height="15" fill="rgb(219,58,47)" fg:x="32588" fg:w="83"/><text x="75.8865%" y="1151.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (74 samples, 0.17%)</title><rect x="75.8292%" y="1141" width="0.1718%" height="15" fill="rgb(246,124,34)" fg:x="32671" fg:w="74"/><text x="76.0792%" y="1151.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (91 samples, 0.21%)</title><rect x="76.0125%" y="1141" width="0.2112%" height="15" fill="rgb(245,109,25)" fg:x="32750" fg:w="91"/><text x="76.2625%" y="1151.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ref (9 samples, 0.02%)</title><rect x="76.2237%" y="1141" width="0.0209%" height="15" fill="rgb(235,48,23)" fg:x="32841" fg:w="9"/><text x="76.4737%" y="1151.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (9 samples, 0.02%)</title><rect x="76.2446%" y="1141" width="0.0209%" height="15" fill="rgb(229,203,36)" fg:x="32850" fg:w="9"/><text x="76.4946%" y="1151.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (21 samples, 0.05%)</title><rect x="76.2655%" y="1141" width="0.0487%" height="15" fill="rgb(234,180,9)" fg:x="32859" fg:w="21"/><text x="76.5155%" y="1151.50"></text></g><g><title>core::ptr::write (93 samples, 0.22%)</title><rect x="76.3143%" y="1141" width="0.2159%" height="15" fill="rgb(228,98,45)" fg:x="32880" fg:w="93"/><text x="76.5643%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (6 samples, 0.01%)</title><rect x="76.5371%" y="1141" width="0.0139%" height="15" fill="rgb(240,24,36)" fg:x="32976" fg:w="6"/><text x="76.7871%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.02%)</title><rect x="76.5556%" y="1141" width="0.0186%" height="15" fill="rgb(227,154,19)" fg:x="32984" fg:w="8"/><text x="76.8056%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (19 samples, 0.04%)</title><rect x="76.5742%" y="1141" width="0.0441%" height="15" fill="rgb(231,2,48)" fg:x="32992" fg:w="19"/><text x="76.8242%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.02%)</title><rect x="76.6183%" y="1141" width="0.0162%" height="15" fill="rgb(219,216,0)" fg:x="33011" fg:w="7"/><text x="76.8683%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (11 samples, 0.03%)</title><rect x="76.6346%" y="1141" width="0.0255%" height="15" fill="rgb(251,88,0)" fg:x="33018" fg:w="11"/><text x="76.8846%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (18 samples, 0.04%)</title><rect x="76.6601%" y="1141" width="0.0418%" height="15" fill="rgb(242,45,45)" fg:x="33029" fg:w="18"/><text x="76.9101%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (40 samples, 0.09%)</title><rect x="76.7019%" y="1141" width="0.0928%" height="15" fill="rgb(218,149,45)" fg:x="33047" fg:w="40"/><text x="76.9519%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (98 samples, 0.23%)</title><rect x="76.7970%" y="1141" width="0.2275%" height="15" fill="rgb(247,194,10)" fg:x="33088" fg:w="98"/><text x="77.0470%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (71 samples, 0.16%)</title><rect x="77.0245%" y="1141" width="0.1648%" height="15" fill="rgb(234,33,37)" fg:x="33186" fg:w="71"/><text x="77.2745%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (35 samples, 0.08%)</title><rect x="77.1916%" y="1141" width="0.0812%" height="15" fill="rgb(218,61,13)" fg:x="33258" fg:w="35"/><text x="77.4416%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (40 samples, 0.09%)</title><rect x="77.2752%" y="1141" width="0.0928%" height="15" fill="rgb(210,80,52)" fg:x="33294" fg:w="40"/><text x="77.5252%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.06%)</title><rect x="77.4098%" y="1141" width="0.0557%" height="15" fill="rgb(218,203,27)" fg:x="33352" fg:w="24"/><text x="77.6598%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (5 samples, 0.01%)</title><rect x="77.4655%" y="1141" width="0.0116%" height="15" fill="rgb(209,126,33)" fg:x="33376" fg:w="5"/><text x="77.7155%" y="1151.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (102 samples, 0.24%)</title><rect x="77.4840%" y="1141" width="0.2367%" height="15" fill="rgb(234,173,41)" fg:x="33384" fg:w="102"/><text x="77.7340%" y="1151.50"></text></g><g><title>core::slice::raw::from_raw_parts (59 samples, 0.14%)</title><rect x="77.7208%" y="1141" width="0.1369%" height="15" fill="rgb(228,166,9)" fg:x="33486" fg:w="59"/><text x="77.9708%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.01%)</title><rect x="77.8693%" y="1141" width="0.0139%" height="15" fill="rgb(208,124,43)" fg:x="33550" fg:w="6"/><text x="78.1193%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.02%)</title><rect x="77.8879%" y="1141" width="0.0209%" height="15" fill="rgb(212,154,38)" fg:x="33558" fg:w="9"/><text x="78.1379%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (7 samples, 0.02%)</title><rect x="77.9111%" y="1141" width="0.0162%" height="15" fill="rgb(246,179,35)" fg:x="33568" fg:w="7"/><text x="78.1611%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="77.9274%" y="1141" width="0.0232%" height="15" fill="rgb(251,3,50)" fg:x="33575" fg:w="10"/><text x="78.1774%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_store (7 samples, 0.02%)</title><rect x="77.9506%" y="1141" width="0.0162%" height="15" fill="rgb(219,96,8)" fg:x="33585" fg:w="7"/><text x="78.2006%" y="1151.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (11 samples, 0.03%)</title><rect x="77.9761%" y="1141" width="0.0255%" height="15" fill="rgb(251,216,33)" fg:x="33596" fg:w="11"/><text x="78.2261%" y="1151.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (7 samples, 0.02%)</title><rect x="78.0202%" y="1141" width="0.0162%" height="15" fill="rgb(243,145,29)" fg:x="33615" fg:w="7"/><text x="78.2702%" y="1151.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (5 samples, 0.01%)</title><rect x="78.0364%" y="1141" width="0.0116%" height="15" fill="rgb(210,75,20)" fg:x="33622" fg:w="5"/><text x="78.2864%" y="1151.50"></text></g><g><title>crossbeam_epoch::default::with_handle (10 samples, 0.02%)</title><rect x="78.0504%" y="1141" width="0.0232%" height="15" fill="rgb(235,56,8)" fg:x="33628" fg:w="10"/><text x="78.3004%" y="1151.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (5 samples, 0.01%)</title><rect x="78.0759%" y="1141" width="0.0116%" height="15" fill="rgb(226,175,49)" fg:x="33639" fg:w="5"/><text x="78.3259%" y="1151.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (5 samples, 0.01%)</title><rect x="78.0875%" y="1141" width="0.0116%" height="15" fill="rgb(242,204,23)" fg:x="33644" fg:w="5"/><text x="78.3375%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (11 samples, 0.03%)</title><rect x="78.1130%" y="1125" width="0.0255%" height="15" fill="rgb(225,104,24)" fg:x="33655" fg:w="11"/><text x="78.3630%" y="1135.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="78.1130%" y="1109" width="0.0255%" height="15" fill="rgb(253,34,1)" fg:x="33655" fg:w="11"/><text x="78.3630%" y="1119.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Local as crossbeam_epoch::sync::list::IsElement&lt;crossbeam_epoch::internal::Local&gt;&gt;::element_of (11 samples, 0.03%)</title><rect x="78.1130%" y="1093" width="0.0255%" height="15" fill="rgb(233,199,23)" fg:x="33655" fg:w="11"/><text x="78.3630%" y="1103.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="78.1386%" y="1109" width="0.0116%" height="15" fill="rgb(247,7,51)" fg:x="33666" fg:w="5"/><text x="78.3886%" y="1119.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (23 samples, 0.05%)</title><rect x="78.1130%" y="1141" width="0.0534%" height="15" fill="rgb(214,146,12)" fg:x="33655" fg:w="23"/><text x="78.3630%" y="1151.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (12 samples, 0.03%)</title><rect x="78.1386%" y="1125" width="0.0279%" height="15" fill="rgb(234,181,43)" fg:x="33666" fg:w="12"/><text x="78.3886%" y="1135.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::pop_if_internal (7 samples, 0.02%)</title><rect x="78.1502%" y="1109" width="0.0162%" height="15" fill="rgb(239,148,6)" fg:x="33671" fg:w="7"/><text x="78.4002%" y="1119.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (7 samples, 0.02%)</title><rect x="78.1711%" y="1141" width="0.0162%" height="15" fill="rgb(206,151,17)" fg:x="33680" fg:w="7"/><text x="78.4211%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (20 samples, 0.05%)</title><rect x="78.1919%" y="1141" width="0.0464%" height="15" fill="rgb(213,215,10)" fg:x="33689" fg:w="20"/><text x="78.4419%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Local::register (8 samples, 0.02%)</title><rect x="78.2384%" y="1141" width="0.0186%" height="15" fill="rgb(215,220,44)" fg:x="33709" fg:w="8"/><text x="78.4884%" y="1151.50"></text></g><g><title>crossbeam_epoch::internal::Bag::new (7 samples, 0.02%)</title><rect x="78.2407%" y="1125" width="0.0162%" height="15" fill="rgb(245,205,37)" fg:x="33710" fg:w="7"/><text x="78.4907%" y="1135.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::default::Default&gt;::default (7 samples, 0.02%)</title><rect x="78.2407%" y="1109" width="0.0162%" height="15" fill="rgb(245,130,43)" fg:x="33710" fg:w="7"/><text x="78.4907%" y="1119.50"></text></g><g><title>diem_types::transaction::authenticator::TransactionAuthenticator::verify (9 samples, 0.02%)</title><rect x="78.2964%" y="1141" width="0.0209%" height="15" fill="rgb(231,227,38)" fg:x="33734" fg:w="9"/><text x="78.5464%" y="1151.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519Signature as diem_crypto::traits::Signature&gt;::verify (9 samples, 0.02%)</title><rect x="78.2964%" y="1125" width="0.0209%" height="15" fill="rgb(233,185,4)" fg:x="33734" fg:w="9"/><text x="78.5464%" y="1135.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519Signature as diem_crypto::traits::Signature&gt;::verify_arbitrary_msg (9 samples, 0.02%)</title><rect x="78.2964%" y="1109" width="0.0209%" height="15" fill="rgb(224,154,43)" fg:x="33734" fg:w="9"/><text x="78.5464%" y="1119.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::verify_strict (9 samples, 0.02%)</title><rect x="78.2964%" y="1093" width="0.0209%" height="15" fill="rgb(235,156,15)" fg:x="33734" fg:w="9"/><text x="78.5464%" y="1103.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (5 samples, 0.01%)</title><rect x="78.3057%" y="1077" width="0.0116%" height="15" fill="rgb(211,55,43)" fg:x="33738" fg:w="5"/><text x="78.5557%" y="1087.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::scalar_mul::vartime_double_base::mul (5 samples, 0.01%)</title><rect x="78.3057%" y="1061" width="0.0116%" height="15" fill="rgb(247,149,40)" fg:x="33738" fg:w="5"/><text x="78.5557%" y="1071.50"></text></g><g><title>__GI___mprotect (6 samples, 0.01%)</title><rect x="78.3451%" y="629" width="0.0139%" height="15" fill="rgb(232,171,16)" fg:x="33755" fg:w="6"/><text x="78.5951%" y="639.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_impl (19 samples, 0.04%)</title><rect x="78.3173%" y="1141" width="0.0441%" height="15" fill="rgb(215,117,49)" fg:x="33743" fg:w="19"/><text x="78.5673%" y="1151.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (18 samples, 0.04%)</title><rect x="78.3196%" y="1125" width="0.0418%" height="15" fill="rgb(246,194,11)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1135.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (18 samples, 0.04%)</title><rect x="78.3196%" y="1109" width="0.0418%" height="15" fill="rgb(242,101,44)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1119.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (18 samples, 0.04%)</title><rect x="78.3196%" y="1093" width="0.0418%" height="15" fill="rgb(226,174,6)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1103.50"></text></g><g><title>rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (18 samples, 0.04%)</title><rect x="78.3196%" y="1077" width="0.0418%" height="15" fill="rgb(213,150,20)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1087.50"></text></g><g><title>rayon::iter::collect::special_extend (18 samples, 0.04%)</title><rect x="78.3196%" y="1061" width="0.0418%" height="15" fill="rgb(222,124,42)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1071.50"></text></g><g><title>rayon::iter::collect::Collect&lt;T&gt;::with_consumer (18 samples, 0.04%)</title><rect x="78.3196%" y="1045" width="0.0418%" height="15" fill="rgb(250,19,47)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1055.50"></text></g><g><title>rayon::iter::collect::special_extend::_{{closure}} (18 samples, 0.04%)</title><rect x="78.3196%" y="1029" width="0.0418%" height="15" fill="rgb(241,217,19)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (18 samples, 0.04%)</title><rect x="78.3196%" y="1013" width="0.0418%" height="15" fill="rgb(207,210,34)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1023.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (18 samples, 0.04%)</title><rect x="78.3196%" y="997" width="0.0418%" height="15" fill="rgb(244,45,4)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge (18 samples, 0.04%)</title><rect x="78.3196%" y="981" width="0.0418%" height="15" fill="rgb(252,134,50)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="991.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (18 samples, 0.04%)</title><rect x="78.3196%" y="965" width="0.0418%" height="15" fill="rgb(238,74,2)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="975.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (18 samples, 0.04%)</title><rect x="78.3196%" y="949" width="0.0418%" height="15" fill="rgb(226,58,46)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="959.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (18 samples, 0.04%)</title><rect x="78.3196%" y="933" width="0.0418%" height="15" fill="rgb(232,83,35)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (18 samples, 0.04%)</title><rect x="78.3196%" y="917" width="0.0418%" height="15" fill="rgb(212,148,47)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="927.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (18 samples, 0.04%)</title><rect x="78.3196%" y="901" width="0.0418%" height="15" fill="rgb(235,29,1)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (18 samples, 0.04%)</title><rect x="78.3196%" y="885" width="0.0418%" height="15" fill="rgb(247,55,37)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="895.50"></text></g><g><title>rayon_core::current_num_threads (18 samples, 0.04%)</title><rect x="78.3196%" y="869" width="0.0418%" height="15" fill="rgb(222,48,3)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="879.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (18 samples, 0.04%)</title><rect x="78.3196%" y="853" width="0.0418%" height="15" fill="rgb(234,21,33)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="863.50"></text></g><g><title>rayon_core::registry::global_registry (18 samples, 0.04%)</title><rect x="78.3196%" y="837" width="0.0418%" height="15" fill="rgb(247,178,53)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="847.50"></text></g><g><title>rayon_core::registry::set_global_registry (18 samples, 0.04%)</title><rect x="78.3196%" y="821" width="0.0418%" height="15" fill="rgb(225,75,7)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="831.50"></text></g><g><title>std::sync::once::Once::call_once (18 samples, 0.04%)</title><rect x="78.3196%" y="805" width="0.0418%" height="15" fill="rgb(219,199,7)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="815.50"></text></g><g><title>std::sync::once::Once::call_inner (18 samples, 0.04%)</title><rect x="78.3196%" y="789" width="0.0418%" height="15" fill="rgb(209,93,42)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="799.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (18 samples, 0.04%)</title><rect x="78.3196%" y="773" width="0.0418%" height="15" fill="rgb(240,175,17)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="783.50"></text></g><g><title>rayon_core::registry::set_global_registry::_{{closure}} (18 samples, 0.04%)</title><rect x="78.3196%" y="757" width="0.0418%" height="15" fill="rgb(232,106,7)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="767.50"></text></g><g><title>rayon_core::registry::global_registry::_{{closure}} (18 samples, 0.04%)</title><rect x="78.3196%" y="741" width="0.0418%" height="15" fill="rgb(242,106,43)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="751.50"></text></g><g><title>rayon_core::registry::Registry::new (18 samples, 0.04%)</title><rect x="78.3196%" y="725" width="0.0418%" height="15" fill="rgb(242,61,37)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="735.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (18 samples, 0.04%)</title><rect x="78.3196%" y="709" width="0.0418%" height="15" fill="rgb(205,72,10)" fg:x="33744" fg:w="18"/><text x="78.5696%" y="719.50"></text></g><g><title>std::thread::Builder::spawn (17 samples, 0.04%)</title><rect x="78.3219%" y="693" width="0.0395%" height="15" fill="rgb(214,184,36)" fg:x="33745" fg:w="17"/><text x="78.5719%" y="703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (17 samples, 0.04%)</title><rect x="78.3219%" y="677" width="0.0395%" height="15" fill="rgb(206,107,18)" fg:x="33745" fg:w="17"/><text x="78.5719%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::new (17 samples, 0.04%)</title><rect x="78.3219%" y="661" width="0.0395%" height="15" fill="rgb(210,75,5)" fg:x="33745" fg:w="17"/><text x="78.5719%" y="671.50"></text></g><g><title>__pthread_create_2_1 (17 samples, 0.04%)</title><rect x="78.3219%" y="645" width="0.0395%" height="15" fill="rgb(205,3,19)" fg:x="33745" fg:w="17"/><text x="78.5719%" y="655.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_script_or_script_function (7 samples, 0.02%)</title><rect x="78.3637%" y="1109" width="0.0162%" height="15" fill="rgb(207,181,42)" fg:x="33763" fg:w="7"/><text x="78.6137%" y="1119.50"></text></g><g><title>diem_vm::diem_transaction_validator::validate_signature_checked_transaction (7 samples, 0.02%)</title><rect x="78.3799%" y="1109" width="0.0162%" height="15" fill="rgb(229,179,43)" fg:x="33770" fg:w="7"/><text x="78.6299%" y="1119.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_single_transaction (19 samples, 0.04%)</title><rect x="78.3614%" y="1141" width="0.0441%" height="15" fill="rgb(246,95,30)" fg:x="33762" fg:w="19"/><text x="78.6114%" y="1151.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_user_transaction (18 samples, 0.04%)</title><rect x="78.3637%" y="1125" width="0.0418%" height="15" fill="rgb(234,144,45)" fg:x="33763" fg:w="18"/><text x="78.6137%" y="1135.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_user_transaction (5 samples, 0.01%)</title><rect x="78.4055%" y="1141" width="0.0116%" height="15" fill="rgb(250,54,25)" fg:x="33781" fg:w="5"/><text x="78.6555%" y="1151.50"></text></g><g><title>diem_vm::diem_vm::DiemVMImpl::load_configs_impl (8 samples, 0.02%)</title><rect x="78.4565%" y="1125" width="0.0186%" height="15" fill="rgb(215,195,40)" fg:x="33803" fg:w="8"/><text x="78.7065%" y="1135.50"></text></g><g><title>diem_types::on_chain_config::OnChainConfig::fetch_config (8 samples, 0.02%)</title><rect x="78.4565%" y="1109" width="0.0186%" height="15" fill="rgb(233,188,42)" fg:x="33803" fg:w="8"/><text x="78.7065%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.02%)</title><rect x="78.4565%" y="1093" width="0.0186%" height="15" fill="rgb(247,227,35)" fg:x="33803" fg:w="8"/><text x="78.7065%" y="1103.50"></text></g><g><title>diem_types::on_chain_config::OnChainConfig::fetch_config::_{{closure}} (8 samples, 0.02%)</title><rect x="78.4565%" y="1077" width="0.0186%" height="15" fill="rgb(249,124,27)" fg:x="33803" fg:w="8"/><text x="78.7065%" y="1087.50"></text></g><g><title>&lt;diem_types::on_chain_config::vm_config::VMConfig as diem_types::on_chain_config::OnChainConfig&gt;::deserialize_into_config (8 samples, 0.02%)</title><rect x="78.4565%" y="1061" width="0.0186%" height="15" fill="rgb(219,207,25)" fg:x="33803" fg:w="8"/><text x="78.7065%" y="1071.50"></text></g><g><title>diem_types::on_chain_config::vm_config::CostTableInner::as_cost_table (7 samples, 0.02%)</title><rect x="78.4589%" y="1045" width="0.0162%" height="15" fill="rgb(241,216,47)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="1055.50"></text></g><g><title>bcs::de::from_bytes (7 samples, 0.02%)</title><rect x="78.4589%" y="1029" width="0.0162%" height="15" fill="rgb(233,82,50)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="1013" width="0.0162%" height="15" fill="rgb(232,63,2)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="1023.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (7 samples, 0.02%)</title><rect x="78.4589%" y="997" width="0.0162%" height="15" fill="rgb(236,184,28)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="1007.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="78.4589%" y="981" width="0.0162%" height="15" fill="rgb(254,63,27)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="78.4589%" y="965" width="0.0162%" height="15" fill="rgb(253,106,28)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="975.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="78.4589%" y="949" width="0.0162%" height="15" fill="rgb(225,141,39)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="933" width="0.0162%" height="15" fill="rgb(222,157,20)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="943.50"></text></g><g><title>move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::GasCost&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="917" width="0.0162%" height="15" fill="rgb(210,190,9)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="927.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (7 samples, 0.02%)</title><rect x="78.4589%" y="901" width="0.0162%" height="15" fill="rgb(242,167,7)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="911.50"></text></g><g><title>&lt;move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::GasCost&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="78.4589%" y="885" width="0.0162%" height="15" fill="rgb(227,82,41)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="895.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="78.4589%" y="869" width="0.0162%" height="15" fill="rgb(222,131,13)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="879.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="78.4589%" y="853" width="0.0162%" height="15" fill="rgb(221,98,26)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="837" width="0.0162%" height="15" fill="rgb(251,63,52)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="847.50"></text></g><g><title>move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::InternalGasUnits&lt;GasCarrier&gt;&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="821" width="0.0162%" height="15" fill="rgb(246,25,43)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="831.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (7 samples, 0.02%)</title><rect x="78.4589%" y="805" width="0.0162%" height="15" fill="rgb(247,167,15)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="815.50"></text></g><g><title>&lt;move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::InternalGasUnits&lt;GasCarrier&gt;&gt;::deserialize::__Visitor&lt;GasCarrier&gt; as serde::de::Visitor&gt;::visit_newtype_struct (7 samples, 0.02%)</title><rect x="78.4589%" y="789" width="0.0162%" height="15" fill="rgb(240,104,42)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (7 samples, 0.02%)</title><rect x="78.4589%" y="773" width="0.0162%" height="15" fill="rgb(224,54,6)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="783.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (7 samples, 0.02%)</title><rect x="78.4589%" y="757" width="0.0162%" height="15" fill="rgb(244,108,35)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="767.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (7 samples, 0.02%)</title><rect x="78.4589%" y="741" width="0.0162%" height="15" fill="rgb(216,154,2)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="751.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (7 samples, 0.02%)</title><rect x="78.4589%" y="725" width="0.0162%" height="15" fill="rgb(222,8,47)" fg:x="33804" fg:w="7"/><text x="78.7089%" y="735.50"></text></g><g><title>bcs::de::Deserializer::next (6 samples, 0.01%)</title><rect x="78.4612%" y="709" width="0.0139%" height="15" fill="rgb(252,93,1)" fg:x="33805" fg:w="6"/><text x="78.7112%" y="719.50"></text></g><g><title>diem_vm::diem_vm::DiemVMImpl::new (9 samples, 0.02%)</title><rect x="78.4565%" y="1141" width="0.0209%" height="15" fill="rgb(223,226,51)" fg:x="33803" fg:w="9"/><text x="78.7065%" y="1151.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::curve_models::CompletedPoint::to_projective (10 samples, 0.02%)</title><rect x="78.4890%" y="1093" width="0.0232%" height="15" fill="rgb(206,147,9)" fg:x="33817" fg:w="10"/><text x="78.7390%" y="1103.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51&gt;&gt;::mul (10 samples, 0.02%)</title><rect x="78.4890%" y="1077" width="0.0232%" height="15" fill="rgb(248,180,41)" fg:x="33817" fg:w="10"/><text x="78.7390%" y="1087.50"></text></g><g><title>fiat_crypto::curve25519_64::fiat_25519_carry_mul (10 samples, 0.02%)</title><rect x="78.4890%" y="1061" width="0.0232%" height="15" fill="rgb(209,47,50)" fg:x="33817" fg:w="10"/><text x="78.7390%" y="1071.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::verify_strict (19 samples, 0.04%)</title><rect x="78.4797%" y="1141" width="0.0441%" height="15" fill="rgb(243,65,31)" fg:x="33813" fg:w="19"/><text x="78.7297%" y="1151.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (19 samples, 0.04%)</title><rect x="78.4797%" y="1125" width="0.0441%" height="15" fill="rgb(228,128,1)" fg:x="33813" fg:w="19"/><text x="78.7297%" y="1135.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::scalar_mul::vartime_double_base::mul (19 samples, 0.04%)</title><rect x="78.4797%" y="1109" width="0.0441%" height="15" fill="rgb(231,192,16)" fg:x="33813" fg:w="19"/><text x="78.7297%" y="1119.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::curve_models::ProjectivePoint::double (5 samples, 0.01%)</title><rect x="78.5122%" y="1093" width="0.0116%" height="15" fill="rgb(224,26,40)" fg:x="33827" fg:w="5"/><text x="78.7622%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="78.5401%" y="1141" width="0.0162%" height="15" fill="rgb(214,192,17)" fg:x="33839" fg:w="7"/><text x="78.7901%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 0.02%)</title><rect x="78.5563%" y="1141" width="0.0162%" height="15" fill="rgb(225,147,18)" fg:x="33846" fg:w="7"/><text x="78.8063%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.02%)</title><rect x="78.5726%" y="1141" width="0.0209%" height="15" fill="rgb(205,35,11)" fg:x="33853" fg:w="9"/><text x="78.8226%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="78.5935%" y="1141" width="0.0232%" height="15" fill="rgb(242,40,42)" fg:x="33862" fg:w="10"/><text x="78.8435%" y="1151.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (9 samples, 0.02%)</title><rect x="78.6353%" y="1141" width="0.0209%" height="15" fill="rgb(250,170,13)" fg:x="33880" fg:w="9"/><text x="78.8853%" y="1151.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.03%)</title><rect x="78.6561%" y="1141" width="0.0302%" height="15" fill="rgb(240,161,28)" fg:x="33889" fg:w="13"/><text x="78.9061%" y="1151.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (9 samples, 0.02%)</title><rect x="78.6863%" y="1141" width="0.0209%" height="15" fill="rgb(245,179,12)" fg:x="33902" fg:w="9"/><text x="78.9363%" y="1151.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.01%)</title><rect x="78.7072%" y="1141" width="0.0116%" height="15" fill="rgb(250,92,32)" fg:x="33911" fg:w="5"/><text x="78.9572%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (18 samples, 0.04%)</title><rect x="78.7258%" y="1141" width="0.0418%" height="15" fill="rgb(233,10,40)" fg:x="33919" fg:w="18"/><text x="78.9758%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15 samples, 0.03%)</title><rect x="78.7676%" y="1141" width="0.0348%" height="15" fill="rgb(217,98,1)" fg:x="33937" fg:w="15"/><text x="79.0176%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (7 samples, 0.02%)</title><rect x="78.8024%" y="1141" width="0.0162%" height="15" fill="rgb(238,202,7)" fg:x="33952" fg:w="7"/><text x="79.0524%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.01%)</title><rect x="78.8209%" y="1141" width="0.0116%" height="15" fill="rgb(222,91,3)" fg:x="33960" fg:w="5"/><text x="79.0709%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (7 samples, 0.02%)</title><rect x="78.8325%" y="1141" width="0.0162%" height="15" fill="rgb(211,170,49)" fg:x="33965" fg:w="7"/><text x="79.0825%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (11 samples, 0.03%)</title><rect x="78.8558%" y="1141" width="0.0255%" height="15" fill="rgb(253,139,18)" fg:x="33975" fg:w="11"/><text x="79.1058%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (18 samples, 0.04%)</title><rect x="78.8859%" y="1141" width="0.0418%" height="15" fill="rgb(222,4,43)" fg:x="33988" fg:w="18"/><text x="79.1359%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="78.9277%" y="1141" width="0.0116%" height="15" fill="rgb(207,205,12)" fg:x="34006" fg:w="5"/><text x="79.1777%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (9 samples, 0.02%)</title><rect x="78.9393%" y="1141" width="0.0209%" height="15" fill="rgb(216,159,46)" fg:x="34011" fg:w="9"/><text x="79.1893%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (10 samples, 0.02%)</title><rect x="78.9602%" y="1141" width="0.0232%" height="15" fill="rgb(236,115,1)" fg:x="34020" fg:w="10"/><text x="79.2102%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (6 samples, 0.01%)</title><rect x="78.9834%" y="1141" width="0.0139%" height="15" fill="rgb(251,35,33)" fg:x="34030" fg:w="6"/><text x="79.2334%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.02%)</title><rect x="78.9973%" y="1141" width="0.0162%" height="15" fill="rgb(248,62,51)" fg:x="34036" fg:w="7"/><text x="79.2473%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.02%)</title><rect x="79.0182%" y="1141" width="0.0186%" height="15" fill="rgb(254,180,19)" fg:x="34045" fg:w="8"/><text x="79.2682%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (10 samples, 0.02%)</title><rect x="79.0368%" y="1141" width="0.0232%" height="15" fill="rgb(217,100,32)" fg:x="34053" fg:w="10"/><text x="79.2868%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (20 samples, 0.05%)</title><rect x="79.0902%" y="1141" width="0.0464%" height="15" fill="rgb(224,71,22)" fg:x="34076" fg:w="20"/><text x="79.3402%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (6 samples, 0.01%)</title><rect x="79.1366%" y="1141" width="0.0139%" height="15" fill="rgb(251,185,33)" fg:x="34096" fg:w="6"/><text x="79.3866%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.01%)</title><rect x="79.1598%" y="1141" width="0.0116%" height="15" fill="rgb(209,75,48)" fg:x="34106" fg:w="5"/><text x="79.4098%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (6 samples, 0.01%)</title><rect x="79.1969%" y="1141" width="0.0139%" height="15" fill="rgb(253,190,16)" fg:x="34122" fg:w="6"/><text x="79.4469%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (9 samples, 0.02%)</title><rect x="79.2248%" y="1141" width="0.0209%" height="15" fill="rgb(226,140,1)" fg:x="34134" fg:w="9"/><text x="79.4748%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.01%)</title><rect x="79.2457%" y="1141" width="0.0116%" height="15" fill="rgb(206,75,30)" fg:x="34143" fg:w="5"/><text x="79.4957%" y="1151.50"></text></g><g><title>hashbrown::raw::TableLayout::new (5 samples, 0.01%)</title><rect x="79.2642%" y="1141" width="0.0116%" height="15" fill="rgb(231,208,37)" fg:x="34151" fg:w="5"/><text x="79.5142%" y="1151.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.03%)</title><rect x="79.2759%" y="1141" width="0.0279%" height="15" fill="rgb(238,136,40)" fg:x="34156" fg:w="12"/><text x="79.5259%" y="1151.50"></text></g><g><title>hashbrown::raw::h1 (8 samples, 0.02%)</title><rect x="79.3153%" y="1141" width="0.0186%" height="15" fill="rgb(247,137,17)" fg:x="34173" fg:w="8"/><text x="79.5653%" y="1151.50"></text></g><g><title>hashbrown::raw::h2 (17 samples, 0.04%)</title><rect x="79.3339%" y="1141" width="0.0395%" height="15" fill="rgb(240,60,40)" fg:x="34181" fg:w="17"/><text x="79.5839%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="79.3757%" y="1141" width="0.0139%" height="15" fill="rgb(236,68,50)" fg:x="34199" fg:w="6"/><text x="79.6257%" y="1151.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="79.4174%" y="1077" width="0.0139%" height="15" fill="rgb(230,42,12)" fg:x="34217" fg:w="6"/><text x="79.6674%" y="1087.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (6 samples, 0.01%)</title><rect x="79.4174%" y="1061" width="0.0139%" height="15" fill="rgb(219,16,16)" fg:x="34217" fg:w="6"/><text x="79.6674%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="79.4174%" y="1045" width="0.0139%" height="15" fill="rgb(220,38,35)" fg:x="34217" fg:w="6"/><text x="79.6674%" y="1055.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (6 samples, 0.01%)</title><rect x="79.4174%" y="1029" width="0.0139%" height="15" fill="rgb(228,33,1)" fg:x="34217" fg:w="6"/><text x="79.6674%" y="1039.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (6 samples, 0.01%)</title><rect x="79.4174%" y="1013" width="0.0139%" height="15" fill="rgb(241,46,31)" fg:x="34217" fg:w="6"/><text x="79.6674%" y="1023.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (6 samples, 0.01%)</title><rect x="79.4337%" y="1061" width="0.0139%" height="15" fill="rgb(232,58,20)" fg:x="34224" fg:w="6"/><text x="79.6837%" y="1071.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (6 samples, 0.01%)</title><rect x="79.4337%" y="1045" width="0.0139%" height="15" fill="rgb(206,228,53)" fg:x="34224" fg:w="6"/><text x="79.6837%" y="1055.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (6 samples, 0.01%)</title><rect x="79.4337%" y="1029" width="0.0139%" height="15" fill="rgb(206,88,33)" fg:x="34224" fg:w="6"/><text x="79.6837%" y="1039.50"></text></g><g><title>language_e2e_tests::account::TransactionBuilder::sign (15 samples, 0.03%)</title><rect x="79.4174%" y="1141" width="0.0348%" height="15" fill="rgb(238,69,7)" fg:x="34217" fg:w="15"/><text x="79.6674%" y="1151.50"></text></g><g><title>diem_types::transaction::RawTransaction::sign (15 samples, 0.03%)</title><rect x="79.4174%" y="1125" width="0.0348%" height="15" fill="rgb(250,21,46)" fg:x="34217" fg:w="15"/><text x="79.6674%" y="1135.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PrivateKey as diem_crypto::traits::SigningKey&gt;::sign (15 samples, 0.03%)</title><rect x="79.4174%" y="1109" width="0.0348%" height="15" fill="rgb(215,212,21)" fg:x="34217" fg:w="15"/><text x="79.6674%" y="1119.50"></text></g><g><title>diem_crypto::ed25519::Ed25519PrivateKey::sign_arbitrary_message (15 samples, 0.03%)</title><rect x="79.4174%" y="1093" width="0.0348%" height="15" fill="rgb(211,35,12)" fg:x="34217" fg:w="15"/><text x="79.6674%" y="1103.50"></text></g><g><title>ed25519_dalek_fiat::secret::ExpandedSecretKey::sign (9 samples, 0.02%)</title><rect x="79.4314%" y="1077" width="0.0209%" height="15" fill="rgb(231,184,16)" fg:x="34223" fg:w="9"/><text x="79.6814%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.03%)</title><rect x="79.4522%" y="1061" width="0.0279%" height="15" fill="rgb(242,140,15)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="1071.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (12 samples, 0.03%)</title><rect x="79.4522%" y="1045" width="0.0279%" height="15" fill="rgb(220,37,14)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.03%)</title><rect x="79.4522%" y="1029" width="0.0279%" height="15" fill="rgb(223,146,22)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="1039.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (12 samples, 0.03%)</title><rect x="79.4522%" y="1013" width="0.0279%" height="15" fill="rgb(216,132,15)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="1023.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (12 samples, 0.03%)</title><rect x="79.4522%" y="997" width="0.0279%" height="15" fill="rgb(248,83,5)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="1007.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (12 samples, 0.03%)</title><rect x="79.4522%" y="981" width="0.0279%" height="15" fill="rgb(231,206,48)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="991.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (12 samples, 0.03%)</title><rect x="79.4522%" y="965" width="0.0279%" height="15" fill="rgb(253,185,37)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="975.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (12 samples, 0.03%)</title><rect x="79.4522%" y="949" width="0.0279%" height="15" fill="rgb(208,21,44)" fg:x="34232" fg:w="12"/><text x="79.7022%" y="959.50"></text></g><g><title>curve25519_dalek_fiat::window::LookupTable&lt;T&gt;::select (10 samples, 0.02%)</title><rect x="79.4569%" y="933" width="0.0232%" height="15" fill="rgb(236,125,4)" fg:x="34234" fg:w="10"/><text x="79.7069%" y="943.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (9 samples, 0.02%)</title><rect x="79.5079%" y="981" width="0.0209%" height="15" fill="rgb(226,134,25)" fg:x="34256" fg:w="9"/><text x="79.7579%" y="991.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (9 samples, 0.02%)</title><rect x="79.5079%" y="965" width="0.0209%" height="15" fill="rgb(250,201,12)" fg:x="34256" fg:w="9"/><text x="79.7579%" y="975.50"></text></g><g><title>language_e2e_tests::common_transactions::create_account_txn (34 samples, 0.08%)</title><rect x="79.4522%" y="1141" width="0.0789%" height="15" fill="rgb(225,92,18)" fg:x="34232" fg:w="34"/><text x="79.7022%" y="1151.50"></text></g><g><title>language_e2e_tests::account::TransactionBuilder::sign (34 samples, 0.08%)</title><rect x="79.4522%" y="1125" width="0.0789%" height="15" fill="rgb(227,35,22)" fg:x="34232" fg:w="34"/><text x="79.7022%" y="1135.50"></text></g><g><title>diem_types::transaction::RawTransaction::sign (34 samples, 0.08%)</title><rect x="79.4522%" y="1109" width="0.0789%" height="15" fill="rgb(214,180,52)" fg:x="34232" fg:w="34"/><text x="79.7022%" y="1119.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PrivateKey as diem_crypto::traits::SigningKey&gt;::sign (34 samples, 0.08%)</title><rect x="79.4522%" y="1093" width="0.0789%" height="15" fill="rgb(233,55,38)" fg:x="34232" fg:w="34"/><text x="79.7022%" y="1103.50"></text></g><g><title>diem_crypto::ed25519::Ed25519PrivateKey::sign_arbitrary_message (34 samples, 0.08%)</title><rect x="79.4522%" y="1077" width="0.0789%" height="15" fill="rgb(249,171,43)" fg:x="34232" fg:w="34"/><text x="79.7022%" y="1087.50"></text></g><g><title>ed25519_dalek_fiat::secret::ExpandedSecretKey::sign (22 samples, 0.05%)</title><rect x="79.4801%" y="1061" width="0.0511%" height="15" fill="rgb(239,87,2)" fg:x="34244" fg:w="22"/><text x="79.7301%" y="1071.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (19 samples, 0.04%)</title><rect x="79.4871%" y="1045" width="0.0441%" height="15" fill="rgb(248,141,5)" fg:x="34247" fg:w="19"/><text x="79.7371%" y="1055.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (19 samples, 0.04%)</title><rect x="79.4871%" y="1029" width="0.0441%" height="15" fill="rgb(238,33,42)" fg:x="34247" fg:w="19"/><text x="79.7371%" y="1039.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (19 samples, 0.04%)</title><rect x="79.4871%" y="1013" width="0.0441%" height="15" fill="rgb(231,57,19)" fg:x="34247" fg:w="19"/><text x="79.7371%" y="1023.50"></text></g><g><title>curve25519_dalek_fiat::window::LookupTable&lt;T&gt;::select (14 samples, 0.03%)</title><rect x="79.4987%" y="997" width="0.0325%" height="15" fill="rgb(214,78,53)" fg:x="34252" fg:w="14"/><text x="79.7487%" y="1007.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_impl (23 samples, 0.05%)</title><rect x="79.5381%" y="1061" width="0.0534%" height="15" fill="rgb(206,132,29)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="1071.50"></text></g><g><title>rayon_core::scope::scope (23 samples, 0.05%)</title><rect x="79.5381%" y="1045" width="0.0534%" height="15" fill="rgb(248,174,31)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.05%)</title><rect x="79.5381%" y="1029" width="0.0534%" height="15" fill="rgb(221,87,13)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="1039.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold (23 samples, 0.05%)</title><rect x="79.5381%" y="1013" width="0.0534%" height="15" fill="rgb(223,197,17)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.05%)</title><rect x="79.5381%" y="997" width="0.0534%" height="15" fill="rgb(220,144,50)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.05%)</title><rect x="79.5381%" y="981" width="0.0534%" height="15" fill="rgb(244,201,11)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="991.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}} (23 samples, 0.05%)</title><rect x="79.5381%" y="965" width="0.0534%" height="15" fill="rgb(249,81,34)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="975.50"></text></g><g><title>rayon_core::latch::LockLatch::wait_and_reset (23 samples, 0.05%)</title><rect x="79.5381%" y="949" width="0.0534%" height="15" fill="rgb(205,161,12)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait (23 samples, 0.05%)</title><rect x="79.5381%" y="933" width="0.0534%" height="15" fill="rgb(252,139,50)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (23 samples, 0.05%)</title><rect x="79.5381%" y="917" width="0.0534%" height="15" fill="rgb(205,169,14)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (23 samples, 0.05%)</title><rect x="79.5381%" y="901" width="0.0534%" height="15" fill="rgb(248,198,33)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="911.50"></text></g><g><title>__pthread_cond_wait (23 samples, 0.05%)</title><rect x="79.5381%" y="885" width="0.0534%" height="15" fill="rgb(236,23,21)" fg:x="34269" fg:w="23"/><text x="79.7881%" y="895.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction (26 samples, 0.06%)</title><rect x="79.5381%" y="1141" width="0.0603%" height="15" fill="rgb(231,13,38)" fg:x="34269" fg:w="26"/><text x="79.7881%" y="1151.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_block (26 samples, 0.06%)</title><rect x="79.5381%" y="1125" width="0.0603%" height="15" fill="rgb(239,139,21)" fg:x="34269" fg:w="26"/><text x="79.7881%" y="1135.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction_block (26 samples, 0.06%)</title><rect x="79.5381%" y="1109" width="0.0603%" height="15" fill="rgb(222,164,45)" fg:x="34269" fg:w="26"/><text x="79.7881%" y="1119.50"></text></g><g><title>&lt;diem_vm::diem_transaction_executor::DiemVM as diem_vm::VMExecutor&gt;::execute_block (26 samples, 0.06%)</title><rect x="79.5381%" y="1093" width="0.0603%" height="15" fill="rgb(230,52,27)" fg:x="34269" fg:w="26"/><text x="79.7881%" y="1103.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_and_keep_vm_status (26 samples, 0.06%)</title><rect x="79.5381%" y="1077" width="0.0603%" height="15" fill="rgb(227,143,42)" fg:x="34269" fg:w="26"/><text x="79.7881%" y="1087.50"></text></g><g><title>difference::lcs::lcs (14 samples, 0.03%)</title><rect x="79.6054%" y="965" width="0.0325%" height="15" fill="rgb(249,127,1)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="975.50"></text></g><g><title>difference::lcs::strsplit (14 samples, 0.03%)</title><rect x="79.6054%" y="949" width="0.0325%" height="15" fill="rgb(243,107,26)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.03%)</title><rect x="79.6054%" y="933" width="0.0325%" height="15" fill="rgb(225,7,45)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="79.6054%" y="917" width="0.0325%" height="15" fill="rgb(241,88,38)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="79.6054%" y="901" width="0.0325%" height="15" fill="rgb(226,121,9)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="79.6054%" y="885" width="0.0325%" height="15" fill="rgb(253,60,29)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="895.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="79.6054%" y="869" width="0.0325%" height="15" fill="rgb(244,181,39)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="879.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (14 samples, 0.03%)</title><rect x="79.6054%" y="853" width="0.0325%" height="15" fill="rgb(252,203,31)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="863.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (14 samples, 0.03%)</title><rect x="79.6054%" y="837" width="0.0325%" height="15" fill="rgb(224,120,8)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (14 samples, 0.03%)</title><rect x="79.6054%" y="821" width="0.0325%" height="15" fill="rgb(205,171,54)" fg:x="34298" fg:w="14"/><text x="79.8554%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.01%)</title><rect x="79.6263%" y="805" width="0.0116%" height="15" fill="rgb(235,89,11)" fg:x="34307" fg:w="5"/><text x="79.8763%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::executor::FakeExecutor&gt; (18 samples, 0.04%)</title><rect x="79.6054%" y="1125" width="0.0418%" height="15" fill="rgb(212,180,28)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt;&gt; (18 samples, 0.04%)</title><rect x="79.6054%" y="1109" width="0.0418%" height="15" fill="rgb(247,84,49)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt; (18 samples, 0.04%)</title><rect x="79.6054%" y="1093" width="0.0418%" height="15" fill="rgb(236,187,52)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;goldenfile::mint::Mint&gt; (18 samples, 0.04%)</title><rect x="79.6054%" y="1077" width="0.0418%" height="15" fill="rgb(227,24,15)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1087.50"></text></g><g><title>&lt;goldenfile::mint::Mint as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="79.6054%" y="1061" width="0.0418%" height="15" fill="rgb(227,211,13)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1071.50"></text></g><g><title>goldenfile::mint::Mint::check_goldenfiles (18 samples, 0.04%)</title><rect x="79.6054%" y="1045" width="0.0418%" height="15" fill="rgb(245,52,14)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (18 samples, 0.04%)</title><rect x="79.6054%" y="1029" width="0.0418%" height="15" fill="rgb(225,185,13)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (18 samples, 0.04%)</title><rect x="79.6054%" y="1013" width="0.0418%" height="15" fill="rgb(217,160,29)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1023.50"></text></g><g><title>goldenfile::differs::text_diff (18 samples, 0.04%)</title><rect x="79.6054%" y="997" width="0.0418%" height="15" fill="rgb(216,115,53)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="1007.50"></text></g><g><title>difference::Changeset::new (18 samples, 0.04%)</title><rect x="79.6054%" y="981" width="0.0418%" height="15" fill="rgb(236,99,5)" fg:x="34298" fg:w="18"/><text x="79.8554%" y="991.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (6 samples, 0.01%)</title><rect x="79.6588%" y="981" width="0.0139%" height="15" fill="rgb(222,60,38)" fg:x="34321" fg:w="6"/><text x="79.9088%" y="991.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (6 samples, 0.01%)</title><rect x="79.6588%" y="965" width="0.0139%" height="15" fill="rgb(212,82,22)" fg:x="34321" fg:w="6"/><text x="79.9088%" y="975.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (6 samples, 0.01%)</title><rect x="79.6588%" y="949" width="0.0139%" height="15" fill="rgb(214,48,28)" fg:x="34321" fg:w="6"/><text x="79.9088%" y="959.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::curve_models::CompletedPoint::to_extended (5 samples, 0.01%)</title><rect x="79.6611%" y="933" width="0.0116%" height="15" fill="rgb(245,196,50)" fg:x="34322" fg:w="5"/><text x="79.9111%" y="943.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51&gt;&gt;::mul (5 samples, 0.01%)</title><rect x="79.6611%" y="917" width="0.0116%" height="15" fill="rgb(225,159,46)" fg:x="34322" fg:w="5"/><text x="79.9111%" y="927.50"></text></g><g><title>fiat_crypto::curve25519_64::fiat_25519_carry_mul (5 samples, 0.01%)</title><rect x="79.6611%" y="901" width="0.0116%" height="15" fill="rgb(207,195,48)" fg:x="34322" fg:w="5"/><text x="79.9111%" y="911.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::create_raw_account (11 samples, 0.03%)</title><rect x="79.6542%" y="1125" width="0.0255%" height="15" fill="rgb(240,73,3)" fg:x="34319" fg:w="11"/><text x="79.9042%" y="1135.50"></text></g><g><title>language_e2e_tests::account::Account::new_from_seed (11 samples, 0.03%)</title><rect x="79.6542%" y="1109" width="0.0255%" height="15" fill="rgb(245,57,23)" fg:x="34319" fg:w="11"/><text x="79.9042%" y="1119.50"></text></g><g><title>language_e2e_tests::keygen::KeyGen::generate_keypair (9 samples, 0.02%)</title><rect x="79.6588%" y="1093" width="0.0209%" height="15" fill="rgb(240,75,18)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1103.50"></text></g><g><title>diem_crypto::traits::PrivateKey::public_key (9 samples, 0.02%)</title><rect x="79.6588%" y="1077" width="0.0209%" height="15" fill="rgb(238,168,12)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.02%)</title><rect x="79.6588%" y="1061" width="0.0209%" height="15" fill="rgb(226,20,40)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1071.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (9 samples, 0.02%)</title><rect x="79.6588%" y="1045" width="0.0209%" height="15" fill="rgb(224,130,35)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.02%)</title><rect x="79.6588%" y="1029" width="0.0209%" height="15" fill="rgb(225,63,41)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1039.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (9 samples, 0.02%)</title><rect x="79.6588%" y="1013" width="0.0209%" height="15" fill="rgb(219,3,3)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1023.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (9 samples, 0.02%)</title><rect x="79.6588%" y="997" width="0.0209%" height="15" fill="rgb(218,157,4)" fg:x="34321" fg:w="9"/><text x="79.9088%" y="1007.50"></text></g><g><title>&lt;diem_vm::diem_transaction_executor::DiemVM as diem_vm::VMExecutor&gt;::execute_block (6 samples, 0.01%)</title><rect x="79.6797%" y="1077" width="0.0139%" height="15" fill="rgb(232,76,36)" fg:x="34330" fg:w="6"/><text x="79.9297%" y="1087.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_and_keep_vm_status (6 samples, 0.01%)</title><rect x="79.6797%" y="1061" width="0.0139%" height="15" fill="rgb(247,36,0)" fg:x="34330" fg:w="6"/><text x="79.9297%" y="1071.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::fmt::Debug&gt;::fmt (8 samples, 0.02%)</title><rect x="79.6936%" y="373" width="0.0186%" height="15" fill="rgb(205,2,34)" fg:x="34336" fg:w="8"/><text x="79.9436%" y="383.50"></text></g><g><title>hex::encode (8 samples, 0.02%)</title><rect x="79.6936%" y="357" width="0.0186%" height="15" fill="rgb(239,136,13)" fg:x="34336" fg:w="8"/><text x="79.9436%" y="367.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (8 samples, 0.02%)</title><rect x="79.6936%" y="341" width="0.0186%" height="15" fill="rgb(253,122,12)" fg:x="34336" fg:w="8"/><text x="79.9436%" y="351.50"></text></g><g><title>hex::encode_to_iter (7 samples, 0.02%)</title><rect x="79.6959%" y="325" width="0.0162%" height="15" fill="rgb(222,174,7)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="79.6959%" y="309" width="0.0162%" height="15" fill="rgb(208,191,42)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="79.6959%" y="293" width="0.0162%" height="15" fill="rgb(237,212,15)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (7 samples, 0.02%)</title><rect x="79.6959%" y="277" width="0.0162%" height="15" fill="rgb(215,65,20)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.02%)</title><rect x="79.6959%" y="261" width="0.0162%" height="15" fill="rgb(232,103,11)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.02%)</title><rect x="79.6959%" y="245" width="0.0162%" height="15" fill="rgb(235,148,18)" fg:x="34337" fg:w="7"/><text x="79.9459%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.01%)</title><rect x="79.7006%" y="229" width="0.0116%" height="15" fill="rgb(240,173,7)" fg:x="34339" fg:w="5"/><text x="79.9506%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_fmt (11 samples, 0.03%)</title><rect x="79.7122%" y="357" width="0.0255%" height="15" fill="rgb(228,182,25)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="367.50"></text></g><g><title>core::fmt::write (11 samples, 0.03%)</title><rect x="79.7122%" y="341" width="0.0255%" height="15" fill="rgb(247,3,52)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (11 samples, 0.03%)</title><rect x="79.7122%" y="325" width="0.0255%" height="15" fill="rgb(226,155,8)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.03%)</title><rect x="79.7122%" y="309" width="0.0255%" height="15" fill="rgb(243,195,38)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.03%)</title><rect x="79.7122%" y="293" width="0.0255%" height="15" fill="rgb(254,181,33)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="303.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.03%)</title><rect x="79.7122%" y="277" width="0.0255%" height="15" fill="rgb(232,98,23)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.03%)</title><rect x="79.7122%" y="261" width="0.0255%" height="15" fill="rgb(205,23,10)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="79.7122%" y="245" width="0.0255%" height="15" fill="rgb(212,124,38)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.03%)</title><rect x="79.7122%" y="229" width="0.0255%" height="15" fill="rgb(228,207,2)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="79.7122%" y="213" width="0.0255%" height="15" fill="rgb(215,120,22)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="79.7122%" y="197" width="0.0255%" height="15" fill="rgb(251,172,33)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (11 samples, 0.03%)</title><rect x="79.7122%" y="181" width="0.0255%" height="15" fill="rgb(250,83,2)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="79.7122%" y="165" width="0.0255%" height="15" fill="rgb(210,132,53)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="79.7122%" y="149" width="0.0255%" height="15" fill="rgb(221,208,36)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="79.7122%" y="133" width="0.0255%" height="15" fill="rgb(205,192,46)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="79.7122%" y="117" width="0.0255%" height="15" fill="rgb(223,163,14)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="127.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="79.7122%" y="101" width="0.0255%" height="15" fill="rgb(218,41,28)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="111.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.03%)</title><rect x="79.7122%" y="85" width="0.0255%" height="15" fill="rgb(235,104,10)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="95.50"></text></g><g><title>_int_realloc (11 samples, 0.03%)</title><rect x="79.7122%" y="69" width="0.0255%" height="15" fill="rgb(246,17,4)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="79.50"></text></g><g><title>_int_malloc (11 samples, 0.03%)</title><rect x="79.7122%" y="53" width="0.0255%" height="15" fill="rgb(240,7,16)" fg:x="34344" fg:w="11"/><text x="79.9622%" y="63.50"></text></g><g><title>malloc_consolidate (8 samples, 0.02%)</title><rect x="79.7192%" y="37" width="0.0186%" height="15" fill="rgb(213,160,23)" fg:x="34347" fg:w="8"/><text x="79.9692%" y="47.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction (38 samples, 0.09%)</title><rect x="79.6797%" y="1125" width="0.0882%" height="15" fill="rgb(251,179,49)" fg:x="34330" fg:w="38"/><text x="79.9297%" y="1135.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_block (38 samples, 0.09%)</title><rect x="79.6797%" y="1109" width="0.0882%" height="15" fill="rgb(247,198,10)" fg:x="34330" fg:w="38"/><text x="79.9297%" y="1119.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction_block (38 samples, 0.09%)</title><rect x="79.6797%" y="1093" width="0.0882%" height="15" fill="rgb(220,65,29)" fg:x="34330" fg:w="38"/><text x="79.9297%" y="1103.50"></text></g><g><title>alloc::fmt::format (32 samples, 0.07%)</title><rect x="79.6936%" y="1077" width="0.0743%" height="15" fill="rgb(237,171,28)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="1061" width="0.0743%" height="15" fill="rgb(228,44,26)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1071.50"></text></g><g><title>core::fmt::write (32 samples, 0.07%)</title><rect x="79.6936%" y="1045" width="0.0743%" height="15" fill="rgb(216,210,27)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="1029" width="0.0743%" height="15" fill="rgb(252,10,17)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1039.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (32 samples, 0.07%)</title><rect x="79.6936%" y="1013" width="0.0743%" height="15" fill="rgb(214,172,30)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="997" width="0.0743%" height="15" fill="rgb(253,130,48)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="1007.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="981" width="0.0743%" height="15" fill="rgb(226,99,43)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="991.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="965" width="0.0743%" height="15" fill="rgb(239,111,26)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="949" width="0.0743%" height="15" fill="rgb(240,27,53)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="959.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="933" width="0.0743%" height="15" fill="rgb(254,163,12)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="943.50"></text></g><g><title>core::fmt::builders::DebugList::entries (32 samples, 0.07%)</title><rect x="79.6936%" y="917" width="0.0743%" height="15" fill="rgb(225,51,48)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="927.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (32 samples, 0.07%)</title><rect x="79.6936%" y="901" width="0.0743%" height="15" fill="rgb(205,19,32)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="911.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (32 samples, 0.07%)</title><rect x="79.6936%" y="885" width="0.0743%" height="15" fill="rgb(218,119,26)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="869" width="0.0743%" height="15" fill="rgb(231,173,33)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="879.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="853" width="0.0743%" height="15" fill="rgb(241,100,29)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="837" width="0.0743%" height="15" fill="rgb(250,194,34)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="847.50"></text></g><g><title>&lt;diem_types::transaction::TransactionOutput as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="821" width="0.0743%" height="15" fill="rgb(215,23,50)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="831.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (32 samples, 0.07%)</title><rect x="79.6936%" y="805" width="0.0743%" height="15" fill="rgb(206,49,37)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="789" width="0.0743%" height="15" fill="rgb(247,39,21)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="799.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="773" width="0.0743%" height="15" fill="rgb(209,220,15)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="783.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="757" width="0.0743%" height="15" fill="rgb(206,41,33)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="767.50"></text></g><g><title>&lt;diem_types::write_set::WriteSet as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="741" width="0.0743%" height="15" fill="rgb(221,225,45)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="751.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (32 samples, 0.07%)</title><rect x="79.6936%" y="725" width="0.0743%" height="15" fill="rgb(216,27,18)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="709" width="0.0743%" height="15" fill="rgb(250,193,34)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="719.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="693" width="0.0743%" height="15" fill="rgb(227,215,20)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="677" width="0.0743%" height="15" fill="rgb(242,211,27)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="687.50"></text></g><g><title>&lt;diem_types::write_set::WriteSetMut as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="661" width="0.0743%" height="15" fill="rgb(229,190,30)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (32 samples, 0.07%)</title><rect x="79.6936%" y="645" width="0.0743%" height="15" fill="rgb(253,31,29)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="629" width="0.0743%" height="15" fill="rgb(229,177,52)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="613" width="0.0743%" height="15" fill="rgb(226,88,8)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="597" width="0.0743%" height="15" fill="rgb(214,55,27)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="581" width="0.0743%" height="15" fill="rgb(233,202,5)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="591.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="565" width="0.0743%" height="15" fill="rgb(251,49,30)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="575.50"></text></g><g><title>core::fmt::builders::DebugList::entries (32 samples, 0.07%)</title><rect x="79.6936%" y="549" width="0.0743%" height="15" fill="rgb(235,18,52)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="559.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (32 samples, 0.07%)</title><rect x="79.6936%" y="533" width="0.0743%" height="15" fill="rgb(250,111,51)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="543.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (32 samples, 0.07%)</title><rect x="79.6936%" y="517" width="0.0743%" height="15" fill="rgb(218,13,25)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="501" width="0.0743%" height="15" fill="rgb(248,96,7)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="511.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="485" width="0.0743%" height="15" fill="rgb(217,31,15)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="469" width="0.0743%" height="15" fill="rgb(228,59,49)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="479.50"></text></g><g><title>&lt;(T10,T11) as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="453" width="0.0743%" height="15" fill="rgb(210,152,38)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (32 samples, 0.07%)</title><rect x="79.6936%" y="437" width="0.0743%" height="15" fill="rgb(206,71,11)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.07%)</title><rect x="79.6936%" y="421" width="0.0743%" height="15" fill="rgb(244,199,5)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (32 samples, 0.07%)</title><rect x="79.6936%" y="405" width="0.0743%" height="15" fill="rgb(253,49,1)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (32 samples, 0.07%)</title><rect x="79.6936%" y="389" width="0.0743%" height="15" fill="rgb(225,206,40)" fg:x="34336" fg:w="32"/><text x="79.9436%" y="399.50"></text></g><g><title>&lt;diem_types::write_set::WriteOp as core::fmt::Debug&gt;::fmt (24 samples, 0.06%)</title><rect x="79.7122%" y="373" width="0.0557%" height="15" fill="rgb(243,116,47)" fg:x="34344" fg:w="24"/><text x="79.9622%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.03%)</title><rect x="79.7377%" y="357" width="0.0302%" height="15" fill="rgb(219,225,16)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (13 samples, 0.03%)</title><rect x="79.7377%" y="341" width="0.0302%" height="15" fill="rgb(233,29,47)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (13 samples, 0.03%)</title><rect x="79.7377%" y="325" width="0.0302%" height="15" fill="rgb(250,179,18)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.03%)</title><rect x="79.7377%" y="309" width="0.0302%" height="15" fill="rgb(215,176,6)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.03%)</title><rect x="79.7377%" y="293" width="0.0302%" height="15" fill="rgb(214,117,39)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.03%)</title><rect x="79.7377%" y="277" width="0.0302%" height="15" fill="rgb(247,183,36)" fg:x="34355" fg:w="13"/><text x="79.9877%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11 samples, 0.03%)</title><rect x="79.7424%" y="261" width="0.0255%" height="15" fill="rgb(237,200,3)" fg:x="34357" fg:w="11"/><text x="79.9924%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8 samples, 0.02%)</title><rect x="79.7493%" y="245" width="0.0186%" height="15" fill="rgb(212,220,24)" fg:x="34360" fg:w="8"/><text x="79.9993%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::_{{closure}} (8 samples, 0.02%)</title><rect x="79.7493%" y="229" width="0.0186%" height="15" fill="rgb(245,216,20)" fg:x="34360" fg:w="8"/><text x="79.9993%" y="239.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis_file (6 samples, 0.01%)</title><rect x="79.7679%" y="1125" width="0.0139%" height="15" fill="rgb(219,124,7)" fg:x="34368" fg:w="6"/><text x="80.0179%" y="1135.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="79.7702%" y="1109" width="0.0116%" height="15" fill="rgb(227,167,8)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1119.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 0.01%)</title><rect x="79.7702%" y="1093" width="0.0116%" height="15" fill="rgb(241,37,2)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.01%)</title><rect x="79.7702%" y="1077" width="0.0116%" height="15" fill="rgb(238,134,33)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.01%)</title><rect x="79.7702%" y="1061" width="0.0116%" height="15" fill="rgb(248,48,27)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1071.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 0.01%)</title><rect x="79.7702%" y="1045" width="0.0116%" height="15" fill="rgb(212,14,16)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1055.50"></text></g><g><title>once_cell::imp::initialize_inner (5 samples, 0.01%)</title><rect x="79.7702%" y="1029" width="0.0116%" height="15" fill="rgb(217,205,37)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1039.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (5 samples, 0.01%)</title><rect x="79.7702%" y="1013" width="0.0116%" height="15" fill="rgb(233,185,47)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1023.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (5 samples, 0.01%)</title><rect x="79.7702%" y="997" width="0.0116%" height="15" fill="rgb(244,88,8)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="1007.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (5 samples, 0.01%)</title><rect x="79.7702%" y="981" width="0.0116%" height="15" fill="rgb(213,0,20)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="79.7702%" y="965" width="0.0116%" height="15" fill="rgb(238,159,36)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="79.7702%" y="949" width="0.0116%" height="15" fill="rgb(253,173,17)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="959.50"></text></g><g><title>language_e2e_tests::data_store::GENESIS_CHANGE_SET::_{{closure}} (5 samples, 0.01%)</title><rect x="79.7702%" y="933" width="0.0116%" height="15" fill="rgb(221,23,28)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="943.50"></text></g><g><title>vm_genesis::generate_genesis_change_set_for_testing (5 samples, 0.01%)</title><rect x="79.7702%" y="917" width="0.0116%" height="15" fill="rgb(218,113,15)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="927.50"></text></g><g><title>vm_genesis::generate_test_genesis (5 samples, 0.01%)</title><rect x="79.7702%" y="901" width="0.0116%" height="15" fill="rgb(233,58,3)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="911.50"></text></g><g><title>vm_genesis::encode_genesis_change_set (5 samples, 0.01%)</title><rect x="79.7702%" y="885" width="0.0116%" height="15" fill="rgb(250,46,35)" fg:x="34369" fg:w="5"/><text x="80.0202%" y="895.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (77 samples, 0.18%)</title><rect x="79.6054%" y="1141" width="0.1787%" height="15" fill="rgb(210,169,11)" fg:x="34298" fg:w="77"/><text x="79.8554%" y="1151.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (13 samples, 0.03%)</title><rect x="79.8050%" y="1141" width="0.0302%" height="15" fill="rgb(246,88,19)" fg:x="34384" fg:w="13"/><text x="80.0550%" y="1151.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="79.9304%" y="1109" width="0.0162%" height="15" fill="rgb(206,81,49)" fg:x="34438" fg:w="7"/><text x="80.1804%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.01%)</title><rect x="79.9350%" y="1093" width="0.0116%" height="15" fill="rgb(232,144,18)" fg:x="34440" fg:w="5"/><text x="80.1850%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (7 samples, 0.02%)</title><rect x="79.9466%" y="1109" width="0.0162%" height="15" fill="rgb(235,2,27)" fg:x="34445" fg:w="7"/><text x="80.1966%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (7 samples, 0.02%)</title><rect x="79.9466%" y="1093" width="0.0162%" height="15" fill="rgb(239,157,39)" fg:x="34445" fg:w="7"/><text x="80.1966%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (6 samples, 0.01%)</title><rect x="79.9489%" y="1077" width="0.0139%" height="15" fill="rgb(220,11,17)" fg:x="34446" fg:w="6"/><text x="80.1989%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="79.9489%" y="1061" width="0.0139%" height="15" fill="rgb(243,94,50)" fg:x="34446" fg:w="6"/><text x="80.1989%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="79.9814%" y="1045" width="0.0116%" height="15" fill="rgb(218,22,0)" fg:x="34460" fg:w="5"/><text x="80.2314%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="79.9675%" y="1077" width="0.0371%" height="15" fill="rgb(249,70,21)" fg:x="34454" fg:w="16"/><text x="80.2175%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.04%)</title><rect x="79.9675%" y="1061" width="0.0371%" height="15" fill="rgb(245,111,46)" fg:x="34454" fg:w="16"/><text x="80.2175%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.05%)</title><rect x="79.9629%" y="1093" width="0.0464%" height="15" fill="rgb(244,183,12)" fg:x="34452" fg:w="20"/><text x="80.2129%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (6 samples, 0.01%)</title><rect x="80.0139%" y="1061" width="0.0139%" height="15" fill="rgb(207,117,0)" fg:x="34474" fg:w="6"/><text x="80.2639%" y="1071.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (43 samples, 0.10%)</title><rect x="79.9304%" y="1125" width="0.0998%" height="15" fill="rgb(206,20,43)" fg:x="34438" fg:w="43"/><text x="80.1804%" y="1135.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (29 samples, 0.07%)</title><rect x="79.9629%" y="1109" width="0.0673%" height="15" fill="rgb(221,104,11)" fg:x="34452" fg:w="29"/><text x="80.2129%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (9 samples, 0.02%)</title><rect x="80.0093%" y="1093" width="0.0209%" height="15" fill="rgb(254,36,50)" fg:x="34472" fg:w="9"/><text x="80.2593%" y="1103.50"></text></g><g><title>alloc::slice::hack::into_vec (9 samples, 0.02%)</title><rect x="80.0093%" y="1077" width="0.0209%" height="15" fill="rgb(252,17,15)" fg:x="34472" fg:w="9"/><text x="80.2593%" y="1087.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_code (45 samples, 0.10%)</title><rect x="79.9280%" y="1141" width="0.1044%" height="15" fill="rgb(219,129,43)" fg:x="34437" fg:w="45"/><text x="80.1780%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (9 samples, 0.02%)</title><rect x="80.1021%" y="1093" width="0.0209%" height="15" fill="rgb(205,34,45)" fg:x="34512" fg:w="9"/><text x="80.3521%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (8 samples, 0.02%)</title><rect x="80.1044%" y="1077" width="0.0186%" height="15" fill="rgb(251,201,32)" fg:x="34513" fg:w="8"/><text x="80.3544%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.02%)</title><rect x="80.1532%" y="1077" width="0.0186%" height="15" fill="rgb(205,56,0)" fg:x="34534" fg:w="8"/><text x="80.4032%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (5 samples, 0.01%)</title><rect x="80.1601%" y="1061" width="0.0116%" height="15" fill="rgb(211,193,27)" fg:x="34537" fg:w="5"/><text x="80.4101%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.03%)</title><rect x="80.1718%" y="1077" width="0.0302%" height="15" fill="rgb(231,100,42)" fg:x="34542" fg:w="13"/><text x="80.4218%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (8 samples, 0.02%)</title><rect x="80.1834%" y="1061" width="0.0186%" height="15" fill="rgb(245,85,27)" fg:x="34547" fg:w="8"/><text x="80.4334%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.15%)</title><rect x="80.0696%" y="1109" width="0.1532%" height="15" fill="rgb(241,76,24)" fg:x="34498" fg:w="66"/><text x="80.3196%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.10%)</title><rect x="80.1230%" y="1093" width="0.0998%" height="15" fill="rgb(249,157,15)" fg:x="34521" fg:w="43"/><text x="80.3730%" y="1103.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (7 samples, 0.02%)</title><rect x="80.2066%" y="1077" width="0.0162%" height="15" fill="rgb(222,218,25)" fg:x="34557" fg:w="7"/><text x="80.4566%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (5 samples, 0.01%)</title><rect x="80.2344%" y="1109" width="0.0116%" height="15" fill="rgb(252,156,52)" fg:x="34569" fg:w="5"/><text x="80.4844%" y="1119.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.01%)</title><rect x="80.2344%" y="1093" width="0.0116%" height="15" fill="rgb(211,185,7)" fg:x="34569" fg:w="5"/><text x="80.4844%" y="1103.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_def (111 samples, 0.26%)</title><rect x="80.0395%" y="1141" width="0.2576%" height="15" fill="rgb(234,108,24)" fg:x="34485" fg:w="111"/><text x="80.2895%" y="1151.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_code (111 samples, 0.26%)</title><rect x="80.0395%" y="1125" width="0.2576%" height="15" fill="rgb(227,218,2)" fg:x="34485" fg:w="111"/><text x="80.2895%" y="1135.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_constant (5 samples, 0.01%)</title><rect x="80.3273%" y="1125" width="0.0116%" height="15" fill="rgb(224,0,36)" fg:x="34609" fg:w="5"/><text x="80.5773%" y="1135.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (5 samples, 0.01%)</title><rect x="80.3273%" y="1109" width="0.0116%" height="15" fill="rgb(233,201,10)" fg:x="34609" fg:w="5"/><text x="80.5773%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handles (5 samples, 0.01%)</title><rect x="80.3621%" y="1109" width="0.0116%" height="15" fill="rgb(252,209,14)" fg:x="34624" fg:w="5"/><text x="80.6121%" y="1119.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_def (18 samples, 0.04%)</title><rect x="80.3505%" y="1125" width="0.0418%" height="15" fill="rgb(205,93,49)" fg:x="34619" fg:w="18"/><text x="80.6005%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5 samples, 0.01%)</title><rect x="80.4062%" y="1077" width="0.0116%" height="15" fill="rgb(234,116,45)" fg:x="34643" fg:w="5"/><text x="80.6562%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="80.4062%" y="1093" width="0.0162%" height="15" fill="rgb(248,89,35)" fg:x="34643" fg:w="7"/><text x="80.6562%" y="1103.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.03%)</title><rect x="80.4039%" y="1109" width="0.0255%" height="15" fill="rgb(233,167,45)" fg:x="34642" fg:w="11"/><text x="80.6539%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="80.4340%" y="1109" width="0.0209%" height="15" fill="rgb(248,228,14)" fg:x="34655" fg:w="9"/><text x="80.6840%" y="1119.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signatures (11 samples, 0.03%)</title><rect x="80.4712%" y="1109" width="0.0255%" height="15" fill="rgb(246,91,14)" fg:x="34671" fg:w="11"/><text x="80.7212%" y="1119.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signatures (8 samples, 0.02%)</title><rect x="80.4781%" y="1093" width="0.0186%" height="15" fill="rgb(227,142,5)" fg:x="34674" fg:w="8"/><text x="80.7281%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="80.4851%" y="1077" width="0.0116%" height="15" fill="rgb(221,63,33)" fg:x="34677" fg:w="5"/><text x="80.7351%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (8 samples, 0.02%)</title><rect x="80.5176%" y="1077" width="0.0186%" height="15" fill="rgb(233,49,0)" fg:x="34691" fg:w="8"/><text x="80.7676%" y="1087.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="80.4990%" y="1093" width="0.0418%" height="15" fill="rgb(251,115,38)" fg:x="34683" fg:w="18"/><text x="80.7490%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (7 samples, 0.02%)</title><rect x="80.5408%" y="1093" width="0.0162%" height="15" fill="rgb(231,214,32)" fg:x="34701" fg:w="7"/><text x="80.7908%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (7 samples, 0.02%)</title><rect x="80.5408%" y="1077" width="0.0162%" height="15" fill="rgb(248,73,46)" fg:x="34701" fg:w="7"/><text x="80.7908%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (6 samples, 0.01%)</title><rect x="80.5431%" y="1061" width="0.0139%" height="15" fill="rgb(237,156,4)" fg:x="34702" fg:w="6"/><text x="80.7931%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="80.5431%" y="1045" width="0.0139%" height="15" fill="rgb(227,132,2)" fg:x="34702" fg:w="6"/><text x="80.7931%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.03%)</title><rect x="80.5663%" y="1061" width="0.0279%" height="15" fill="rgb(248,161,9)" fg:x="34712" fg:w="12"/><text x="80.8163%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.03%)</title><rect x="80.5663%" y="1045" width="0.0279%" height="15" fill="rgb(238,77,38)" fg:x="34712" fg:w="12"/><text x="80.8163%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.04%)</title><rect x="80.5617%" y="1077" width="0.0371%" height="15" fill="rgb(222,166,40)" fg:x="34710" fg:w="16"/><text x="80.8117%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (6 samples, 0.01%)</title><rect x="80.6011%" y="1045" width="0.0139%" height="15" fill="rgb(214,168,45)" fg:x="34727" fg:w="6"/><text x="80.8511%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (5 samples, 0.01%)</title><rect x="80.6035%" y="1029" width="0.0116%" height="15" fill="rgb(226,64,37)" fg:x="34728" fg:w="5"/><text x="80.8535%" y="1039.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (52 samples, 0.12%)</title><rect x="80.4967%" y="1109" width="0.1207%" height="15" fill="rgb(232,210,43)" fg:x="34682" fg:w="52"/><text x="80.7467%" y="1119.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (26 samples, 0.06%)</title><rect x="80.5570%" y="1093" width="0.0603%" height="15" fill="rgb(214,76,33)" fg:x="34708" fg:w="26"/><text x="80.8070%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (8 samples, 0.02%)</title><rect x="80.5988%" y="1077" width="0.0186%" height="15" fill="rgb(210,78,5)" fg:x="34726" fg:w="8"/><text x="80.8488%" y="1087.50"></text></g><g><title>alloc::slice::hack::into_vec (8 samples, 0.02%)</title><rect x="80.5988%" y="1061" width="0.0186%" height="15" fill="rgb(211,107,37)" fg:x="34726" fg:w="8"/><text x="80.8488%" y="1071.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_handle (102 samples, 0.24%)</title><rect x="80.3922%" y="1125" width="0.2367%" height="15" fill="rgb(249,67,16)" fg:x="34637" fg:w="102"/><text x="80.6422%" y="1135.50"></text></g><g><title>move_binary_format::check_bounds::check_bounds_impl (5 samples, 0.01%)</title><rect x="80.6174%" y="1109" width="0.0116%" height="15" fill="rgb(222,114,31)" fg:x="34734" fg:w="5"/><text x="80.8674%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="80.6638%" y="1109" width="0.0139%" height="15" fill="rgb(242,118,19)" fg:x="34754" fg:w="6"/><text x="80.9138%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.03%)</title><rect x="80.7102%" y="1077" width="0.0325%" height="15" fill="rgb(223,115,1)" fg:x="34774" fg:w="14"/><text x="80.9602%" y="1087.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="80.6917%" y="1093" width="0.0557%" height="15" fill="rgb(241,182,54)" fg:x="34766" fg:w="24"/><text x="80.9417%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (17 samples, 0.04%)</title><rect x="80.7497%" y="1093" width="0.0395%" height="15" fill="rgb(244,166,36)" fg:x="34791" fg:w="17"/><text x="80.9997%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (17 samples, 0.04%)</title><rect x="80.7497%" y="1077" width="0.0395%" height="15" fill="rgb(241,52,43)" fg:x="34791" fg:w="17"/><text x="80.9997%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (14 samples, 0.03%)</title><rect x="80.7566%" y="1061" width="0.0325%" height="15" fill="rgb(236,82,9)" fg:x="34794" fg:w="14"/><text x="81.0066%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="80.7590%" y="1045" width="0.0302%" height="15" fill="rgb(241,119,0)" fg:x="34795" fg:w="13"/><text x="81.0090%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.02%)</title><rect x="80.7729%" y="1029" width="0.0162%" height="15" fill="rgb(221,19,22)" fg:x="34801" fg:w="7"/><text x="81.0229%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.03%)</title><rect x="80.7938%" y="1061" width="0.0348%" height="15" fill="rgb(254,144,35)" fg:x="34810" fg:w="15"/><text x="81.0438%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.03%)</title><rect x="80.7938%" y="1045" width="0.0348%" height="15" fill="rgb(246,132,30)" fg:x="34810" fg:w="15"/><text x="81.0438%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.04%)</title><rect x="80.7938%" y="1077" width="0.0371%" height="15" fill="rgb(234,69,28)" fg:x="34810" fg:w="16"/><text x="81.0438%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (8 samples, 0.02%)</title><rect x="80.8309%" y="1045" width="0.0186%" height="15" fill="rgb(219,106,47)" fg:x="34826" fg:w="8"/><text x="81.0809%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (8 samples, 0.02%)</title><rect x="80.8309%" y="1029" width="0.0186%" height="15" fill="rgb(218,79,24)" fg:x="34826" fg:w="8"/><text x="81.0809%" y="1039.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_signature (89 samples, 0.21%)</title><rect x="80.6452%" y="1125" width="0.2066%" height="15" fill="rgb(225,26,21)" fg:x="34746" fg:w="89"/><text x="80.8952%" y="1135.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (75 samples, 0.17%)</title><rect x="80.6777%" y="1109" width="0.1741%" height="15" fill="rgb(217,68,49)" fg:x="34760" fg:w="75"/><text x="80.9277%" y="1119.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (26 samples, 0.06%)</title><rect x="80.7915%" y="1093" width="0.0603%" height="15" fill="rgb(220,204,28)" fg:x="34809" fg:w="26"/><text x="81.0415%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (9 samples, 0.02%)</title><rect x="80.8309%" y="1077" width="0.0209%" height="15" fill="rgb(237,208,43)" fg:x="34826" fg:w="9"/><text x="81.0809%" y="1087.50"></text></g><g><title>alloc::slice::hack::into_vec (9 samples, 0.02%)</title><rect x="80.8309%" y="1061" width="0.0209%" height="15" fill="rgb(213,97,42)" fg:x="34826" fg:w="9"/><text x="81.0809%" y="1071.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (9 samples, 0.02%)</title><rect x="80.8704%" y="1109" width="0.0209%" height="15" fill="rgb(238,96,52)" fg:x="34843" fg:w="9"/><text x="81.1204%" y="1119.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (5 samples, 0.01%)</title><rect x="80.8797%" y="1093" width="0.0116%" height="15" fill="rgb(228,14,13)" fg:x="34847" fg:w="5"/><text x="81.1297%" y="1103.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_struct_def (21 samples, 0.05%)</title><rect x="80.8518%" y="1125" width="0.0487%" height="15" fill="rgb(219,123,13)" fg:x="34835" fg:w="21"/><text x="81.1018%" y="1135.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_impl (256 samples, 0.59%)</title><rect x="80.3087%" y="1141" width="0.5942%" height="15" fill="rgb(216,144,17)" fg:x="34601" fg:w="256"/><text x="80.5587%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="80.9400%" y="1109" width="0.0186%" height="15" fill="rgb(230,228,29)" fg:x="34873" fg:w="8"/><text x="81.1900%" y="1119.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_module (35 samples, 0.08%)</title><rect x="80.9029%" y="1141" width="0.0812%" height="15" fill="rgb(233,18,5)" fg:x="34857" fg:w="35"/><text x="81.1529%" y="1151.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_impl (34 samples, 0.08%)</title><rect x="80.9052%" y="1125" width="0.0789%" height="15" fill="rgb(233,197,12)" fg:x="34858" fg:w="34"/><text x="81.1552%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (6 samples, 0.01%)</title><rect x="81.0143%" y="1077" width="0.0139%" height="15" fill="rgb(234,140,29)" fg:x="34905" fg:w="6"/><text x="81.2643%" y="1087.50"></text></g><g><title>alloc::slice::merge_sort (6 samples, 0.01%)</title><rect x="81.0143%" y="1061" width="0.0139%" height="15" fill="rgb(233,113,19)" fg:x="34905" fg:w="6"/><text x="81.2643%" y="1071.50"></text></g><g><title>hashbrown::map::make_insert_hash (8 samples, 0.02%)</title><rect x="81.0328%" y="1029" width="0.0186%" height="15" fill="rgb(246,209,13)" fg:x="34913" fg:w="8"/><text x="81.2828%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="81.0375%" y="1013" width="0.0139%" height="15" fill="rgb(242,79,54)" fg:x="34915" fg:w="6"/><text x="81.2875%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="81.0375%" y="997" width="0.0139%" height="15" fill="rgb(219,73,16)" fg:x="34915" fg:w="6"/><text x="81.2875%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.01%)</title><rect x="81.0398%" y="981" width="0.0116%" height="15" fill="rgb(224,52,10)" fg:x="34916" fg:w="5"/><text x="81.2898%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.01%)</title><rect x="81.0514%" y="1029" width="0.0139%" height="15" fill="rgb(237,179,5)" fg:x="34921" fg:w="6"/><text x="81.3014%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="81.0514%" y="1013" width="0.0139%" height="15" fill="rgb(231,20,6)" fg:x="34921" fg:w="6"/><text x="81.3014%" y="1023.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (5 samples, 0.01%)</title><rect x="81.0769%" y="965" width="0.0116%" height="15" fill="rgb(253,171,45)" fg:x="34932" fg:w="5"/><text x="81.3269%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="81.0769%" y="949" width="0.0116%" height="15" fill="rgb(230,75,49)" fg:x="34932" fg:w="5"/><text x="81.3269%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="81.0677%" y="1013" width="0.0325%" height="15" fill="rgb(216,83,46)" fg:x="34928" fg:w="14"/><text x="81.3177%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="81.0677%" y="997" width="0.0325%" height="15" fill="rgb(236,56,9)" fg:x="34928" fg:w="14"/><text x="81.3177%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (14 samples, 0.03%)</title><rect x="81.0677%" y="981" width="0.0325%" height="15" fill="rgb(215,28,34)" fg:x="34928" fg:w="14"/><text x="81.3177%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (34 samples, 0.08%)</title><rect x="81.0328%" y="1077" width="0.0789%" height="15" fill="rgb(230,222,20)" fg:x="34913" fg:w="34"/><text x="81.2828%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (34 samples, 0.08%)</title><rect x="81.0328%" y="1061" width="0.0789%" height="15" fill="rgb(235,209,51)" fg:x="34913" fg:w="34"/><text x="81.2828%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.08%)</title><rect x="81.0328%" y="1045" width="0.0789%" height="15" fill="rgb(235,167,1)" fg:x="34913" fg:w="34"/><text x="81.2828%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (20 samples, 0.05%)</title><rect x="81.0653%" y="1029" width="0.0464%" height="15" fill="rgb(248,220,0)" fg:x="34927" fg:w="20"/><text x="81.3153%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::check_tables (45 samples, 0.10%)</title><rect x="81.0096%" y="1093" width="0.1044%" height="15" fill="rgb(239,0,18)" fg:x="34903" fg:w="45"/><text x="81.2596%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (5 samples, 0.01%)</title><rect x="81.1187%" y="997" width="0.0116%" height="15" fill="rgb(229,179,11)" fg:x="34950" fg:w="5"/><text x="81.3687%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="81.1187%" y="981" width="0.0116%" height="15" fill="rgb(226,116,53)" fg:x="34950" fg:w="5"/><text x="81.3687%" y="991.50"></text></g><g><title>alloc::vec::from_elem (7 samples, 0.02%)</title><rect x="81.1164%" y="1061" width="0.0162%" height="15" fill="rgb(218,1,49)" fg:x="34949" fg:w="7"/><text x="81.3664%" y="1071.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 0.02%)</title><rect x="81.1164%" y="1045" width="0.0162%" height="15" fill="rgb(208,184,47)" fg:x="34949" fg:w="7"/><text x="81.3664%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (6 samples, 0.01%)</title><rect x="81.1187%" y="1029" width="0.0139%" height="15" fill="rgb(238,174,3)" fg:x="34950" fg:w="6"/><text x="81.3687%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="81.1187%" y="1013" width="0.0139%" height="15" fill="rgb(247,188,6)" fg:x="34950" fg:w="6"/><text x="81.3687%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::read_table_contents (9 samples, 0.02%)</title><rect x="81.1141%" y="1093" width="0.0209%" height="15" fill="rgb(211,165,46)" fg:x="34948" fg:w="9"/><text x="81.3641%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_new_binary (9 samples, 0.02%)</title><rect x="81.1141%" y="1077" width="0.0209%" height="15" fill="rgb(222,190,10)" fg:x="34948" fg:w="9"/><text x="81.3641%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="81.1350%" y="1077" width="0.0139%" height="15" fill="rgb(206,185,3)" fg:x="34957" fg:w="6"/><text x="81.3850%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="81.1350%" y="1061" width="0.0139%" height="15" fill="rgb(244,125,37)" fg:x="34957" fg:w="6"/><text x="81.3850%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="81.1350%" y="1045" width="0.0139%" height="15" fill="rgb(211,43,7)" fg:x="34957" fg:w="6"/><text x="81.3850%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.01%)</title><rect x="81.1350%" y="1029" width="0.0139%" height="15" fill="rgb(250,41,42)" fg:x="34957" fg:w="6"/><text x="81.3850%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="81.1373%" y="1013" width="0.0116%" height="15" fill="rgb(254,54,42)" fg:x="34958" fg:w="5"/><text x="81.3873%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::read_tables (10 samples, 0.02%)</title><rect x="81.1350%" y="1093" width="0.0232%" height="15" fill="rgb(213,71,43)" fg:x="34957" fg:w="10"/><text x="81.3850%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize (66 samples, 0.15%)</title><rect x="81.0073%" y="1141" width="0.1532%" height="15" fill="rgb(249,3,44)" fg:x="34902" fg:w="66"/><text x="81.2573%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_no_check_bounds (66 samples, 0.15%)</title><rect x="81.0073%" y="1125" width="0.1532%" height="15" fill="rgb(229,80,41)" fg:x="34902" fg:w="66"/><text x="81.2573%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (66 samples, 0.15%)</title><rect x="81.0073%" y="1109" width="0.1532%" height="15" fill="rgb(231,25,28)" fg:x="34902" fg:w="66"/><text x="81.2573%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool (12 samples, 0.03%)</title><rect x="81.1651%" y="1125" width="0.0279%" height="15" fill="rgb(208,79,48)" fg:x="34970" fg:w="12"/><text x="81.4151%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_constant (12 samples, 0.03%)</title><rect x="81.1651%" y="1109" width="0.0279%" height="15" fill="rgb(207,196,38)" fg:x="34970" fg:w="12"/><text x="81.4151%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (6 samples, 0.01%)</title><rect x="81.1791%" y="1093" width="0.0139%" height="15" fill="rgb(228,105,49)" fg:x="34976" fg:w="6"/><text x="81.4291%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_ability_set (6 samples, 0.01%)</title><rect x="81.2208%" y="1093" width="0.0139%" height="15" fill="rgb(237,99,15)" fg:x="34994" fg:w="6"/><text x="81.4708%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (6 samples, 0.01%)</title><rect x="81.2208%" y="1077" width="0.0139%" height="15" fill="rgb(224,207,46)" fg:x="34994" fg:w="6"/><text x="81.4708%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (6 samples, 0.01%)</title><rect x="81.2208%" y="1061" width="0.0139%" height="15" fill="rgb(249,117,50)" fg:x="34994" fg:w="6"/><text x="81.4708%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (6 samples, 0.01%)</title><rect x="81.2208%" y="1045" width="0.0139%" height="15" fill="rgb(248,17,13)" fg:x="34994" fg:w="6"/><text x="81.4708%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_ability_sets (28 samples, 0.06%)</title><rect x="81.2000%" y="1109" width="0.0650%" height="15" fill="rgb(228,187,36)" fg:x="34985" fg:w="28"/><text x="81.4500%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_type_parameter_count (13 samples, 0.03%)</title><rect x="81.2348%" y="1093" width="0.0302%" height="15" fill="rgb(234,132,20)" fg:x="35000" fg:w="13"/><text x="81.4848%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.03%)</title><rect x="81.2348%" y="1077" width="0.0302%" height="15" fill="rgb(209,170,46)" fg:x="35000" fg:w="13"/><text x="81.4848%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.2441%" y="1061" width="0.0209%" height="15" fill="rgb(237,23,19)" fg:x="35004" fg:w="9"/><text x="81.4941%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.2441%" y="1045" width="0.0209%" height="15" fill="rgb(227,21,26)" fg:x="35004" fg:w="9"/><text x="81.4941%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (7 samples, 0.02%)</title><rect x="81.2487%" y="1029" width="0.0162%" height="15" fill="rgb(222,220,48)" fg:x="35006" fg:w="7"/><text x="81.4987%" y="1039.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (7 samples, 0.02%)</title><rect x="81.2487%" y="1013" width="0.0162%" height="15" fill="rgb(214,9,16)" fg:x="35006" fg:w="7"/><text x="81.4987%" y="1023.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (5 samples, 0.01%)</title><rect x="81.2533%" y="997" width="0.0116%" height="15" fill="rgb(209,73,30)" fg:x="35008" fg:w="5"/><text x="81.5033%" y="1007.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_index (19 samples, 0.04%)</title><rect x="81.2649%" y="1109" width="0.0441%" height="15" fill="rgb(207,20,33)" fg:x="35013" fg:w="19"/><text x="81.5149%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (19 samples, 0.04%)</title><rect x="81.2649%" y="1093" width="0.0441%" height="15" fill="rgb(219,153,12)" fg:x="35013" fg:w="19"/><text x="81.5149%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (17 samples, 0.04%)</title><rect x="81.2696%" y="1077" width="0.0395%" height="15" fill="rgb(235,97,25)" fg:x="35015" fg:w="17"/><text x="81.5196%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (17 samples, 0.04%)</title><rect x="81.2696%" y="1061" width="0.0395%" height="15" fill="rgb(244,30,34)" fg:x="35015" fg:w="17"/><text x="81.5196%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (14 samples, 0.03%)</title><rect x="81.2765%" y="1045" width="0.0325%" height="15" fill="rgb(214,106,45)" fg:x="35018" fg:w="14"/><text x="81.5265%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (14 samples, 0.03%)</title><rect x="81.2765%" y="1029" width="0.0325%" height="15" fill="rgb(226,41,9)" fg:x="35018" fg:w="14"/><text x="81.5265%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (6 samples, 0.01%)</title><rect x="81.2951%" y="1013" width="0.0139%" height="15" fill="rgb(253,139,29)" fg:x="35026" fg:w="6"/><text x="81.5451%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_module_handle_index (12 samples, 0.03%)</title><rect x="81.3090%" y="1109" width="0.0279%" height="15" fill="rgb(213,205,39)" fg:x="35032" fg:w="12"/><text x="81.5590%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (12 samples, 0.03%)</title><rect x="81.3090%" y="1093" width="0.0279%" height="15" fill="rgb(209,27,10)" fg:x="35032" fg:w="12"/><text x="81.5590%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (12 samples, 0.03%)</title><rect x="81.3090%" y="1077" width="0.0279%" height="15" fill="rgb(249,142,16)" fg:x="35032" fg:w="12"/><text x="81.5590%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (11 samples, 0.03%)</title><rect x="81.3114%" y="1061" width="0.0255%" height="15" fill="rgb(242,65,12)" fg:x="35033" fg:w="11"/><text x="81.5614%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (9 samples, 0.02%)</title><rect x="81.3160%" y="1045" width="0.0209%" height="15" fill="rgb(232,48,10)" fg:x="35035" fg:w="9"/><text x="81.5660%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (9 samples, 0.02%)</title><rect x="81.3160%" y="1029" width="0.0209%" height="15" fill="rgb(253,67,19)" fg:x="35035" fg:w="9"/><text x="81.5660%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (5 samples, 0.01%)</title><rect x="81.3253%" y="1013" width="0.0116%" height="15" fill="rgb(227,93,29)" fg:x="35039" fg:w="5"/><text x="81.5753%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (5 samples, 0.01%)</title><rect x="81.3253%" y="997" width="0.0116%" height="15" fill="rgb(226,189,53)" fg:x="35039" fg:w="5"/><text x="81.5753%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.01%)</title><rect x="81.3253%" y="981" width="0.0116%" height="15" fill="rgb(223,224,1)" fg:x="35039" fg:w="5"/><text x="81.5753%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="81.3253%" y="965" width="0.0116%" height="15" fill="rgb(221,84,32)" fg:x="35039" fg:w="5"/><text x="81.5753%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="81.3253%" y="949" width="0.0116%" height="15" fill="rgb(214,189,28)" fg:x="35039" fg:w="5"/><text x="81.5753%" y="959.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (8 samples, 0.02%)</title><rect x="81.3694%" y="1013" width="0.0186%" height="15" fill="rgb(234,7,52)" fg:x="35058" fg:w="8"/><text x="81.6194%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_function_handles (90 samples, 0.21%)</title><rect x="81.1930%" y="1125" width="0.2089%" height="15" fill="rgb(249,73,31)" fg:x="34982" fg:w="90"/><text x="81.4430%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_signature_index (28 samples, 0.06%)</title><rect x="81.3369%" y="1109" width="0.0650%" height="15" fill="rgb(253,153,41)" fg:x="35044" fg:w="28"/><text x="81.5869%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (28 samples, 0.06%)</title><rect x="81.3369%" y="1093" width="0.0650%" height="15" fill="rgb(249,52,34)" fg:x="35044" fg:w="28"/><text x="81.5869%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (24 samples, 0.06%)</title><rect x="81.3462%" y="1077" width="0.0557%" height="15" fill="rgb(236,177,47)" fg:x="35048" fg:w="24"/><text x="81.5962%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (24 samples, 0.06%)</title><rect x="81.3462%" y="1061" width="0.0557%" height="15" fill="rgb(252,185,45)" fg:x="35048" fg:w="24"/><text x="81.5962%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (20 samples, 0.05%)</title><rect x="81.3555%" y="1045" width="0.0464%" height="15" fill="rgb(251,15,30)" fg:x="35052" fg:w="20"/><text x="81.6055%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (17 samples, 0.04%)</title><rect x="81.3624%" y="1029" width="0.0395%" height="15" fill="rgb(233,31,4)" fg:x="35055" fg:w="17"/><text x="81.6124%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (6 samples, 0.01%)</title><rect x="81.3880%" y="1013" width="0.0139%" height="15" fill="rgb(254,44,24)" fg:x="35066" fg:w="6"/><text x="81.6380%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (5 samples, 0.01%)</title><rect x="81.3903%" y="997" width="0.0116%" height="15" fill="rgb(218,54,1)" fg:x="35067" fg:w="5"/><text x="81.6403%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.01%)</title><rect x="81.3903%" y="981" width="0.0116%" height="15" fill="rgb(243,209,39)" fg:x="35067" fg:w="5"/><text x="81.6403%" y="991.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (5 samples, 0.01%)</title><rect x="81.4019%" y="1125" width="0.0116%" height="15" fill="rgb(206,75,33)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_size (5 samples, 0.01%)</title><rect x="81.4019%" y="1109" width="0.0116%" height="15" fill="rgb(223,108,18)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (5 samples, 0.01%)</title><rect x="81.4019%" y="1093" width="0.0116%" height="15" fill="rgb(244,89,31)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="81.4019%" y="1077" width="0.0116%" height="15" fill="rgb(222,167,27)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="81.4019%" y="1061" width="0.0116%" height="15" fill="rgb(247,41,16)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (5 samples, 0.01%)</title><rect x="81.4019%" y="1045" width="0.0116%" height="15" fill="rgb(233,168,40)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (5 samples, 0.01%)</title><rect x="81.4019%" y="1029" width="0.0116%" height="15" fill="rgb(205,211,8)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (5 samples, 0.01%)</title><rect x="81.4019%" y="1013" width="0.0116%" height="15" fill="rgb(238,105,11)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (5 samples, 0.01%)</title><rect x="81.4019%" y="997" width="0.0116%" height="15" fill="rgb(223,142,52)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.01%)</title><rect x="81.4019%" y="981" width="0.0116%" height="15" fill="rgb(238,51,33)" fg:x="35072" fg:w="5"/><text x="81.6519%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.01%)</title><rect x="81.4529%" y="1077" width="0.0139%" height="15" fill="rgb(231,188,43)" fg:x="35094" fg:w="6"/><text x="81.7029%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="81.4831%" y="981" width="0.0139%" height="15" fill="rgb(216,92,17)" fg:x="35107" fg:w="6"/><text x="81.7331%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="81.4831%" y="965" width="0.0139%" height="15" fill="rgb(228,2,40)" fg:x="35107" fg:w="6"/><text x="81.7331%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="81.4831%" y="997" width="0.0162%" height="15" fill="rgb(226,73,15)" fg:x="35107" fg:w="7"/><text x="81.7331%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="81.4831%" y="1013" width="0.0255%" height="15" fill="rgb(227,66,46)" fg:x="35107" fg:w="11"/><text x="81.7331%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.03%)</title><rect x="81.4808%" y="1061" width="0.0302%" height="15" fill="rgb(209,71,6)" fg:x="35106" fg:w="13"/><text x="81.7308%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.03%)</title><rect x="81.4808%" y="1045" width="0.0302%" height="15" fill="rgb(246,100,25)" fg:x="35106" fg:w="13"/><text x="81.7308%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (12 samples, 0.03%)</title><rect x="81.4831%" y="1029" width="0.0279%" height="15" fill="rgb(248,185,27)" fg:x="35107" fg:w="12"/><text x="81.7331%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.04%)</title><rect x="81.4762%" y="1077" width="0.0371%" height="15" fill="rgb(225,118,47)" fg:x="35104" fg:w="16"/><text x="81.7262%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::TypeBuilder::apply (9 samples, 0.02%)</title><rect x="81.5272%" y="1077" width="0.0209%" height="15" fill="rgb(220,185,44)" fg:x="35126" fg:w="9"/><text x="81.7772%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (87 samples, 0.20%)</title><rect x="81.4204%" y="1125" width="0.2019%" height="15" fill="rgb(227,95,24)" fg:x="35080" fg:w="87"/><text x="81.6704%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (87 samples, 0.20%)</title><rect x="81.4204%" y="1109" width="0.2019%" height="15" fill="rgb(252,84,24)" fg:x="35080" fg:w="87"/><text x="81.6704%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (84 samples, 0.19%)</title><rect x="81.4274%" y="1093" width="0.1950%" height="15" fill="rgb(240,34,44)" fg:x="35083" fg:w="84"/><text x="81.6774%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (31 samples, 0.07%)</title><rect x="81.5504%" y="1077" width="0.0720%" height="15" fill="rgb(209,72,54)" fg:x="35136" fg:w="31"/><text x="81.8004%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (22 samples, 0.05%)</title><rect x="81.5713%" y="1061" width="0.0511%" height="15" fill="rgb(226,19,45)" fg:x="35145" fg:w="22"/><text x="81.8213%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (19 samples, 0.04%)</title><rect x="81.5783%" y="1045" width="0.0441%" height="15" fill="rgb(246,7,45)" fg:x="35148" fg:w="19"/><text x="81.8283%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (15 samples, 0.03%)</title><rect x="81.5876%" y="1029" width="0.0348%" height="15" fill="rgb(225,45,2)" fg:x="35152" fg:w="15"/><text x="81.8376%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (209 samples, 0.49%)</title><rect x="81.1651%" y="1141" width="0.4851%" height="15" fill="rgb(221,80,29)" fg:x="34970" fg:w="209"/><text x="81.4151%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::load_struct_handles (12 samples, 0.03%)</title><rect x="81.6224%" y="1125" width="0.0279%" height="15" fill="rgb(228,11,19)" fg:x="35167" fg:w="12"/><text x="81.8724%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_struct_type_parameters (6 samples, 0.01%)</title><rect x="81.6363%" y="1109" width="0.0139%" height="15" fill="rgb(243,17,21)" fg:x="35173" fg:w="6"/><text x="81.8863%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool (5 samples, 0.01%)</title><rect x="81.6502%" y="1109" width="0.0116%" height="15" fill="rgb(243,88,8)" fg:x="35179" fg:w="5"/><text x="81.9002%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_constant (5 samples, 0.01%)</title><rect x="81.6502%" y="1093" width="0.0116%" height="15" fill="rgb(214,17,9)" fg:x="35179" fg:w="5"/><text x="81.9002%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_function_handles (9 samples, 0.02%)</title><rect x="81.6618%" y="1109" width="0.0209%" height="15" fill="rgb(232,169,15)" fg:x="35184" fg:w="9"/><text x="81.9118%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_function_instantiations (5 samples, 0.01%)</title><rect x="81.6827%" y="1109" width="0.0116%" height="15" fill="rgb(232,86,53)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_signature_index (5 samples, 0.01%)</title><rect x="81.6827%" y="1093" width="0.0116%" height="15" fill="rgb(222,100,4)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (5 samples, 0.01%)</title><rect x="81.6827%" y="1077" width="0.0116%" height="15" fill="rgb(253,151,38)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="81.6827%" y="1061" width="0.0116%" height="15" fill="rgb(238,215,29)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="81.6827%" y="1045" width="0.0116%" height="15" fill="rgb(205,128,53)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (5 samples, 0.01%)</title><rect x="81.6827%" y="1029" width="0.0116%" height="15" fill="rgb(248,183,14)" fg:x="35193" fg:w="5"/><text x="81.9327%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (13 samples, 0.03%)</title><rect x="81.6943%" y="1109" width="0.0302%" height="15" fill="rgb(244,172,35)" fg:x="35198" fg:w="13"/><text x="81.9443%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_size (8 samples, 0.02%)</title><rect x="81.7059%" y="1093" width="0.0186%" height="15" fill="rgb(234,93,19)" fg:x="35203" fg:w="8"/><text x="81.9559%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (8 samples, 0.02%)</title><rect x="81.7059%" y="1077" width="0.0186%" height="15" fill="rgb(227,109,7)" fg:x="35203" fg:w="8"/><text x="81.9559%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (8 samples, 0.02%)</title><rect x="81.7059%" y="1061" width="0.0186%" height="15" fill="rgb(233,136,54)" fg:x="35203" fg:w="8"/><text x="81.9559%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (8 samples, 0.02%)</title><rect x="81.7059%" y="1045" width="0.0186%" height="15" fill="rgb(233,19,40)" fg:x="35203" fg:w="8"/><text x="81.9559%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (5 samples, 0.01%)</title><rect x="81.7129%" y="1029" width="0.0116%" height="15" fill="rgb(247,41,18)" fg:x="35206" fg:w="5"/><text x="81.9629%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::load_module_handles (7 samples, 0.02%)</title><rect x="81.7245%" y="1109" width="0.0162%" height="15" fill="rgb(220,34,34)" fg:x="35211" fg:w="7"/><text x="81.9745%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_index (5 samples, 0.01%)</title><rect x="81.7291%" y="1093" width="0.0116%" height="15" fill="rgb(222,135,32)" fg:x="35213" fg:w="5"/><text x="81.9791%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (5 samples, 0.01%)</title><rect x="81.7291%" y="1077" width="0.0116%" height="15" fill="rgb(214,80,19)" fg:x="35213" fg:w="5"/><text x="81.9791%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="81.7593%" y="949" width="0.0116%" height="15" fill="rgb(234,54,46)" fg:x="35226" fg:w="5"/><text x="82.0093%" y="959.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="81.7593%" y="933" width="0.0116%" height="15" fill="rgb(251,48,23)" fg:x="35226" fg:w="5"/><text x="82.0093%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="81.7547%" y="981" width="0.0186%" height="15" fill="rgb(254,109,52)" fg:x="35224" fg:w="8"/><text x="82.0047%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="81.7547%" y="965" width="0.0186%" height="15" fill="rgb(240,186,19)" fg:x="35224" fg:w="8"/><text x="82.0047%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="81.7547%" y="997" width="0.0255%" height="15" fill="rgb(246,187,17)" fg:x="35224" fg:w="11"/><text x="82.0047%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.04%)</title><rect x="81.7431%" y="1077" width="0.0418%" height="15" fill="rgb(212,21,5)" fg:x="35219" fg:w="18"/><text x="81.9931%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="81.7431%" y="1061" width="0.0418%" height="15" fill="rgb(225,185,18)" fg:x="35219" fg:w="18"/><text x="81.9931%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="81.7431%" y="1045" width="0.0418%" height="15" fill="rgb(245,114,17)" fg:x="35219" fg:w="18"/><text x="81.9931%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.04%)</title><rect x="81.7431%" y="1029" width="0.0418%" height="15" fill="rgb(223,164,24)" fg:x="35219" fg:w="18"/><text x="81.9931%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.04%)</title><rect x="81.7431%" y="1013" width="0.0418%" height="15" fill="rgb(211,228,3)" fg:x="35219" fg:w="18"/><text x="81.9931%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (24 samples, 0.06%)</title><rect x="81.7407%" y="1109" width="0.0557%" height="15" fill="rgb(223,16,38)" fg:x="35218" fg:w="24"/><text x="81.9907%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (23 samples, 0.05%)</title><rect x="81.7431%" y="1093" width="0.0534%" height="15" fill="rgb(207,31,54)" fg:x="35219" fg:w="23"/><text x="81.9931%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_signature_size (5 samples, 0.01%)</title><rect x="81.7848%" y="1077" width="0.0116%" height="15" fill="rgb(220,39,11)" fg:x="35237" fg:w="5"/><text x="82.0348%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (5 samples, 0.01%)</title><rect x="81.7848%" y="1061" width="0.0116%" height="15" fill="rgb(235,185,0)" fg:x="35237" fg:w="5"/><text x="82.0348%" y="1071.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (66 samples, 0.15%)</title><rect x="81.6502%" y="1125" width="0.1532%" height="15" fill="rgb(249,39,18)" fg:x="35179" fg:w="66"/><text x="81.9002%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (8 samples, 0.02%)</title><rect x="81.8057%" y="1109" width="0.0186%" height="15" fill="rgb(240,110,33)" fg:x="35246" fg:w="8"/><text x="82.0557%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (8 samples, 0.02%)</title><rect x="81.8057%" y="1093" width="0.0186%" height="15" fill="rgb(210,92,42)" fg:x="35246" fg:w="8"/><text x="82.0557%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="81.8243%" y="1077" width="0.0186%" height="15" fill="rgb(218,215,28)" fg:x="35254" fg:w="8"/><text x="82.0743%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="81.8243%" y="1061" width="0.0186%" height="15" fill="rgb(238,215,36)" fg:x="35254" fg:w="8"/><text x="82.0743%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="81.8243%" y="1045" width="0.0186%" height="15" fill="rgb(220,31,10)" fg:x="35254" fg:w="8"/><text x="82.0743%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.02%)</title><rect x="81.8243%" y="1029" width="0.0186%" height="15" fill="rgb(212,93,14)" fg:x="35254" fg:w="8"/><text x="82.0743%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="81.8243%" y="1013" width="0.0186%" height="15" fill="rgb(254,207,2)" fg:x="35254" fg:w="8"/><text x="82.0743%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_field_defs (12 samples, 0.03%)</title><rect x="81.8243%" y="1093" width="0.0279%" height="15" fill="rgb(205,57,44)" fg:x="35254" fg:w="12"/><text x="82.0743%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (88 samples, 0.20%)</title><rect x="81.6502%" y="1141" width="0.2042%" height="15" fill="rgb(226,151,19)" fg:x="35179" fg:w="88"/><text x="81.9002%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (22 samples, 0.05%)</title><rect x="81.8034%" y="1125" width="0.0511%" height="15" fill="rgb(230,72,30)" fg:x="35245" fg:w="22"/><text x="82.0534%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_struct_defs (13 samples, 0.03%)</title><rect x="81.8243%" y="1109" width="0.0302%" height="15" fill="rgb(244,0,8)" fg:x="35254" fg:w="13"/><text x="82.0743%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (7 samples, 0.02%)</title><rect x="81.8568%" y="1093" width="0.0162%" height="15" fill="rgb(230,192,6)" fg:x="35268" fg:w="7"/><text x="82.1068%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_function_handle_index (9 samples, 0.02%)</title><rect x="81.8730%" y="1093" width="0.0209%" height="15" fill="rgb(233,207,13)" fg:x="35275" fg:w="9"/><text x="82.1230%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (9 samples, 0.02%)</title><rect x="81.8730%" y="1077" width="0.0209%" height="15" fill="rgb(206,227,7)" fg:x="35275" fg:w="9"/><text x="82.1230%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.8730%" y="1061" width="0.0209%" height="15" fill="rgb(213,217,25)" fg:x="35275" fg:w="9"/><text x="82.1230%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.8730%" y="1045" width="0.0209%" height="15" fill="rgb(249,75,4)" fg:x="35275" fg:w="9"/><text x="82.1230%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (9 samples, 0.02%)</title><rect x="81.8730%" y="1029" width="0.0209%" height="15" fill="rgb(225,114,18)" fg:x="35275" fg:w="9"/><text x="82.1230%" y="1039.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (7 samples, 0.02%)</title><rect x="81.8777%" y="1013" width="0.0162%" height="15" fill="rgb(211,162,40)" fg:x="35277" fg:w="7"/><text x="82.1277%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_acquires_count (10 samples, 0.02%)</title><rect x="81.9032%" y="1077" width="0.0232%" height="15" fill="rgb(206,49,29)" fg:x="35288" fg:w="10"/><text x="82.1532%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (10 samples, 0.02%)</title><rect x="81.9032%" y="1061" width="0.0232%" height="15" fill="rgb(244,8,6)" fg:x="35288" fg:w="10"/><text x="82.1532%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.9055%" y="1045" width="0.0209%" height="15" fill="rgb(231,194,28)" fg:x="35289" fg:w="9"/><text x="82.1555%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="81.9055%" y="1029" width="0.0209%" height="15" fill="rgb(210,69,5)" fg:x="35289" fg:w="9"/><text x="82.1555%" y="1039.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (7 samples, 0.02%)</title><rect x="81.9102%" y="1013" width="0.0162%" height="15" fill="rgb(216,186,12)" fg:x="35291" fg:w="7"/><text x="82.1602%" y="1023.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (5 samples, 0.01%)</title><rect x="81.9148%" y="997" width="0.0116%" height="15" fill="rgb(238,61,15)" fg:x="35293" fg:w="5"/><text x="82.1648%" y="1007.50"></text></g><g><title>move_binary_format::deserializer::load_struct_definition_indices (16 samples, 0.04%)</title><rect x="81.8939%" y="1093" width="0.0371%" height="15" fill="rgb(226,104,1)" fg:x="35284" fg:w="16"/><text x="82.1439%" y="1103.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (6 samples, 0.01%)</title><rect x="81.9334%" y="1045" width="0.0139%" height="15" fill="rgb(229,128,15)" fg:x="35301" fg:w="6"/><text x="82.1834%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (46 samples, 0.11%)</title><rect x="81.8568%" y="1125" width="0.1068%" height="15" fill="rgb(247,110,15)" fg:x="35268" fg:w="46"/><text x="82.1068%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (46 samples, 0.11%)</title><rect x="81.8568%" y="1109" width="0.1068%" height="15" fill="rgb(210,74,48)" fg:x="35268" fg:w="46"/><text x="82.1068%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (14 samples, 0.03%)</title><rect x="81.9311%" y="1093" width="0.0325%" height="15" fill="rgb(246,121,10)" fg:x="35300" fg:w="14"/><text x="82.1811%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (14 samples, 0.03%)</title><rect x="81.9311%" y="1077" width="0.0325%" height="15" fill="rgb(214,156,37)" fg:x="35300" fg:w="14"/><text x="82.1811%" y="1087.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (14 samples, 0.03%)</title><rect x="81.9311%" y="1061" width="0.0325%" height="15" fill="rgb(214,210,34)" fg:x="35300" fg:w="14"/><text x="82.1811%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (7 samples, 0.02%)</title><rect x="81.9473%" y="1045" width="0.0162%" height="15" fill="rgb(237,93,35)" fg:x="35307" fg:w="7"/><text x="82.1973%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_field_defs (9 samples, 0.02%)</title><rect x="81.9636%" y="1109" width="0.0209%" height="15" fill="rgb(206,36,8)" fg:x="35314" fg:w="9"/><text x="82.2136%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_field_def (9 samples, 0.02%)</title><rect x="81.9636%" y="1093" width="0.0209%" height="15" fill="rgb(208,151,12)" fg:x="35314" fg:w="9"/><text x="82.2136%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (6 samples, 0.01%)</title><rect x="81.9705%" y="1077" width="0.0139%" height="15" fill="rgb(225,133,52)" fg:x="35317" fg:w="6"/><text x="82.2205%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (57 samples, 0.13%)</title><rect x="81.8545%" y="1141" width="0.1323%" height="15" fill="rgb(231,71,53)" fg:x="35267" fg:w="57"/><text x="82.1045%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::load_struct_defs (10 samples, 0.02%)</title><rect x="81.9636%" y="1125" width="0.0232%" height="15" fill="rgb(243,76,21)" fg:x="35314" fg:w="10"/><text x="82.2136%" y="1135.50"></text></g><g><title>&lt;move_binary_format::file_format_common::versioned_data::VersionedCursor as std::io::Read&gt;::read (14 samples, 0.03%)</title><rect x="82.0169%" y="1077" width="0.0325%" height="15" fill="rgb(252,144,3)" fg:x="35337" fg:w="14"/><text x="82.2669%" y="1087.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (14 samples, 0.03%)</title><rect x="82.0169%" y="1061" width="0.0325%" height="15" fill="rgb(231,199,10)" fg:x="35337" fg:w="14"/><text x="82.2669%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (10 samples, 0.02%)</title><rect x="82.0262%" y="1045" width="0.0232%" height="15" fill="rgb(215,18,11)" fg:x="35341" fg:w="10"/><text x="82.2762%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.01%)</title><rect x="82.0494%" y="1077" width="0.0139%" height="15" fill="rgb(241,65,24)" fg:x="35351" fg:w="6"/><text x="82.2994%" y="1087.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.01%)</title><rect x="82.0750%" y="981" width="0.0139%" height="15" fill="rgb(251,192,38)" fg:x="35362" fg:w="6"/><text x="82.3250%" y="991.50"></text></g><g><title>__calloc (6 samples, 0.01%)</title><rect x="82.0750%" y="965" width="0.0139%" height="15" fill="rgb(205,9,35)" fg:x="35362" fg:w="6"/><text x="82.3250%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (10 samples, 0.02%)</title><rect x="82.0680%" y="1013" width="0.0232%" height="15" fill="rgb(229,225,49)" fg:x="35359" fg:w="10"/><text x="82.3180%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="82.0703%" y="997" width="0.0209%" height="15" fill="rgb(207,125,39)" fg:x="35360" fg:w="9"/><text x="82.3203%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (7 samples, 0.02%)</title><rect x="82.0912%" y="997" width="0.0162%" height="15" fill="rgb(222,78,19)" fg:x="35369" fg:w="7"/><text x="82.3412%" y="1007.50"></text></g><g><title>alloc::vec::from_elem (24 samples, 0.06%)</title><rect x="82.0634%" y="1077" width="0.0557%" height="15" fill="rgb(248,207,20)" fg:x="35357" fg:w="24"/><text x="82.3134%" y="1087.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (24 samples, 0.06%)</title><rect x="82.0634%" y="1061" width="0.0557%" height="15" fill="rgb(205,103,49)" fg:x="35357" fg:w="24"/><text x="82.3134%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (24 samples, 0.06%)</title><rect x="82.0634%" y="1045" width="0.0557%" height="15" fill="rgb(216,42,28)" fg:x="35357" fg:w="24"/><text x="82.3134%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.06%)</title><rect x="82.0634%" y="1029" width="0.0557%" height="15" fill="rgb(213,205,53)" fg:x="35357" fg:w="24"/><text x="82.3134%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.03%)</title><rect x="82.0912%" y="1013" width="0.0279%" height="15" fill="rgb(239,140,53)" fg:x="35369" fg:w="12"/><text x="82.3412%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="82.1075%" y="997" width="0.0116%" height="15" fill="rgb(248,95,9)" fg:x="35376" fg:w="5"/><text x="82.3575%" y="1007.50"></text></g><g><title>alloc::string::String::from_utf8 (7 samples, 0.02%)</title><rect x="82.1260%" y="1061" width="0.0162%" height="15" fill="rgb(254,58,47)" fg:x="35384" fg:w="7"/><text x="82.3760%" y="1071.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (72 samples, 0.17%)</title><rect x="82.0123%" y="1093" width="0.1671%" height="15" fill="rgb(234,227,14)" fg:x="35335" fg:w="72"/><text x="82.2623%" y="1103.50"></text></g><g><title>move_core_types::identifier::Identifier::from_utf8 (24 samples, 0.06%)</title><rect x="82.1237%" y="1077" width="0.0557%" height="15" fill="rgb(205,192,45)" fg:x="35383" fg:w="24"/><text x="82.3737%" y="1087.50"></text></g><g><title>move_core_types::identifier::Identifier::new (16 samples, 0.04%)</title><rect x="82.1423%" y="1061" width="0.0371%" height="15" fill="rgb(253,187,31)" fg:x="35391" fg:w="16"/><text x="82.3923%" y="1071.50"></text></g><g><title>move_core_types::identifier::Identifier::is_valid (16 samples, 0.04%)</title><rect x="82.1423%" y="1045" width="0.0371%" height="15" fill="rgb(222,6,32)" fg:x="35391" fg:w="16"/><text x="82.3923%" y="1055.50"></text></g><g><title>move_core_types::identifier::is_valid (16 samples, 0.04%)</title><rect x="82.1423%" y="1029" width="0.0371%" height="15" fill="rgb(249,190,19)" fg:x="35391" fg:w="16"/><text x="82.3923%" y="1039.50"></text></g><g><title>move_core_types::identifier::all_bytes_valid (15 samples, 0.03%)</title><rect x="82.1446%" y="1013" width="0.0348%" height="15" fill="rgb(251,28,20)" fg:x="35392" fg:w="15"/><text x="82.3946%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.02%)</title><rect x="82.1887%" y="1077" width="0.0162%" height="15" fill="rgb(210,223,40)" fg:x="35411" fg:w="7"/><text x="82.4387%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="82.1933%" y="1061" width="0.0116%" height="15" fill="rgb(216,137,22)" fg:x="35413" fg:w="5"/><text x="82.4433%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="82.1933%" y="1045" width="0.0116%" height="15" fill="rgb(247,39,34)" fg:x="35413" fg:w="5"/><text x="82.4433%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.01%)</title><rect x="82.1933%" y="1029" width="0.0116%" height="15" fill="rgb(239,43,50)" fg:x="35413" fg:w="5"/><text x="82.4433%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (18 samples, 0.04%)</title><rect x="82.1864%" y="1093" width="0.0418%" height="15" fill="rgb(241,212,9)" fg:x="35410" fg:w="18"/><text x="82.4364%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (10 samples, 0.02%)</title><rect x="82.2049%" y="1077" width="0.0232%" height="15" fill="rgb(205,8,2)" fg:x="35418" fg:w="10"/><text x="82.4549%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (105 samples, 0.24%)</title><rect x="81.9868%" y="1109" width="0.2437%" height="15" fill="rgb(217,173,54)" fg:x="35324" fg:w="105"/><text x="82.2368%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_struct_defs (5 samples, 0.01%)</title><rect x="82.2514%" y="1093" width="0.0116%" height="15" fill="rgb(208,149,52)" fg:x="35438" fg:w="5"/><text x="82.5014%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (121 samples, 0.28%)</title><rect x="81.9868%" y="1125" width="0.2808%" height="15" fill="rgb(239,99,40)" fg:x="35324" fg:w="121"/><text x="82.2368%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (16 samples, 0.04%)</title><rect x="82.2305%" y="1109" width="0.0371%" height="15" fill="rgb(233,214,26)" fg:x="35429" fg:w="16"/><text x="82.4805%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_table_offset (17 samples, 0.04%)</title><rect x="82.2746%" y="1093" width="0.0395%" height="15" fill="rgb(231,225,37)" fg:x="35448" fg:w="17"/><text x="82.5246%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (17 samples, 0.04%)</title><rect x="82.2746%" y="1077" width="0.0395%" height="15" fill="rgb(252,55,35)" fg:x="35448" fg:w="17"/><text x="82.5246%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (16 samples, 0.04%)</title><rect x="82.2769%" y="1061" width="0.0371%" height="15" fill="rgb(239,43,18)" fg:x="35449" fg:w="16"/><text x="82.5269%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (15 samples, 0.03%)</title><rect x="82.2792%" y="1045" width="0.0348%" height="15" fill="rgb(251,125,49)" fg:x="35450" fg:w="15"/><text x="82.5292%" y="1055.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (12 samples, 0.03%)</title><rect x="82.2862%" y="1029" width="0.0279%" height="15" fill="rgb(212,83,54)" fg:x="35453" fg:w="12"/><text x="82.5362%" y="1039.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (12 samples, 0.03%)</title><rect x="82.2862%" y="1013" width="0.0279%" height="15" fill="rgb(250,75,6)" fg:x="35453" fg:w="12"/><text x="82.5362%" y="1023.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (7 samples, 0.02%)</title><rect x="82.2978%" y="997" width="0.0162%" height="15" fill="rgb(252,36,40)" fg:x="35458" fg:w="7"/><text x="82.5478%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (6 samples, 0.01%)</title><rect x="82.3001%" y="981" width="0.0139%" height="15" fill="rgb(230,91,51)" fg:x="35459" fg:w="6"/><text x="82.5501%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (6 samples, 0.01%)</title><rect x="82.3001%" y="965" width="0.0139%" height="15" fill="rgb(212,92,28)" fg:x="35459" fg:w="6"/><text x="82.5501%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="82.3001%" y="949" width="0.0139%" height="15" fill="rgb(227,13,22)" fg:x="35459" fg:w="6"/><text x="82.5501%" y="959.50"></text></g><g><title>move_binary_format::deserializer::load_table_size (6 samples, 0.01%)</title><rect x="82.3140%" y="1093" width="0.0139%" height="15" fill="rgb(239,204,32)" fg:x="35465" fg:w="6"/><text x="82.5640%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (6 samples, 0.01%)</title><rect x="82.3140%" y="1077" width="0.0139%" height="15" fill="rgb(228,49,41)" fg:x="35465" fg:w="6"/><text x="82.5640%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.3164%" y="1061" width="0.0116%" height="15" fill="rgb(206,95,6)" fg:x="35466" fg:w="5"/><text x="82.5664%" y="1071.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.3164%" y="1045" width="0.0116%" height="15" fill="rgb(251,20,14)" fg:x="35466" fg:w="5"/><text x="82.5664%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (148 samples, 0.34%)</title><rect x="81.9868%" y="1141" width="0.3435%" height="15" fill="rgb(214,99,28)" fg:x="35324" fg:w="148"/><text x="82.2368%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::read_tables (24 samples, 0.06%)</title><rect x="82.2746%" y="1125" width="0.0557%" height="15" fill="rgb(239,122,54)" fg:x="35448" fg:w="24"/><text x="82.5246%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_table (24 samples, 0.06%)</title><rect x="82.2746%" y="1109" width="0.0557%" height="15" fill="rgb(218,217,46)" fg:x="35448" fg:w="24"/><text x="82.5246%" y="1119.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="82.3837%" y="1109" width="0.0139%" height="15" fill="rgb(249,106,28)" fg:x="35495" fg:w="6"/><text x="82.6337%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (9 samples, 0.02%)</title><rect x="82.3813%" y="1125" width="0.0209%" height="15" fill="rgb(250,158,18)" fg:x="35494" fg:w="9"/><text x="82.6313%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.01%)</title><rect x="82.4394%" y="1045" width="0.0116%" height="15" fill="rgb(226,137,29)" fg:x="35519" fg:w="5"/><text x="82.6894%" y="1055.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.01%)</title><rect x="82.4626%" y="981" width="0.0116%" height="15" fill="rgb(210,188,1)" fg:x="35529" fg:w="5"/><text x="82.7126%" y="991.50"></text></g><g><title>_int_realloc (5 samples, 0.01%)</title><rect x="82.4626%" y="965" width="0.0116%" height="15" fill="rgb(227,84,42)" fg:x="35529" fg:w="5"/><text x="82.7126%" y="975.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.01%)</title><rect x="82.4626%" y="997" width="0.0139%" height="15" fill="rgb(222,147,48)" fg:x="35529" fg:w="6"/><text x="82.7126%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.02%)</title><rect x="82.4626%" y="1029" width="0.0209%" height="15" fill="rgb(241,150,43)" fg:x="35529" fg:w="9"/><text x="82.7126%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.02%)</title><rect x="82.4626%" y="1013" width="0.0209%" height="15" fill="rgb(206,139,52)" fg:x="35529" fg:w="9"/><text x="82.7126%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.04%)</title><rect x="82.4533%" y="1045" width="0.0395%" height="15" fill="rgb(230,63,14)" fg:x="35525" fg:w="17"/><text x="82.7033%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.03%)</title><rect x="82.4927%" y="1045" width="0.0348%" height="15" fill="rgb(247,8,20)" fg:x="35542" fg:w="15"/><text x="82.7427%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8 samples, 0.02%)</title><rect x="82.5090%" y="1029" width="0.0186%" height="15" fill="rgb(213,115,4)" fg:x="35549" fg:w="8"/><text x="82.7590%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (46 samples, 0.11%)</title><rect x="82.4324%" y="1109" width="0.1068%" height="15" fill="rgb(241,79,49)" fg:x="35516" fg:w="46"/><text x="82.6824%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.11%)</title><rect x="82.4324%" y="1093" width="0.1068%" height="15" fill="rgb(222,42,35)" fg:x="35516" fg:w="46"/><text x="82.6824%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (46 samples, 0.11%)</title><rect x="82.4324%" y="1077" width="0.1068%" height="15" fill="rgb(247,59,23)" fg:x="35516" fg:w="46"/><text x="82.6824%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (46 samples, 0.11%)</title><rect x="82.4324%" y="1061" width="0.1068%" height="15" fill="rgb(247,93,18)" fg:x="35516" fg:w="46"/><text x="82.6824%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (60 samples, 0.14%)</title><rect x="82.4022%" y="1125" width="0.1393%" height="15" fill="rgb(249,107,47)" fg:x="35503" fg:w="60"/><text x="82.6522%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.01%)</title><rect x="82.5415%" y="1125" width="0.0139%" height="15" fill="rgb(219,27,1)" fg:x="35563" fg:w="6"/><text x="82.7915%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_bytecode_count (10 samples, 0.02%)</title><rect x="82.5624%" y="1125" width="0.0232%" height="15" fill="rgb(217,82,32)" fg:x="35572" fg:w="10"/><text x="82.8124%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (10 samples, 0.02%)</title><rect x="82.5624%" y="1109" width="0.0232%" height="15" fill="rgb(250,129,47)" fg:x="35572" fg:w="10"/><text x="82.8124%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (10 samples, 0.02%)</title><rect x="82.5624%" y="1093" width="0.0232%" height="15" fill="rgb(253,88,35)" fg:x="35572" fg:w="10"/><text x="82.8124%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="82.5647%" y="1077" width="0.0209%" height="15" fill="rgb(245,221,14)" fg:x="35573" fg:w="9"/><text x="82.8147%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (7 samples, 0.02%)</title><rect x="82.5693%" y="1061" width="0.0162%" height="15" fill="rgb(217,119,54)" fg:x="35575" fg:w="7"/><text x="82.8193%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (6 samples, 0.01%)</title><rect x="82.5717%" y="1045" width="0.0139%" height="15" fill="rgb(247,128,31)" fg:x="35576" fg:w="6"/><text x="82.8217%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_bytecode_index (13 samples, 0.03%)</title><rect x="82.5856%" y="1125" width="0.0302%" height="15" fill="rgb(211,99,22)" fg:x="35582" fg:w="13"/><text x="82.8356%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.03%)</title><rect x="82.5856%" y="1109" width="0.0302%" height="15" fill="rgb(212,20,17)" fg:x="35582" fg:w="13"/><text x="82.8356%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (8 samples, 0.02%)</title><rect x="82.5972%" y="1093" width="0.0186%" height="15" fill="rgb(209,159,29)" fg:x="35587" fg:w="8"/><text x="82.8472%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (8 samples, 0.02%)</title><rect x="82.5972%" y="1077" width="0.0186%" height="15" fill="rgb(222,177,53)" fg:x="35587" fg:w="8"/><text x="82.8472%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (7 samples, 0.02%)</title><rect x="82.5995%" y="1061" width="0.0162%" height="15" fill="rgb(234,46,43)" fg:x="35588" fg:w="7"/><text x="82.8495%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (6 samples, 0.01%)</title><rect x="82.6018%" y="1045" width="0.0139%" height="15" fill="rgb(208,108,14)" fg:x="35589" fg:w="6"/><text x="82.8518%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool_index (11 samples, 0.03%)</title><rect x="82.6158%" y="1125" width="0.0255%" height="15" fill="rgb(226,78,53)" fg:x="35595" fg:w="11"/><text x="82.8658%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (11 samples, 0.03%)</title><rect x="82.6158%" y="1109" width="0.0255%" height="15" fill="rgb(230,20,41)" fg:x="35595" fg:w="11"/><text x="82.8658%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="82.6204%" y="1093" width="0.0209%" height="15" fill="rgb(213,195,35)" fg:x="35597" fg:w="9"/><text x="82.8704%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (9 samples, 0.02%)</title><rect x="82.6204%" y="1077" width="0.0209%" height="15" fill="rgb(242,62,36)" fg:x="35597" fg:w="9"/><text x="82.8704%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (6 samples, 0.01%)</title><rect x="82.6274%" y="1061" width="0.0139%" height="15" fill="rgb(222,210,37)" fg:x="35600" fg:w="6"/><text x="82.8774%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (5 samples, 0.01%)</title><rect x="82.6297%" y="1045" width="0.0116%" height="15" fill="rgb(232,107,19)" fg:x="35601" fg:w="5"/><text x="82.8797%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_function_handle_index (14 samples, 0.03%)</title><rect x="82.6529%" y="1125" width="0.0325%" height="15" fill="rgb(235,85,17)" fg:x="35611" fg:w="14"/><text x="82.9029%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (12 samples, 0.03%)</title><rect x="82.6575%" y="1109" width="0.0279%" height="15" fill="rgb(219,195,31)" fg:x="35613" fg:w="12"/><text x="82.9075%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (10 samples, 0.02%)</title><rect x="82.6622%" y="1093" width="0.0232%" height="15" fill="rgb(231,183,30)" fg:x="35615" fg:w="10"/><text x="82.9122%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (8 samples, 0.02%)</title><rect x="82.6668%" y="1077" width="0.0186%" height="15" fill="rgb(212,0,11)" fg:x="35617" fg:w="8"/><text x="82.9168%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (7 samples, 0.02%)</title><rect x="82.6691%" y="1061" width="0.0162%" height="15" fill="rgb(249,53,54)" fg:x="35618" fg:w="7"/><text x="82.9191%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (7 samples, 0.02%)</title><rect x="82.6691%" y="1045" width="0.0162%" height="15" fill="rgb(211,118,13)" fg:x="35618" fg:w="7"/><text x="82.9191%" y="1055.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (8 samples, 0.02%)</title><rect x="82.7666%" y="1029" width="0.0186%" height="15" fill="rgb(237,42,9)" fg:x="35660" fg:w="8"/><text x="83.0166%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="82.7736%" y="1013" width="0.0116%" height="15" fill="rgb(227,68,32)" fg:x="35663" fg:w="5"/><text x="83.0236%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="82.7736%" y="997" width="0.0116%" height="15" fill="rgb(238,10,7)" fg:x="35663" fg:w="5"/><text x="83.0236%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="82.8084%" y="949" width="0.0139%" height="15" fill="rgb(224,42,12)" fg:x="35678" fg:w="6"/><text x="83.0584%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="82.8038%" y="965" width="0.0209%" height="15" fill="rgb(252,190,5)" fg:x="35676" fg:w="9"/><text x="83.0538%" y="975.50"></text></g><g><title>move_binary_format::deserializer::load_local_index (59 samples, 0.14%)</title><rect x="82.6947%" y="1125" width="0.1369%" height="15" fill="rgb(220,214,39)" fg:x="35629" fg:w="59"/><text x="82.9447%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (57 samples, 0.13%)</title><rect x="82.6993%" y="1109" width="0.1323%" height="15" fill="rgb(247,98,4)" fg:x="35631" fg:w="57"/><text x="82.9493%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (48 samples, 0.11%)</title><rect x="82.7202%" y="1093" width="0.1114%" height="15" fill="rgb(211,60,12)" fg:x="35640" fg:w="48"/><text x="82.9702%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (47 samples, 0.11%)</title><rect x="82.7225%" y="1077" width="0.1091%" height="15" fill="rgb(224,42,10)" fg:x="35641" fg:w="47"/><text x="82.9725%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (40 samples, 0.09%)</title><rect x="82.7388%" y="1061" width="0.0928%" height="15" fill="rgb(217,167,4)" fg:x="35648" fg:w="40"/><text x="82.9888%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (31 samples, 0.07%)</title><rect x="82.7597%" y="1045" width="0.0720%" height="15" fill="rgb(253,18,17)" fg:x="35657" fg:w="31"/><text x="83.0097%" y="1055.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (20 samples, 0.05%)</title><rect x="82.7852%" y="1029" width="0.0464%" height="15" fill="rgb(249,186,44)" fg:x="35668" fg:w="20"/><text x="83.0352%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (16 samples, 0.04%)</title><rect x="82.7945%" y="1013" width="0.0371%" height="15" fill="rgb(254,124,54)" fg:x="35672" fg:w="16"/><text x="83.0445%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (15 samples, 0.03%)</title><rect x="82.7968%" y="997" width="0.0348%" height="15" fill="rgb(220,124,39)" fg:x="35673" fg:w="15"/><text x="83.0468%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.03%)</title><rect x="82.8014%" y="981" width="0.0302%" height="15" fill="rgb(225,96,46)" fg:x="35675" fg:w="13"/><text x="83.0514%" y="991.50"></text></g><g><title>move_binary_format::deserializer::load_struct_def_index (7 samples, 0.02%)</title><rect x="82.8316%" y="1125" width="0.0162%" height="15" fill="rgb(221,106,12)" fg:x="35688" fg:w="7"/><text x="83.0816%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (6 samples, 0.01%)</title><rect x="82.8339%" y="1109" width="0.0139%" height="15" fill="rgb(227,133,23)" fg:x="35689" fg:w="6"/><text x="83.0839%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.8363%" y="1093" width="0.0116%" height="15" fill="rgb(216,44,52)" fg:x="35690" fg:w="5"/><text x="83.0863%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.8363%" y="1077" width="0.0116%" height="15" fill="rgb(239,149,7)" fg:x="35690" fg:w="5"/><text x="83.0863%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (5 samples, 0.01%)</title><rect x="82.8363%" y="1061" width="0.0116%" height="15" fill="rgb(211,157,31)" fg:x="35690" fg:w="5"/><text x="83.0863%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (5 samples, 0.01%)</title><rect x="82.8363%" y="1045" width="0.0116%" height="15" fill="rgb(206,215,22)" fg:x="35690" fg:w="5"/><text x="83.0863%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::load_struct_def_inst_index (5 samples, 0.01%)</title><rect x="82.8479%" y="1125" width="0.0116%" height="15" fill="rgb(208,113,15)" fg:x="35695" fg:w="5"/><text x="83.0979%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (5 samples, 0.01%)</title><rect x="82.8479%" y="1109" width="0.0116%" height="15" fill="rgb(207,189,15)" fg:x="35695" fg:w="5"/><text x="83.0979%" y="1119.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.8479%" y="1093" width="0.0116%" height="15" fill="rgb(231,115,4)" fg:x="35695" fg:w="5"/><text x="83.0979%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (5 samples, 0.01%)</title><rect x="82.8479%" y="1077" width="0.0116%" height="15" fill="rgb(253,117,2)" fg:x="35695" fg:w="5"/><text x="83.0979%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="82.8989%" y="1093" width="0.0116%" height="15" fill="rgb(248,48,24)" fg:x="35717" fg:w="5"/><text x="83.1489%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.02%)</title><rect x="82.9453%" y="1077" width="0.0162%" height="15" fill="rgb(241,28,46)" fg:x="35737" fg:w="7"/><text x="83.1953%" y="1087.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (7 samples, 0.02%)</title><rect x="82.9662%" y="1061" width="0.0162%" height="15" fill="rgb(216,165,52)" fg:x="35746" fg:w="7"/><text x="83.2162%" y="1071.50"></text></g><g><title>core::cmp::min (8 samples, 0.02%)</title><rect x="82.9825%" y="1061" width="0.0186%" height="15" fill="rgb(220,222,34)" fg:x="35753" fg:w="8"/><text x="83.2325%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="82.9894%" y="1045" width="0.0116%" height="15" fill="rgb(247,222,49)" fg:x="35756" fg:w="5"/><text x="83.2394%" y="1055.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="82.9894%" y="1029" width="0.0116%" height="15" fill="rgb(240,10,31)" fg:x="35756" fg:w="5"/><text x="83.2394%" y="1039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="83.0219%" y="1013" width="0.0139%" height="15" fill="rgb(221,199,35)" fg:x="35770" fg:w="6"/><text x="83.2719%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="83.0173%" y="1029" width="0.0209%" height="15" fill="rgb(230,223,11)" fg:x="35768" fg:w="9"/><text x="83.2673%" y="1039.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (34 samples, 0.08%)</title><rect x="82.9616%" y="1077" width="0.0789%" height="15" fill="rgb(218,82,45)" fg:x="35744" fg:w="34"/><text x="83.2116%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 0.04%)</title><rect x="83.0034%" y="1061" width="0.0371%" height="15" fill="rgb(233,213,33)" fg:x="35762" fg:w="16"/><text x="83.2534%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.03%)</title><rect x="83.0057%" y="1045" width="0.0348%" height="15" fill="rgb(210,143,52)" fg:x="35763" fg:w="15"/><text x="83.2557%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="83.0846%" y="997" width="0.0186%" height="15" fill="rgb(206,95,4)" fg:x="35797" fg:w="8"/><text x="83.3346%" y="1007.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.03%)</title><rect x="83.0776%" y="1013" width="0.0325%" height="15" fill="rgb(246,164,46)" fg:x="35794" fg:w="14"/><text x="83.3276%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::load_code (342 samples, 0.79%)</title><rect x="82.3349%" y="1141" width="0.7938%" height="15" fill="rgb(213,210,47)" fg:x="35474" fg:w="342"/><text x="82.5849%" y="1151.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (113 samples, 0.26%)</title><rect x="82.8664%" y="1125" width="0.2623%" height="15" fill="rgb(210,12,38)" fg:x="35703" fg:w="113"/><text x="83.1164%" y="1135.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (111 samples, 0.26%)</title><rect x="82.8711%" y="1109" width="0.2576%" height="15" fill="rgb(252,192,54)" fg:x="35705" fg:w="111"/><text x="83.1211%" y="1119.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (94 samples, 0.22%)</title><rect x="82.9105%" y="1093" width="0.2182%" height="15" fill="rgb(242,92,6)" fg:x="35722" fg:w="94"/><text x="83.1605%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (38 samples, 0.09%)</title><rect x="83.0405%" y="1077" width="0.0882%" height="15" fill="rgb(253,154,15)" fg:x="35778" fg:w="38"/><text x="83.2905%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (28 samples, 0.06%)</title><rect x="83.0637%" y="1061" width="0.0650%" height="15" fill="rgb(209,20,43)" fg:x="35788" fg:w="28"/><text x="83.3137%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (25 samples, 0.06%)</title><rect x="83.0707%" y="1045" width="0.0580%" height="15" fill="rgb(232,28,49)" fg:x="35791" fg:w="25"/><text x="83.3207%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (24 samples, 0.06%)</title><rect x="83.0730%" y="1029" width="0.0557%" height="15" fill="rgb(248,131,53)" fg:x="35792" fg:w="24"/><text x="83.3230%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="83.1101%" y="1013" width="0.0186%" height="15" fill="rgb(214,16,30)" fg:x="35808" fg:w="8"/><text x="83.3601%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="83.1148%" y="997" width="0.0139%" height="15" fill="rgb(245,16,0)" fg:x="35810" fg:w="6"/><text x="83.3648%" y="1007.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (7 samples, 0.02%)</title><rect x="83.1519%" y="1141" width="0.0162%" height="15" fill="rgb(245,17,35)" fg:x="35826" fg:w="7"/><text x="83.4019%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (7 samples, 0.02%)</title><rect x="83.1519%" y="1125" width="0.0162%" height="15" fill="rgb(249,27,53)" fg:x="35826" fg:w="7"/><text x="83.4019%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (8 samples, 0.02%)</title><rect x="83.1751%" y="1141" width="0.0186%" height="15" fill="rgb(214,73,24)" fg:x="35836" fg:w="8"/><text x="83.4251%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (8 samples, 0.02%)</title><rect x="83.1751%" y="1125" width="0.0186%" height="15" fill="rgb(223,84,37)" fg:x="35836" fg:w="8"/><text x="83.4251%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (8 samples, 0.02%)</title><rect x="83.1751%" y="1109" width="0.0186%" height="15" fill="rgb(210,109,28)" fg:x="35836" fg:w="8"/><text x="83.4251%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="83.2076%" y="981" width="0.0116%" height="15" fill="rgb(208,186,6)" fg:x="35850" fg:w="5"/><text x="83.4576%" y="991.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (7 samples, 0.02%)</title><rect x="83.2053%" y="1029" width="0.0162%" height="15" fill="rgb(235,201,30)" fg:x="35849" fg:w="7"/><text x="83.4553%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="83.2076%" y="1013" width="0.0139%" height="15" fill="rgb(216,198,48)" fg:x="35850" fg:w="6"/><text x="83.4576%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="83.2076%" y="997" width="0.0139%" height="15" fill="rgb(254,186,25)" fg:x="35850" fg:w="6"/><text x="83.4576%" y="1007.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (24 samples, 0.06%)</title><rect x="83.1937%" y="1141" width="0.0557%" height="15" fill="rgb(227,87,5)" fg:x="35844" fg:w="24"/><text x="83.4437%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (24 samples, 0.06%)</title><rect x="83.1937%" y="1125" width="0.0557%" height="15" fill="rgb(236,205,25)" fg:x="35844" fg:w="24"/><text x="83.4437%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (24 samples, 0.06%)</title><rect x="83.1937%" y="1109" width="0.0557%" height="15" fill="rgb(229,99,32)" fg:x="35844" fg:w="24"/><text x="83.4437%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (24 samples, 0.06%)</title><rect x="83.1937%" y="1093" width="0.0557%" height="15" fill="rgb(231,177,31)" fg:x="35844" fg:w="24"/><text x="83.4437%" y="1103.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (19 samples, 0.04%)</title><rect x="83.2053%" y="1077" width="0.0441%" height="15" fill="rgb(246,15,2)" fg:x="35849" fg:w="19"/><text x="83.4553%" y="1087.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (19 samples, 0.04%)</title><rect x="83.2053%" y="1061" width="0.0441%" height="15" fill="rgb(207,39,15)" fg:x="35849" fg:w="19"/><text x="83.4553%" y="1071.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (19 samples, 0.04%)</title><rect x="83.2053%" y="1045" width="0.0441%" height="15" fill="rgb(207,44,9)" fg:x="35849" fg:w="19"/><text x="83.4553%" y="1055.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (12 samples, 0.03%)</title><rect x="83.2215%" y="1029" width="0.0279%" height="15" fill="rgb(225,224,33)" fg:x="35856" fg:w="12"/><text x="83.4715%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (11 samples, 0.03%)</title><rect x="83.2239%" y="1013" width="0.0255%" height="15" fill="rgb(252,151,3)" fg:x="35857" fg:w="11"/><text x="83.4739%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (11 samples, 0.03%)</title><rect x="83.2239%" y="997" width="0.0255%" height="15" fill="rgb(211,140,13)" fg:x="35857" fg:w="11"/><text x="83.4739%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10 samples, 0.02%)</title><rect x="83.2262%" y="981" width="0.0232%" height="15" fill="rgb(239,225,17)" fg:x="35858" fg:w="10"/><text x="83.4762%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="83.2378%" y="965" width="0.0116%" height="15" fill="rgb(223,170,52)" fg:x="35863" fg:w="5"/><text x="83.4878%" y="975.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (13 samples, 0.03%)</title><rect x="83.3260%" y="1141" width="0.0302%" height="15" fill="rgb(212,64,21)" fg:x="35901" fg:w="13"/><text x="83.5760%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="83.4095%" y="1109" width="0.0302%" height="15" fill="rgb(236,126,48)" fg:x="35937" fg:w="13"/><text x="83.6595%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (14 samples, 0.03%)</title><rect x="83.4095%" y="1125" width="0.0325%" height="15" fill="rgb(209,135,11)" fg:x="35937" fg:w="14"/><text x="83.6595%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="83.4420%" y="1125" width="0.0279%" height="15" fill="rgb(228,126,40)" fg:x="35951" fg:w="12"/><text x="83.6920%" y="1135.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="83.4768%" y="1125" width="0.0139%" height="15" fill="rgb(205,196,36)" fg:x="35966" fg:w="6"/><text x="83.7268%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="83.4768%" y="1109" width="0.0139%" height="15" fill="rgb(243,160,33)" fg:x="35966" fg:w="6"/><text x="83.7268%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="83.4792%" y="1093" width="0.0116%" height="15" fill="rgb(210,84,20)" fg:x="35967" fg:w="5"/><text x="83.7292%" y="1103.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (8 samples, 0.02%)</title><rect x="83.5047%" y="1125" width="0.0186%" height="15" fill="rgb(228,213,30)" fg:x="35978" fg:w="8"/><text x="83.7547%" y="1135.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (8 samples, 0.02%)</title><rect x="83.5047%" y="1109" width="0.0186%" height="15" fill="rgb(252,33,45)" fg:x="35978" fg:w="8"/><text x="83.7547%" y="1119.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (5 samples, 0.01%)</title><rect x="83.5117%" y="1093" width="0.0116%" height="15" fill="rgb(254,227,20)" fg:x="35981" fg:w="5"/><text x="83.7617%" y="1103.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (6 samples, 0.01%)</title><rect x="83.5442%" y="1125" width="0.0139%" height="15" fill="rgb(228,192,2)" fg:x="35995" fg:w="6"/><text x="83.7942%" y="1135.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (5 samples, 0.01%)</title><rect x="83.5604%" y="1125" width="0.0116%" height="15" fill="rgb(233,32,8)" fg:x="36002" fg:w="5"/><text x="83.8104%" y="1135.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (8 samples, 0.02%)</title><rect x="83.6022%" y="1029" width="0.0186%" height="15" fill="rgb(220,146,47)" fg:x="36020" fg:w="8"/><text x="83.8522%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="83.6068%" y="1013" width="0.0139%" height="15" fill="rgb(246,194,1)" fg:x="36022" fg:w="6"/><text x="83.8568%" y="1023.50"></text></g><g><title>move_vm_runtime::tracing::trace (24 samples, 0.06%)</title><rect x="83.5813%" y="1125" width="0.0557%" height="15" fill="rgb(218,203,9)" fg:x="36011" fg:w="24"/><text x="83.8313%" y="1135.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.05%)</title><rect x="83.5883%" y="1109" width="0.0487%" height="15" fill="rgb(237,97,14)" fg:x="36014" fg:w="21"/><text x="83.8383%" y="1119.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (20 samples, 0.05%)</title><rect x="83.5906%" y="1093" width="0.0464%" height="15" fill="rgb(239,76,15)" fg:x="36015" fg:w="20"/><text x="83.8406%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (20 samples, 0.05%)</title><rect x="83.5906%" y="1077" width="0.0464%" height="15" fill="rgb(222,53,45)" fg:x="36015" fg:w="20"/><text x="83.8406%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (20 samples, 0.05%)</title><rect x="83.5906%" y="1061" width="0.0464%" height="15" fill="rgb(237,88,5)" fg:x="36015" fg:w="20"/><text x="83.8406%" y="1071.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (15 samples, 0.03%)</title><rect x="83.6022%" y="1045" width="0.0348%" height="15" fill="rgb(218,223,35)" fg:x="36020" fg:w="15"/><text x="83.8522%" y="1055.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="83.6207%" y="1029" width="0.0162%" height="15" fill="rgb(243,229,38)" fg:x="36028" fg:w="7"/><text x="83.8707%" y="1039.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="83.6207%" y="1013" width="0.0162%" height="15" fill="rgb(240,75,41)" fg:x="36028" fg:w="7"/><text x="83.8707%" y="1023.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (7 samples, 0.02%)</title><rect x="83.6207%" y="997" width="0.0162%" height="15" fill="rgb(209,110,37)" fg:x="36028" fg:w="7"/><text x="83.8707%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.02%)</title><rect x="83.6207%" y="981" width="0.0162%" height="15" fill="rgb(221,130,46)" fg:x="36028" fg:w="7"/><text x="83.8707%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="83.6416%" y="1077" width="0.0209%" height="15" fill="rgb(237,160,20)" fg:x="36037" fg:w="9"/><text x="83.8916%" y="1087.50"></text></g><g><title>move_core_types::gas_schedule::CostTable::instruction_cost (12 samples, 0.03%)</title><rect x="83.6393%" y="1109" width="0.0279%" height="15" fill="rgb(234,126,24)" fg:x="36036" fg:w="12"/><text x="83.8893%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.03%)</title><rect x="83.6416%" y="1093" width="0.0255%" height="15" fill="rgb(207,177,9)" fg:x="36037" fg:w="11"/><text x="83.8916%" y="1103.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr (15 samples, 0.03%)</title><rect x="83.6370%" y="1125" width="0.0348%" height="15" fill="rgb(231,191,33)" fg:x="36035" fg:w="15"/><text x="83.8870%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="83.6857%" y="1077" width="0.0116%" height="15" fill="rgb(207,42,1)" fg:x="36056" fg:w="5"/><text x="83.9357%" y="1087.50"></text></g><g><title>move_core_types::gas_schedule::CostTable::instruction_cost (10 samples, 0.02%)</title><rect x="83.6834%" y="1109" width="0.0232%" height="15" fill="rgb(218,34,50)" fg:x="36055" fg:w="10"/><text x="83.9334%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.02%)</title><rect x="83.6834%" y="1093" width="0.0232%" height="15" fill="rgb(254,126,39)" fg:x="36055" fg:w="10"/><text x="83.9334%" y="1103.50"></text></g><g><title>move_core_types::gas_schedule::GasAlgebra::mul (5 samples, 0.01%)</title><rect x="83.7159%" y="1109" width="0.0116%" height="15" fill="rgb(251,17,26)" fg:x="36069" fg:w="5"/><text x="83.9659%" y="1119.50"></text></g><g><title>move_core_types::gas_schedule::GasAlgebra::map2 (5 samples, 0.01%)</title><rect x="83.7159%" y="1093" width="0.0116%" height="15" fill="rgb(252,215,34)" fg:x="36069" fg:w="5"/><text x="83.9659%" y="1103.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr_with_size (30 samples, 0.07%)</title><rect x="83.6718%" y="1125" width="0.0696%" height="15" fill="rgb(217,120,44)" fg:x="36050" fg:w="30"/><text x="83.9218%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (5 samples, 0.01%)</title><rect x="83.7414%" y="1125" width="0.0116%" height="15" fill="rgb(211,31,11)" fg:x="36080" fg:w="5"/><text x="83.9914%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (17 samples, 0.04%)</title><rect x="83.7530%" y="1125" width="0.0395%" height="15" fill="rgb(222,69,51)" fg:x="36085" fg:w="17"/><text x="84.0030%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (13 samples, 0.03%)</title><rect x="83.7925%" y="1125" width="0.0302%" height="15" fill="rgb(215,229,42)" fg:x="36102" fg:w="13"/><text x="84.0425%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (9 samples, 0.02%)</title><rect x="83.8018%" y="1109" width="0.0209%" height="15" fill="rgb(212,102,15)" fg:x="36106" fg:w="9"/><text x="84.0518%" y="1119.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (5 samples, 0.01%)</title><rect x="83.8227%" y="1125" width="0.0116%" height="15" fill="rgb(205,179,41)" fg:x="36115" fg:w="5"/><text x="84.0727%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (5 samples, 0.01%)</title><rect x="83.8227%" y="1109" width="0.0116%" height="15" fill="rgb(219,148,46)" fg:x="36115" fg:w="5"/><text x="84.0727%" y="1119.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (5 samples, 0.01%)</title><rect x="83.8459%" y="1125" width="0.0116%" height="15" fill="rgb(243,40,19)" fg:x="36125" fg:w="5"/><text x="84.0959%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (5 samples, 0.01%)</title><rect x="83.8459%" y="1109" width="0.0116%" height="15" fill="rgb(208,206,34)" fg:x="36125" fg:w="5"/><text x="84.0959%" y="1119.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.02%)</title><rect x="83.8668%" y="1077" width="0.0186%" height="15" fill="rgb(244,184,38)" fg:x="36134" fg:w="8"/><text x="84.1168%" y="1087.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (13 samples, 0.03%)</title><rect x="83.8575%" y="1125" width="0.0302%" height="15" fill="rgb(244,151,47)" fg:x="36130" fg:w="13"/><text x="84.1075%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (11 samples, 0.03%)</title><rect x="83.8621%" y="1109" width="0.0255%" height="15" fill="rgb(236,134,42)" fg:x="36132" fg:w="11"/><text x="84.1121%" y="1119.50"></text></g><g><title>bcs::de::from_bytes_seed (11 samples, 0.03%)</title><rect x="83.8621%" y="1093" width="0.0255%" height="15" fill="rgb(233,93,22)" fg:x="36132" fg:w="11"/><text x="84.1121%" y="1103.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (233 samples, 0.54%)</title><rect x="83.3562%" y="1141" width="0.5408%" height="15" fill="rgb(211,202,10)" fg:x="35914" fg:w="233"/><text x="83.6062%" y="1151.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (5 samples, 0.01%)</title><rect x="83.9062%" y="1141" width="0.0116%" height="15" fill="rgb(240,63,8)" fg:x="36151" fg:w="5"/><text x="84.1562%" y="1151.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (5 samples, 0.01%)</title><rect x="83.9062%" y="1125" width="0.0116%" height="15" fill="rgb(214,9,4)" fg:x="36151" fg:w="5"/><text x="84.1562%" y="1135.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (5 samples, 0.01%)</title><rect x="83.9062%" y="1109" width="0.0116%" height="15" fill="rgb(243,66,45)" fg:x="36151" fg:w="5"/><text x="84.1562%" y="1119.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (7 samples, 0.02%)</title><rect x="83.9178%" y="1141" width="0.0162%" height="15" fill="rgb(220,50,42)" fg:x="36156" fg:w="7"/><text x="84.1678%" y="1151.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (6 samples, 0.01%)</title><rect x="83.9202%" y="1125" width="0.0139%" height="15" fill="rgb(220,134,27)" fg:x="36157" fg:w="6"/><text x="84.1702%" y="1135.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (12 samples, 0.03%)</title><rect x="83.9341%" y="1141" width="0.0279%" height="15" fill="rgb(246,151,50)" fg:x="36163" fg:w="12"/><text x="84.1841%" y="1151.50"></text></g><g><title>move_stdlib::natives::vector::native_push_back (7 samples, 0.02%)</title><rect x="83.9457%" y="1125" width="0.0162%" height="15" fill="rgb(238,216,27)" fg:x="36168" fg:w="7"/><text x="84.1957%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::VectorRef::push_back (7 samples, 0.02%)</title><rect x="83.9457%" y="1109" width="0.0162%" height="15" fill="rgb(250,92,11)" fg:x="36168" fg:w="7"/><text x="84.1957%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (9 samples, 0.02%)</title><rect x="83.9968%" y="1125" width="0.0209%" height="15" fill="rgb(248,183,6)" fg:x="36190" fg:w="9"/><text x="84.2468%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="83.9991%" y="1109" width="0.0186%" height="15" fill="rgb(211,204,50)" fg:x="36191" fg:w="8"/><text x="84.2491%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (18 samples, 0.04%)</title><rect x="84.0292%" y="1125" width="0.0418%" height="15" fill="rgb(252,55,47)" fg:x="36204" fg:w="18"/><text x="84.2792%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (12 samples, 0.03%)</title><rect x="84.0432%" y="1109" width="0.0279%" height="15" fill="rgb(240,198,32)" fg:x="36210" fg:w="12"/><text x="84.2932%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="84.0432%" y="1093" width="0.0279%" height="15" fill="rgb(224,203,19)" fg:x="36210" fg:w="12"/><text x="84.2932%" y="1103.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="84.0432%" y="1077" width="0.0279%" height="15" fill="rgb(205,27,16)" fg:x="36210" fg:w="12"/><text x="84.2932%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="84.0594%" y="1061" width="0.0116%" height="15" fill="rgb(224,226,17)" fg:x="36217" fg:w="5"/><text x="84.3094%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="84.0594%" y="1045" width="0.0116%" height="15" fill="rgb(205,216,54)" fg:x="36217" fg:w="5"/><text x="84.3094%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (5 samples, 0.01%)</title><rect x="84.0594%" y="1029" width="0.0116%" height="15" fill="rgb(248,168,46)" fg:x="36217" fg:w="5"/><text x="84.3094%" y="1039.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.01%)</title><rect x="84.0803%" y="1125" width="0.0116%" height="15" fill="rgb(226,111,45)" fg:x="36226" fg:w="5"/><text x="84.3303%" y="1135.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.01%)</title><rect x="84.1383%" y="1077" width="0.0139%" height="15" fill="rgb(231,15,9)" fg:x="36251" fg:w="6"/><text x="84.3883%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (5 samples, 0.01%)</title><rect x="84.1407%" y="1061" width="0.0116%" height="15" fill="rgb(243,168,3)" fg:x="36252" fg:w="5"/><text x="84.3907%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (12 samples, 0.03%)</title><rect x="84.1546%" y="1061" width="0.0279%" height="15" fill="rgb(221,220,54)" fg:x="36258" fg:w="12"/><text x="84.4046%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get::_{{closure}} (11 samples, 0.03%)</title><rect x="84.1569%" y="1045" width="0.0255%" height="15" fill="rgb(232,174,38)" fg:x="36259" fg:w="11"/><text x="84.4069%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6 samples, 0.01%)</title><rect x="84.1685%" y="1029" width="0.0139%" height="15" fill="rgb(205,14,38)" fg:x="36264" fg:w="6"/><text x="84.4185%" y="1039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.01%)</title><rect x="84.1708%" y="1013" width="0.0116%" height="15" fill="rgb(234,89,19)" fg:x="36265" fg:w="5"/><text x="84.4208%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="84.1964%" y="869" width="0.0116%" height="15" fill="rgb(216,68,51)" fg:x="36276" fg:w="5"/><text x="84.4464%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (9 samples, 0.02%)</title><rect x="84.1917%" y="933" width="0.0209%" height="15" fill="rgb(213,49,2)" fg:x="36274" fg:w="9"/><text x="84.4417%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.1940%" y="917" width="0.0186%" height="15" fill="rgb(242,146,30)" fg:x="36275" fg:w="8"/><text x="84.4440%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.1940%" y="901" width="0.0186%" height="15" fill="rgb(224,188,11)" fg:x="36275" fg:w="8"/><text x="84.4440%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.1940%" y="885" width="0.0186%" height="15" fill="rgb(213,159,11)" fg:x="36275" fg:w="8"/><text x="84.4440%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="84.2172%" y="853" width="0.0162%" height="15" fill="rgb(229,13,31)" fg:x="36285" fg:w="7"/><text x="84.4672%" y="863.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (24 samples, 0.06%)</title><rect x="84.1871%" y="981" width="0.0557%" height="15" fill="rgb(209,103,11)" fg:x="36272" fg:w="24"/><text x="84.4371%" y="991.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (24 samples, 0.06%)</title><rect x="84.1871%" y="965" width="0.0557%" height="15" fill="rgb(206,3,4)" fg:x="36272" fg:w="24"/><text x="84.4371%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (22 samples, 0.05%)</title><rect x="84.1917%" y="949" width="0.0511%" height="15" fill="rgb(252,10,49)" fg:x="36274" fg:w="22"/><text x="84.4417%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.03%)</title><rect x="84.2126%" y="933" width="0.0302%" height="15" fill="rgb(217,160,32)" fg:x="36283" fg:w="13"/><text x="84.4626%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.03%)</title><rect x="84.2126%" y="917" width="0.0302%" height="15" fill="rgb(249,196,0)" fg:x="36283" fg:w="13"/><text x="84.4626%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="84.2126%" y="901" width="0.0302%" height="15" fill="rgb(213,17,48)" fg:x="36283" fg:w="13"/><text x="84.4626%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="84.2126%" y="885" width="0.0302%" height="15" fill="rgb(206,42,46)" fg:x="36283" fg:w="13"/><text x="84.4626%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="84.2126%" y="869" width="0.0302%" height="15" fill="rgb(212,105,24)" fg:x="36283" fg:w="13"/><text x="84.4626%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2428%" y="933" width="0.0186%" height="15" fill="rgb(243,216,30)" fg:x="36296" fg:w="8"/><text x="84.4928%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2428%" y="917" width="0.0186%" height="15" fill="rgb(207,121,3)" fg:x="36296" fg:w="8"/><text x="84.4928%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2428%" y="901" width="0.0186%" height="15" fill="rgb(249,78,0)" fg:x="36296" fg:w="8"/><text x="84.4928%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="84.2474%" y="885" width="0.0139%" height="15" fill="rgb(244,151,32)" fg:x="36298" fg:w="6"/><text x="84.4974%" y="895.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (41 samples, 0.10%)</title><rect x="84.1848%" y="997" width="0.0952%" height="15" fill="rgb(228,63,25)" fg:x="36271" fg:w="41"/><text x="84.4348%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (16 samples, 0.04%)</title><rect x="84.2428%" y="981" width="0.0371%" height="15" fill="rgb(231,158,23)" fg:x="36296" fg:w="16"/><text x="84.4928%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (16 samples, 0.04%)</title><rect x="84.2428%" y="965" width="0.0371%" height="15" fill="rgb(248,107,23)" fg:x="36296" fg:w="16"/><text x="84.4928%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.04%)</title><rect x="84.2428%" y="949" width="0.0371%" height="15" fill="rgb(215,168,21)" fg:x="36296" fg:w="16"/><text x="84.4928%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u8 (8 samples, 0.02%)</title><rect x="84.2613%" y="933" width="0.0186%" height="15" fill="rgb(227,83,22)" fg:x="36304" fg:w="8"/><text x="84.5113%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2613%" y="917" width="0.0186%" height="15" fill="rgb(217,118,43)" fg:x="36304" fg:w="8"/><text x="84.5113%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2613%" y="901" width="0.0186%" height="15" fill="rgb(229,220,41)" fg:x="36304" fg:w="8"/><text x="84.5113%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="84.2613%" y="885" width="0.0186%" height="15" fill="rgb(254,146,46)" fg:x="36304" fg:w="8"/><text x="84.5113%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="84.2799%" y="997" width="0.0325%" height="15" fill="rgb(233,208,31)" fg:x="36312" fg:w="14"/><text x="84.5299%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="84.2799%" y="981" width="0.0325%" height="15" fill="rgb(222,162,7)" fg:x="36312" fg:w="14"/><text x="84.5299%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.03%)</title><rect x="84.2799%" y="965" width="0.0325%" height="15" fill="rgb(230,117,45)" fg:x="36312" fg:w="14"/><text x="84.5299%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.03%)</title><rect x="84.2846%" y="949" width="0.0279%" height="15" fill="rgb(239,163,6)" fg:x="36314" fg:w="12"/><text x="84.5346%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="84.3008%" y="933" width="0.0116%" height="15" fill="rgb(246,130,17)" fg:x="36321" fg:w="5"/><text x="84.5508%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (58 samples, 0.13%)</title><rect x="84.1848%" y="1013" width="0.1346%" height="15" fill="rgb(216,84,5)" fg:x="36271" fg:w="58"/><text x="84.4348%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="84.3240%" y="981" width="0.0209%" height="15" fill="rgb(230,200,21)" fg:x="36331" fg:w="9"/><text x="84.5740%" y="991.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="84.3565%" y="949" width="0.0186%" height="15" fill="rgb(224,2,8)" fg:x="36345" fg:w="8"/><text x="84.6065%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (8 samples, 0.02%)</title><rect x="84.3565%" y="933" width="0.0186%" height="15" fill="rgb(238,178,10)" fg:x="36345" fg:w="8"/><text x="84.6065%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (20 samples, 0.05%)</title><rect x="84.3449%" y="981" width="0.0464%" height="15" fill="rgb(242,153,24)" fg:x="36340" fg:w="20"/><text x="84.5949%" y="991.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (19 samples, 0.04%)</title><rect x="84.3472%" y="965" width="0.0441%" height="15" fill="rgb(242,32,48)" fg:x="36341" fg:w="19"/><text x="84.5972%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="84.3751%" y="949" width="0.0162%" height="15" fill="rgb(227,36,0)" fg:x="36353" fg:w="7"/><text x="84.6251%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="84.3797%" y="933" width="0.0116%" height="15" fill="rgb(251,33,35)" fg:x="36355" fg:w="5"/><text x="84.6297%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.01%)</title><rect x="84.3797%" y="917" width="0.0116%" height="15" fill="rgb(232,168,51)" fg:x="36355" fg:w="5"/><text x="84.6297%" y="927.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (140 samples, 0.32%)</title><rect x="84.1151%" y="1125" width="0.3249%" height="15" fill="rgb(228,56,10)" fg:x="36241" fg:w="140"/><text x="84.3651%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (139 samples, 0.32%)</title><rect x="84.1174%" y="1109" width="0.3226%" height="15" fill="rgb(231,10,26)" fg:x="36242" fg:w="139"/><text x="84.3674%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (138 samples, 0.32%)</title><rect x="84.1198%" y="1093" width="0.3203%" height="15" fill="rgb(226,202,12)" fg:x="36243" fg:w="138"/><text x="84.3698%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (124 samples, 0.29%)</title><rect x="84.1523%" y="1077" width="0.2878%" height="15" fill="rgb(251,49,21)" fg:x="36257" fg:w="124"/><text x="84.4023%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (111 samples, 0.26%)</title><rect x="84.1824%" y="1061" width="0.2576%" height="15" fill="rgb(206,228,28)" fg:x="36270" fg:w="111"/><text x="84.4324%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (111 samples, 0.26%)</title><rect x="84.1824%" y="1045" width="0.2576%" height="15" fill="rgb(205,198,31)" fg:x="36270" fg:w="111"/><text x="84.4324%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (111 samples, 0.26%)</title><rect x="84.1824%" y="1029" width="0.2576%" height="15" fill="rgb(213,69,1)" fg:x="36270" fg:w="111"/><text x="84.4324%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (52 samples, 0.12%)</title><rect x="84.3194%" y="1013" width="0.1207%" height="15" fill="rgb(209,177,9)" fg:x="36329" fg:w="52"/><text x="84.5694%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.12%)</title><rect x="84.3240%" y="997" width="0.1160%" height="15" fill="rgb(227,119,30)" fg:x="36331" fg:w="50"/><text x="84.5740%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.04%)</title><rect x="84.4006%" y="981" width="0.0395%" height="15" fill="rgb(234,106,41)" fg:x="36364" fg:w="17"/><text x="84.6506%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.04%)</title><rect x="84.4006%" y="965" width="0.0395%" height="15" fill="rgb(244,103,47)" fg:x="36364" fg:w="17"/><text x="84.6506%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.04%)</title><rect x="84.4029%" y="949" width="0.0371%" height="15" fill="rgb(212,211,25)" fg:x="36365" fg:w="16"/><text x="84.6529%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="84.4238%" y="933" width="0.0162%" height="15" fill="rgb(208,63,53)" fg:x="36374" fg:w="7"/><text x="84.6738%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="84.4842%" y="1013" width="0.0116%" height="15" fill="rgb(213,176,21)" fg:x="36400" fg:w="5"/><text x="84.7342%" y="1023.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (15 samples, 0.03%)</title><rect x="84.4633%" y="1093" width="0.0348%" height="15" fill="rgb(243,124,12)" fg:x="36391" fg:w="15"/><text x="84.7133%" y="1103.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (14 samples, 0.03%)</title><rect x="84.4656%" y="1077" width="0.0325%" height="15" fill="rgb(239,2,35)" fg:x="36392" fg:w="14"/><text x="84.7156%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.03%)</title><rect x="84.4656%" y="1061" width="0.0325%" height="15" fill="rgb(253,169,22)" fg:x="36392" fg:w="14"/><text x="84.7156%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.03%)</title><rect x="84.4656%" y="1045" width="0.0325%" height="15" fill="rgb(254,51,12)" fg:x="36392" fg:w="14"/><text x="84.7156%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.03%)</title><rect x="84.4679%" y="1029" width="0.0302%" height="15" fill="rgb(244,17,47)" fg:x="36393" fg:w="13"/><text x="84.7179%" y="1039.50"></text></g><g><title>move_stdlib::natives::vector::native_length (16 samples, 0.04%)</title><rect x="84.5399%" y="1093" width="0.0371%" height="15" fill="rgb(251,45,46)" fg:x="36424" fg:w="16"/><text x="84.7899%" y="1103.50"></text></g><g><title>move_stdlib::natives::vector::native_pop (7 samples, 0.02%)</title><rect x="84.5770%" y="1093" width="0.0162%" height="15" fill="rgb(223,87,43)" fg:x="36440" fg:w="7"/><text x="84.8270%" y="1103.50"></text></g><g><title>move_stdlib::natives::vector::native_push_back (9 samples, 0.02%)</title><rect x="84.5932%" y="1093" width="0.0209%" height="15" fill="rgb(230,132,31)" fg:x="36447" fg:w="9"/><text x="84.8432%" y="1103.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (85 samples, 0.20%)</title><rect x="84.4401%" y="1125" width="0.1973%" height="15" fill="rgb(206,99,1)" fg:x="36381" fg:w="85"/><text x="84.6901%" y="1135.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (82 samples, 0.19%)</title><rect x="84.4470%" y="1109" width="0.1903%" height="15" fill="rgb(227,110,25)" fg:x="36384" fg:w="82"/><text x="84.6970%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.01%)</title><rect x="84.6559%" y="1109" width="0.0116%" height="15" fill="rgb(217,182,7)" fg:x="36474" fg:w="5"/><text x="84.9059%" y="1119.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="84.6559%" y="1093" width="0.0116%" height="15" fill="rgb(250,176,4)" fg:x="36474" fg:w="5"/><text x="84.9059%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::_{{closure}} (5 samples, 0.01%)</title><rect x="84.6977%" y="933" width="0.0116%" height="15" fill="rgb(244,98,30)" fg:x="36492" fg:w="5"/><text x="84.9477%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (6 samples, 0.01%)</title><rect x="84.6977%" y="949" width="0.0139%" height="15" fill="rgb(228,150,42)" fg:x="36492" fg:w="6"/><text x="84.9477%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.02%)</title><rect x="84.6954%" y="1013" width="0.0209%" height="15" fill="rgb(231,91,46)" fg:x="36491" fg:w="9"/><text x="84.9454%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.02%)</title><rect x="84.6954%" y="997" width="0.0209%" height="15" fill="rgb(252,161,32)" fg:x="36491" fg:w="9"/><text x="84.9454%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.02%)</title><rect x="84.6954%" y="981" width="0.0209%" height="15" fill="rgb(236,69,41)" fg:x="36491" fg:w="9"/><text x="84.9454%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="84.6954%" y="965" width="0.0209%" height="15" fill="rgb(212,160,3)" fg:x="36491" fg:w="9"/><text x="84.9454%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.04%)</title><rect x="84.6814%" y="1029" width="0.0371%" height="15" fill="rgb(216,5,50)" fg:x="36485" fg:w="16"/><text x="84.9314%" y="1039.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (26 samples, 0.06%)</title><rect x="84.6791%" y="1109" width="0.0603%" height="15" fill="rgb(241,138,25)" fg:x="36484" fg:w="26"/><text x="84.9291%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.06%)</title><rect x="84.6814%" y="1093" width="0.0580%" height="15" fill="rgb(239,42,18)" fg:x="36485" fg:w="25"/><text x="84.9314%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.06%)</title><rect x="84.6814%" y="1077" width="0.0580%" height="15" fill="rgb(239,40,7)" fg:x="36485" fg:w="25"/><text x="84.9314%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.06%)</title><rect x="84.6814%" y="1061" width="0.0580%" height="15" fill="rgb(239,11,31)" fg:x="36485" fg:w="25"/><text x="84.9314%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.06%)</title><rect x="84.6814%" y="1045" width="0.0580%" height="15" fill="rgb(224,77,40)" fg:x="36485" fg:w="25"/><text x="84.9314%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.02%)</title><rect x="84.7186%" y="1029" width="0.0209%" height="15" fill="rgb(226,15,5)" fg:x="36501" fg:w="9"/><text x="84.9686%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="84.7186%" y="1013" width="0.0209%" height="15" fill="rgb(254,188,5)" fg:x="36501" fg:w="9"/><text x="84.9686%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="84.7186%" y="997" width="0.0209%" height="15" fill="rgb(241,148,52)" fg:x="36501" fg:w="9"/><text x="84.9686%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="84.7186%" y="981" width="0.0209%" height="15" fill="rgb(251,48,36)" fg:x="36501" fg:w="9"/><text x="84.9686%" y="991.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (58 samples, 0.13%)</title><rect x="84.6373%" y="1125" width="0.1346%" height="15" fill="rgb(243,83,13)" fg:x="36466" fg:w="58"/><text x="84.8873%" y="1135.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (14 samples, 0.03%)</title><rect x="84.7395%" y="1109" width="0.0325%" height="15" fill="rgb(210,105,0)" fg:x="36510" fg:w="14"/><text x="84.9895%" y="1119.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (11 samples, 0.03%)</title><rect x="84.7464%" y="1093" width="0.0255%" height="15" fill="rgb(239,60,36)" fg:x="36513" fg:w="11"/><text x="84.9964%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Function::is_native (8 samples, 0.02%)</title><rect x="84.7720%" y="1125" width="0.0186%" height="15" fill="rgb(210,20,0)" fg:x="36524" fg:w="8"/><text x="85.0220%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (8 samples, 0.02%)</title><rect x="84.7720%" y="1109" width="0.0186%" height="15" fill="rgb(244,26,53)" fg:x="36524" fg:w="8"/><text x="85.0220%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (8 samples, 0.02%)</title><rect x="84.7905%" y="1125" width="0.0186%" height="15" fill="rgb(240,100,49)" fg:x="36532" fg:w="8"/><text x="85.0405%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_instantiation (6 samples, 0.01%)</title><rect x="84.8091%" y="1125" width="0.0139%" height="15" fill="rgb(250,46,45)" fg:x="36540" fg:w="6"/><text x="85.0591%" y="1135.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="84.8277%" y="1109" width="0.0116%" height="15" fill="rgb(220,181,29)" fg:x="36548" fg:w="5"/><text x="85.0777%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="84.8602%" y="1029" width="0.0116%" height="15" fill="rgb(213,137,33)" fg:x="36562" fg:w="5"/><text x="85.1102%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.02%)</title><rect x="84.8718%" y="1029" width="0.0209%" height="15" fill="rgb(213,27,48)" fg:x="36567" fg:w="9"/><text x="85.1218%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="84.8810%" y="1013" width="0.0116%" height="15" fill="rgb(245,180,39)" fg:x="36571" fg:w="5"/><text x="85.1310%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.06%)</title><rect x="84.8439%" y="1109" width="0.0557%" height="15" fill="rgb(212,158,42)" fg:x="36555" fg:w="24"/><text x="85.0939%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.05%)</title><rect x="84.8509%" y="1093" width="0.0487%" height="15" fill="rgb(228,193,18)" fg:x="36558" fg:w="21"/><text x="85.1009%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.05%)</title><rect x="84.8509%" y="1077" width="0.0487%" height="15" fill="rgb(245,172,29)" fg:x="36558" fg:w="21"/><text x="85.1009%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (21 samples, 0.05%)</title><rect x="84.8509%" y="1061" width="0.0487%" height="15" fill="rgb(207,98,24)" fg:x="36558" fg:w="21"/><text x="85.1009%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.05%)</title><rect x="84.8509%" y="1045" width="0.0487%" height="15" fill="rgb(249,92,26)" fg:x="36558" fg:w="21"/><text x="85.1009%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (44 samples, 0.10%)</title><rect x="84.8230%" y="1125" width="0.1021%" height="15" fill="rgb(217,176,26)" fg:x="36546" fg:w="44"/><text x="85.0730%" y="1135.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (9 samples, 0.02%)</title><rect x="84.9043%" y="1109" width="0.0209%" height="15" fill="rgb(221,8,39)" fg:x="36581" fg:w="9"/><text x="85.1543%" y="1119.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (9 samples, 0.02%)</title><rect x="84.9043%" y="1093" width="0.0209%" height="15" fill="rgb(208,90,18)" fg:x="36581" fg:w="9"/><text x="85.1543%" y="1103.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::_{{closure}} (5 samples, 0.01%)</title><rect x="84.9135%" y="1077" width="0.0116%" height="15" fill="rgb(207,202,30)" fg:x="36585" fg:w="5"/><text x="85.1635%" y="1087.50"></text></g><g><title>move_core_types::gas_schedule::GasAlgebra::map (6 samples, 0.01%)</title><rect x="84.9460%" y="1109" width="0.0139%" height="15" fill="rgb(231,124,22)" fg:x="36599" fg:w="6"/><text x="85.1960%" y="1119.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr_with_size::_{{closure}} (5 samples, 0.01%)</title><rect x="84.9484%" y="1093" width="0.0116%" height="15" fill="rgb(206,15,5)" fg:x="36600" fg:w="5"/><text x="85.1984%" y="1103.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (439 samples, 1.02%)</title><rect x="83.9619%" y="1141" width="1.0189%" height="15" fill="rgb(239,16,52)" fg:x="36175" fg:w="439"/><text x="84.2119%" y="1151.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr_with_size (21 samples, 0.05%)</title><rect x="84.9321%" y="1125" width="0.0487%" height="15" fill="rgb(245,213,29)" fg:x="36593" fg:w="21"/><text x="85.1821%" y="1135.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (6 samples, 0.01%)</title><rect x="84.9832%" y="1093" width="0.0139%" height="15" fill="rgb(213,203,36)" fg:x="36615" fg:w="6"/><text x="85.2332%" y="1103.50"></text></g><g><title>&lt;diem_vm::data_cache::RemoteStorage&lt;S&gt; as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (6 samples, 0.01%)</title><rect x="84.9832%" y="1077" width="0.0139%" height="15" fill="rgb(209,55,18)" fg:x="36615" fg:w="6"/><text x="85.2332%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (5 samples, 0.01%)</title><rect x="85.0110%" y="1077" width="0.0116%" height="15" fill="rgb(207,133,49)" fg:x="36627" fg:w="5"/><text x="85.2610%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="85.0110%" y="1061" width="0.0116%" height="15" fill="rgb(240,33,46)" fg:x="36627" fg:w="5"/><text x="85.2610%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="85.0110%" y="1045" width="0.0116%" height="15" fill="rgb(212,35,2)" fg:x="36627" fg:w="5"/><text x="85.2610%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="85.0110%" y="1029" width="0.0116%" height="15" fill="rgb(231,119,28)" fg:x="36627" fg:w="5"/><text x="85.2610%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="85.0110%" y="1013" width="0.0116%" height="15" fill="rgb(252,178,7)" fg:x="36627" fg:w="5"/><text x="85.2610%" y="1023.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (20 samples, 0.05%)</title><rect x="84.9809%" y="1141" width="0.0464%" height="15" fill="rgb(251,91,4)" fg:x="36614" fg:w="20"/><text x="85.2309%" y="1151.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (19 samples, 0.04%)</title><rect x="84.9832%" y="1125" width="0.0441%" height="15" fill="rgb(233,122,19)" fg:x="36615" fg:w="19"/><text x="85.2332%" y="1135.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (19 samples, 0.04%)</title><rect x="84.9832%" y="1109" width="0.0441%" height="15" fill="rgb(231,208,46)" fg:x="36615" fg:w="19"/><text x="85.2332%" y="1119.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (7 samples, 0.02%)</title><rect x="85.0110%" y="1093" width="0.0162%" height="15" fill="rgb(243,15,41)" fg:x="36627" fg:w="7"/><text x="85.2610%" y="1103.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (10 samples, 0.02%)</title><rect x="85.0273%" y="1109" width="0.0232%" height="15" fill="rgb(210,32,43)" fg:x="36634" fg:w="10"/><text x="85.2773%" y="1119.50"></text></g><g><title>&lt;diem_vm::data_cache::RemoteStorage&lt;S&gt; as move_vm_runtime::data_cache::MoveStorage&gt;::get_resource (10 samples, 0.02%)</title><rect x="85.0273%" y="1093" width="0.0232%" height="15" fill="rgb(222,177,15)" fg:x="36634" fg:w="10"/><text x="85.2773%" y="1103.50"></text></g><g><title>diem_vm::data_cache::RemoteStorage&lt;S&gt;::get (6 samples, 0.01%)</title><rect x="85.0366%" y="1077" width="0.0139%" height="15" fill="rgb(244,121,34)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1087.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as diem_state_view::StateView&gt;::get (6 samples, 0.01%)</title><rect x="85.0366%" y="1061" width="0.0139%" height="15" fill="rgb(234,138,4)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1071.50"></text></g><g><title>&lt;language_e2e_tests::data_store::FakeDataStore as diem_state_view::StateView&gt;::get (6 samples, 0.01%)</title><rect x="85.0366%" y="1045" width="0.0139%" height="15" fill="rgb(240,97,48)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.01%)</title><rect x="85.0366%" y="1029" width="0.0139%" height="15" fill="rgb(237,65,54)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.01%)</title><rect x="85.0366%" y="1013" width="0.0139%" height="15" fill="rgb(214,25,24)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.01%)</title><rect x="85.0366%" y="997" width="0.0139%" height="15" fill="rgb(213,5,3)" fg:x="36638" fg:w="6"/><text x="85.2866%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (7 samples, 0.02%)</title><rect x="85.0505%" y="1077" width="0.0162%" height="15" fill="rgb(219,81,29)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.02%)</title><rect x="85.0505%" y="1061" width="0.0162%" height="15" fill="rgb(220,43,48)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="85.0505%" y="1045" width="0.0162%" height="15" fill="rgb(239,157,2)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (7 samples, 0.02%)</title><rect x="85.0505%" y="1029" width="0.0162%" height="15" fill="rgb(213,104,43)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (7 samples, 0.02%)</title><rect x="85.0505%" y="1013" width="0.0162%" height="15" fill="rgb(237,84,9)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (7 samples, 0.02%)</title><rect x="85.0505%" y="997" width="0.0162%" height="15" fill="rgb(252,6,33)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (7 samples, 0.02%)</title><rect x="85.0505%" y="981" width="0.0162%" height="15" fill="rgb(251,172,22)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.02%)</title><rect x="85.0505%" y="965" width="0.0162%" height="15" fill="rgb(244,91,53)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.02%)</title><rect x="85.0505%" y="949" width="0.0162%" height="15" fill="rgb(219,29,30)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="85.0505%" y="933" width="0.0162%" height="15" fill="rgb(213,3,15)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="85.0505%" y="917" width="0.0162%" height="15" fill="rgb(208,25,28)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="927.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="85.0505%" y="901" width="0.0162%" height="15" fill="rgb(252,144,25)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="911.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.02%)</title><rect x="85.0505%" y="885" width="0.0162%" height="15" fill="rgb(226,220,25)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="895.50"></text></g><g><title>_int_malloc (7 samples, 0.02%)</title><rect x="85.0505%" y="869" width="0.0162%" height="15" fill="rgb(212,131,28)" fg:x="36644" fg:w="7"/><text x="85.3005%" y="879.50"></text></g><g><title>malloc_consolidate (5 samples, 0.01%)</title><rect x="85.0551%" y="853" width="0.0116%" height="15" fill="rgb(219,143,52)" fg:x="36646" fg:w="5"/><text x="85.3051%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (9 samples, 0.02%)</title><rect x="85.0505%" y="1093" width="0.0209%" height="15" fill="rgb(215,56,7)" fg:x="36644" fg:w="9"/><text x="85.3005%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (10 samples, 0.02%)</title><rect x="85.0505%" y="1109" width="0.0232%" height="15" fill="rgb(239,59,51)" fg:x="36644" fg:w="10"/><text x="85.3005%" y="1119.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (21 samples, 0.05%)</title><rect x="85.0273%" y="1141" width="0.0487%" height="15" fill="rgb(209,215,4)" fg:x="36634" fg:w="21"/><text x="85.2773%" y="1151.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (21 samples, 0.05%)</title><rect x="85.0273%" y="1125" width="0.0487%" height="15" fill="rgb(221,118,39)" fg:x="36634" fg:w="21"/><text x="85.2773%" y="1135.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (5 samples, 0.01%)</title><rect x="85.1085%" y="1045" width="0.0116%" height="15" fill="rgb(236,6,44)" fg:x="36669" fg:w="5"/><text x="85.3585%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="85.1085%" y="1029" width="0.0116%" height="15" fill="rgb(216,122,9)" fg:x="36669" fg:w="5"/><text x="85.3585%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.01%)</title><rect x="85.1085%" y="1013" width="0.0116%" height="15" fill="rgb(244,134,42)" fg:x="36669" fg:w="5"/><text x="85.3585%" y="1023.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.02%)</title><rect x="85.1294%" y="1013" width="0.0209%" height="15" fill="rgb(209,189,35)" fg:x="36678" fg:w="9"/><text x="85.3794%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (7 samples, 0.02%)</title><rect x="85.1340%" y="997" width="0.0162%" height="15" fill="rgb(250,47,36)" fg:x="36680" fg:w="7"/><text x="85.3840%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="85.1689%" y="901" width="0.0139%" height="15" fill="rgb(252,112,4)" fg:x="36695" fg:w="6"/><text x="85.4189%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="85.1689%" y="885" width="0.0139%" height="15" fill="rgb(221,79,51)" fg:x="36695" fg:w="6"/><text x="85.4189%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.01%)</title><rect x="85.1689%" y="869" width="0.0139%" height="15" fill="rgb(232,65,53)" fg:x="36695" fg:w="6"/><text x="85.4189%" y="879.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="85.1828%" y="885" width="0.0139%" height="15" fill="rgb(211,37,7)" fg:x="36701" fg:w="6"/><text x="85.4328%" y="895.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (6 samples, 0.01%)</title><rect x="85.1828%" y="869" width="0.0139%" height="15" fill="rgb(234,221,18)" fg:x="36701" fg:w="6"/><text x="85.4328%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.01%)</title><rect x="85.1828%" y="853" width="0.0139%" height="15" fill="rgb(220,158,26)" fg:x="36701" fg:w="6"/><text x="85.4328%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.01%)</title><rect x="85.1828%" y="837" width="0.0139%" height="15" fill="rgb(220,70,6)" fg:x="36701" fg:w="6"/><text x="85.4328%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="85.1851%" y="821" width="0.0116%" height="15" fill="rgb(250,39,48)" fg:x="36702" fg:w="5"/><text x="85.4351%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="85.1851%" y="805" width="0.0116%" height="15" fill="rgb(206,40,27)" fg:x="36702" fg:w="5"/><text x="85.4351%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="85.1851%" y="789" width="0.0116%" height="15" fill="rgb(247,80,36)" fg:x="36702" fg:w="5"/><text x="85.4351%" y="799.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (15 samples, 0.03%)</title><rect x="85.1665%" y="949" width="0.0348%" height="15" fill="rgb(222,9,20)" fg:x="36694" fg:w="15"/><text x="85.4165%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="85.1665%" y="933" width="0.0348%" height="15" fill="rgb(217,26,45)" fg:x="36694" fg:w="15"/><text x="85.4165%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (14 samples, 0.03%)</title><rect x="85.1689%" y="917" width="0.0325%" height="15" fill="rgb(221,67,14)" fg:x="36695" fg:w="14"/><text x="85.4189%" y="927.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="85.1828%" y="901" width="0.0186%" height="15" fill="rgb(248,100,24)" fg:x="36701" fg:w="8"/><text x="85.4328%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.05%)</title><rect x="85.1619%" y="997" width="0.0464%" height="15" fill="rgb(230,187,16)" fg:x="36692" fg:w="20"/><text x="85.4119%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.05%)</title><rect x="85.1619%" y="981" width="0.0464%" height="15" fill="rgb(205,108,13)" fg:x="36692" fg:w="20"/><text x="85.4119%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (20 samples, 0.05%)</title><rect x="85.1619%" y="965" width="0.0464%" height="15" fill="rgb(235,71,51)" fg:x="36692" fg:w="20"/><text x="85.4119%" y="975.50"></text></g><g><title>bytecode_verifier::dependencies::Context::script (45 samples, 0.10%)</title><rect x="85.1085%" y="1077" width="0.1044%" height="15" fill="rgb(251,172,48)" fg:x="36669" fg:w="45"/><text x="85.3585%" y="1087.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (45 samples, 0.10%)</title><rect x="85.1085%" y="1061" width="0.1044%" height="15" fill="rgb(240,96,49)" fg:x="36669" fg:w="45"/><text x="85.3585%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (36 samples, 0.08%)</title><rect x="85.1294%" y="1045" width="0.0836%" height="15" fill="rgb(235,46,36)" fg:x="36678" fg:w="36"/><text x="85.3794%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (36 samples, 0.08%)</title><rect x="85.1294%" y="1029" width="0.0836%" height="15" fill="rgb(244,3,49)" fg:x="36678" fg:w="36"/><text x="85.3794%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (25 samples, 0.06%)</title><rect x="85.1549%" y="1013" width="0.0580%" height="15" fill="rgb(206,78,54)" fg:x="36689" fg:w="25"/><text x="85.4049%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::deserialize_and_verify_script (52 samples, 0.12%)</title><rect x="85.0992%" y="1141" width="0.1207%" height="15" fill="rgb(208,85,42)" fg:x="36665" fg:w="52"/><text x="85.3492%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_script_dependencies (49 samples, 0.11%)</title><rect x="85.1062%" y="1125" width="0.1137%" height="15" fill="rgb(219,196,21)" fg:x="36668" fg:w="49"/><text x="85.3562%" y="1135.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script (49 samples, 0.11%)</title><rect x="85.1062%" y="1109" width="0.1137%" height="15" fill="rgb(238,19,9)" fg:x="36668" fg:w="49"/><text x="85.3562%" y="1119.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_impl (49 samples, 0.11%)</title><rect x="85.1062%" y="1093" width="0.1137%" height="15" fill="rgb(206,86,13)" fg:x="36668" fg:w="49"/><text x="85.3562%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="85.2408%" y="981" width="0.0116%" height="15" fill="rgb(214,123,40)" fg:x="36726" fg:w="5"/><text x="85.4908%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (5 samples, 0.01%)</title><rect x="85.2408%" y="965" width="0.0116%" height="15" fill="rgb(243,53,5)" fg:x="36726" fg:w="5"/><text x="85.4908%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (6 samples, 0.01%)</title><rect x="85.2408%" y="997" width="0.0139%" height="15" fill="rgb(254,186,31)" fg:x="36726" fg:w="6"/><text x="85.4908%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="85.2687%" y="885" width="0.0116%" height="15" fill="rgb(221,216,25)" fg:x="36738" fg:w="5"/><text x="85.5187%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="85.2687%" y="901" width="0.0139%" height="15" fill="rgb(248,107,42)" fg:x="36738" fg:w="6"/><text x="85.5187%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (27 samples, 0.06%)</title><rect x="85.2246%" y="1141" width="0.0627%" height="15" fill="rgb(221,85,43)" fg:x="36719" fg:w="27"/><text x="85.4746%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_verify_not_missing (26 samples, 0.06%)</title><rect x="85.2269%" y="1125" width="0.0603%" height="15" fill="rgb(225,34,24)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,move_binary_format::file_format::CompiledModule&gt;&gt; (26 samples, 0.06%)</title><rect x="85.2269%" y="1109" width="0.0603%" height="15" fill="rgb(211,119,1)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.06%)</title><rect x="85.2269%" y="1093" width="0.0603%" height="15" fill="rgb(254,216,46)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,move_binary_format::file_format::CompiledModule&gt;&gt; (26 samples, 0.06%)</title><rect x="85.2269%" y="1077" width="0.0603%" height="15" fill="rgb(238,11,38)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.06%)</title><rect x="85.2269%" y="1061" width="0.0603%" height="15" fill="rgb(233,50,15)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1071.50"></text></g><g><title>core::mem::drop (26 samples, 0.06%)</title><rect x="85.2269%" y="1045" width="0.0603%" height="15" fill="rgb(217,181,29)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_binary_format::file_format::CompiledModule)&gt; (26 samples, 0.06%)</title><rect x="85.2269%" y="1029" width="0.0603%" height="15" fill="rgb(214,56,3)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (26 samples, 0.06%)</title><rect x="85.2269%" y="1013" width="0.0603%" height="15" fill="rgb(230,69,45)" fg:x="36720" fg:w="26"/><text x="85.4769%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::identifier::Identifier&gt;&gt; (10 samples, 0.02%)</title><rect x="85.2640%" y="997" width="0.0232%" height="15" fill="rgb(224,201,50)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="85.2640%" y="981" width="0.0232%" height="15" fill="rgb(217,228,18)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::identifier::Identifier]&gt; (10 samples, 0.02%)</title><rect x="85.2640%" y="965" width="0.0232%" height="15" fill="rgb(239,33,44)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (10 samples, 0.02%)</title><rect x="85.2640%" y="949" width="0.0232%" height="15" fill="rgb(248,210,23)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (10 samples, 0.02%)</title><rect x="85.2640%" y="933" width="0.0232%" height="15" fill="rgb(253,135,8)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="943.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.02%)</title><rect x="85.2640%" y="917" width="0.0232%" height="15" fill="rgb(217,98,21)" fg:x="36736" fg:w="10"/><text x="85.5140%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (5 samples, 0.01%)</title><rect x="85.2872%" y="1141" width="0.0116%" height="15" fill="rgb(253,130,21)" fg:x="36746" fg:w="5"/><text x="85.5372%" y="1151.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module (5 samples, 0.01%)</title><rect x="85.3011%" y="1109" width="0.0116%" height="15" fill="rgb(207,81,54)" fg:x="36752" fg:w="5"/><text x="85.5511%" y="1119.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module_impl (5 samples, 0.01%)</title><rect x="85.3011%" y="1093" width="0.0116%" height="15" fill="rgb(232,48,33)" fg:x="36752" fg:w="5"/><text x="85.5511%" y="1103.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (5 samples, 0.01%)</title><rect x="85.3128%" y="1109" width="0.0116%" height="15" fill="rgb(211,9,35)" fg:x="36757" fg:w="5"/><text x="85.5628%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="85.3406%" y="1045" width="0.0209%" height="15" fill="rgb(205,152,21)" fg:x="36769" fg:w="9"/><text x="85.5906%" y="1055.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_function_def (10 samples, 0.02%)</title><rect x="85.3406%" y="1061" width="0.0232%" height="15" fill="rgb(249,21,27)" fg:x="36769" fg:w="10"/><text x="85.5906%" y="1071.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph (12 samples, 0.03%)</title><rect x="85.3383%" y="1077" width="0.0279%" height="15" fill="rgb(252,29,24)" fg:x="36768" fg:w="12"/><text x="85.5883%" y="1087.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module (18 samples, 0.04%)</title><rect x="85.3383%" y="1109" width="0.0418%" height="15" fill="rgb(230,130,50)" fg:x="36768" fg:w="18"/><text x="85.5883%" y="1119.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module_impl (18 samples, 0.04%)</title><rect x="85.3383%" y="1093" width="0.0418%" height="15" fill="rgb(239,144,14)" fg:x="36768" fg:w="18"/><text x="85.5883%" y="1103.50"></text></g><g><title>bytecode_verifier::verifier::verify_module (38 samples, 0.09%)</title><rect x="85.2988%" y="1125" width="0.0882%" height="15" fill="rgb(227,111,50)" fg:x="36751" fg:w="38"/><text x="85.5488%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module::deserialize_and_verify_module (48 samples, 0.11%)</title><rect x="85.2988%" y="1141" width="0.1114%" height="15" fill="rgb(254,84,20)" fg:x="36751" fg:w="48"/><text x="85.5488%" y="1151.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize (10 samples, 0.02%)</title><rect x="85.3870%" y="1125" width="0.0232%" height="15" fill="rgb(232,90,48)" fg:x="36789" fg:w="10"/><text x="85.6370%" y="1135.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_no_check_bounds (10 samples, 0.02%)</title><rect x="85.3870%" y="1109" width="0.0232%" height="15" fill="rgb(253,63,47)" fg:x="36789" fg:w="10"/><text x="85.6370%" y="1119.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (10 samples, 0.02%)</title><rect x="85.3870%" y="1093" width="0.0232%" height="15" fill="rgb(251,146,35)" fg:x="36789" fg:w="10"/><text x="85.6370%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="85.4520%" y="1045" width="0.0325%" height="15" fill="rgb(229,192,35)" fg:x="36817" fg:w="14"/><text x="85.7020%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="85.4543%" y="1029" width="0.0302%" height="15" fill="rgb(225,68,9)" fg:x="36818" fg:w="13"/><text x="85.7043%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="85.4613%" y="1013" width="0.0232%" height="15" fill="rgb(214,97,34)" fg:x="36821" fg:w="10"/><text x="85.7113%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="85.4729%" y="997" width="0.0116%" height="15" fill="rgb(253,31,26)" fg:x="36826" fg:w="5"/><text x="85.7229%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="85.4845%" y="965" width="0.0162%" height="15" fill="rgb(225,151,47)" fg:x="36831" fg:w="7"/><text x="85.7345%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="85.4845%" y="949" width="0.0162%" height="15" fill="rgb(206,185,9)" fg:x="36831" fg:w="7"/><text x="85.7345%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="85.4845%" y="933" width="0.0162%" height="15" fill="rgb(249,65,17)" fg:x="36831" fg:w="7"/><text x="85.7345%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="85.4845%" y="1029" width="0.0209%" height="15" fill="rgb(220,110,10)" fg:x="36831" fg:w="9"/><text x="85.7345%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="85.4845%" y="1013" width="0.0209%" height="15" fill="rgb(222,198,49)" fg:x="36831" fg:w="9"/><text x="85.7345%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="85.4845%" y="997" width="0.0209%" height="15" fill="rgb(239,81,13)" fg:x="36831" fg:w="9"/><text x="85.7345%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="85.4845%" y="981" width="0.0209%" height="15" fill="rgb(216,128,11)" fg:x="36831" fg:w="9"/><text x="85.7345%" y="991.50"></text></g><g><title>&lt;move_binary_format::file_format::Constant as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="85.4845%" y="1045" width="0.0232%" height="15" fill="rgb(247,156,8)" fg:x="36831" fg:w="10"/><text x="85.7345%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="85.5077%" y="1029" width="0.0162%" height="15" fill="rgb(219,173,1)" fg:x="36841" fg:w="7"/><text x="85.7577%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="85.5100%" y="1013" width="0.0139%" height="15" fill="rgb(227,42,24)" fg:x="36842" fg:w="6"/><text x="85.7600%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="85.5100%" y="997" width="0.0139%" height="15" fill="rgb(253,219,50)" fg:x="36842" fg:w="6"/><text x="85.7600%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="85.5100%" y="981" width="0.0139%" height="15" fill="rgb(215,191,54)" fg:x="36842" fg:w="6"/><text x="85.7600%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="85.5124%" y="965" width="0.0116%" height="15" fill="rgb(238,83,12)" fg:x="36843" fg:w="5"/><text x="85.7624%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="85.5124%" y="949" width="0.0116%" height="15" fill="rgb(205,124,9)" fg:x="36843" fg:w="5"/><text x="85.7624%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="85.5124%" y="933" width="0.0116%" height="15" fill="rgb(253,174,7)" fg:x="36843" fg:w="5"/><text x="85.7624%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.06%)</title><rect x="85.5379%" y="933" width="0.0627%" height="15" fill="rgb(206,134,49)" fg:x="36854" fg:w="27"/><text x="85.7879%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="85.5425%" y="917" width="0.0580%" height="15" fill="rgb(221,89,20)" fg:x="36856" fg:w="25"/><text x="85.7925%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="85.5565%" y="901" width="0.0441%" height="15" fill="rgb(240,205,13)" fg:x="36862" fg:w="19"/><text x="85.8065%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.02%)</title><rect x="85.5820%" y="885" width="0.0186%" height="15" fill="rgb(237,174,32)" fg:x="36873" fg:w="8"/><text x="85.8320%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::Bytecode as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="85.6006%" y="933" width="0.0162%" height="15" fill="rgb(226,12,15)" fg:x="36881" fg:w="7"/><text x="85.8506%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="85.6191%" y="933" width="0.0139%" height="15" fill="rgb(245,160,52)" fg:x="36889" fg:w="6"/><text x="85.8691%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="85.6191%" y="917" width="0.0139%" height="15" fill="rgb(253,80,21)" fg:x="36889" fg:w="6"/><text x="85.8691%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="85.6191%" y="901" width="0.0139%" height="15" fill="rgb(231,225,22)" fg:x="36889" fg:w="6"/><text x="85.8691%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionDefinition as core::clone::Clone&gt;::clone (67 samples, 0.16%)</title><rect x="85.5077%" y="1045" width="0.1555%" height="15" fill="rgb(253,185,12)" fg:x="36841" fg:w="67"/><text x="85.7577%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.14%)</title><rect x="85.5240%" y="1029" width="0.1393%" height="15" fill="rgb(234,197,21)" fg:x="36848" fg:w="60"/><text x="85.7740%" y="1039.50"></text></g><g><title>&lt;move_binary_format::file_format::CodeUnit as core::clone::Clone&gt;::clone (59 samples, 0.14%)</title><rect x="85.5263%" y="1013" width="0.1369%" height="15" fill="rgb(210,47,30)" fg:x="36849" fg:w="59"/><text x="85.7763%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.14%)</title><rect x="85.5263%" y="997" width="0.1369%" height="15" fill="rgb(246,139,27)" fg:x="36849" fg:w="59"/><text x="85.7763%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.14%)</title><rect x="85.5263%" y="981" width="0.1369%" height="15" fill="rgb(226,130,16)" fg:x="36849" fg:w="59"/><text x="85.7763%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.14%)</title><rect x="85.5263%" y="965" width="0.1369%" height="15" fill="rgb(237,208,20)" fg:x="36849" fg:w="59"/><text x="85.7763%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.14%)</title><rect x="85.5263%" y="949" width="0.1369%" height="15" fill="rgb(245,186,28)" fg:x="36849" fg:w="59"/><text x="85.7763%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.03%)</title><rect x="85.6331%" y="933" width="0.0302%" height="15" fill="rgb(238,105,39)" fg:x="36895" fg:w="13"/><text x="85.8831%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="85.6493%" y="917" width="0.0139%" height="15" fill="rgb(253,228,11)" fg:x="36902" fg:w="6"/><text x="85.8993%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (5 samples, 0.01%)</title><rect x="85.6864%" y="901" width="0.0116%" height="15" fill="rgb(224,136,38)" fg:x="36918" fg:w="5"/><text x="85.9364%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandle as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="85.6632%" y="1045" width="0.0395%" height="15" fill="rgb(211,3,25)" fg:x="36908" fg:w="17"/><text x="85.9132%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="85.6655%" y="1029" width="0.0371%" height="15" fill="rgb(238,66,34)" fg:x="36909" fg:w="16"/><text x="85.9155%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.03%)</title><rect x="85.6702%" y="1013" width="0.0325%" height="15" fill="rgb(223,188,11)" fg:x="36911" fg:w="14"/><text x="85.9202%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.03%)</title><rect x="85.6702%" y="997" width="0.0325%" height="15" fill="rgb(221,10,35)" fg:x="36911" fg:w="14"/><text x="85.9202%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.03%)</title><rect x="85.6702%" y="981" width="0.0325%" height="15" fill="rgb(223,18,44)" fg:x="36911" fg:w="14"/><text x="85.9202%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.03%)</title><rect x="85.6725%" y="965" width="0.0302%" height="15" fill="rgb(220,97,41)" fg:x="36912" fg:w="13"/><text x="85.9225%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="85.6748%" y="949" width="0.0279%" height="15" fill="rgb(206,95,45)" fg:x="36913" fg:w="12"/><text x="85.9248%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.03%)</title><rect x="85.6748%" y="933" width="0.0279%" height="15" fill="rgb(209,96,13)" fg:x="36913" fg:w="12"/><text x="85.9248%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.02%)</title><rect x="85.6841%" y="917" width="0.0186%" height="15" fill="rgb(237,39,34)" fg:x="36917" fg:w="8"/><text x="85.9341%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="85.7120%" y="965" width="0.0186%" height="15" fill="rgb(213,49,47)" fg:x="36929" fg:w="8"/><text x="85.9620%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="85.7120%" y="949" width="0.0186%" height="15" fill="rgb(205,107,27)" fg:x="36929" fg:w="8"/><text x="85.9620%" y="959.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.01%)</title><rect x="85.7329%" y="933" width="0.0139%" height="15" fill="rgb(212,142,9)" fg:x="36938" fg:w="6"/><text x="85.9829%" y="943.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.7329%" y="917" width="0.0139%" height="15" fill="rgb(226,182,0)" fg:x="36938" fg:w="6"/><text x="85.9829%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="85.7329%" y="949" width="0.0302%" height="15" fill="rgb(231,3,53)" fg:x="36938" fg:w="13"/><text x="85.9829%" y="959.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="85.7305%" y="965" width="0.0395%" height="15" fill="rgb(246,111,28)" fg:x="36937" fg:w="17"/><text x="85.9805%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="85.7723%" y="965" width="0.0186%" height="15" fill="rgb(254,183,7)" fg:x="36955" fg:w="8"/><text x="86.0223%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="85.7723%" y="949" width="0.0186%" height="15" fill="rgb(247,177,28)" fg:x="36955" fg:w="8"/><text x="86.0223%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="85.7723%" y="933" width="0.0186%" height="15" fill="rgb(244,43,1)" fg:x="36955" fg:w="8"/><text x="86.0223%" y="943.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (42 samples, 0.10%)</title><rect x="85.7050%" y="1045" width="0.0975%" height="15" fill="rgb(207,2,35)" fg:x="36926" fg:w="42"/><text x="85.9550%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.10%)</title><rect x="85.7050%" y="1029" width="0.0975%" height="15" fill="rgb(213,83,22)" fg:x="36926" fg:w="42"/><text x="85.9550%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.10%)</title><rect x="85.7073%" y="1013" width="0.0952%" height="15" fill="rgb(246,212,13)" fg:x="36927" fg:w="41"/><text x="85.9573%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.10%)</title><rect x="85.7073%" y="997" width="0.0952%" height="15" fill="rgb(213,127,46)" fg:x="36927" fg:w="41"/><text x="85.9573%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.10%)</title><rect x="85.7073%" y="981" width="0.0952%" height="15" fill="rgb(219,215,39)" fg:x="36927" fg:w="41"/><text x="85.9573%" y="991.50"></text></g><g><title>&lt;move_binary_format::file_format::StructDefinition as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.8025%" y="1045" width="0.0116%" height="15" fill="rgb(227,99,17)" fg:x="36968" fg:w="5"/><text x="86.0525%" y="1055.50"></text></g><g><title>&lt;move_binary_format::file_format::StructFieldInformation as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.8025%" y="1029" width="0.0116%" height="15" fill="rgb(208,155,18)" fg:x="36968" fg:w="5"/><text x="86.0525%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.8025%" y="1013" width="0.0116%" height="15" fill="rgb(223,204,38)" fg:x="36968" fg:w="5"/><text x="86.0525%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.01%)</title><rect x="85.8489%" y="997" width="0.0139%" height="15" fill="rgb(212,114,21)" fg:x="36988" fg:w="6"/><text x="86.0989%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="85.8512%" y="981" width="0.0116%" height="15" fill="rgb(250,74,13)" fg:x="36989" fg:w="5"/><text x="86.1012%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="85.8373%" y="1045" width="0.0279%" height="15" fill="rgb(234,7,1)" fg:x="36983" fg:w="12"/><text x="86.0873%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.03%)</title><rect x="85.8373%" y="1029" width="0.0279%" height="15" fill="rgb(207,138,31)" fg:x="36983" fg:w="12"/><text x="86.0873%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.03%)</title><rect x="85.8373%" y="1013" width="0.0279%" height="15" fill="rgb(215,186,42)" fg:x="36983" fg:w="12"/><text x="86.0873%" y="1023.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as core::clone::Clone&gt;::clone (207 samples, 0.48%)</title><rect x="85.4102%" y="1125" width="0.4804%" height="15" fill="rgb(229,205,49)" fg:x="36799" fg:w="207"/><text x="85.6602%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (207 samples, 0.48%)</title><rect x="85.4102%" y="1109" width="0.4804%" height="15" fill="rgb(216,156,32)" fg:x="36799" fg:w="207"/><text x="85.6602%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (205 samples, 0.48%)</title><rect x="85.4149%" y="1093" width="0.4758%" height="15" fill="rgb(238,7,21)" fg:x="36801" fg:w="205"/><text x="85.6649%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (205 samples, 0.48%)</title><rect x="85.4149%" y="1077" width="0.4758%" height="15" fill="rgb(249,190,22)" fg:x="36801" fg:w="205"/><text x="85.6649%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (205 samples, 0.48%)</title><rect x="85.4149%" y="1061" width="0.4758%" height="15" fill="rgb(253,51,31)" fg:x="36801" fg:w="205"/><text x="85.6649%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.02%)</title><rect x="85.9069%" y="789" width="0.0162%" height="15" fill="rgb(237,90,54)" fg:x="37013" fg:w="7"/><text x="86.1569%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="85.9069%" y="773" width="0.0162%" height="15" fill="rgb(250,214,33)" fg:x="37013" fg:w="7"/><text x="86.1569%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.02%)</title><rect x="85.9023%" y="853" width="0.0232%" height="15" fill="rgb(237,10,49)" fg:x="37011" fg:w="10"/><text x="86.1523%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.02%)</title><rect x="85.9046%" y="837" width="0.0209%" height="15" fill="rgb(241,56,36)" fg:x="37012" fg:w="9"/><text x="86.1546%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="85.9069%" y="821" width="0.0186%" height="15" fill="rgb(227,164,12)" fg:x="37013" fg:w="8"/><text x="86.1569%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="85.9069%" y="805" width="0.0186%" height="15" fill="rgb(249,149,35)" fg:x="37013" fg:w="8"/><text x="86.1569%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.04%)</title><rect x="85.8976%" y="933" width="0.0371%" height="15" fill="rgb(238,227,50)" fg:x="37009" fg:w="16"/><text x="86.1476%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (15 samples, 0.03%)</title><rect x="85.9000%" y="917" width="0.0348%" height="15" fill="rgb(235,102,45)" fg:x="37010" fg:w="15"/><text x="86.1500%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (15 samples, 0.03%)</title><rect x="85.9000%" y="901" width="0.0348%" height="15" fill="rgb(211,10,38)" fg:x="37010" fg:w="15"/><text x="86.1500%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (14 samples, 0.03%)</title><rect x="85.9023%" y="885" width="0.0325%" height="15" fill="rgb(219,77,48)" fg:x="37011" fg:w="14"/><text x="86.1523%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.03%)</title><rect x="85.9023%" y="869" width="0.0325%" height="15" fill="rgb(246,6,15)" fg:x="37011" fg:w="14"/><text x="86.1523%" y="879.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (18 samples, 0.04%)</title><rect x="85.8976%" y="981" width="0.0418%" height="15" fill="rgb(207,220,2)" fg:x="37009" fg:w="18"/><text x="86.1476%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (18 samples, 0.04%)</title><rect x="85.8976%" y="965" width="0.0418%" height="15" fill="rgb(242,48,14)" fg:x="37009" fg:w="18"/><text x="86.1476%" y="975.50"></text></g><g><title>serde::ser::impls::_&lt;impl serde::ser::Serialize for [T: 16]&gt;::serialize (18 samples, 0.04%)</title><rect x="85.8976%" y="949" width="0.0418%" height="15" fill="rgb(218,19,27)" fg:x="37009" fg:w="18"/><text x="86.1476%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 0.05%)</title><rect x="85.8976%" y="997" width="0.0464%" height="15" fill="rgb(228,0,35)" fg:x="37009" fg:w="20"/><text x="86.1476%" y="1007.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::convert::From&lt;&amp;move_core_types::language_storage::ModuleId&gt;&gt;::from (21 samples, 0.05%)</title><rect x="85.8976%" y="1077" width="0.0487%" height="15" fill="rgb(244,142,54)" fg:x="37009" fg:w="21"/><text x="86.1476%" y="1087.50"></text></g><g><title>move_core_types::language_storage::ModuleId::access_vector (21 samples, 0.05%)</title><rect x="85.8976%" y="1061" width="0.0487%" height="15" fill="rgb(243,217,40)" fg:x="37009" fg:w="21"/><text x="86.1476%" y="1071.50"></text></g><g><title>bcs::ser::to_bytes (21 samples, 0.05%)</title><rect x="85.8976%" y="1045" width="0.0487%" height="15" fill="rgb(207,114,16)" fg:x="37009" fg:w="21"/><text x="86.1476%" y="1055.50"></text></g><g><title>bcs::ser::serialize_into (21 samples, 0.05%)</title><rect x="85.8976%" y="1029" width="0.0487%" height="15" fill="rgb(224,33,25)" fg:x="37009" fg:w="21"/><text x="86.1476%" y="1039.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (21 samples, 0.05%)</title><rect x="85.8976%" y="1013" width="0.0487%" height="15" fill="rgb(230,93,54)" fg:x="37009" fg:w="21"/><text x="86.1476%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (5 samples, 0.01%)</title><rect x="85.9464%" y="1029" width="0.0116%" height="15" fill="rgb(224,56,24)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="85.9464%" y="1013" width="0.0116%" height="15" fill="rgb(235,189,50)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (5 samples, 0.01%)</title><rect x="85.9464%" y="997" width="0.0116%" height="15" fill="rgb(242,173,8)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.9464%" y="981" width="0.0116%" height="15" fill="rgb(209,206,10)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="85.9464%" y="965" width="0.0116%" height="15" fill="rgb(213,182,44)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="85.9464%" y="949" width="0.0116%" height="15" fill="rgb(243,51,15)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="85.9464%" y="933" width="0.0116%" height="15" fill="rgb(241,13,14)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="85.9464%" y="917" width="0.0116%" height="15" fill="rgb(239,147,24)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="85.9464%" y="901" width="0.0116%" height="15" fill="rgb(223,129,16)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="85.9464%" y="885" width="0.0116%" height="15" fill="rgb(209,169,13)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="85.9464%" y="869" width="0.0116%" height="15" fill="rgb(235,159,41)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="85.9464%" y="853" width="0.0116%" height="15" fill="rgb(223,219,48)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="863.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="85.9464%" y="837" width="0.0116%" height="15" fill="rgb(236,80,13)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="847.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="85.9464%" y="821" width="0.0116%" height="15" fill="rgb(213,5,6)" fg:x="37030" fg:w="5"/><text x="86.1964%" y="831.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (32 samples, 0.07%)</title><rect x="85.8953%" y="1125" width="0.0743%" height="15" fill="rgb(205,59,21)" fg:x="37008" fg:w="32"/><text x="86.1453%" y="1135.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as move_vm_runtime::data_cache::MoveStorage&gt;::get_module (31 samples, 0.07%)</title><rect x="85.8976%" y="1109" width="0.0720%" height="15" fill="rgb(247,137,35)" fg:x="37009" fg:w="31"/><text x="86.1476%" y="1119.50"></text></g><g><title>&lt;diem_vm::data_cache::RemoteStorage&lt;S&gt; as move_vm_runtime::data_cache::MoveStorage&gt;::get_module (31 samples, 0.07%)</title><rect x="85.8976%" y="1093" width="0.0720%" height="15" fill="rgb(242,208,28)" fg:x="37009" fg:w="31"/><text x="86.1476%" y="1103.50"></text></g><g><title>diem_vm::data_cache::RemoteStorage&lt;S&gt;::get (10 samples, 0.02%)</title><rect x="85.9464%" y="1077" width="0.0232%" height="15" fill="rgb(245,62,25)" fg:x="37030" fg:w="10"/><text x="86.1964%" y="1087.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as diem_state_view::StateView&gt;::get (10 samples, 0.02%)</title><rect x="85.9464%" y="1061" width="0.0232%" height="15" fill="rgb(233,99,54)" fg:x="37030" fg:w="10"/><text x="86.1964%" y="1071.50"></text></g><g><title>&lt;language_e2e_tests::data_store::FakeDataStore as diem_state_view::StateView&gt;::get (10 samples, 0.02%)</title><rect x="85.9464%" y="1045" width="0.0232%" height="15" fill="rgb(213,10,37)" fg:x="37030" fg:w="10"/><text x="86.1964%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="85.9580%" y="1029" width="0.0116%" height="15" fill="rgb(235,143,30)" fg:x="37035" fg:w="5"/><text x="86.2080%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="85.9580%" y="1013" width="0.0116%" height="15" fill="rgb(250,146,33)" fg:x="37035" fg:w="5"/><text x="86.2080%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="85.9580%" y="997" width="0.0116%" height="15" fill="rgb(226,198,42)" fg:x="37035" fg:w="5"/><text x="86.2080%" y="1007.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (6 samples, 0.01%)</title><rect x="85.9742%" y="1061" width="0.0139%" height="15" fill="rgb(222,55,6)" fg:x="37042" fg:w="6"/><text x="86.2242%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (9 samples, 0.02%)</title><rect x="85.9696%" y="1125" width="0.0209%" height="15" fill="rgb(213,224,31)" fg:x="37040" fg:w="9"/><text x="86.2196%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="85.9696%" y="1109" width="0.0209%" height="15" fill="rgb(226,103,35)" fg:x="37040" fg:w="9"/><text x="86.2196%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="85.9719%" y="1093" width="0.0186%" height="15" fill="rgb(205,66,45)" fg:x="37041" fg:w="8"/><text x="86.2219%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="85.9719%" y="1077" width="0.0186%" height="15" fill="rgb(226,51,42)" fg:x="37041" fg:w="8"/><text x="86.2219%" y="1087.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (5 samples, 0.01%)</title><rect x="85.9974%" y="1045" width="0.0116%" height="15" fill="rgb(206,69,1)" fg:x="37052" fg:w="5"/><text x="86.2474%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (10 samples, 0.02%)</title><rect x="85.9905%" y="1109" width="0.0232%" height="15" fill="rgb(213,228,47)" fg:x="37049" fg:w="10"/><text x="86.2405%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="85.9928%" y="1093" width="0.0209%" height="15" fill="rgb(224,204,18)" fg:x="37050" fg:w="9"/><text x="86.2428%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="85.9951%" y="1077" width="0.0186%" height="15" fill="rgb(253,187,47)" fg:x="37051" fg:w="8"/><text x="86.2451%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="85.9951%" y="1061" width="0.0186%" height="15" fill="rgb(232,61,2)" fg:x="37051" fg:w="8"/><text x="86.2451%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (11 samples, 0.03%)</title><rect x="85.9905%" y="1125" width="0.0255%" height="15" fill="rgb(213,132,35)" fg:x="37049" fg:w="11"/><text x="86.2405%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="86.0439%" y="997" width="0.0325%" height="15" fill="rgb(247,33,21)" fg:x="37072" fg:w="14"/><text x="86.2939%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="86.0485%" y="981" width="0.0279%" height="15" fill="rgb(233,71,46)" fg:x="37074" fg:w="12"/><text x="86.2985%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="86.0624%" y="965" width="0.0139%" height="15" fill="rgb(222,173,43)" fg:x="37080" fg:w="6"/><text x="86.3124%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="86.0764%" y="981" width="0.0255%" height="15" fill="rgb(249,218,47)" fg:x="37086" fg:w="11"/><text x="86.3264%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="86.0810%" y="965" width="0.0209%" height="15" fill="rgb(254,185,48)" fg:x="37088" fg:w="9"/><text x="86.3310%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="86.0810%" y="949" width="0.0209%" height="15" fill="rgb(252,165,50)" fg:x="37088" fg:w="9"/><text x="86.3310%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="86.0810%" y="933" width="0.0209%" height="15" fill="rgb(206,219,6)" fg:x="37088" fg:w="9"/><text x="86.3310%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="86.0856%" y="917" width="0.0162%" height="15" fill="rgb(212,212,45)" fg:x="37090" fg:w="7"/><text x="86.3356%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="86.0856%" y="901" width="0.0162%" height="15" fill="rgb(221,31,9)" fg:x="37090" fg:w="7"/><text x="86.3356%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="86.0856%" y="885" width="0.0162%" height="15" fill="rgb(234,198,39)" fg:x="37090" fg:w="7"/><text x="86.3356%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::Constant as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="86.0764%" y="997" width="0.0279%" height="15" fill="rgb(252,145,46)" fg:x="37086" fg:w="12"/><text x="86.3264%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="86.1112%" y="869" width="0.0116%" height="15" fill="rgb(237,149,0)" fg:x="37101" fg:w="5"/><text x="86.3612%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="86.1112%" y="853" width="0.0116%" height="15" fill="rgb(229,65,5)" fg:x="37101" fg:w="5"/><text x="86.3612%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="86.1065%" y="981" width="0.0279%" height="15" fill="rgb(235,60,36)" fg:x="37099" fg:w="12"/><text x="86.3565%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.03%)</title><rect x="86.1065%" y="965" width="0.0279%" height="15" fill="rgb(222,47,18)" fg:x="37099" fg:w="12"/><text x="86.3565%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.03%)</title><rect x="86.1065%" y="949" width="0.0279%" height="15" fill="rgb(235,114,22)" fg:x="37099" fg:w="12"/><text x="86.3565%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.03%)</title><rect x="86.1065%" y="933" width="0.0279%" height="15" fill="rgb(209,167,11)" fg:x="37099" fg:w="12"/><text x="86.3565%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="86.1089%" y="917" width="0.0255%" height="15" fill="rgb(251,73,18)" fg:x="37100" fg:w="11"/><text x="86.3589%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="86.1089%" y="901" width="0.0255%" height="15" fill="rgb(217,60,17)" fg:x="37100" fg:w="11"/><text x="86.3589%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.03%)</title><rect x="86.1089%" y="885" width="0.0255%" height="15" fill="rgb(224,36,37)" fg:x="37100" fg:w="11"/><text x="86.3589%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="86.1228%" y="869" width="0.0116%" height="15" fill="rgb(211,21,32)" fg:x="37106" fg:w="5"/><text x="86.3728%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="86.2133%" y="853" width="0.0116%" height="15" fill="rgb(231,55,48)" fg:x="37145" fg:w="5"/><text x="86.4633%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.10%)</title><rect x="86.1808%" y="885" width="0.0952%" height="15" fill="rgb(227,42,18)" fg:x="37131" fg:w="41"/><text x="86.4308%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.09%)</title><rect x="86.1901%" y="869" width="0.0859%" height="15" fill="rgb(217,2,27)" fg:x="37135" fg:w="37"/><text x="86.4401%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="86.2249%" y="853" width="0.0511%" height="15" fill="rgb(251,138,23)" fg:x="37150" fg:w="22"/><text x="86.4749%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.01%)</title><rect x="86.2620%" y="837" width="0.0139%" height="15" fill="rgb(226,184,11)" fg:x="37166" fg:w="6"/><text x="86.5120%" y="847.50"></text></g><g><title>&lt;move_binary_format::file_format::Bytecode as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="86.2760%" y="885" width="0.0302%" height="15" fill="rgb(242,142,12)" fg:x="37172" fg:w="13"/><text x="86.5260%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="86.3108%" y="885" width="0.0186%" height="15" fill="rgb(234,187,18)" fg:x="37187" fg:w="8"/><text x="86.5608%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="86.3108%" y="869" width="0.0186%" height="15" fill="rgb(237,44,42)" fg:x="37187" fg:w="8"/><text x="86.5608%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="86.3131%" y="853" width="0.0162%" height="15" fill="rgb(211,90,23)" fg:x="37188" fg:w="7"/><text x="86.5631%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.03%)</title><rect x="86.3293%" y="885" width="0.0325%" height="15" fill="rgb(207,81,18)" fg:x="37195" fg:w="14"/><text x="86.5793%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="86.3410%" y="869" width="0.0209%" height="15" fill="rgb(222,107,28)" fg:x="37200" fg:w="9"/><text x="86.5910%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (100 samples, 0.23%)</title><rect x="86.1344%" y="981" width="0.2321%" height="15" fill="rgb(237,83,52)" fg:x="37111" fg:w="100"/><text x="86.3844%" y="991.50"></text></g><g><title>&lt;move_binary_format::file_format::CodeUnit as core::clone::Clone&gt;::clone (100 samples, 0.23%)</title><rect x="86.1344%" y="965" width="0.2321%" height="15" fill="rgb(208,67,11)" fg:x="37111" fg:w="100"/><text x="86.3844%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (100 samples, 0.23%)</title><rect x="86.1344%" y="949" width="0.2321%" height="15" fill="rgb(249,157,49)" fg:x="37111" fg:w="100"/><text x="86.3844%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98 samples, 0.23%)</title><rect x="86.1390%" y="933" width="0.2275%" height="15" fill="rgb(243,200,1)" fg:x="37113" fg:w="98"/><text x="86.3890%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (98 samples, 0.23%)</title><rect x="86.1390%" y="917" width="0.2275%" height="15" fill="rgb(225,162,37)" fg:x="37113" fg:w="98"/><text x="86.3890%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98 samples, 0.23%)</title><rect x="86.1390%" y="901" width="0.2275%" height="15" fill="rgb(242,92,13)" fg:x="37113" fg:w="98"/><text x="86.3890%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionDefinition as core::clone::Clone&gt;::clone (114 samples, 0.26%)</title><rect x="86.1042%" y="997" width="0.2646%" height="15" fill="rgb(220,43,36)" fg:x="37098" fg:w="114"/><text x="86.3542%" y="1007.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandle as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="86.3688%" y="997" width="0.0279%" height="15" fill="rgb(213,165,48)" fg:x="37212" fg:w="12"/><text x="86.6188%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="86.3688%" y="981" width="0.0279%" height="15" fill="rgb(227,200,9)" fg:x="37212" fg:w="12"/><text x="86.6188%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.03%)</title><rect x="86.3688%" y="965" width="0.0279%" height="15" fill="rgb(221,222,28)" fg:x="37212" fg:w="12"/><text x="86.6188%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.03%)</title><rect x="86.3688%" y="949" width="0.0279%" height="15" fill="rgb(223,142,26)" fg:x="37212" fg:w="12"/><text x="86.6188%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.03%)</title><rect x="86.3688%" y="933" width="0.0279%" height="15" fill="rgb(243,46,9)" fg:x="37212" fg:w="12"/><text x="86.6188%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="86.3711%" y="917" width="0.0255%" height="15" fill="rgb(250,56,11)" fg:x="37213" fg:w="11"/><text x="86.6211%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="86.3734%" y="901" width="0.0232%" height="15" fill="rgb(229,113,5)" fg:x="37214" fg:w="10"/><text x="86.6234%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="86.3734%" y="885" width="0.0232%" height="15" fill="rgb(244,108,28)" fg:x="37214" fg:w="10"/><text x="86.6234%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="86.4083%" y="917" width="0.0116%" height="15" fill="rgb(242,119,50)" fg:x="37229" fg:w="5"/><text x="86.6583%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5 samples, 0.01%)</title><rect x="86.4268%" y="885" width="0.0116%" height="15" fill="rgb(224,164,23)" fg:x="37237" fg:w="5"/><text x="86.6768%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="86.4268%" y="869" width="0.0116%" height="15" fill="rgb(214,227,44)" fg:x="37237" fg:w="5"/><text x="86.6768%" y="879.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="86.4408%" y="821" width="0.0162%" height="15" fill="rgb(238,202,4)" fg:x="37243" fg:w="7"/><text x="86.6908%" y="831.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.02%)</title><rect x="86.4408%" y="805" width="0.0162%" height="15" fill="rgb(213,190,30)" fg:x="37243" fg:w="7"/><text x="86.6908%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="86.4431%" y="789" width="0.0139%" height="15" fill="rgb(239,15,2)" fg:x="37244" fg:w="6"/><text x="86.6931%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="86.4384%" y="853" width="0.0325%" height="15" fill="rgb(249,229,4)" fg:x="37242" fg:w="14"/><text x="86.6884%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="86.4384%" y="837" width="0.0325%" height="15" fill="rgb(239,75,44)" fg:x="37242" fg:w="14"/><text x="86.6884%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.04%)</title><rect x="86.4384%" y="869" width="0.0371%" height="15" fill="rgb(251,206,23)" fg:x="37242" fg:w="16"/><text x="86.6884%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.04%)</title><rect x="86.4384%" y="885" width="0.0418%" height="15" fill="rgb(215,208,0)" fg:x="37242" fg:w="18"/><text x="86.6884%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="86.4245%" y="901" width="0.0603%" height="15" fill="rgb(230,75,50)" fg:x="37236" fg:w="26"/><text x="86.6745%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="86.4199%" y="917" width="0.0696%" height="15" fill="rgb(246,180,39)" fg:x="37234" fg:w="30"/><text x="86.6699%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="86.4941%" y="869" width="0.0139%" height="15" fill="rgb(249,175,24)" fg:x="37266" fg:w="6"/><text x="86.7441%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="86.4941%" y="853" width="0.0139%" height="15" fill="rgb(247,176,22)" fg:x="37266" fg:w="6"/><text x="86.7441%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (5 samples, 0.01%)</title><rect x="86.5127%" y="853" width="0.0116%" height="15" fill="rgb(241,100,24)" fg:x="37274" fg:w="5"/><text x="86.7627%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="86.4895%" y="917" width="0.0487%" height="15" fill="rgb(233,4,35)" fg:x="37264" fg:w="21"/><text x="86.7395%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="86.4895%" y="901" width="0.0487%" height="15" fill="rgb(211,164,46)" fg:x="37264" fg:w="21"/><text x="86.7395%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.05%)</title><rect x="86.4895%" y="885" width="0.0487%" height="15" fill="rgb(242,99,53)" fg:x="37264" fg:w="21"/><text x="86.7395%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.03%)</title><rect x="86.5081%" y="869" width="0.0302%" height="15" fill="rgb(243,45,33)" fg:x="37272" fg:w="13"/><text x="86.7581%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::repeat (6 samples, 0.01%)</title><rect x="86.5243%" y="853" width="0.0139%" height="15" fill="rgb(217,55,21)" fg:x="37279" fg:w="6"/><text x="86.7743%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.01%)</title><rect x="86.5406%" y="917" width="0.0116%" height="15" fill="rgb(245,145,46)" fg:x="37286" fg:w="5"/><text x="86.7906%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="86.5406%" y="901" width="0.0116%" height="15" fill="rgb(215,112,45)" fg:x="37286" fg:w="5"/><text x="86.7906%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (68 samples, 0.16%)</title><rect x="86.4013%" y="997" width="0.1578%" height="15" fill="rgb(228,104,16)" fg:x="37226" fg:w="68"/><text x="86.6513%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68 samples, 0.16%)</title><rect x="86.4013%" y="981" width="0.1578%" height="15" fill="rgb(239,186,38)" fg:x="37226" fg:w="68"/><text x="86.6513%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67 samples, 0.16%)</title><rect x="86.4036%" y="965" width="0.1555%" height="15" fill="rgb(228,38,35)" fg:x="37227" fg:w="67"/><text x="86.6536%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (67 samples, 0.16%)</title><rect x="86.4036%" y="949" width="0.1555%" height="15" fill="rgb(251,42,40)" fg:x="37227" fg:w="67"/><text x="86.6536%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 0.16%)</title><rect x="86.4036%" y="933" width="0.1555%" height="15" fill="rgb(210,51,19)" fg:x="37227" fg:w="67"/><text x="86.6536%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="86.5731%" y="789" width="0.0116%" height="15" fill="rgb(236,94,42)" fg:x="37300" fg:w="5"/><text x="86.8231%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="86.5731%" y="773" width="0.0116%" height="15" fill="rgb(239,167,16)" fg:x="37300" fg:w="5"/><text x="86.8231%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="86.5731%" y="757" width="0.0116%" height="15" fill="rgb(252,175,31)" fg:x="37300" fg:w="5"/><text x="86.8231%" y="767.50"></text></g><g><title>&lt;move_binary_format::file_format::FieldDefinition as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="86.5661%" y="901" width="0.0209%" height="15" fill="rgb(206,166,30)" fg:x="37297" fg:w="9"/><text x="86.8161%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::TypeSignature as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="86.5661%" y="885" width="0.0209%" height="15" fill="rgb(206,209,37)" fg:x="37297" fg:w="9"/><text x="86.8161%" y="895.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="86.5661%" y="869" width="0.0209%" height="15" fill="rgb(226,91,4)" fg:x="37297" fg:w="9"/><text x="86.8161%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="86.5731%" y="853" width="0.0139%" height="15" fill="rgb(222,167,0)" fg:x="37300" fg:w="6"/><text x="86.8231%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="86.5731%" y="837" width="0.0139%" height="15" fill="rgb(211,70,14)" fg:x="37300" fg:w="6"/><text x="86.8231%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="86.5731%" y="821" width="0.0139%" height="15" fill="rgb(214,84,42)" fg:x="37300" fg:w="6"/><text x="86.8231%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.01%)</title><rect x="86.5731%" y="805" width="0.0139%" height="15" fill="rgb(235,157,37)" fg:x="37300" fg:w="6"/><text x="86.8231%" y="815.50"></text></g><g><title>&lt;move_binary_format::file_format::StructDefinition as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="86.5591%" y="997" width="0.0395%" height="15" fill="rgb(225,13,6)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="1007.50"></text></g><g><title>&lt;move_binary_format::file_format::StructFieldInformation as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="86.5591%" y="981" width="0.0395%" height="15" fill="rgb(205,202,1)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="86.5591%" y="965" width="0.0395%" height="15" fill="rgb(232,195,26)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.04%)</title><rect x="86.5591%" y="949" width="0.0395%" height="15" fill="rgb(208,102,26)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.04%)</title><rect x="86.5591%" y="933" width="0.0395%" height="15" fill="rgb(215,41,39)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.04%)</title><rect x="86.5591%" y="917" width="0.0395%" height="15" fill="rgb(247,139,11)" fg:x="37294" fg:w="17"/><text x="86.8091%" y="927.50"></text></g><g><title>&lt;move_binary_format::file_format::StructHandle as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="86.5986%" y="997" width="0.0139%" height="15" fill="rgb(243,99,6)" fg:x="37311" fg:w="6"/><text x="86.8486%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="86.5986%" y="981" width="0.0139%" height="15" fill="rgb(230,168,48)" fg:x="37311" fg:w="6"/><text x="86.8486%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="86.6009%" y="965" width="0.0116%" height="15" fill="rgb(238,227,13)" fg:x="37312" fg:w="5"/><text x="86.8509%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="86.6009%" y="949" width="0.0116%" height="15" fill="rgb(209,109,13)" fg:x="37312" fg:w="5"/><text x="86.8509%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="86.6009%" y="933" width="0.0116%" height="15" fill="rgb(228,195,1)" fg:x="37312" fg:w="5"/><text x="86.8509%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="86.6125%" y="997" width="0.0186%" height="15" fill="rgb(230,218,0)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="86.6125%" y="981" width="0.0186%" height="15" fill="rgb(206,1,45)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.02%)</title><rect x="86.6125%" y="965" width="0.0186%" height="15" fill="rgb(209,124,26)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.02%)</title><rect x="86.6125%" y="949" width="0.0186%" height="15" fill="rgb(220,59,8)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.02%)</title><rect x="86.6125%" y="933" width="0.0186%" height="15" fill="rgb(251,41,37)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="86.6125%" y="917" width="0.0186%" height="15" fill="rgb(239,152,21)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="86.6125%" y="901" width="0.0186%" height="15" fill="rgb(226,32,1)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="86.6125%" y="885" width="0.0186%" height="15" fill="rgb(230,154,36)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="86.6125%" y="869" width="0.0186%" height="15" fill="rgb(208,228,43)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="879.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="86.6125%" y="853" width="0.0186%" height="15" fill="rgb(214,203,3)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="863.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="86.6125%" y="837" width="0.0186%" height="15" fill="rgb(207,149,29)" fg:x="37317" fg:w="8"/><text x="86.8625%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="86.6380%" y="949" width="0.0116%" height="15" fill="rgb(250,105,7)" fg:x="37328" fg:w="5"/><text x="86.8880%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="86.6380%" y="933" width="0.0116%" height="15" fill="rgb(232,222,16)" fg:x="37328" fg:w="5"/><text x="86.8880%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="86.6380%" y="997" width="0.0209%" height="15" fill="rgb(209,32,24)" fg:x="37328" fg:w="9"/><text x="86.8880%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="86.6380%" y="981" width="0.0209%" height="15" fill="rgb(225,13,6)" fg:x="37328" fg:w="9"/><text x="86.8880%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="86.6380%" y="965" width="0.0209%" height="15" fill="rgb(245,226,26)" fg:x="37328" fg:w="9"/><text x="86.8880%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (280 samples, 0.65%)</title><rect x="86.0207%" y="1045" width="0.6499%" height="15" fill="rgb(229,178,27)" fg:x="37062" fg:w="280"/><text x="86.2707%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (280 samples, 0.65%)</title><rect x="86.0207%" y="1029" width="0.6499%" height="15" fill="rgb(205,227,28)" fg:x="37062" fg:w="280"/><text x="86.2707%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (279 samples, 0.65%)</title><rect x="86.0230%" y="1013" width="0.6476%" height="15" fill="rgb(210,191,45)" fg:x="37063" fg:w="279"/><text x="86.2730%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (283 samples, 0.66%)</title><rect x="86.0160%" y="1125" width="0.6568%" height="15" fill="rgb(206,124,16)" fg:x="37060" fg:w="283"/><text x="86.2660%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (283 samples, 0.66%)</title><rect x="86.0160%" y="1109" width="0.6568%" height="15" fill="rgb(210,162,0)" fg:x="37060" fg:w="283"/><text x="86.2660%" y="1119.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::_{{closure}} (283 samples, 0.66%)</title><rect x="86.0160%" y="1093" width="0.6568%" height="15" fill="rgb(211,54,38)" fg:x="37060" fg:w="283"/><text x="86.2660%" y="1103.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as core::clone::Clone&gt;::clone (283 samples, 0.66%)</title><rect x="86.0160%" y="1077" width="0.6568%" height="15" fill="rgb(248,192,3)" fg:x="37060" fg:w="283"/><text x="86.2660%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (282 samples, 0.65%)</title><rect x="86.0183%" y="1061" width="0.6545%" height="15" fill="rgb(233,187,18)" fg:x="37061" fg:w="282"/><text x="86.2683%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="86.6937%" y="1109" width="0.0116%" height="15" fill="rgb(237,208,14)" fg:x="37352" fg:w="5"/><text x="86.9437%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="86.6937%" y="1093" width="0.0116%" height="15" fill="rgb(212,77,1)" fg:x="37352" fg:w="5"/><text x="86.9437%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="86.6937%" y="1077" width="0.0116%" height="15" fill="rgb(210,163,22)" fg:x="37352" fg:w="5"/><text x="86.9437%" y="1087.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_friends (7 samples, 0.02%)</title><rect x="86.6937%" y="1125" width="0.0162%" height="15" fill="rgb(250,58,28)" fg:x="37352" fg:w="7"/><text x="86.9437%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module::deserialize_and_verify_module (8 samples, 0.02%)</title><rect x="86.7286%" y="1125" width="0.0186%" height="15" fill="rgb(254,28,41)" fg:x="37367" fg:w="8"/><text x="86.9786%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::check_natives (5 samples, 0.01%)</title><rect x="86.7355%" y="1109" width="0.0116%" height="15" fill="rgb(237,162,36)" fg:x="37370" fg:w="5"/><text x="86.9855%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::check_natives::check_natives_impl (5 samples, 0.01%)</title><rect x="86.7355%" y="1093" width="0.0116%" height="15" fill="rgb(232,56,6)" fg:x="37370" fg:w="5"/><text x="86.9855%" y="1103.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::intersection (5 samples, 0.01%)</title><rect x="86.7611%" y="1077" width="0.0116%" height="15" fill="rgb(216,127,42)" fg:x="37381" fg:w="5"/><text x="87.0111%" y="1087.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (9 samples, 0.02%)</title><rect x="86.8376%" y="933" width="0.0209%" height="15" fill="rgb(241,69,15)" fg:x="37414" fg:w="9"/><text x="87.0876%" y="943.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (8 samples, 0.02%)</title><rect x="86.8400%" y="917" width="0.0186%" height="15" fill="rgb(227,180,19)" fg:x="37415" fg:w="8"/><text x="87.0900%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (6 samples, 0.01%)</title><rect x="86.8446%" y="901" width="0.0139%" height="15" fill="rgb(231,188,29)" fg:x="37417" fg:w="6"/><text x="87.0946%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8 samples, 0.02%)</title><rect x="86.8585%" y="885" width="0.0186%" height="15" fill="rgb(224,176,27)" fg:x="37423" fg:w="8"/><text x="87.1085%" y="895.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (8 samples, 0.02%)</title><rect x="86.8585%" y="869" width="0.0186%" height="15" fill="rgb(249,214,19)" fg:x="37423" fg:w="8"/><text x="87.1085%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (21 samples, 0.05%)</title><rect x="86.8307%" y="949" width="0.0487%" height="15" fill="rgb(240,0,4)" fg:x="37411" fg:w="21"/><text x="87.0807%" y="959.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (9 samples, 0.02%)</title><rect x="86.8585%" y="933" width="0.0209%" height="15" fill="rgb(233,28,41)" fg:x="37423" fg:w="9"/><text x="87.1085%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (9 samples, 0.02%)</title><rect x="86.8585%" y="917" width="0.0209%" height="15" fill="rgb(220,90,51)" fg:x="37423" fg:w="9"/><text x="87.1085%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (9 samples, 0.02%)</title><rect x="86.8585%" y="901" width="0.0209%" height="15" fill="rgb(250,52,22)" fg:x="37423" fg:w="9"/><text x="87.1085%" y="911.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (5 samples, 0.01%)</title><rect x="86.8794%" y="949" width="0.0116%" height="15" fill="rgb(231,152,36)" fg:x="37432" fg:w="5"/><text x="87.1294%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 0.09%)</title><rect x="86.8075%" y="997" width="0.0905%" height="15" fill="rgb(250,218,4)" fg:x="37401" fg:w="39"/><text x="87.0575%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (36 samples, 0.08%)</title><rect x="86.8144%" y="981" width="0.0836%" height="15" fill="rgb(210,38,21)" fg:x="37404" fg:w="36"/><text x="87.0644%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 0.08%)</title><rect x="86.8168%" y="965" width="0.0812%" height="15" fill="rgb(230,75,13)" fg:x="37405" fg:w="35"/><text x="87.0668%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (43 samples, 0.10%)</title><rect x="86.8005%" y="1013" width="0.0998%" height="15" fill="rgb(250,68,53)" fg:x="37398" fg:w="43"/><text x="87.0505%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.02%)</title><rect x="86.9026%" y="997" width="0.0186%" height="15" fill="rgb(250,210,16)" fg:x="37442" fg:w="8"/><text x="87.1526%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (8 samples, 0.02%)</title><rect x="86.9026%" y="981" width="0.0186%" height="15" fill="rgb(240,132,5)" fg:x="37442" fg:w="8"/><text x="87.1526%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (8 samples, 0.02%)</title><rect x="86.9026%" y="965" width="0.0186%" height="15" fill="rgb(222,148,48)" fg:x="37442" fg:w="8"/><text x="87.1526%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (53 samples, 0.12%)</title><rect x="86.8005%" y="1045" width="0.1230%" height="15" fill="rgb(247,181,24)" fg:x="37398" fg:w="53"/><text x="87.0505%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (53 samples, 0.12%)</title><rect x="86.8005%" y="1029" width="0.1230%" height="15" fill="rgb(239,5,31)" fg:x="37398" fg:w="53"/><text x="87.0505%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.02%)</title><rect x="86.9026%" y="1013" width="0.0209%" height="15" fill="rgb(241,152,38)" fg:x="37442" fg:w="9"/><text x="87.1526%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="86.9467%" y="933" width="0.0209%" height="15" fill="rgb(246,200,37)" fg:x="37461" fg:w="9"/><text x="87.1967%" y="943.50"></text></g><g><title>core::cmp::min (10 samples, 0.02%)</title><rect x="87.0071%" y="837" width="0.0232%" height="15" fill="rgb(243,210,26)" fg:x="37487" fg:w="10"/><text x="87.2571%" y="847.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="87.0094%" y="821" width="0.0209%" height="15" fill="rgb(222,22,22)" fg:x="37488" fg:w="9"/><text x="87.2594%" y="831.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.02%)</title><rect x="87.0140%" y="805" width="0.0162%" height="15" fill="rgb(208,129,28)" fg:x="37490" fg:w="7"/><text x="87.2640%" y="815.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (24 samples, 0.06%)</title><rect x="86.9769%" y="917" width="0.0557%" height="15" fill="rgb(254,169,28)" fg:x="37474" fg:w="24"/><text x="87.2269%" y="927.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (24 samples, 0.06%)</title><rect x="86.9769%" y="901" width="0.0557%" height="15" fill="rgb(225,45,17)" fg:x="37474" fg:w="24"/><text x="87.2269%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (18 samples, 0.04%)</title><rect x="86.9908%" y="885" width="0.0418%" height="15" fill="rgb(232,199,2)" fg:x="37480" fg:w="18"/><text x="87.2408%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (18 samples, 0.04%)</title><rect x="86.9908%" y="869" width="0.0418%" height="15" fill="rgb(235,33,40)" fg:x="37480" fg:w="18"/><text x="87.2408%" y="879.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (18 samples, 0.04%)</title><rect x="86.9908%" y="853" width="0.0418%" height="15" fill="rgb(237,89,50)" fg:x="37480" fg:w="18"/><text x="87.2408%" y="863.50"></text></g><g><title>core::cmp::min (5 samples, 0.01%)</title><rect x="87.0674%" y="837" width="0.0116%" height="15" fill="rgb(238,126,5)" fg:x="37513" fg:w="5"/><text x="87.3174%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (16 samples, 0.04%)</title><rect x="87.0465%" y="869" width="0.0371%" height="15" fill="rgb(247,214,42)" fg:x="37504" fg:w="16"/><text x="87.2965%" y="879.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.03%)</title><rect x="87.0489%" y="853" width="0.0348%" height="15" fill="rgb(238,60,45)" fg:x="37505" fg:w="15"/><text x="87.2989%" y="863.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (52 samples, 0.12%)</title><rect x="86.9676%" y="933" width="0.1207%" height="15" fill="rgb(225,69,44)" fg:x="37470" fg:w="52"/><text x="87.2176%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (24 samples, 0.06%)</title><rect x="87.0326%" y="917" width="0.0557%" height="15" fill="rgb(241,13,44)" fg:x="37498" fg:w="24"/><text x="87.2826%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (23 samples, 0.05%)</title><rect x="87.0349%" y="901" width="0.0534%" height="15" fill="rgb(227,121,22)" fg:x="37499" fg:w="23"/><text x="87.2849%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (20 samples, 0.05%)</title><rect x="87.0419%" y="885" width="0.0464%" height="15" fill="rgb(231,160,23)" fg:x="37502" fg:w="20"/><text x="87.2919%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (69 samples, 0.16%)</title><rect x="86.9467%" y="965" width="0.1601%" height="15" fill="rgb(250,179,43)" fg:x="37461" fg:w="69"/><text x="87.1967%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (69 samples, 0.16%)</title><rect x="86.9467%" y="949" width="0.1601%" height="15" fill="rgb(233,54,46)" fg:x="37461" fg:w="69"/><text x="87.1967%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (74 samples, 0.17%)</title><rect x="86.9374%" y="981" width="0.1718%" height="15" fill="rgb(247,120,42)" fg:x="37457" fg:w="74"/><text x="87.1874%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (77 samples, 0.18%)</title><rect x="86.9328%" y="997" width="0.1787%" height="15" fill="rgb(221,219,12)" fg:x="37455" fg:w="77"/><text x="87.1828%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (82 samples, 0.19%)</title><rect x="86.9328%" y="1013" width="0.1903%" height="15" fill="rgb(211,126,8)" fg:x="37455" fg:w="82"/><text x="87.1828%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::insert (5 samples, 0.01%)</title><rect x="87.1115%" y="997" width="0.0116%" height="15" fill="rgb(218,154,33)" fg:x="37532" fg:w="5"/><text x="87.3615%" y="1007.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (83 samples, 0.19%)</title><rect x="86.9328%" y="1029" width="0.1926%" height="15" fill="rgb(212,199,16)" fg:x="37455" fg:w="83"/><text x="87.1828%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.02%)</title><rect x="87.1440%" y="1013" width="0.0186%" height="15" fill="rgb(236,215,46)" fg:x="37546" fg:w="8"/><text x="87.3940%" y="1023.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="87.1463%" y="997" width="0.0162%" height="15" fill="rgb(232,32,22)" fg:x="37547" fg:w="7"/><text x="87.3963%" y="1007.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.05%)</title><rect x="87.1254%" y="1029" width="0.0464%" height="15" fill="rgb(234,79,15)" fg:x="37538" fg:w="20"/><text x="87.3754%" y="1039.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="87.1742%" y="997" width="0.0116%" height="15" fill="rgb(235,187,47)" fg:x="37559" fg:w="5"/><text x="87.4242%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.02%)</title><rect x="87.1719%" y="1029" width="0.0209%" height="15" fill="rgb(244,69,37)" fg:x="37558" fg:w="9"/><text x="87.4219%" y="1039.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="87.1742%" y="1013" width="0.0186%" height="15" fill="rgb(249,140,25)" fg:x="37559" fg:w="8"/><text x="87.4242%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="87.2090%" y="853" width="0.0139%" height="15" fill="rgb(213,69,8)" fg:x="37574" fg:w="6"/><text x="87.4590%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (5 samples, 0.01%)</title><rect x="87.2113%" y="837" width="0.0116%" height="15" fill="rgb(220,136,2)" fg:x="37575" fg:w="5"/><text x="87.4613%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="87.2090%" y="869" width="0.0325%" height="15" fill="rgb(237,50,36)" fg:x="37574" fg:w="14"/><text x="87.4590%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="87.2229%" y="853" width="0.0186%" height="15" fill="rgb(226,18,11)" fg:x="37580" fg:w="8"/><text x="87.4729%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="87.2229%" y="837" width="0.0186%" height="15" fill="rgb(243,156,2)" fg:x="37580" fg:w="8"/><text x="87.4729%" y="847.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (8 samples, 0.02%)</title><rect x="87.2229%" y="821" width="0.0186%" height="15" fill="rgb(218,8,34)" fg:x="37580" fg:w="8"/><text x="87.4729%" y="831.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (8 samples, 0.02%)</title><rect x="87.2229%" y="805" width="0.0186%" height="15" fill="rgb(250,94,35)" fg:x="37580" fg:w="8"/><text x="87.4729%" y="815.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (8 samples, 0.02%)</title><rect x="87.2229%" y="789" width="0.0186%" height="15" fill="rgb(229,127,21)" fg:x="37580" fg:w="8"/><text x="87.4729%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="87.2438%" y="821" width="0.0186%" height="15" fill="rgb(234,49,5)" fg:x="37589" fg:w="8"/><text x="87.4938%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.06%)</title><rect x="87.2067%" y="901" width="0.0580%" height="15" fill="rgb(248,12,16)" fg:x="37573" fg:w="25"/><text x="87.4567%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.06%)</title><rect x="87.2067%" y="885" width="0.0580%" height="15" fill="rgb(208,220,31)" fg:x="37573" fg:w="25"/><text x="87.4567%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="87.2438%" y="869" width="0.0209%" height="15" fill="rgb(243,184,0)" fg:x="37589" fg:w="9"/><text x="87.4938%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="87.2438%" y="853" width="0.0209%" height="15" fill="rgb(217,38,21)" fg:x="37589" fg:w="9"/><text x="87.4938%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (9 samples, 0.02%)</title><rect x="87.2438%" y="837" width="0.0209%" height="15" fill="rgb(239,120,45)" fg:x="37589" fg:w="9"/><text x="87.4938%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="87.2647%" y="885" width="0.0116%" height="15" fill="rgb(235,33,2)" fg:x="37598" fg:w="5"/><text x="87.5147%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (5 samples, 0.01%)</title><rect x="87.2647%" y="869" width="0.0116%" height="15" fill="rgb(249,161,5)" fg:x="37598" fg:w="5"/><text x="87.5147%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="87.2647%" y="901" width="0.0232%" height="15" fill="rgb(250,165,48)" fg:x="37598" fg:w="10"/><text x="87.5147%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="87.2763%" y="885" width="0.0116%" height="15" fill="rgb(221,23,45)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="87.2763%" y="869" width="0.0116%" height="15" fill="rgb(217,108,46)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="879.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (5 samples, 0.01%)</title><rect x="87.2763%" y="853" width="0.0116%" height="15" fill="rgb(254,26,35)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="863.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (5 samples, 0.01%)</title><rect x="87.2763%" y="837" width="0.0116%" height="15" fill="rgb(218,223,28)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="847.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (5 samples, 0.01%)</title><rect x="87.2763%" y="821" width="0.0116%" height="15" fill="rgb(242,27,47)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="831.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (5 samples, 0.01%)</title><rect x="87.2763%" y="805" width="0.0116%" height="15" fill="rgb(218,39,35)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="87.2763%" y="789" width="0.0116%" height="15" fill="rgb(232,127,16)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.01%)</title><rect x="87.2763%" y="773" width="0.0116%" height="15" fill="rgb(231,219,51)" fg:x="37603" fg:w="5"/><text x="87.5263%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 0.09%)</title><rect x="87.2067%" y="965" width="0.0905%" height="15" fill="rgb(217,220,46)" fg:x="37573" fg:w="39"/><text x="87.4567%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.2067%" y="949" width="0.0905%" height="15" fill="rgb(230,75,1)" fg:x="37573" fg:w="39"/><text x="87.4567%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.2067%" y="933" width="0.0905%" height="15" fill="rgb(218,2,8)" fg:x="37573" fg:w="39"/><text x="87.4567%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.2067%" y="917" width="0.0905%" height="15" fill="rgb(206,111,30)" fg:x="37573" fg:w="39"/><text x="87.4567%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.10%)</title><rect x="87.2044%" y="1013" width="0.1021%" height="15" fill="rgb(209,135,6)" fg:x="37572" fg:w="44"/><text x="87.4544%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (44 samples, 0.10%)</title><rect x="87.2044%" y="997" width="0.1021%" height="15" fill="rgb(205,169,10)" fg:x="37572" fg:w="44"/><text x="87.4544%" y="1007.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (43 samples, 0.10%)</title><rect x="87.2067%" y="981" width="0.0998%" height="15" fill="rgb(212,204,38)" fg:x="37573" fg:w="43"/><text x="87.4567%" y="991.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="87.3135%" y="901" width="0.0139%" height="15" fill="rgb(205,199,14)" fg:x="37619" fg:w="6"/><text x="87.5635%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="87.3135%" y="917" width="0.0255%" height="15" fill="rgb(212,4,6)" fg:x="37619" fg:w="11"/><text x="87.5635%" y="927.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (7 samples, 0.02%)</title><rect x="87.3459%" y="885" width="0.0162%" height="15" fill="rgb(250,15,10)" fg:x="37633" fg:w="7"/><text x="87.5959%" y="895.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="87.3459%" y="869" width="0.0162%" height="15" fill="rgb(212,49,51)" fg:x="37633" fg:w="7"/><text x="87.5959%" y="879.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (193 samples, 0.45%)</title><rect x="86.9235%" y="1045" width="0.4480%" height="15" fill="rgb(235,21,9)" fg:x="37451" fg:w="193"/><text x="87.1735%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (73 samples, 0.17%)</title><rect x="87.2020%" y="1029" width="0.1694%" height="15" fill="rgb(251,31,32)" fg:x="37571" fg:w="73"/><text x="87.4520%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (28 samples, 0.06%)</title><rect x="87.3065%" y="1013" width="0.0650%" height="15" fill="rgb(246,23,9)" fg:x="37616" fg:w="28"/><text x="87.5565%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (28 samples, 0.06%)</title><rect x="87.3065%" y="997" width="0.0650%" height="15" fill="rgb(225,216,14)" fg:x="37616" fg:w="28"/><text x="87.5565%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (26 samples, 0.06%)</title><rect x="87.3111%" y="981" width="0.0603%" height="15" fill="rgb(215,200,26)" fg:x="37618" fg:w="26"/><text x="87.5611%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (25 samples, 0.06%)</title><rect x="87.3135%" y="965" width="0.0580%" height="15" fill="rgb(237,130,47)" fg:x="37619" fg:w="25"/><text x="87.5635%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (25 samples, 0.06%)</title><rect x="87.3135%" y="949" width="0.0580%" height="15" fill="rgb(247,74,14)" fg:x="37619" fg:w="25"/><text x="87.5635%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (25 samples, 0.06%)</title><rect x="87.3135%" y="933" width="0.0580%" height="15" fill="rgb(254,97,46)" fg:x="37619" fg:w="25"/><text x="87.5635%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.03%)</title><rect x="87.3390%" y="917" width="0.0325%" height="15" fill="rgb(234,191,1)" fg:x="37630" fg:w="14"/><text x="87.5890%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.03%)</title><rect x="87.3390%" y="901" width="0.0325%" height="15" fill="rgb(215,165,14)" fg:x="37630" fg:w="14"/><text x="87.5890%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="87.3715%" y="1045" width="0.0116%" height="15" fill="rgb(230,182,6)" fg:x="37644" fg:w="5"/><text x="87.6215%" y="1055.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="87.3715%" y="1029" width="0.0116%" height="15" fill="rgb(210,127,39)" fg:x="37644" fg:w="5"/><text x="87.6215%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (8 samples, 0.02%)</title><rect x="87.3854%" y="1045" width="0.0186%" height="15" fill="rgb(223,212,51)" fg:x="37650" fg:w="8"/><text x="87.6354%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.02%)</title><rect x="87.3854%" y="1029" width="0.0186%" height="15" fill="rgb(226,176,43)" fg:x="37650" fg:w="8"/><text x="87.6354%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.02%)</title><rect x="87.3854%" y="1013" width="0.0186%" height="15" fill="rgb(222,155,4)" fg:x="37650" fg:w="8"/><text x="87.6354%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (7 samples, 0.02%)</title><rect x="87.3877%" y="997" width="0.0162%" height="15" fill="rgb(215,149,7)" fg:x="37651" fg:w="7"/><text x="87.6377%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.02%)</title><rect x="87.4550%" y="677" width="0.0209%" height="15" fill="rgb(252,199,23)" fg:x="37680" fg:w="9"/><text x="87.7050%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.05%)</title><rect x="87.4318%" y="741" width="0.0464%" height="15" fill="rgb(245,52,29)" fg:x="37670" fg:w="20"/><text x="87.6818%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.03%)</title><rect x="87.4457%" y="725" width="0.0325%" height="15" fill="rgb(221,228,19)" fg:x="37676" fg:w="14"/><text x="87.6957%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.03%)</title><rect x="87.4457%" y="709" width="0.0325%" height="15" fill="rgb(253,101,6)" fg:x="37676" fg:w="14"/><text x="87.6957%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.03%)</title><rect x="87.4457%" y="693" width="0.0325%" height="15" fill="rgb(211,130,8)" fg:x="37676" fg:w="14"/><text x="87.6957%" y="703.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (22 samples, 0.05%)</title><rect x="87.4318%" y="789" width="0.0511%" height="15" fill="rgb(238,37,53)" fg:x="37670" fg:w="22"/><text x="87.6818%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.05%)</title><rect x="87.4318%" y="773" width="0.0511%" height="15" fill="rgb(235,145,5)" fg:x="37670" fg:w="22"/><text x="87.6818%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (22 samples, 0.05%)</title><rect x="87.4318%" y="757" width="0.0511%" height="15" fill="rgb(244,12,43)" fg:x="37670" fg:w="22"/><text x="87.6818%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="87.4156%" y="885" width="0.0789%" height="15" fill="rgb(246,195,24)" fg:x="37663" fg:w="34"/><text x="87.6656%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.07%)</title><rect x="87.4225%" y="869" width="0.0720%" height="15" fill="rgb(235,163,6)" fg:x="37666" fg:w="31"/><text x="87.6725%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (30 samples, 0.07%)</title><rect x="87.4249%" y="853" width="0.0696%" height="15" fill="rgb(236,218,17)" fg:x="37667" fg:w="30"/><text x="87.6749%" y="863.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (30 samples, 0.07%)</title><rect x="87.4249%" y="837" width="0.0696%" height="15" fill="rgb(235,12,38)" fg:x="37667" fg:w="30"/><text x="87.6749%" y="847.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (29 samples, 0.07%)</title><rect x="87.4272%" y="821" width="0.0673%" height="15" fill="rgb(225,195,33)" fg:x="37668" fg:w="29"/><text x="87.6772%" y="831.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (29 samples, 0.07%)</title><rect x="87.4272%" y="805" width="0.0673%" height="15" fill="rgb(238,54,35)" fg:x="37668" fg:w="29"/><text x="87.6772%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="87.5177%" y="821" width="0.0116%" height="15" fill="rgb(238,33,7)" fg:x="37707" fg:w="5"/><text x="87.7677%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (10 samples, 0.02%)</title><rect x="87.5107%" y="853" width="0.0232%" height="15" fill="rgb(245,5,14)" fg:x="37704" fg:w="10"/><text x="87.7607%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="87.5107%" y="837" width="0.0232%" height="15" fill="rgb(251,95,31)" fg:x="37704" fg:w="10"/><text x="87.7607%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="87.5107%" y="885" width="0.0255%" height="15" fill="rgb(222,15,46)" fg:x="37704" fg:w="11"/><text x="87.7607%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="87.5107%" y="869" width="0.0255%" height="15" fill="rgb(226,182,24)" fg:x="37704" fg:w="11"/><text x="87.7607%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (57 samples, 0.13%)</title><rect x="87.4063%" y="917" width="0.1323%" height="15" fill="rgb(229,105,41)" fg:x="37659" fg:w="57"/><text x="87.6563%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (57 samples, 0.13%)</title><rect x="87.4063%" y="901" width="0.1323%" height="15" fill="rgb(216,99,53)" fg:x="37659" fg:w="57"/><text x="87.6563%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (5 samples, 0.01%)</title><rect x="87.5432%" y="773" width="0.0116%" height="15" fill="rgb(253,26,20)" fg:x="37718" fg:w="5"/><text x="87.7932%" y="783.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (7 samples, 0.02%)</title><rect x="87.5432%" y="821" width="0.0162%" height="15" fill="rgb(249,155,28)" fg:x="37718" fg:w="7"/><text x="87.7932%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="87.5432%" y="805" width="0.0162%" height="15" fill="rgb(241,221,2)" fg:x="37718" fg:w="7"/><text x="87.7932%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.02%)</title><rect x="87.5432%" y="789" width="0.0162%" height="15" fill="rgb(219,124,6)" fg:x="37718" fg:w="7"/><text x="87.7932%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="87.5386%" y="917" width="0.0232%" height="15" fill="rgb(233,37,6)" fg:x="37716" fg:w="10"/><text x="87.7886%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="87.5432%" y="901" width="0.0186%" height="15" fill="rgb(238,20,14)" fg:x="37718" fg:w="8"/><text x="87.7932%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="87.5432%" y="885" width="0.0186%" height="15" fill="rgb(232,106,27)" fg:x="37718" fg:w="8"/><text x="87.7932%" y="895.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (8 samples, 0.02%)</title><rect x="87.5432%" y="869" width="0.0186%" height="15" fill="rgb(246,157,24)" fg:x="37718" fg:w="8"/><text x="87.7932%" y="879.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (8 samples, 0.02%)</title><rect x="87.5432%" y="853" width="0.0186%" height="15" fill="rgb(214,153,10)" fg:x="37718" fg:w="8"/><text x="87.7932%" y="863.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (8 samples, 0.02%)</title><rect x="87.5432%" y="837" width="0.0186%" height="15" fill="rgb(212,94,6)" fg:x="37718" fg:w="8"/><text x="87.7932%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (74 samples, 0.17%)</title><rect x="87.4063%" y="981" width="0.1718%" height="15" fill="rgb(254,25,27)" fg:x="37659" fg:w="74"/><text x="87.6563%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (74 samples, 0.17%)</title><rect x="87.4063%" y="965" width="0.1718%" height="15" fill="rgb(250,43,52)" fg:x="37659" fg:w="74"/><text x="87.6563%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.17%)</title><rect x="87.4063%" y="949" width="0.1718%" height="15" fill="rgb(221,226,40)" fg:x="37659" fg:w="74"/><text x="87.6563%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (74 samples, 0.17%)</title><rect x="87.4063%" y="933" width="0.1718%" height="15" fill="rgb(235,162,34)" fg:x="37659" fg:w="74"/><text x="87.6563%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="87.5618%" y="917" width="0.0162%" height="15" fill="rgb(239,24,26)" fg:x="37726" fg:w="7"/><text x="87.8118%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="87.5618%" y="901" width="0.0162%" height="15" fill="rgb(244,226,11)" fg:x="37726" fg:w="7"/><text x="87.8118%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="87.5618%" y="885" width="0.0162%" height="15" fill="rgb(225,23,10)" fg:x="37726" fg:w="7"/><text x="87.8118%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="87.5618%" y="869" width="0.0162%" height="15" fill="rgb(249,125,6)" fg:x="37726" fg:w="7"/><text x="87.8118%" y="879.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (79 samples, 0.18%)</title><rect x="87.4063%" y="997" width="0.1834%" height="15" fill="rgb(246,212,12)" fg:x="37659" fg:w="79"/><text x="87.6563%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.19%)</title><rect x="87.4063%" y="1029" width="0.1880%" height="15" fill="rgb(230,43,32)" fg:x="37659" fg:w="81"/><text x="87.6563%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (81 samples, 0.19%)</title><rect x="87.4063%" y="1013" width="0.1880%" height="15" fill="rgb(210,95,23)" fg:x="37659" fg:w="81"/><text x="87.6563%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.01%)</title><rect x="87.6036%" y="853" width="0.0116%" height="15" fill="rgb(229,103,33)" fg:x="37744" fg:w="5"/><text x="87.8536%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="87.6036%" y="837" width="0.0116%" height="15" fill="rgb(222,104,27)" fg:x="37744" fg:w="5"/><text x="87.8536%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="87.6036%" y="821" width="0.0116%" height="15" fill="rgb(239,221,23)" fg:x="37744" fg:w="5"/><text x="87.8536%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="87.6036%" y="805" width="0.0116%" height="15" fill="rgb(222,98,21)" fg:x="37744" fg:w="5"/><text x="87.8536%" y="815.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="87.6013%" y="901" width="0.0162%" height="15" fill="rgb(231,101,20)" fg:x="37743" fg:w="7"/><text x="87.8513%" y="911.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.02%)</title><rect x="87.6013%" y="885" width="0.0162%" height="15" fill="rgb(215,150,22)" fg:x="37743" fg:w="7"/><text x="87.8513%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.01%)</title><rect x="87.6036%" y="869" width="0.0139%" height="15" fill="rgb(248,3,34)" fg:x="37744" fg:w="6"/><text x="87.8536%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="87.6013%" y="917" width="0.0232%" height="15" fill="rgb(220,141,21)" fg:x="37743" fg:w="10"/><text x="87.8513%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.04%)</title><rect x="87.6013%" y="933" width="0.0371%" height="15" fill="rgb(223,41,48)" fg:x="37743" fg:w="16"/><text x="87.8513%" y="943.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (383 samples, 0.89%)</title><rect x="86.7727%" y="1077" width="0.8889%" height="15" fill="rgb(247,12,5)" fg:x="37386" fg:w="383"/><text x="87.0227%" y="1087.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (378 samples, 0.88%)</title><rect x="86.7843%" y="1061" width="0.8773%" height="15" fill="rgb(206,173,10)" fg:x="37391" fg:w="378"/><text x="87.0343%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (111 samples, 0.26%)</title><rect x="87.4040%" y="1045" width="0.2576%" height="15" fill="rgb(233,214,37)" fg:x="37658" fg:w="111"/><text x="87.6540%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (29 samples, 0.07%)</title><rect x="87.5943%" y="1029" width="0.0673%" height="15" fill="rgb(238,86,43)" fg:x="37740" fg:w="29"/><text x="87.8443%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (29 samples, 0.07%)</title><rect x="87.5943%" y="1013" width="0.0673%" height="15" fill="rgb(212,182,8)" fg:x="37740" fg:w="29"/><text x="87.8443%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (28 samples, 0.06%)</title><rect x="87.5966%" y="997" width="0.0650%" height="15" fill="rgb(240,91,47)" fg:x="37741" fg:w="28"/><text x="87.8466%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.06%)</title><rect x="87.6013%" y="981" width="0.0603%" height="15" fill="rgb(209,138,26)" fg:x="37743" fg:w="26"/><text x="87.8513%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.06%)</title><rect x="87.6013%" y="965" width="0.0603%" height="15" fill="rgb(231,163,20)" fg:x="37743" fg:w="26"/><text x="87.8513%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.06%)</title><rect x="87.6013%" y="949" width="0.0603%" height="15" fill="rgb(214,91,54)" fg:x="37743" fg:w="26"/><text x="87.8513%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="87.6384%" y="933" width="0.0232%" height="15" fill="rgb(230,32,17)" fg:x="37759" fg:w="10"/><text x="87.8884%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="87.6384%" y="917" width="0.0232%" height="15" fill="rgb(231,34,34)" fg:x="37759" fg:w="10"/><text x="87.8884%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (12 samples, 0.03%)</title><rect x="87.6639%" y="933" width="0.0279%" height="15" fill="rgb(224,228,27)" fg:x="37770" fg:w="12"/><text x="87.9139%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (13 samples, 0.03%)</title><rect x="87.6639%" y="997" width="0.0302%" height="15" fill="rgb(219,35,40)" fg:x="37770" fg:w="13"/><text x="87.9139%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (13 samples, 0.03%)</title><rect x="87.6639%" y="981" width="0.0302%" height="15" fill="rgb(234,42,8)" fg:x="37770" fg:w="13"/><text x="87.9139%" y="991.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.03%)</title><rect x="87.6639%" y="965" width="0.0302%" height="15" fill="rgb(226,75,22)" fg:x="37770" fg:w="13"/><text x="87.9139%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (13 samples, 0.03%)</title><rect x="87.6639%" y="949" width="0.0302%" height="15" fill="rgb(242,203,28)" fg:x="37770" fg:w="13"/><text x="87.9139%" y="959.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="87.6941%" y="997" width="0.0139%" height="15" fill="rgb(221,3,9)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,())&gt; (6 samples, 0.01%)</title><rect x="87.6941%" y="981" width="0.0139%" height="15" fill="rgb(214,34,31)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (6 samples, 0.01%)</title><rect x="87.6941%" y="965" width="0.0139%" height="15" fill="rgb(252,119,15)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (6 samples, 0.01%)</title><rect x="87.6941%" y="949" width="0.0139%" height="15" fill="rgb(244,224,31)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (6 samples, 0.01%)</title><rect x="87.6941%" y="933" width="0.0139%" height="15" fill="rgb(215,8,51)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="943.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.01%)</title><rect x="87.6941%" y="917" width="0.0139%" height="15" fill="rgb(207,24,1)" fg:x="37783" fg:w="6"/><text x="87.9441%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt; (21 samples, 0.05%)</title><rect x="87.6616%" y="1077" width="0.0487%" height="15" fill="rgb(245,90,0)" fg:x="37769" fg:w="21"/><text x="87.9116%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (21 samples, 0.05%)</title><rect x="87.6616%" y="1061" width="0.0487%" height="15" fill="rgb(246,43,48)" fg:x="37769" fg:w="21"/><text x="87.9116%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="87.6616%" y="1045" width="0.0487%" height="15" fill="rgb(252,218,10)" fg:x="37769" fg:w="21"/><text x="87.9116%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (20 samples, 0.05%)</title><rect x="87.6639%" y="1029" width="0.0464%" height="15" fill="rgb(231,24,35)" fg:x="37770" fg:w="20"/><text x="87.9139%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="87.6639%" y="1013" width="0.0464%" height="15" fill="rgb(225,66,19)" fg:x="37770" fg:w="20"/><text x="87.9139%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.01%)</title><rect x="87.7219%" y="869" width="0.0139%" height="15" fill="rgb(214,96,51)" fg:x="37795" fg:w="6"/><text x="87.9719%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="87.7219%" y="853" width="0.0139%" height="15" fill="rgb(251,151,47)" fg:x="37795" fg:w="6"/><text x="87.9719%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.01%)</title><rect x="87.7219%" y="837" width="0.0139%" height="15" fill="rgb(236,79,14)" fg:x="37795" fg:w="6"/><text x="87.9719%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="87.7219%" y="821" width="0.0139%" height="15" fill="rgb(210,205,11)" fg:x="37795" fg:w="6"/><text x="87.9719%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="87.7173%" y="965" width="0.0302%" height="15" fill="rgb(233,142,53)" fg:x="37793" fg:w="13"/><text x="87.9673%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="87.7219%" y="949" width="0.0255%" height="15" fill="rgb(212,116,48)" fg:x="37795" fg:w="11"/><text x="87.9719%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.03%)</title><rect x="87.7219%" y="933" width="0.0255%" height="15" fill="rgb(234,55,33)" fg:x="37795" fg:w="11"/><text x="87.9719%" y="943.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (11 samples, 0.03%)</title><rect x="87.7219%" y="917" width="0.0255%" height="15" fill="rgb(253,92,27)" fg:x="37795" fg:w="11"/><text x="87.9719%" y="927.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (11 samples, 0.03%)</title><rect x="87.7219%" y="901" width="0.0255%" height="15" fill="rgb(220,7,35)" fg:x="37795" fg:w="11"/><text x="87.9719%" y="911.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (11 samples, 0.03%)</title><rect x="87.7219%" y="885" width="0.0255%" height="15" fill="rgb(246,124,6)" fg:x="37795" fg:w="11"/><text x="87.9719%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="87.7498%" y="901" width="0.0325%" height="15" fill="rgb(212,111,51)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.03%)</title><rect x="87.7498%" y="885" width="0.0325%" height="15" fill="rgb(253,116,7)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.03%)</title><rect x="87.7498%" y="869" width="0.0325%" height="15" fill="rgb(213,145,18)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="879.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.03%)</title><rect x="87.7498%" y="853" width="0.0325%" height="15" fill="rgb(219,149,7)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="863.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.03%)</title><rect x="87.7498%" y="837" width="0.0325%" height="15" fill="rgb(225,156,20)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="847.50"></text></g><g><title>_int_realloc (14 samples, 0.03%)</title><rect x="87.7498%" y="821" width="0.0325%" height="15" fill="rgb(211,98,19)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="831.50"></text></g><g><title>_int_malloc (14 samples, 0.03%)</title><rect x="87.7498%" y="805" width="0.0325%" height="15" fill="rgb(231,192,31)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="815.50"></text></g><g><title>malloc_consolidate (14 samples, 0.03%)</title><rect x="87.7498%" y="789" width="0.0325%" height="15" fill="rgb(249,95,19)" fg:x="37807" fg:w="14"/><text x="87.9998%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.08%)</title><rect x="87.7127%" y="997" width="0.0789%" height="15" fill="rgb(247,101,36)" fg:x="37791" fg:w="34"/><text x="87.9627%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (34 samples, 0.08%)</title><rect x="87.7127%" y="981" width="0.0789%" height="15" fill="rgb(221,45,43)" fg:x="37791" fg:w="34"/><text x="87.9627%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="87.7498%" y="965" width="0.0418%" height="15" fill="rgb(220,42,1)" fg:x="37807" fg:w="18"/><text x="87.9998%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.04%)</title><rect x="87.7498%" y="949" width="0.0418%" height="15" fill="rgb(236,19,24)" fg:x="37807" fg:w="18"/><text x="87.9998%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.04%)</title><rect x="87.7498%" y="933" width="0.0418%" height="15" fill="rgb(225,192,6)" fg:x="37807" fg:w="18"/><text x="87.9998%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.04%)</title><rect x="87.7498%" y="917" width="0.0418%" height="15" fill="rgb(242,30,19)" fg:x="37807" fg:w="18"/><text x="87.9998%" y="927.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (39 samples, 0.09%)</title><rect x="87.7127%" y="1077" width="0.0905%" height="15" fill="rgb(240,36,6)" fg:x="37791" fg:w="39"/><text x="87.9627%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 0.09%)</title><rect x="87.7127%" y="1061" width="0.0905%" height="15" fill="rgb(246,40,28)" fg:x="37791" fg:w="39"/><text x="87.9627%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.7127%" y="1045" width="0.0905%" height="15" fill="rgb(225,155,33)" fg:x="37791" fg:w="39"/><text x="87.9627%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.7127%" y="1029" width="0.0905%" height="15" fill="rgb(240,65,18)" fg:x="37791" fg:w="39"/><text x="87.9627%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 0.09%)</title><rect x="87.7127%" y="1013" width="0.0905%" height="15" fill="rgb(217,0,48)" fg:x="37791" fg:w="39"/><text x="87.9627%" y="1023.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (458 samples, 1.06%)</title><rect x="86.7494%" y="1093" width="1.0630%" height="15" fill="rgb(217,80,15)" fg:x="37376" fg:w="458"/><text x="86.9994%" y="1103.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module (459 samples, 1.07%)</title><rect x="86.7494%" y="1109" width="1.0653%" height="15" fill="rgb(253,43,51)" fg:x="37376" fg:w="459"/><text x="86.9994%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations (464 samples, 1.08%)</title><rect x="86.7471%" y="1125" width="1.0769%" height="15" fill="rgb(246,60,4)" fg:x="37375" fg:w="464"/><text x="86.9971%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="87.8473%" y="1093" width="0.0116%" height="15" fill="rgb(230,40,54)" fg:x="37849" fg:w="5"/><text x="88.0973%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (9 samples, 0.02%)</title><rect x="87.9378%" y="997" width="0.0209%" height="15" fill="rgb(208,20,44)" fg:x="37888" fg:w="9"/><text x="88.1878%" y="1007.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.02%)</title><rect x="87.9378%" y="981" width="0.0209%" height="15" fill="rgb(230,22,22)" fg:x="37888" fg:w="9"/><text x="88.1878%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (8 samples, 0.02%)</title><rect x="87.9401%" y="965" width="0.0186%" height="15" fill="rgb(207,57,4)" fg:x="37889" fg:w="8"/><text x="88.1901%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="87.9308%" y="1029" width="0.0302%" height="15" fill="rgb(242,130,33)" fg:x="37885" fg:w="13"/><text x="88.1808%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (11 samples, 0.03%)</title><rect x="87.9355%" y="1013" width="0.0255%" height="15" fill="rgb(218,66,43)" fg:x="37887" fg:w="11"/><text x="88.1855%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="87.9912%" y="997" width="0.0116%" height="15" fill="rgb(236,105,16)" fg:x="37911" fg:w="5"/><text x="88.2412%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="87.9703%" y="1029" width="0.0395%" height="15" fill="rgb(230,46,15)" fg:x="37902" fg:w="17"/><text x="88.2203%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="87.9865%" y="1013" width="0.0232%" height="15" fill="rgb(251,172,40)" fg:x="37909" fg:w="10"/><text x="88.2365%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.01%)</title><rect x="88.0330%" y="1013" width="0.0139%" height="15" fill="rgb(225,217,32)" fg:x="37929" fg:w="6"/><text x="88.2830%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.01%)</title><rect x="88.0353%" y="997" width="0.0116%" height="15" fill="rgb(243,10,29)" fg:x="37930" fg:w="5"/><text x="88.2853%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="88.0097%" y="1029" width="0.0418%" height="15" fill="rgb(207,102,10)" fg:x="37919" fg:w="18"/><text x="88.2597%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (8 samples, 0.02%)</title><rect x="88.1328%" y="917" width="0.0186%" height="15" fill="rgb(241,125,5)" fg:x="37972" fg:w="8"/><text x="88.3828%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;],A&gt;::assume_init (28 samples, 0.06%)</title><rect x="88.0910%" y="965" width="0.0650%" height="15" fill="rgb(230,125,29)" fg:x="37954" fg:w="28"/><text x="88.3410%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (22 samples, 0.05%)</title><rect x="88.1049%" y="949" width="0.0511%" height="15" fill="rgb(223,65,44)" fg:x="37960" fg:w="22"/><text x="88.3549%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (18 samples, 0.04%)</title><rect x="88.1142%" y="933" width="0.0418%" height="15" fill="rgb(224,188,28)" fg:x="37964" fg:w="18"/><text x="88.3642%" y="943.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="88.1908%" y="949" width="0.0116%" height="15" fill="rgb(254,197,27)" fg:x="37997" fg:w="5"/><text x="88.4408%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::into_box (26 samples, 0.06%)</title><rect x="88.1560%" y="965" width="0.0603%" height="15" fill="rgb(220,200,25)" fg:x="37982" fg:w="26"/><text x="88.4060%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.01%)</title><rect x="88.2024%" y="949" width="0.0139%" height="15" fill="rgb(239,225,54)" fg:x="38002" fg:w="6"/><text x="88.4524%" y="959.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.07%)</title><rect x="88.3254%" y="869" width="0.0743%" height="15" fill="rgb(211,59,40)" fg:x="38055" fg:w="32"/><text x="88.5754%" y="879.50"></text></g><g><title>_int_malloc (19 samples, 0.04%)</title><rect x="88.3556%" y="853" width="0.0441%" height="15" fill="rgb(213,176,46)" fg:x="38068" fg:w="19"/><text x="88.6056%" y="863.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.08%)</title><rect x="88.3254%" y="885" width="0.0836%" height="15" fill="rgb(226,99,4)" fg:x="38055" fg:w="36"/><text x="88.5754%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (7 samples, 0.02%)</title><rect x="88.4090%" y="885" width="0.0162%" height="15" fill="rgb(239,203,43)" fg:x="38091" fg:w="7"/><text x="88.6590%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.03%)</title><rect x="88.4252%" y="885" width="0.0279%" height="15" fill="rgb(246,1,45)" fg:x="38098" fg:w="12"/><text x="88.6752%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.19%)</title><rect x="88.2743%" y="917" width="0.1950%" height="15" fill="rgb(231,42,52)" fg:x="38033" fg:w="84"/><text x="88.5243%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.18%)</title><rect x="88.2883%" y="901" width="0.1810%" height="15" fill="rgb(240,13,50)" fg:x="38039" fg:w="78"/><text x="88.5383%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (7 samples, 0.02%)</title><rect x="88.4531%" y="885" width="0.0162%" height="15" fill="rgb(225,81,14)" fg:x="38110" fg:w="7"/><text x="88.7031%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (5 samples, 0.01%)</title><rect x="88.5018%" y="885" width="0.0116%" height="15" fill="rgb(216,182,23)" fg:x="38131" fg:w="5"/><text x="88.7518%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::new (12 samples, 0.03%)</title><rect x="88.4902%" y="901" width="0.0279%" height="15" fill="rgb(233,137,19)" fg:x="38126" fg:w="12"/><text x="88.7402%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::align (5 samples, 0.01%)</title><rect x="88.5389%" y="885" width="0.0116%" height="15" fill="rgb(242,61,46)" fg:x="38147" fg:w="5"/><text x="88.7889%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (19 samples, 0.04%)</title><rect x="88.5505%" y="885" width="0.0441%" height="15" fill="rgb(221,168,51)" fg:x="38152" fg:w="19"/><text x="88.8005%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (7 samples, 0.02%)</title><rect x="88.5784%" y="869" width="0.0162%" height="15" fill="rgb(238,48,15)" fg:x="38164" fg:w="7"/><text x="88.8284%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (5 samples, 0.01%)</title><rect x="88.5830%" y="853" width="0.0116%" height="15" fill="rgb(216,13,16)" fg:x="38166" fg:w="5"/><text x="88.8330%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (12 samples, 0.03%)</title><rect x="88.5946%" y="885" width="0.0279%" height="15" fill="rgb(223,185,34)" fg:x="38171" fg:w="12"/><text x="88.8446%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (47 samples, 0.11%)</title><rect x="88.5180%" y="901" width="0.1091%" height="15" fill="rgb(228,94,42)" fg:x="38138" fg:w="47"/><text x="88.7680%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (5 samples, 0.01%)</title><rect x="88.6550%" y="885" width="0.0116%" height="15" fill="rgb(218,166,43)" fg:x="38197" fg:w="5"/><text x="88.9050%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (6 samples, 0.01%)</title><rect x="88.6666%" y="885" width="0.0139%" height="15" fill="rgb(232,30,50)" fg:x="38202" fg:w="6"/><text x="88.9166%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8 samples, 0.02%)</title><rect x="88.6828%" y="885" width="0.0186%" height="15" fill="rgb(245,206,45)" fg:x="38209" fg:w="8"/><text x="88.9328%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::array (104 samples, 0.24%)</title><rect x="88.4739%" y="917" width="0.2414%" height="15" fill="rgb(220,56,22)" fg:x="38119" fg:w="104"/><text x="88.7239%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::repeat (38 samples, 0.09%)</title><rect x="88.6271%" y="901" width="0.0882%" height="15" fill="rgb(239,129,38)" fg:x="38185" fg:w="38"/><text x="88.8771%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.01%)</title><rect x="88.7014%" y="885" width="0.0139%" height="15" fill="rgb(207,68,41)" fg:x="38217" fg:w="6"/><text x="88.9514%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (6 samples, 0.01%)</title><rect x="88.7153%" y="917" width="0.0139%" height="15" fill="rgb(221,21,7)" fg:x="38223" fg:w="6"/><text x="88.9653%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (225 samples, 0.52%)</title><rect x="88.2163%" y="965" width="0.5222%" height="15" fill="rgb(240,33,25)" fg:x="38008" fg:w="225"/><text x="88.4663%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (221 samples, 0.51%)</title><rect x="88.2256%" y="949" width="0.5129%" height="15" fill="rgb(242,119,10)" fg:x="38012" fg:w="221"/><text x="88.4756%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (220 samples, 0.51%)</title><rect x="88.2279%" y="933" width="0.5106%" height="15" fill="rgb(214,149,40)" fg:x="38013" fg:w="220"/><text x="88.4779%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (298 samples, 0.69%)</title><rect x="88.0678%" y="981" width="0.6917%" height="15" fill="rgb(228,25,36)" fg:x="37944" fg:w="298"/><text x="88.3178%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="88.7385%" y="965" width="0.0209%" height="15" fill="rgb(222,59,15)" fg:x="38233" fg:w="9"/><text x="88.9885%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="88.7409%" y="949" width="0.0186%" height="15" fill="rgb(218,170,0)" fg:x="38234" fg:w="8"/><text x="88.9909%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw (18 samples, 0.04%)</title><rect x="88.7687%" y="965" width="0.0418%" height="15" fill="rgb(232,173,23)" fg:x="38246" fg:w="18"/><text x="89.0187%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (15 samples, 0.03%)</title><rect x="88.7757%" y="949" width="0.0348%" height="15" fill="rgb(218,116,1)" fg:x="38249" fg:w="15"/><text x="89.0257%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (13 samples, 0.03%)</title><rect x="88.7803%" y="933" width="0.0302%" height="15" fill="rgb(207,34,4)" fg:x="38251" fg:w="13"/><text x="89.0303%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (5 samples, 0.01%)</title><rect x="88.8151%" y="949" width="0.0116%" height="15" fill="rgb(229,54,52)" fg:x="38266" fg:w="5"/><text x="89.0651%" y="959.50"></text></g><g><title>alloc::str::from_boxed_utf8_unchecked (30 samples, 0.07%)</title><rect x="88.7594%" y="981" width="0.0696%" height="15" fill="rgb(211,86,23)" fg:x="38242" fg:w="30"/><text x="89.0094%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::from_raw (8 samples, 0.02%)</title><rect x="88.8105%" y="965" width="0.0186%" height="15" fill="rgb(254,153,34)" fg:x="38264" fg:w="8"/><text x="89.0605%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (339 samples, 0.79%)</title><rect x="88.0515%" y="1029" width="0.7868%" height="15" fill="rgb(219,220,14)" fg:x="37937" fg:w="339"/><text x="88.3015%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (338 samples, 0.78%)</title><rect x="88.0538%" y="1013" width="0.7845%" height="15" fill="rgb(247,8,26)" fg:x="37938" fg:w="338"/><text x="88.3038%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (335 samples, 0.78%)</title><rect x="88.0608%" y="997" width="0.7775%" height="15" fill="rgb(213,129,42)" fg:x="37941" fg:w="335"/><text x="88.3108%" y="1007.50"></text></g><g><title>__GI___libc_malloc (44 samples, 0.10%)</title><rect x="88.8732%" y="853" width="0.1021%" height="15" fill="rgb(225,95,41)" fg:x="38291" fg:w="44"/><text x="89.1232%" y="863.50"></text></g><g><title>_int_malloc (32 samples, 0.07%)</title><rect x="88.9010%" y="837" width="0.0743%" height="15" fill="rgb(215,134,24)" fg:x="38303" fg:w="32"/><text x="89.1510%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (50 samples, 0.12%)</title><rect x="88.8662%" y="949" width="0.1160%" height="15" fill="rgb(235,23,54)" fg:x="38288" fg:w="50"/><text x="89.1162%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.12%)</title><rect x="88.8662%" y="933" width="0.1160%" height="15" fill="rgb(229,96,31)" fg:x="38288" fg:w="50"/><text x="89.1162%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.12%)</title><rect x="88.8662%" y="917" width="0.1160%" height="15" fill="rgb(206,111,12)" fg:x="38288" fg:w="50"/><text x="89.1162%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.11%)</title><rect x="88.8685%" y="901" width="0.1137%" height="15" fill="rgb(222,177,8)" fg:x="38289" fg:w="49"/><text x="89.1185%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.11%)</title><rect x="88.8685%" y="885" width="0.1137%" height="15" fill="rgb(251,36,52)" fg:x="38289" fg:w="49"/><text x="89.1185%" y="895.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.11%)</title><rect x="88.8685%" y="869" width="0.1137%" height="15" fill="rgb(216,182,29)" fg:x="38289" fg:w="49"/><text x="89.1185%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (63 samples, 0.15%)</title><rect x="88.8383%" y="1029" width="0.1462%" height="15" fill="rgb(241,145,50)" fg:x="38276" fg:w="63"/><text x="89.0883%" y="1039.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (52 samples, 0.12%)</title><rect x="88.8639%" y="1013" width="0.1207%" height="15" fill="rgb(231,71,35)" fg:x="38287" fg:w="52"/><text x="89.1139%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (51 samples, 0.12%)</title><rect x="88.8662%" y="997" width="0.1184%" height="15" fill="rgb(218,22,17)" fg:x="38288" fg:w="51"/><text x="89.1162%" y="1007.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (51 samples, 0.12%)</title><rect x="88.8662%" y="981" width="0.1184%" height="15" fill="rgb(225,227,6)" fg:x="38288" fg:w="51"/><text x="89.1162%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (51 samples, 0.12%)</title><rect x="88.8662%" y="965" width="0.1184%" height="15" fill="rgb(224,204,17)" fg:x="38288" fg:w="51"/><text x="89.1162%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="88.9846%" y="1013" width="0.0116%" height="15" fill="rgb(227,61,28)" fg:x="38339" fg:w="5"/><text x="89.2346%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.03%)</title><rect x="88.9962%" y="997" width="0.0255%" height="15" fill="rgb(242,148,23)" fg:x="38344" fg:w="11"/><text x="89.2462%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.02%)</title><rect x="89.0008%" y="981" width="0.0209%" height="15" fill="rgb(237,105,33)" fg:x="38346" fg:w="9"/><text x="89.2508%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.02%)</title><rect x="89.0008%" y="965" width="0.0209%" height="15" fill="rgb(238,218,40)" fg:x="38346" fg:w="9"/><text x="89.2508%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_core_types::language_storage::ModuleId&gt;&gt; (6 samples, 0.01%)</title><rect x="89.0078%" y="949" width="0.0139%" height="15" fill="rgb(209,126,11)" fg:x="38349" fg:w="6"/><text x="89.2578%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="89.0078%" y="933" width="0.0139%" height="15" fill="rgb(245,90,11)" fg:x="38349" fg:w="6"/><text x="89.2578%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;move_core_types::language_storage::ModuleId,alloc::alloc::Global&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0101%" y="917" width="0.0116%" height="15" fill="rgb(211,195,10)" fg:x="38350" fg:w="5"/><text x="89.2601%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="89.0101%" y="901" width="0.0116%" height="15" fill="rgb(231,45,45)" fg:x="38350" fg:w="5"/><text x="89.2601%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.04%)</title><rect x="88.9846%" y="1029" width="0.0395%" height="15" fill="rgb(246,100,43)" fg:x="38339" fg:w="17"/><text x="89.2346%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="88.9962%" y="1013" width="0.0279%" height="15" fill="rgb(241,193,8)" fg:x="38344" fg:w="12"/><text x="89.2462%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (5 samples, 0.01%)</title><rect x="89.0240%" y="1013" width="0.0116%" height="15" fill="rgb(208,76,19)" fg:x="38356" fg:w="5"/><text x="89.2740%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0240%" y="997" width="0.0116%" height="15" fill="rgb(223,69,40)" fg:x="38356" fg:w="5"/><text x="89.2740%" y="1007.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.01%)</title><rect x="89.0240%" y="981" width="0.0116%" height="15" fill="rgb(207,120,39)" fg:x="38356" fg:w="5"/><text x="89.2740%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (11 samples, 0.03%)</title><rect x="89.0240%" y="1029" width="0.0255%" height="15" fill="rgb(212,209,28)" fg:x="38356" fg:w="11"/><text x="89.2740%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (6 samples, 0.01%)</title><rect x="89.0356%" y="1013" width="0.0139%" height="15" fill="rgb(246,82,29)" fg:x="38361" fg:w="6"/><text x="89.2856%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (6 samples, 0.01%)</title><rect x="89.0356%" y="997" width="0.0139%" height="15" fill="rgb(239,6,40)" fg:x="38361" fg:w="6"/><text x="89.2856%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (6 samples, 0.01%)</title><rect x="89.0356%" y="981" width="0.0139%" height="15" fill="rgb(228,181,35)" fg:x="38361" fg:w="6"/><text x="89.2856%" y="991.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.01%)</title><rect x="89.0356%" y="965" width="0.0139%" height="15" fill="rgb(238,151,2)" fg:x="38361" fg:w="6"/><text x="89.2856%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0496%" y="1029" width="0.0116%" height="15" fill="rgb(236,94,18)" fg:x="38367" fg:w="5"/><text x="89.2996%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0496%" y="1013" width="0.0116%" height="15" fill="rgb(208,38,14)" fg:x="38367" fg:w="5"/><text x="89.2996%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="89.0496%" y="997" width="0.0116%" height="15" fill="rgb(234,215,27)" fg:x="38367" fg:w="5"/><text x="89.2996%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0496%" y="981" width="0.0116%" height="15" fill="rgb(254,211,53)" fg:x="38367" fg:w="5"/><text x="89.2996%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="89.0496%" y="965" width="0.0116%" height="15" fill="rgb(216,175,11)" fg:x="38367" fg:w="5"/><text x="89.2996%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (6 samples, 0.01%)</title><rect x="89.0751%" y="917" width="0.0139%" height="15" fill="rgb(246,179,26)" fg:x="38378" fg:w="6"/><text x="89.3251%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="89.0635%" y="949" width="0.0302%" height="15" fill="rgb(249,19,52)" fg:x="38373" fg:w="13"/><text x="89.3135%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="89.0681%" y="933" width="0.0255%" height="15" fill="rgb(230,42,52)" fg:x="38375" fg:w="11"/><text x="89.3181%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="89.1053%" y="837" width="0.0139%" height="15" fill="rgb(221,171,0)" fg:x="38391" fg:w="6"/><text x="89.3553%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="89.1076%" y="821" width="0.0116%" height="15" fill="rgb(222,177,40)" fg:x="38392" fg:w="5"/><text x="89.3576%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (13 samples, 0.03%)</title><rect x="89.0960%" y="885" width="0.0302%" height="15" fill="rgb(247,34,16)" fg:x="38387" fg:w="13"/><text x="89.3460%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (13 samples, 0.03%)</title><rect x="89.0960%" y="869" width="0.0302%" height="15" fill="rgb(213,217,37)" fg:x="38387" fg:w="13"/><text x="89.3460%" y="879.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.03%)</title><rect x="89.0960%" y="853" width="0.0302%" height="15" fill="rgb(231,189,24)" fg:x="38387" fg:w="13"/><text x="89.3460%" y="863.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="89.1679%" y="789" width="0.0139%" height="15" fill="rgb(214,22,9)" fg:x="38418" fg:w="6"/><text x="89.4179%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.03%)</title><rect x="89.1563%" y="821" width="0.0302%" height="15" fill="rgb(212,70,22)" fg:x="38413" fg:w="13"/><text x="89.4063%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="89.1610%" y="805" width="0.0255%" height="15" fill="rgb(249,64,51)" fg:x="38415" fg:w="11"/><text x="89.4110%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (44 samples, 0.10%)</title><rect x="89.0937%" y="933" width="0.1021%" height="15" fill="rgb(249,148,20)" fg:x="38386" fg:w="44"/><text x="89.3437%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility)&gt; (44 samples, 0.10%)</title><rect x="89.0937%" y="917" width="0.1021%" height="15" fill="rgb(246,46,48)" fg:x="38386" fg:w="44"/><text x="89.3437%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (44 samples, 0.10%)</title><rect x="89.0937%" y="901" width="0.1021%" height="15" fill="rgb(217,34,48)" fg:x="38386" fg:w="44"/><text x="89.3437%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (30 samples, 0.07%)</title><rect x="89.1261%" y="885" width="0.0696%" height="15" fill="rgb(222,45,26)" fg:x="38400" fg:w="30"/><text x="89.3761%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (30 samples, 0.07%)</title><rect x="89.1261%" y="869" width="0.0696%" height="15" fill="rgb(230,201,36)" fg:x="38400" fg:w="30"/><text x="89.3761%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (30 samples, 0.07%)</title><rect x="89.1261%" y="853" width="0.0696%" height="15" fill="rgb(217,30,43)" fg:x="38400" fg:w="30"/><text x="89.3761%" y="863.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.06%)</title><rect x="89.1354%" y="837" width="0.0603%" height="15" fill="rgb(230,197,40)" fg:x="38404" fg:w="26"/><text x="89.3854%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility&gt;&gt; (62 samples, 0.14%)</title><rect x="89.0635%" y="1029" width="0.1439%" height="15" fill="rgb(239,181,18)" fg:x="38373" fg:w="62"/><text x="89.3135%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility,std::collections::hash::map::RandomState&gt;&gt; (62 samples, 0.14%)</title><rect x="89.0635%" y="1013" width="0.1439%" height="15" fill="rgb(222,60,39)" fg:x="38373" fg:w="62"/><text x="89.3135%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility)&gt;&gt; (62 samples, 0.14%)</title><rect x="89.0635%" y="997" width="0.1439%" height="15" fill="rgb(210,60,22)" fg:x="38373" fg:w="62"/><text x="89.3135%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.14%)</title><rect x="89.0635%" y="981" width="0.1439%" height="15" fill="rgb(239,213,48)" fg:x="38373" fg:w="62"/><text x="89.3135%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (62 samples, 0.14%)</title><rect x="89.0635%" y="965" width="0.1439%" height="15" fill="rgb(253,214,23)" fg:x="38373" fg:w="62"/><text x="89.3135%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (49 samples, 0.11%)</title><rect x="89.0937%" y="949" width="0.1137%" height="15" fill="rgb(211,98,45)" fg:x="38386" fg:w="49"/><text x="89.3437%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.01%)</title><rect x="89.1958%" y="933" width="0.0116%" height="15" fill="rgb(239,130,44)" fg:x="38430" fg:w="5"/><text x="89.4458%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="89.2376%" y="997" width="0.0162%" height="15" fill="rgb(222,181,35)" fg:x="38448" fg:w="7"/><text x="89.4876%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.03%)</title><rect x="89.2306%" y="1013" width="0.0279%" height="15" fill="rgb(219,219,49)" fg:x="38445" fg:w="12"/><text x="89.4806%" y="1023.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (19 samples, 0.04%)</title><rect x="89.2190%" y="1029" width="0.0441%" height="15" fill="rgb(227,161,51)" fg:x="38440" fg:w="19"/><text x="89.4690%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="89.2770%" y="997" width="0.0232%" height="15" fill="rgb(239,112,27)" fg:x="38465" fg:w="10"/><text x="89.5270%" y="1007.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.01%)</title><rect x="89.2886%" y="981" width="0.0116%" height="15" fill="rgb(248,122,18)" fg:x="38470" fg:w="5"/><text x="89.5386%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.04%)</title><rect x="89.2747%" y="1013" width="0.0371%" height="15" fill="rgb(245,130,23)" fg:x="38464" fg:w="16"/><text x="89.5247%" y="1023.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="89.3002%" y="997" width="0.0116%" height="15" fill="rgb(211,225,28)" fg:x="38475" fg:w="5"/><text x="89.5502%" y="1007.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (29 samples, 0.07%)</title><rect x="89.2631%" y="1029" width="0.0673%" height="15" fill="rgb(242,105,44)" fg:x="38459" fg:w="29"/><text x="89.5131%" y="1039.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="89.3141%" y="1013" width="0.0162%" height="15" fill="rgb(216,183,46)" fg:x="38481" fg:w="7"/><text x="89.5641%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.02%)</title><rect x="89.3466%" y="933" width="0.0186%" height="15" fill="rgb(227,112,9)" fg:x="38495" fg:w="8"/><text x="89.5966%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="89.3490%" y="917" width="0.0162%" height="15" fill="rgb(244,21,0)" fg:x="38496" fg:w="7"/><text x="89.5990%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.01%)</title><rect x="89.3536%" y="901" width="0.0116%" height="15" fill="rgb(236,185,14)" fg:x="38498" fg:w="5"/><text x="89.6036%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="89.3536%" y="885" width="0.0116%" height="15" fill="rgb(236,170,30)" fg:x="38498" fg:w="5"/><text x="89.6036%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.03%)</title><rect x="89.3350%" y="949" width="0.0325%" height="15" fill="rgb(209,198,51)" fg:x="38490" fg:w="14"/><text x="89.5850%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.02%)</title><rect x="89.3884%" y="885" width="0.0186%" height="15" fill="rgb(205,171,26)" fg:x="38513" fg:w="8"/><text x="89.6384%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.08%)</title><rect x="89.3304%" y="1013" width="0.0789%" height="15" fill="rgb(246,41,49)" fg:x="38488" fg:w="34"/><text x="89.5804%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.08%)</title><rect x="89.3327%" y="997" width="0.0766%" height="15" fill="rgb(240,229,12)" fg:x="38489" fg:w="33"/><text x="89.5827%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.08%)</title><rect x="89.3327%" y="981" width="0.0766%" height="15" fill="rgb(212,8,54)" fg:x="38489" fg:w="33"/><text x="89.5827%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (33 samples, 0.08%)</title><rect x="89.3327%" y="965" width="0.0766%" height="15" fill="rgb(230,114,13)" fg:x="38489" fg:w="33"/><text x="89.5827%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.04%)</title><rect x="89.3722%" y="949" width="0.0371%" height="15" fill="rgb(229,130,28)" fg:x="38506" fg:w="16"/><text x="89.6222%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="89.3722%" y="933" width="0.0371%" height="15" fill="rgb(206,139,15)" fg:x="38506" fg:w="16"/><text x="89.6222%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.04%)</title><rect x="89.3722%" y="917" width="0.0371%" height="15" fill="rgb(241,188,35)" fg:x="38506" fg:w="16"/><text x="89.6222%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.04%)</title><rect x="89.3722%" y="901" width="0.0371%" height="15" fill="rgb(208,224,26)" fg:x="38506" fg:w="16"/><text x="89.6222%" y="911.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_friends (38 samples, 0.09%)</title><rect x="89.3304%" y="1029" width="0.0882%" height="15" fill="rgb(251,131,28)" fg:x="38488" fg:w="38"/><text x="89.5804%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::into_box (8 samples, 0.02%)</title><rect x="89.4511%" y="949" width="0.0186%" height="15" fill="rgb(208,153,1)" fg:x="38540" fg:w="8"/><text x="89.7011%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="89.4766%" y="901" width="0.0209%" height="15" fill="rgb(234,33,36)" fg:x="38551" fg:w="9"/><text x="89.7266%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="89.4766%" y="885" width="0.0209%" height="15" fill="rgb(246,42,29)" fg:x="38551" fg:w="9"/><text x="89.7266%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.04%)</title><rect x="89.4697%" y="949" width="0.0395%" height="15" fill="rgb(251,114,16)" fg:x="38548" fg:w="17"/><text x="89.7197%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.04%)</title><rect x="89.4697%" y="933" width="0.0395%" height="15" fill="rgb(233,13,38)" fg:x="38548" fg:w="17"/><text x="89.7197%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.04%)</title><rect x="89.4720%" y="917" width="0.0371%" height="15" fill="rgb(247,120,19)" fg:x="38549" fg:w="16"/><text x="89.7220%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="89.4975%" y="901" width="0.0116%" height="15" fill="rgb(205,11,16)" fg:x="38560" fg:w="5"/><text x="89.7475%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (29 samples, 0.07%)</title><rect x="89.4464%" y="965" width="0.0673%" height="15" fill="rgb(228,185,19)" fg:x="38538" fg:w="29"/><text x="89.6964%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (36 samples, 0.08%)</title><rect x="89.4395%" y="1013" width="0.0836%" height="15" fill="rgb(239,88,52)" fg:x="38535" fg:w="36"/><text x="89.6895%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.08%)</title><rect x="89.4418%" y="997" width="0.0812%" height="15" fill="rgb(219,23,1)" fg:x="38536" fg:w="35"/><text x="89.6918%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (34 samples, 0.08%)</title><rect x="89.4441%" y="981" width="0.0789%" height="15" fill="rgb(253,177,16)" fg:x="38537" fg:w="34"/><text x="89.6941%" y="991.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (48 samples, 0.11%)</title><rect x="89.4395%" y="1029" width="0.1114%" height="15" fill="rgb(225,150,40)" fg:x="38535" fg:w="48"/><text x="89.6895%" y="1039.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::identifier_at (8 samples, 0.02%)</title><rect x="89.5323%" y="1013" width="0.0186%" height="15" fill="rgb(208,108,30)" fg:x="38575" fg:w="8"/><text x="89.7823%" y="1023.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (7 samples, 0.02%)</title><rect x="89.5346%" y="997" width="0.0162%" height="15" fill="rgb(214,122,4)" fg:x="38576" fg:w="7"/><text x="89.7846%" y="1007.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::self_id (6 samples, 0.01%)</title><rect x="89.5509%" y="1029" width="0.0139%" height="15" fill="rgb(229,74,37)" fg:x="38583" fg:w="6"/><text x="89.8009%" y="1039.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (6 samples, 0.01%)</title><rect x="89.5509%" y="1013" width="0.0139%" height="15" fill="rgb(233,61,41)" fg:x="38583" fg:w="6"/><text x="89.8009%" y="1023.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (5 samples, 0.01%)</title><rect x="89.5532%" y="997" width="0.0116%" height="15" fill="rgb(238,191,5)" fg:x="38584" fg:w="5"/><text x="89.8032%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="89.5764%" y="965" width="0.0232%" height="15" fill="rgb(233,78,24)" fg:x="38594" fg:w="10"/><text x="89.8264%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="89.5764%" y="949" width="0.0232%" height="15" fill="rgb(211,142,8)" fg:x="38594" fg:w="10"/><text x="89.8264%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="89.5764%" y="933" width="0.0232%" height="15" fill="rgb(253,38,53)" fg:x="38594" fg:w="10"/><text x="89.8264%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="89.5857%" y="917" width="0.0139%" height="15" fill="rgb(234,63,51)" fg:x="38598" fg:w="6"/><text x="89.8357%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="89.6159%" y="853" width="0.0116%" height="15" fill="rgb(205,23,31)" fg:x="38611" fg:w="5"/><text x="89.8659%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.02%)</title><rect x="89.6298%" y="853" width="0.0209%" height="15" fill="rgb(210,184,50)" fg:x="38617" fg:w="9"/><text x="89.8798%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="89.6136%" y="901" width="0.0395%" height="15" fill="rgb(222,112,26)" fg:x="38610" fg:w="17"/><text x="89.8636%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="89.6136%" y="885" width="0.0395%" height="15" fill="rgb(250,98,18)" fg:x="38610" fg:w="17"/><text x="89.8636%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="89.6136%" y="869" width="0.0395%" height="15" fill="rgb(250,34,12)" fg:x="38610" fg:w="17"/><text x="89.8636%" y="879.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (24 samples, 0.06%)</title><rect x="89.6112%" y="949" width="0.0557%" height="15" fill="rgb(236,141,30)" fg:x="38609" fg:w="24"/><text x="89.8612%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (24 samples, 0.06%)</title><rect x="89.6112%" y="933" width="0.0557%" height="15" fill="rgb(246,134,38)" fg:x="38609" fg:w="24"/><text x="89.8612%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (23 samples, 0.05%)</title><rect x="89.6136%" y="917" width="0.0534%" height="15" fill="rgb(240,114,4)" fg:x="38610" fg:w="23"/><text x="89.8636%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.01%)</title><rect x="89.6530%" y="901" width="0.0139%" height="15" fill="rgb(243,113,39)" fg:x="38627" fg:w="6"/><text x="89.9030%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6530%" y="885" width="0.0139%" height="15" fill="rgb(239,215,4)" fg:x="38627" fg:w="6"/><text x="89.9030%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6530%" y="869" width="0.0139%" height="15" fill="rgb(236,229,45)" fg:x="38627" fg:w="6"/><text x="89.9030%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6530%" y="853" width="0.0139%" height="15" fill="rgb(242,2,6)" fg:x="38627" fg:w="6"/><text x="89.9030%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="89.6809%" y="821" width="0.0116%" height="15" fill="rgb(239,108,21)" fg:x="38639" fg:w="5"/><text x="89.9309%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="89.6716%" y="869" width="0.0232%" height="15" fill="rgb(215,168,34)" fg:x="38635" fg:w="10"/><text x="89.9216%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="89.6716%" y="853" width="0.0232%" height="15" fill="rgb(238,31,17)" fg:x="38635" fg:w="10"/><text x="89.9216%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="89.6716%" y="837" width="0.0232%" height="15" fill="rgb(220,133,11)" fg:x="38635" fg:w="10"/><text x="89.9216%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (12 samples, 0.03%)</title><rect x="89.6693%" y="885" width="0.0279%" height="15" fill="rgb(212,158,23)" fg:x="38634" fg:w="12"/><text x="89.9193%" y="895.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (19 samples, 0.04%)</title><rect x="89.6669%" y="933" width="0.0441%" height="15" fill="rgb(223,172,7)" fg:x="38633" fg:w="19"/><text x="89.9169%" y="943.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (19 samples, 0.04%)</title><rect x="89.6669%" y="917" width="0.0441%" height="15" fill="rgb(244,3,52)" fg:x="38633" fg:w="19"/><text x="89.9169%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.04%)</title><rect x="89.6693%" y="901" width="0.0418%" height="15" fill="rgb(207,69,27)" fg:x="38634" fg:w="18"/><text x="89.9193%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (6 samples, 0.01%)</title><rect x="89.6971%" y="885" width="0.0139%" height="15" fill="rgb(213,136,45)" fg:x="38646" fg:w="6"/><text x="89.9471%" y="895.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.01%)</title><rect x="89.6971%" y="869" width="0.0139%" height="15" fill="rgb(218,79,17)" fg:x="38646" fg:w="6"/><text x="89.9471%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6971%" y="853" width="0.0139%" height="15" fill="rgb(216,106,36)" fg:x="38646" fg:w="6"/><text x="89.9471%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6971%" y="837" width="0.0139%" height="15" fill="rgb(251,27,45)" fg:x="38646" fg:w="6"/><text x="89.9471%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="89.6971%" y="821" width="0.0139%" height="15" fill="rgb(232,21,34)" fg:x="38646" fg:w="6"/><text x="89.9471%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="89.7134%" y="885" width="0.0162%" height="15" fill="rgb(249,191,16)" fg:x="38653" fg:w="7"/><text x="89.9634%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="89.7134%" y="869" width="0.0162%" height="15" fill="rgb(224,88,20)" fg:x="38653" fg:w="7"/><text x="89.9634%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="89.7134%" y="853" width="0.0162%" height="15" fill="rgb(237,93,27)" fg:x="38653" fg:w="7"/><text x="89.9634%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (75 samples, 0.17%)</title><rect x="89.5741%" y="981" width="0.1741%" height="15" fill="rgb(226,198,48)" fg:x="38593" fg:w="75"/><text x="89.8241%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (60 samples, 0.14%)</title><rect x="89.6089%" y="965" width="0.1393%" height="15" fill="rgb(207,162,53)" fg:x="38608" fg:w="60"/><text x="89.8589%" y="975.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (35 samples, 0.08%)</title><rect x="89.6669%" y="949" width="0.0812%" height="15" fill="rgb(207,169,9)" fg:x="38633" fg:w="35"/><text x="89.9169%" y="959.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (16 samples, 0.04%)</title><rect x="89.7110%" y="933" width="0.0371%" height="15" fill="rgb(224,166,46)" fg:x="38652" fg:w="16"/><text x="89.9610%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (16 samples, 0.04%)</title><rect x="89.7110%" y="917" width="0.0371%" height="15" fill="rgb(233,26,6)" fg:x="38652" fg:w="16"/><text x="89.9610%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.04%)</title><rect x="89.7110%" y="901" width="0.0371%" height="15" fill="rgb(218,106,45)" fg:x="38652" fg:w="16"/><text x="89.9610%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (8 samples, 0.02%)</title><rect x="89.7296%" y="885" width="0.0186%" height="15" fill="rgb(240,217,4)" fg:x="38660" fg:w="8"/><text x="89.9796%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="89.7296%" y="869" width="0.0186%" height="15" fill="rgb(246,171,10)" fg:x="38660" fg:w="8"/><text x="89.9796%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="89.7296%" y="853" width="0.0186%" height="15" fill="rgb(223,197,30)" fg:x="38660" fg:w="8"/><text x="89.9796%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="89.7296%" y="837" width="0.0186%" height="15" fill="rgb(207,92,16)" fg:x="38660" fg:w="8"/><text x="89.9796%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="89.7342%" y="821" width="0.0139%" height="15" fill="rgb(211,6,44)" fg:x="38662" fg:w="6"/><text x="89.9842%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="89.7366%" y="805" width="0.0116%" height="15" fill="rgb(219,139,2)" fg:x="38663" fg:w="5"/><text x="89.9866%" y="815.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="89.7621%" y="917" width="0.0162%" height="15" fill="rgb(224,103,21)" fg:x="38674" fg:w="7"/><text x="90.0121%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="89.7621%" y="901" width="0.0162%" height="15" fill="rgb(254,110,48)" fg:x="38674" fg:w="7"/><text x="90.0121%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.02%)</title><rect x="89.7621%" y="885" width="0.0162%" height="15" fill="rgb(212,88,19)" fg:x="38674" fg:w="7"/><text x="90.0121%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (16 samples, 0.04%)</title><rect x="89.7598%" y="949" width="0.0371%" height="15" fill="rgb(248,103,6)" fg:x="38673" fg:w="16"/><text x="90.0098%" y="959.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (16 samples, 0.04%)</title><rect x="89.7598%" y="933" width="0.0371%" height="15" fill="rgb(214,53,46)" fg:x="38673" fg:w="16"/><text x="90.0098%" y="943.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="89.7783%" y="917" width="0.0186%" height="15" fill="rgb(236,190,24)" fg:x="38681" fg:w="8"/><text x="90.0283%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (116 samples, 0.27%)</title><rect x="89.5648%" y="1029" width="0.2692%" height="15" fill="rgb(254,58,28)" fg:x="38589" fg:w="116"/><text x="89.8148%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (116 samples, 0.27%)</title><rect x="89.5648%" y="1013" width="0.2692%" height="15" fill="rgb(243,63,27)" fg:x="38589" fg:w="116"/><text x="89.8148%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (115 samples, 0.27%)</title><rect x="89.5671%" y="997" width="0.2669%" height="15" fill="rgb(206,81,20)" fg:x="38590" fg:w="115"/><text x="89.8171%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (37 samples, 0.09%)</title><rect x="89.7482%" y="981" width="0.0859%" height="15" fill="rgb(252,69,51)" fg:x="38668" fg:w="37"/><text x="89.9982%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37 samples, 0.09%)</title><rect x="89.7482%" y="965" width="0.0859%" height="15" fill="rgb(222,213,4)" fg:x="38668" fg:w="37"/><text x="89.9982%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (14 samples, 0.03%)</title><rect x="89.8016%" y="949" width="0.0325%" height="15" fill="rgb(226,198,12)" fg:x="38691" fg:w="14"/><text x="90.0516%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.03%)</title><rect x="89.8016%" y="933" width="0.0325%" height="15" fill="rgb(248,115,11)" fg:x="38691" fg:w="14"/><text x="90.0516%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.03%)</title><rect x="89.8016%" y="917" width="0.0325%" height="15" fill="rgb(221,148,54)" fg:x="38691" fg:w="14"/><text x="90.0516%" y="927.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="89.9083%" y="981" width="0.0209%" height="15" fill="rgb(214,209,51)" fg:x="38737" fg:w="9"/><text x="90.1583%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (9 samples, 0.02%)</title><rect x="89.9083%" y="965" width="0.0209%" height="15" fill="rgb(249,116,53)" fg:x="38737" fg:w="9"/><text x="90.1583%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u16 (8 samples, 0.02%)</title><rect x="89.9106%" y="949" width="0.0186%" height="15" fill="rgb(248,170,1)" fg:x="38738" fg:w="8"/><text x="90.1606%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="89.9106%" y="933" width="0.0186%" height="15" fill="rgb(244,105,10)" fg:x="38738" fg:w="8"/><text x="90.1606%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="89.9106%" y="917" width="0.0186%" height="15" fill="rgb(229,100,5)" fg:x="38738" fg:w="8"/><text x="90.1606%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="89.9130%" y="901" width="0.0162%" height="15" fill="rgb(233,221,39)" fg:x="38739" fg:w="7"/><text x="90.1630%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.03%)</title><rect x="89.9408%" y="933" width="0.0348%" height="15" fill="rgb(233,88,21)" fg:x="38751" fg:w="15"/><text x="90.1908%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="89.9571%" y="917" width="0.0186%" height="15" fill="rgb(206,13,0)" fg:x="38758" fg:w="8"/><text x="90.2071%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.08%)</title><rect x="90.0801%" y="917" width="0.0766%" height="15" fill="rgb(242,15,35)" fg:x="38811" fg:w="33"/><text x="90.3301%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (107 samples, 0.25%)</title><rect x="89.9292%" y="981" width="0.2483%" height="15" fill="rgb(247,142,41)" fg:x="38746" fg:w="107"/><text x="90.1792%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (107 samples, 0.25%)</title><rect x="89.9292%" y="965" width="0.2483%" height="15" fill="rgb(245,51,29)" fg:x="38746" fg:w="107"/><text x="90.1792%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (106 samples, 0.25%)</title><rect x="89.9315%" y="949" width="0.2460%" height="15" fill="rgb(228,209,43)" fg:x="38747" fg:w="106"/><text x="90.1815%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (87 samples, 0.20%)</title><rect x="89.9756%" y="933" width="0.2019%" height="15" fill="rgb(233,185,9)" fg:x="38766" fg:w="87"/><text x="90.2256%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.02%)</title><rect x="90.1567%" y="917" width="0.0209%" height="15" fill="rgb(226,93,0)" fg:x="38844" fg:w="9"/><text x="90.4067%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.05%)</title><rect x="90.1776%" y="981" width="0.0464%" height="15" fill="rgb(245,194,43)" fg:x="38853" fg:w="20"/><text x="90.4276%" y="991.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.03%)</title><rect x="90.1915%" y="965" width="0.0325%" height="15" fill="rgb(211,145,34)" fg:x="38859" fg:w="14"/><text x="90.4415%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.02%)</title><rect x="90.2077%" y="949" width="0.0162%" height="15" fill="rgb(231,228,28)" fg:x="38866" fg:w="7"/><text x="90.4577%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (41 samples, 0.10%)</title><rect x="90.2611%" y="869" width="0.0952%" height="15" fill="rgb(236,149,4)" fg:x="38889" fg:w="41"/><text x="90.5111%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.04%)</title><rect x="90.3168%" y="853" width="0.0395%" height="15" fill="rgb(234,114,38)" fg:x="38913" fg:w="17"/><text x="90.5668%" y="863.50"></text></g><g><title>core::cmp::min (9 samples, 0.02%)</title><rect x="90.3563%" y="869" width="0.0209%" height="15" fill="rgb(246,132,51)" fg:x="38930" fg:w="9"/><text x="90.6063%" y="879.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="90.3586%" y="853" width="0.0186%" height="15" fill="rgb(251,137,22)" fg:x="38931" fg:w="8"/><text x="90.6086%" y="863.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.02%)</title><rect x="90.3586%" y="837" width="0.0186%" height="15" fill="rgb(243,59,52)" fg:x="38931" fg:w="8"/><text x="90.6086%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="90.3632%" y="821" width="0.0139%" height="15" fill="rgb(239,56,28)" fg:x="38933" fg:w="6"/><text x="90.6132%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="90.4189%" y="837" width="0.0116%" height="15" fill="rgb(218,168,27)" fg:x="38957" fg:w="5"/><text x="90.6689%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="90.4166%" y="853" width="0.0209%" height="15" fill="rgb(232,165,11)" fg:x="38956" fg:w="9"/><text x="90.6666%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="90.4375%" y="853" width="0.0139%" height="15" fill="rgb(253,55,41)" fg:x="38965" fg:w="6"/><text x="90.6875%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (40 samples, 0.09%)</title><rect x="90.3772%" y="869" width="0.0928%" height="15" fill="rgb(233,206,24)" fg:x="38939" fg:w="40"/><text x="90.6272%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="90.4561%" y="853" width="0.0139%" height="15" fill="rgb(220,199,8)" fg:x="38973" fg:w="6"/><text x="90.7061%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (112 samples, 0.26%)</title><rect x="90.2263%" y="917" width="0.2600%" height="15" fill="rgb(254,65,26)" fg:x="38874" fg:w="112"/><text x="90.4763%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (112 samples, 0.26%)</title><rect x="90.2263%" y="901" width="0.2600%" height="15" fill="rgb(253,102,23)" fg:x="38874" fg:w="112"/><text x="90.4763%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (112 samples, 0.26%)</title><rect x="90.2263%" y="885" width="0.2600%" height="15" fill="rgb(231,103,35)" fg:x="38874" fg:w="112"/><text x="90.4763%" y="895.50"></text></g><g><title>core::cmp::min (7 samples, 0.02%)</title><rect x="90.5164%" y="853" width="0.0162%" height="15" fill="rgb(238,26,10)" fg:x="38999" fg:w="7"/><text x="90.7664%" y="863.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="90.5187%" y="837" width="0.0139%" height="15" fill="rgb(234,191,34)" fg:x="39000" fg:w="6"/><text x="90.7687%" y="847.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="90.5187%" y="821" width="0.0139%" height="15" fill="rgb(206,210,9)" fg:x="39000" fg:w="6"/><text x="90.7687%" y="831.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (142 samples, 0.33%)</title><rect x="90.2263%" y="965" width="0.3296%" height="15" fill="rgb(219,155,3)" fg:x="38874" fg:w="142"/><text x="90.4763%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (142 samples, 0.33%)</title><rect x="90.2263%" y="949" width="0.3296%" height="15" fill="rgb(221,62,52)" fg:x="38874" fg:w="142"/><text x="90.4763%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (142 samples, 0.33%)</title><rect x="90.2263%" y="933" width="0.3296%" height="15" fill="rgb(215,197,36)" fg:x="38874" fg:w="142"/><text x="90.4763%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u8 (30 samples, 0.07%)</title><rect x="90.4862%" y="917" width="0.0696%" height="15" fill="rgb(226,222,6)" fg:x="38986" fg:w="30"/><text x="90.7362%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.07%)</title><rect x="90.4886%" y="901" width="0.0673%" height="15" fill="rgb(215,58,28)" fg:x="38987" fg:w="29"/><text x="90.7386%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.06%)</title><rect x="90.4909%" y="885" width="0.0650%" height="15" fill="rgb(212,148,2)" fg:x="38988" fg:w="28"/><text x="90.7409%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.06%)</title><rect x="90.4909%" y="869" width="0.0650%" height="15" fill="rgb(208,21,42)" fg:x="38988" fg:w="28"/><text x="90.7409%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.02%)</title><rect x="90.5327%" y="853" width="0.0232%" height="15" fill="rgb(209,107,26)" fg:x="39006" fg:w="10"/><text x="90.7827%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="90.5420%" y="837" width="0.0139%" height="15" fill="rgb(254,60,47)" fg:x="39010" fg:w="6"/><text x="90.7920%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.05%)</title><rect x="90.6859%" y="821" width="0.0487%" height="15" fill="rgb(207,226,45)" fg:x="39072" fg:w="21"/><text x="90.9359%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.10%)</title><rect x="90.6441%" y="837" width="0.1021%" height="15" fill="rgb(223,124,22)" fg:x="39054" fg:w="44"/><text x="90.8941%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.01%)</title><rect x="90.7346%" y="821" width="0.0116%" height="15" fill="rgb(240,162,13)" fg:x="39093" fg:w="5"/><text x="90.9846%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="90.7601%" y="837" width="0.0139%" height="15" fill="rgb(244,199,31)" fg:x="39104" fg:w="6"/><text x="91.0101%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (81 samples, 0.19%)</title><rect x="90.5930%" y="885" width="0.1880%" height="15" fill="rgb(207,92,16)" fg:x="39032" fg:w="81"/><text x="90.8430%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79 samples, 0.18%)</title><rect x="90.5977%" y="869" width="0.1834%" height="15" fill="rgb(215,31,19)" fg:x="39034" fg:w="79"/><text x="90.8477%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.18%)</title><rect x="90.5977%" y="853" width="0.1834%" height="15" fill="rgb(245,118,14)" fg:x="39034" fg:w="79"/><text x="90.8477%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (91 samples, 0.21%)</title><rect x="90.5768%" y="901" width="0.2112%" height="15" fill="rgb(248,12,46)" fg:x="39025" fg:w="91"/><text x="90.8268%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.03%)</title><rect x="90.8553%" y="805" width="0.0255%" height="15" fill="rgb(209,119,0)" fg:x="39145" fg:w="11"/><text x="91.1053%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.06%)</title><rect x="90.8228%" y="821" width="0.0603%" height="15" fill="rgb(254,51,44)" fg:x="39131" fg:w="26"/><text x="91.0728%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (50 samples, 0.12%)</title><rect x="90.7880%" y="901" width="0.1160%" height="15" fill="rgb(253,182,35)" fg:x="39116" fg:w="50"/><text x="91.0380%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (50 samples, 0.12%)</title><rect x="90.7880%" y="885" width="0.1160%" height="15" fill="rgb(205,198,39)" fg:x="39116" fg:w="50"/><text x="91.0380%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.11%)</title><rect x="90.7926%" y="869" width="0.1114%" height="15" fill="rgb(251,175,48)" fg:x="39118" fg:w="48"/><text x="91.0426%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (47 samples, 0.11%)</title><rect x="90.7949%" y="853" width="0.1091%" height="15" fill="rgb(239,38,17)" fg:x="39119" fg:w="47"/><text x="91.0449%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.11%)</title><rect x="90.7973%" y="837" width="0.1068%" height="15" fill="rgb(212,101,8)" fg:x="39120" fg:w="46"/><text x="91.0473%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (150 samples, 0.35%)</title><rect x="90.5582%" y="949" width="0.3481%" height="15" fill="rgb(228,35,17)" fg:x="39017" fg:w="150"/><text x="90.8082%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (150 samples, 0.35%)</title><rect x="90.5582%" y="933" width="0.3481%" height="15" fill="rgb(214,95,8)" fg:x="39017" fg:w="150"/><text x="90.8082%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (143 samples, 0.33%)</title><rect x="90.5744%" y="917" width="0.3319%" height="15" fill="rgb(210,176,35)" fg:x="39024" fg:w="143"/><text x="90.8244%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="90.9342%" y="853" width="0.0116%" height="15" fill="rgb(226,4,3)" fg:x="39179" fg:w="5"/><text x="91.1842%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="90.9621%" y="837" width="0.0116%" height="15" fill="rgb(232,133,14)" fg:x="39191" fg:w="5"/><text x="91.2121%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.04%)</title><rect x="90.9458%" y="853" width="0.0395%" height="15" fill="rgb(250,191,8)" fg:x="39184" fg:w="17"/><text x="91.1958%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.08%)</title><rect x="90.9110%" y="901" width="0.0789%" height="15" fill="rgb(213,12,45)" fg:x="39169" fg:w="34"/><text x="91.1610%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33 samples, 0.08%)</title><rect x="90.9133%" y="885" width="0.0766%" height="15" fill="rgb(233,78,26)" fg:x="39170" fg:w="33"/><text x="91.1633%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.08%)</title><rect x="90.9133%" y="869" width="0.0766%" height="15" fill="rgb(245,222,11)" fg:x="39170" fg:w="33"/><text x="91.1633%" y="879.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="91.0178%" y="837" width="0.0139%" height="15" fill="rgb(216,174,12)" fg:x="39215" fg:w="6"/><text x="91.2678%" y="847.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="91.0201%" y="821" width="0.0116%" height="15" fill="rgb(213,15,9)" fg:x="39216" fg:w="5"/><text x="91.2701%" y="831.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="91.0201%" y="805" width="0.0116%" height="15" fill="rgb(238,103,32)" fg:x="39216" fg:w="5"/><text x="91.2701%" y="815.50"></text></g><g><title>hashbrown::map::make_insert_hash (501 samples, 1.16%)</title><rect x="89.9014%" y="997" width="1.1628%" height="15" fill="rgb(245,85,15)" fg:x="38734" fg:w="501"/><text x="90.1514%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (362 samples, 0.84%)</title><rect x="90.2240%" y="981" width="0.8402%" height="15" fill="rgb(254,204,5)" fg:x="38873" fg:w="362"/><text x="90.4740%" y="991.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (219 samples, 0.51%)</title><rect x="90.5559%" y="965" width="0.5083%" height="15" fill="rgb(231,178,15)" fg:x="39016" fg:w="219"/><text x="90.8059%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (68 samples, 0.16%)</title><rect x="90.9063%" y="949" width="0.1578%" height="15" fill="rgb(248,151,3)" fg:x="39167" fg:w="68"/><text x="91.1563%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (68 samples, 0.16%)</title><rect x="90.9063%" y="933" width="0.1578%" height="15" fill="rgb(250,139,13)" fg:x="39167" fg:w="68"/><text x="91.1563%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (68 samples, 0.16%)</title><rect x="90.9063%" y="917" width="0.1578%" height="15" fill="rgb(243,107,53)" fg:x="39167" fg:w="68"/><text x="91.1563%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (32 samples, 0.07%)</title><rect x="90.9899%" y="901" width="0.0743%" height="15" fill="rgb(232,81,15)" fg:x="39203" fg:w="32"/><text x="91.2399%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.07%)</title><rect x="90.9899%" y="885" width="0.0743%" height="15" fill="rgb(225,187,48)" fg:x="39203" fg:w="32"/><text x="91.2399%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (32 samples, 0.07%)</title><rect x="90.9899%" y="869" width="0.0743%" height="15" fill="rgb(205,116,12)" fg:x="39203" fg:w="32"/><text x="91.2399%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.07%)</title><rect x="90.9899%" y="853" width="0.0743%" height="15" fill="rgb(220,222,31)" fg:x="39203" fg:w="32"/><text x="91.2399%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (14 samples, 0.03%)</title><rect x="91.0317%" y="837" width="0.0325%" height="15" fill="rgb(233,187,49)" fg:x="39221" fg:w="14"/><text x="91.2817%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="91.0526%" y="821" width="0.0116%" height="15" fill="rgb(211,168,53)" fg:x="39230" fg:w="5"/><text x="91.3026%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="91.0920%" y="965" width="0.0116%" height="15" fill="rgb(206,160,16)" fg:x="39247" fg:w="5"/><text x="91.3420%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (7 samples, 0.02%)</title><rect x="91.1501%" y="917" width="0.0162%" height="15" fill="rgb(254,164,13)" fg:x="39272" fg:w="7"/><text x="91.4001%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.01%)</title><rect x="91.1547%" y="901" width="0.0116%" height="15" fill="rgb(229,45,30)" fg:x="39274" fg:w="5"/><text x="91.4047%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="91.1454%" y="933" width="0.0232%" height="15" fill="rgb(237,32,10)" fg:x="39270" fg:w="10"/><text x="91.3954%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.01%)</title><rect x="91.1802%" y="933" width="0.0116%" height="15" fill="rgb(251,20,47)" fg:x="39285" fg:w="5"/><text x="91.4302%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (14 samples, 0.03%)</title><rect x="91.2174%" y="901" width="0.0325%" height="15" fill="rgb(251,116,12)" fg:x="39301" fg:w="14"/><text x="91.4674%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="91.2499%" y="901" width="0.0255%" height="15" fill="rgb(214,227,27)" fg:x="39315" fg:w="11"/><text x="91.4999%" y="911.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (5 samples, 0.01%)</title><rect x="91.2638%" y="885" width="0.0116%" height="15" fill="rgb(248,10,53)" fg:x="39321" fg:w="5"/><text x="91.5138%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.18%)</title><rect x="91.1083%" y="949" width="0.1834%" height="15" fill="rgb(221,176,25)" fg:x="39254" fg:w="79"/><text x="91.3583%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (43 samples, 0.10%)</title><rect x="91.1918%" y="933" width="0.0998%" height="15" fill="rgb(205,70,46)" fg:x="39290" fg:w="43"/><text x="91.4418%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (42 samples, 0.10%)</title><rect x="91.1942%" y="917" width="0.0975%" height="15" fill="rgb(217,45,38)" fg:x="39291" fg:w="42"/><text x="91.4442%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.02%)</title><rect x="91.2754%" y="901" width="0.0162%" height="15" fill="rgb(243,6,54)" fg:x="39326" fg:w="7"/><text x="91.5254%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.19%)</title><rect x="91.1036%" y="965" width="0.1950%" height="15" fill="rgb(242,76,23)" fg:x="39252" fg:w="84"/><text x="91.3536%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (11 samples, 0.03%)</title><rect x="91.3056%" y="965" width="0.0255%" height="15" fill="rgb(239,166,0)" fg:x="39339" fg:w="11"/><text x="91.5556%" y="975.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (10 samples, 0.02%)</title><rect x="91.3079%" y="949" width="0.0232%" height="15" fill="rgb(238,174,32)" fg:x="39340" fg:w="10"/><text x="91.5579%" y="959.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="91.3125%" y="933" width="0.0186%" height="15" fill="rgb(238,124,44)" fg:x="39342" fg:w="8"/><text x="91.5625%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="91.3195%" y="917" width="0.0116%" height="15" fill="rgb(206,185,9)" fg:x="39345" fg:w="5"/><text x="91.5695%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="91.3195%" y="901" width="0.0116%" height="15" fill="rgb(215,157,17)" fg:x="39345" fg:w="5"/><text x="91.5695%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.01%)</title><rect x="91.3195%" y="885" width="0.0116%" height="15" fill="rgb(251,17,29)" fg:x="39345" fg:w="5"/><text x="91.5695%" y="895.50"></text></g><g><title>hashbrown::raw::h2 (19 samples, 0.04%)</title><rect x="91.4007%" y="917" width="0.0441%" height="15" fill="rgb(227,113,27)" fg:x="39380" fg:w="19"/><text x="91.6507%" y="927.50"></text></g><g><title>core::cmp::Ord::min (13 samples, 0.03%)</title><rect x="91.4146%" y="901" width="0.0302%" height="15" fill="rgb(217,226,24)" fg:x="39386" fg:w="13"/><text x="91.6646%" y="911.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.02%)</title><rect x="91.4239%" y="885" width="0.0209%" height="15" fill="rgb(251,99,38)" fg:x="39390" fg:w="9"/><text x="91.6739%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (6 samples, 0.01%)</title><rect x="91.4657%" y="885" width="0.0139%" height="15" fill="rgb(231,147,19)" fg:x="39408" fg:w="6"/><text x="91.7157%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.04%)</title><rect x="91.4448%" y="917" width="0.0441%" height="15" fill="rgb(230,86,8)" fg:x="39399" fg:w="19"/><text x="91.6948%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.03%)</title><rect x="91.4611%" y="901" width="0.0279%" height="15" fill="rgb(237,159,39)" fg:x="39406" fg:w="12"/><text x="91.7111%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.02%)</title><rect x="91.5214%" y="901" width="0.0186%" height="15" fill="rgb(247,179,47)" fg:x="39432" fg:w="8"/><text x="91.7714%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (212 samples, 0.49%)</title><rect x="91.0642%" y="997" width="0.4921%" height="15" fill="rgb(253,152,26)" fg:x="39235" fg:w="212"/><text x="91.3142%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (210 samples, 0.49%)</title><rect x="91.0688%" y="981" width="0.4874%" height="15" fill="rgb(222,211,15)" fg:x="39237" fg:w="210"/><text x="91.3188%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (95 samples, 0.22%)</title><rect x="91.3357%" y="965" width="0.2205%" height="15" fill="rgb(236,193,6)" fg:x="39352" fg:w="95"/><text x="91.5857%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (95 samples, 0.22%)</title><rect x="91.3357%" y="949" width="0.2205%" height="15" fill="rgb(226,206,10)" fg:x="39352" fg:w="95"/><text x="91.5857%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (87 samples, 0.20%)</title><rect x="91.3543%" y="933" width="0.2019%" height="15" fill="rgb(213,125,22)" fg:x="39360" fg:w="87"/><text x="91.6043%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (29 samples, 0.07%)</title><rect x="91.4889%" y="917" width="0.0673%" height="15" fill="rgb(221,66,28)" fg:x="39418" fg:w="29"/><text x="91.7389%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.02%)</title><rect x="91.5400%" y="901" width="0.0162%" height="15" fill="rgb(222,84,53)" fg:x="39440" fg:w="7"/><text x="91.7900%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.02%)</title><rect x="91.6073%" y="965" width="0.0162%" height="15" fill="rgb(243,50,15)" fg:x="39469" fg:w="7"/><text x="91.8573%" y="975.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (5 samples, 0.01%)</title><rect x="91.6398%" y="933" width="0.0116%" height="15" fill="rgb(208,184,23)" fg:x="39483" fg:w="5"/><text x="91.8898%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (5 samples, 0.01%)</title><rect x="91.6398%" y="917" width="0.0116%" height="15" fill="rgb(221,83,2)" fg:x="39483" fg:w="5"/><text x="91.8898%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (28 samples, 0.06%)</title><rect x="91.5934%" y="981" width="0.0650%" height="15" fill="rgb(236,53,24)" fg:x="39463" fg:w="28"/><text x="91.8434%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (15 samples, 0.03%)</title><rect x="91.6235%" y="965" width="0.0348%" height="15" fill="rgb(244,171,29)" fg:x="39476" fg:w="15"/><text x="91.8735%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.03%)</title><rect x="91.6305%" y="949" width="0.0279%" height="15" fill="rgb(205,19,11)" fg:x="39479" fg:w="12"/><text x="91.8805%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.03%)</title><rect x="91.6700%" y="949" width="0.0325%" height="15" fill="rgb(207,108,29)" fg:x="39496" fg:w="14"/><text x="91.9200%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="91.6885%" y="933" width="0.0139%" height="15" fill="rgb(236,215,43)" fg:x="39504" fg:w="6"/><text x="91.9385%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (21 samples, 0.05%)</title><rect x="91.6607%" y="965" width="0.0487%" height="15" fill="rgb(213,58,35)" fg:x="39492" fg:w="21"/><text x="91.9107%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (26 samples, 0.06%)</title><rect x="91.6583%" y="981" width="0.0603%" height="15" fill="rgb(220,211,46)" fg:x="39491" fg:w="26"/><text x="91.9083%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (24 samples, 0.06%)</title><rect x="91.7187%" y="981" width="0.0557%" height="15" fill="rgb(212,134,16)" fg:x="39517" fg:w="24"/><text x="91.9687%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.05%)</title><rect x="91.7233%" y="965" width="0.0511%" height="15" fill="rgb(232,90,44)" fg:x="39519" fg:w="22"/><text x="91.9733%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (17 samples, 0.04%)</title><rect x="91.7349%" y="949" width="0.0395%" height="15" fill="rgb(212,18,36)" fg:x="39524" fg:w="17"/><text x="91.9849%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.02%)</title><rect x="91.8649%" y="949" width="0.0162%" height="15" fill="rgb(206,112,24)" fg:x="39580" fg:w="7"/><text x="92.1149%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (18 samples, 0.04%)</title><rect x="91.8417%" y="965" width="0.0418%" height="15" fill="rgb(238,223,40)" fg:x="39570" fg:w="18"/><text x="92.0917%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.02%)</title><rect x="91.8928%" y="965" width="0.0209%" height="15" fill="rgb(226,169,20)" fg:x="39592" fg:w="9"/><text x="92.1428%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (6 samples, 0.01%)</title><rect x="91.8997%" y="949" width="0.0139%" height="15" fill="rgb(241,64,52)" fg:x="39595" fg:w="6"/><text x="92.1497%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="91.9438%" y="917" width="0.0139%" height="15" fill="rgb(228,120,25)" fg:x="39614" fg:w="6"/><text x="92.1938%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (18 samples, 0.04%)</title><rect x="91.9183%" y="965" width="0.0418%" height="15" fill="rgb(234,108,19)" fg:x="39603" fg:w="18"/><text x="92.1683%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.03%)</title><rect x="91.9322%" y="949" width="0.0279%" height="15" fill="rgb(236,133,29)" fg:x="39609" fg:w="12"/><text x="92.1822%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="91.9438%" y="933" width="0.0162%" height="15" fill="rgb(246,174,53)" fg:x="39614" fg:w="7"/><text x="92.1938%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (95 samples, 0.22%)</title><rect x="91.7837%" y="981" width="0.2205%" height="15" fill="rgb(210,105,35)" fg:x="39545" fg:w="95"/><text x="92.0337%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.04%)</title><rect x="91.9601%" y="965" width="0.0441%" height="15" fill="rgb(225,27,26)" fg:x="39621" fg:w="19"/><text x="92.2101%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.03%)</title><rect x="91.9740%" y="949" width="0.0302%" height="15" fill="rgb(233,2,39)" fg:x="39627" fg:w="13"/><text x="92.2240%" y="959.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (5 samples, 0.01%)</title><rect x="91.9926%" y="933" width="0.0116%" height="15" fill="rgb(219,164,26)" fg:x="39635" fg:w="5"/><text x="92.2426%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (22 samples, 0.05%)</title><rect x="92.0135%" y="949" width="0.0511%" height="15" fill="rgb(236,211,5)" fg:x="39644" fg:w="22"/><text x="92.2635%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (18 samples, 0.04%)</title><rect x="92.0227%" y="933" width="0.0418%" height="15" fill="rgb(244,227,23)" fg:x="39648" fg:w="18"/><text x="92.2727%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.02%)</title><rect x="92.0413%" y="917" width="0.0232%" height="15" fill="rgb(230,184,8)" fg:x="39656" fg:w="10"/><text x="92.2913%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.02%)</title><rect x="92.0483%" y="901" width="0.0162%" height="15" fill="rgb(217,125,48)" fg:x="39659" fg:w="7"/><text x="92.2983%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (33 samples, 0.08%)</title><rect x="92.0088%" y="965" width="0.0766%" height="15" fill="rgb(223,192,47)" fg:x="39642" fg:w="33"/><text x="92.2588%" y="975.50"></text></g><g><title>hashbrown::raw::h2 (9 samples, 0.02%)</title><rect x="92.0645%" y="949" width="0.0209%" height="15" fill="rgb(226,119,10)" fg:x="39666" fg:w="9"/><text x="92.3145%" y="959.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="92.0645%" y="933" width="0.0209%" height="15" fill="rgb(221,49,29)" fg:x="39666" fg:w="9"/><text x="92.3145%" y="943.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.02%)</title><rect x="92.0645%" y="917" width="0.0209%" height="15" fill="rgb(217,205,19)" fg:x="39666" fg:w="9"/><text x="92.3145%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (971 samples, 2.25%)</title><rect x="89.8340%" y="1029" width="2.2537%" height="15" fill="rgb(242,104,7)" fg:x="38705" fg:w="971"/><text x="90.0840%" y="1039.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (962 samples, 2.23%)</title><rect x="89.8549%" y="1013" width="2.2328%" height="15" fill="rgb(209,154,48)" fg:x="38714" fg:w="962"/><text x="90.1049%" y="1023.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (229 samples, 0.53%)</title><rect x="91.5562%" y="997" width="0.5315%" height="15" fill="rgb(219,213,46)" fg:x="39447" fg:w="229"/><text x="91.8062%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (36 samples, 0.08%)</title><rect x="92.0042%" y="981" width="0.0836%" height="15" fill="rgb(229,105,38)" fg:x="39640" fg:w="36"/><text x="92.2542%" y="991.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (1,821 samples, 4.23%)</title><rect x="87.8635%" y="1061" width="4.2265%" height="15" fill="rgb(205,151,5)" fg:x="37856" fg:w="1821"/><text x="88.1135%" y="1071.50">bytec..</text></g><g><title>bytecode_verifier::dependencies::Context::new (1,821 samples, 4.23%)</title><rect x="87.8635%" y="1045" width="4.2265%" height="15" fill="rgb(248,115,40)" fg:x="37856" fg:w="1821"/><text x="88.1135%" y="1055.50">bytec..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="92.1759%" y="1013" width="0.0116%" height="15" fill="rgb(206,179,2)" fg:x="39714" fg:w="5"/><text x="92.4259%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (8 samples, 0.02%)</title><rect x="92.2038%" y="997" width="0.0186%" height="15" fill="rgb(230,103,24)" fg:x="39726" fg:w="8"/><text x="92.4538%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="92.1342%" y="1029" width="0.1114%" height="15" fill="rgb(218,152,4)" fg:x="39696" fg:w="48"/><text x="92.3842%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.06%)</title><rect x="92.1875%" y="1013" width="0.0580%" height="15" fill="rgb(236,161,54)" fg:x="39719" fg:w="25"/><text x="92.4375%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="92.2340%" y="997" width="0.0116%" height="15" fill="rgb(226,65,17)" fg:x="39739" fg:w="5"/><text x="92.4840%" y="1007.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="92.2711%" y="949" width="0.0186%" height="15" fill="rgb(221,134,44)" fg:x="39755" fg:w="8"/><text x="92.5211%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (8 samples, 0.02%)</title><rect x="92.2711%" y="933" width="0.0186%" height="15" fill="rgb(251,129,4)" fg:x="39755" fg:w="8"/><text x="92.5211%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u16 (7 samples, 0.02%)</title><rect x="92.2734%" y="917" width="0.0162%" height="15" fill="rgb(244,32,34)" fg:x="39756" fg:w="7"/><text x="92.5234%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="92.2734%" y="901" width="0.0162%" height="15" fill="rgb(251,224,37)" fg:x="39756" fg:w="7"/><text x="92.5234%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="92.2734%" y="885" width="0.0162%" height="15" fill="rgb(248,117,31)" fg:x="39756" fg:w="7"/><text x="92.5234%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="92.2734%" y="869" width="0.0162%" height="15" fill="rgb(222,208,37)" fg:x="39756" fg:w="7"/><text x="92.5234%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.01%)</title><rect x="92.2781%" y="853" width="0.0116%" height="15" fill="rgb(234,211,25)" fg:x="39758" fg:w="5"/><text x="92.5281%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="92.2943%" y="901" width="0.0139%" height="15" fill="rgb(211,72,6)" fg:x="39765" fg:w="6"/><text x="92.5443%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="92.3523%" y="885" width="0.0116%" height="15" fill="rgb(249,198,38)" fg:x="39790" fg:w="5"/><text x="92.6023%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.08%)</title><rect x="92.2897%" y="949" width="0.0789%" height="15" fill="rgb(221,86,51)" fg:x="39763" fg:w="34"/><text x="92.5397%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.08%)</title><rect x="92.2897%" y="933" width="0.0789%" height="15" fill="rgb(226,178,43)" fg:x="39763" fg:w="34"/><text x="92.5397%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.08%)</title><rect x="92.2897%" y="917" width="0.0789%" height="15" fill="rgb(215,145,7)" fg:x="39763" fg:w="34"/><text x="92.5397%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.06%)</title><rect x="92.3082%" y="901" width="0.0603%" height="15" fill="rgb(250,202,36)" fg:x="39771" fg:w="26"/><text x="92.5582%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.11%)</title><rect x="92.2688%" y="965" width="0.1114%" height="15" fill="rgb(215,86,13)" fg:x="39754" fg:w="48"/><text x="92.5188%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.01%)</title><rect x="92.3686%" y="949" width="0.0116%" height="15" fill="rgb(221,134,12)" fg:x="39797" fg:w="5"/><text x="92.6186%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="92.4080%" y="917" width="0.0116%" height="15" fill="rgb(213,82,10)" fg:x="39814" fg:w="5"/><text x="92.6580%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="92.4080%" y="901" width="0.0116%" height="15" fill="rgb(214,142,0)" fg:x="39814" fg:w="5"/><text x="92.6580%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="92.4034%" y="933" width="0.0255%" height="15" fill="rgb(205,145,9)" fg:x="39812" fg:w="11"/><text x="92.6534%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6 samples, 0.01%)</title><rect x="92.4359%" y="933" width="0.0139%" height="15" fill="rgb(244,214,8)" fg:x="39826" fg:w="6"/><text x="92.6859%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.01%)</title><rect x="92.4939%" y="869" width="0.0139%" height="15" fill="rgb(224,72,51)" fg:x="39851" fg:w="6"/><text x="92.7439%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.01%)</title><rect x="92.5078%" y="869" width="0.0116%" height="15" fill="rgb(233,137,37)" fg:x="39857" fg:w="5"/><text x="92.7578%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (29 samples, 0.07%)</title><rect x="92.4684%" y="901" width="0.0673%" height="15" fill="rgb(208,71,28)" fg:x="39840" fg:w="29"/><text x="92.7184%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (19 samples, 0.04%)</title><rect x="92.4916%" y="885" width="0.0441%" height="15" fill="rgb(226,31,7)" fg:x="39850" fg:w="19"/><text x="92.7416%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.02%)</title><rect x="92.5194%" y="869" width="0.0162%" height="15" fill="rgb(229,62,18)" fg:x="39862" fg:w="7"/><text x="92.7694%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (34 samples, 0.08%)</title><rect x="92.4591%" y="933" width="0.0789%" height="15" fill="rgb(226,74,28)" fg:x="39836" fg:w="34"/><text x="92.7091%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (33 samples, 0.08%)</title><rect x="92.4614%" y="917" width="0.0766%" height="15" fill="rgb(214,170,18)" fg:x="39837" fg:w="33"/><text x="92.7114%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (127 samples, 0.29%)</title><rect x="92.2456%" y="1029" width="0.2948%" height="15" fill="rgb(227,229,35)" fg:x="39744" fg:w="127"/><text x="92.4956%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (123 samples, 0.29%)</title><rect x="92.2548%" y="1013" width="0.2855%" height="15" fill="rgb(225,181,39)" fg:x="39748" fg:w="123"/><text x="92.5048%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (122 samples, 0.28%)</title><rect x="92.2572%" y="997" width="0.2832%" height="15" fill="rgb(253,124,44)" fg:x="39749" fg:w="122"/><text x="92.5072%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (121 samples, 0.28%)</title><rect x="92.2595%" y="981" width="0.2808%" height="15" fill="rgb(220,75,18)" fg:x="39750" fg:w="121"/><text x="92.5095%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (69 samples, 0.16%)</title><rect x="92.3802%" y="965" width="0.1601%" height="15" fill="rgb(239,175,43)" fg:x="39802" fg:w="69"/><text x="92.6302%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (65 samples, 0.15%)</title><rect x="92.3895%" y="949" width="0.1509%" height="15" fill="rgb(228,112,50)" fg:x="39806" fg:w="65"/><text x="92.6395%" y="959.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_visibility_usage (199 samples, 0.46%)</title><rect x="92.0947%" y="1045" width="0.4619%" height="15" fill="rgb(232,105,36)" fg:x="39679" fg:w="199"/><text x="92.3447%" y="1055.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_instantiation_at (5 samples, 0.01%)</title><rect x="92.5450%" y="1029" width="0.0116%" height="15" fill="rgb(227,137,47)" fg:x="39873" fg:w="5"/><text x="92.7950%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_instantiation_at (5 samples, 0.01%)</title><rect x="92.5450%" y="1013" width="0.0116%" height="15" fill="rgb(217,51,9)" fg:x="39873" fg:w="5"/><text x="92.7950%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="92.5450%" y="997" width="0.0116%" height="15" fill="rgb(245,117,0)" fg:x="39873" fg:w="5"/><text x="92.7950%" y="1007.50"></text></g><g><title>bytecode_verifier::dependencies::verify_all_script_visibility_usage (202 samples, 0.47%)</title><rect x="92.0901%" y="1061" width="0.4688%" height="15" fill="rgb(252,52,30)" fg:x="39677" fg:w="202"/><text x="92.3401%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (9 samples, 0.02%)</title><rect x="92.5728%" y="1029" width="0.0209%" height="15" fill="rgb(227,85,33)" fg:x="39885" fg:w="9"/><text x="92.8228%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="92.5821%" y="1013" width="0.0116%" height="15" fill="rgb(220,157,20)" fg:x="39889" fg:w="5"/><text x="92.8321%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.03%)</title><rect x="92.5705%" y="1045" width="0.0302%" height="15" fill="rgb(254,14,34)" fg:x="39884" fg:w="13"/><text x="92.8205%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="92.6007%" y="1045" width="0.0139%" height="15" fill="rgb(216,103,41)" fg:x="39897" fg:w="6"/><text x="92.8507%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="92.6587%" y="933" width="0.0116%" height="15" fill="rgb(245,221,9)" fg:x="39922" fg:w="5"/><text x="92.9087%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="92.6587%" y="917" width="0.0116%" height="15" fill="rgb(254,136,47)" fg:x="39922" fg:w="5"/><text x="92.9087%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="92.6703%" y="933" width="0.0116%" height="15" fill="rgb(235,71,46)" fg:x="39927" fg:w="5"/><text x="92.9203%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.03%)</title><rect x="92.6541%" y="981" width="0.0325%" height="15" fill="rgb(242,154,29)" fg:x="39920" fg:w="14"/><text x="92.9041%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.03%)</title><rect x="92.6541%" y="965" width="0.0325%" height="15" fill="rgb(210,65,31)" fg:x="39920" fg:w="14"/><text x="92.9041%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.03%)</title><rect x="92.6541%" y="949" width="0.0325%" height="15" fill="rgb(244,9,50)" fg:x="39920" fg:w="14"/><text x="92.9041%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (25 samples, 0.06%)</title><rect x="92.6308%" y="997" width="0.0580%" height="15" fill="rgb(215,141,38)" fg:x="39910" fg:w="25"/><text x="92.8808%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (30 samples, 0.07%)</title><rect x="92.6308%" y="1045" width="0.0696%" height="15" fill="rgb(241,129,6)" fg:x="39910" fg:w="30"/><text x="92.8808%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (30 samples, 0.07%)</title><rect x="92.6308%" y="1029" width="0.0696%" height="15" fill="rgb(253,169,4)" fg:x="39910" fg:w="30"/><text x="92.8808%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (30 samples, 0.07%)</title><rect x="92.6308%" y="1013" width="0.0696%" height="15" fill="rgb(237,82,36)" fg:x="39910" fg:w="30"/><text x="92.8808%" y="1023.50"></text></g><g><title>alloc::str::from_boxed_utf8_unchecked (5 samples, 0.01%)</title><rect x="92.6889%" y="997" width="0.0116%" height="15" fill="rgb(209,171,11)" fg:x="39935" fg:w="5"/><text x="92.9389%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (8 samples, 0.02%)</title><rect x="92.7260%" y="1029" width="0.0186%" height="15" fill="rgb(242,19,22)" fg:x="39951" fg:w="8"/><text x="92.9760%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="92.7306%" y="1013" width="0.0139%" height="15" fill="rgb(251,122,24)" fg:x="39953" fg:w="6"/><text x="92.9806%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.01%)</title><rect x="92.7608%" y="997" width="0.0116%" height="15" fill="rgb(226,166,42)" fg:x="39966" fg:w="5"/><text x="93.0108%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5 samples, 0.01%)</title><rect x="92.7608%" y="981" width="0.0116%" height="15" fill="rgb(244,101,48)" fg:x="39966" fg:w="5"/><text x="93.0108%" y="991.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="92.7608%" y="965" width="0.0116%" height="15" fill="rgb(227,125,1)" fg:x="39966" fg:w="5"/><text x="93.0108%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (13 samples, 0.03%)</title><rect x="92.7562%" y="1013" width="0.0302%" height="15" fill="rgb(206,79,43)" fg:x="39964" fg:w="13"/><text x="93.0062%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="92.7724%" y="997" width="0.0139%" height="15" fill="rgb(241,109,41)" fg:x="39971" fg:w="6"/><text x="93.0224%" y="1007.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="92.7747%" y="981" width="0.0116%" height="15" fill="rgb(219,73,4)" fg:x="39972" fg:w="5"/><text x="93.0247%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (8 samples, 0.02%)</title><rect x="92.8815%" y="965" width="0.0186%" height="15" fill="rgb(239,25,41)" fg:x="40018" fg:w="8"/><text x="93.1315%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.01%)</title><rect x="92.8885%" y="949" width="0.0116%" height="15" fill="rgb(208,88,46)" fg:x="40021" fg:w="5"/><text x="93.1385%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.01%)</title><rect x="92.9256%" y="949" width="0.0116%" height="15" fill="rgb(239,184,9)" fg:x="40037" fg:w="5"/><text x="93.1756%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.10%)</title><rect x="92.8513%" y="981" width="0.0998%" height="15" fill="rgb(223,114,13)" fg:x="40005" fg:w="43"/><text x="93.1013%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.05%)</title><rect x="92.9001%" y="965" width="0.0511%" height="15" fill="rgb(214,28,42)" fg:x="40026" fg:w="22"/><text x="93.1501%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.01%)</title><rect x="92.9372%" y="949" width="0.0139%" height="15" fill="rgb(252,32,44)" fg:x="40042" fg:w="6"/><text x="93.1872%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (6 samples, 0.01%)</title><rect x="92.9790%" y="933" width="0.0139%" height="15" fill="rgb(231,159,4)" fg:x="40060" fg:w="6"/><text x="93.2290%" y="943.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (17 samples, 0.04%)</title><rect x="92.9651%" y="965" width="0.0395%" height="15" fill="rgb(210,35,26)" fg:x="40054" fg:w="17"/><text x="93.2151%" y="975.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (16 samples, 0.04%)</title><rect x="92.9674%" y="949" width="0.0371%" height="15" fill="rgb(208,190,37)" fg:x="40055" fg:w="16"/><text x="93.2174%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (5 samples, 0.01%)</title><rect x="92.9929%" y="933" width="0.0116%" height="15" fill="rgb(226,148,22)" fg:x="40066" fg:w="5"/><text x="93.2429%" y="943.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (37 samples, 0.09%)</title><rect x="92.9511%" y="981" width="0.0859%" height="15" fill="rgb(242,153,24)" fg:x="40048" fg:w="37"/><text x="93.2011%" y="991.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (14 samples, 0.03%)</title><rect x="93.0045%" y="965" width="0.0325%" height="15" fill="rgb(213,133,7)" fg:x="40071" fg:w="14"/><text x="93.2545%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (15 samples, 0.03%)</title><rect x="93.0370%" y="981" width="0.0348%" height="15" fill="rgb(248,206,18)" fg:x="40085" fg:w="15"/><text x="93.2870%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="93.0602%" y="965" width="0.0116%" height="15" fill="rgb(233,157,4)" fg:x="40095" fg:w="5"/><text x="93.3102%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.01%)</title><rect x="93.0858%" y="949" width="0.0116%" height="15" fill="rgb(249,179,32)" fg:x="40106" fg:w="5"/><text x="93.3358%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (153 samples, 0.36%)</title><rect x="92.7446%" y="1029" width="0.3551%" height="15" fill="rgb(248,69,35)" fg:x="39959" fg:w="153"/><text x="92.9946%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (133 samples, 0.31%)</title><rect x="92.7910%" y="1013" width="0.3087%" height="15" fill="rgb(249,158,38)" fg:x="39979" fg:w="133"/><text x="93.0410%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (128 samples, 0.30%)</title><rect x="92.8026%" y="997" width="0.2971%" height="15" fill="rgb(223,18,43)" fg:x="39984" fg:w="128"/><text x="93.0526%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.03%)</title><rect x="93.0718%" y="981" width="0.0279%" height="15" fill="rgb(238,42,45)" fg:x="40100" fg:w="12"/><text x="93.3218%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="93.0742%" y="965" width="0.0255%" height="15" fill="rgb(219,65,47)" fg:x="40101" fg:w="11"/><text x="93.3242%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (173 samples, 0.40%)</title><rect x="92.7028%" y="1045" width="0.4015%" height="15" fill="rgb(248,153,12)" fg:x="39941" fg:w="173"/><text x="92.9528%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="93.1159%" y="1029" width="0.0116%" height="15" fill="rgb(240,118,4)" fg:x="40119" fg:w="5"/><text x="93.3659%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.01%)</title><rect x="93.1159%" y="1013" width="0.0116%" height="15" fill="rgb(250,96,34)" fg:x="40119" fg:w="5"/><text x="93.3659%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (5 samples, 0.01%)</title><rect x="93.1322%" y="1029" width="0.0116%" height="15" fill="rgb(221,15,4)" fg:x="40126" fg:w="5"/><text x="93.3822%" y="1039.50"></text></g><g><title>bytecode_verifier::dependencies::compare_cross_module_signatures (19 samples, 0.04%)</title><rect x="93.1043%" y="1045" width="0.0441%" height="15" fill="rgb(217,149,33)" fg:x="40114" fg:w="19"/><text x="93.3543%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.01%)</title><rect x="93.1507%" y="1029" width="0.0139%" height="15" fill="rgb(213,58,29)" fg:x="40134" fg:w="6"/><text x="93.4007%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="93.1531%" y="1013" width="0.0116%" height="15" fill="rgb(236,218,9)" fg:x="40135" fg:w="5"/><text x="93.4031%" y="1023.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (5 samples, 0.01%)</title><rect x="93.1693%" y="1013" width="0.0116%" height="15" fill="rgb(248,40,19)" fg:x="40142" fg:w="5"/><text x="93.4193%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (5 samples, 0.01%)</title><rect x="93.1693%" y="997" width="0.0116%" height="15" fill="rgb(212,17,6)" fg:x="40142" fg:w="5"/><text x="93.4193%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (10 samples, 0.02%)</title><rect x="93.1647%" y="1029" width="0.0232%" height="15" fill="rgb(206,212,20)" fg:x="40140" fg:w="10"/><text x="93.4147%" y="1039.50"></text></g><g><title>bytecode_verifier::dependencies::compatible_fun_type_parameters (19 samples, 0.04%)</title><rect x="93.1484%" y="1045" width="0.0441%" height="15" fill="rgb(229,80,37)" fg:x="40133" fg:w="19"/><text x="93.3984%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (5 samples, 0.01%)</title><rect x="93.1948%" y="1029" width="0.0116%" height="15" fill="rgb(253,8,37)" fg:x="40153" fg:w="5"/><text x="93.4448%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (5 samples, 0.01%)</title><rect x="93.1948%" y="1013" width="0.0116%" height="15" fill="rgb(215,16,43)" fg:x="40153" fg:w="5"/><text x="93.4448%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.01%)</title><rect x="93.1948%" y="997" width="0.0116%" height="15" fill="rgb(236,219,16)" fg:x="40153" fg:w="5"/><text x="93.4448%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (13 samples, 0.03%)</title><rect x="93.1948%" y="1045" width="0.0302%" height="15" fill="rgb(251,0,3)" fg:x="40153" fg:w="13"/><text x="93.4448%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (8 samples, 0.02%)</title><rect x="93.2065%" y="1029" width="0.0186%" height="15" fill="rgb(207,133,37)" fg:x="40158" fg:w="8"/><text x="93.4565%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (7 samples, 0.02%)</title><rect x="93.2088%" y="1013" width="0.0162%" height="15" fill="rgb(250,143,20)" fg:x="40159" fg:w="7"/><text x="93.4588%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (7 samples, 0.02%)</title><rect x="93.2088%" y="997" width="0.0162%" height="15" fill="rgb(242,19,50)" fg:x="40159" fg:w="7"/><text x="93.4588%" y="1007.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.01%)</title><rect x="93.2111%" y="981" width="0.0139%" height="15" fill="rgb(206,124,43)" fg:x="40160" fg:w="6"/><text x="93.4611%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (8 samples, 0.02%)</title><rect x="93.2250%" y="1045" width="0.0186%" height="15" fill="rgb(229,4,38)" fg:x="40166" fg:w="8"/><text x="93.4750%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (8 samples, 0.02%)</title><rect x="93.2250%" y="1029" width="0.0186%" height="15" fill="rgb(247,220,45)" fg:x="40166" fg:w="8"/><text x="93.4750%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (8 samples, 0.02%)</title><rect x="93.2250%" y="1013" width="0.0186%" height="15" fill="rgb(247,195,0)" fg:x="40166" fg:w="8"/><text x="93.4750%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (7 samples, 0.02%)</title><rect x="93.2273%" y="997" width="0.0162%" height="15" fill="rgb(252,12,19)" fg:x="40167" fg:w="7"/><text x="93.4773%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="93.2506%" y="1013" width="0.0116%" height="15" fill="rgb(222,49,50)" fg:x="40177" fg:w="5"/><text x="93.5006%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="93.2482%" y="1029" width="0.0162%" height="15" fill="rgb(209,157,28)" fg:x="40176" fg:w="7"/><text x="93.4982%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (9 samples, 0.02%)</title><rect x="93.2459%" y="1045" width="0.0209%" height="15" fill="rgb(238,174,24)" fg:x="40175" fg:w="9"/><text x="93.4959%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="93.2714%" y="1029" width="0.0186%" height="15" fill="rgb(224,17,28)" fg:x="40186" fg:w="8"/><text x="93.5214%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="93.2784%" y="1013" width="0.0116%" height="15" fill="rgb(249,7,29)" fg:x="40189" fg:w="5"/><text x="93.5284%" y="1023.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (11 samples, 0.03%)</title><rect x="93.2668%" y="1045" width="0.0255%" height="15" fill="rgb(243,178,4)" fg:x="40184" fg:w="11"/><text x="93.5168%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="93.2923%" y="997" width="0.0116%" height="15" fill="rgb(246,138,35)" fg:x="40195" fg:w="5"/><text x="93.5423%" y="1007.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::identifier_at (6 samples, 0.01%)</title><rect x="93.2923%" y="1045" width="0.0139%" height="15" fill="rgb(251,85,18)" fg:x="40195" fg:w="6"/><text x="93.5423%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::identifier_at (6 samples, 0.01%)</title><rect x="93.2923%" y="1029" width="0.0139%" height="15" fill="rgb(254,55,9)" fg:x="40195" fg:w="6"/><text x="93.5423%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="93.2923%" y="1013" width="0.0139%" height="15" fill="rgb(248,4,50)" fg:x="40195" fg:w="6"/><text x="93.5423%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="93.3086%" y="1013" width="0.0116%" height="15" fill="rgb(215,208,14)" fg:x="40202" fg:w="5"/><text x="93.5586%" y="1023.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_handle_at (7 samples, 0.02%)</title><rect x="93.3063%" y="1045" width="0.0162%" height="15" fill="rgb(218,37,18)" fg:x="40201" fg:w="7"/><text x="93.5563%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_handle_at (7 samples, 0.02%)</title><rect x="93.3063%" y="1029" width="0.0162%" height="15" fill="rgb(206,104,13)" fg:x="40201" fg:w="7"/><text x="93.5563%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="93.3504%" y="917" width="0.0139%" height="15" fill="rgb(248,94,22)" fg:x="40220" fg:w="6"/><text x="93.6004%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="93.3504%" y="901" width="0.0139%" height="15" fill="rgb(235,42,46)" fg:x="40220" fg:w="6"/><text x="93.6004%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="93.3689%" y="917" width="0.0162%" height="15" fill="rgb(220,228,48)" fg:x="40228" fg:w="7"/><text x="93.6189%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (28 samples, 0.06%)</title><rect x="93.3248%" y="981" width="0.0650%" height="15" fill="rgb(216,58,12)" fg:x="40209" fg:w="28"/><text x="93.5748%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (23 samples, 0.05%)</title><rect x="93.3364%" y="965" width="0.0534%" height="15" fill="rgb(223,97,52)" fg:x="40214" fg:w="23"/><text x="93.5864%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="93.3387%" y="949" width="0.0511%" height="15" fill="rgb(208,159,17)" fg:x="40215" fg:w="22"/><text x="93.5887%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.04%)</title><rect x="93.3457%" y="933" width="0.0441%" height="15" fill="rgb(215,172,9)" fg:x="40218" fg:w="19"/><text x="93.5957%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (31 samples, 0.07%)</title><rect x="93.3225%" y="1029" width="0.0720%" height="15" fill="rgb(252,175,30)" fg:x="40208" fg:w="31"/><text x="93.5725%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.07%)</title><rect x="93.3225%" y="1013" width="0.0720%" height="15" fill="rgb(209,159,10)" fg:x="40208" fg:w="31"/><text x="93.5725%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (30 samples, 0.07%)</title><rect x="93.3248%" y="997" width="0.0696%" height="15" fill="rgb(229,73,51)" fg:x="40209" fg:w="30"/><text x="93.5748%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="93.3945%" y="997" width="0.0139%" height="15" fill="rgb(208,212,43)" fg:x="40239" fg:w="6"/><text x="93.6445%" y="1007.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::address_identifier_at (7 samples, 0.02%)</title><rect x="93.3945%" y="1029" width="0.0162%" height="15" fill="rgb(254,123,53)" fg:x="40239" fg:w="7"/><text x="93.6445%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::address_identifier_at (7 samples, 0.02%)</title><rect x="93.3945%" y="1013" width="0.0162%" height="15" fill="rgb(254,128,49)" fg:x="40239" fg:w="7"/><text x="93.6445%" y="1023.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (42 samples, 0.10%)</title><rect x="93.3225%" y="1045" width="0.0975%" height="15" fill="rgb(246,16,16)" fg:x="40208" fg:w="42"/><text x="93.5725%" y="1055.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (10 samples, 0.02%)</title><rect x="93.4200%" y="1045" width="0.0232%" height="15" fill="rgb(209,200,1)" fg:x="40250" fg:w="10"/><text x="93.6700%" y="1055.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (9 samples, 0.02%)</title><rect x="93.4223%" y="1029" width="0.0209%" height="15" fill="rgb(235,9,3)" fg:x="40251" fg:w="9"/><text x="93.6723%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="93.4246%" y="1013" width="0.0186%" height="15" fill="rgb(233,121,54)" fg:x="40252" fg:w="8"/><text x="93.6746%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="93.4316%" y="997" width="0.0116%" height="15" fill="rgb(236,80,25)" fg:x="40255" fg:w="5"/><text x="93.6816%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="93.4525%" y="981" width="0.0162%" height="15" fill="rgb(220,44,24)" fg:x="40264" fg:w="7"/><text x="93.7025%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="93.4525%" y="965" width="0.0162%" height="15" fill="rgb(236,225,16)" fg:x="40264" fg:w="7"/><text x="93.7025%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="93.4525%" y="949" width="0.0162%" height="15" fill="rgb(237,140,0)" fg:x="40264" fg:w="7"/><text x="93.7025%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="93.4571%" y="933" width="0.0116%" height="15" fill="rgb(243,225,53)" fg:x="40266" fg:w="5"/><text x="93.7071%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="93.4827%" y="853" width="0.0139%" height="15" fill="rgb(240,140,30)" fg:x="40277" fg:w="6"/><text x="93.7327%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="93.4780%" y="869" width="0.0232%" height="15" fill="rgb(217,51,16)" fg:x="40275" fg:w="10"/><text x="93.7280%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="93.4734%" y="917" width="0.0441%" height="15" fill="rgb(245,75,50)" fg:x="40273" fg:w="19"/><text x="93.7234%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="93.4734%" y="901" width="0.0441%" height="15" fill="rgb(208,174,22)" fg:x="40273" fg:w="19"/><text x="93.7234%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="93.4734%" y="885" width="0.0441%" height="15" fill="rgb(219,98,50)" fg:x="40273" fg:w="19"/><text x="93.7234%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="93.5012%" y="869" width="0.0162%" height="15" fill="rgb(243,138,3)" fg:x="40285" fg:w="7"/><text x="93.7512%" y="879.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (23 samples, 0.05%)</title><rect x="93.4710%" y="965" width="0.0534%" height="15" fill="rgb(243,132,26)" fg:x="40272" fg:w="23"/><text x="93.7210%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (23 samples, 0.05%)</title><rect x="93.4710%" y="949" width="0.0534%" height="15" fill="rgb(250,201,8)" fg:x="40272" fg:w="23"/><text x="93.7210%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (23 samples, 0.05%)</title><rect x="93.4710%" y="933" width="0.0534%" height="15" fill="rgb(213,91,26)" fg:x="40272" fg:w="23"/><text x="93.7210%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.01%)</title><rect x="93.5244%" y="901" width="0.0116%" height="15" fill="rgb(229,117,1)" fg:x="40295" fg:w="5"/><text x="93.7744%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="93.5244%" y="885" width="0.0116%" height="15" fill="rgb(229,24,6)" fg:x="40295" fg:w="5"/><text x="93.7744%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="93.5244%" y="869" width="0.0116%" height="15" fill="rgb(206,69,11)" fg:x="40295" fg:w="5"/><text x="93.7744%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="93.5244%" y="853" width="0.0116%" height="15" fill="rgb(234,111,34)" fg:x="40295" fg:w="5"/><text x="93.7744%" y="863.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="93.5244%" y="949" width="0.0186%" height="15" fill="rgb(213,187,51)" fg:x="40295" fg:w="8"/><text x="93.7744%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (8 samples, 0.02%)</title><rect x="93.5244%" y="933" width="0.0186%" height="15" fill="rgb(207,45,11)" fg:x="40295" fg:w="8"/><text x="93.7744%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.02%)</title><rect x="93.5244%" y="917" width="0.0186%" height="15" fill="rgb(225,151,47)" fg:x="40295" fg:w="8"/><text x="93.7744%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="93.5430%" y="901" width="0.0116%" height="15" fill="rgb(211,226,5)" fg:x="40303" fg:w="5"/><text x="93.7930%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (53 samples, 0.12%)</title><rect x="93.4455%" y="997" width="0.1230%" height="15" fill="rgb(214,83,52)" fg:x="40261" fg:w="53"/><text x="93.6955%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (43 samples, 0.10%)</title><rect x="93.4687%" y="981" width="0.0998%" height="15" fill="rgb(229,49,53)" fg:x="40271" fg:w="43"/><text x="93.7187%" y="991.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (19 samples, 0.04%)</title><rect x="93.5244%" y="965" width="0.0441%" height="15" fill="rgb(246,8,28)" fg:x="40295" fg:w="19"/><text x="93.7744%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="93.5430%" y="949" width="0.0255%" height="15" fill="rgb(207,28,41)" fg:x="40303" fg:w="11"/><text x="93.7930%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="93.5430%" y="933" width="0.0255%" height="15" fill="rgb(254,22,25)" fg:x="40303" fg:w="11"/><text x="93.7930%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.03%)</title><rect x="93.5430%" y="917" width="0.0255%" height="15" fill="rgb(209,120,42)" fg:x="40303" fg:w="11"/><text x="93.7930%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.01%)</title><rect x="93.5546%" y="901" width="0.0139%" height="15" fill="rgb(216,194,18)" fg:x="40308" fg:w="6"/><text x="93.8046%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="93.5546%" y="885" width="0.0139%" height="15" fill="rgb(213,70,17)" fg:x="40308" fg:w="6"/><text x="93.8046%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="93.5546%" y="869" width="0.0139%" height="15" fill="rgb(228,66,19)" fg:x="40308" fg:w="6"/><text x="93.8046%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="93.5546%" y="853" width="0.0139%" height="15" fill="rgb(236,221,54)" fg:x="40308" fg:w="6"/><text x="93.8046%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.01%)</title><rect x="93.5569%" y="837" width="0.0116%" height="15" fill="rgb(207,175,15)" fg:x="40309" fg:w="5"/><text x="93.8069%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.01%)</title><rect x="93.5941%" y="933" width="0.0139%" height="15" fill="rgb(234,76,8)" fg:x="40325" fg:w="6"/><text x="93.8441%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="93.5848%" y="965" width="0.0255%" height="15" fill="rgb(243,106,0)" fg:x="40321" fg:w="11"/><text x="93.8348%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (7 samples, 0.02%)</title><rect x="93.5941%" y="949" width="0.0162%" height="15" fill="rgb(208,48,19)" fg:x="40325" fg:w="7"/><text x="93.8441%" y="959.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="93.6149%" y="933" width="0.0139%" height="15" fill="rgb(251,50,29)" fg:x="40334" fg:w="6"/><text x="93.8649%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="93.6149%" y="917" width="0.0139%" height="15" fill="rgb(222,31,49)" fg:x="40334" fg:w="6"/><text x="93.8649%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.01%)</title><rect x="93.6149%" y="901" width="0.0139%" height="15" fill="rgb(232,33,18)" fg:x="40334" fg:w="6"/><text x="93.8649%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="93.6173%" y="885" width="0.0116%" height="15" fill="rgb(209,1,44)" fg:x="40335" fg:w="5"/><text x="93.8673%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (17 samples, 0.04%)</title><rect x="93.6103%" y="965" width="0.0395%" height="15" fill="rgb(211,7,1)" fg:x="40332" fg:w="17"/><text x="93.8603%" y="975.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (16 samples, 0.04%)</title><rect x="93.6126%" y="949" width="0.0371%" height="15" fill="rgb(224,111,27)" fg:x="40333" fg:w="16"/><text x="93.8626%" y="959.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="93.6289%" y="933" width="0.0209%" height="15" fill="rgb(252,195,39)" fg:x="40340" fg:w="9"/><text x="93.8789%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="93.6382%" y="917" width="0.0116%" height="15" fill="rgb(237,198,5)" fg:x="40344" fg:w="5"/><text x="93.8882%" y="927.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (486 samples, 1.13%)</title><rect x="92.5589%" y="1061" width="1.1280%" height="15" fill="rgb(232,148,1)" fg:x="39879" fg:w="486"/><text x="92.8089%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (105 samples, 0.24%)</title><rect x="93.4432%" y="1045" width="0.2437%" height="15" fill="rgb(249,41,3)" fg:x="40260" fg:w="105"/><text x="93.6932%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (104 samples, 0.24%)</title><rect x="93.4455%" y="1029" width="0.2414%" height="15" fill="rgb(215,14,33)" fg:x="40261" fg:w="104"/><text x="93.6955%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (104 samples, 0.24%)</title><rect x="93.4455%" y="1013" width="0.2414%" height="15" fill="rgb(209,146,24)" fg:x="40261" fg:w="104"/><text x="93.6955%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (51 samples, 0.12%)</title><rect x="93.5685%" y="997" width="0.1184%" height="15" fill="rgb(219,51,47)" fg:x="40314" fg:w="51"/><text x="93.8185%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.12%)</title><rect x="93.5708%" y="981" width="0.1160%" height="15" fill="rgb(234,217,40)" fg:x="40315" fg:w="50"/><text x="93.8208%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (15 samples, 0.03%)</title><rect x="93.6521%" y="965" width="0.0348%" height="15" fill="rgb(228,34,26)" fg:x="40350" fg:w="15"/><text x="93.9021%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.03%)</title><rect x="93.6544%" y="949" width="0.0325%" height="15" fill="rgb(224,50,29)" fg:x="40351" fg:w="14"/><text x="93.9044%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.03%)</title><rect x="93.6614%" y="933" width="0.0255%" height="15" fill="rgb(205,79,51)" fg:x="40354" fg:w="11"/><text x="93.9114%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="93.7147%" y="965" width="0.0116%" height="15" fill="rgb(218,136,28)" fg:x="40377" fg:w="5"/><text x="93.9647%" y="975.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (7 samples, 0.02%)</title><rect x="93.7310%" y="949" width="0.0162%" height="15" fill="rgb(220,150,10)" fg:x="40384" fg:w="7"/><text x="93.9810%" y="959.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (7 samples, 0.02%)</title><rect x="93.7310%" y="933" width="0.0162%" height="15" fill="rgb(242,158,47)" fg:x="40384" fg:w="7"/><text x="93.9810%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (5 samples, 0.01%)</title><rect x="93.7356%" y="917" width="0.0116%" height="15" fill="rgb(209,68,0)" fg:x="40386" fg:w="5"/><text x="93.9856%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (5 samples, 0.01%)</title><rect x="93.7356%" y="901" width="0.0116%" height="15" fill="rgb(208,13,41)" fg:x="40386" fg:w="5"/><text x="93.9856%" y="911.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (21 samples, 0.05%)</title><rect x="93.7264%" y="965" width="0.0487%" height="15" fill="rgb(226,201,7)" fg:x="40382" fg:w="21"/><text x="93.9764%" y="975.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (12 samples, 0.03%)</title><rect x="93.7472%" y="949" width="0.0279%" height="15" fill="rgb(236,103,26)" fg:x="40391" fg:w="12"/><text x="93.9972%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.02%)</title><rect x="93.7519%" y="933" width="0.0232%" height="15" fill="rgb(243,162,8)" fg:x="40393" fg:w="10"/><text x="94.0019%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (8 samples, 0.02%)</title><rect x="93.7565%" y="917" width="0.0186%" height="15" fill="rgb(237,225,11)" fg:x="40395" fg:w="8"/><text x="94.0065%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (8 samples, 0.02%)</title><rect x="93.7565%" y="901" width="0.0186%" height="15" fill="rgb(247,186,32)" fg:x="40395" fg:w="8"/><text x="94.0065%" y="911.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (8 samples, 0.02%)</title><rect x="93.7565%" y="885" width="0.0186%" height="15" fill="rgb(215,26,28)" fg:x="40395" fg:w="8"/><text x="94.0065%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (39 samples, 0.09%)</title><rect x="93.6962%" y="1029" width="0.0905%" height="15" fill="rgb(208,121,6)" fg:x="40369" fg:w="39"/><text x="93.9462%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 0.09%)</title><rect x="93.6962%" y="1013" width="0.0905%" height="15" fill="rgb(225,91,3)" fg:x="40369" fg:w="39"/><text x="93.9462%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (37 samples, 0.09%)</title><rect x="93.7008%" y="997" width="0.0859%" height="15" fill="rgb(246,119,36)" fg:x="40371" fg:w="37"/><text x="93.9508%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.08%)</title><rect x="93.7031%" y="981" width="0.0836%" height="15" fill="rgb(254,173,2)" fg:x="40372" fg:w="36"/><text x="93.9531%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (40 samples, 0.09%)</title><rect x="93.6962%" y="1045" width="0.0928%" height="15" fill="rgb(209,87,54)" fg:x="40369" fg:w="40"/><text x="93.9462%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.02%)</title><rect x="93.8122%" y="917" width="0.0186%" height="15" fill="rgb(223,216,20)" fg:x="40419" fg:w="8"/><text x="94.0622%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="93.8192%" y="901" width="0.0116%" height="15" fill="rgb(220,31,8)" fg:x="40422" fg:w="5"/><text x="94.0692%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (14 samples, 0.03%)</title><rect x="93.8006%" y="981" width="0.0325%" height="15" fill="rgb(220,185,15)" fg:x="40414" fg:w="14"/><text x="94.0506%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.03%)</title><rect x="93.8053%" y="965" width="0.0279%" height="15" fill="rgb(247,190,50)" fg:x="40416" fg:w="12"/><text x="94.0553%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="93.8076%" y="949" width="0.0255%" height="15" fill="rgb(239,173,47)" fg:x="40417" fg:w="11"/><text x="94.0576%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.03%)</title><rect x="93.8076%" y="933" width="0.0255%" height="15" fill="rgb(218,190,42)" fg:x="40417" fg:w="11"/><text x="94.0576%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (18 samples, 0.04%)</title><rect x="93.7983%" y="1029" width="0.0418%" height="15" fill="rgb(251,207,16)" fg:x="40413" fg:w="18"/><text x="94.0483%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.04%)</title><rect x="93.7983%" y="1013" width="0.0418%" height="15" fill="rgb(222,199,47)" fg:x="40413" fg:w="18"/><text x="94.0483%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (18 samples, 0.04%)</title><rect x="93.7983%" y="997" width="0.0418%" height="15" fill="rgb(245,190,7)" fg:x="40413" fg:w="18"/><text x="94.0483%" y="1007.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (22 samples, 0.05%)</title><rect x="93.7983%" y="1045" width="0.0511%" height="15" fill="rgb(239,85,38)" fg:x="40413" fg:w="22"/><text x="94.0483%" y="1055.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_modules (71 samples, 0.16%)</title><rect x="93.6869%" y="1061" width="0.1648%" height="15" fill="rgb(229,69,51)" fg:x="40365" fg:w="71"/><text x="93.9369%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.01%)</title><rect x="93.8633%" y="1045" width="0.0116%" height="15" fill="rgb(231,104,51)" fg:x="40441" fg:w="5"/><text x="94.1133%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="93.8633%" y="1029" width="0.0116%" height="15" fill="rgb(235,49,4)" fg:x="40441" fg:w="5"/><text x="94.1133%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="93.8633%" y="1013" width="0.0116%" height="15" fill="rgb(246,166,20)" fg:x="40441" fg:w="5"/><text x="94.1133%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="93.8633%" y="997" width="0.0116%" height="15" fill="rgb(230,119,37)" fg:x="40441" fg:w="5"/><text x="94.1133%" y="1007.50"></text></g><g><title>bytecode_verifier::dependencies::compatible_struct_type_parameters (5 samples, 0.01%)</title><rect x="93.8749%" y="1045" width="0.0116%" height="15" fill="rgb(234,77,34)" fg:x="40446" fg:w="5"/><text x="94.1249%" y="1055.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (5 samples, 0.01%)</title><rect x="93.8865%" y="1045" width="0.0116%" height="15" fill="rgb(211,222,33)" fg:x="40451" fg:w="5"/><text x="94.1365%" y="1055.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_structs (26 samples, 0.06%)</title><rect x="93.8517%" y="1061" width="0.0603%" height="15" fill="rgb(226,45,42)" fg:x="40436" fg:w="26"/><text x="94.1017%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.01%)</title><rect x="93.8981%" y="1045" width="0.0139%" height="15" fill="rgb(215,174,28)" fg:x="40456" fg:w="6"/><text x="94.1481%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.01%)</title><rect x="93.8981%" y="1029" width="0.0139%" height="15" fill="rgb(254,173,49)" fg:x="40456" fg:w="6"/><text x="94.1481%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.01%)</title><rect x="93.8981%" y="1013" width="0.0139%" height="15" fill="rgb(229,191,6)" fg:x="40456" fg:w="6"/><text x="94.1481%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="93.8981%" y="997" width="0.0139%" height="15" fill="rgb(212,145,22)" fg:x="40456" fg:w="6"/><text x="94.1481%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="93.8981%" y="981" width="0.0139%" height="15" fill="rgb(226,6,51)" fg:x="40456" fg:w="6"/><text x="94.1481%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (5 samples, 0.01%)</title><rect x="93.9144%" y="917" width="0.0116%" height="15" fill="rgb(227,128,8)" fg:x="40463" fg:w="5"/><text x="94.1644%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (6 samples, 0.01%)</title><rect x="93.9144%" y="965" width="0.0139%" height="15" fill="rgb(205,24,10)" fg:x="40463" fg:w="6"/><text x="94.1644%" y="975.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.01%)</title><rect x="93.9144%" y="949" width="0.0139%" height="15" fill="rgb(217,147,27)" fg:x="40463" fg:w="6"/><text x="94.1644%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (6 samples, 0.01%)</title><rect x="93.9144%" y="933" width="0.0139%" height="15" fill="rgb(250,82,42)" fg:x="40463" fg:w="6"/><text x="94.1644%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (8 samples, 0.02%)</title><rect x="93.9120%" y="981" width="0.0186%" height="15" fill="rgb(248,93,17)" fg:x="40462" fg:w="8"/><text x="94.1620%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,&amp;move_binary_format::file_format::CompiledModule&gt;&gt; (9 samples, 0.02%)</title><rect x="93.9120%" y="1045" width="0.0209%" height="15" fill="rgb(254,212,40)" fg:x="40462" fg:w="9"/><text x="94.1620%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="93.9120%" y="1029" width="0.0209%" height="15" fill="rgb(229,209,2)" fg:x="40462" fg:w="9"/><text x="94.1620%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,&amp;move_binary_format::file_format::CompiledModule&gt;&gt; (9 samples, 0.02%)</title><rect x="93.9120%" y="1013" width="0.0209%" height="15" fill="rgb(211,50,43)" fg:x="40462" fg:w="9"/><text x="94.1620%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="93.9120%" y="997" width="0.0209%" height="15" fill="rgb(245,196,29)" fg:x="40462" fg:w="9"/><text x="94.1620%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="93.9376%" y="965" width="0.0186%" height="15" fill="rgb(216,132,13)" fg:x="40473" fg:w="8"/><text x="94.1876%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="93.9399%" y="949" width="0.0162%" height="15" fill="rgb(251,108,21)" fg:x="40474" fg:w="7"/><text x="94.1899%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (7 samples, 0.02%)</title><rect x="93.9585%" y="901" width="0.0162%" height="15" fill="rgb(229,174,54)" fg:x="40482" fg:w="7"/><text x="94.2085%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (7 samples, 0.02%)</title><rect x="93.9585%" y="885" width="0.0162%" height="15" fill="rgb(211,175,47)" fg:x="40482" fg:w="7"/><text x="94.2085%" y="895.50"></text></g><g><title>alloc::alloc::box_free (7 samples, 0.02%)</title><rect x="93.9585%" y="869" width="0.0162%" height="15" fill="rgb(234,5,37)" fg:x="40482" fg:w="7"/><text x="94.2085%" y="879.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="93.9909%" y="805" width="0.0116%" height="15" fill="rgb(244,150,43)" fg:x="40496" fg:w="5"/><text x="94.2409%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="93.9840%" y="837" width="0.0209%" height="15" fill="rgb(242,172,38)" fg:x="40493" fg:w="9"/><text x="94.2340%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="93.9863%" y="821" width="0.0186%" height="15" fill="rgb(205,27,8)" fg:x="40494" fg:w="8"/><text x="94.2363%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (26 samples, 0.06%)</title><rect x="93.9561%" y="949" width="0.0603%" height="15" fill="rgb(217,57,3)" fg:x="40481" fg:w="26"/><text x="94.2061%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex)&gt; (26 samples, 0.06%)</title><rect x="93.9561%" y="933" width="0.0603%" height="15" fill="rgb(242,21,38)" fg:x="40481" fg:w="26"/><text x="94.2061%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (26 samples, 0.06%)</title><rect x="93.9561%" y="917" width="0.0603%" height="15" fill="rgb(209,64,43)" fg:x="40481" fg:w="26"/><text x="94.2061%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (18 samples, 0.04%)</title><rect x="93.9747%" y="901" width="0.0418%" height="15" fill="rgb(222,2,46)" fg:x="40489" fg:w="18"/><text x="94.2247%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (17 samples, 0.04%)</title><rect x="93.9770%" y="885" width="0.0395%" height="15" fill="rgb(218,19,44)" fg:x="40490" fg:w="17"/><text x="94.2270%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (17 samples, 0.04%)</title><rect x="93.9770%" y="869" width="0.0395%" height="15" fill="rgb(240,203,42)" fg:x="40490" fg:w="17"/><text x="94.2270%" y="879.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.04%)</title><rect x="93.9793%" y="853" width="0.0371%" height="15" fill="rgb(229,23,45)" fg:x="40491" fg:w="16"/><text x="94.2293%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (28 samples, 0.06%)</title><rect x="93.9561%" y="965" width="0.0650%" height="15" fill="rgb(205,228,51)" fg:x="40481" fg:w="28"/><text x="94.2061%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (39 samples, 0.09%)</title><rect x="93.9329%" y="981" width="0.0905%" height="15" fill="rgb(239,36,20)" fg:x="40471" fg:w="39"/><text x="94.1829%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex&gt;&gt; (43 samples, 0.10%)</title><rect x="93.9329%" y="1045" width="0.0998%" height="15" fill="rgb(248,172,27)" fg:x="40471" fg:w="43"/><text x="94.1829%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex,std::collections::hash::map::RandomState&gt;&gt; (43 samples, 0.10%)</title><rect x="93.9329%" y="1029" width="0.0998%" height="15" fill="rgb(244,55,32)" fg:x="40471" fg:w="43"/><text x="94.1829%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex)&gt;&gt; (43 samples, 0.10%)</title><rect x="93.9329%" y="1013" width="0.0998%" height="15" fill="rgb(215,97,16)" fg:x="40471" fg:w="43"/><text x="94.1829%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.10%)</title><rect x="93.9329%" y="997" width="0.0998%" height="15" fill="rgb(224,80,29)" fg:x="40471" fg:w="43"/><text x="94.1829%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (6 samples, 0.01%)</title><rect x="94.0327%" y="981" width="0.0139%" height="15" fill="rgb(216,93,47)" fg:x="40514" fg:w="6"/><text x="94.2827%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex&gt;&gt; (7 samples, 0.02%)</title><rect x="94.0327%" y="1045" width="0.0162%" height="15" fill="rgb(238,159,10)" fg:x="40514" fg:w="7"/><text x="94.2827%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex,std::collections::hash::map::RandomState&gt;&gt; (7 samples, 0.02%)</title><rect x="94.0327%" y="1029" width="0.0162%" height="15" fill="rgb(223,98,29)" fg:x="40514" fg:w="7"/><text x="94.2827%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex)&gt;&gt; (7 samples, 0.02%)</title><rect x="94.0327%" y="1013" width="0.0162%" height="15" fill="rgb(210,176,23)" fg:x="40514" fg:w="7"/><text x="94.2827%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="94.0327%" y="997" width="0.0162%" height="15" fill="rgb(242,162,27)" fg:x="40514" fg:w="7"/><text x="94.2827%" y="1007.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (2,670 samples, 6.20%)</title><rect x="87.8589%" y="1093" width="6.1971%" height="15" fill="rgb(245,109,32)" fg:x="37854" fg:w="2670"/><text x="88.1089%" y="1103.50">bytecode..</text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (2,668 samples, 6.19%)</title><rect x="87.8635%" y="1077" width="6.1924%" height="15" fill="rgb(248,87,8)" fg:x="37856" fg:w="2668"/><text x="88.1135%" y="1087.50">bytecode..</text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::dependencies::Context&gt; (62 samples, 0.14%)</title><rect x="93.9120%" y="1061" width="0.1439%" height="15" fill="rgb(250,160,50)" fg:x="40462" fg:w="62"/><text x="94.1620%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="94.0722%" y="981" width="0.0139%" height="15" fill="rgb(246,165,25)" fg:x="40531" fg:w="6"/><text x="94.3222%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.03%)</title><rect x="94.0699%" y="1013" width="0.0348%" height="15" fill="rgb(249,219,3)" fg:x="40530" fg:w="15"/><text x="94.3199%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.03%)</title><rect x="94.0699%" y="997" width="0.0348%" height="15" fill="rgb(226,66,5)" fg:x="40530" fg:w="15"/><text x="94.3199%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="94.0861%" y="981" width="0.0186%" height="15" fill="rgb(250,220,43)" fg:x="40537" fg:w="8"/><text x="94.3361%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="94.0861%" y="965" width="0.0186%" height="15" fill="rgb(225,111,31)" fg:x="40537" fg:w="8"/><text x="94.3361%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.02%)</title><rect x="94.0861%" y="949" width="0.0186%" height="15" fill="rgb(248,106,18)" fg:x="40537" fg:w="8"/><text x="94.3361%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="94.0861%" y="933" width="0.0186%" height="15" fill="rgb(220,226,45)" fg:x="40537" fg:w="8"/><text x="94.3361%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.01%)</title><rect x="94.1070%" y="917" width="0.0139%" height="15" fill="rgb(208,58,53)" fg:x="40546" fg:w="6"/><text x="94.3570%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="94.1070%" y="901" width="0.0139%" height="15" fill="rgb(209,133,1)" fg:x="40546" fg:w="6"/><text x="94.3570%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.01%)</title><rect x="94.1070%" y="885" width="0.0139%" height="15" fill="rgb(228,216,27)" fg:x="40546" fg:w="6"/><text x="94.3570%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="94.1070%" y="869" width="0.0139%" height="15" fill="rgb(238,155,2)" fg:x="40546" fg:w="6"/><text x="94.3570%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="94.1047%" y="1013" width="0.0186%" height="15" fill="rgb(244,99,37)" fg:x="40545" fg:w="8"/><text x="94.3547%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="94.1047%" y="997" width="0.0186%" height="15" fill="rgb(254,32,3)" fg:x="40545" fg:w="8"/><text x="94.3547%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="94.1070%" y="981" width="0.0162%" height="15" fill="rgb(234,46,50)" fg:x="40546" fg:w="7"/><text x="94.3570%" y="991.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (7 samples, 0.02%)</title><rect x="94.1070%" y="965" width="0.0162%" height="15" fill="rgb(232,118,51)" fg:x="40546" fg:w="7"/><text x="94.3570%" y="975.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (7 samples, 0.02%)</title><rect x="94.1070%" y="949" width="0.0162%" height="15" fill="rgb(207,24,32)" fg:x="40546" fg:w="7"/><text x="94.3570%" y="959.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (7 samples, 0.02%)</title><rect x="94.1070%" y="933" width="0.0162%" height="15" fill="rgb(208,107,43)" fg:x="40546" fg:w="7"/><text x="94.3570%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.06%)</title><rect x="94.0699%" y="1077" width="0.0557%" height="15" fill="rgb(231,28,9)" fg:x="40530" fg:w="24"/><text x="94.3199%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.06%)</title><rect x="94.0699%" y="1061" width="0.0557%" height="15" fill="rgb(241,204,15)" fg:x="40530" fg:w="24"/><text x="94.3199%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.06%)</title><rect x="94.0699%" y="1045" width="0.0557%" height="15" fill="rgb(214,54,15)" fg:x="40530" fg:w="24"/><text x="94.3199%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.06%)</title><rect x="94.0699%" y="1029" width="0.0557%" height="15" fill="rgb(230,12,28)" fg:x="40530" fg:w="24"/><text x="94.3199%" y="1039.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (27 samples, 0.06%)</title><rect x="94.0699%" y="1093" width="0.0627%" height="15" fill="rgb(221,171,5)" fg:x="40530" fg:w="27"/><text x="94.3199%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="94.1418%" y="917" width="0.0139%" height="15" fill="rgb(207,72,25)" fg:x="40561" fg:w="6"/><text x="94.3918%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.01%)</title><rect x="94.1441%" y="901" width="0.0116%" height="15" fill="rgb(249,79,37)" fg:x="40562" fg:w="5"/><text x="94.3941%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="94.1581%" y="917" width="0.0139%" height="15" fill="rgb(209,98,49)" fg:x="40568" fg:w="6"/><text x="94.4081%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="94.1581%" y="901" width="0.0139%" height="15" fill="rgb(221,62,13)" fg:x="40568" fg:w="6"/><text x="94.4081%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.01%)</title><rect x="94.1581%" y="885" width="0.0139%" height="15" fill="rgb(223,39,6)" fg:x="40568" fg:w="6"/><text x="94.4081%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="94.1581%" y="869" width="0.0139%" height="15" fill="rgb(246,163,20)" fg:x="40568" fg:w="6"/><text x="94.4081%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.04%)</title><rect x="94.1395%" y="949" width="0.0371%" height="15" fill="rgb(211,111,29)" fg:x="40560" fg:w="16"/><text x="94.3895%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.04%)</title><rect x="94.1395%" y="933" width="0.0371%" height="15" fill="rgb(243,118,5)" fg:x="40560" fg:w="16"/><text x="94.3895%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.06%)</title><rect x="94.1325%" y="1077" width="0.0603%" height="15" fill="rgb(240,144,52)" fg:x="40557" fg:w="26"/><text x="94.3825%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (26 samples, 0.06%)</title><rect x="94.1325%" y="1061" width="0.0603%" height="15" fill="rgb(244,158,36)" fg:x="40557" fg:w="26"/><text x="94.3825%" y="1071.50"></text></g><g><title>core::iter::adapters::process_results (25 samples, 0.06%)</title><rect x="94.1348%" y="1045" width="0.0580%" height="15" fill="rgb(241,109,37)" fg:x="40558" fg:w="25"/><text x="94.3848%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (23 samples, 0.05%)</title><rect x="94.1395%" y="1029" width="0.0534%" height="15" fill="rgb(213,95,32)" fg:x="40560" fg:w="23"/><text x="94.3895%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.05%)</title><rect x="94.1395%" y="1013" width="0.0534%" height="15" fill="rgb(252,193,9)" fg:x="40560" fg:w="23"/><text x="94.3895%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.05%)</title><rect x="94.1395%" y="997" width="0.0534%" height="15" fill="rgb(225,213,21)" fg:x="40560" fg:w="23"/><text x="94.3895%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.05%)</title><rect x="94.1395%" y="981" width="0.0534%" height="15" fill="rgb(220,172,46)" fg:x="40560" fg:w="23"/><text x="94.3895%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.05%)</title><rect x="94.1395%" y="965" width="0.0534%" height="15" fill="rgb(235,75,41)" fg:x="40560" fg:w="23"/><text x="94.3895%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_expect_no_missing_dependencies (2,745 samples, 6.37%)</title><rect x="87.8241%" y="1125" width="6.3711%" height="15" fill="rgb(213,86,9)" fg:x="37839" fg:w="2745"/><text x="88.0741%" y="1135.50">move_vm_..</text></g><g><title>move_vm_runtime::loader::Loader::verify_module (2,744 samples, 6.37%)</title><rect x="87.8264%" y="1109" width="6.3688%" height="15" fill="rgb(238,127,51)" fg:x="37840" fg:w="2744"/><text x="88.0764%" y="1119.50">move_vm_..</text></g><g><title>move_vm_runtime::loader::Loader::load_dependencies_expect_no_missing_dependencies (27 samples, 0.06%)</title><rect x="94.1325%" y="1093" width="0.0627%" height="15" fill="rgb(215,2,54)" fg:x="40557" fg:w="27"/><text x="94.3825%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::FunctionDefinition&gt;&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="1093" width="0.0116%" height="15" fill="rgb(245,80,6)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="94.2045%" y="1077" width="0.0116%" height="15" fill="rgb(233,106,42)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::FunctionDefinition]&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="1061" width="0.0116%" height="15" fill="rgb(244,86,38)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::FunctionDefinition&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="1045" width="0.0116%" height="15" fill="rgb(242,167,7)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;move_binary_format::file_format::CodeUnit&gt;&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="1029" width="0.0116%" height="15" fill="rgb(218,216,3)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CodeUnit&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="1013" width="0.0116%" height="15" fill="rgb(206,136,36)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (5 samples, 0.01%)</title><rect x="94.2045%" y="997" width="0.0116%" height="15" fill="rgb(206,206,15)" fg:x="40588" fg:w="5"/><text x="94.4545%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="94.2230%" y="1013" width="0.0139%" height="15" fill="rgb(207,163,34)" fg:x="40596" fg:w="6"/><text x="94.4730%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (5 samples, 0.01%)</title><rect x="94.2254%" y="997" width="0.0116%" height="15" fill="rgb(240,127,22)" fg:x="40597" fg:w="5"/><text x="94.4754%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (5 samples, 0.01%)</title><rect x="94.2254%" y="981" width="0.0116%" height="15" fill="rgb(227,49,5)" fg:x="40597" fg:w="5"/><text x="94.4754%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (5 samples, 0.01%)</title><rect x="94.2254%" y="965" width="0.0116%" height="15" fill="rgb(231,8,6)" fg:x="40597" fg:w="5"/><text x="94.4754%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (12 samples, 0.03%)</title><rect x="94.2230%" y="1093" width="0.0279%" height="15" fill="rgb(223,21,24)" fg:x="40596" fg:w="12"/><text x="94.4730%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="94.2230%" y="1077" width="0.0279%" height="15" fill="rgb(244,44,52)" fg:x="40596" fg:w="12"/><text x="94.4730%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (12 samples, 0.03%)</title><rect x="94.2230%" y="1061" width="0.0279%" height="15" fill="rgb(207,73,28)" fg:x="40596" fg:w="12"/><text x="94.4730%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (12 samples, 0.03%)</title><rect x="94.2230%" y="1045" width="0.0279%" height="15" fill="rgb(234,215,10)" fg:x="40596" fg:w="12"/><text x="94.4730%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (12 samples, 0.03%)</title><rect x="94.2230%" y="1029" width="0.0279%" height="15" fill="rgb(236,85,3)" fg:x="40596" fg:w="12"/><text x="94.4730%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (6 samples, 0.01%)</title><rect x="94.2370%" y="1013" width="0.0139%" height="15" fill="rgb(236,102,39)" fg:x="40602" fg:w="6"/><text x="94.4870%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="94.2370%" y="997" width="0.0139%" height="15" fill="rgb(243,50,8)" fg:x="40602" fg:w="6"/><text x="94.4870%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (29 samples, 0.07%)</title><rect x="94.1975%" y="1109" width="0.0673%" height="15" fill="rgb(207,111,4)" fg:x="40585" fg:w="29"/><text x="94.4475%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::insert (16 samples, 0.04%)</title><rect x="94.2648%" y="1109" width="0.0371%" height="15" fill="rgb(230,52,42)" fg:x="40614" fg:w="16"/><text x="94.5148%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.02%)</title><rect x="94.2788%" y="1093" width="0.0232%" height="15" fill="rgb(252,178,50)" fg:x="40620" fg:w="10"/><text x="94.5288%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="94.2788%" y="1077" width="0.0232%" height="15" fill="rgb(234,46,35)" fg:x="40620" fg:w="10"/><text x="94.5288%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.01%)</title><rect x="94.2904%" y="1061" width="0.0116%" height="15" fill="rgb(228,69,37)" fg:x="40625" fg:w="5"/><text x="94.5404%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Module::new (6 samples, 0.01%)</title><rect x="94.3020%" y="1109" width="0.0139%" height="15" fill="rgb(221,21,11)" fg:x="40630" fg:w="6"/><text x="94.5520%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="94.3205%" y="1061" width="0.0209%" height="15" fill="rgb(223,56,9)" fg:x="40638" fg:w="9"/><text x="94.5705%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="94.3205%" y="1045" width="0.0209%" height="15" fill="rgb(234,30,19)" fg:x="40638" fg:w="9"/><text x="94.5705%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.03%)</title><rect x="94.3159%" y="1093" width="0.0302%" height="15" fill="rgb(211,64,54)" fg:x="40636" fg:w="13"/><text x="94.5659%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.03%)</title><rect x="94.3182%" y="1077" width="0.0279%" height="15" fill="rgb(250,189,5)" fg:x="40637" fg:w="12"/><text x="94.5682%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="94.3461%" y="1093" width="0.0116%" height="15" fill="rgb(214,180,13)" fg:x="40649" fg:w="5"/><text x="94.5961%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.05%)</title><rect x="94.3786%" y="1013" width="0.0487%" height="15" fill="rgb(238,40,40)" fg:x="40663" fg:w="21"/><text x="94.6286%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="94.3855%" y="997" width="0.0418%" height="15" fill="rgb(214,101,38)" fg:x="40666" fg:w="18"/><text x="94.6355%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="94.4018%" y="981" width="0.0255%" height="15" fill="rgb(242,65,53)" fg:x="40673" fg:w="11"/><text x="94.6518%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="94.4157%" y="965" width="0.0116%" height="15" fill="rgb(230,22,45)" fg:x="40679" fg:w="5"/><text x="94.6657%" y="975.50"></text></g><g><title>&lt;move_binary_format::file_format::Bytecode as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="94.4273%" y="1013" width="0.0162%" height="15" fill="rgb(223,77,1)" fg:x="40684" fg:w="7"/><text x="94.6773%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="94.4459%" y="1013" width="0.0162%" height="15" fill="rgb(227,33,37)" fg:x="40692" fg:w="7"/><text x="94.6959%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="94.4482%" y="997" width="0.0139%" height="15" fill="rgb(224,148,39)" fg:x="40693" fg:w="6"/><text x="94.6982%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="94.4505%" y="981" width="0.0116%" height="15" fill="rgb(232,212,39)" fg:x="40694" fg:w="5"/><text x="94.7005%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.03%)</title><rect x="94.4621%" y="1013" width="0.0279%" height="15" fill="rgb(251,172,7)" fg:x="40699" fg:w="12"/><text x="94.7121%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.13%)</title><rect x="94.3600%" y="1077" width="0.1323%" height="15" fill="rgb(219,39,9)" fg:x="40655" fg:w="57"/><text x="94.6100%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57 samples, 0.13%)</title><rect x="94.3600%" y="1061" width="0.1323%" height="15" fill="rgb(228,118,14)" fg:x="40655" fg:w="57"/><text x="94.6100%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (57 samples, 0.13%)</title><rect x="94.3600%" y="1045" width="0.1323%" height="15" fill="rgb(207,140,10)" fg:x="40655" fg:w="57"/><text x="94.6100%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57 samples, 0.13%)</title><rect x="94.3600%" y="1029" width="0.1323%" height="15" fill="rgb(227,111,53)" fg:x="40655" fg:w="57"/><text x="94.6100%" y="1039.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="94.4946%" y="1077" width="0.0302%" height="15" fill="rgb(216,165,16)" fg:x="40713" fg:w="13"/><text x="94.7446%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="94.4946%" y="1061" width="0.0302%" height="15" fill="rgb(226,111,18)" fg:x="40713" fg:w="13"/><text x="94.7446%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.03%)</title><rect x="94.4946%" y="1045" width="0.0302%" height="15" fill="rgb(251,27,17)" fg:x="40713" fg:w="13"/><text x="94.7446%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.03%)</title><rect x="94.4946%" y="1029" width="0.0302%" height="15" fill="rgb(254,69,9)" fg:x="40713" fg:w="13"/><text x="94.7446%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.03%)</title><rect x="94.4946%" y="1013" width="0.0302%" height="15" fill="rgb(234,140,37)" fg:x="40713" fg:w="13"/><text x="94.7446%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (7 samples, 0.02%)</title><rect x="94.5248%" y="1029" width="0.0162%" height="15" fill="rgb(220,93,8)" fg:x="40726" fg:w="7"/><text x="94.7748%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="94.5248%" y="1013" width="0.0162%" height="15" fill="rgb(236,113,3)" fg:x="40726" fg:w="7"/><text x="94.7748%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="94.5248%" y="997" width="0.0162%" height="15" fill="rgb(234,108,23)" fg:x="40726" fg:w="7"/><text x="94.7748%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="94.5248%" y="981" width="0.0162%" height="15" fill="rgb(205,114,34)" fg:x="40726" fg:w="7"/><text x="94.7748%" y="991.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 0.03%)</title><rect x="94.5248%" y="1077" width="0.0255%" height="15" fill="rgb(236,200,45)" fg:x="40726" fg:w="11"/><text x="94.7748%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="94.5248%" y="1061" width="0.0255%" height="15" fill="rgb(227,194,29)" fg:x="40726" fg:w="11"/><text x="94.7748%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (11 samples, 0.03%)</title><rect x="94.5248%" y="1045" width="0.0255%" height="15" fill="rgb(250,76,42)" fg:x="40726" fg:w="11"/><text x="94.7748%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.02%)</title><rect x="94.5526%" y="1077" width="0.0186%" height="15" fill="rgb(208,128,8)" fg:x="40738" fg:w="8"/><text x="94.8026%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="94.5526%" y="1061" width="0.0186%" height="15" fill="rgb(229,209,35)" fg:x="40738" fg:w="8"/><text x="94.8026%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="94.5526%" y="1045" width="0.0186%" height="15" fill="rgb(215,39,53)" fg:x="40738" fg:w="8"/><text x="94.8026%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="94.5526%" y="1029" width="0.0186%" height="15" fill="rgb(219,123,41)" fg:x="40738" fg:w="8"/><text x="94.8026%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="94.5596%" y="1013" width="0.0116%" height="15" fill="rgb(212,158,18)" fg:x="40741" fg:w="5"/><text x="94.8096%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="94.5596%" y="997" width="0.0116%" height="15" fill="rgb(234,196,53)" fg:x="40741" fg:w="5"/><text x="94.8096%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="94.5596%" y="981" width="0.0116%" height="15" fill="rgb(210,139,12)" fg:x="40741" fg:w="5"/><text x="94.8096%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="94.5596%" y="965" width="0.0116%" height="15" fill="rgb(220,116,54)" fg:x="40741" fg:w="5"/><text x="94.8096%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Function::new (110 samples, 0.26%)</title><rect x="94.3577%" y="1093" width="0.2553%" height="15" fill="rgb(247,103,28)" fg:x="40654" fg:w="110"/><text x="94.6077%" y="1103.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (9 samples, 0.02%)</title><rect x="94.5921%" y="1077" width="0.0209%" height="15" fill="rgb(253,156,45)" fg:x="40755" fg:w="9"/><text x="94.8421%" y="1087.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (5 samples, 0.01%)</title><rect x="94.6014%" y="1061" width="0.0116%" height="15" fill="rgb(237,157,52)" fg:x="40759" fg:w="5"/><text x="94.8514%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (138 samples, 0.32%)</title><rect x="94.3159%" y="1109" width="0.3203%" height="15" fill="rgb(253,112,16)" fg:x="40636" fg:w="138"/><text x="94.5659%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_struct_type (10 samples, 0.02%)</title><rect x="94.6130%" y="1093" width="0.0232%" height="15" fill="rgb(234,70,18)" fg:x="40764" fg:w="10"/><text x="94.8630%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="94.6408%" y="1029" width="0.0186%" height="15" fill="rgb(247,138,19)" fg:x="40776" fg:w="8"/><text x="94.8908%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (203 samples, 0.47%)</title><rect x="94.1952%" y="1125" width="0.4712%" height="15" fill="rgb(207,171,1)" fg:x="40584" fg:w="203"/><text x="94.4452%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (13 samples, 0.03%)</title><rect x="94.6362%" y="1109" width="0.0302%" height="15" fill="rgb(239,213,3)" fg:x="40774" fg:w="13"/><text x="94.8862%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (11 samples, 0.03%)</title><rect x="94.6408%" y="1093" width="0.0255%" height="15" fill="rgb(226,112,4)" fg:x="40776" fg:w="11"/><text x="94.8908%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="94.6408%" y="1077" width="0.0255%" height="15" fill="rgb(252,170,12)" fg:x="40776" fg:w="11"/><text x="94.8908%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.03%)</title><rect x="94.6408%" y="1061" width="0.0255%" height="15" fill="rgb(241,106,13)" fg:x="40776" fg:w="11"/><text x="94.8908%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="94.6408%" y="1045" width="0.0255%" height="15" fill="rgb(225,73,23)" fg:x="40776" fg:w="11"/><text x="94.8908%" y="1055.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="94.6872%" y="1013" width="0.0162%" height="15" fill="rgb(251,227,29)" fg:x="40796" fg:w="7"/><text x="94.9372%" y="1023.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.02%)</title><rect x="94.6872%" y="997" width="0.0162%" height="15" fill="rgb(237,144,13)" fg:x="40796" fg:w="7"/><text x="94.9372%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.02%)</title><rect x="94.6872%" y="981" width="0.0162%" height="15" fill="rgb(232,106,46)" fg:x="40796" fg:w="7"/><text x="94.9372%" y="991.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (13 samples, 0.03%)</title><rect x="94.6872%" y="1029" width="0.0302%" height="15" fill="rgb(245,154,53)" fg:x="40796" fg:w="13"/><text x="94.9372%" y="1039.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="94.7035%" y="1013" width="0.0139%" height="15" fill="rgb(212,119,47)" fg:x="40803" fg:w="6"/><text x="94.9535%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="94.7035%" y="997" width="0.0139%" height="15" fill="rgb(253,135,25)" fg:x="40803" fg:w="6"/><text x="94.9535%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.01%)</title><rect x="94.7035%" y="981" width="0.0139%" height="15" fill="rgb(253,208,39)" fg:x="40803" fg:w="6"/><text x="94.9535%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="94.7174%" y="1029" width="0.0162%" height="15" fill="rgb(226,64,12)" fg:x="40809" fg:w="7"/><text x="94.9674%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="94.7174%" y="1013" width="0.0162%" height="15" fill="rgb(214,162,37)" fg:x="40809" fg:w="7"/><text x="94.9674%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="94.7174%" y="997" width="0.0162%" height="15" fill="rgb(250,104,5)" fg:x="40809" fg:w="7"/><text x="94.9674%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.05%)</title><rect x="94.6849%" y="1045" width="0.0534%" height="15" fill="rgb(220,202,50)" fg:x="40795" fg:w="23"/><text x="94.9349%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (7 samples, 0.02%)</title><rect x="94.7476%" y="1013" width="0.0162%" height="15" fill="rgb(248,67,38)" fg:x="40822" fg:w="7"/><text x="94.9976%" y="1023.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="94.7476%" y="997" width="0.0162%" height="15" fill="rgb(242,94,35)" fg:x="40822" fg:w="7"/><text x="94.9976%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (4,039 samples, 9.37%)</title><rect x="85.4102%" y="1141" width="9.3745%" height="15" fill="rgb(209,78,37)" fg:x="36799" fg:w="4039"/><text x="85.6602%" y="1151.50">move_vm_runti..</text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (51 samples, 0.12%)</title><rect x="94.6664%" y="1125" width="0.1184%" height="15" fill="rgb(230,126,47)" fg:x="40787" fg:w="51"/><text x="94.9164%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (46 samples, 0.11%)</title><rect x="94.6780%" y="1109" width="0.1068%" height="15" fill="rgb(222,110,35)" fg:x="40792" fg:w="46"/><text x="94.9280%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (43 samples, 0.10%)</title><rect x="94.6849%" y="1093" width="0.0998%" height="15" fill="rgb(233,154,20)" fg:x="40795" fg:w="43"/><text x="94.9349%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (43 samples, 0.10%)</title><rect x="94.6849%" y="1077" width="0.0998%" height="15" fill="rgb(223,53,50)" fg:x="40795" fg:w="43"/><text x="94.9349%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.10%)</title><rect x="94.6849%" y="1061" width="0.0998%" height="15" fill="rgb(251,27,26)" fg:x="40795" fg:w="43"/><text x="94.9349%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.05%)</title><rect x="94.7383%" y="1045" width="0.0464%" height="15" fill="rgb(223,189,16)" fg:x="40818" fg:w="20"/><text x="94.9883%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.04%)</title><rect x="94.7453%" y="1029" width="0.0395%" height="15" fill="rgb(207,5,54)" fg:x="40821" fg:w="17"/><text x="94.9953%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.02%)</title><rect x="94.7662%" y="1013" width="0.0186%" height="15" fill="rgb(254,124,50)" fg:x="40830" fg:w="8"/><text x="95.0162%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.02%)</title><rect x="94.7662%" y="997" width="0.0186%" height="15" fill="rgb(253,193,24)" fg:x="40830" fg:w="8"/><text x="95.0162%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.02%)</title><rect x="94.7662%" y="981" width="0.0186%" height="15" fill="rgb(235,170,24)" fg:x="40830" fg:w="8"/><text x="95.0162%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.01%)</title><rect x="94.7731%" y="965" width="0.0116%" height="15" fill="rgb(222,212,52)" fg:x="40833" fg:w="5"/><text x="95.0231%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_script (9 samples, 0.02%)</title><rect x="94.7847%" y="1141" width="0.0209%" height="15" fill="rgb(223,17,45)" fg:x="40838" fg:w="9"/><text x="95.0347%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (5 samples, 0.01%)</title><rect x="94.8242%" y="853" width="0.0116%" height="15" fill="rgb(227,103,26)" fg:x="40855" fg:w="5"/><text x="95.0742%" y="863.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::ne (5 samples, 0.01%)</title><rect x="94.8242%" y="837" width="0.0116%" height="15" fill="rgb(251,151,25)" fg:x="40855" fg:w="5"/><text x="95.0742%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (11 samples, 0.03%)</title><rect x="94.8497%" y="773" width="0.0255%" height="15" fill="rgb(248,144,29)" fg:x="40866" fg:w="11"/><text x="95.0997%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.02%)</title><rect x="94.8544%" y="757" width="0.0209%" height="15" fill="rgb(245,97,16)" fg:x="40868" fg:w="9"/><text x="95.1044%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="94.8544%" y="741" width="0.0209%" height="15" fill="rgb(220,200,29)" fg:x="40868" fg:w="9"/><text x="95.1044%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="94.8544%" y="725" width="0.0209%" height="15" fill="rgb(206,38,29)" fg:x="40868" fg:w="9"/><text x="95.1044%" y="735.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (16 samples, 0.04%)</title><rect x="94.8497%" y="821" width="0.0371%" height="15" fill="rgb(245,19,52)" fg:x="40866" fg:w="16"/><text x="95.0997%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.04%)</title><rect x="94.8497%" y="805" width="0.0371%" height="15" fill="rgb(205,67,43)" fg:x="40866" fg:w="16"/><text x="95.0997%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (16 samples, 0.04%)</title><rect x="94.8497%" y="789" width="0.0371%" height="15" fill="rgb(217,128,23)" fg:x="40866" fg:w="16"/><text x="95.0997%" y="799.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new::_{{closure}} (34 samples, 0.08%)</title><rect x="94.8242%" y="869" width="0.0789%" height="15" fill="rgb(210,109,28)" fg:x="40855" fg:w="34"/><text x="95.0742%" y="879.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (25 samples, 0.06%)</title><rect x="94.8451%" y="853" width="0.0580%" height="15" fill="rgb(233,181,7)" fg:x="40864" fg:w="25"/><text x="95.0951%" y="863.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (23 samples, 0.05%)</title><rect x="94.8497%" y="837" width="0.0534%" height="15" fill="rgb(244,11,22)" fg:x="40866" fg:w="23"/><text x="95.0997%" y="847.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (5 samples, 0.01%)</title><rect x="94.9077%" y="805" width="0.0116%" height="15" fill="rgb(205,124,54)" fg:x="40891" fg:w="5"/><text x="95.1577%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="94.9077%" y="789" width="0.0116%" height="15" fill="rgb(218,21,27)" fg:x="40891" fg:w="5"/><text x="95.1577%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.01%)</title><rect x="94.9077%" y="773" width="0.0116%" height="15" fill="rgb(224,153,33)" fg:x="40891" fg:w="5"/><text x="95.1577%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (5 samples, 0.01%)</title><rect x="94.9077%" y="757" width="0.0116%" height="15" fill="rgb(240,219,28)" fg:x="40891" fg:w="5"/><text x="95.1577%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new::_{{closure}} (10 samples, 0.02%)</title><rect x="94.9031%" y="853" width="0.0232%" height="15" fill="rgb(214,80,29)" fg:x="40889" fg:w="10"/><text x="95.1531%" y="863.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (10 samples, 0.02%)</title><rect x="94.9031%" y="837" width="0.0232%" height="15" fill="rgb(247,148,44)" fg:x="40889" fg:w="10"/><text x="95.1531%" y="847.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (8 samples, 0.02%)</title><rect x="94.9077%" y="821" width="0.0186%" height="15" fill="rgb(243,110,30)" fg:x="40891" fg:w="8"/><text x="95.1577%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="94.9565%" y="741" width="0.0279%" height="15" fill="rgb(243,173,41)" fg:x="40912" fg:w="12"/><text x="95.2065%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="94.9727%" y="725" width="0.0116%" height="15" fill="rgb(225,160,47)" fg:x="40919" fg:w="5"/><text x="95.2227%" y="735.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (9 samples, 0.02%)</title><rect x="94.9890%" y="725" width="0.0209%" height="15" fill="rgb(215,44,21)" fg:x="40926" fg:w="9"/><text x="95.2390%" y="735.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (9 samples, 0.02%)</title><rect x="94.9890%" y="709" width="0.0209%" height="15" fill="rgb(248,90,3)" fg:x="40926" fg:w="9"/><text x="95.2390%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (7 samples, 0.02%)</title><rect x="94.9936%" y="693" width="0.0162%" height="15" fill="rgb(220,196,49)" fg:x="40928" fg:w="7"/><text x="95.2436%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (7 samples, 0.02%)</title><rect x="94.9936%" y="677" width="0.0162%" height="15" fill="rgb(217,138,14)" fg:x="40928" fg:w="7"/><text x="95.2436%" y="687.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (7 samples, 0.02%)</title><rect x="94.9936%" y="661" width="0.0162%" height="15" fill="rgb(219,111,20)" fg:x="40928" fg:w="7"/><text x="95.2436%" y="671.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (18 samples, 0.04%)</title><rect x="94.9843%" y="741" width="0.0418%" height="15" fill="rgb(218,114,4)" fg:x="40924" fg:w="18"/><text x="95.2343%" y="751.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (7 samples, 0.02%)</title><rect x="95.0099%" y="725" width="0.0162%" height="15" fill="rgb(238,133,3)" fg:x="40935" fg:w="7"/><text x="95.2599%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (6 samples, 0.01%)</title><rect x="95.0122%" y="709" width="0.0139%" height="15" fill="rgb(224,95,0)" fg:x="40936" fg:w="6"/><text x="95.2622%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (6 samples, 0.01%)</title><rect x="95.0122%" y="693" width="0.0139%" height="15" fill="rgb(220,169,35)" fg:x="40936" fg:w="6"/><text x="95.2622%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (6 samples, 0.01%)</title><rect x="95.0122%" y="677" width="0.0139%" height="15" fill="rgb(242,116,47)" fg:x="40936" fg:w="6"/><text x="95.2622%" y="687.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (6 samples, 0.01%)</title><rect x="95.0122%" y="661" width="0.0139%" height="15" fill="rgb(251,42,20)" fg:x="40936" fg:w="6"/><text x="95.2622%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (44 samples, 0.10%)</title><rect x="94.9263%" y="805" width="0.1021%" height="15" fill="rgb(234,7,34)" fg:x="40899" fg:w="44"/><text x="95.1763%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (37 samples, 0.09%)</title><rect x="94.9426%" y="789" width="0.0859%" height="15" fill="rgb(243,208,13)" fg:x="40906" fg:w="37"/><text x="95.1926%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (34 samples, 0.08%)</title><rect x="94.9495%" y="773" width="0.0789%" height="15" fill="rgb(227,33,28)" fg:x="40909" fg:w="34"/><text x="95.1995%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (33 samples, 0.08%)</title><rect x="94.9518%" y="757" width="0.0766%" height="15" fill="rgb(250,47,37)" fg:x="40910" fg:w="33"/><text x="95.2018%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (90 samples, 0.21%)</title><rect x="94.8242%" y="1045" width="0.2089%" height="15" fill="rgb(235,111,52)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (90 samples, 0.21%)</title><rect x="94.8242%" y="1029" width="0.2089%" height="15" fill="rgb(223,64,28)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (90 samples, 0.21%)</title><rect x="94.8242%" y="1013" width="0.2089%" height="15" fill="rgb(236,67,22)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90 samples, 0.21%)</title><rect x="94.8242%" y="997" width="0.2089%" height="15" fill="rgb(243,79,24)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90 samples, 0.21%)</title><rect x="94.8242%" y="981" width="0.2089%" height="15" fill="rgb(241,225,22)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90 samples, 0.21%)</title><rect x="94.8242%" y="965" width="0.2089%" height="15" fill="rgb(228,214,26)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (90 samples, 0.21%)</title><rect x="94.8242%" y="949" width="0.2089%" height="15" fill="rgb(219,84,52)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (90 samples, 0.21%)</title><rect x="94.8242%" y="933" width="0.2089%" height="15" fill="rgb(220,12,22)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (90 samples, 0.21%)</title><rect x="94.8242%" y="917" width="0.2089%" height="15" fill="rgb(219,9,49)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (90 samples, 0.21%)</title><rect x="94.8242%" y="901" width="0.2089%" height="15" fill="rgb(237,40,43)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="911.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (90 samples, 0.21%)</title><rect x="94.8242%" y="885" width="0.2089%" height="15" fill="rgb(212,189,32)" fg:x="40855" fg:w="90"/><text x="95.0742%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (56 samples, 0.13%)</title><rect x="94.9031%" y="869" width="0.1300%" height="15" fill="rgb(247,48,9)" fg:x="40889" fg:w="56"/><text x="95.1531%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (46 samples, 0.11%)</title><rect x="94.9263%" y="853" width="0.1068%" height="15" fill="rgb(247,112,3)" fg:x="40899" fg:w="46"/><text x="95.1763%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (46 samples, 0.11%)</title><rect x="94.9263%" y="837" width="0.1068%" height="15" fill="rgb(243,110,18)" fg:x="40899" fg:w="46"/><text x="95.1763%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (46 samples, 0.11%)</title><rect x="94.9263%" y="821" width="0.1068%" height="15" fill="rgb(233,223,44)" fg:x="40899" fg:w="46"/><text x="95.1763%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (7 samples, 0.02%)</title><rect x="95.0331%" y="917" width="0.0162%" height="15" fill="rgb(245,160,20)" fg:x="40945" fg:w="7"/><text x="95.2831%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (5 samples, 0.01%)</title><rect x="95.0377%" y="901" width="0.0116%" height="15" fill="rgb(225,37,1)" fg:x="40947" fg:w="5"/><text x="95.2877%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="95.0377%" y="885" width="0.0116%" height="15" fill="rgb(253,227,39)" fg:x="40947" fg:w="5"/><text x="95.2877%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="95.0377%" y="869" width="0.0116%" height="15" fill="rgb(240,179,26)" fg:x="40947" fg:w="5"/><text x="95.2877%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 0.23%)</title><rect x="94.8242%" y="1061" width="0.2275%" height="15" fill="rgb(237,212,23)" fg:x="40855" fg:w="98"/><text x="95.0742%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="95.0331%" y="1045" width="0.0186%" height="15" fill="rgb(221,38,11)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="95.0331%" y="1029" width="0.0186%" height="15" fill="rgb(215,85,6)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.02%)</title><rect x="95.0331%" y="1013" width="0.0186%" height="15" fill="rgb(239,64,14)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.02%)</title><rect x="95.0331%" y="997" width="0.0186%" height="15" fill="rgb(215,150,32)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8 samples, 0.02%)</title><rect x="95.0331%" y="981" width="0.0186%" height="15" fill="rgb(238,15,13)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (8 samples, 0.02%)</title><rect x="95.0331%" y="965" width="0.0186%" height="15" fill="rgb(251,87,8)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="975.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (8 samples, 0.02%)</title><rect x="95.0331%" y="949" width="0.0186%" height="15" fill="rgb(206,86,1)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.02%)</title><rect x="95.0331%" y="933" width="0.0186%" height="15" fill="rgb(208,151,45)" fg:x="40945" fg:w="8"/><text x="95.2831%" y="943.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (5 samples, 0.01%)</title><rect x="95.0609%" y="853" width="0.0116%" height="15" fill="rgb(231,181,24)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="95.0609%" y="837" width="0.0116%" height="15" fill="rgb(240,106,29)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.01%)</title><rect x="95.0609%" y="821" width="0.0116%" height="15" fill="rgb(227,166,11)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (5 samples, 0.01%)</title><rect x="95.0609%" y="805" width="0.0116%" height="15" fill="rgb(254,14,34)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="95.0609%" y="789" width="0.0116%" height="15" fill="rgb(223,222,6)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="95.0609%" y="773" width="0.0116%" height="15" fill="rgb(245,69,24)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.01%)</title><rect x="95.0609%" y="757" width="0.0116%" height="15" fill="rgb(213,193,7)" fg:x="40957" fg:w="5"/><text x="95.3109%" y="767.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_friends (6 samples, 0.01%)</title><rect x="95.0609%" y="1061" width="0.0139%" height="15" fill="rgb(237,92,51)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="95.0609%" y="1045" width="0.0139%" height="15" fill="rgb(225,194,6)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="95.0609%" y="1029" width="0.0139%" height="15" fill="rgb(205,159,49)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="95.0609%" y="1013" width="0.0139%" height="15" fill="rgb(219,69,2)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="95.0609%" y="997" width="0.0139%" height="15" fill="rgb(215,107,24)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="95.0609%" y="981" width="0.0139%" height="15" fill="rgb(249,208,29)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.01%)</title><rect x="95.0609%" y="965" width="0.0139%" height="15" fill="rgb(213,147,10)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="95.0609%" y="949" width="0.0139%" height="15" fill="rgb(254,140,42)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.01%)</title><rect x="95.0609%" y="933" width="0.0139%" height="15" fill="rgb(249,9,15)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6 samples, 0.01%)</title><rect x="95.0609%" y="917" width="0.0139%" height="15" fill="rgb(210,19,33)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="927.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_friends::_{{closure}} (6 samples, 0.01%)</title><rect x="95.0609%" y="901" width="0.0139%" height="15" fill="rgb(241,121,22)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="911.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (6 samples, 0.01%)</title><rect x="95.0609%" y="885" width="0.0139%" height="15" fill="rgb(244,69,52)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="895.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (6 samples, 0.01%)</title><rect x="95.0609%" y="869" width="0.0139%" height="15" fill="rgb(244,191,54)" fg:x="40957" fg:w="6"/><text x="95.3109%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="95.0795%" y="997" width="0.0139%" height="15" fill="rgb(250,3,53)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="95.0795%" y="981" width="0.0139%" height="15" fill="rgb(205,77,3)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (6 samples, 0.01%)</title><rect x="95.0795%" y="965" width="0.0139%" height="15" fill="rgb(207,155,3)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="95.0795%" y="949" width="0.0139%" height="15" fill="rgb(224,79,2)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="95.0795%" y="933" width="0.0139%" height="15" fill="rgb(243,172,5)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="95.0795%" y="917" width="0.0139%" height="15" fill="rgb(217,23,43)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="927.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.01%)</title><rect x="95.0795%" y="901" width="0.0139%" height="15" fill="rgb(223,109,20)" fg:x="40965" fg:w="6"/><text x="95.3295%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.03%)</title><rect x="95.0795%" y="1029" width="0.0279%" height="15" fill="rgb(232,159,21)" fg:x="40965" fg:w="12"/><text x="95.3295%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.03%)</title><rect x="95.0795%" y="1013" width="0.0279%" height="15" fill="rgb(219,58,2)" fg:x="40965" fg:w="12"/><text x="95.3295%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.01%)</title><rect x="95.0934%" y="997" width="0.0139%" height="15" fill="rgb(241,56,8)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.01%)</title><rect x="95.0934%" y="981" width="0.0139%" height="15" fill="rgb(249,10,27)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.01%)</title><rect x="95.0934%" y="965" width="0.0139%" height="15" fill="rgb(248,177,5)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="95.0934%" y="949" width="0.0139%" height="15" fill="rgb(239,12,30)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="95.0934%" y="933" width="0.0139%" height="15" fill="rgb(229,164,25)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="95.0934%" y="917" width="0.0139%" height="15" fill="rgb(231,217,50)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="927.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.01%)</title><rect x="95.0934%" y="901" width="0.0139%" height="15" fill="rgb(247,99,32)" fg:x="40971" fg:w="6"/><text x="95.3434%" y="911.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (7 samples, 0.02%)</title><rect x="95.1491%" y="901" width="0.0162%" height="15" fill="rgb(240,74,50)" fg:x="40995" fg:w="7"/><text x="95.3991%" y="911.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (5 samples, 0.01%)</title><rect x="95.1538%" y="885" width="0.0116%" height="15" fill="rgb(218,54,8)" fg:x="40997" fg:w="5"/><text x="95.4038%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (19 samples, 0.04%)</title><rect x="95.1259%" y="933" width="0.0441%" height="15" fill="rgb(227,132,20)" fg:x="40985" fg:w="19"/><text x="95.3759%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.03%)</title><rect x="95.1398%" y="917" width="0.0302%" height="15" fill="rgb(232,134,12)" fg:x="40991" fg:w="13"/><text x="95.3898%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.02%)</title><rect x="95.1700%" y="933" width="0.0186%" height="15" fill="rgb(250,129,18)" fg:x="41004" fg:w="8"/><text x="95.4200%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.10%)</title><rect x="95.1073%" y="965" width="0.1021%" height="15" fill="rgb(232,129,47)" fg:x="40977" fg:w="44"/><text x="95.3573%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.10%)</title><rect x="95.1073%" y="949" width="0.1021%" height="15" fill="rgb(230,31,40)" fg:x="40977" fg:w="44"/><text x="95.3573%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (7 samples, 0.02%)</title><rect x="95.2118%" y="965" width="0.0162%" height="15" fill="rgb(232,126,10)" fg:x="41022" fg:w="7"/><text x="95.4618%" y="975.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="95.2118%" y="949" width="0.0162%" height="15" fill="rgb(205,46,31)" fg:x="41022" fg:w="7"/><text x="95.4618%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (7 samples, 0.02%)</title><rect x="95.2118%" y="933" width="0.0162%" height="15" fill="rgb(232,37,37)" fg:x="41022" fg:w="7"/><text x="95.4618%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.01%)</title><rect x="95.2141%" y="917" width="0.0139%" height="15" fill="rgb(240,91,16)" fg:x="41023" fg:w="6"/><text x="95.4641%" y="927.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="95.2350%" y="933" width="0.0209%" height="15" fill="rgb(224,160,9)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (9 samples, 0.02%)</title><rect x="95.2350%" y="917" width="0.0209%" height="15" fill="rgb(215,116,14)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u16 (9 samples, 0.02%)</title><rect x="95.2350%" y="901" width="0.0209%" height="15" fill="rgb(235,46,36)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="95.2350%" y="885" width="0.0209%" height="15" fill="rgb(238,39,28)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="95.2350%" y="869" width="0.0209%" height="15" fill="rgb(242,125,29)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="95.2350%" y="853" width="0.0209%" height="15" fill="rgb(238,211,30)" fg:x="41032" fg:w="9"/><text x="95.4850%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.01%)</title><rect x="95.2443%" y="837" width="0.0116%" height="15" fill="rgb(227,201,28)" fg:x="41036" fg:w="5"/><text x="95.4943%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.03%)</title><rect x="95.3302%" y="869" width="0.0325%" height="15" fill="rgb(238,77,29)" fg:x="41073" fg:w="14"/><text x="95.5802%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (35 samples, 0.08%)</title><rect x="95.2861%" y="885" width="0.0812%" height="15" fill="rgb(213,221,40)" fg:x="41054" fg:w="35"/><text x="95.5361%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (54 samples, 0.13%)</title><rect x="95.5042%" y="869" width="0.1253%" height="15" fill="rgb(226,220,44)" fg:x="41148" fg:w="54"/><text x="95.7542%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (121 samples, 0.28%)</title><rect x="95.3673%" y="885" width="0.2808%" height="15" fill="rgb(228,90,23)" fg:x="41089" fg:w="121"/><text x="95.6173%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.02%)</title><rect x="95.6296%" y="869" width="0.0186%" height="15" fill="rgb(235,72,29)" fg:x="41202" fg:w="8"/><text x="95.8796%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (170 samples, 0.39%)</title><rect x="95.2559%" y="933" width="0.3946%" height="15" fill="rgb(248,117,39)" fg:x="41041" fg:w="170"/><text x="95.5059%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (167 samples, 0.39%)</title><rect x="95.2629%" y="917" width="0.3876%" height="15" fill="rgb(225,43,28)" fg:x="41044" fg:w="167"/><text x="95.5129%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (164 samples, 0.38%)</title><rect x="95.2698%" y="901" width="0.3806%" height="15" fill="rgb(240,93,4)" fg:x="41047" fg:w="164"/><text x="95.5198%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.05%)</title><rect x="95.6505%" y="933" width="0.0487%" height="15" fill="rgb(234,178,27)" fg:x="41211" fg:w="21"/><text x="95.9005%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.04%)</title><rect x="95.6621%" y="917" width="0.0371%" height="15" fill="rgb(254,88,22)" fg:x="41216" fg:w="16"/><text x="95.9121%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (10 samples, 0.02%)</title><rect x="95.6760%" y="901" width="0.0232%" height="15" fill="rgb(240,206,50)" fg:x="41222" fg:w="10"/><text x="95.9260%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.06%)</title><rect x="95.8083%" y="805" width="0.0557%" height="15" fill="rgb(249,103,8)" fg:x="41279" fg:w="24"/><text x="96.0583%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (51 samples, 0.12%)</title><rect x="95.7619%" y="821" width="0.1184%" height="15" fill="rgb(241,178,36)" fg:x="41259" fg:w="51"/><text x="96.0119%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="95.8640%" y="805" width="0.0162%" height="15" fill="rgb(246,110,15)" fg:x="41303" fg:w="7"/><text x="96.1140%" y="815.50"></text></g><g><title>core::cmp::min (11 samples, 0.03%)</title><rect x="95.8802%" y="821" width="0.0255%" height="15" fill="rgb(207,14,43)" fg:x="41310" fg:w="11"/><text x="96.1302%" y="831.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.03%)</title><rect x="95.8802%" y="805" width="0.0255%" height="15" fill="rgb(253,219,19)" fg:x="41310" fg:w="11"/><text x="96.1302%" y="815.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.03%)</title><rect x="95.8802%" y="789" width="0.0255%" height="15" fill="rgb(216,126,5)" fg:x="41310" fg:w="11"/><text x="96.1302%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="95.8918%" y="773" width="0.0139%" height="15" fill="rgb(218,78,42)" fg:x="41315" fg:w="6"/><text x="96.1418%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.01%)</title><rect x="95.8942%" y="757" width="0.0116%" height="15" fill="rgb(215,154,40)" fg:x="41316" fg:w="5"/><text x="96.1442%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="95.9684%" y="805" width="0.0186%" height="15" fill="rgb(235,129,32)" fg:x="41348" fg:w="8"/><text x="96.2184%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.01%)</title><rect x="95.9870%" y="805" width="0.0116%" height="15" fill="rgb(218,51,8)" fg:x="41356" fg:w="5"/><text x="96.2370%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="96.0102%" y="773" width="0.0139%" height="15" fill="rgb(245,48,4)" fg:x="41366" fg:w="6"/><text x="96.2602%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.01%)</title><rect x="96.0125%" y="757" width="0.0116%" height="15" fill="rgb(250,175,12)" fg:x="41367" fg:w="5"/><text x="96.2625%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (52 samples, 0.12%)</title><rect x="95.9058%" y="821" width="0.1207%" height="15" fill="rgb(237,95,40)" fg:x="41321" fg:w="52"/><text x="96.1558%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.03%)</title><rect x="95.9986%" y="805" width="0.0279%" height="15" fill="rgb(244,120,0)" fg:x="41361" fg:w="12"/><text x="96.2486%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="96.0079%" y="789" width="0.0186%" height="15" fill="rgb(241,19,42)" fg:x="41365" fg:w="8"/><text x="96.2579%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.02%)</title><rect x="96.0381%" y="821" width="0.0162%" height="15" fill="rgb(217,174,48)" fg:x="41378" fg:w="7"/><text x="96.2881%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (151 samples, 0.35%)</title><rect x="95.7062%" y="869" width="0.3505%" height="15" fill="rgb(239,36,38)" fg:x="41235" fg:w="151"/><text x="95.9562%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (151 samples, 0.35%)</title><rect x="95.7062%" y="853" width="0.3505%" height="15" fill="rgb(220,63,49)" fg:x="41235" fg:w="151"/><text x="95.9562%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (150 samples, 0.35%)</title><rect x="95.7085%" y="837" width="0.3481%" height="15" fill="rgb(240,101,13)" fg:x="41236" fg:w="150"/><text x="95.9585%" y="847.50"></text></g><g><title>core::cmp::min (10 samples, 0.02%)</title><rect x="96.1007%" y="805" width="0.0232%" height="15" fill="rgb(209,184,51)" fg:x="41405" fg:w="10"/><text x="96.3507%" y="815.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="96.1031%" y="789" width="0.0209%" height="15" fill="rgb(206,136,39)" fg:x="41406" fg:w="9"/><text x="96.3531%" y="799.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.02%)</title><rect x="96.1031%" y="773" width="0.0209%" height="15" fill="rgb(254,47,45)" fg:x="41406" fg:w="9"/><text x="96.3531%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.03%)</title><rect x="96.1239%" y="805" width="0.0279%" height="15" fill="rgb(252,103,20)" fg:x="41415" fg:w="12"/><text x="96.3739%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="96.1402%" y="789" width="0.0116%" height="15" fill="rgb(230,69,12)" fg:x="41422" fg:w="5"/><text x="96.3902%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="96.1402%" y="773" width="0.0116%" height="15" fill="rgb(219,2,28)" fg:x="41422" fg:w="5"/><text x="96.3902%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u8 (42 samples, 0.10%)</title><rect x="96.0566%" y="869" width="0.0975%" height="15" fill="rgb(210,9,12)" fg:x="41386" fg:w="42"/><text x="96.3066%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.10%)</title><rect x="96.0566%" y="853" width="0.0975%" height="15" fill="rgb(235,99,33)" fg:x="41386" fg:w="42"/><text x="96.3066%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.09%)</title><rect x="96.0613%" y="837" width="0.0928%" height="15" fill="rgb(230,11,38)" fg:x="41388" fg:w="40"/><text x="96.3113%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.09%)</title><rect x="96.0659%" y="821" width="0.0882%" height="15" fill="rgb(217,129,0)" fg:x="41390" fg:w="38"/><text x="96.3159%" y="831.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (197 samples, 0.46%)</title><rect x="95.7038%" y="917" width="0.4572%" height="15" fill="rgb(222,198,4)" fg:x="41234" fg:w="197"/><text x="95.9538%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (197 samples, 0.46%)</title><rect x="95.7038%" y="901" width="0.4572%" height="15" fill="rgb(246,170,27)" fg:x="41234" fg:w="197"/><text x="95.9538%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (197 samples, 0.46%)</title><rect x="95.7038%" y="885" width="0.4572%" height="15" fill="rgb(229,17,28)" fg:x="41234" fg:w="197"/><text x="95.9538%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.06%)</title><rect x="96.3143%" y="773" width="0.0580%" height="15" fill="rgb(233,198,48)" fg:x="41497" fg:w="25"/><text x="96.5643%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (55 samples, 0.13%)</title><rect x="96.2470%" y="789" width="0.1277%" height="15" fill="rgb(238,103,23)" fg:x="41468" fg:w="55"/><text x="96.4970%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="96.3816%" y="789" width="0.0162%" height="15" fill="rgb(206,91,41)" fg:x="41526" fg:w="7"/><text x="96.6316%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.01%)</title><rect x="96.3978%" y="789" width="0.0116%" height="15" fill="rgb(227,34,25)" fg:x="41533" fg:w="5"/><text x="96.6478%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (95 samples, 0.22%)</title><rect x="96.1936%" y="837" width="0.2205%" height="15" fill="rgb(210,110,44)" fg:x="41445" fg:w="95"/><text x="96.4436%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (94 samples, 0.22%)</title><rect x="96.1959%" y="821" width="0.2182%" height="15" fill="rgb(216,189,8)" fg:x="41446" fg:w="94"/><text x="96.4459%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 samples, 0.22%)</title><rect x="96.1959%" y="805" width="0.2182%" height="15" fill="rgb(234,9,46)" fg:x="41446" fg:w="94"/><text x="96.4459%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (106 samples, 0.25%)</title><rect x="96.1866%" y="853" width="0.2460%" height="15" fill="rgb(251,200,5)" fg:x="41442" fg:w="106"/><text x="96.4366%" y="863.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.02%)</title><rect x="96.4141%" y="837" width="0.0186%" height="15" fill="rgb(238,165,37)" fg:x="41540" fg:w="8"/><text x="96.6641%" y="847.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.01%)</title><rect x="96.4187%" y="821" width="0.0139%" height="15" fill="rgb(232,77,38)" fg:x="41542" fg:w="6"/><text x="96.6687%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.04%)</title><rect x="96.5139%" y="757" width="0.0418%" height="15" fill="rgb(253,179,33)" fg:x="41583" fg:w="18"/><text x="96.7639%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (38 samples, 0.09%)</title><rect x="96.4814%" y="773" width="0.0882%" height="15" fill="rgb(240,13,35)" fg:x="41569" fg:w="38"/><text x="96.7314%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.01%)</title><rect x="96.5556%" y="757" width="0.0139%" height="15" fill="rgb(242,150,49)" fg:x="41601" fg:w="6"/><text x="96.8056%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.01%)</title><rect x="96.5696%" y="773" width="0.0116%" height="15" fill="rgb(237,176,28)" fg:x="41607" fg:w="5"/><text x="96.8196%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="96.5812%" y="773" width="0.0139%" height="15" fill="rgb(214,176,33)" fg:x="41612" fg:w="6"/><text x="96.8312%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="96.5835%" y="757" width="0.0116%" height="15" fill="rgb(214,25,12)" fg:x="41613" fg:w="5"/><text x="96.8335%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.01%)</title><rect x="96.5951%" y="773" width="0.0116%" height="15" fill="rgb(238,190,20)" fg:x="41618" fg:w="5"/><text x="96.8451%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.01%)</title><rect x="96.5951%" y="757" width="0.0116%" height="15" fill="rgb(208,11,19)" fg:x="41618" fg:w="5"/><text x="96.8451%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (74 samples, 0.17%)</title><rect x="96.4396%" y="821" width="0.1718%" height="15" fill="rgb(239,90,4)" fg:x="41551" fg:w="74"/><text x="96.6896%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.16%)</title><rect x="96.4466%" y="805" width="0.1648%" height="15" fill="rgb(248,110,3)" fg:x="41554" fg:w="71"/><text x="96.6966%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.16%)</title><rect x="96.4466%" y="789" width="0.1648%" height="15" fill="rgb(210,41,30)" fg:x="41554" fg:w="71"/><text x="96.6966%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (78 samples, 0.18%)</title><rect x="96.4326%" y="853" width="0.1810%" height="15" fill="rgb(239,36,8)" fg:x="41548" fg:w="78"/><text x="96.6826%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (75 samples, 0.17%)</title><rect x="96.4396%" y="837" width="0.1741%" height="15" fill="rgb(237,201,47)" fg:x="41551" fg:w="75"/><text x="96.6896%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (196 samples, 0.45%)</title><rect x="96.1611%" y="901" width="0.4549%" height="15" fill="rgb(224,140,29)" fg:x="41431" fg:w="196"/><text x="96.4111%" y="911.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (194 samples, 0.45%)</title><rect x="96.1657%" y="885" width="0.4503%" height="15" fill="rgb(231,209,17)" fg:x="41433" fg:w="194"/><text x="96.4157%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (190 samples, 0.44%)</title><rect x="96.1750%" y="869" width="0.4410%" height="15" fill="rgb(249,196,1)" fg:x="41437" fg:w="190"/><text x="96.4250%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.04%)</title><rect x="96.6531%" y="805" width="0.0395%" height="15" fill="rgb(223,207,51)" fg:x="41643" fg:w="17"/><text x="96.9031%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="96.6717%" y="789" width="0.0209%" height="15" fill="rgb(210,14,40)" fg:x="41651" fg:w="9"/><text x="96.9217%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="96.7436%" y="789" width="0.0186%" height="15" fill="rgb(250,20,52)" fg:x="41682" fg:w="8"/><text x="96.9936%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.02%)</title><rect x="96.7692%" y="789" width="0.0186%" height="15" fill="rgb(241,46,11)" fg:x="41693" fg:w="8"/><text x="97.0192%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.01%)</title><rect x="96.7761%" y="773" width="0.0116%" height="15" fill="rgb(219,105,5)" fg:x="41696" fg:w="5"/><text x="97.0261%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (48 samples, 0.11%)</title><rect x="96.6926%" y="805" width="0.1114%" height="15" fill="rgb(252,77,35)" fg:x="41660" fg:w="48"/><text x="96.9426%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (85 samples, 0.20%)</title><rect x="96.6206%" y="853" width="0.1973%" height="15" fill="rgb(243,119,2)" fg:x="41629" fg:w="85"/><text x="96.8706%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (84 samples, 0.19%)</title><rect x="96.6230%" y="837" width="0.1950%" height="15" fill="rgb(206,82,28)" fg:x="41630" fg:w="84"/><text x="96.8730%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (83 samples, 0.19%)</title><rect x="96.6253%" y="821" width="0.1926%" height="15" fill="rgb(227,120,12)" fg:x="41631" fg:w="83"/><text x="96.8753%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="96.8458%" y="789" width="0.0116%" height="15" fill="rgb(229,134,41)" fg:x="41726" fg:w="5"/><text x="97.0958%" y="799.50"></text></g><g><title>core::cmp::min (9 samples, 0.02%)</title><rect x="96.8574%" y="789" width="0.0209%" height="15" fill="rgb(239,96,32)" fg:x="41731" fg:w="9"/><text x="97.1074%" y="799.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="96.8597%" y="773" width="0.0186%" height="15" fill="rgb(225,46,27)" fg:x="41732" fg:w="8"/><text x="97.1097%" y="783.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.02%)</title><rect x="96.8620%" y="757" width="0.0162%" height="15" fill="rgb(215,168,2)" fg:x="41733" fg:w="7"/><text x="97.1120%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (724 samples, 1.68%)</title><rect x="95.2280%" y="965" width="1.6804%" height="15" fill="rgb(207,170,52)" fg:x="41029" fg:w="724"/><text x="95.4780%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (724 samples, 1.68%)</title><rect x="95.2280%" y="949" width="1.6804%" height="15" fill="rgb(237,198,36)" fg:x="41029" fg:w="724"/><text x="95.4780%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (521 samples, 1.21%)</title><rect x="95.6992%" y="933" width="1.2092%" height="15" fill="rgb(213,27,14)" fg:x="41232" fg:w="521"/><text x="95.9492%" y="943.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (322 samples, 0.75%)</title><rect x="96.1611%" y="917" width="0.7474%" height="15" fill="rgb(218,77,5)" fg:x="41431" fg:w="322"/><text x="96.4111%" y="927.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (126 samples, 0.29%)</title><rect x="96.6160%" y="901" width="0.2924%" height="15" fill="rgb(230,219,39)" fg:x="41627" fg:w="126"/><text x="96.8660%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (126 samples, 0.29%)</title><rect x="96.6160%" y="885" width="0.2924%" height="15" fill="rgb(245,177,7)" fg:x="41627" fg:w="126"/><text x="96.8660%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (126 samples, 0.29%)</title><rect x="96.6160%" y="869" width="0.2924%" height="15" fill="rgb(246,44,46)" fg:x="41627" fg:w="126"/><text x="96.8660%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (39 samples, 0.09%)</title><rect x="96.8179%" y="853" width="0.0905%" height="15" fill="rgb(207,173,15)" fg:x="41714" fg:w="39"/><text x="97.0679%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (39 samples, 0.09%)</title><rect x="96.8179%" y="837" width="0.0905%" height="15" fill="rgb(245,170,50)" fg:x="41714" fg:w="39"/><text x="97.0679%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.08%)</title><rect x="96.8249%" y="821" width="0.0836%" height="15" fill="rgb(233,156,21)" fg:x="41717" fg:w="36"/><text x="97.0749%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.08%)</title><rect x="96.8249%" y="805" width="0.0836%" height="15" fill="rgb(253,146,27)" fg:x="41717" fg:w="36"/><text x="97.0749%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.03%)</title><rect x="96.8783%" y="789" width="0.0302%" height="15" fill="rgb(247,66,29)" fg:x="41740" fg:w="13"/><text x="97.1283%" y="799.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (5 samples, 0.01%)</title><rect x="96.9200%" y="917" width="0.0116%" height="15" fill="rgb(218,207,26)" fg:x="41758" fg:w="5"/><text x="97.1700%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.02%)</title><rect x="96.9200%" y="933" width="0.0162%" height="15" fill="rgb(234,93,26)" fg:x="41758" fg:w="7"/><text x="97.1700%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (13 samples, 0.03%)</title><rect x="96.9084%" y="965" width="0.0302%" height="15" fill="rgb(214,75,48)" fg:x="41753" fg:w="13"/><text x="97.1584%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (13 samples, 0.03%)</title><rect x="96.9084%" y="949" width="0.0302%" height="15" fill="rgb(229,119,22)" fg:x="41753" fg:w="13"/><text x="97.1584%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (6 samples, 0.01%)</title><rect x="96.9386%" y="949" width="0.0139%" height="15" fill="rgb(226,153,19)" fg:x="41766" fg:w="6"/><text x="97.1886%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="96.9386%" y="933" width="0.0139%" height="15" fill="rgb(220,204,36)" fg:x="41766" fg:w="6"/><text x="97.1886%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (10 samples, 0.02%)</title><rect x="96.9850%" y="901" width="0.0232%" height="15" fill="rgb(253,181,43)" fg:x="41786" fg:w="10"/><text x="97.2350%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (22 samples, 0.05%)</title><rect x="96.9641%" y="933" width="0.0511%" height="15" fill="rgb(211,41,51)" fg:x="41777" fg:w="22"/><text x="97.2141%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (16 samples, 0.04%)</title><rect x="96.9781%" y="917" width="0.0371%" height="15" fill="rgb(207,215,0)" fg:x="41783" fg:w="16"/><text x="97.2281%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (34 samples, 0.08%)</title><rect x="96.9386%" y="965" width="0.0789%" height="15" fill="rgb(212,153,10)" fg:x="41766" fg:w="34"/><text x="97.1886%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (28 samples, 0.06%)</title><rect x="96.9525%" y="949" width="0.0650%" height="15" fill="rgb(251,171,36)" fg:x="41772" fg:w="28"/><text x="97.2025%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="97.0198%" y="949" width="0.0116%" height="15" fill="rgb(225,219,41)" fg:x="41801" fg:w="5"/><text x="97.2698%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7 samples, 0.02%)</title><rect x="97.0175%" y="965" width="0.0162%" height="15" fill="rgb(208,200,1)" fg:x="41800" fg:w="7"/><text x="97.2675%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.01%)</title><rect x="97.0384%" y="933" width="0.0116%" height="15" fill="rgb(206,75,47)" fg:x="41809" fg:w="5"/><text x="97.2884%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.02%)</title><rect x="97.0338%" y="949" width="0.0209%" height="15" fill="rgb(248,3,16)" fg:x="41807" fg:w="9"/><text x="97.2838%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (12 samples, 0.03%)</title><rect x="97.0338%" y="965" width="0.0279%" height="15" fill="rgb(242,157,36)" fg:x="41807" fg:w="12"/><text x="97.2838%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (6 samples, 0.01%)</title><rect x="97.0802%" y="949" width="0.0139%" height="15" fill="rgb(215,175,11)" fg:x="41827" fg:w="6"/><text x="97.3302%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (10 samples, 0.02%)</title><rect x="97.1359%" y="933" width="0.0232%" height="15" fill="rgb(252,222,22)" fg:x="41851" fg:w="10"/><text x="97.3859%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (6 samples, 0.01%)</title><rect x="97.1591%" y="933" width="0.0139%" height="15" fill="rgb(250,121,35)" fg:x="41861" fg:w="6"/><text x="97.4091%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (23 samples, 0.05%)</title><rect x="97.1730%" y="933" width="0.0534%" height="15" fill="rgb(233,120,49)" fg:x="41867" fg:w="23"/><text x="97.4230%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (10 samples, 0.02%)</title><rect x="97.2032%" y="917" width="0.0232%" height="15" fill="rgb(205,201,14)" fg:x="41880" fg:w="10"/><text x="97.4532%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.03%)</title><rect x="97.2311%" y="933" width="0.0348%" height="15" fill="rgb(219,58,45)" fg:x="41892" fg:w="15"/><text x="97.4811%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.03%)</title><rect x="97.2357%" y="917" width="0.0302%" height="15" fill="rgb(251,65,12)" fg:x="41894" fg:w="13"/><text x="97.4857%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="97.2519%" y="901" width="0.0139%" height="15" fill="rgb(224,47,31)" fg:x="41901" fg:w="6"/><text x="97.5019%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (97 samples, 0.23%)</title><rect x="97.0941%" y="949" width="0.2251%" height="15" fill="rgb(233,74,26)" fg:x="41833" fg:w="97"/><text x="97.3441%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (23 samples, 0.05%)</title><rect x="97.2659%" y="933" width="0.0534%" height="15" fill="rgb(231,211,31)" fg:x="41907" fg:w="23"/><text x="97.5159%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.03%)</title><rect x="97.2914%" y="917" width="0.0279%" height="15" fill="rgb(239,167,5)" fg:x="41918" fg:w="12"/><text x="97.5414%" y="927.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="97.3053%" y="901" width="0.0139%" height="15" fill="rgb(241,85,0)" fg:x="41924" fg:w="6"/><text x="97.5553%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (20 samples, 0.05%)</title><rect x="97.3239%" y="933" width="0.0464%" height="15" fill="rgb(229,130,21)" fg:x="41932" fg:w="20"/><text x="97.5739%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (13 samples, 0.03%)</title><rect x="97.3401%" y="917" width="0.0302%" height="15" fill="rgb(254,84,49)" fg:x="41939" fg:w="13"/><text x="97.5901%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (146 samples, 0.34%)</title><rect x="97.0616%" y="965" width="0.3389%" height="15" fill="rgb(235,85,21)" fg:x="41819" fg:w="146"/><text x="97.3116%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (35 samples, 0.08%)</title><rect x="97.3193%" y="949" width="0.0812%" height="15" fill="rgb(246,128,52)" fg:x="41930" fg:w="35"/><text x="97.5693%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.03%)</title><rect x="97.3703%" y="933" width="0.0302%" height="15" fill="rgb(243,114,49)" fg:x="41952" fg:w="13"/><text x="97.6203%" y="943.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="97.3819%" y="917" width="0.0186%" height="15" fill="rgb(240,224,22)" fg:x="41957" fg:w="8"/><text x="97.6319%" y="927.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.02%)</title><rect x="97.3842%" y="901" width="0.0162%" height="15" fill="rgb(247,201,52)" fg:x="41958" fg:w="7"/><text x="97.6342%" y="911.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="97.4307%" y="869" width="0.0232%" height="15" fill="rgb(231,70,45)" fg:x="41978" fg:w="10"/><text x="97.6807%" y="879.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="97.4307%" y="853" width="0.0232%" height="15" fill="rgb(217,215,20)" fg:x="41978" fg:w="10"/><text x="97.6807%" y="863.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="97.4353%" y="837" width="0.0186%" height="15" fill="rgb(226,170,30)" fg:x="41980" fg:w="8"/><text x="97.6853%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (23 samples, 0.05%)</title><rect x="97.4051%" y="949" width="0.0534%" height="15" fill="rgb(220,190,43)" fg:x="41967" fg:w="23"/><text x="97.6551%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (20 samples, 0.05%)</title><rect x="97.4121%" y="933" width="0.0464%" height="15" fill="rgb(218,20,18)" fg:x="41970" fg:w="20"/><text x="97.6621%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (17 samples, 0.04%)</title><rect x="97.4191%" y="917" width="0.0395%" height="15" fill="rgb(245,37,26)" fg:x="41973" fg:w="17"/><text x="97.6691%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="97.4214%" y="901" width="0.0371%" height="15" fill="rgb(241,127,29)" fg:x="41974" fg:w="16"/><text x="97.6714%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.03%)</title><rect x="97.4237%" y="885" width="0.0348%" height="15" fill="rgb(241,33,26)" fg:x="41975" fg:w="15"/><text x="97.6737%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (26 samples, 0.06%)</title><rect x="97.4005%" y="965" width="0.0603%" height="15" fill="rgb(220,106,21)" fg:x="41965" fg:w="26"/><text x="97.6505%" y="975.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (1,138 samples, 2.64%)</title><rect x="94.8242%" y="1093" width="2.6413%" height="15" fill="rgb(225,125,35)" fg:x="40855" fg:w="1138"/><text x="95.0742%" y="1103.50">by..</text></g><g><title>bytecode_verifier::dependencies::Context::new (1,138 samples, 2.64%)</title><rect x="94.8242%" y="1077" width="2.6413%" height="15" fill="rgb(248,80,22)" fg:x="40855" fg:w="1138"/><text x="95.0742%" y="1087.50">by..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,028 samples, 2.39%)</title><rect x="95.0795%" y="1061" width="2.3860%" height="15" fill="rgb(231,117,39)" fg:x="40965" fg:w="1028"/><text x="95.3295%" y="1071.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,028 samples, 2.39%)</title><rect x="95.0795%" y="1045" width="2.3860%" height="15" fill="rgb(239,183,16)" fg:x="40965" fg:w="1028"/><text x="95.3295%" y="1055.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,016 samples, 2.36%)</title><rect x="95.1073%" y="1029" width="2.3581%" height="15" fill="rgb(221,61,19)" fg:x="40977" fg:w="1016"/><text x="95.3573%" y="1039.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,016 samples, 2.36%)</title><rect x="95.1073%" y="1013" width="2.3581%" height="15" fill="rgb(239,196,44)" fg:x="40977" fg:w="1016"/><text x="95.3573%" y="1023.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,016 samples, 2.36%)</title><rect x="95.1073%" y="997" width="2.3581%" height="15" fill="rgb(206,113,19)" fg:x="40977" fg:w="1016"/><text x="95.3573%" y="1007.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1,016 samples, 2.36%)</title><rect x="95.1073%" y="981" width="2.3581%" height="15" fill="rgb(245,114,12)" fg:x="40977" fg:w="1016"/><text x="95.3573%" y="991.50">h..</text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="97.4864%" y="917" width="0.0186%" height="15" fill="rgb(247,89,39)" fg:x="42002" fg:w="8"/><text x="97.7364%" y="927.50"></text></g><g><title>core::cmp::min (15 samples, 0.03%)</title><rect x="97.5096%" y="917" width="0.0348%" height="15" fill="rgb(213,85,14)" fg:x="42012" fg:w="15"/><text x="97.7596%" y="927.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.03%)</title><rect x="97.5119%" y="901" width="0.0325%" height="15" fill="rgb(249,206,33)" fg:x="42013" fg:w="14"/><text x="97.7619%" y="911.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.03%)</title><rect x="97.5165%" y="885" width="0.0279%" height="15" fill="rgb(235,167,47)" fg:x="42015" fg:w="12"/><text x="97.7665%" y="895.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (41 samples, 0.10%)</title><rect x="97.4655%" y="997" width="0.0952%" height="15" fill="rgb(217,177,16)" fg:x="41993" fg:w="41"/><text x="97.7155%" y="1007.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (41 samples, 0.10%)</title><rect x="97.4655%" y="981" width="0.0952%" height="15" fill="rgb(250,228,29)" fg:x="41993" fg:w="41"/><text x="97.7155%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (41 samples, 0.10%)</title><rect x="97.4655%" y="965" width="0.0952%" height="15" fill="rgb(216,195,42)" fg:x="41993" fg:w="41"/><text x="97.7155%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (41 samples, 0.10%)</title><rect x="97.4655%" y="949" width="0.0952%" height="15" fill="rgb(232,192,32)" fg:x="41993" fg:w="41"/><text x="97.7155%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (41 samples, 0.10%)</title><rect x="97.4655%" y="933" width="0.0952%" height="15" fill="rgb(211,8,47)" fg:x="41993" fg:w="41"/><text x="97.7155%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (5 samples, 0.01%)</title><rect x="97.5490%" y="917" width="0.0116%" height="15" fill="rgb(251,201,9)" fg:x="42029" fg:w="5"/><text x="97.7990%" y="927.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.03%)</title><rect x="97.5838%" y="917" width="0.0255%" height="15" fill="rgb(206,185,47)" fg:x="42044" fg:w="11"/><text x="97.8338%" y="927.50"></text></g><g><title>core::cmp::min (25 samples, 0.06%)</title><rect x="97.6140%" y="917" width="0.0580%" height="15" fill="rgb(245,54,32)" fg:x="42057" fg:w="25"/><text x="97.8640%" y="927.50"></text></g><g><title>core::cmp::Ord::min (24 samples, 0.06%)</title><rect x="97.6163%" y="901" width="0.0557%" height="15" fill="rgb(208,1,8)" fg:x="42058" fg:w="24"/><text x="97.8663%" y="911.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.05%)</title><rect x="97.6187%" y="885" width="0.0534%" height="15" fill="rgb(228,57,24)" fg:x="42059" fg:w="23"/><text x="97.8687%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="97.6512%" y="869" width="0.0209%" height="15" fill="rgb(251,24,8)" fg:x="42073" fg:w="9"/><text x="97.9012%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.02%)</title><rect x="97.6558%" y="853" width="0.0162%" height="15" fill="rgb(236,196,50)" fg:x="42075" fg:w="7"/><text x="97.9058%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (94 samples, 0.22%)</title><rect x="97.4655%" y="1077" width="0.2182%" height="15" fill="rgb(246,222,29)" fg:x="41993" fg:w="94"/><text x="97.7155%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (94 samples, 0.22%)</title><rect x="97.4655%" y="1061" width="0.2182%" height="15" fill="rgb(211,34,40)" fg:x="41993" fg:w="94"/><text x="97.7155%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (94 samples, 0.22%)</title><rect x="97.4655%" y="1045" width="0.2182%" height="15" fill="rgb(210,66,51)" fg:x="41993" fg:w="94"/><text x="97.7155%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (94 samples, 0.22%)</title><rect x="97.4655%" y="1029" width="0.2182%" height="15" fill="rgb(250,56,43)" fg:x="41993" fg:w="94"/><text x="97.7155%" y="1039.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (94 samples, 0.22%)</title><rect x="97.4655%" y="1013" width="0.2182%" height="15" fill="rgb(240,111,50)" fg:x="41993" fg:w="94"/><text x="97.7155%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (53 samples, 0.12%)</title><rect x="97.5606%" y="997" width="0.1230%" height="15" fill="rgb(209,117,13)" fg:x="42034" fg:w="53"/><text x="97.8106%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (53 samples, 0.12%)</title><rect x="97.5606%" y="981" width="0.1230%" height="15" fill="rgb(232,164,45)" fg:x="42034" fg:w="53"/><text x="97.8106%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (53 samples, 0.12%)</title><rect x="97.5606%" y="965" width="0.1230%" height="15" fill="rgb(205,69,32)" fg:x="42034" fg:w="53"/><text x="97.8106%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (53 samples, 0.12%)</title><rect x="97.5606%" y="949" width="0.1230%" height="15" fill="rgb(240,147,45)" fg:x="42034" fg:w="53"/><text x="97.8106%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (53 samples, 0.12%)</title><rect x="97.5606%" y="933" width="0.1230%" height="15" fill="rgb(221,94,48)" fg:x="42034" fg:w="53"/><text x="97.8106%" y="943.50"></text></g><g><title>bytecode_verifier::dependencies::compare_structs (14 samples, 0.03%)</title><rect x="97.6953%" y="1045" width="0.0325%" height="15" fill="rgb(249,209,17)" fg:x="42092" fg:w="14"/><text x="97.9453%" y="1055.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (5 samples, 0.01%)</title><rect x="97.7161%" y="1029" width="0.0116%" height="15" fill="rgb(228,57,28)" fg:x="42101" fg:w="5"/><text x="97.9661%" y="1039.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (36 samples, 0.08%)</title><rect x="97.6836%" y="1061" width="0.0836%" height="15" fill="rgb(250,133,26)" fg:x="42087" fg:w="36"/><text x="97.9336%" y="1071.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (17 samples, 0.04%)</title><rect x="97.7277%" y="1045" width="0.0395%" height="15" fill="rgb(254,15,16)" fg:x="42106" fg:w="17"/><text x="97.9777%" y="1055.50"></text></g><g><title>bytecode_verifier::dependencies::compare_structs (10 samples, 0.02%)</title><rect x="97.7440%" y="1029" width="0.0232%" height="15" fill="rgb(209,147,42)" fg:x="42113" fg:w="10"/><text x="97.9940%" y="1039.50"></text></g><g><title>bytecode_verifier::dependencies::compare_cross_module_signatures (40 samples, 0.09%)</title><rect x="97.6836%" y="1077" width="0.0928%" height="15" fill="rgb(208,5,29)" fg:x="42087" fg:w="40"/><text x="97.9336%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (1,276 samples, 2.96%)</title><rect x="94.8242%" y="1141" width="2.9616%" height="15" fill="rgb(250,73,31)" fg:x="40855" fg:w="1276"/><text x="95.0742%" y="1151.50">mov..</text></g><g><title>bytecode_verifier::dependencies::verify_module (1,276 samples, 2.96%)</title><rect x="94.8242%" y="1125" width="2.9616%" height="15" fill="rgb(238,45,10)" fg:x="40855" fg:w="1276"/><text x="95.0742%" y="1135.50">byt..</text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (1,276 samples, 2.96%)</title><rect x="94.8242%" y="1109" width="2.9616%" height="15" fill="rgb(214,104,5)" fg:x="40855" fg:w="1276"/><text x="95.0742%" y="1119.50">byt..</text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (138 samples, 0.32%)</title><rect x="97.4655%" y="1093" width="0.3203%" height="15" fill="rgb(242,217,19)" fg:x="41993" fg:w="138"/><text x="97.7155%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations (10 samples, 0.02%)</title><rect x="97.7951%" y="1141" width="0.0232%" height="15" fill="rgb(246,113,27)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1151.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module (10 samples, 0.02%)</title><rect x="97.7951%" y="1125" width="0.0232%" height="15" fill="rgb(221,34,27)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1135.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (10 samples, 0.02%)</title><rect x="97.7951%" y="1109" width="0.0232%" height="15" fill="rgb(246,109,6)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1119.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (10 samples, 0.02%)</title><rect x="97.7951%" y="1093" width="0.0232%" height="15" fill="rgb(217,12,25)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1103.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (10 samples, 0.02%)</title><rect x="97.7951%" y="1077" width="0.0232%" height="15" fill="rgb(250,195,5)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1087.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (10 samples, 0.02%)</title><rect x="97.7951%" y="1061" width="0.0232%" height="15" fill="rgb(244,140,45)" fg:x="42135" fg:w="10"/><text x="98.0451%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (5 samples, 0.01%)</title><rect x="97.8067%" y="1045" width="0.0116%" height="15" fill="rgb(230,64,14)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="97.8067%" y="1029" width="0.0116%" height="15" fill="rgb(206,27,27)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (5 samples, 0.01%)</title><rect x="97.8067%" y="1013" width="0.0116%" height="15" fill="rgb(230,14,50)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="1023.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (5 samples, 0.01%)</title><rect x="97.8067%" y="997" width="0.0116%" height="15" fill="rgb(237,172,14)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="97.8067%" y="981" width="0.0116%" height="15" fill="rgb(209,25,21)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="97.8067%" y="965" width="0.0116%" height="15" fill="rgb(248,148,22)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="97.8067%" y="949" width="0.0116%" height="15" fill="rgb(234,100,22)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="97.8067%" y="933" width="0.0116%" height="15" fill="rgb(210,20,30)" fg:x="42140" fg:w="5"/><text x="98.0567%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="97.8438%" y="981" width="0.0371%" height="15" fill="rgb(232,58,0)" fg:x="42156" fg:w="16"/><text x="98.0938%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="97.8438%" y="965" width="0.0371%" height="15" fill="rgb(221,68,13)" fg:x="42156" fg:w="16"/><text x="98.0938%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (16 samples, 0.04%)</title><rect x="97.8438%" y="949" width="0.0371%" height="15" fill="rgb(231,194,11)" fg:x="42156" fg:w="16"/><text x="98.0938%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.04%)</title><rect x="97.8438%" y="933" width="0.0371%" height="15" fill="rgb(235,51,41)" fg:x="42156" fg:w="16"/><text x="98.0938%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.03%)</title><rect x="97.8508%" y="917" width="0.0302%" height="15" fill="rgb(240,50,32)" fg:x="42159" fg:w="13"/><text x="98.1008%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (13 samples, 0.03%)</title><rect x="97.8508%" y="901" width="0.0302%" height="15" fill="rgb(240,185,36)" fg:x="42159" fg:w="13"/><text x="98.1008%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (7 samples, 0.02%)</title><rect x="97.8809%" y="917" width="0.0162%" height="15" fill="rgb(211,168,15)" fg:x="42172" fg:w="7"/><text x="98.1309%" y="927.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.02%)</title><rect x="97.8809%" y="901" width="0.0162%" height="15" fill="rgb(221,70,0)" fg:x="42172" fg:w="7"/><text x="98.1309%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (32 samples, 0.07%)</title><rect x="97.8438%" y="1013" width="0.0743%" height="15" fill="rgb(205,21,33)" fg:x="42156" fg:w="32"/><text x="98.0938%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.07%)</title><rect x="97.8438%" y="997" width="0.0743%" height="15" fill="rgb(225,106,10)" fg:x="42156" fg:w="32"/><text x="98.0938%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.04%)</title><rect x="97.8809%" y="981" width="0.0371%" height="15" fill="rgb(236,200,50)" fg:x="42172" fg:w="16"/><text x="98.1309%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.04%)</title><rect x="97.8809%" y="965" width="0.0371%" height="15" fill="rgb(249,93,23)" fg:x="42172" fg:w="16"/><text x="98.1309%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.04%)</title><rect x="97.8809%" y="949" width="0.0371%" height="15" fill="rgb(244,115,35)" fg:x="42172" fg:w="16"/><text x="98.1309%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.04%)</title><rect x="97.8809%" y="933" width="0.0371%" height="15" fill="rgb(231,129,47)" fg:x="42172" fg:w="16"/><text x="98.1309%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (9 samples, 0.02%)</title><rect x="97.8972%" y="917" width="0.0209%" height="15" fill="rgb(225,160,50)" fg:x="42179" fg:w="9"/><text x="98.1472%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.02%)</title><rect x="97.8972%" y="901" width="0.0209%" height="15" fill="rgb(218,135,23)" fg:x="42179" fg:w="9"/><text x="98.1472%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="97.9645%" y="949" width="0.0395%" height="15" fill="rgb(227,119,14)" fg:x="42208" fg:w="17"/><text x="98.2145%" y="959.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (10 samples, 0.02%)</title><rect x="98.0086%" y="949" width="0.0232%" height="15" fill="rgb(242,138,13)" fg:x="42227" fg:w="10"/><text x="98.2586%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.01%)</title><rect x="98.0179%" y="933" width="0.0139%" height="15" fill="rgb(215,11,16)" fg:x="42231" fg:w="6"/><text x="98.2679%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (6 samples, 0.01%)</title><rect x="98.0573%" y="901" width="0.0139%" height="15" fill="rgb(234,170,50)" fg:x="42248" fg:w="6"/><text x="98.3073%" y="911.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (6 samples, 0.01%)</title><rect x="98.0573%" y="885" width="0.0139%" height="15" fill="rgb(233,34,20)" fg:x="42248" fg:w="6"/><text x="98.3073%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (16 samples, 0.04%)</title><rect x="98.0364%" y="949" width="0.0371%" height="15" fill="rgb(237,100,45)" fg:x="42239" fg:w="16"/><text x="98.2864%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="98.0504%" y="933" width="0.0232%" height="15" fill="rgb(231,184,36)" fg:x="42245" fg:w="10"/><text x="98.3004%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.02%)</title><rect x="98.0504%" y="917" width="0.0232%" height="15" fill="rgb(252,93,2)" fg:x="42245" fg:w="10"/><text x="98.3004%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (11 samples, 0.03%)</title><rect x="98.0759%" y="949" width="0.0255%" height="15" fill="rgb(248,176,47)" fg:x="42256" fg:w="11"/><text x="98.3259%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.01%)</title><rect x="98.0898%" y="933" width="0.0116%" height="15" fill="rgb(249,125,23)" fg:x="42262" fg:w="5"/><text x="98.3398%" y="943.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (126 samples, 0.29%)</title><rect x="97.8206%" y="1077" width="0.2924%" height="15" fill="rgb(239,67,42)" fg:x="42146" fg:w="126"/><text x="98.0706%" y="1087.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (126 samples, 0.29%)</title><rect x="97.8206%" y="1061" width="0.2924%" height="15" fill="rgb(244,162,4)" fg:x="42146" fg:w="126"/><text x="98.0706%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (119 samples, 0.28%)</title><rect x="97.8368%" y="1045" width="0.2762%" height="15" fill="rgb(214,150,38)" fg:x="42153" fg:w="119"/><text x="98.0868%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (119 samples, 0.28%)</title><rect x="97.8368%" y="1029" width="0.2762%" height="15" fill="rgb(228,211,28)" fg:x="42153" fg:w="119"/><text x="98.0868%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (84 samples, 0.19%)</title><rect x="97.9181%" y="1013" width="0.1950%" height="15" fill="rgb(212,98,48)" fg:x="42188" fg:w="84"/><text x="98.1681%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (84 samples, 0.19%)</title><rect x="97.9181%" y="997" width="0.1950%" height="15" fill="rgb(213,45,13)" fg:x="42188" fg:w="84"/><text x="98.1681%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (84 samples, 0.19%)</title><rect x="97.9181%" y="981" width="0.1950%" height="15" fill="rgb(218,35,29)" fg:x="42188" fg:w="84"/><text x="98.1681%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (84 samples, 0.19%)</title><rect x="97.9181%" y="965" width="0.1950%" height="15" fill="rgb(244,13,3)" fg:x="42188" fg:w="84"/><text x="98.1681%" y="975.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (7 samples, 0.02%)</title><rect x="98.1223%" y="949" width="0.0162%" height="15" fill="rgb(235,170,19)" fg:x="42276" fg:w="7"/><text x="98.3723%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.02%)</title><rect x="98.1223%" y="933" width="0.0162%" height="15" fill="rgb(233,193,43)" fg:x="42276" fg:w="7"/><text x="98.3723%" y="943.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (8 samples, 0.02%)</title><rect x="98.1223%" y="981" width="0.0186%" height="15" fill="rgb(228,223,20)" fg:x="42276" fg:w="8"/><text x="98.3723%" y="991.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (8 samples, 0.02%)</title><rect x="98.1223%" y="965" width="0.0186%" height="15" fill="rgb(208,85,54)" fg:x="42276" fg:w="8"/><text x="98.3723%" y="975.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (18 samples, 0.04%)</title><rect x="98.1223%" y="997" width="0.0418%" height="15" fill="rgb(254,14,45)" fg:x="42276" fg:w="18"/><text x="98.3723%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (10 samples, 0.02%)</title><rect x="98.1409%" y="981" width="0.0232%" height="15" fill="rgb(247,99,29)" fg:x="42284" fg:w="10"/><text x="98.3909%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.02%)</title><rect x="98.1409%" y="965" width="0.0232%" height="15" fill="rgb(225,180,54)" fg:x="42284" fg:w="10"/><text x="98.3909%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (10 samples, 0.02%)</title><rect x="98.1409%" y="949" width="0.0232%" height="15" fill="rgb(239,88,43)" fg:x="42284" fg:w="10"/><text x="98.3909%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (27 samples, 0.06%)</title><rect x="98.1223%" y="1061" width="0.0627%" height="15" fill="rgb(209,47,11)" fg:x="42276" fg:w="27"/><text x="98.3723%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.06%)</title><rect x="98.1223%" y="1045" width="0.0627%" height="15" fill="rgb(219,179,23)" fg:x="42276" fg:w="27"/><text x="98.3723%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.06%)</title><rect x="98.1223%" y="1029" width="0.0627%" height="15" fill="rgb(213,183,19)" fg:x="42276" fg:w="27"/><text x="98.3723%" y="1039.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (27 samples, 0.06%)</title><rect x="98.1223%" y="1013" width="0.0627%" height="15" fill="rgb(210,11,9)" fg:x="42276" fg:w="27"/><text x="98.3723%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (9 samples, 0.02%)</title><rect x="98.1641%" y="997" width="0.0209%" height="15" fill="rgb(239,194,16)" fg:x="42294" fg:w="9"/><text x="98.4141%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="98.1641%" y="981" width="0.0209%" height="15" fill="rgb(246,23,50)" fg:x="42294" fg:w="9"/><text x="98.4141%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="98.1641%" y="965" width="0.0209%" height="15" fill="rgb(245,10,41)" fg:x="42294" fg:w="9"/><text x="98.4141%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.02%)</title><rect x="98.1641%" y="949" width="0.0209%" height="15" fill="rgb(228,43,24)" fg:x="42294" fg:w="9"/><text x="98.4141%" y="959.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (6 samples, 0.01%)</title><rect x="98.1943%" y="1061" width="0.0139%" height="15" fill="rgb(220,151,0)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="1071.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.01%)</title><rect x="98.1943%" y="1045" width="0.0139%" height="15" fill="rgb(232,219,10)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="98.1943%" y="1029" width="0.0139%" height="15" fill="rgb(227,217,48)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.01%)</title><rect x="98.1943%" y="1013" width="0.0139%" height="15" fill="rgb(210,66,35)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="98.1943%" y="997" width="0.0139%" height="15" fill="rgb(254,6,7)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="98.1943%" y="981" width="0.0139%" height="15" fill="rgb(235,222,42)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="98.1943%" y="965" width="0.0139%" height="15" fill="rgb(245,126,5)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="98.1943%" y="949" width="0.0139%" height="15" fill="rgb(215,73,17)" fg:x="42307" fg:w="6"/><text x="98.4443%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="98.1966%" y="933" width="0.0116%" height="15" fill="rgb(219,198,52)" fg:x="42308" fg:w="5"/><text x="98.4466%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_expect_no_missing_dependencies (169 samples, 0.39%)</title><rect x="97.8183%" y="1141" width="0.3922%" height="15" fill="rgb(217,159,18)" fg:x="42145" fg:w="169"/><text x="98.0683%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (168 samples, 0.39%)</title><rect x="97.8206%" y="1125" width="0.3899%" height="15" fill="rgb(212,177,18)" fg:x="42146" fg:w="168"/><text x="98.0706%" y="1135.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (168 samples, 0.39%)</title><rect x="97.8206%" y="1109" width="0.3899%" height="15" fill="rgb(241,10,11)" fg:x="42146" fg:w="168"/><text x="98.0706%" y="1119.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (168 samples, 0.39%)</title><rect x="97.8206%" y="1093" width="0.3899%" height="15" fill="rgb(232,114,35)" fg:x="42146" fg:w="168"/><text x="98.0706%" y="1103.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (42 samples, 0.10%)</title><rect x="98.1130%" y="1077" width="0.0975%" height="15" fill="rgb(238,222,8)" fg:x="42272" fg:w="42"/><text x="98.3630%" y="1087.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (11 samples, 0.03%)</title><rect x="98.2152%" y="1061" width="0.0255%" height="15" fill="rgb(251,153,44)" fg:x="42316" fg:w="11"/><text x="98.4652%" y="1071.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (11 samples, 0.03%)</title><rect x="98.2152%" y="1045" width="0.0255%" height="15" fill="rgb(210,140,51)" fg:x="42316" fg:w="11"/><text x="98.4652%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.01%)</title><rect x="98.2291%" y="1029" width="0.0116%" height="15" fill="rgb(222,63,0)" fg:x="42322" fg:w="5"/><text x="98.4791%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="98.2291%" y="1013" width="0.0116%" height="15" fill="rgb(240,18,40)" fg:x="42322" fg:w="5"/><text x="98.4791%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_for_publication (17 samples, 0.04%)</title><rect x="98.2105%" y="1141" width="0.0395%" height="15" fill="rgb(237,88,16)" fg:x="42314" fg:w="17"/><text x="98.4605%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_verify_no_missing_dependencies (15 samples, 0.03%)</title><rect x="98.2152%" y="1125" width="0.0348%" height="15" fill="rgb(251,117,13)" fg:x="42316" fg:w="15"/><text x="98.4652%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (15 samples, 0.03%)</title><rect x="98.2152%" y="1109" width="0.0348%" height="15" fill="rgb(251,228,8)" fg:x="42316" fg:w="15"/><text x="98.4652%" y="1119.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (15 samples, 0.03%)</title><rect x="98.2152%" y="1093" width="0.0348%" height="15" fill="rgb(205,107,49)" fg:x="42316" fg:w="15"/><text x="98.4652%" y="1103.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (15 samples, 0.03%)</title><rect x="98.2152%" y="1077" width="0.0348%" height="15" fill="rgb(238,72,41)" fg:x="42316" fg:w="15"/><text x="98.4652%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (13 samples, 0.03%)</title><rect x="98.2523%" y="1125" width="0.0302%" height="15" fill="rgb(248,183,52)" fg:x="42332" fg:w="13"/><text x="98.5023%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (13 samples, 0.03%)</title><rect x="98.2523%" y="1109" width="0.0302%" height="15" fill="rgb(215,58,20)" fg:x="42332" fg:w="13"/><text x="98.5023%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading::_{{closure}} (8 samples, 0.02%)</title><rect x="98.2639%" y="1093" width="0.0186%" height="15" fill="rgb(209,49,13)" fg:x="42337" fg:w="8"/><text x="98.5139%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (14 samples, 0.03%)</title><rect x="98.2523%" y="1141" width="0.0325%" height="15" fill="rgb(208,113,17)" fg:x="42332" fg:w="14"/><text x="98.5023%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.01%)</title><rect x="98.3057%" y="1077" width="0.0116%" height="15" fill="rgb(208,14,22)" fg:x="42355" fg:w="5"/><text x="98.5557%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.01%)</title><rect x="98.3173%" y="1077" width="0.0139%" height="15" fill="rgb(222,95,2)" fg:x="42360" fg:w="6"/><text x="98.5673%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="98.3010%" y="1109" width="0.0325%" height="15" fill="rgb(253,180,37)" fg:x="42353" fg:w="14"/><text x="98.5510%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (14 samples, 0.03%)</title><rect x="98.3010%" y="1093" width="0.0325%" height="15" fill="rgb(250,81,33)" fg:x="42353" fg:w="14"/><text x="98.5510%" y="1103.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::ne (12 samples, 0.03%)</title><rect x="98.3498%" y="1061" width="0.0279%" height="15" fill="rgb(251,151,41)" fg:x="42374" fg:w="12"/><text x="98.5998%" y="1071.50"></text></g><g><title>core::array::_&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (12 samples, 0.03%)</title><rect x="98.3498%" y="1045" width="0.0279%" height="15" fill="rgb(210,135,17)" fg:x="42374" fg:w="12"/><text x="98.5998%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::ne (11 samples, 0.03%)</title><rect x="98.3521%" y="1029" width="0.0255%" height="15" fill="rgb(239,21,29)" fg:x="42375" fg:w="11"/><text x="98.6021%" y="1039.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (9 samples, 0.02%)</title><rect x="98.3567%" y="1013" width="0.0209%" height="15" fill="rgb(231,215,16)" fg:x="42377" fg:w="9"/><text x="98.6067%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.02%)</title><rect x="98.3614%" y="997" width="0.0162%" height="15" fill="rgb(239,151,54)" fg:x="42379" fg:w="7"/><text x="98.6114%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (29 samples, 0.07%)</title><rect x="98.3335%" y="1109" width="0.0673%" height="15" fill="rgb(222,122,38)" fg:x="42367" fg:w="29"/><text x="98.5835%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (24 samples, 0.06%)</title><rect x="98.3451%" y="1093" width="0.0557%" height="15" fill="rgb(243,128,1)" fg:x="42372" fg:w="24"/><text x="98.5951%" y="1103.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::ne (23 samples, 0.05%)</title><rect x="98.3475%" y="1077" width="0.0534%" height="15" fill="rgb(225,74,21)" fg:x="42373" fg:w="23"/><text x="98.5975%" y="1087.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::PartialEq&gt;::ne (10 samples, 0.02%)</title><rect x="98.3776%" y="1061" width="0.0232%" height="15" fill="rgb(216,210,10)" fg:x="42386" fg:w="10"/><text x="98.6276%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::ne (8 samples, 0.02%)</title><rect x="98.3823%" y="1045" width="0.0186%" height="15" fill="rgb(228,76,19)" fg:x="42388" fg:w="8"/><text x="98.6323%" y="1055.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::ne (7 samples, 0.02%)</title><rect x="98.3846%" y="1029" width="0.0162%" height="15" fill="rgb(236,80,34)" fg:x="42389" fg:w="7"/><text x="98.6346%" y="1039.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.01%)</title><rect x="98.3869%" y="1013" width="0.0139%" height="15" fill="rgb(225,173,23)" fg:x="42390" fg:w="6"/><text x="98.6369%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.01%)</title><rect x="98.3869%" y="997" width="0.0139%" height="15" fill="rgb(253,38,1)" fg:x="42390" fg:w="6"/><text x="98.6369%" y="1007.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.01%)</title><rect x="98.3869%" y="981" width="0.0139%" height="15" fill="rgb(206,155,35)" fg:x="42390" fg:w="6"/><text x="98.6369%" y="991.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.01%)</title><rect x="98.3892%" y="965" width="0.0116%" height="15" fill="rgb(254,27,53)" fg:x="42391" fg:w="5"/><text x="98.6392%" y="975.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="98.3892%" y="949" width="0.0116%" height="15" fill="rgb(225,52,41)" fg:x="42391" fg:w="5"/><text x="98.6392%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="98.4194%" y="997" width="0.0162%" height="15" fill="rgb(244,53,18)" fg:x="42404" fg:w="7"/><text x="98.6694%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="98.4194%" y="981" width="0.0162%" height="15" fill="rgb(254,206,48)" fg:x="42404" fg:w="7"/><text x="98.6694%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.03%)</title><rect x="98.4171%" y="1045" width="0.0302%" height="15" fill="rgb(236,182,23)" fg:x="42403" fg:w="13"/><text x="98.6671%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.03%)</title><rect x="98.4171%" y="1029" width="0.0302%" height="15" fill="rgb(236,191,37)" fg:x="42403" fg:w="13"/><text x="98.6671%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.03%)</title><rect x="98.4171%" y="1013" width="0.0302%" height="15" fill="rgb(245,53,8)" fg:x="42403" fg:w="13"/><text x="98.6671%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.04%)</title><rect x="98.4078%" y="1061" width="0.0418%" height="15" fill="rgb(245,147,9)" fg:x="42399" fg:w="18"/><text x="98.6578%" y="1071.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (20 samples, 0.05%)</title><rect x="98.4078%" y="1109" width="0.0464%" height="15" fill="rgb(218,24,48)" fg:x="42399" fg:w="20"/><text x="98.6578%" y="1119.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.05%)</title><rect x="98.4078%" y="1093" width="0.0464%" height="15" fill="rgb(254,23,9)" fg:x="42399" fg:w="20"/><text x="98.6578%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (20 samples, 0.05%)</title><rect x="98.4078%" y="1077" width="0.0464%" height="15" fill="rgb(244,105,9)" fg:x="42399" fg:w="20"/><text x="98.6578%" y="1087.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="98.4542%" y="1109" width="0.0116%" height="15" fill="rgb(212,142,22)" fg:x="42419" fg:w="5"/><text x="98.7042%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.01%)</title><rect x="98.4960%" y="1013" width="0.0139%" height="15" fill="rgb(221,114,49)" fg:x="42437" fg:w="6"/><text x="98.7460%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.01%)</title><rect x="98.4960%" y="997" width="0.0139%" height="15" fill="rgb(223,210,25)" fg:x="42437" fg:w="6"/><text x="98.7460%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="98.5099%" y="1013" width="0.0139%" height="15" fill="rgb(235,162,44)" fg:x="42443" fg:w="6"/><text x="98.7599%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="98.5099%" y="997" width="0.0139%" height="15" fill="rgb(237,65,45)" fg:x="42443" fg:w="6"/><text x="98.7599%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="98.4937%" y="1029" width="0.0325%" height="15" fill="rgb(208,79,9)" fg:x="42436" fg:w="14"/><text x="98.7437%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (6 samples, 0.01%)</title><rect x="98.5262%" y="1013" width="0.0139%" height="15" fill="rgb(215,228,8)" fg:x="42450" fg:w="6"/><text x="98.7762%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (8 samples, 0.02%)</title><rect x="98.5262%" y="1029" width="0.0186%" height="15" fill="rgb(205,185,17)" fg:x="42450" fg:w="8"/><text x="98.7762%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.07%)</title><rect x="98.4821%" y="1093" width="0.0696%" height="15" fill="rgb(213,62,36)" fg:x="42431" fg:w="30"/><text x="98.7321%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.07%)</title><rect x="98.4821%" y="1077" width="0.0696%" height="15" fill="rgb(209,34,9)" fg:x="42431" fg:w="30"/><text x="98.7321%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (30 samples, 0.07%)</title><rect x="98.4821%" y="1061" width="0.0696%" height="15" fill="rgb(246,151,27)" fg:x="42431" fg:w="30"/><text x="98.7321%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.07%)</title><rect x="98.4821%" y="1045" width="0.0696%" height="15" fill="rgb(218,206,3)" fg:x="42431" fg:w="30"/><text x="98.7321%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (37 samples, 0.09%)</title><rect x="98.4705%" y="1109" width="0.0859%" height="15" fill="rgb(242,202,1)" fg:x="42426" fg:w="37"/><text x="98.7205%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.02%)</title><rect x="98.5563%" y="1109" width="0.0232%" height="15" fill="rgb(227,185,16)" fg:x="42463" fg:w="10"/><text x="98.8063%" y="1119.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="98.5563%" y="1093" width="0.0232%" height="15" fill="rgb(241,1,14)" fg:x="42463" fg:w="10"/><text x="98.8063%" y="1103.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.02%)</title><rect x="98.5587%" y="1077" width="0.0209%" height="15" fill="rgb(212,113,25)" fg:x="42464" fg:w="9"/><text x="98.8087%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.02%)</title><rect x="98.5610%" y="1061" width="0.0186%" height="15" fill="rgb(247,37,43)" fg:x="42465" fg:w="8"/><text x="98.8110%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.02%)</title><rect x="98.5633%" y="1045" width="0.0162%" height="15" fill="rgb(226,54,8)" fg:x="42466" fg:w="7"/><text x="98.8133%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (6 samples, 0.01%)</title><rect x="98.5796%" y="1109" width="0.0139%" height="15" fill="rgb(251,205,25)" fg:x="42473" fg:w="6"/><text x="98.8296%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (6 samples, 0.01%)</title><rect x="98.5796%" y="1093" width="0.0139%" height="15" fill="rgb(246,87,35)" fg:x="42473" fg:w="6"/><text x="98.8296%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (6 samples, 0.01%)</title><rect x="98.5796%" y="1077" width="0.0139%" height="15" fill="rgb(251,145,46)" fg:x="42473" fg:w="6"/><text x="98.8296%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.01%)</title><rect x="98.5796%" y="1061" width="0.0139%" height="15" fill="rgb(210,210,33)" fg:x="42473" fg:w="6"/><text x="98.8296%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (12 samples, 0.03%)</title><rect x="98.6190%" y="1045" width="0.0279%" height="15" fill="rgb(221,151,11)" fg:x="42490" fg:w="12"/><text x="98.8690%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="98.6306%" y="1029" width="0.0162%" height="15" fill="rgb(208,160,28)" fg:x="42495" fg:w="7"/><text x="98.8806%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="98.6329%" y="1013" width="0.0139%" height="15" fill="rgb(243,69,29)" fg:x="42496" fg:w="6"/><text x="98.8829%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.01%)</title><rect x="98.6329%" y="997" width="0.0139%" height="15" fill="rgb(224,144,4)" fg:x="42496" fg:w="6"/><text x="98.8829%" y="1007.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (16 samples, 0.04%)</title><rect x="98.6190%" y="1093" width="0.0371%" height="15" fill="rgb(211,140,38)" fg:x="42490" fg:w="16"/><text x="98.8690%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.04%)</title><rect x="98.6190%" y="1077" width="0.0371%" height="15" fill="rgb(252,189,15)" fg:x="42490" fg:w="16"/><text x="98.8690%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (16 samples, 0.04%)</title><rect x="98.6190%" y="1061" width="0.0371%" height="15" fill="rgb(251,175,23)" fg:x="42490" fg:w="16"/><text x="98.8690%" y="1071.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (23 samples, 0.05%)</title><rect x="98.6167%" y="1109" width="0.0534%" height="15" fill="rgb(212,184,11)" fg:x="42489" fg:w="23"/><text x="98.8667%" y="1119.50"></text></g><g><title>move_binary_format::access::ModuleAccess::self_handle (5 samples, 0.01%)</title><rect x="98.6770%" y="1077" width="0.0116%" height="15" fill="rgb(217,205,6)" fg:x="42515" fg:w="5"/><text x="98.9270%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="98.6886%" y="1013" width="0.0139%" height="15" fill="rgb(235,45,45)" fg:x="42520" fg:w="6"/><text x="98.9386%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (8 samples, 0.02%)</title><rect x="98.6886%" y="1061" width="0.0186%" height="15" fill="rgb(211,157,53)" fg:x="42520" fg:w="8"/><text x="98.9386%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.02%)</title><rect x="98.6886%" y="1045" width="0.0186%" height="15" fill="rgb(212,13,8)" fg:x="42520" fg:w="8"/><text x="98.9386%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (8 samples, 0.02%)</title><rect x="98.6886%" y="1029" width="0.0186%" height="15" fill="rgb(218,80,36)" fg:x="42520" fg:w="8"/><text x="98.9386%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (19 samples, 0.04%)</title><rect x="98.6724%" y="1109" width="0.0441%" height="15" fill="rgb(211,123,43)" fg:x="42513" fg:w="19"/><text x="98.9224%" y="1119.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (17 samples, 0.04%)</title><rect x="98.6770%" y="1093" width="0.0395%" height="15" fill="rgb(206,165,2)" fg:x="42515" fg:w="17"/><text x="98.9270%" y="1103.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (12 samples, 0.03%)</title><rect x="98.6886%" y="1077" width="0.0279%" height="15" fill="rgb(248,63,35)" fg:x="42520" fg:w="12"/><text x="98.9386%" y="1087.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="98.7211%" y="997" width="0.0116%" height="15" fill="rgb(219,133,41)" fg:x="42534" fg:w="5"/><text x="98.9711%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.01%)</title><rect x="98.7211%" y="981" width="0.0116%" height="15" fill="rgb(206,175,46)" fg:x="42534" fg:w="5"/><text x="98.9711%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.7327%" y="997" width="0.0162%" height="15" fill="rgb(224,41,35)" fg:x="42539" fg:w="7"/><text x="98.9827%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.7327%" y="981" width="0.0162%" height="15" fill="rgb(226,113,24)" fg:x="42539" fg:w="7"/><text x="98.9827%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.7327%" y="965" width="0.0162%" height="15" fill="rgb(219,51,41)" fg:x="42539" fg:w="7"/><text x="98.9827%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="98.7374%" y="949" width="0.0116%" height="15" fill="rgb(220,145,47)" fg:x="42541" fg:w="5"/><text x="98.9874%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.03%)</title><rect x="98.7211%" y="1013" width="0.0302%" height="15" fill="rgb(239,121,47)" fg:x="42534" fg:w="13"/><text x="98.9711%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (25 samples, 0.06%)</title><rect x="98.7165%" y="1093" width="0.0580%" height="15" fill="rgb(207,60,40)" fg:x="42532" fg:w="25"/><text x="98.9665%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::_{{closure}} (24 samples, 0.06%)</title><rect x="98.7188%" y="1077" width="0.0557%" height="15" fill="rgb(224,229,11)" fg:x="42533" fg:w="24"/><text x="98.9688%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.06%)</title><rect x="98.7188%" y="1061" width="0.0557%" height="15" fill="rgb(252,28,32)" fg:x="42533" fg:w="24"/><text x="98.9688%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24 samples, 0.06%)</title><rect x="98.7188%" y="1045" width="0.0557%" height="15" fill="rgb(207,52,49)" fg:x="42533" fg:w="24"/><text x="98.9688%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.05%)</title><rect x="98.7211%" y="1029" width="0.0534%" height="15" fill="rgb(243,51,50)" fg:x="42534" fg:w="23"/><text x="98.9711%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.02%)</title><rect x="98.7513%" y="1013" width="0.0232%" height="15" fill="rgb(212,92,21)" fg:x="42547" fg:w="10"/><text x="99.0013%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.02%)</title><rect x="98.7513%" y="997" width="0.0232%" height="15" fill="rgb(230,183,50)" fg:x="42547" fg:w="10"/><text x="99.0013%" y="1007.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="98.7838%" y="1013" width="0.0162%" height="15" fill="rgb(225,48,9)" fg:x="42561" fg:w="7"/><text x="99.0338%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="98.7838%" y="1029" width="0.0255%" height="15" fill="rgb(254,44,4)" fg:x="42561" fg:w="11"/><text x="99.0338%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (48 samples, 0.11%)</title><rect x="98.7165%" y="1109" width="0.1114%" height="15" fill="rgb(252,128,37)" fg:x="42532" fg:w="48"/><text x="98.9665%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (23 samples, 0.05%)</title><rect x="98.7745%" y="1093" width="0.0534%" height="15" fill="rgb(227,178,8)" fg:x="42557" fg:w="23"/><text x="99.0245%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.05%)</title><rect x="98.7815%" y="1077" width="0.0464%" height="15" fill="rgb(205,206,32)" fg:x="42560" fg:w="20"/><text x="99.0315%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.05%)</title><rect x="98.7815%" y="1061" width="0.0464%" height="15" fill="rgb(220,218,22)" fg:x="42560" fg:w="20"/><text x="99.0315%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.05%)</title><rect x="98.7815%" y="1045" width="0.0464%" height="15" fill="rgb(236,41,28)" fg:x="42560" fg:w="20"/><text x="99.0315%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.02%)</title><rect x="98.8093%" y="1029" width="0.0186%" height="15" fill="rgb(219,37,7)" fg:x="42572" fg:w="8"/><text x="99.0593%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="98.8093%" y="1013" width="0.0186%" height="15" fill="rgb(206,160,15)" fg:x="42572" fg:w="8"/><text x="99.0593%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="98.8418%" y="1061" width="0.0116%" height="15" fill="rgb(208,82,21)" fg:x="42586" fg:w="5"/><text x="99.0918%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="98.8418%" y="1045" width="0.0116%" height="15" fill="rgb(226,130,25)" fg:x="42586" fg:w="5"/><text x="99.0918%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.01%)</title><rect x="98.8418%" y="1029" width="0.0116%" height="15" fill="rgb(212,72,24)" fg:x="42586" fg:w="5"/><text x="99.0918%" y="1039.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.03%)</title><rect x="98.8418%" y="1077" width="0.0279%" height="15" fill="rgb(206,28,16)" fg:x="42586" fg:w="12"/><text x="99.0918%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.8534%" y="1061" width="0.0162%" height="15" fill="rgb(249,41,5)" fg:x="42591" fg:w="7"/><text x="99.1034%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.8534%" y="1045" width="0.0162%" height="15" fill="rgb(233,96,48)" fg:x="42591" fg:w="7"/><text x="99.1034%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="98.8534%" y="1029" width="0.0162%" height="15" fill="rgb(240,198,11)" fg:x="42591" fg:w="7"/><text x="99.1034%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="98.8581%" y="1013" width="0.0116%" height="15" fill="rgb(209,175,35)" fg:x="42593" fg:w="5"/><text x="99.1081%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.02%)</title><rect x="98.8697%" y="1077" width="0.0232%" height="15" fill="rgb(214,40,51)" fg:x="42598" fg:w="10"/><text x="99.1197%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="98.8720%" y="1061" width="0.0209%" height="15" fill="rgb(252,56,4)" fg:x="42599" fg:w="9"/><text x="99.1220%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.02%)</title><rect x="98.8743%" y="1045" width="0.0186%" height="15" fill="rgb(219,131,5)" fg:x="42600" fg:w="8"/><text x="99.1243%" y="1055.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.02%)</title><rect x="98.8743%" y="1029" width="0.0186%" height="15" fill="rgb(223,67,53)" fg:x="42600" fg:w="8"/><text x="99.1243%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.02%)</title><rect x="98.8743%" y="1013" width="0.0186%" height="15" fill="rgb(227,154,8)" fg:x="42600" fg:w="8"/><text x="99.1243%" y="1023.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="98.9022%" y="981" width="0.0116%" height="15" fill="rgb(216,174,51)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="98.9022%" y="965" width="0.0116%" height="15" fill="rgb(239,60,34)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.01%)</title><rect x="98.9022%" y="949" width="0.0116%" height="15" fill="rgb(236,165,48)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="98.9022%" y="933" width="0.0116%" height="15" fill="rgb(210,37,26)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="98.9022%" y="917" width="0.0116%" height="15" fill="rgb(211,3,17)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="98.9022%" y="901" width="0.0116%" height="15" fill="rgb(234,88,49)" fg:x="42612" fg:w="5"/><text x="99.1522%" y="911.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (8 samples, 0.02%)</title><rect x="98.9022%" y="1013" width="0.0186%" height="15" fill="rgb(233,40,17)" fg:x="42612" fg:w="8"/><text x="99.1522%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="98.9022%" y="997" width="0.0186%" height="15" fill="rgb(235,127,31)" fg:x="42612" fg:w="8"/><text x="99.1522%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (7 samples, 0.02%)</title><rect x="98.9323%" y="1013" width="0.0162%" height="15" fill="rgb(248,167,17)" fg:x="42625" fg:w="7"/><text x="99.1823%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.06%)</title><rect x="98.8952%" y="1061" width="0.0603%" height="15" fill="rgb(218,179,8)" fg:x="42609" fg:w="26"/><text x="99.1452%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.06%)</title><rect x="98.8952%" y="1045" width="0.0603%" height="15" fill="rgb(216,92,14)" fg:x="42609" fg:w="26"/><text x="99.1452%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (26 samples, 0.06%)</title><rect x="98.8952%" y="1029" width="0.0603%" height="15" fill="rgb(221,198,46)" fg:x="42609" fg:w="26"/><text x="99.1452%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Module::new (294 samples, 0.68%)</title><rect x="98.2848%" y="1141" width="0.6824%" height="15" fill="rgb(244,7,25)" fg:x="42346" fg:w="294"/><text x="98.5348%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (294 samples, 0.68%)</title><rect x="98.2848%" y="1125" width="0.6824%" height="15" fill="rgb(233,75,6)" fg:x="42346" fg:w="294"/><text x="98.5348%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (56 samples, 0.13%)</title><rect x="98.8372%" y="1109" width="0.1300%" height="15" fill="rgb(240,189,41)" fg:x="42584" fg:w="56"/><text x="99.0872%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (56 samples, 0.13%)</title><rect x="98.8372%" y="1093" width="0.1300%" height="15" fill="rgb(237,157,21)" fg:x="42584" fg:w="56"/><text x="99.0872%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (32 samples, 0.07%)</title><rect x="98.8929%" y="1077" width="0.0743%" height="15" fill="rgb(210,136,49)" fg:x="42608" fg:w="32"/><text x="99.1429%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (5 samples, 0.01%)</title><rect x="98.9672%" y="1141" width="0.0116%" height="15" fill="rgb(210,68,29)" fg:x="42640" fg:w="5"/><text x="99.2172%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Module::new (18 samples, 0.04%)</title><rect x="98.9788%" y="1125" width="0.0418%" height="15" fill="rgb(247,207,20)" fg:x="42645" fg:w="18"/><text x="99.2288%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (17 samples, 0.04%)</title><rect x="98.9811%" y="1109" width="0.0395%" height="15" fill="rgb(224,73,48)" fg:x="42646" fg:w="17"/><text x="99.2311%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="99.0205%" y="981" width="0.0116%" height="15" fill="rgb(215,136,47)" fg:x="42663" fg:w="5"/><text x="99.2705%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="99.0205%" y="965" width="0.0116%" height="15" fill="rgb(232,222,16)" fg:x="42663" fg:w="5"/><text x="99.2705%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="99.0205%" y="1093" width="0.0209%" height="15" fill="rgb(249,202,47)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="99.0205%" y="1077" width="0.0209%" height="15" fill="rgb(236,56,8)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="99.0205%" y="1061" width="0.0209%" height="15" fill="rgb(222,6,3)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="99.0205%" y="1045" width="0.0209%" height="15" fill="rgb(254,222,28)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="99.0205%" y="1029" width="0.0209%" height="15" fill="rgb(219,57,23)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="99.0205%" y="1013" width="0.0209%" height="15" fill="rgb(251,106,48)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="99.0205%" y="997" width="0.0209%" height="15" fill="rgb(242,2,23)" fg:x="42663" fg:w="9"/><text x="99.2705%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="99.0484%" y="997" width="0.0162%" height="15" fill="rgb(212,109,31)" fg:x="42675" fg:w="7"/><text x="99.2984%" y="1007.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="99.0484%" y="1013" width="0.0209%" height="15" fill="rgb(241,9,22)" fg:x="42675" fg:w="9"/><text x="99.2984%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="99.0716%" y="965" width="0.0232%" height="15" fill="rgb(209,64,27)" fg:x="42685" fg:w="10"/><text x="99.3216%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="99.0716%" y="949" width="0.0232%" height="15" fill="rgb(248,13,44)" fg:x="42685" fg:w="10"/><text x="99.3216%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="99.0971%" y="965" width="0.0162%" height="15" fill="rgb(213,86,6)" fg:x="42696" fg:w="7"/><text x="99.3471%" y="975.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (32 samples, 0.07%)</title><rect x="99.0414%" y="1093" width="0.0743%" height="15" fill="rgb(247,11,18)" fg:x="42672" fg:w="32"/><text x="99.2914%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.07%)</title><rect x="99.0414%" y="1077" width="0.0743%" height="15" fill="rgb(252,31,11)" fg:x="42672" fg:w="32"/><text x="99.2914%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.07%)</title><rect x="99.0414%" y="1061" width="0.0743%" height="15" fill="rgb(215,63,51)" fg:x="42672" fg:w="32"/><text x="99.2914%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.07%)</title><rect x="99.0414%" y="1045" width="0.0743%" height="15" fill="rgb(222,180,4)" fg:x="42672" fg:w="32"/><text x="99.2914%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.07%)</title><rect x="99.0414%" y="1029" width="0.0743%" height="15" fill="rgb(233,4,23)" fg:x="42672" fg:w="32"/><text x="99.2914%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="99.0693%" y="1013" width="0.0464%" height="15" fill="rgb(230,116,22)" fg:x="42684" fg:w="20"/><text x="99.3193%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="99.0693%" y="997" width="0.0464%" height="15" fill="rgb(222,20,14)" fg:x="42684" fg:w="20"/><text x="99.3193%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.05%)</title><rect x="99.0693%" y="981" width="0.0464%" height="15" fill="rgb(210,176,43)" fg:x="42684" fg:w="20"/><text x="99.3193%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6 samples, 0.01%)</title><rect x="99.1296%" y="933" width="0.0139%" height="15" fill="rgb(219,67,32)" fg:x="42710" fg:w="6"/><text x="99.3796%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.01%)</title><rect x="99.1436%" y="933" width="0.0116%" height="15" fill="rgb(228,91,39)" fg:x="42716" fg:w="5"/><text x="99.3936%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.01%)</title><rect x="99.1436%" y="917" width="0.0116%" height="15" fill="rgb(254,63,14)" fg:x="42716" fg:w="5"/><text x="99.3936%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.01%)</title><rect x="99.1436%" y="901" width="0.0116%" height="15" fill="rgb(216,171,39)" fg:x="42716" fg:w="5"/><text x="99.3936%" y="911.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="99.1436%" y="885" width="0.0116%" height="15" fill="rgb(248,68,25)" fg:x="42716" fg:w="5"/><text x="99.3936%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="99.1436%" y="869" width="0.0116%" height="15" fill="rgb(239,63,16)" fg:x="42716" fg:w="5"/><text x="99.3936%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.03%)</title><rect x="99.1250%" y="1029" width="0.0325%" height="15" fill="rgb(225,111,43)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.03%)</title><rect x="99.1250%" y="1013" width="0.0325%" height="15" fill="rgb(246,165,17)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.03%)</title><rect x="99.1250%" y="997" width="0.0325%" height="15" fill="rgb(208,124,1)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.03%)</title><rect x="99.1250%" y="981" width="0.0325%" height="15" fill="rgb(234,147,33)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.03%)</title><rect x="99.1250%" y="965" width="0.0325%" height="15" fill="rgb(240,86,30)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.03%)</title><rect x="99.1250%" y="949" width="0.0325%" height="15" fill="rgb(237,34,51)" fg:x="42708" fg:w="14"/><text x="99.3750%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.04%)</title><rect x="99.1250%" y="1093" width="0.0418%" height="15" fill="rgb(232,131,41)" fg:x="42708" fg:w="18"/><text x="99.3750%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="99.1250%" y="1077" width="0.0418%" height="15" fill="rgb(227,129,53)" fg:x="42708" fg:w="18"/><text x="99.3750%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="99.1250%" y="1061" width="0.0418%" height="15" fill="rgb(230,90,35)" fg:x="42708" fg:w="18"/><text x="99.3750%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="99.1250%" y="1045" width="0.0418%" height="15" fill="rgb(248,88,27)" fg:x="42708" fg:w="18"/><text x="99.3750%" y="1055.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (7 samples, 0.02%)</title><rect x="99.1668%" y="1093" width="0.0162%" height="15" fill="rgb(223,18,17)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1103.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (7 samples, 0.02%)</title><rect x="99.1668%" y="1077" width="0.0162%" height="15" fill="rgb(241,11,10)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1087.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (7 samples, 0.02%)</title><rect x="99.1668%" y="1061" width="0.0162%" height="15" fill="rgb(232,111,52)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="99.1668%" y="1045" width="0.0162%" height="15" fill="rgb(228,67,8)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.02%)</title><rect x="99.1668%" y="1029" width="0.0162%" height="15" fill="rgb(251,168,31)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (7 samples, 0.02%)</title><rect x="99.1668%" y="1013" width="0.0162%" height="15" fill="rgb(249,164,11)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="99.1668%" y="997" width="0.0162%" height="15" fill="rgb(239,81,9)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="99.1668%" y="981" width="0.0162%" height="15" fill="rgb(222,145,38)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="99.1668%" y="965" width="0.0162%" height="15" fill="rgb(238,80,54)" fg:x="42726" fg:w="7"/><text x="99.4168%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Function::new (71 samples, 0.16%)</title><rect x="99.0205%" y="1109" width="0.1648%" height="15" fill="rgb(237,116,16)" fg:x="42663" fg:w="71"/><text x="99.2705%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="99.1946%" y="1077" width="0.0162%" height="15" fill="rgb(218,135,19)" fg:x="42738" fg:w="7"/><text x="99.4446%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="99.1946%" y="1061" width="0.0162%" height="15" fill="rgb(216,207,44)" fg:x="42738" fg:w="7"/><text x="99.4446%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.02%)</title><rect x="99.1946%" y="1045" width="0.0162%" height="15" fill="rgb(226,152,40)" fg:x="42738" fg:w="7"/><text x="99.4446%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="99.1946%" y="1029" width="0.0162%" height="15" fill="rgb(219,98,35)" fg:x="42738" fg:w="7"/><text x="99.4446%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="99.1946%" y="1093" width="0.0186%" height="15" fill="rgb(222,136,46)" fg:x="42738" fg:w="8"/><text x="99.4446%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (113 samples, 0.26%)</title><rect x="98.9788%" y="1141" width="0.2623%" height="15" fill="rgb(222,71,8)" fg:x="42645" fg:w="113"/><text x="99.2288%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (95 samples, 0.22%)</title><rect x="99.0205%" y="1125" width="0.2205%" height="15" fill="rgb(209,89,53)" fg:x="42663" fg:w="95"/><text x="99.2705%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::load_field_types (24 samples, 0.06%)</title><rect x="99.1853%" y="1109" width="0.0557%" height="15" fill="rgb(210,97,51)" fg:x="42734" fg:w="24"/><text x="99.4353%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (7 samples, 0.02%)</title><rect x="99.2248%" y="1093" width="0.0162%" height="15" fill="rgb(248,65,21)" fg:x="42751" fg:w="7"/><text x="99.4748%" y="1103.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (7 samples, 0.02%)</title><rect x="99.2248%" y="1077" width="0.0162%" height="15" fill="rgb(222,5,31)" fg:x="42751" fg:w="7"/><text x="99.4748%" y="1087.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (6 samples, 0.01%)</title><rect x="99.2271%" y="1061" width="0.0139%" height="15" fill="rgb(241,16,30)" fg:x="42752" fg:w="6"/><text x="99.4771%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::load_field_types (16 samples, 0.04%)</title><rect x="99.2410%" y="1141" width="0.0371%" height="15" fill="rgb(215,86,30)" fg:x="42758" fg:w="16"/><text x="99.4910%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (16 samples, 0.04%)</title><rect x="99.2410%" y="1125" width="0.0371%" height="15" fill="rgb(235,26,44)" fg:x="42758" fg:w="16"/><text x="99.4910%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (16 samples, 0.04%)</title><rect x="99.2410%" y="1109" width="0.0371%" height="15" fill="rgb(228,147,14)" fg:x="42758" fg:w="16"/><text x="99.4910%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading::_{{closure}} (11 samples, 0.03%)</title><rect x="99.2526%" y="1093" width="0.0255%" height="15" fill="rgb(253,38,50)" fg:x="42763" fg:w="11"/><text x="99.5026%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_struct_by_name (11 samples, 0.03%)</title><rect x="99.2526%" y="1077" width="0.0255%" height="15" fill="rgb(251,151,16)" fg:x="42763" fg:w="11"/><text x="99.5026%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (9 samples, 0.02%)</title><rect x="99.2573%" y="1061" width="0.0209%" height="15" fill="rgb(224,64,19)" fg:x="42765" fg:w="9"/><text x="99.5073%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="99.2619%" y="1045" width="0.0162%" height="15" fill="rgb(235,214,47)" fg:x="42767" fg:w="7"/><text x="99.5119%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.02%)</title><rect x="99.2619%" y="1029" width="0.0162%" height="15" fill="rgb(218,15,19)" fg:x="42767" fg:w="7"/><text x="99.5119%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="99.2619%" y="1013" width="0.0162%" height="15" fill="rgb(247,209,3)" fg:x="42767" fg:w="7"/><text x="99.5119%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.01%)</title><rect x="99.2642%" y="997" width="0.0139%" height="15" fill="rgb(217,29,2)" fg:x="42768" fg:w="6"/><text x="99.5142%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="99.2642%" y="981" width="0.0139%" height="15" fill="rgb(234,9,9)" fg:x="42768" fg:w="6"/><text x="99.5142%" y="991.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (5 samples, 0.01%)</title><rect x="99.2967%" y="1141" width="0.0116%" height="15" fill="rgb(207,43,14)" fg:x="42782" fg:w="5"/><text x="99.5467%" y="1151.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::publish_module_bundle (5 samples, 0.01%)</title><rect x="99.3130%" y="1141" width="0.0116%" height="15" fill="rgb(216,219,36)" fg:x="42789" fg:w="5"/><text x="99.5630%" y="1151.50"></text></g><g><title>move_vm_runtime::tracing::TRACING_ENABLED (5 samples, 0.01%)</title><rect x="99.3408%" y="1141" width="0.0116%" height="15" fill="rgb(238,12,26)" fg:x="42801" fg:w="5"/><text x="99.5908%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.03%)</title><rect x="99.4337%" y="1141" width="0.0279%" height="15" fill="rgb(226,67,30)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1151.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (12 samples, 0.03%)</title><rect x="99.4337%" y="1125" width="0.0279%" height="15" fill="rgb(229,154,7)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1135.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (12 samples, 0.03%)</title><rect x="99.4337%" y="1109" width="0.0279%" height="15" fill="rgb(249,90,18)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1119.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 0.03%)</title><rect x="99.4337%" y="1093" width="0.0279%" height="15" fill="rgb(223,53,15)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1103.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (12 samples, 0.03%)</title><rect x="99.4337%" y="1077" width="0.0279%" height="15" fill="rgb(253,86,38)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1087.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (12 samples, 0.03%)</title><rect x="99.4337%" y="1061" width="0.0279%" height="15" fill="rgb(222,198,9)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1071.50"></text></g><g><title>__pthread_cond_wait (12 samples, 0.03%)</title><rect x="99.4337%" y="1045" width="0.0279%" height="15" fill="rgb(240,146,25)" fg:x="42841" fg:w="12"/><text x="99.6837%" y="1055.50"></text></g><g><title>sha2::sha512::soft::sha512_digest_block_u64 (8 samples, 0.02%)</title><rect x="99.4801%" y="1141" width="0.0186%" height="15" fill="rgb(225,38,10)" fg:x="42861" fg:w="8"/><text x="99.7301%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.02%)</title><rect x="99.5079%" y="1141" width="0.0209%" height="15" fill="rgb(246,93,4)" fg:x="42873" fg:w="9"/><text x="99.7579%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.01%)</title><rect x="99.5288%" y="1141" width="0.0116%" height="15" fill="rgb(222,55,18)" fg:x="42882" fg:w="5"/><text x="99.7788%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.01%)</title><rect x="99.5404%" y="1141" width="0.0116%" height="15" fill="rgb(233,137,48)" fg:x="42887" fg:w="5"/><text x="99.7904%" y="1151.50"></text></g><g><title>std::collections::hash::map::RandomState::new (12 samples, 0.03%)</title><rect x="99.5613%" y="1141" width="0.0279%" height="15" fill="rgb(214,8,54)" fg:x="42896" fg:w="12"/><text x="99.8113%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="1077" width="0.0139%" height="15" fill="rgb(206,75,4)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1087.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="1061" width="0.0139%" height="15" fill="rgb(238,171,14)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1071.50"></text></g><g><title>rayon_core::scope::scope::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="1045" width="0.0139%" height="15" fill="rgb(233,70,41)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1055.50"></text></g><g><title>rayon_core::scope::ScopeBase::complete (6 samples, 0.01%)</title><rect x="99.5985%" y="1029" width="0.0139%" height="15" fill="rgb(214,68,36)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1039.50"></text></g><g><title>rayon_core::scope::ScopeBase::steal_till_jobs_complete (6 samples, 0.01%)</title><rect x="99.5985%" y="1013" width="0.0139%" height="15" fill="rgb(223,29,5)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.01%)</title><rect x="99.5985%" y="997" width="0.0139%" height="15" fill="rgb(251,22,40)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.01%)</title><rect x="99.5985%" y="981" width="0.0139%" height="15" fill="rgb(210,67,41)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="991.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.01%)</title><rect x="99.5985%" y="965" width="0.0139%" height="15" fill="rgb(225,177,31)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="975.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.01%)</title><rect x="99.5985%" y="949" width="0.0139%" height="15" fill="rgb(221,229,11)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="959.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.01%)</title><rect x="99.5985%" y="933" width="0.0139%" height="15" fill="rgb(247,172,52)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="943.50"></text></g><g><title>rayon_core::scope::Scope::spawn::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="917" width="0.0139%" height="15" fill="rgb(212,73,19)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="927.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job (6 samples, 0.01%)</title><rect x="99.5985%" y="901" width="0.0139%" height="15" fill="rgb(244,7,46)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="911.50"></text></g><g><title>rayon_core::scope::ScopeBase::execute_job_closure (6 samples, 0.01%)</title><rect x="99.5985%" y="885" width="0.0139%" height="15" fill="rgb(230,113,20)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="895.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.01%)</title><rect x="99.5985%" y="869" width="0.0139%" height="15" fill="rgb(209,97,30)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="879.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.01%)</title><rect x="99.5985%" y="853" width="0.0139%" height="15" fill="rgb(243,89,12)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="863.50"></text></g><g><title>std::panicking::try (6 samples, 0.01%)</title><rect x="99.5985%" y="837" width="0.0139%" height="15" fill="rgb(228,32,19)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="847.50"></text></g><g><title>__rust_try (6 samples, 0.01%)</title><rect x="99.5985%" y="821" width="0.0139%" height="15" fill="rgb(248,25,17)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="831.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.01%)</title><rect x="99.5985%" y="805" width="0.0139%" height="15" fill="rgb(232,161,29)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="815.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.01%)</title><rect x="99.5985%" y="789" width="0.0139%" height="15" fill="rgb(251,192,11)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="799.50"></text></g><g><title>rayon_core::scope::Scope::spawn::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="773" width="0.0139%" height="15" fill="rgb(240,47,32)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="783.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_impl::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="757" width="0.0139%" height="15" fill="rgb(250,16,45)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="767.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::preload_cache (6 samples, 0.01%)</title><rect x="99.5985%" y="741" width="0.0139%" height="15" fill="rgb(227,217,42)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="751.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (6 samples, 0.01%)</title><rect x="99.5985%" y="725" width="0.0139%" height="15" fill="rgb(206,82,54)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="735.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (6 samples, 0.01%)</title><rect x="99.5985%" y="709" width="0.0139%" height="15" fill="rgb(243,145,25)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="719.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (6 samples, 0.01%)</title><rect x="99.5985%" y="693" width="0.0139%" height="15" fill="rgb(207,166,24)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="703.50"></text></g><g><title>rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (6 samples, 0.01%)</title><rect x="99.5985%" y="677" width="0.0139%" height="15" fill="rgb(215,191,44)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="687.50"></text></g><g><title>rayon::iter::collect::special_extend (6 samples, 0.01%)</title><rect x="99.5985%" y="661" width="0.0139%" height="15" fill="rgb(234,218,51)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="671.50"></text></g><g><title>rayon::iter::collect::Collect&lt;T&gt;::with_consumer (6 samples, 0.01%)</title><rect x="99.5985%" y="645" width="0.0139%" height="15" fill="rgb(245,133,21)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="655.50"></text></g><g><title>rayon::iter::collect::special_extend::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="629" width="0.0139%" height="15" fill="rgb(230,136,45)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (6 samples, 0.01%)</title><rect x="99.5985%" y="613" width="0.0139%" height="15" fill="rgb(247,63,43)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="623.50"></text></g><g><title>&lt;rayon::collections::hash_set::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (6 samples, 0.01%)</title><rect x="99.5985%" y="597" width="0.0139%" height="15" fill="rgb(254,223,31)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="607.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (6 samples, 0.01%)</title><rect x="99.5985%" y="581" width="0.0139%" height="15" fill="rgb(236,185,0)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge (6 samples, 0.01%)</title><rect x="99.5985%" y="565" width="0.0139%" height="15" fill="rgb(231,139,46)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="575.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (6 samples, 0.01%)</title><rect x="99.5985%" y="549" width="0.0139%" height="15" fill="rgb(236,147,31)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="559.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (6 samples, 0.01%)</title><rect x="99.5985%" y="533" width="0.0139%" height="15" fill="rgb(225,222,22)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="543.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (6 samples, 0.01%)</title><rect x="99.5985%" y="517" width="0.0139%" height="15" fill="rgb(225,193,14)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (6 samples, 0.01%)</title><rect x="99.5985%" y="501" width="0.0139%" height="15" fill="rgb(253,193,46)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.01%)</title><rect x="99.5985%" y="485" width="0.0139%" height="15" fill="rgb(218,187,39)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="495.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.01%)</title><rect x="99.5985%" y="469" width="0.0139%" height="15" fill="rgb(227,162,48)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.01%)</title><rect x="99.5985%" y="453" width="0.0139%" height="15" fill="rgb(222,25,5)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="463.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (6 samples, 0.01%)</title><rect x="99.5985%" y="437" width="0.0139%" height="15" fill="rgb(211,205,16)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.01%)</title><rect x="99.5985%" y="421" width="0.0139%" height="15" fill="rgb(244,191,2)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.01%)</title><rect x="99.5985%" y="405" width="0.0139%" height="15" fill="rgb(248,159,12)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (6 samples, 0.01%)</title><rect x="99.5985%" y="389" width="0.0139%" height="15" fill="rgb(235,204,17)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="399.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (6 samples, 0.01%)</title><rect x="99.5985%" y="373" width="0.0139%" height="15" fill="rgb(240,21,27)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="383.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (6 samples, 0.01%)</title><rect x="99.5985%" y="357" width="0.0139%" height="15" fill="rgb(224,170,31)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="367.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="99.5985%" y="341" width="0.0139%" height="15" fill="rgb(223,145,32)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="351.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.01%)</title><rect x="99.5985%" y="325" width="0.0139%" height="15" fill="rgb(243,100,5)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="335.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.01%)</title><rect x="99.5985%" y="309" width="0.0139%" height="15" fill="rgb(242,131,51)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="319.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.01%)</title><rect x="99.5985%" y="293" width="0.0139%" height="15" fill="rgb(223,156,46)" fg:x="42912" fg:w="6"/><text x="99.8485%" y="303.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.01%)</title><rect x="99.6008%" y="277" width="0.0116%" height="15" fill="rgb(215,10,40)" fg:x="42913" fg:w="5"/><text x="99.8508%" y="287.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="99.5985%" y="1141" width="0.0186%" height="15" fill="rgb(233,155,0)" fg:x="42912" fg:w="8"/><text x="99.8485%" y="1151.50"></text></g><g><title>__rust_try (8 samples, 0.02%)</title><rect x="99.5985%" y="1125" width="0.0186%" height="15" fill="rgb(247,78,6)" fg:x="42912" fg:w="8"/><text x="99.8485%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="99.5985%" y="1109" width="0.0186%" height="15" fill="rgb(237,217,21)" fg:x="42912" fg:w="8"/><text x="99.8485%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="99.5985%" y="1093" width="0.0186%" height="15" fill="rgb(212,1,21)" fg:x="42912" fg:w="8"/><text x="99.8485%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.02%)</title><rect x="99.6217%" y="1141" width="0.0209%" height="15" fill="rgb(213,7,14)" fg:x="42922" fg:w="9"/><text x="99.8717%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.02%)</title><rect x="99.6217%" y="1125" width="0.0209%" height="15" fill="rgb(225,84,14)" fg:x="42922" fg:w="9"/><text x="99.8717%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.02%)</title><rect x="99.6217%" y="1109" width="0.0209%" height="15" fill="rgb(239,216,39)" fg:x="42922" fg:w="9"/><text x="99.8717%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.02%)</title><rect x="99.6263%" y="1093" width="0.0162%" height="15" fill="rgb(253,29,23)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (7 samples, 0.02%)</title><rect x="99.6263%" y="1077" width="0.0162%" height="15" fill="rgb(220,167,50)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="99.6263%" y="1061" width="0.0162%" height="15" fill="rgb(232,141,1)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1071.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="99.6263%" y="1045" width="0.0162%" height="15" fill="rgb(222,210,1)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="99.6263%" y="1029" width="0.0162%" height="15" fill="rgb(219,84,10)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="99.6263%" y="1013" width="0.0162%" height="15" fill="rgb(245,188,6)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (7 samples, 0.02%)</title><rect x="99.6263%" y="997" width="0.0162%" height="15" fill="rgb(252,139,39)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.02%)</title><rect x="99.6263%" y="981" width="0.0162%" height="15" fill="rgb(218,42,26)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="991.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (7 samples, 0.02%)</title><rect x="99.6263%" y="965" width="0.0162%" height="15" fill="rgb(237,226,51)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="975.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (7 samples, 0.02%)</title><rect x="99.6263%" y="949" width="0.0162%" height="15" fill="rgb(246,15,17)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="959.50"></text></g><g><title>test::run_test_in_process (7 samples, 0.02%)</title><rect x="99.6263%" y="933" width="0.0162%" height="15" fill="rgb(228,170,42)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="943.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="99.6263%" y="917" width="0.0162%" height="15" fill="rgb(248,118,53)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="927.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="99.6263%" y="901" width="0.0162%" height="15" fill="rgb(207,30,10)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="911.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="99.6263%" y="885" width="0.0162%" height="15" fill="rgb(217,104,38)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="99.6263%" y="869" width="0.0162%" height="15" fill="rgb(211,165,26)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="99.6263%" y="853" width="0.0162%" height="15" fill="rgb(247,38,9)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="863.50"></text></g><g><title>test::__rust_begin_short_backtrace (7 samples, 0.02%)</title><rect x="99.6263%" y="837" width="0.0162%" height="15" fill="rgb(218,187,8)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="99.6263%" y="821" width="0.0162%" height="15" fill="rgb(247,94,28)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="99.6263%" y="805" width="0.0162%" height="15" fill="rgb(218,173,30)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="815.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (7 samples, 0.02%)</title><rect x="99.6263%" y="789" width="0.0162%" height="15" fill="rgb(245,45,36)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="799.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (7 samples, 0.02%)</title><rect x="99.6263%" y="773" width="0.0162%" height="15" fill="rgb(221,172,44)" fg:x="42924" fg:w="7"/><text x="99.8763%" y="783.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis_file (6 samples, 0.01%)</title><rect x="99.6286%" y="757" width="0.0139%" height="15" fill="rgb(222,45,12)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="767.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis (6 samples, 0.01%)</title><rect x="99.6286%" y="741" width="0.0139%" height="15" fill="rgb(250,10,22)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="751.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::apply_write_set (6 samples, 0.01%)</title><rect x="99.6286%" y="725" width="0.0139%" height="15" fill="rgb(239,27,0)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="735.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::add_write_set (6 samples, 0.01%)</title><rect x="99.6286%" y="709" width="0.0139%" height="15" fill="rgb(223,118,22)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="719.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::set (6 samples, 0.01%)</title><rect x="99.6286%" y="693" width="0.0139%" height="15" fill="rgb(251,81,25)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.01%)</title><rect x="99.6286%" y="677" width="0.0139%" height="15" fill="rgb(237,225,53)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="99.6286%" y="661" width="0.0139%" height="15" fill="rgb(237,186,51)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.01%)</title><rect x="99.6286%" y="645" width="0.0139%" height="15" fill="rgb(247,209,11)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="99.6286%" y="629" width="0.0139%" height="15" fill="rgb(223,109,27)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="99.6286%" y="613" width="0.0139%" height="15" fill="rgb(246,181,13)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (6 samples, 0.01%)</title><rect x="99.6286%" y="597" width="0.0139%" height="15" fill="rgb(234,57,44)" fg:x="42925" fg:w="6"/><text x="99.8786%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.01%)</title><rect x="99.6611%" y="661" width="0.0139%" height="15" fill="rgb(211,227,50)" fg:x="42939" fg:w="6"/><text x="99.9111%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="99.6611%" y="645" width="0.0139%" height="15" fill="rgb(254,57,34)" fg:x="42939" fg:w="6"/><text x="99.9111%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="99.6611%" y="629" width="0.0139%" height="15" fill="rgb(227,212,26)" fg:x="42939" fg:w="6"/><text x="99.9111%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="99.6611%" y="613" width="0.0139%" height="15" fill="rgb(244,169,44)" fg:x="42939" fg:w="6"/><text x="99.9111%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="99.6611%" y="693" width="0.0162%" height="15" fill="rgb(236,135,50)" fg:x="42939" fg:w="7"/><text x="99.9111%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.02%)</title><rect x="99.6611%" y="677" width="0.0162%" height="15" fill="rgb(241,89,30)" fg:x="42939" fg:w="7"/><text x="99.9111%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.04%)</title><rect x="99.6426%" y="1141" width="0.0418%" height="15" fill="rgb(206,113,34)" fg:x="42931" fg:w="18"/><text x="99.8926%" y="1151.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (17 samples, 0.04%)</title><rect x="99.6449%" y="1125" width="0.0395%" height="15" fill="rgb(218,104,52)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1135.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (17 samples, 0.04%)</title><rect x="99.6449%" y="1109" width="0.0395%" height="15" fill="rgb(223,82,32)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1119.50"></text></g><g><title>test::run_test_in_process (17 samples, 0.04%)</title><rect x="99.6449%" y="1093" width="0.0395%" height="15" fill="rgb(249,219,30)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.04%)</title><rect x="99.6449%" y="1077" width="0.0395%" height="15" fill="rgb(233,141,21)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1087.50"></text></g><g><title>std::panicking::try (17 samples, 0.04%)</title><rect x="99.6449%" y="1061" width="0.0395%" height="15" fill="rgb(252,87,44)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.04%)</title><rect x="99.6449%" y="1045" width="0.0395%" height="15" fill="rgb(229,48,33)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.04%)</title><rect x="99.6449%" y="1029" width="0.0395%" height="15" fill="rgb(229,23,22)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.04%)</title><rect x="99.6449%" y="1013" width="0.0395%" height="15" fill="rgb(244,116,16)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1023.50"></text></g><g><title>test::__rust_begin_short_backtrace (17 samples, 0.04%)</title><rect x="99.6449%" y="997" width="0.0395%" height="15" fill="rgb(247,45,10)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.04%)</title><rect x="99.6449%" y="981" width="0.0395%" height="15" fill="rgb(228,60,29)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.04%)</title><rect x="99.6449%" y="965" width="0.0395%" height="15" fill="rgb(205,129,15)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="975.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (17 samples, 0.04%)</title><rect x="99.6449%" y="949" width="0.0395%" height="15" fill="rgb(206,229,4)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="959.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (17 samples, 0.04%)</title><rect x="99.6449%" y="933" width="0.0395%" height="15" fill="rgb(249,191,30)" fg:x="42932" fg:w="17"/><text x="99.8949%" y="943.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis_file (12 samples, 0.03%)</title><rect x="99.6565%" y="917" width="0.0279%" height="15" fill="rgb(250,84,54)" fg:x="42937" fg:w="12"/><text x="99.9065%" y="927.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis (10 samples, 0.02%)</title><rect x="99.6611%" y="901" width="0.0232%" height="15" fill="rgb(207,25,53)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="911.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::apply_write_set (10 samples, 0.02%)</title><rect x="99.6611%" y="885" width="0.0232%" height="15" fill="rgb(235,40,8)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="895.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::add_write_set (10 samples, 0.02%)</title><rect x="99.6611%" y="869" width="0.0232%" height="15" fill="rgb(226,169,33)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="879.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::set (10 samples, 0.02%)</title><rect x="99.6611%" y="853" width="0.0232%" height="15" fill="rgb(238,110,8)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.02%)</title><rect x="99.6611%" y="837" width="0.0232%" height="15" fill="rgb(251,206,12)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="99.6611%" y="821" width="0.0232%" height="15" fill="rgb(248,171,18)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.02%)</title><rect x="99.6611%" y="805" width="0.0232%" height="15" fill="rgb(213,65,46)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="99.6611%" y="789" width="0.0232%" height="15" fill="rgb(211,154,15)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="99.6611%" y="773" width="0.0232%" height="15" fill="rgb(217,75,43)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (10 samples, 0.02%)</title><rect x="99.6611%" y="757" width="0.0232%" height="15" fill="rgb(230,32,33)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (10 samples, 0.02%)</title><rect x="99.6611%" y="741" width="0.0232%" height="15" fill="rgb(221,100,16)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="99.6611%" y="725" width="0.0232%" height="15" fill="rgb(212,129,47)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="735.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="99.6611%" y="709" width="0.0232%" height="15" fill="rgb(239,217,47)" fg:x="42939" fg:w="10"/><text x="99.9111%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="99.6959%" y="1141" width="0.0209%" height="15" fill="rgb(230,84,24)" fg:x="42954" fg:w="9"/><text x="99.9459%" y="1151.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.03%)</title><rect x="99.7238%" y="1141" width="0.0279%" height="15" fill="rgb(214,153,51)" fg:x="42966" fg:w="12"/><text x="99.9738%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::executor::FakeExecutor&gt; (13 samples, 0.03%)</title><rect x="99.7540%" y="1061" width="0.0302%" height="15" fill="rgb(231,6,35)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt;&gt; (13 samples, 0.03%)</title><rect x="99.7540%" y="1045" width="0.0302%" height="15" fill="rgb(229,122,30)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt; (13 samples, 0.03%)</title><rect x="99.7540%" y="1029" width="0.0302%" height="15" fill="rgb(234,71,10)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;goldenfile::mint::Mint&gt; (13 samples, 0.03%)</title><rect x="99.7540%" y="1013" width="0.0302%" height="15" fill="rgb(215,173,26)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="1023.50"></text></g><g><title>&lt;goldenfile::mint::Mint as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="99.7540%" y="997" width="0.0302%" height="15" fill="rgb(248,118,52)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="1007.50"></text></g><g><title>goldenfile::mint::Mint::check_goldenfiles (13 samples, 0.03%)</title><rect x="99.7540%" y="981" width="0.0302%" height="15" fill="rgb(237,55,46)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (13 samples, 0.03%)</title><rect x="99.7540%" y="965" width="0.0302%" height="15" fill="rgb(243,214,43)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.03%)</title><rect x="99.7540%" y="949" width="0.0302%" height="15" fill="rgb(252,123,30)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="959.50"></text></g><g><title>goldenfile::differs::text_diff (13 samples, 0.03%)</title><rect x="99.7540%" y="933" width="0.0302%" height="15" fill="rgb(215,73,39)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="943.50"></text></g><g><title>difference::Changeset::new (13 samples, 0.03%)</title><rect x="99.7540%" y="917" width="0.0302%" height="15" fill="rgb(251,194,29)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="927.50"></text></g><g><title>difference::merge::merge (13 samples, 0.03%)</title><rect x="99.7540%" y="901" width="0.0302%" height="15" fill="rgb(224,58,52)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="911.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (13 samples, 0.03%)</title><rect x="99.7540%" y="885" width="0.0302%" height="15" fill="rgb(248,106,46)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.03%)</title><rect x="99.7540%" y="869" width="0.0302%" height="15" fill="rgb(223,80,29)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="879.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (13 samples, 0.03%)</title><rect x="99.7540%" y="853" width="0.0302%" height="15" fill="rgb(243,137,9)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="863.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="99.7540%" y="837" width="0.0302%" height="15" fill="rgb(235,121,28)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="847.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (13 samples, 0.03%)</title><rect x="99.7540%" y="821" width="0.0302%" height="15" fill="rgb(219,121,41)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="831.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (13 samples, 0.03%)</title><rect x="99.7540%" y="805" width="0.0302%" height="15" fill="rgb(251,60,6)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (13 samples, 0.03%)</title><rect x="99.7540%" y="789" width="0.0302%" height="15" fill="rgb(208,12,30)" fg:x="42979" fg:w="13"/><text x="100.0040%" y="799.50"></text></g><g><title>test::__rust_begin_short_backtrace (16 samples, 0.04%)</title><rect x="99.7540%" y="1141" width="0.0371%" height="15" fill="rgb(207,176,36)" fg:x="42979" fg:w="16"/><text x="100.0040%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.04%)</title><rect x="99.7540%" y="1125" width="0.0371%" height="15" fill="rgb(211,188,29)" fg:x="42979" fg:w="16"/><text x="100.0040%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.04%)</title><rect x="99.7540%" y="1109" width="0.0371%" height="15" fill="rgb(220,184,37)" fg:x="42979" fg:w="16"/><text x="100.0040%" y="1119.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (16 samples, 0.04%)</title><rect x="99.7540%" y="1093" width="0.0371%" height="15" fill="rgb(239,87,37)" fg:x="42979" fg:w="16"/><text x="100.0040%" y="1103.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (16 samples, 0.04%)</title><rect x="99.7540%" y="1077" width="0.0371%" height="15" fill="rgb(232,113,44)" fg:x="42979" fg:w="16"/><text x="100.0040%" y="1087.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::create_raw_account (12 samples, 0.03%)</title><rect x="99.7958%" y="949" width="0.0279%" height="15" fill="rgb(246,25,39)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="959.50"></text></g><g><title>language_e2e_tests::account::Account::new_from_seed (12 samples, 0.03%)</title><rect x="99.7958%" y="933" width="0.0279%" height="15" fill="rgb(247,30,13)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="943.50"></text></g><g><title>language_e2e_tests::keygen::KeyGen::generate_keypair (12 samples, 0.03%)</title><rect x="99.7958%" y="917" width="0.0279%" height="15" fill="rgb(230,176,35)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="927.50"></text></g><g><title>diem_crypto::traits::PrivateKey::public_key (12 samples, 0.03%)</title><rect x="99.7958%" y="901" width="0.0279%" height="15" fill="rgb(222,23,18)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.03%)</title><rect x="99.7958%" y="885" width="0.0279%" height="15" fill="rgb(234,86,8)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="895.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (12 samples, 0.03%)</title><rect x="99.7958%" y="869" width="0.0279%" height="15" fill="rgb(206,218,47)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.03%)</title><rect x="99.7958%" y="853" width="0.0279%" height="15" fill="rgb(229,35,31)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="863.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (12 samples, 0.03%)</title><rect x="99.7958%" y="837" width="0.0279%" height="15" fill="rgb(242,81,7)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="847.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (12 samples, 0.03%)</title><rect x="99.7958%" y="821" width="0.0279%" height="15" fill="rgb(231,11,35)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="831.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (12 samples, 0.03%)</title><rect x="99.7958%" y="805" width="0.0279%" height="15" fill="rgb(219,218,17)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="815.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (12 samples, 0.03%)</title><rect x="99.7958%" y="789" width="0.0279%" height="15" fill="rgb(221,83,32)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="799.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (12 samples, 0.03%)</title><rect x="99.7958%" y="773" width="0.0279%" height="15" fill="rgb(233,49,54)" fg:x="42997" fg:w="12"/><text x="100.0458%" y="783.50"></text></g><g><title>curve25519_dalek_fiat::window::LookupTable&lt;T&gt;::select (9 samples, 0.02%)</title><rect x="99.8027%" y="757" width="0.0209%" height="15" fill="rgb(206,18,51)" fg:x="43000" fg:w="9"/><text x="100.0527%" y="767.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (7 samples, 0.02%)</title><rect x="99.8074%" y="741" width="0.0162%" height="15" fill="rgb(249,193,15)" fg:x="43002" fg:w="7"/><text x="100.0574%" y="751.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (7 samples, 0.02%)</title><rect x="99.8074%" y="725" width="0.0162%" height="15" fill="rgb(245,186,19)" fg:x="43002" fg:w="7"/><text x="100.0574%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Bytecode&gt;&gt; (5 samples, 0.01%)</title><rect x="99.8352%" y="581" width="0.0116%" height="15" fill="rgb(230,4,24)" fg:x="43014" fg:w="5"/><text x="100.0852%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (6 samples, 0.01%)</title><rect x="99.8491%" y="533" width="0.0139%" height="15" fill="rgb(234,75,27)" fg:x="43020" fg:w="6"/><text x="100.0991%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (5 samples, 0.01%)</title><rect x="99.8515%" y="517" width="0.0116%" height="15" fill="rgb(244,187,35)" fg:x="43021" fg:w="5"/><text x="100.1015%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="99.8468%" y="549" width="0.0186%" height="15" fill="rgb(241,97,43)" fg:x="43019" fg:w="8"/><text x="100.0968%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (11 samples, 0.03%)</title><rect x="99.8468%" y="581" width="0.0255%" height="15" fill="rgb(236,94,2)" fg:x="43019" fg:w="11"/><text x="100.0968%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (11 samples, 0.03%)</title><rect x="99.8468%" y="565" width="0.0255%" height="15" fill="rgb(231,175,7)" fg:x="43019" fg:w="11"/><text x="100.0968%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (24 samples, 0.06%)</title><rect x="99.8236%" y="693" width="0.0557%" height="15" fill="rgb(236,89,47)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.06%)</title><rect x="99.8236%" y="677" width="0.0557%" height="15" fill="rgb(213,191,37)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (24 samples, 0.06%)</title><rect x="99.8236%" y="661" width="0.0557%" height="15" fill="rgb(252,0,34)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (24 samples, 0.06%)</title><rect x="99.8236%" y="645" width="0.0557%" height="15" fill="rgb(208,145,44)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.06%)</title><rect x="99.8236%" y="629" width="0.0557%" height="15" fill="rgb(227,95,50)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (24 samples, 0.06%)</title><rect x="99.8236%" y="613" width="0.0557%" height="15" fill="rgb(222,136,24)" fg:x="43009" fg:w="24"/><text x="100.0736%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (20 samples, 0.05%)</title><rect x="99.8329%" y="597" width="0.0464%" height="15" fill="rgb(218,105,10)" fg:x="43013" fg:w="20"/><text x="100.0829%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="99.9048%" y="469" width="0.0139%" height="15" fill="rgb(216,65,28)" fg:x="43044" fg:w="6"/><text x="100.1548%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (5 samples, 0.01%)</title><rect x="99.9072%" y="453" width="0.0116%" height="15" fill="rgb(229,6,28)" fg:x="43045" fg:w="5"/><text x="100.1572%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (5 samples, 0.01%)</title><rect x="99.9072%" y="437" width="0.0116%" height="15" fill="rgb(222,160,42)" fg:x="43045" fg:w="5"/><text x="100.1572%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="99.9048%" y="533" width="0.0162%" height="15" fill="rgb(235,83,49)" fg:x="43044" fg:w="7"/><text x="100.1548%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (7 samples, 0.02%)</title><rect x="99.9048%" y="517" width="0.0162%" height="15" fill="rgb(236,86,36)" fg:x="43044" fg:w="7"/><text x="100.1548%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (7 samples, 0.02%)</title><rect x="99.9048%" y="501" width="0.0162%" height="15" fill="rgb(236,19,41)" fg:x="43044" fg:w="7"/><text x="100.1548%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (7 samples, 0.02%)</title><rect x="99.9048%" y="485" width="0.0162%" height="15" fill="rgb(217,71,31)" fg:x="43044" fg:w="7"/><text x="100.1548%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (8 samples, 0.02%)</title><rect x="99.9048%" y="549" width="0.0186%" height="15" fill="rgb(236,209,25)" fg:x="43044" fg:w="8"/><text x="100.1548%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (26 samples, 0.06%)</title><rect x="99.8863%" y="565" width="0.0603%" height="15" fill="rgb(247,104,21)" fg:x="43036" fg:w="26"/><text x="100.1363%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::identifier::Identifier&gt;&gt; (6 samples, 0.01%)</title><rect x="99.9327%" y="549" width="0.0139%" height="15" fill="rgb(243,80,38)" fg:x="43056" fg:w="6"/><text x="100.1827%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="99.9327%" y="533" width="0.0139%" height="15" fill="rgb(232,109,38)" fg:x="43056" fg:w="6"/><text x="100.1827%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::identifier::Identifier]&gt; (5 samples, 0.01%)</title><rect x="99.9350%" y="517" width="0.0116%" height="15" fill="rgb(212,177,53)" fg:x="43057" fg:w="5"/><text x="100.1850%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (5 samples, 0.01%)</title><rect x="99.9350%" y="501" width="0.0116%" height="15" fill="rgb(227,30,34)" fg:x="43057" fg:w="5"/><text x="100.1850%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (5 samples, 0.01%)</title><rect x="99.9350%" y="485" width="0.0116%" height="15" fill="rgb(205,175,25)" fg:x="43057" fg:w="5"/><text x="100.1850%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (54 samples, 0.13%)</title><rect x="99.8236%" y="741" width="0.1253%" height="15" fill="rgb(249,39,54)" fg:x="43009" fg:w="54"/><text x="100.0736%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (54 samples, 0.13%)</title><rect x="99.8236%" y="725" width="0.1253%" height="15" fill="rgb(215,54,37)" fg:x="43009" fg:w="54"/><text x="100.0736%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (54 samples, 0.13%)</title><rect x="99.8236%" y="709" width="0.1253%" height="15" fill="rgb(205,60,46)" fg:x="43009" fg:w="54"/><text x="100.0736%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (30 samples, 0.07%)</title><rect x="99.8793%" y="693" width="0.0696%" height="15" fill="rgb(238,89,29)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (30 samples, 0.07%)</title><rect x="99.8793%" y="677" width="0.0696%" height="15" fill="rgb(212,48,10)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.07%)</title><rect x="99.8793%" y="661" width="0.0696%" height="15" fill="rgb(237,186,28)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (30 samples, 0.07%)</title><rect x="99.8793%" y="645" width="0.0696%" height="15" fill="rgb(237,204,4)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (30 samples, 0.07%)</title><rect x="99.8793%" y="629" width="0.0696%" height="15" fill="rgb(237,15,47)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.07%)</title><rect x="99.8793%" y="613" width="0.0696%" height="15" fill="rgb(244,110,25)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.07%)</title><rect x="99.8793%" y="597" width="0.0696%" height="15" fill="rgb(241,12,16)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (30 samples, 0.07%)</title><rect x="99.8793%" y="581" width="0.0696%" height="15" fill="rgb(235,25,9)" fg:x="43033" fg:w="30"/><text x="100.1293%" y="591.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (70 samples, 0.16%)</title><rect x="99.7911%" y="1141" width="0.1625%" height="15" fill="rgb(245,159,19)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1151.50"></text></g><g><title>test::run_test_in_process (70 samples, 0.16%)</title><rect x="99.7911%" y="1125" width="0.1625%" height="15" fill="rgb(236,63,32)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (70 samples, 0.16%)</title><rect x="99.7911%" y="1109" width="0.1625%" height="15" fill="rgb(235,32,52)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1119.50"></text></g><g><title>std::panicking::try (70 samples, 0.16%)</title><rect x="99.7911%" y="1093" width="0.1625%" height="15" fill="rgb(209,176,21)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (70 samples, 0.16%)</title><rect x="99.7911%" y="1077" width="0.1625%" height="15" fill="rgb(205,90,42)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1087.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70 samples, 0.16%)</title><rect x="99.7911%" y="1061" width="0.1625%" height="15" fill="rgb(213,132,16)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70 samples, 0.16%)</title><rect x="99.7911%" y="1045" width="0.1625%" height="15" fill="rgb(232,11,22)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1055.50"></text></g><g><title>test::__rust_begin_short_backtrace (70 samples, 0.16%)</title><rect x="99.7911%" y="1029" width="0.1625%" height="15" fill="rgb(248,167,41)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (70 samples, 0.16%)</title><rect x="99.7911%" y="1013" width="0.1625%" height="15" fill="rgb(209,127,6)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (70 samples, 0.16%)</title><rect x="99.7911%" y="997" width="0.1625%" height="15" fill="rgb(246,210,34)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="1007.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (70 samples, 0.16%)</title><rect x="99.7911%" y="981" width="0.1625%" height="15" fill="rgb(238,165,13)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="991.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (70 samples, 0.16%)</title><rect x="99.7911%" y="965" width="0.1625%" height="15" fill="rgb(233,98,15)" fg:x="42995" fg:w="70"/><text x="100.0411%" y="975.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction (56 samples, 0.13%)</title><rect x="99.8236%" y="949" width="0.1300%" height="15" fill="rgb(215,215,51)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="959.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_block (56 samples, 0.13%)</title><rect x="99.8236%" y="933" width="0.1300%" height="15" fill="rgb(217,161,25)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="943.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction_block (56 samples, 0.13%)</title><rect x="99.8236%" y="917" width="0.1300%" height="15" fill="rgb(217,167,48)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="927.50"></text></g><g><title>&lt;diem_vm::diem_transaction_executor::DiemVM as diem_vm::VMExecutor&gt;::execute_block (56 samples, 0.13%)</title><rect x="99.8236%" y="901" width="0.1300%" height="15" fill="rgb(205,163,34)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="911.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_and_keep_vm_status (56 samples, 0.13%)</title><rect x="99.8236%" y="885" width="0.1300%" height="15" fill="rgb(241,197,31)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;diem_vm::diem_transaction_executor::DiemVM&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="869" width="0.1300%" height="15" fill="rgb(225,123,11)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;diem_vm::diem_vm::DiemVMImpl&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="853" width="0.1300%" height="15" fill="rgb(217,4,20)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::move_vm::MoveVM&gt;&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="837" width="0.1300%" height="15" fill="rgb(215,55,9)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.13%)</title><rect x="99.8236%" y="821" width="0.1300%" height="15" fill="rgb(218,165,5)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (56 samples, 0.13%)</title><rect x="99.8236%" y="805" width="0.1300%" height="15" fill="rgb(222,175,15)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="789" width="0.1300%" height="15" fill="rgb(223,85,34)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="773" width="0.1300%" height="15" fill="rgb(234,228,29)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (56 samples, 0.13%)</title><rect x="99.8236%" y="757" width="0.1300%" height="15" fill="rgb(239,7,28)" fg:x="43009" fg:w="56"/><text x="100.0736%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.02%)</title><rect x="99.9536%" y="1141" width="0.0162%" height="15" fill="rgb(252,222,53)" fg:x="43065" fg:w="7"/><text x="100.2036%" y="1151.50"></text></g><g><title>vm_genesis::encode_genesis_change_set (5 samples, 0.01%)</title><rect x="99.9698%" y="1141" width="0.0116%" height="15" fill="rgb(232,146,44)" fg:x="43072" fg:w="5"/><text x="100.2198%" y="1151.50"></text></g><g><title>vm_genesis::TestValidator::new_test_set (6 samples, 0.01%)</title><rect x="99.9814%" y="1109" width="0.0139%" height="15" fill="rgb(243,223,53)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.01%)</title><rect x="99.9814%" y="1093" width="0.0139%" height="15" fill="rgb(219,128,25)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="99.9814%" y="1077" width="0.0139%" height="15" fill="rgb(223,56,32)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="99.9814%" y="1061" width="0.0139%" height="15" fill="rgb(237,41,3)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="99.9814%" y="1045" width="0.0139%" height="15" fill="rgb(235,138,9)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="99.9814%" y="1029" width="0.0139%" height="15" fill="rgb(214,131,10)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.01%)</title><rect x="99.9814%" y="1013" width="0.0139%" height="15" fill="rgb(229,89,7)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.01%)</title><rect x="99.9814%" y="997" width="0.0139%" height="15" fill="rgb(240,24,42)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.01%)</title><rect x="99.9814%" y="981" width="0.0139%" height="15" fill="rgb(243,188,54)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6 samples, 0.01%)</title><rect x="99.9814%" y="965" width="0.0139%" height="15" fill="rgb(246,92,22)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="975.50"></text></g><g><title>vm_genesis::TestValidator::new_test_set::_{{closure}} (6 samples, 0.01%)</title><rect x="99.9814%" y="949" width="0.0139%" height="15" fill="rgb(211,176,51)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="959.50"></text></g><g><title>vm_genesis::TestValidator::gen (6 samples, 0.01%)</title><rect x="99.9814%" y="933" width="0.0139%" height="15" fill="rgb(246,207,34)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="943.50"></text></g><g><title>diem_crypto::traits::PrivateKey::public_key (6 samples, 0.01%)</title><rect x="99.9814%" y="917" width="0.0139%" height="15" fill="rgb(239,95,2)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="99.9814%" y="901" width="0.0139%" height="15" fill="rgb(211,124,25)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="911.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (6 samples, 0.01%)</title><rect x="99.9814%" y="885" width="0.0139%" height="15" fill="rgb(231,221,19)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="99.9814%" y="869" width="0.0139%" height="15" fill="rgb(239,183,19)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="879.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (6 samples, 0.01%)</title><rect x="99.9814%" y="853" width="0.0139%" height="15" fill="rgb(221,130,29)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="863.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (6 samples, 0.01%)</title><rect x="99.9814%" y="837" width="0.0139%" height="15" fill="rgb(206,130,36)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="847.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (6 samples, 0.01%)</title><rect x="99.9814%" y="821" width="0.0139%" height="15" fill="rgb(215,70,19)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="831.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (6 samples, 0.01%)</title><rect x="99.9814%" y="805" width="0.0139%" height="15" fill="rgb(244,16,43)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="815.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (6 samples, 0.01%)</title><rect x="99.9814%" y="789" width="0.0139%" height="15" fill="rgb(222,115,32)" fg:x="43077" fg:w="6"/><text x="100.2314%" y="799.50"></text></g><g><title>curve25519_dalek_fiat::window::LookupTable&lt;T&gt;::select (5 samples, 0.01%)</title><rect x="99.9838%" y="773" width="0.0116%" height="15" fill="rgb(247,48,25)" fg:x="43078" fg:w="5"/><text x="100.2338%" y="783.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (5 samples, 0.01%)</title><rect x="99.9838%" y="757" width="0.0116%" height="15" fill="rgb(226,180,51)" fg:x="43078" fg:w="5"/><text x="100.2338%" y="767.50"></text></g><g><title>&lt;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (5 samples, 0.01%)</title><rect x="99.9838%" y="741" width="0.0116%" height="15" fill="rgb(217,142,42)" fg:x="43078" fg:w="5"/><text x="100.2338%" y="751.50"></text></g><g><title>vm_genesis::generate_genesis_change_set_for_testing (7 samples, 0.02%)</title><rect x="99.9814%" y="1141" width="0.0162%" height="15" fill="rgb(220,178,3)" fg:x="43077" fg:w="7"/><text x="100.2314%" y="1151.50"></text></g><g><title>vm_genesis::generate_test_genesis (7 samples, 0.02%)</title><rect x="99.9814%" y="1125" width="0.0162%" height="15" fill="rgb(217,221,4)" fg:x="43077" fg:w="7"/><text x="100.2314%" y="1135.50"></text></g><g><title>all (43,085 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(237,63,43)" fg:x="0" fg:w="43085"/><text x="0.2500%" y="1183.50"></text></g><g><title>tests::create_a (43,059 samples, 99.94%)</title><rect x="0.0603%" y="1157" width="99.9397%" height="15" fill="rgb(220,57,8)" fg:x="26" fg:w="43059"/><text x="0.3103%" y="1167.50">tests::create_a</text></g></svg></svg>