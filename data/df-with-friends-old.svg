<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="869.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="99422"><g><title>.annobin_rtld.c (15 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0151%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="15"/><text x="0.2500%" y="815.50"></text></g><g><title>language_e2e_te (26 samples, 0.03%)</title><rect x="0.0000%" y="821" width="0.0262%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="26"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="0.0302%" y="805" width="0.0171%" height="15" fill="rgb(221,193,54)" fg:x="30" fg:w="17"/><text x="0.2802%" y="815.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="0.0543%" y="805" width="0.0312%" height="15" fill="rgb(248,212,6)" fg:x="54" fg:w="31"/><text x="0.3043%" y="815.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (25 samples, 0.03%)</title><rect x="0.0885%" y="805" width="0.0251%" height="15" fill="rgb(208,68,35)" fg:x="88" fg:w="25"/><text x="0.3385%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="0.1147%" y="805" width="0.0121%" height="15" fill="rgb(232,128,0)" fg:x="114" fg:w="12"/><text x="0.3647%" y="815.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (100 samples, 0.10%)</title><rect x="0.1328%" y="805" width="0.1006%" height="15" fill="rgb(207,160,47)" fg:x="132" fg:w="100"/><text x="0.3828%" y="815.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (89 samples, 0.09%)</title><rect x="0.2414%" y="805" width="0.0895%" height="15" fill="rgb(228,23,34)" fg:x="240" fg:w="89"/><text x="0.4914%" y="815.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (64 samples, 0.06%)</title><rect x="0.3309%" y="805" width="0.0644%" height="15" fill="rgb(218,30,26)" fg:x="329" fg:w="64"/><text x="0.5809%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (56 samples, 0.06%)</title><rect x="0.3953%" y="805" width="0.0563%" height="15" fill="rgb(220,122,19)" fg:x="393" fg:w="56"/><text x="0.6453%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="0.4687%" y="805" width="0.0221%" height="15" fill="rgb(250,228,42)" fg:x="466" fg:w="22"/><text x="0.7187%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.04%)</title><rect x="0.4908%" y="805" width="0.0372%" height="15" fill="rgb(240,193,28)" fg:x="488" fg:w="37"/><text x="0.7408%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="0.5431%" y="805" width="0.0191%" height="15" fill="rgb(216,20,37)" fg:x="540" fg:w="19"/><text x="0.7931%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (67 samples, 0.07%)</title><rect x="0.5804%" y="805" width="0.0674%" height="15" fill="rgb(206,188,39)" fg:x="577" fg:w="67"/><text x="0.8304%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (57 samples, 0.06%)</title><rect x="0.6477%" y="805" width="0.0573%" height="15" fill="rgb(217,207,13)" fg:x="644" fg:w="57"/><text x="0.8977%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="0.7051%" y="805" width="0.0141%" height="15" fill="rgb(231,73,38)" fg:x="701" fg:w="14"/><text x="0.9551%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (11 samples, 0.01%)</title><rect x="0.7192%" y="805" width="0.0111%" height="15" fill="rgb(225,20,46)" fg:x="715" fg:w="11"/><text x="0.9692%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="0.7302%" y="805" width="0.0312%" height="15" fill="rgb(210,31,41)" fg:x="726" fg:w="31"/><text x="0.9802%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.10%)</title><rect x="0.7614%" y="805" width="0.0956%" height="15" fill="rgb(221,200,47)" fg:x="757" fg:w="95"/><text x="1.0114%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (20 samples, 0.02%)</title><rect x="0.8570%" y="805" width="0.0201%" height="15" fill="rgb(226,26,5)" fg:x="852" fg:w="20"/><text x="1.1070%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.10%)</title><rect x="0.8771%" y="805" width="0.0966%" height="15" fill="rgb(249,33,26)" fg:x="872" fg:w="96"/><text x="1.1271%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (128 samples, 0.13%)</title><rect x="0.9736%" y="805" width="0.1287%" height="15" fill="rgb(235,183,28)" fg:x="968" fg:w="128"/><text x="1.2236%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="1.1024%" y="805" width="0.0201%" height="15" fill="rgb(221,5,38)" fg:x="1096" fg:w="20"/><text x="1.3524%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="1.1225%" y="805" width="0.0282%" height="15" fill="rgb(247,18,42)" fg:x="1116" fg:w="28"/><text x="1.3725%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (146 samples, 0.15%)</title><rect x="1.1507%" y="805" width="0.1468%" height="15" fill="rgb(241,131,45)" fg:x="1144" fg:w="146"/><text x="1.4007%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.10%)</title><rect x="1.3035%" y="805" width="0.0956%" height="15" fill="rgb(249,31,29)" fg:x="1296" fg:w="95"/><text x="1.5535%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="1.4081%" y="805" width="0.0282%" height="15" fill="rgb(225,111,53)" fg:x="1400" fg:w="28"/><text x="1.6581%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.4423%" y="805" width="0.0111%" height="15" fill="rgb(238,160,17)" fg:x="1434" fg:w="11"/><text x="1.6923%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="1.4564%" y="805" width="0.0161%" height="15" fill="rgb(214,148,48)" fg:x="1448" fg:w="16"/><text x="1.7064%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.02%)</title><rect x="1.4846%" y="805" width="0.0181%" height="15" fill="rgb(232,36,49)" fg:x="1476" fg:w="18"/><text x="1.7346%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="1.5027%" y="805" width="0.0382%" height="15" fill="rgb(209,103,24)" fg:x="1494" fg:w="38"/><text x="1.7527%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.05%)</title><rect x="1.5429%" y="805" width="0.0473%" height="15" fill="rgb(229,88,8)" fg:x="1534" fg:w="47"/><text x="1.7929%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.08%)</title><rect x="1.5902%" y="805" width="0.0764%" height="15" fill="rgb(213,181,19)" fg:x="1581" fg:w="76"/><text x="1.8402%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="1.6727%" y="805" width="0.0201%" height="15" fill="rgb(254,191,54)" fg:x="1663" fg:w="20"/><text x="1.9227%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.02%)</title><rect x="1.6928%" y="805" width="0.0241%" height="15" fill="rgb(241,83,37)" fg:x="1683" fg:w="24"/><text x="1.9428%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (18 samples, 0.02%)</title><rect x="1.7169%" y="805" width="0.0181%" height="15" fill="rgb(233,36,39)" fg:x="1707" fg:w="18"/><text x="1.9669%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.03%)</title><rect x="1.7461%" y="805" width="0.0272%" height="15" fill="rgb(226,3,54)" fg:x="1736" fg:w="27"/><text x="1.9961%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (275 samples, 0.28%)</title><rect x="1.7732%" y="805" width="0.2766%" height="15" fill="rgb(245,192,40)" fg:x="1763" fg:w="275"/><text x="2.0232%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="2.0559%" y="805" width="0.0603%" height="15" fill="rgb(238,167,29)" fg:x="2044" fg:w="60"/><text x="2.3059%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (61 samples, 0.06%)</title><rect x="2.1162%" y="805" width="0.0614%" height="15" fill="rgb(232,182,51)" fg:x="2104" fg:w="61"/><text x="2.3662%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="2.1786%" y="805" width="0.0241%" height="15" fill="rgb(231,60,39)" fg:x="2166" fg:w="24"/><text x="2.4286%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="2.2027%" y="805" width="0.0171%" height="15" fill="rgb(208,69,12)" fg:x="2190" fg:w="17"/><text x="2.4527%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 0.04%)</title><rect x="2.2228%" y="805" width="0.0372%" height="15" fill="rgb(235,93,37)" fg:x="2210" fg:w="37"/><text x="2.4728%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="2.2611%" y="805" width="0.0111%" height="15" fill="rgb(213,116,39)" fg:x="2248" fg:w="11"/><text x="2.5111%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (19 samples, 0.02%)</title><rect x="2.2721%" y="805" width="0.0191%" height="15" fill="rgb(222,207,29)" fg:x="2259" fg:w="19"/><text x="2.5221%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="2.2912%" y="805" width="0.0221%" height="15" fill="rgb(206,96,30)" fg:x="2278" fg:w="22"/><text x="2.5412%" y="815.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="2.3285%" y="805" width="0.0231%" height="15" fill="rgb(218,138,4)" fg:x="2315" fg:w="23"/><text x="2.5785%" y="815.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="2.3596%" y="805" width="0.0241%" height="15" fill="rgb(250,191,14)" fg:x="2346" fg:w="24"/><text x="2.6096%" y="815.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="2.3838%" y="805" width="0.0141%" height="15" fill="rgb(239,60,40)" fg:x="2370" fg:w="14"/><text x="2.6338%" y="815.50"></text></g><g><title>&lt;borrow_graph::references::RefID as core::cmp::Ord&gt;::cmp (28 samples, 0.03%)</title><rect x="2.4019%" y="805" width="0.0282%" height="15" fill="rgb(206,27,48)" fg:x="2388" fg:w="28"/><text x="2.6519%" y="815.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (22 samples, 0.02%)</title><rect x="2.4421%" y="805" width="0.0221%" height="15" fill="rgb(225,35,8)" fg:x="2428" fg:w="22"/><text x="2.6921%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="2.4924%" y="805" width="0.0493%" height="15" fill="rgb(250,213,24)" fg:x="2478" fg:w="49"/><text x="2.7424%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (157 samples, 0.16%)</title><rect x="2.5417%" y="805" width="0.1579%" height="15" fill="rgb(247,123,22)" fg:x="2527" fg:w="157"/><text x="2.7917%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (241 samples, 0.24%)</title><rect x="2.6996%" y="805" width="0.2424%" height="15" fill="rgb(231,138,38)" fg:x="2684" fg:w="241"/><text x="2.9496%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="2.9501%" y="805" width="0.0161%" height="15" fill="rgb(231,145,46)" fg:x="2933" fg:w="16"/><text x="3.2001%" y="815.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (11 samples, 0.01%)</title><rect x="2.9822%" y="773" width="0.0111%" height="15" fill="rgb(251,118,11)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (11 samples, 0.01%)</title><rect x="2.9822%" y="757" width="0.0111%" height="15" fill="rgb(217,147,25)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="767.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (11 samples, 0.01%)</title><rect x="2.9822%" y="741" width="0.0111%" height="15" fill="rgb(247,81,37)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="751.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (11 samples, 0.01%)</title><rect x="2.9822%" y="725" width="0.0111%" height="15" fill="rgb(209,12,38)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="735.50"></text></g><g><title>crossbeam_epoch::default::pin (11 samples, 0.01%)</title><rect x="2.9822%" y="709" width="0.0111%" height="15" fill="rgb(227,1,9)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (11 samples, 0.01%)</title><rect x="2.9822%" y="693" width="0.0111%" height="15" fill="rgb(248,47,43)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="2.9822%" y="677" width="0.0111%" height="15" fill="rgb(221,10,30)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="687.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (11 samples, 0.01%)</title><rect x="2.9822%" y="661" width="0.0111%" height="15" fill="rgb(210,229,1)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="671.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (11 samples, 0.01%)</title><rect x="2.9822%" y="645" width="0.0111%" height="15" fill="rgb(222,148,37)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="655.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (11 samples, 0.01%)</title><rect x="2.9822%" y="629" width="0.0111%" height="15" fill="rgb(234,67,33)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (11 samples, 0.01%)</title><rect x="2.9822%" y="613" width="0.0111%" height="15" fill="rgb(247,98,35)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (11 samples, 0.01%)</title><rect x="2.9822%" y="597" width="0.0111%" height="15" fill="rgb(247,138,52)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="607.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (11 samples, 0.01%)</title><rect x="2.9822%" y="581" width="0.0111%" height="15" fill="rgb(213,79,30)" fg:x="2965" fg:w="11"/><text x="3.2322%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.03%)</title><rect x="2.9792%" y="805" width="0.0322%" height="15" fill="rgb(246,177,23)" fg:x="2962" fg:w="32"/><text x="3.2292%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.03%)</title><rect x="2.9822%" y="789" width="0.0292%" height="15" fill="rgb(230,62,27)" fg:x="2965" fg:w="29"/><text x="3.2322%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="2.9933%" y="773" width="0.0181%" height="15" fill="rgb(216,154,8)" fg:x="2976" fg:w="18"/><text x="3.2433%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (18 samples, 0.02%)</title><rect x="2.9933%" y="757" width="0.0181%" height="15" fill="rgb(244,35,45)" fg:x="2976" fg:w="18"/><text x="3.2433%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (18 samples, 0.02%)</title><rect x="2.9933%" y="741" width="0.0181%" height="15" fill="rgb(251,115,12)" fg:x="2976" fg:w="18"/><text x="3.2433%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (18 samples, 0.02%)</title><rect x="2.9933%" y="725" width="0.0181%" height="15" fill="rgb(240,54,50)" fg:x="2976" fg:w="18"/><text x="3.2433%" y="735.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (18 samples, 0.02%)</title><rect x="2.9933%" y="709" width="0.0181%" height="15" fill="rgb(233,84,52)" fg:x="2976" fg:w="18"/><text x="3.2433%" y="719.50"></text></g><g><title>crossbeam_epoch::default::pin (12 samples, 0.01%)</title><rect x="2.9993%" y="693" width="0.0121%" height="15" fill="rgb(207,117,47)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="703.50"></text></g><g><title>crossbeam_epoch::default::with_handle (12 samples, 0.01%)</title><rect x="2.9993%" y="677" width="0.0121%" height="15" fill="rgb(249,43,39)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="2.9993%" y="661" width="0.0121%" height="15" fill="rgb(209,38,44)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="671.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (12 samples, 0.01%)</title><rect x="2.9993%" y="645" width="0.0121%" height="15" fill="rgb(236,212,23)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="655.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (12 samples, 0.01%)</title><rect x="2.9993%" y="629" width="0.0121%" height="15" fill="rgb(242,79,21)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="639.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (12 samples, 0.01%)</title><rect x="2.9993%" y="613" width="0.0121%" height="15" fill="rgb(211,96,35)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (12 samples, 0.01%)</title><rect x="2.9993%" y="597" width="0.0121%" height="15" fill="rgb(253,215,40)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="607.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (12 samples, 0.01%)</title><rect x="2.9993%" y="581" width="0.0121%" height="15" fill="rgb(211,81,21)" fg:x="2982" fg:w="12"/><text x="3.2493%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.13%)</title><rect x="3.0174%" y="805" width="0.1328%" height="15" fill="rgb(208,190,38)" fg:x="3000" fg:w="132"/><text x="3.2674%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="3.1794%" y="805" width="0.0161%" height="15" fill="rgb(235,213,38)" fg:x="3161" fg:w="16"/><text x="3.4294%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (25 samples, 0.03%)</title><rect x="3.2015%" y="805" width="0.0251%" height="15" fill="rgb(237,122,38)" fg:x="3183" fg:w="25"/><text x="3.4515%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (36 samples, 0.04%)</title><rect x="3.2558%" y="805" width="0.0362%" height="15" fill="rgb(244,218,35)" fg:x="3237" fg:w="36"/><text x="3.5058%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="3.2920%" y="805" width="0.0262%" height="15" fill="rgb(240,68,47)" fg:x="3273" fg:w="26"/><text x="3.5420%" y="815.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="3.3212%" y="805" width="0.0111%" height="15" fill="rgb(210,16,53)" fg:x="3302" fg:w="11"/><text x="3.5712%" y="815.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::from_ok (24 samples, 0.02%)</title><rect x="3.3353%" y="805" width="0.0241%" height="15" fill="rgb(235,124,12)" fg:x="3316" fg:w="24"/><text x="3.5853%" y="815.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::into_result (31 samples, 0.03%)</title><rect x="3.3594%" y="805" width="0.0312%" height="15" fill="rgb(224,169,11)" fg:x="3340" fg:w="31"/><text x="3.6094%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="3.3906%" y="805" width="0.0342%" height="15" fill="rgb(250,166,2)" fg:x="3371" fg:w="34"/><text x="3.6406%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (49 samples, 0.05%)</title><rect x="3.4248%" y="805" width="0.0493%" height="15" fill="rgb(242,216,29)" fg:x="3405" fg:w="49"/><text x="3.6748%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="3.4952%" y="805" width="0.0342%" height="15" fill="rgb(230,116,27)" fg:x="3475" fg:w="34"/><text x="3.7452%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (68 samples, 0.07%)</title><rect x="3.5294%" y="805" width="0.0684%" height="15" fill="rgb(228,99,48)" fg:x="3509" fg:w="68"/><text x="3.7794%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="3.6028%" y="805" width="0.0121%" height="15" fill="rgb(253,11,6)" fg:x="3582" fg:w="12"/><text x="3.8528%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::default::Default&gt;::default (23 samples, 0.02%)</title><rect x="3.6149%" y="805" width="0.0231%" height="15" fill="rgb(247,143,39)" fg:x="3594" fg:w="23"/><text x="3.8649%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::from_error (50 samples, 0.05%)</title><rect x="3.6380%" y="805" width="0.0503%" height="15" fill="rgb(236,97,10)" fg:x="3617" fg:w="50"/><text x="3.8880%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (242 samples, 0.24%)</title><rect x="3.6883%" y="805" width="0.2434%" height="15" fill="rgb(233,208,19)" fg:x="3667" fg:w="242"/><text x="3.9383%" y="815.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (74 samples, 0.07%)</title><rect x="3.9317%" y="805" width="0.0744%" height="15" fill="rgb(216,164,2)" fg:x="3909" fg:w="74"/><text x="4.1817%" y="815.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (31 samples, 0.03%)</title><rect x="4.0062%" y="805" width="0.0312%" height="15" fill="rgb(220,129,5)" fg:x="3983" fg:w="31"/><text x="4.2562%" y="815.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (47 samples, 0.05%)</title><rect x="4.0373%" y="805" width="0.0473%" height="15" fill="rgb(242,17,10)" fg:x="4014" fg:w="47"/><text x="4.2873%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (162 samples, 0.16%)</title><rect x="4.0846%" y="805" width="0.1629%" height="15" fill="rgb(242,107,0)" fg:x="4061" fg:w="162"/><text x="4.3346%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (10 samples, 0.01%)</title><rect x="4.2516%" y="805" width="0.0101%" height="15" fill="rgb(251,28,31)" fg:x="4227" fg:w="10"/><text x="4.5016%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (21 samples, 0.02%)</title><rect x="4.2616%" y="805" width="0.0211%" height="15" fill="rgb(233,223,10)" fg:x="4237" fg:w="21"/><text x="4.5116%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (500 samples, 0.50%)</title><rect x="4.2868%" y="805" width="0.5029%" height="15" fill="rgb(215,21,27)" fg:x="4262" fg:w="500"/><text x="4.5368%" y="815.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (196 samples, 0.20%)</title><rect x="4.5925%" y="789" width="0.1971%" height="15" fill="rgb(232,23,21)" fg:x="4566" fg:w="196"/><text x="4.8425%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (42 samples, 0.04%)</title><rect x="4.7897%" y="805" width="0.0422%" height="15" fill="rgb(244,5,23)" fg:x="4762" fg:w="42"/><text x="5.0397%" y="815.50"></text></g><g><title>&lt;crossbeam_utils::cache_padded::CachePadded&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="4.8551%" y="805" width="0.0141%" height="15" fill="rgb(226,81,46)" fg:x="4827" fg:w="14"/><text x="5.1051%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="4.9104%" y="805" width="0.0161%" height="15" fill="rgb(247,70,30)" fg:x="4882" fg:w="16"/><text x="5.1604%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="4.9365%" y="805" width="0.0332%" height="15" fill="rgb(212,68,19)" fg:x="4908" fg:w="33"/><text x="5.1865%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="4.9697%" y="805" width="0.0101%" height="15" fill="rgb(240,187,13)" fg:x="4941" fg:w="10"/><text x="5.2197%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="4.9838%" y="805" width="0.0131%" height="15" fill="rgb(223,113,26)" fg:x="4955" fg:w="13"/><text x="5.2338%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="4.9979%" y="805" width="0.0352%" height="15" fill="rgb(206,192,2)" fg:x="4969" fg:w="35"/><text x="5.2479%" y="815.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (13 samples, 0.01%)</title><rect x="5.0462%" y="805" width="0.0131%" height="15" fill="rgb(241,108,4)" fg:x="5017" fg:w="13"/><text x="5.2962%" y="815.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (15 samples, 0.02%)</title><rect x="5.0713%" y="805" width="0.0151%" height="15" fill="rgb(247,173,49)" fg:x="5042" fg:w="15"/><text x="5.3213%" y="815.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as move_binary_format::access::ModuleAccess&gt;::as_module (22 samples, 0.02%)</title><rect x="5.0965%" y="805" width="0.0221%" height="15" fill="rgb(224,114,35)" fg:x="5067" fg:w="22"/><text x="5.3465%" y="815.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionDefinitionIndex as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="5.1206%" y="805" width="0.0111%" height="15" fill="rgb(245,159,27)" fg:x="5091" fg:w="11"/><text x="5.3706%" y="815.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="5.1347%" y="805" width="0.0101%" height="15" fill="rgb(245,172,44)" fg:x="5105" fg:w="10"/><text x="5.3847%" y="815.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="5.1447%" y="805" width="0.0211%" height="15" fill="rgb(236,23,11)" fg:x="5115" fg:w="21"/><text x="5.3947%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (11 samples, 0.01%)</title><rect x="5.2413%" y="789" width="0.0111%" height="15" fill="rgb(205,117,38)" fg:x="5211" fg:w="11"/><text x="5.4913%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (11 samples, 0.01%)</title><rect x="5.2413%" y="773" width="0.0111%" height="15" fill="rgb(237,72,25)" fg:x="5211" fg:w="11"/><text x="5.4913%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (11 samples, 0.01%)</title><rect x="5.2413%" y="757" width="0.0111%" height="15" fill="rgb(244,70,9)" fg:x="5211" fg:w="11"/><text x="5.4913%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (24 samples, 0.02%)</title><rect x="5.2524%" y="789" width="0.0241%" height="15" fill="rgb(217,125,39)" fg:x="5222" fg:w="24"/><text x="5.5024%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (24 samples, 0.02%)</title><rect x="5.2524%" y="773" width="0.0241%" height="15" fill="rgb(235,36,10)" fg:x="5222" fg:w="24"/><text x="5.5024%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (24 samples, 0.02%)</title><rect x="5.2524%" y="757" width="0.0241%" height="15" fill="rgb(251,123,47)" fg:x="5222" fg:w="24"/><text x="5.5024%" y="767.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (44 samples, 0.04%)</title><rect x="5.2343%" y="805" width="0.0443%" height="15" fill="rgb(221,13,13)" fg:x="5204" fg:w="44"/><text x="5.4843%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="5.3047%" y="805" width="0.0171%" height="15" fill="rgb(238,131,9)" fg:x="5274" fg:w="17"/><text x="5.5547%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.03%)</title><rect x="5.3218%" y="805" width="0.0302%" height="15" fill="rgb(211,50,8)" fg:x="5291" fg:w="30"/><text x="5.5718%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (58 samples, 0.06%)</title><rect x="5.3771%" y="805" width="0.0583%" height="15" fill="rgb(245,182,24)" fg:x="5346" fg:w="58"/><text x="5.6271%" y="815.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (10 samples, 0.01%)</title><rect x="5.4525%" y="805" width="0.0101%" height="15" fill="rgb(242,14,37)" fg:x="5421" fg:w="10"/><text x="5.7025%" y="815.50"></text></g><g><title>&lt;u16 as core::iter::range::Step&gt;::forward_unchecked (16 samples, 0.02%)</title><rect x="5.4666%" y="805" width="0.0161%" height="15" fill="rgb(246,228,12)" fg:x="5435" fg:w="16"/><text x="5.7166%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (10 samples, 0.01%)</title><rect x="5.5038%" y="805" width="0.0101%" height="15" fill="rgb(213,55,15)" fg:x="5472" fg:w="10"/><text x="5.7538%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (72 samples, 0.07%)</title><rect x="5.5139%" y="805" width="0.0724%" height="15" fill="rgb(209,9,3)" fg:x="5482" fg:w="72"/><text x="5.7639%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (51 samples, 0.05%)</title><rect x="5.5863%" y="805" width="0.0513%" height="15" fill="rgb(230,59,30)" fg:x="5554" fg:w="51"/><text x="5.8363%" y="815.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (25 samples, 0.03%)</title><rect x="5.6688%" y="789" width="0.0251%" height="15" fill="rgb(209,121,21)" fg:x="5636" fg:w="25"/><text x="5.9188%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="5.7100%" y="789" width="0.0101%" height="15" fill="rgb(220,109,13)" fg:x="5677" fg:w="10"/><text x="5.9600%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="5.7201%" y="789" width="0.0131%" height="15" fill="rgb(232,18,1)" fg:x="5687" fg:w="13"/><text x="5.9701%" y="799.50"></text></g><g><title>__rust_probestack (17 samples, 0.02%)</title><rect x="5.7452%" y="789" width="0.0171%" height="15" fill="rgb(215,41,42)" fg:x="5712" fg:w="17"/><text x="5.9952%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (58 samples, 0.06%)</title><rect x="5.7633%" y="789" width="0.0583%" height="15" fill="rgb(224,123,36)" fg:x="5730" fg:w="58"/><text x="6.0133%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (15 samples, 0.02%)</title><rect x="5.8287%" y="789" width="0.0151%" height="15" fill="rgb(240,125,3)" fg:x="5795" fg:w="15"/><text x="6.0787%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;Node,Type&gt;::idx (10 samples, 0.01%)</title><rect x="5.8709%" y="789" width="0.0101%" height="15" fill="rgb(205,98,50)" fg:x="5837" fg:w="10"/><text x="6.1209%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (14 samples, 0.01%)</title><rect x="5.8890%" y="789" width="0.0141%" height="15" fill="rgb(205,185,37)" fg:x="5855" fg:w="14"/><text x="6.1390%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (18 samples, 0.02%)</title><rect x="5.9071%" y="789" width="0.0181%" height="15" fill="rgb(238,207,15)" fg:x="5873" fg:w="18"/><text x="6.1571%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (25 samples, 0.03%)</title><rect x="5.9373%" y="789" width="0.0251%" height="15" fill="rgb(213,199,42)" fg:x="5903" fg:w="25"/><text x="6.1873%" y="799.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (76 samples, 0.08%)</title><rect x="5.9665%" y="789" width="0.0764%" height="15" fill="rgb(235,201,11)" fg:x="5932" fg:w="76"/><text x="6.2165%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for ()&gt;::eq (16 samples, 0.02%)</title><rect x="6.0510%" y="789" width="0.0161%" height="15" fill="rgb(207,46,11)" fg:x="6016" fg:w="16"/><text x="6.3010%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (29 samples, 0.03%)</title><rect x="6.0842%" y="789" width="0.0292%" height="15" fill="rgb(241,35,35)" fg:x="6049" fg:w="29"/><text x="6.3342%" y="799.50"></text></g><g><title>core::mem::take (15 samples, 0.02%)</title><rect x="6.1294%" y="789" width="0.0151%" height="15" fill="rgb(243,32,47)" fg:x="6094" fg:w="15"/><text x="6.3794%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (12 samples, 0.01%)</title><rect x="6.1707%" y="789" width="0.0121%" height="15" fill="rgb(247,202,23)" fg:x="6135" fg:w="12"/><text x="6.4207%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (146 samples, 0.15%)</title><rect x="6.1868%" y="789" width="0.1468%" height="15" fill="rgb(219,102,11)" fg:x="6151" fg:w="146"/><text x="6.4368%" y="799.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (90 samples, 0.09%)</title><rect x="6.3467%" y="789" width="0.0905%" height="15" fill="rgb(243,110,44)" fg:x="6310" fg:w="90"/><text x="6.5967%" y="799.50"></text></g><g><title>[language_e2e_testsuite-358701cfbad6d7df] (860 samples, 0.86%)</title><rect x="5.6436%" y="805" width="0.8650%" height="15" fill="rgb(222,74,54)" fg:x="5611" fg:w="860"/><text x="5.8936%" y="815.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="6.5177%" y="789" width="0.0121%" height="15" fill="rgb(216,99,12)" fg:x="6480" fg:w="12"/><text x="6.7677%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="6.5599%" y="789" width="0.0241%" height="15" fill="rgb(226,22,26)" fg:x="6522" fg:w="24"/><text x="6.8099%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="6.5961%" y="789" width="0.0121%" height="15" fill="rgb(217,163,10)" fg:x="6558" fg:w="12"/><text x="6.8461%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="6.6183%" y="789" width="0.0121%" height="15" fill="rgb(213,25,53)" fg:x="6580" fg:w="12"/><text x="6.8683%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="6.6313%" y="789" width="0.0101%" height="15" fill="rgb(252,105,26)" fg:x="6593" fg:w="10"/><text x="6.8813%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="6.6595%" y="789" width="0.0241%" height="15" fill="rgb(220,39,43)" fg:x="6621" fg:w="24"/><text x="6.9095%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="6.7048%" y="789" width="0.0171%" height="15" fill="rgb(229,68,48)" fg:x="6666" fg:w="17"/><text x="6.9548%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.01%)</title><rect x="6.7229%" y="789" width="0.0101%" height="15" fill="rgb(252,8,32)" fg:x="6684" fg:w="10"/><text x="6.9729%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (13 samples, 0.01%)</title><rect x="6.7329%" y="789" width="0.0131%" height="15" fill="rgb(223,20,43)" fg:x="6694" fg:w="13"/><text x="6.9829%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="6.7490%" y="789" width="0.0211%" height="15" fill="rgb(229,81,49)" fg:x="6710" fg:w="21"/><text x="6.9990%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (31 samples, 0.03%)</title><rect x="6.7792%" y="789" width="0.0312%" height="15" fill="rgb(236,28,36)" fg:x="6740" fg:w="31"/><text x="7.0292%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="6.8124%" y="789" width="0.0111%" height="15" fill="rgb(249,185,26)" fg:x="6773" fg:w="11"/><text x="7.0624%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="6.8315%" y="789" width="0.0111%" height="15" fill="rgb(249,174,33)" fg:x="6792" fg:w="11"/><text x="7.0815%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.03%)</title><rect x="6.8788%" y="789" width="0.0322%" height="15" fill="rgb(233,201,37)" fg:x="6839" fg:w="32"/><text x="7.1288%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="6.9109%" y="789" width="0.0493%" height="15" fill="rgb(221,78,26)" fg:x="6871" fg:w="49"/><text x="7.1609%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.06%)</title><rect x="6.9693%" y="789" width="0.0553%" height="15" fill="rgb(250,127,30)" fg:x="6929" fg:w="55"/><text x="7.2193%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="7.0377%" y="789" width="0.0161%" height="15" fill="rgb(230,49,44)" fg:x="6997" fg:w="16"/><text x="7.2877%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="7.0618%" y="789" width="0.0141%" height="15" fill="rgb(229,67,23)" fg:x="7021" fg:w="14"/><text x="7.3118%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (10 samples, 0.01%)</title><rect x="7.0819%" y="789" width="0.0101%" height="15" fill="rgb(249,83,47)" fg:x="7041" fg:w="10"/><text x="7.3319%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (109 samples, 0.11%)</title><rect x="7.1031%" y="789" width="0.1096%" height="15" fill="rgb(215,43,3)" fg:x="7062" fg:w="109"/><text x="7.3531%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (90 samples, 0.09%)</title><rect x="7.2127%" y="789" width="0.0905%" height="15" fill="rgb(238,154,13)" fg:x="7171" fg:w="90"/><text x="7.4627%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (18 samples, 0.02%)</title><rect x="7.3082%" y="789" width="0.0181%" height="15" fill="rgb(219,56,2)" fg:x="7266" fg:w="18"/><text x="7.5582%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="7.3294%" y="789" width="0.0111%" height="15" fill="rgb(233,0,4)" fg:x="7287" fg:w="11"/><text x="7.5794%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (41 samples, 0.04%)</title><rect x="7.3424%" y="789" width="0.0412%" height="15" fill="rgb(235,30,7)" fg:x="7300" fg:w="41"/><text x="7.5924%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (64 samples, 0.06%)</title><rect x="7.3837%" y="789" width="0.0644%" height="15" fill="rgb(250,79,13)" fg:x="7341" fg:w="64"/><text x="7.6337%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::from_error (10 samples, 0.01%)</title><rect x="7.4702%" y="789" width="0.0101%" height="15" fill="rgb(211,146,34)" fg:x="7427" fg:w="10"/><text x="7.7202%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (34 samples, 0.03%)</title><rect x="7.4802%" y="789" width="0.0342%" height="15" fill="rgb(228,22,38)" fg:x="7437" fg:w="34"/><text x="7.7302%" y="799.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (18 samples, 0.02%)</title><rect x="7.5195%" y="789" width="0.0181%" height="15" fill="rgb(235,168,5)" fg:x="7476" fg:w="18"/><text x="7.7695%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (22 samples, 0.02%)</title><rect x="7.5396%" y="789" width="0.0221%" height="15" fill="rgb(221,155,16)" fg:x="7496" fg:w="22"/><text x="7.7896%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (11 samples, 0.01%)</title><rect x="7.5687%" y="789" width="0.0111%" height="15" fill="rgb(215,215,53)" fg:x="7525" fg:w="11"/><text x="7.8187%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.05%)</title><rect x="7.5828%" y="789" width="0.0453%" height="15" fill="rgb(223,4,10)" fg:x="7539" fg:w="45"/><text x="7.8328%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="7.6512%" y="789" width="0.0443%" height="15" fill="rgb(234,103,6)" fg:x="7607" fg:w="44"/><text x="7.9012%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="7.6955%" y="789" width="0.0131%" height="15" fill="rgb(227,97,0)" fg:x="7651" fg:w="13"/><text x="7.9455%" y="799.50"></text></g><g><title>&lt;move_binary_format::file_format::CompiledModule as move_binary_format::access::ModuleAccess&gt;::as_module (27 samples, 0.03%)</title><rect x="7.7327%" y="789" width="0.0272%" height="15" fill="rgb(234,150,53)" fg:x="7688" fg:w="27"/><text x="7.9827%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="7.8132%" y="789" width="0.0181%" height="15" fill="rgb(228,201,54)" fg:x="7768" fg:w="18"/><text x="8.0632%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.01%)</title><rect x="7.8635%" y="789" width="0.0111%" height="15" fill="rgb(222,22,37)" fg:x="7818" fg:w="11"/><text x="8.1135%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (208 samples, 0.21%)</title><rect x="7.8745%" y="789" width="0.2092%" height="15" fill="rgb(237,53,32)" fg:x="7829" fg:w="208"/><text x="8.1245%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (32 samples, 0.03%)</title><rect x="8.0837%" y="789" width="0.0322%" height="15" fill="rgb(233,25,53)" fg:x="8037" fg:w="32"/><text x="8.3337%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (44 samples, 0.04%)</title><rect x="8.1159%" y="789" width="0.0443%" height="15" fill="rgb(210,40,34)" fg:x="8069" fg:w="44"/><text x="8.3659%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="8.1753%" y="789" width="0.0201%" height="15" fill="rgb(241,220,44)" fg:x="8128" fg:w="20"/><text x="8.4253%" y="799.50"></text></g><g><title>__rdl_alloc (14 samples, 0.01%)</title><rect x="8.1954%" y="789" width="0.0141%" height="15" fill="rgb(235,28,35)" fg:x="8148" fg:w="14"/><text x="8.4454%" y="799.50"></text></g><g><title>__rust_probestack (11 samples, 0.01%)</title><rect x="8.2095%" y="789" width="0.0111%" height="15" fill="rgb(210,56,17)" fg:x="8162" fg:w="11"/><text x="8.4595%" y="799.50"></text></g><g><title>_int_free (10 samples, 0.01%)</title><rect x="8.2205%" y="789" width="0.0101%" height="15" fill="rgb(224,130,29)" fg:x="8173" fg:w="10"/><text x="8.4705%" y="799.50"></text></g><g><title>_int_realloc (11 samples, 0.01%)</title><rect x="8.2346%" y="789" width="0.0111%" height="15" fill="rgb(235,212,8)" fg:x="8187" fg:w="11"/><text x="8.4846%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.05%)</title><rect x="8.2457%" y="789" width="0.0483%" height="15" fill="rgb(223,33,50)" fg:x="8198" fg:w="48"/><text x="8.4957%" y="799.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.03%)</title><rect x="8.2980%" y="789" width="0.0251%" height="15" fill="rgb(219,149,13)" fg:x="8250" fg:w="25"/><text x="8.5480%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="8.3342%" y="789" width="0.0131%" height="15" fill="rgb(250,156,29)" fg:x="8286" fg:w="13"/><text x="8.5842%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (36 samples, 0.04%)</title><rect x="8.3573%" y="789" width="0.0362%" height="15" fill="rgb(216,193,19)" fg:x="8309" fg:w="36"/><text x="8.6073%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (56 samples, 0.06%)</title><rect x="8.3935%" y="789" width="0.0563%" height="15" fill="rgb(216,135,14)" fg:x="8345" fg:w="56"/><text x="8.6435%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (20 samples, 0.02%)</title><rect x="8.4498%" y="789" width="0.0201%" height="15" fill="rgb(241,47,5)" fg:x="8401" fg:w="20"/><text x="8.6998%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="8.4700%" y="789" width="0.0171%" height="15" fill="rgb(233,42,35)" fg:x="8421" fg:w="17"/><text x="8.7200%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="8.4871%" y="789" width="0.0101%" height="15" fill="rgb(231,13,6)" fg:x="8438" fg:w="10"/><text x="8.7371%" y="799.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="8.4991%" y="789" width="0.0221%" height="15" fill="rgb(207,181,40)" fg:x="8450" fg:w="22"/><text x="8.7491%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (11 samples, 0.01%)</title><rect x="8.5233%" y="789" width="0.0111%" height="15" fill="rgb(254,173,49)" fg:x="8474" fg:w="11"/><text x="8.7733%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (19 samples, 0.02%)</title><rect x="8.5343%" y="789" width="0.0191%" height="15" fill="rgb(221,1,38)" fg:x="8485" fg:w="19"/><text x="8.7843%" y="799.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (26 samples, 0.03%)</title><rect x="8.6007%" y="789" width="0.0262%" height="15" fill="rgb(206,124,46)" fg:x="8551" fg:w="26"/><text x="8.8507%" y="799.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.02%)</title><rect x="8.6309%" y="789" width="0.0161%" height="15" fill="rgb(249,21,11)" fg:x="8581" fg:w="16"/><text x="8.8809%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (22 samples, 0.02%)</title><rect x="8.6540%" y="789" width="0.0221%" height="15" fill="rgb(222,201,40)" fg:x="8604" fg:w="22"/><text x="8.9040%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (19 samples, 0.02%)</title><rect x="8.6932%" y="789" width="0.0191%" height="15" fill="rgb(235,61,29)" fg:x="8643" fg:w="19"/><text x="8.9432%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (23 samples, 0.02%)</title><rect x="8.7124%" y="789" width="0.0231%" height="15" fill="rgb(219,207,3)" fg:x="8662" fg:w="23"/><text x="8.9624%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (15 samples, 0.02%)</title><rect x="8.7355%" y="789" width="0.0151%" height="15" fill="rgb(222,56,46)" fg:x="8685" fg:w="15"/><text x="8.9855%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (25 samples, 0.03%)</title><rect x="8.7526%" y="789" width="0.0251%" height="15" fill="rgb(239,76,54)" fg:x="8702" fg:w="25"/><text x="9.0026%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (23 samples, 0.02%)</title><rect x="8.8009%" y="789" width="0.0231%" height="15" fill="rgb(231,124,27)" fg:x="8750" fg:w="23"/><text x="9.0509%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="8.8240%" y="789" width="0.0101%" height="15" fill="rgb(249,195,6)" fg:x="8773" fg:w="10"/><text x="9.0740%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (13 samples, 0.01%)</title><rect x="8.8441%" y="789" width="0.0131%" height="15" fill="rgb(237,174,47)" fg:x="8793" fg:w="13"/><text x="9.0941%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (13 samples, 0.01%)</title><rect x="8.8632%" y="789" width="0.0131%" height="15" fill="rgb(206,201,31)" fg:x="8812" fg:w="13"/><text x="9.1132%" y="799.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="8.8894%" y="789" width="0.0131%" height="15" fill="rgb(231,57,52)" fg:x="8838" fg:w="13"/><text x="9.1394%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (56 samples, 0.06%)</title><rect x="8.9025%" y="789" width="0.0563%" height="15" fill="rgb(248,177,22)" fg:x="8851" fg:w="56"/><text x="9.1525%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (25 samples, 0.03%)</title><rect x="8.9588%" y="789" width="0.0251%" height="15" fill="rgb(215,211,37)" fg:x="8907" fg:w="25"/><text x="9.2088%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (31 samples, 0.03%)</title><rect x="8.9900%" y="789" width="0.0312%" height="15" fill="rgb(241,128,51)" fg:x="8938" fg:w="31"/><text x="9.2400%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (40 samples, 0.04%)</title><rect x="9.0211%" y="789" width="0.0402%" height="15" fill="rgb(227,165,31)" fg:x="8969" fg:w="40"/><text x="9.2711%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;::forget_type (14 samples, 0.01%)</title><rect x="9.0624%" y="789" width="0.0141%" height="15" fill="rgb(228,167,24)" fg:x="9010" fg:w="14"/><text x="9.3124%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (15 samples, 0.02%)</title><rect x="9.0765%" y="789" width="0.0151%" height="15" fill="rgb(228,143,12)" fg:x="9024" fg:w="15"/><text x="9.3265%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (59 samples, 0.06%)</title><rect x="9.0926%" y="789" width="0.0593%" height="15" fill="rgb(249,149,8)" fg:x="9040" fg:w="59"/><text x="9.3426%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (12 samples, 0.01%)</title><rect x="9.1519%" y="789" width="0.0121%" height="15" fill="rgb(243,35,44)" fg:x="9099" fg:w="12"/><text x="9.4019%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (30 samples, 0.03%)</title><rect x="9.1640%" y="789" width="0.0302%" height="15" fill="rgb(246,89,9)" fg:x="9111" fg:w="30"/><text x="9.4140%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (15 samples, 0.02%)</title><rect x="9.1941%" y="789" width="0.0151%" height="15" fill="rgb(233,213,13)" fg:x="9141" fg:w="15"/><text x="9.4441%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::len_mut (13 samples, 0.01%)</title><rect x="9.2092%" y="789" width="0.0131%" height="15" fill="rgb(233,141,41)" fg:x="9156" fg:w="13"/><text x="9.4592%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (20 samples, 0.02%)</title><rect x="9.2223%" y="789" width="0.0201%" height="15" fill="rgb(239,167,4)" fg:x="9169" fg:w="20"/><text x="9.4723%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (22 samples, 0.02%)</title><rect x="9.2475%" y="789" width="0.0221%" height="15" fill="rgb(209,217,16)" fg:x="9194" fg:w="22"/><text x="9.4975%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (53 samples, 0.05%)</title><rect x="9.2877%" y="789" width="0.0533%" height="15" fill="rgb(219,88,35)" fg:x="9234" fg:w="53"/><text x="9.5377%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (30 samples, 0.03%)</title><rect x="9.3410%" y="789" width="0.0302%" height="15" fill="rgb(220,193,23)" fg:x="9287" fg:w="30"/><text x="9.5910%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="9.3712%" y="789" width="0.0201%" height="15" fill="rgb(230,90,52)" fg:x="9317" fg:w="20"/><text x="9.6212%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.03%)</title><rect x="9.4074%" y="789" width="0.0302%" height="15" fill="rgb(252,106,19)" fg:x="9353" fg:w="30"/><text x="9.6574%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (15 samples, 0.02%)</title><rect x="9.4375%" y="789" width="0.0151%" height="15" fill="rgb(206,74,20)" fg:x="9383" fg:w="15"/><text x="9.6875%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (25 samples, 0.03%)</title><rect x="9.4526%" y="789" width="0.0251%" height="15" fill="rgb(230,138,44)" fg:x="9398" fg:w="25"/><text x="9.7026%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="9.4778%" y="789" width="0.0131%" height="15" fill="rgb(235,182,43)" fg:x="9423" fg:w="13"/><text x="9.7278%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (31 samples, 0.03%)</title><rect x="9.4949%" y="789" width="0.0312%" height="15" fill="rgb(242,16,51)" fg:x="9440" fg:w="31"/><text x="9.7449%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="9.5261%" y="789" width="0.0131%" height="15" fill="rgb(248,9,4)" fg:x="9471" fg:w="13"/><text x="9.7761%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (30 samples, 0.03%)</title><rect x="9.5391%" y="789" width="0.0302%" height="15" fill="rgb(210,31,22)" fg:x="9484" fg:w="30"/><text x="9.7891%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (13 samples, 0.01%)</title><rect x="9.5693%" y="789" width="0.0131%" height="15" fill="rgb(239,54,39)" fg:x="9514" fg:w="13"/><text x="9.8193%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.04%)</title><rect x="9.5975%" y="789" width="0.0352%" height="15" fill="rgb(230,99,41)" fg:x="9542" fg:w="35"/><text x="9.8475%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (32 samples, 0.03%)</title><rect x="9.6528%" y="789" width="0.0322%" height="15" fill="rgb(253,106,12)" fg:x="9597" fg:w="32"/><text x="9.9028%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (55 samples, 0.06%)</title><rect x="9.6850%" y="789" width="0.0553%" height="15" fill="rgb(213,46,41)" fg:x="9629" fg:w="55"/><text x="9.9350%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.01%)</title><rect x="9.7544%" y="789" width="0.0131%" height="15" fill="rgb(215,133,35)" fg:x="9698" fg:w="13"/><text x="10.0044%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="9.7675%" y="789" width="0.0121%" height="15" fill="rgb(213,28,5)" fg:x="9711" fg:w="12"/><text x="10.0175%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="9.7986%" y="789" width="0.0141%" height="15" fill="rgb(215,77,49)" fg:x="9742" fg:w="14"/><text x="10.0486%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::align (18 samples, 0.02%)</title><rect x="9.9505%" y="789" width="0.0181%" height="15" fill="rgb(248,100,22)" fg:x="9893" fg:w="18"/><text x="10.2005%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="9.9686%" y="789" width="0.0161%" height="15" fill="rgb(208,67,9)" fg:x="9911" fg:w="16"/><text x="10.2186%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (28 samples, 0.03%)</title><rect x="9.9918%" y="789" width="0.0282%" height="15" fill="rgb(219,133,21)" fg:x="9934" fg:w="28"/><text x="10.2418%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::new (46 samples, 0.05%)</title><rect x="10.0199%" y="789" width="0.0463%" height="15" fill="rgb(246,46,29)" fg:x="9962" fg:w="46"/><text x="10.2699%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::repeat (17 samples, 0.02%)</title><rect x="10.0732%" y="789" width="0.0171%" height="15" fill="rgb(246,185,52)" fg:x="10015" fg:w="17"/><text x="10.3232%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::size (38 samples, 0.04%)</title><rect x="10.0903%" y="789" width="0.0382%" height="15" fill="rgb(252,136,11)" fg:x="10032" fg:w="38"/><text x="10.3403%" y="799.50"></text></g><g><title>core::alloc::layout::size_align (26 samples, 0.03%)</title><rect x="10.1285%" y="789" width="0.0262%" height="15" fill="rgb(219,138,53)" fg:x="10070" fg:w="26"/><text x="10.3785%" y="799.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (10 samples, 0.01%)</title><rect x="10.1547%" y="789" width="0.0101%" height="15" fill="rgb(211,51,23)" fg:x="10096" fg:w="10"/><text x="10.4047%" y="799.50"></text></g><g><title>core::cmp::Ord::max (11 samples, 0.01%)</title><rect x="10.1819%" y="789" width="0.0111%" height="15" fill="rgb(247,221,28)" fg:x="10123" fg:w="11"/><text x="10.4319%" y="799.50"></text></g><g><title>core::cmp::Ord::min (29 samples, 0.03%)</title><rect x="10.1929%" y="789" width="0.0292%" height="15" fill="rgb(251,222,45)" fg:x="10134" fg:w="29"/><text x="10.4429%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (29 samples, 0.03%)</title><rect x="10.2281%" y="789" width="0.0292%" height="15" fill="rgb(217,162,53)" fg:x="10169" fg:w="29"/><text x="10.4781%" y="799.50"></text></g><g><title>core::cmp::min_by (32 samples, 0.03%)</title><rect x="10.2814%" y="789" width="0.0322%" height="15" fill="rgb(229,93,14)" fg:x="10222" fg:w="32"/><text x="10.5314%" y="799.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u16&gt; for usize&gt;::from (17 samples, 0.02%)</title><rect x="10.3136%" y="789" width="0.0171%" height="15" fill="rgb(209,67,49)" fg:x="10254" fg:w="17"/><text x="10.5636%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::new (29 samples, 0.03%)</title><rect x="10.3357%" y="789" width="0.0292%" height="15" fill="rgb(213,87,29)" fg:x="10276" fg:w="29"/><text x="10.5857%" y="799.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (12 samples, 0.01%)</title><rect x="10.3649%" y="789" width="0.0121%" height="15" fill="rgb(205,151,52)" fg:x="10305" fg:w="12"/><text x="10.6149%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (45 samples, 0.05%)</title><rect x="10.3780%" y="789" width="0.0453%" height="15" fill="rgb(253,215,39)" fg:x="10318" fg:w="45"/><text x="10.6280%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (18 samples, 0.02%)</title><rect x="10.4232%" y="789" width="0.0181%" height="15" fill="rgb(221,220,41)" fg:x="10363" fg:w="18"/><text x="10.6732%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (14 samples, 0.01%)</title><rect x="10.4494%" y="789" width="0.0141%" height="15" fill="rgb(218,133,21)" fg:x="10389" fg:w="14"/><text x="10.6994%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.02%)</title><rect x="10.4635%" y="789" width="0.0171%" height="15" fill="rgb(221,193,43)" fg:x="10403" fg:w="17"/><text x="10.7135%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (13 samples, 0.01%)</title><rect x="10.4806%" y="789" width="0.0131%" height="15" fill="rgb(240,128,52)" fg:x="10420" fg:w="13"/><text x="10.7306%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u16 (14 samples, 0.01%)</title><rect x="10.4947%" y="789" width="0.0141%" height="15" fill="rgb(253,114,12)" fg:x="10434" fg:w="14"/><text x="10.7447%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (20 samples, 0.02%)</title><rect x="10.5258%" y="789" width="0.0201%" height="15" fill="rgb(215,223,47)" fg:x="10465" fg:w="20"/><text x="10.7758%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (30 samples, 0.03%)</title><rect x="10.5470%" y="789" width="0.0302%" height="15" fill="rgb(248,225,23)" fg:x="10486" fg:w="30"/><text x="10.7970%" y="799.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (36 samples, 0.04%)</title><rect x="10.5781%" y="789" width="0.0362%" height="15" fill="rgb(250,108,0)" fg:x="10517" fg:w="36"/><text x="10.8281%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (83 samples, 0.08%)</title><rect x="10.6144%" y="789" width="0.0835%" height="15" fill="rgb(228,208,7)" fg:x="10553" fg:w="83"/><text x="10.8644%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (101 samples, 0.10%)</title><rect x="10.6988%" y="789" width="0.1016%" height="15" fill="rgb(244,45,10)" fg:x="10637" fg:w="101"/><text x="10.9488%" y="799.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (10 samples, 0.01%)</title><rect x="10.8014%" y="789" width="0.0101%" height="15" fill="rgb(207,125,25)" fg:x="10739" fg:w="10"/><text x="11.0514%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (18 samples, 0.02%)</title><rect x="10.8256%" y="789" width="0.0181%" height="15" fill="rgb(210,195,18)" fg:x="10763" fg:w="18"/><text x="11.0756%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (18 samples, 0.02%)</title><rect x="10.9020%" y="789" width="0.0181%" height="15" fill="rgb(249,80,12)" fg:x="10839" fg:w="18"/><text x="11.1520%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="10.9312%" y="789" width="0.0111%" height="15" fill="rgb(221,65,9)" fg:x="10868" fg:w="11"/><text x="11.1812%" y="799.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="10.9553%" y="789" width="0.0221%" height="15" fill="rgb(235,49,36)" fg:x="10892" fg:w="22"/><text x="11.2053%" y="799.50"></text></g><g><title>core::mem::take (16 samples, 0.02%)</title><rect x="10.9795%" y="789" width="0.0161%" height="15" fill="rgb(225,32,20)" fg:x="10916" fg:w="16"/><text x="11.2295%" y="799.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (20 samples, 0.02%)</title><rect x="11.0046%" y="789" width="0.0201%" height="15" fill="rgb(215,141,46)" fg:x="10941" fg:w="20"/><text x="11.2546%" y="799.50"></text></g><g><title>core::num::&lt;impl u16&gt;::to_ne_bytes (39 samples, 0.04%)</title><rect x="11.0318%" y="789" width="0.0392%" height="15" fill="rgb(250,160,47)" fg:x="10968" fg:w="39"/><text x="11.2818%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (66 samples, 0.07%)</title><rect x="11.0740%" y="789" width="0.0664%" height="15" fill="rgb(216,222,40)" fg:x="11010" fg:w="66"/><text x="11.3240%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (114 samples, 0.11%)</title><rect x="11.1474%" y="789" width="0.1147%" height="15" fill="rgb(234,217,39)" fg:x="11083" fg:w="114"/><text x="11.3974%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (20 samples, 0.02%)</title><rect x="11.2631%" y="789" width="0.0201%" height="15" fill="rgb(207,178,40)" fg:x="11198" fg:w="20"/><text x="11.5131%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (24 samples, 0.02%)</title><rect x="11.2832%" y="789" width="0.0241%" height="15" fill="rgb(221,136,13)" fg:x="11218" fg:w="24"/><text x="11.5332%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::count_ones (18 samples, 0.02%)</title><rect x="11.3074%" y="789" width="0.0181%" height="15" fill="rgb(249,199,10)" fg:x="11242" fg:w="18"/><text x="11.5574%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (19 samples, 0.02%)</title><rect x="11.3416%" y="789" width="0.0191%" height="15" fill="rgb(249,222,13)" fg:x="11276" fg:w="19"/><text x="11.5916%" y="799.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (40 samples, 0.04%)</title><rect x="11.3607%" y="789" width="0.0402%" height="15" fill="rgb(244,185,38)" fg:x="11295" fg:w="40"/><text x="11.6107%" y="799.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (14 samples, 0.01%)</title><rect x="11.4009%" y="789" width="0.0141%" height="15" fill="rgb(236,202,9)" fg:x="11335" fg:w="14"/><text x="11.6509%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.03%)</title><rect x="11.4220%" y="789" width="0.0251%" height="15" fill="rgb(250,229,37)" fg:x="11356" fg:w="25"/><text x="11.6720%" y="799.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (11 samples, 0.01%)</title><rect x="11.4472%" y="789" width="0.0111%" height="15" fill="rgb(206,174,23)" fg:x="11381" fg:w="11"/><text x="11.6972%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.03%)</title><rect x="11.4723%" y="789" width="0.0302%" height="15" fill="rgb(211,33,43)" fg:x="11406" fg:w="30"/><text x="11.7223%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (83 samples, 0.08%)</title><rect x="11.5025%" y="789" width="0.0835%" height="15" fill="rgb(245,58,50)" fg:x="11436" fg:w="83"/><text x="11.7525%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (10 samples, 0.01%)</title><rect x="11.5930%" y="789" width="0.0101%" height="15" fill="rgb(244,68,36)" fg:x="11526" fg:w="10"/><text x="11.8430%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (126 samples, 0.13%)</title><rect x="11.6111%" y="789" width="0.1267%" height="15" fill="rgb(232,229,15)" fg:x="11544" fg:w="126"/><text x="11.8611%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (15 samples, 0.02%)</title><rect x="11.7539%" y="789" width="0.0151%" height="15" fill="rgb(254,30,23)" fg:x="11686" fg:w="15"/><text x="12.0039%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (17 samples, 0.02%)</title><rect x="11.7690%" y="789" width="0.0171%" height="15" fill="rgb(235,160,14)" fg:x="11701" fg:w="17"/><text x="12.0190%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (11 samples, 0.01%)</title><rect x="11.7942%" y="789" width="0.0111%" height="15" fill="rgb(212,155,44)" fg:x="11726" fg:w="11"/><text x="12.0442%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (10 samples, 0.01%)</title><rect x="11.8384%" y="789" width="0.0101%" height="15" fill="rgb(226,2,50)" fg:x="11770" fg:w="10"/><text x="12.0884%" y="799.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.02%)</title><rect x="11.9209%" y="789" width="0.0181%" height="15" fill="rgb(234,177,6)" fg:x="11852" fg:w="18"/><text x="12.1709%" y="799.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (21 samples, 0.02%)</title><rect x="11.9390%" y="789" width="0.0211%" height="15" fill="rgb(217,24,9)" fg:x="11870" fg:w="21"/><text x="12.1890%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (101 samples, 0.10%)</title><rect x="11.9621%" y="789" width="0.1016%" height="15" fill="rgb(220,13,46)" fg:x="11893" fg:w="101"/><text x="12.2121%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (12 samples, 0.01%)</title><rect x="12.0637%" y="789" width="0.0121%" height="15" fill="rgb(239,221,27)" fg:x="11994" fg:w="12"/><text x="12.3137%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (18 samples, 0.02%)</title><rect x="12.0788%" y="789" width="0.0181%" height="15" fill="rgb(222,198,25)" fg:x="12009" fg:w="18"/><text x="12.3288%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (24 samples, 0.02%)</title><rect x="12.0969%" y="789" width="0.0241%" height="15" fill="rgb(211,99,13)" fg:x="12027" fg:w="24"/><text x="12.3469%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="12.1211%" y="789" width="0.0131%" height="15" fill="rgb(232,111,31)" fg:x="12051" fg:w="13"/><text x="12.3711%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (40 samples, 0.04%)</title><rect x="12.1341%" y="789" width="0.0402%" height="15" fill="rgb(245,82,37)" fg:x="12064" fg:w="40"/><text x="12.3841%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.01%)</title><rect x="12.1744%" y="789" width="0.0101%" height="15" fill="rgb(227,149,46)" fg:x="12104" fg:w="10"/><text x="12.4244%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::len (24 samples, 0.02%)</title><rect x="12.1935%" y="789" width="0.0241%" height="15" fill="rgb(218,36,50)" fg:x="12123" fg:w="24"/><text x="12.4435%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (111 samples, 0.11%)</title><rect x="12.2176%" y="789" width="0.1116%" height="15" fill="rgb(226,80,48)" fg:x="12147" fg:w="111"/><text x="12.4676%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (76 samples, 0.08%)</title><rect x="12.3293%" y="789" width="0.0764%" height="15" fill="rgb(238,224,15)" fg:x="12258" fg:w="76"/><text x="12.5793%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (71 samples, 0.07%)</title><rect x="12.4077%" y="789" width="0.0714%" height="15" fill="rgb(241,136,10)" fg:x="12336" fg:w="71"/><text x="12.6577%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::as_non_null_ptr (16 samples, 0.02%)</title><rect x="12.4832%" y="789" width="0.0161%" height="15" fill="rgb(208,32,45)" fg:x="12411" fg:w="16"/><text x="12.7332%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::len (15 samples, 0.02%)</title><rect x="12.4992%" y="789" width="0.0151%" height="15" fill="rgb(207,135,9)" fg:x="12427" fg:w="15"/><text x="12.7492%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (37 samples, 0.04%)</title><rect x="12.5143%" y="789" width="0.0372%" height="15" fill="rgb(206,86,44)" fg:x="12442" fg:w="37"/><text x="12.7643%" y="799.50"></text></g><g><title>core::ptr::read (90 samples, 0.09%)</title><rect x="12.5515%" y="789" width="0.0905%" height="15" fill="rgb(245,177,15)" fg:x="12479" fg:w="90"/><text x="12.8015%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts (180 samples, 0.18%)</title><rect x="12.6421%" y="789" width="0.1810%" height="15" fill="rgb(206,64,50)" fg:x="12569" fg:w="180"/><text x="12.8921%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (101 samples, 0.10%)</title><rect x="12.8231%" y="789" width="0.1016%" height="15" fill="rgb(234,36,40)" fg:x="12749" fg:w="101"/><text x="13.0731%" y="799.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (43 samples, 0.04%)</title><rect x="12.9267%" y="789" width="0.0432%" height="15" fill="rgb(213,64,8)" fg:x="12852" fg:w="43"/><text x="13.1767%" y="799.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (21 samples, 0.02%)</title><rect x="12.9700%" y="789" width="0.0211%" height="15" fill="rgb(210,75,36)" fg:x="12895" fg:w="21"/><text x="13.2200%" y="799.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (75 samples, 0.08%)</title><rect x="12.9911%" y="789" width="0.0754%" height="15" fill="rgb(229,88,21)" fg:x="12916" fg:w="75"/><text x="13.2411%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (18 samples, 0.02%)</title><rect x="13.0796%" y="789" width="0.0181%" height="15" fill="rgb(252,204,47)" fg:x="13004" fg:w="18"/><text x="13.3296%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (37 samples, 0.04%)</title><rect x="13.1068%" y="789" width="0.0372%" height="15" fill="rgb(208,77,27)" fg:x="13031" fg:w="37"/><text x="13.3568%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (62 samples, 0.06%)</title><rect x="13.1490%" y="789" width="0.0624%" height="15" fill="rgb(221,76,26)" fg:x="13073" fg:w="62"/><text x="13.3990%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (54 samples, 0.05%)</title><rect x="13.2114%" y="789" width="0.0543%" height="15" fill="rgb(225,139,18)" fg:x="13135" fg:w="54"/><text x="13.4614%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (53 samples, 0.05%)</title><rect x="13.2657%" y="789" width="0.0533%" height="15" fill="rgb(230,137,11)" fg:x="13189" fg:w="53"/><text x="13.5157%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (55 samples, 0.06%)</title><rect x="13.3190%" y="789" width="0.0553%" height="15" fill="rgb(212,28,1)" fg:x="13242" fg:w="55"/><text x="13.5690%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (48 samples, 0.05%)</title><rect x="13.3914%" y="789" width="0.0483%" height="15" fill="rgb(248,164,17)" fg:x="13314" fg:w="48"/><text x="13.6414%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 0.01%)</title><rect x="13.4397%" y="789" width="0.0101%" height="15" fill="rgb(222,171,42)" fg:x="13362" fg:w="10"/><text x="13.6897%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (97 samples, 0.10%)</title><rect x="13.4528%" y="789" width="0.0976%" height="15" fill="rgb(243,84,45)" fg:x="13375" fg:w="97"/><text x="13.7028%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts (71 samples, 0.07%)</title><rect x="13.5503%" y="789" width="0.0714%" height="15" fill="rgb(252,49,23)" fg:x="13472" fg:w="71"/><text x="13.8003%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="13.6610%" y="789" width="0.0111%" height="15" fill="rgb(215,19,7)" fg:x="13582" fg:w="11"/><text x="13.9110%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (16 samples, 0.02%)</title><rect x="13.6760%" y="789" width="0.0161%" height="15" fill="rgb(238,81,41)" fg:x="13597" fg:w="16"/><text x="13.9260%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.02%)</title><rect x="13.7072%" y="789" width="0.0171%" height="15" fill="rgb(210,199,37)" fg:x="13628" fg:w="17"/><text x="13.9572%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (31 samples, 0.03%)</title><rect x="13.7243%" y="789" width="0.0312%" height="15" fill="rgb(244,192,49)" fg:x="13645" fg:w="31"/><text x="13.9743%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (39 samples, 0.04%)</title><rect x="13.7656%" y="789" width="0.0392%" height="15" fill="rgb(226,211,11)" fg:x="13686" fg:w="39"/><text x="14.0156%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (27 samples, 0.03%)</title><rect x="13.8048%" y="789" width="0.0272%" height="15" fill="rgb(236,162,54)" fg:x="13725" fg:w="27"/><text x="14.0548%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (52 samples, 0.05%)</title><rect x="13.8430%" y="789" width="0.0523%" height="15" fill="rgb(220,229,9)" fg:x="13763" fg:w="52"/><text x="14.0930%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (36 samples, 0.04%)</title><rect x="13.8953%" y="789" width="0.0362%" height="15" fill="rgb(250,87,22)" fg:x="13815" fg:w="36"/><text x="14.1453%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (18 samples, 0.02%)</title><rect x="13.9396%" y="789" width="0.0181%" height="15" fill="rgb(239,43,17)" fg:x="13859" fg:w="18"/><text x="14.1896%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (24 samples, 0.02%)</title><rect x="13.9577%" y="789" width="0.0241%" height="15" fill="rgb(231,177,25)" fg:x="13877" fg:w="24"/><text x="14.2077%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.05%)</title><rect x="13.9838%" y="789" width="0.0533%" height="15" fill="rgb(219,179,1)" fg:x="13903" fg:w="53"/><text x="14.2338%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.01%)</title><rect x="14.0371%" y="789" width="0.0121%" height="15" fill="rgb(238,219,53)" fg:x="13956" fg:w="12"/><text x="14.2871%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (29 samples, 0.03%)</title><rect x="14.0492%" y="789" width="0.0292%" height="15" fill="rgb(232,167,36)" fg:x="13968" fg:w="29"/><text x="14.2992%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.01%)</title><rect x="14.0784%" y="789" width="0.0101%" height="15" fill="rgb(244,19,51)" fg:x="13997" fg:w="10"/><text x="14.3284%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17 samples, 0.02%)</title><rect x="14.0925%" y="789" width="0.0171%" height="15" fill="rgb(224,6,22)" fg:x="14011" fg:w="17"/><text x="14.3425%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (71 samples, 0.07%)</title><rect x="14.1096%" y="789" width="0.0714%" height="15" fill="rgb(224,145,5)" fg:x="14028" fg:w="71"/><text x="14.3596%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (36 samples, 0.04%)</title><rect x="14.1910%" y="789" width="0.0362%" height="15" fill="rgb(234,130,49)" fg:x="14109" fg:w="36"/><text x="14.4410%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="14.2282%" y="789" width="0.0121%" height="15" fill="rgb(254,6,2)" fg:x="14146" fg:w="12"/><text x="14.4782%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (26 samples, 0.03%)</title><rect x="14.2403%" y="789" width="0.0262%" height="15" fill="rgb(208,96,46)" fg:x="14158" fg:w="26"/><text x="14.4903%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (146 samples, 0.15%)</title><rect x="14.2665%" y="789" width="0.1468%" height="15" fill="rgb(239,3,39)" fg:x="14184" fg:w="146"/><text x="14.5165%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (25 samples, 0.03%)</title><rect x="14.4133%" y="789" width="0.0251%" height="15" fill="rgb(233,210,1)" fg:x="14330" fg:w="25"/><text x="14.6633%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (38 samples, 0.04%)</title><rect x="14.4395%" y="789" width="0.0382%" height="15" fill="rgb(244,137,37)" fg:x="14356" fg:w="38"/><text x="14.6895%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (14 samples, 0.01%)</title><rect x="14.4908%" y="789" width="0.0141%" height="15" fill="rgb(240,136,2)" fg:x="14407" fg:w="14"/><text x="14.7408%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (16 samples, 0.02%)</title><rect x="14.5048%" y="789" width="0.0161%" height="15" fill="rgb(239,18,37)" fg:x="14421" fg:w="16"/><text x="14.7548%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (30 samples, 0.03%)</title><rect x="14.5270%" y="789" width="0.0302%" height="15" fill="rgb(218,185,22)" fg:x="14443" fg:w="30"/><text x="14.7770%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (24 samples, 0.02%)</title><rect x="14.5571%" y="789" width="0.0241%" height="15" fill="rgb(225,218,4)" fg:x="14473" fg:w="24"/><text x="14.8071%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.01%)</title><rect x="14.5893%" y="789" width="0.0101%" height="15" fill="rgb(230,182,32)" fg:x="14505" fg:w="10"/><text x="14.8393%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (14 samples, 0.01%)</title><rect x="14.6125%" y="789" width="0.0141%" height="15" fill="rgb(242,56,43)" fg:x="14528" fg:w="14"/><text x="14.8625%" y="799.50"></text></g><g><title>hashbrown::raw::h1 (33 samples, 0.03%)</title><rect x="14.6446%" y="789" width="0.0332%" height="15" fill="rgb(233,99,24)" fg:x="14560" fg:w="33"/><text x="14.8946%" y="799.50"></text></g><g><title>hashbrown::raw::h2 (12 samples, 0.01%)</title><rect x="14.6778%" y="789" width="0.0121%" height="15" fill="rgb(234,209,42)" fg:x="14593" fg:w="12"/><text x="14.9278%" y="799.50"></text></g><g><title>hashbrown::raw::special_is_empty (13 samples, 0.01%)</title><rect x="14.6919%" y="789" width="0.0131%" height="15" fill="rgb(227,7,12)" fg:x="14607" fg:w="13"/><text x="14.9419%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="14.7161%" y="789" width="0.0101%" height="15" fill="rgb(245,203,43)" fg:x="14631" fg:w="10"/><text x="14.9661%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.01%)</title><rect x="14.7261%" y="789" width="0.0111%" height="15" fill="rgb(238,205,33)" fg:x="14641" fg:w="11"/><text x="14.9761%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (12 samples, 0.01%)</title><rect x="14.7674%" y="789" width="0.0121%" height="15" fill="rgb(231,56,7)" fg:x="14682" fg:w="12"/><text x="15.0174%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.01%)</title><rect x="14.8569%" y="789" width="0.0101%" height="15" fill="rgb(244,186,29)" fg:x="14771" fg:w="10"/><text x="15.1069%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (10 samples, 0.01%)</title><rect x="14.8669%" y="789" width="0.0101%" height="15" fill="rgb(234,111,31)" fg:x="14781" fg:w="10"/><text x="15.1169%" y="799.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (18 samples, 0.02%)</title><rect x="14.8840%" y="789" width="0.0181%" height="15" fill="rgb(241,149,10)" fg:x="14798" fg:w="18"/><text x="15.1340%" y="799.50"></text></g><g><title>[unknown] (8,349 samples, 8.40%)</title><rect x="6.5086%" y="805" width="8.3975%" height="15" fill="rgb(249,206,44)" fg:x="6471" fg:w="8349"/><text x="6.7586%" y="815.50">[unknown]</text></g><g><title>std::io::stdio::set_output_capture (10 samples, 0.01%)</title><rect x="15.1174%" y="693" width="0.0101%" height="15" fill="rgb(251,153,30)" fg:x="15030" fg:w="10"/><text x="15.3674%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (12 samples, 0.01%)</title><rect x="15.1818%" y="533" width="0.0121%" height="15" fill="rgb(239,152,38)" fg:x="15094" fg:w="12"/><text x="15.4318%" y="543.50"></text></g><g><title>[unknown] (93 samples, 0.09%)</title><rect x="15.1385%" y="549" width="0.0935%" height="15" fill="rgb(249,139,47)" fg:x="15051" fg:w="93"/><text x="15.3885%" y="559.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try::Try&gt;::into_result (13 samples, 0.01%)</title><rect x="15.3749%" y="389" width="0.0131%" height="15" fill="rgb(244,64,35)" fg:x="15286" fg:w="13"/><text x="15.6249%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="15.4634%" y="325" width="0.0141%" height="15" fill="rgb(216,46,15)" fg:x="15374" fg:w="14"/><text x="15.7134%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (11 samples, 0.01%)</title><rect x="15.4664%" y="309" width="0.0111%" height="15" fill="rgb(250,74,19)" fg:x="15377" fg:w="11"/><text x="15.7164%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (14 samples, 0.01%)</title><rect x="15.4895%" y="293" width="0.0141%" height="15" fill="rgb(249,42,33)" fg:x="15400" fg:w="14"/><text x="15.7395%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.01%)</title><rect x="15.4925%" y="277" width="0.0111%" height="15" fill="rgb(242,149,17)" fg:x="15403" fg:w="11"/><text x="15.7425%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="15.5207%" y="277" width="0.0101%" height="15" fill="rgb(244,29,21)" fg:x="15431" fg:w="10"/><text x="15.7707%" y="287.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="15.5549%" y="229" width="0.0161%" height="15" fill="rgb(220,130,37)" fg:x="15465" fg:w="16"/><text x="15.8049%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (42 samples, 0.04%)</title><rect x="15.5308%" y="277" width="0.0422%" height="15" fill="rgb(211,67,2)" fg:x="15441" fg:w="42"/><text x="15.7808%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (37 samples, 0.04%)</title><rect x="15.5358%" y="261" width="0.0372%" height="15" fill="rgb(235,68,52)" fg:x="15446" fg:w="37"/><text x="15.7858%" y="271.50"></text></g><g><title>core::mem::replace (27 samples, 0.03%)</title><rect x="15.5459%" y="245" width="0.0272%" height="15" fill="rgb(246,142,3)" fg:x="15456" fg:w="27"/><text x="15.7959%" y="255.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (12 samples, 0.01%)</title><rect x="15.5730%" y="277" width="0.0121%" height="15" fill="rgb(241,25,7)" fg:x="15483" fg:w="12"/><text x="15.8230%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (107 samples, 0.11%)</title><rect x="15.4805%" y="325" width="0.1076%" height="15" fill="rgb(242,119,39)" fg:x="15391" fg:w="107"/><text x="15.7305%" y="335.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (107 samples, 0.11%)</title><rect x="15.4805%" y="309" width="0.1076%" height="15" fill="rgb(241,98,45)" fg:x="15391" fg:w="107"/><text x="15.7305%" y="319.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (84 samples, 0.08%)</title><rect x="15.5036%" y="293" width="0.0845%" height="15" fill="rgb(254,28,30)" fg:x="15414" fg:w="84"/><text x="15.7536%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (46 samples, 0.05%)</title><rect x="15.5881%" y="325" width="0.0463%" height="15" fill="rgb(241,142,54)" fg:x="15498" fg:w="46"/><text x="15.8381%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.03%)</title><rect x="15.6072%" y="309" width="0.0272%" height="15" fill="rgb(222,85,15)" fg:x="15517" fg:w="27"/><text x="15.8572%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (23 samples, 0.02%)</title><rect x="15.6595%" y="293" width="0.0231%" height="15" fill="rgb(210,85,47)" fg:x="15569" fg:w="23"/><text x="15.9095%" y="303.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (36 samples, 0.04%)</title><rect x="15.7178%" y="277" width="0.0362%" height="15" fill="rgb(224,206,25)" fg:x="15627" fg:w="36"/><text x="15.9678%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (33 samples, 0.03%)</title><rect x="15.7209%" y="261" width="0.0332%" height="15" fill="rgb(243,201,19)" fg:x="15630" fg:w="33"/><text x="15.9709%" y="271.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="15.7329%" y="245" width="0.0211%" height="15" fill="rgb(236,59,4)" fg:x="15642" fg:w="21"/><text x="15.9829%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="15.7410%" y="229" width="0.0131%" height="15" fill="rgb(254,179,45)" fg:x="15650" fg:w="13"/><text x="15.9910%" y="239.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (155 samples, 0.16%)</title><rect x="15.6344%" y="325" width="0.1559%" height="15" fill="rgb(226,14,10)" fg:x="15544" fg:w="155"/><text x="15.8844%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle (153 samples, 0.15%)</title><rect x="15.6364%" y="309" width="0.1539%" height="15" fill="rgb(244,27,41)" fg:x="15546" fg:w="153"/><text x="15.8864%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (107 samples, 0.11%)</title><rect x="15.6826%" y="293" width="0.1076%" height="15" fill="rgb(235,35,32)" fg:x="15592" fg:w="107"/><text x="15.9326%" y="303.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (35 samples, 0.04%)</title><rect x="15.7551%" y="277" width="0.0352%" height="15" fill="rgb(218,68,31)" fg:x="15664" fg:w="35"/><text x="16.0051%" y="287.50"></text></g><g><title>crossbeam_epoch::default::is_pinned::_{{closure}} (23 samples, 0.02%)</title><rect x="15.7671%" y="261" width="0.0231%" height="15" fill="rgb(207,120,37)" fg:x="15676" fg:w="23"/><text x="16.0171%" y="271.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::is_pinned (15 samples, 0.02%)</title><rect x="15.7752%" y="245" width="0.0151%" height="15" fill="rgb(227,98,0)" fg:x="15684" fg:w="15"/><text x="16.0252%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (10 samples, 0.01%)</title><rect x="15.7802%" y="229" width="0.0101%" height="15" fill="rgb(207,7,3)" fg:x="15689" fg:w="10"/><text x="16.0302%" y="239.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (22 samples, 0.02%)</title><rect x="15.8496%" y="277" width="0.0221%" height="15" fill="rgb(206,98,19)" fg:x="15758" fg:w="22"/><text x="16.0996%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="15.8506%" y="261" width="0.0211%" height="15" fill="rgb(217,5,26)" fg:x="15759" fg:w="21"/><text x="16.1006%" y="271.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="15.8617%" y="245" width="0.0101%" height="15" fill="rgb(235,190,38)" fg:x="15770" fg:w="10"/><text x="16.1117%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="15.9411%" y="213" width="0.0101%" height="15" fill="rgb(247,86,24)" fg:x="15849" fg:w="10"/><text x="16.1911%" y="223.50"></text></g><g><title>core::ptr::read (27 samples, 0.03%)</title><rect x="15.9824%" y="165" width="0.0272%" height="15" fill="rgb(205,101,16)" fg:x="15890" fg:w="27"/><text x="16.2324%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="15.9924%" y="149" width="0.0171%" height="15" fill="rgb(246,168,33)" fg:x="15900" fg:w="17"/><text x="16.2424%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (66 samples, 0.07%)</title><rect x="15.9512%" y="213" width="0.0664%" height="15" fill="rgb(231,114,1)" fg:x="15859" fg:w="66"/><text x="16.2012%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (60 samples, 0.06%)</title><rect x="15.9572%" y="197" width="0.0603%" height="15" fill="rgb(207,184,53)" fg:x="15865" fg:w="60"/><text x="16.2072%" y="207.50"></text></g><g><title>core::mem::replace (48 samples, 0.05%)</title><rect x="15.9693%" y="181" width="0.0483%" height="15" fill="rgb(224,95,51)" fg:x="15877" fg:w="48"/><text x="16.2193%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (21 samples, 0.02%)</title><rect x="16.0176%" y="213" width="0.0211%" height="15" fill="rgb(212,188,45)" fg:x="15925" fg:w="21"/><text x="16.2676%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (10 samples, 0.01%)</title><rect x="16.0286%" y="197" width="0.0101%" height="15" fill="rgb(223,154,38)" fg:x="15936" fg:w="10"/><text x="16.2786%" y="207.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (47 samples, 0.05%)</title><rect x="16.0518%" y="213" width="0.0473%" height="15" fill="rgb(251,22,52)" fg:x="15959" fg:w="47"/><text x="16.3018%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.04%)</title><rect x="16.0618%" y="197" width="0.0372%" height="15" fill="rgb(229,209,22)" fg:x="15969" fg:w="37"/><text x="16.3118%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="16.0709%" y="181" width="0.0282%" height="15" fill="rgb(234,138,34)" fg:x="15978" fg:w="28"/><text x="16.3209%" y="191.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (19 samples, 0.02%)</title><rect x="16.0991%" y="213" width="0.0191%" height="15" fill="rgb(212,95,11)" fg:x="16006" fg:w="19"/><text x="16.3491%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="16.1041%" y="197" width="0.0141%" height="15" fill="rgb(240,179,47)" fg:x="16011" fg:w="14"/><text x="16.3541%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="16.1302%" y="197" width="0.0161%" height="15" fill="rgb(240,163,11)" fg:x="16037" fg:w="16"/><text x="16.3802%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (13 samples, 0.01%)</title><rect x="16.1333%" y="181" width="0.0131%" height="15" fill="rgb(236,37,12)" fg:x="16040" fg:w="13"/><text x="16.3833%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (757 samples, 0.76%)</title><rect x="15.4030%" y="373" width="0.7614%" height="15" fill="rgb(232,164,16)" fg:x="15314" fg:w="757"/><text x="15.6530%" y="383.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (742 samples, 0.75%)</title><rect x="15.4181%" y="357" width="0.7463%" height="15" fill="rgb(244,205,15)" fg:x="15329" fg:w="742"/><text x="15.6681%" y="367.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (728 samples, 0.73%)</title><rect x="15.4322%" y="341" width="0.7322%" height="15" fill="rgb(223,117,47)" fg:x="15343" fg:w="728"/><text x="15.6822%" y="351.50"></text></g><g><title>crossbeam_epoch::default::pin (372 samples, 0.37%)</title><rect x="15.7903%" y="325" width="0.3742%" height="15" fill="rgb(244,107,35)" fg:x="15699" fg:w="372"/><text x="16.0403%" y="335.50"></text></g><g><title>crossbeam_epoch::default::with_handle (369 samples, 0.37%)</title><rect x="15.7933%" y="309" width="0.3711%" height="15" fill="rgb(205,140,8)" fg:x="15702" fg:w="369"/><text x="16.0433%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (355 samples, 0.36%)</title><rect x="15.8074%" y="293" width="0.3571%" height="15" fill="rgb(228,84,46)" fg:x="15716" fg:w="355"/><text x="16.0574%" y="303.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (288 samples, 0.29%)</title><rect x="15.8748%" y="277" width="0.2897%" height="15" fill="rgb(254,188,9)" fg:x="15783" fg:w="288"/><text x="16.1248%" y="287.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (285 samples, 0.29%)</title><rect x="15.8778%" y="261" width="0.2867%" height="15" fill="rgb(206,112,54)" fg:x="15786" fg:w="285"/><text x="16.1278%" y="271.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (283 samples, 0.28%)</title><rect x="15.8798%" y="245" width="0.2846%" height="15" fill="rgb(216,84,49)" fg:x="15788" fg:w="283"/><text x="16.1298%" y="255.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (281 samples, 0.28%)</title><rect x="15.8818%" y="229" width="0.2826%" height="15" fill="rgb(214,194,35)" fg:x="15790" fg:w="281"/><text x="16.1318%" y="239.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (37 samples, 0.04%)</title><rect x="16.1272%" y="213" width="0.0372%" height="15" fill="rgb(249,28,3)" fg:x="16034" fg:w="37"/><text x="16.3772%" y="223.50"></text></g><g><title>crossbeam_epoch::internal::Local::collector (18 samples, 0.02%)</title><rect x="16.1463%" y="197" width="0.0181%" height="15" fill="rgb(222,56,52)" fg:x="16053" fg:w="18"/><text x="16.3963%" y="207.50"></text></g><g><title>crossbeam_epoch::primitive::cell::UnsafeCell&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="16.1483%" y="181" width="0.0161%" height="15" fill="rgb(245,217,50)" fg:x="16055" fg:w="16"/><text x="16.3983%" y="191.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (775 samples, 0.78%)</title><rect x="15.3879%" y="389" width="0.7795%" height="15" fill="rgb(213,201,24)" fg:x="15299" fg:w="775"/><text x="15.6379%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (26 samples, 0.03%)</title><rect x="16.2057%" y="373" width="0.0262%" height="15" fill="rgb(248,116,28)" fg:x="16112" fg:w="26"/><text x="16.4557%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12 samples, 0.01%)</title><rect x="16.2198%" y="357" width="0.0121%" height="15" fill="rgb(219,72,43)" fg:x="16126" fg:w="12"/><text x="16.4698%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="16.2801%" y="325" width="0.0141%" height="15" fill="rgb(209,138,14)" fg:x="16186" fg:w="14"/><text x="16.5301%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="16.2721%" y="341" width="0.0241%" height="15" fill="rgb(222,18,33)" fg:x="16178" fg:w="24"/><text x="16.5221%" y="351.50"></text></g><g><title>core::ptr::read (35 samples, 0.04%)</title><rect x="16.2650%" y="357" width="0.0352%" height="15" fill="rgb(213,199,7)" fg:x="16171" fg:w="35"/><text x="16.5150%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (133 samples, 0.13%)</title><rect x="16.1674%" y="389" width="0.1338%" height="15" fill="rgb(250,110,10)" fg:x="16074" fg:w="133"/><text x="16.4174%" y="399.50"></text></g><g><title>core::mem::replace (55 samples, 0.06%)</title><rect x="16.2459%" y="373" width="0.0553%" height="15" fill="rgb(248,123,6)" fg:x="16152" fg:w="55"/><text x="16.4959%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::as_ref (17 samples, 0.02%)</title><rect x="16.4088%" y="277" width="0.0171%" height="15" fill="rgb(206,91,31)" fg:x="16314" fg:w="17"/><text x="16.6588%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (14 samples, 0.01%)</title><rect x="16.4119%" y="261" width="0.0141%" height="15" fill="rgb(211,154,13)" fg:x="16317" fg:w="14"/><text x="16.6619%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="16.4159%" y="245" width="0.0101%" height="15" fill="rgb(225,148,7)" fg:x="16321" fg:w="10"/><text x="16.6659%" y="255.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="16.4692%" y="213" width="0.0121%" height="15" fill="rgb(220,160,43)" fg:x="16374" fg:w="12"/><text x="16.7192%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (35 samples, 0.04%)</title><rect x="16.4481%" y="261" width="0.0352%" height="15" fill="rgb(213,52,39)" fg:x="16353" fg:w="35"/><text x="16.6981%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (32 samples, 0.03%)</title><rect x="16.4511%" y="245" width="0.0322%" height="15" fill="rgb(243,137,7)" fg:x="16356" fg:w="32"/><text x="16.7011%" y="255.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="16.4591%" y="229" width="0.0241%" height="15" fill="rgb(230,79,13)" fg:x="16364" fg:w="24"/><text x="16.7091%" y="239.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::store (21 samples, 0.02%)</title><rect x="16.4833%" y="261" width="0.0211%" height="15" fill="rgb(247,105,23)" fg:x="16388" fg:w="21"/><text x="16.7333%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (19 samples, 0.02%)</title><rect x="16.4853%" y="245" width="0.0191%" height="15" fill="rgb(223,179,41)" fg:x="16390" fg:w="19"/><text x="16.7353%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="16.4923%" y="229" width="0.0121%" height="15" fill="rgb(218,9,34)" fg:x="16397" fg:w="12"/><text x="16.7423%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (113 samples, 0.11%)</title><rect x="16.3978%" y="309" width="0.1137%" height="15" fill="rgb(222,106,8)" fg:x="16303" fg:w="113"/><text x="16.6478%" y="319.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (113 samples, 0.11%)</title><rect x="16.3978%" y="293" width="0.1137%" height="15" fill="rgb(211,220,0)" fg:x="16303" fg:w="113"/><text x="16.6478%" y="303.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (85 samples, 0.09%)</title><rect x="16.4259%" y="277" width="0.0855%" height="15" fill="rgb(229,52,16)" fg:x="16331" fg:w="85"/><text x="16.6759%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (34 samples, 0.03%)</title><rect x="16.5114%" y="309" width="0.0342%" height="15" fill="rgb(212,155,18)" fg:x="16416" fg:w="34"/><text x="16.7614%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="16.5255%" y="293" width="0.0201%" height="15" fill="rgb(242,21,14)" fg:x="16430" fg:w="20"/><text x="16.7755%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (26 samples, 0.03%)</title><rect x="16.5668%" y="277" width="0.0262%" height="15" fill="rgb(222,19,48)" fg:x="16471" fg:w="26"/><text x="16.8168%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (10 samples, 0.01%)</title><rect x="16.6241%" y="261" width="0.0101%" height="15" fill="rgb(232,45,27)" fg:x="16528" fg:w="10"/><text x="16.8741%" y="271.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (34 samples, 0.03%)</title><rect x="16.6341%" y="261" width="0.0342%" height="15" fill="rgb(249,103,42)" fg:x="16538" fg:w="34"/><text x="16.8841%" y="271.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (32 samples, 0.03%)</title><rect x="16.6362%" y="245" width="0.0322%" height="15" fill="rgb(246,81,33)" fg:x="16540" fg:w="32"/><text x="16.8862%" y="255.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.02%)</title><rect x="16.6533%" y="229" width="0.0151%" height="15" fill="rgb(252,33,42)" fg:x="16557" fg:w="15"/><text x="16.9033%" y="239.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (152 samples, 0.15%)</title><rect x="16.5456%" y="309" width="0.1529%" height="15" fill="rgb(209,212,41)" fg:x="16450" fg:w="152"/><text x="16.7956%" y="319.50"></text></g><g><title>crossbeam_epoch::default::with_handle (149 samples, 0.15%)</title><rect x="16.5487%" y="293" width="0.1499%" height="15" fill="rgb(207,154,6)" fg:x="16453" fg:w="149"/><text x="16.7987%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (105 samples, 0.11%)</title><rect x="16.5929%" y="277" width="0.1056%" height="15" fill="rgb(223,64,47)" fg:x="16497" fg:w="105"/><text x="16.8429%" y="287.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (29 samples, 0.03%)</title><rect x="16.6693%" y="261" width="0.0292%" height="15" fill="rgb(211,161,38)" fg:x="16573" fg:w="29"/><text x="16.9193%" y="271.50"></text></g><g><title>crossbeam_epoch::default::is_pinned::_{{closure}} (23 samples, 0.02%)</title><rect x="16.6754%" y="245" width="0.0231%" height="15" fill="rgb(219,138,40)" fg:x="16579" fg:w="23"/><text x="16.9254%" y="255.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::is_pinned (17 samples, 0.02%)</title><rect x="16.6814%" y="229" width="0.0171%" height="15" fill="rgb(241,228,46)" fg:x="16585" fg:w="17"/><text x="16.9314%" y="239.50"></text></g><g><title>crossbeam_epoch::internal::Local::is_pinned (10 samples, 0.01%)</title><rect x="16.6885%" y="213" width="0.0101%" height="15" fill="rgb(223,209,38)" fg:x="16592" fg:w="10"/><text x="16.9385%" y="223.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (24 samples, 0.02%)</title><rect x="16.7548%" y="261" width="0.0241%" height="15" fill="rgb(236,164,45)" fg:x="16658" fg:w="24"/><text x="17.0048%" y="271.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (24 samples, 0.02%)</title><rect x="16.7548%" y="245" width="0.0241%" height="15" fill="rgb(231,15,5)" fg:x="16658" fg:w="24"/><text x="17.0048%" y="255.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (10 samples, 0.01%)</title><rect x="16.7689%" y="229" width="0.0101%" height="15" fill="rgb(252,35,15)" fg:x="16672" fg:w="10"/><text x="17.0189%" y="239.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="16.9027%" y="149" width="0.0201%" height="15" fill="rgb(248,181,18)" fg:x="16805" fg:w="20"/><text x="17.1527%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="16.9107%" y="133" width="0.0121%" height="15" fill="rgb(233,39,42)" fg:x="16813" fg:w="12"/><text x="17.1607%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (55 samples, 0.06%)</title><rect x="16.8715%" y="197" width="0.0553%" height="15" fill="rgb(238,110,33)" fg:x="16774" fg:w="55"/><text x="17.1215%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (48 samples, 0.05%)</title><rect x="16.8786%" y="181" width="0.0483%" height="15" fill="rgb(233,195,10)" fg:x="16781" fg:w="48"/><text x="17.1286%" y="191.50"></text></g><g><title>core::mem::replace (36 samples, 0.04%)</title><rect x="16.8906%" y="165" width="0.0362%" height="15" fill="rgb(254,105,3)" fg:x="16793" fg:w="36"/><text x="17.1406%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (37 samples, 0.04%)</title><rect x="16.9268%" y="197" width="0.0372%" height="15" fill="rgb(221,225,9)" fg:x="16829" fg:w="37"/><text x="17.1768%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (16 samples, 0.02%)</title><rect x="16.9480%" y="181" width="0.0161%" height="15" fill="rgb(224,227,45)" fg:x="16850" fg:w="16"/><text x="17.1980%" y="191.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (54 samples, 0.05%)</title><rect x="16.9801%" y="197" width="0.0543%" height="15" fill="rgb(229,198,43)" fg:x="16882" fg:w="54"/><text x="17.2301%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.04%)</title><rect x="16.9982%" y="181" width="0.0362%" height="15" fill="rgb(206,209,35)" fg:x="16900" fg:w="36"/><text x="17.2482%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="17.0103%" y="165" width="0.0241%" height="15" fill="rgb(245,195,53)" fg:x="16912" fg:w="24"/><text x="17.2603%" y="175.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (27 samples, 0.03%)</title><rect x="17.0345%" y="197" width="0.0272%" height="15" fill="rgb(240,92,26)" fg:x="16936" fg:w="27"/><text x="17.2845%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="17.0425%" y="181" width="0.0191%" height="15" fill="rgb(207,40,23)" fg:x="16944" fg:w="19"/><text x="17.2925%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.01%)</title><rect x="17.0516%" y="165" width="0.0101%" height="15" fill="rgb(223,111,35)" fg:x="16953" fg:w="10"/><text x="17.3016%" y="175.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="17.0797%" y="181" width="0.0111%" height="15" fill="rgb(229,147,28)" fg:x="16981" fg:w="11"/><text x="17.3297%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (765 samples, 0.77%)</title><rect x="16.3314%" y="357" width="0.7694%" height="15" fill="rgb(211,29,28)" fg:x="16237" fg:w="765"/><text x="16.5814%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (751 samples, 0.76%)</title><rect x="16.3455%" y="341" width="0.7554%" height="15" fill="rgb(228,72,33)" fg:x="16251" fg:w="751"/><text x="16.5955%" y="351.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (739 samples, 0.74%)</title><rect x="16.3575%" y="325" width="0.7433%" height="15" fill="rgb(205,214,31)" fg:x="16263" fg:w="739"/><text x="16.6075%" y="335.50"></text></g><g><title>crossbeam_epoch::default::pin (400 samples, 0.40%)</title><rect x="16.6985%" y="309" width="0.4023%" height="15" fill="rgb(224,111,15)" fg:x="16602" fg:w="400"/><text x="16.9485%" y="319.50"></text></g><g><title>crossbeam_epoch::default::with_handle (400 samples, 0.40%)</title><rect x="16.6985%" y="293" width="0.4023%" height="15" fill="rgb(253,21,26)" fg:x="16602" fg:w="400"/><text x="16.9485%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (380 samples, 0.38%)</title><rect x="16.7186%" y="277" width="0.3822%" height="15" fill="rgb(245,139,43)" fg:x="16622" fg:w="380"/><text x="16.9686%" y="287.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (316 samples, 0.32%)</title><rect x="16.7830%" y="261" width="0.3178%" height="15" fill="rgb(252,170,7)" fg:x="16686" fg:w="316"/><text x="17.0330%" y="271.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (309 samples, 0.31%)</title><rect x="16.7900%" y="245" width="0.3108%" height="15" fill="rgb(231,118,14)" fg:x="16693" fg:w="309"/><text x="17.0400%" y="255.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (306 samples, 0.31%)</title><rect x="16.7931%" y="229" width="0.3078%" height="15" fill="rgb(238,83,0)" fg:x="16696" fg:w="306"/><text x="17.0431%" y="239.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (304 samples, 0.31%)</title><rect x="16.7951%" y="213" width="0.3058%" height="15" fill="rgb(221,39,39)" fg:x="16698" fg:w="304"/><text x="17.0451%" y="223.50"></text></g><g><title>crossbeam_epoch::internal::Local::global (28 samples, 0.03%)</title><rect x="17.0727%" y="197" width="0.0282%" height="15" fill="rgb(222,119,46)" fg:x="16974" fg:w="28"/><text x="17.3227%" y="207.50"></text></g><g><title>crossbeam_epoch::internal::Local::collector (10 samples, 0.01%)</title><rect x="17.0908%" y="181" width="0.0101%" height="15" fill="rgb(222,165,49)" fg:x="16992" fg:w="10"/><text x="17.3408%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,798 samples, 1.81%)</title><rect x="15.2964%" y="437" width="1.8085%" height="15" fill="rgb(219,113,52)" fg:x="15208" fg:w="1798"/><text x="15.5464%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,797 samples, 1.81%)</title><rect x="15.2974%" y="421" width="1.8074%" height="15" fill="rgb(214,7,15)" fg:x="15209" fg:w="1797"/><text x="15.5474%" y="431.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,788 samples, 1.80%)</title><rect x="15.3065%" y="405" width="1.7984%" height="15" fill="rgb(235,32,4)" fg:x="15218" fg:w="1788"/><text x="15.5565%" y="415.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (799 samples, 0.80%)</title><rect x="16.3012%" y="389" width="0.8036%" height="15" fill="rgb(238,90,54)" fg:x="16207" fg:w="799"/><text x="16.5512%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (790 samples, 0.79%)</title><rect x="16.3103%" y="373" width="0.7946%" height="15" fill="rgb(213,208,19)" fg:x="16216" fg:w="790"/><text x="16.5603%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,799 samples, 1.81%)</title><rect x="15.2964%" y="453" width="1.8095%" height="15" fill="rgb(233,156,4)" fg:x="15208" fg:w="1799"/><text x="15.5464%" y="463.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,824 samples, 1.83%)</title><rect x="15.2823%" y="501" width="1.8346%" height="15" fill="rgb(207,194,5)" fg:x="15194" fg:w="1824"/><text x="15.5323%" y="511.50">c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::_{{closure}} (1,821 samples, 1.83%)</title><rect x="15.2853%" y="485" width="1.8316%" height="15" fill="rgb(206,111,30)" fg:x="15197" fg:w="1821"/><text x="15.5353%" y="495.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::steal (1,816 samples, 1.83%)</title><rect x="15.2904%" y="469" width="1.8266%" height="15" fill="rgb(243,70,54)" fg:x="15202" fg:w="1816"/><text x="15.5404%" y="479.50">r..</text></g><g><title>std::sync::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="17.1360%" y="469" width="0.0302%" height="15" fill="rgb(242,28,8)" fg:x="17037" fg:w="30"/><text x="17.3860%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="17.1360%" y="453" width="0.0302%" height="15" fill="rgb(219,106,18)" fg:x="17037" fg:w="30"/><text x="17.3860%" y="463.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (30 samples, 0.03%)</title><rect x="17.1360%" y="437" width="0.0302%" height="15" fill="rgb(244,222,10)" fg:x="17037" fg:w="30"/><text x="17.3860%" y="447.50"></text></g><g><title>__pthread_cond_wait (30 samples, 0.03%)</title><rect x="17.1360%" y="421" width="0.0302%" height="15" fill="rgb(236,179,52)" fg:x="17037" fg:w="30"/><text x="17.3860%" y="431.50"></text></g><g><title>__pthread_disable_asynccancel (23 samples, 0.02%)</title><rect x="17.1431%" y="405" width="0.0231%" height="15" fill="rgb(213,23,39)" fg:x="17044" fg:w="23"/><text x="17.3931%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (34 samples, 0.03%)</title><rect x="17.1330%" y="485" width="0.0342%" height="15" fill="rgb(238,48,10)" fg:x="17034" fg:w="34"/><text x="17.3830%" y="495.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (39 samples, 0.04%)</title><rect x="17.1290%" y="501" width="0.0392%" height="15" fill="rgb(251,196,23)" fg:x="17030" fg:w="39"/><text x="17.3790%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1,877 samples, 1.89%)</title><rect x="15.2813%" y="533" width="1.8879%" height="15" fill="rgb(250,152,24)" fg:x="15193" fg:w="1877"/><text x="15.5313%" y="543.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1,877 samples, 1.89%)</title><rect x="15.2813%" y="517" width="1.8879%" height="15" fill="rgb(209,150,17)" fg:x="15193" fg:w="1877"/><text x="15.5313%" y="527.50">r..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,032 samples, 2.04%)</title><rect x="15.1274%" y="629" width="2.0438%" height="15" fill="rgb(234,202,34)" fg:x="15040" fg:w="2032"/><text x="15.3774%" y="639.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (2,032 samples, 2.04%)</title><rect x="15.1274%" y="613" width="2.0438%" height="15" fill="rgb(253,148,53)" fg:x="15040" fg:w="2032"/><text x="15.3774%" y="623.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,032 samples, 2.04%)</title><rect x="15.1274%" y="597" width="2.0438%" height="15" fill="rgb(218,129,16)" fg:x="15040" fg:w="2032"/><text x="15.3774%" y="607.50">s..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (2,032 samples, 2.04%)</title><rect x="15.1274%" y="581" width="2.0438%" height="15" fill="rgb(216,85,19)" fg:x="15040" fg:w="2032"/><text x="15.3774%" y="591.50">&lt;..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (2,032 samples, 2.04%)</title><rect x="15.1274%" y="565" width="2.0438%" height="15" fill="rgb(235,228,7)" fg:x="15040" fg:w="2032"/><text x="15.3774%" y="575.50">r..</text></g><g><title>rayon_core::registry::main_loop (1,891 samples, 1.90%)</title><rect x="15.2693%" y="549" width="1.9020%" height="15" fill="rgb(245,175,0)" fg:x="15181" fg:w="1891"/><text x="15.5193%" y="559.50">r..</text></g><g><title>__rust_try (2,033 samples, 2.04%)</title><rect x="15.1274%" y="661" width="2.0448%" height="15" fill="rgb(208,168,36)" fg:x="15040" fg:w="2033"/><text x="15.3774%" y="671.50">_..</text></g><g><title>std::panicking::try::do_call (2,033 samples, 2.04%)</title><rect x="15.1274%" y="645" width="2.0448%" height="15" fill="rgb(246,171,24)" fg:x="15040" fg:w="2033"/><text x="15.3774%" y="655.50">s..</text></g><g><title>language_e2e_tests::executor::FakeExecutor::apply_write_set (30 samples, 0.03%)</title><rect x="17.1964%" y="357" width="0.0302%" height="15" fill="rgb(215,142,24)" fg:x="17097" fg:w="30"/><text x="17.4464%" y="367.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::add_write_set (30 samples, 0.03%)</title><rect x="17.1964%" y="341" width="0.0302%" height="15" fill="rgb(250,187,7)" fg:x="17097" fg:w="30"/><text x="17.4464%" y="351.50"></text></g><g><title>language_e2e_tests::data_store::FakeDataStore::set (19 samples, 0.02%)</title><rect x="17.2075%" y="325" width="0.0191%" height="15" fill="rgb(228,66,33)" fg:x="17108" fg:w="19"/><text x="17.4575%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.02%)</title><rect x="17.2075%" y="309" width="0.0191%" height="15" fill="rgb(234,215,21)" fg:x="17108" fg:w="19"/><text x="17.4575%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.02%)</title><rect x="17.2075%" y="293" width="0.0191%" height="15" fill="rgb(222,191,20)" fg:x="17108" fg:w="19"/><text x="17.4575%" y="303.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis_file (44 samples, 0.04%)</title><rect x="17.1833%" y="389" width="0.0443%" height="15" fill="rgb(245,79,54)" fg:x="17084" fg:w="44"/><text x="17.4333%" y="399.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::from_genesis (31 samples, 0.03%)</title><rect x="17.1964%" y="373" width="0.0312%" height="15" fill="rgb(240,10,37)" fg:x="17097" fg:w="31"/><text x="17.4464%" y="383.50"></text></g><g><title>std::panic::catch_unwind (2,092 samples, 2.10%)</title><rect x="15.1274%" y="693" width="2.1042%" height="15" fill="rgb(214,192,32)" fg:x="15040" fg:w="2092"/><text x="15.3774%" y="703.50">s..</text></g><g><title>std::panicking::try (2,092 samples, 2.10%)</title><rect x="15.1274%" y="677" width="2.1042%" height="15" fill="rgb(209,36,54)" fg:x="15040" fg:w="2092"/><text x="15.3774%" y="687.50">s..</text></g><g><title>std::panicking::try::do_call (59 samples, 0.06%)</title><rect x="17.1723%" y="661" width="0.0593%" height="15" fill="rgb(220,10,11)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="671.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59 samples, 0.06%)</title><rect x="17.1723%" y="645" width="0.0593%" height="15" fill="rgb(221,106,17)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="655.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (59 samples, 0.06%)</title><rect x="17.1723%" y="629" width="0.0593%" height="15" fill="rgb(251,142,44)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59 samples, 0.06%)</title><rect x="17.1723%" y="613" width="0.0593%" height="15" fill="rgb(238,13,15)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="623.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (59 samples, 0.06%)</title><rect x="17.1723%" y="597" width="0.0593%" height="15" fill="rgb(208,107,27)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="607.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (59 samples, 0.06%)</title><rect x="17.1723%" y="581" width="0.0593%" height="15" fill="rgb(205,136,37)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="591.50"></text></g><g><title>test::run_test_in_process (59 samples, 0.06%)</title><rect x="17.1723%" y="565" width="0.0593%" height="15" fill="rgb(250,205,27)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="575.50"></text></g><g><title>std::panic::catch_unwind (59 samples, 0.06%)</title><rect x="17.1723%" y="549" width="0.0593%" height="15" fill="rgb(210,80,43)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="559.50"></text></g><g><title>std::panicking::try (59 samples, 0.06%)</title><rect x="17.1723%" y="533" width="0.0593%" height="15" fill="rgb(247,160,36)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="543.50"></text></g><g><title>std::panicking::try::do_call (59 samples, 0.06%)</title><rect x="17.1723%" y="517" width="0.0593%" height="15" fill="rgb(234,13,49)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="527.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59 samples, 0.06%)</title><rect x="17.1723%" y="501" width="0.0593%" height="15" fill="rgb(234,122,0)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59 samples, 0.06%)</title><rect x="17.1723%" y="485" width="0.0593%" height="15" fill="rgb(207,146,38)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="495.50"></text></g><g><title>test::__rust_begin_short_backtrace (59 samples, 0.06%)</title><rect x="17.1723%" y="469" width="0.0593%" height="15" fill="rgb(207,177,25)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (59 samples, 0.06%)</title><rect x="17.1723%" y="453" width="0.0593%" height="15" fill="rgb(211,178,42)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (59 samples, 0.06%)</title><rect x="17.1723%" y="437" width="0.0593%" height="15" fill="rgb(230,69,54)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="447.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (59 samples, 0.06%)</title><rect x="17.1723%" y="421" width="0.0593%" height="15" fill="rgb(214,135,41)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="431.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (59 samples, 0.06%)</title><rect x="17.1723%" y="405" width="0.0593%" height="15" fill="rgb(237,67,25)" fg:x="17073" fg:w="59"/><text x="17.4223%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,106 samples, 2.12%)</title><rect x="15.1154%" y="757" width="2.1182%" height="15" fill="rgb(222,189,50)" fg:x="15028" fg:w="2106"/><text x="15.3654%" y="767.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,105 samples, 2.12%)</title><rect x="15.1164%" y="741" width="2.1172%" height="15" fill="rgb(245,148,34)" fg:x="15029" fg:w="2105"/><text x="15.3664%" y="751.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,105 samples, 2.12%)</title><rect x="15.1164%" y="725" width="2.1172%" height="15" fill="rgb(222,29,6)" fg:x="15029" fg:w="2105"/><text x="15.3664%" y="735.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (2,105 samples, 2.12%)</title><rect x="15.1164%" y="709" width="2.1172%" height="15" fill="rgb(221,189,43)" fg:x="15029" fg:w="2105"/><text x="15.3664%" y="719.50">s..</text></g><g><title>__GI___mmap64 (10 samples, 0.01%)</title><rect x="17.2356%" y="693" width="0.0101%" height="15" fill="rgb(207,36,27)" fg:x="17136" fg:w="10"/><text x="17.4856%" y="703.50"></text></g><g><title>__GI___clone (2,336 samples, 2.35%)</title><rect x="14.9062%" y="805" width="2.3496%" height="15" fill="rgb(217,90,24)" fg:x="14820" fg:w="2336"/><text x="15.1562%" y="815.50">_..</text></g><g><title>start_thread (2,133 samples, 2.15%)</title><rect x="15.1103%" y="789" width="2.1454%" height="15" fill="rgb(224,66,35)" fg:x="15023" fg:w="2133"/><text x="15.3603%" y="799.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,128 samples, 2.14%)</title><rect x="15.1154%" y="773" width="2.1404%" height="15" fill="rgb(221,13,50)" fg:x="15028" fg:w="2128"/><text x="15.3654%" y="783.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (22 samples, 0.02%)</title><rect x="17.2336%" y="757" width="0.0221%" height="15" fill="rgb(236,68,49)" fg:x="17134" fg:w="22"/><text x="17.4836%" y="767.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (22 samples, 0.02%)</title><rect x="17.2336%" y="741" width="0.0221%" height="15" fill="rgb(229,146,28)" fg:x="17134" fg:w="22"/><text x="17.4836%" y="751.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (20 samples, 0.02%)</title><rect x="17.2356%" y="725" width="0.0201%" height="15" fill="rgb(225,31,38)" fg:x="17136" fg:w="20"/><text x="17.4856%" y="735.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (20 samples, 0.02%)</title><rect x="17.2356%" y="709" width="0.0201%" height="15" fill="rgb(250,208,3)" fg:x="17136" fg:w="20"/><text x="17.4856%" y="719.50"></text></g><g><title>__GI___libc_free (11 samples, 0.01%)</title><rect x="17.2557%" y="805" width="0.0111%" height="15" fill="rgb(246,54,23)" fg:x="17156" fg:w="11"/><text x="17.5057%" y="815.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="17.2668%" y="805" width="0.0121%" height="15" fill="rgb(243,76,11)" fg:x="17167" fg:w="12"/><text x="17.5168%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (85 samples, 0.09%)</title><rect x="17.2889%" y="805" width="0.0855%" height="15" fill="rgb(245,21,50)" fg:x="17189" fg:w="85"/><text x="17.5389%" y="815.50"></text></g><g><title>__rust_probestack (34 samples, 0.03%)</title><rect x="17.3885%" y="805" width="0.0342%" height="15" fill="rgb(228,9,43)" fg:x="17288" fg:w="34"/><text x="17.6385%" y="815.50"></text></g><g><title>_int_free (48 samples, 0.05%)</title><rect x="17.4237%" y="805" width="0.0483%" height="15" fill="rgb(208,100,47)" fg:x="17323" fg:w="48"/><text x="17.6737%" y="815.50"></text></g><g><title>_int_malloc (15 samples, 0.02%)</title><rect x="17.4720%" y="805" width="0.0151%" height="15" fill="rgb(232,26,8)" fg:x="17371" fg:w="15"/><text x="17.7220%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.07%)</title><rect x="17.4871%" y="805" width="0.0664%" height="15" fill="rgb(216,166,38)" fg:x="17386" fg:w="66"/><text x="17.7371%" y="815.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="17.5565%" y="805" width="0.0151%" height="15" fill="rgb(251,202,51)" fg:x="17455" fg:w="15"/><text x="17.8065%" y="815.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.02%)</title><rect x="17.5716%" y="805" width="0.0151%" height="15" fill="rgb(254,216,34)" fg:x="17470" fg:w="15"/><text x="17.8216%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.05%)</title><rect x="17.5867%" y="805" width="0.0453%" height="15" fill="rgb(251,32,27)" fg:x="17485" fg:w="45"/><text x="17.8367%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.01%)</title><rect x="17.6319%" y="805" width="0.0101%" height="15" fill="rgb(208,127,28)" fg:x="17530" fg:w="10"/><text x="17.8819%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (66 samples, 0.07%)</title><rect x="17.6420%" y="805" width="0.0664%" height="15" fill="rgb(224,137,22)" fg:x="17540" fg:w="66"/><text x="17.8920%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (59 samples, 0.06%)</title><rect x="17.7094%" y="805" width="0.0593%" height="15" fill="rgb(254,70,32)" fg:x="17607" fg:w="59"/><text x="17.9594%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::leak (149 samples, 0.15%)</title><rect x="17.7727%" y="805" width="0.1499%" height="15" fill="rgb(229,75,37)" fg:x="17670" fg:w="149"/><text x="18.0227%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (45 samples, 0.05%)</title><rect x="17.9226%" y="805" width="0.0453%" height="15" fill="rgb(252,64,23)" fg:x="17819" fg:w="45"/><text x="18.1726%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (22 samples, 0.02%)</title><rect x="17.9679%" y="805" width="0.0221%" height="15" fill="rgb(232,162,48)" fg:x="17864" fg:w="22"/><text x="18.2179%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (29 samples, 0.03%)</title><rect x="17.9900%" y="805" width="0.0292%" height="15" fill="rgb(246,160,12)" fg:x="17886" fg:w="29"/><text x="18.2400%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (93 samples, 0.09%)</title><rect x="18.0222%" y="805" width="0.0935%" height="15" fill="rgb(247,166,0)" fg:x="17918" fg:w="93"/><text x="18.2722%" y="815.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::awaken (41 samples, 0.04%)</title><rect x="18.1157%" y="805" width="0.0412%" height="15" fill="rgb(249,219,21)" fg:x="18011" fg:w="41"/><text x="18.3657%" y="815.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::new (127 samples, 0.13%)</title><rect x="18.1569%" y="805" width="0.1277%" height="15" fill="rgb(205,209,3)" fg:x="18052" fg:w="127"/><text x="18.4069%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (48 samples, 0.05%)</title><rect x="18.2877%" y="805" width="0.0483%" height="15" fill="rgb(243,44,1)" fg:x="18182" fg:w="48"/><text x="18.5377%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (69 samples, 0.07%)</title><rect x="18.3360%" y="805" width="0.0694%" height="15" fill="rgb(206,159,16)" fg:x="18230" fg:w="69"/><text x="18.5860%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (74 samples, 0.07%)</title><rect x="18.4054%" y="805" width="0.0744%" height="15" fill="rgb(244,77,30)" fg:x="18299" fg:w="74"/><text x="18.6554%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (135 samples, 0.14%)</title><rect x="18.4798%" y="805" width="0.1358%" height="15" fill="rgb(218,69,12)" fg:x="18373" fg:w="135"/><text x="18.7298%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (16 samples, 0.02%)</title><rect x="18.6156%" y="805" width="0.0161%" height="15" fill="rgb(212,87,7)" fg:x="18508" fg:w="16"/><text x="18.8656%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (45 samples, 0.05%)</title><rect x="18.6317%" y="805" width="0.0453%" height="15" fill="rgb(245,114,25)" fg:x="18524" fg:w="45"/><text x="18.8817%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (46 samples, 0.05%)</title><rect x="18.6770%" y="805" width="0.0463%" height="15" fill="rgb(210,61,42)" fg:x="18569" fg:w="46"/><text x="18.9270%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (175 samples, 0.18%)</title><rect x="18.7232%" y="805" width="0.1760%" height="15" fill="rgb(211,52,33)" fg:x="18615" fg:w="175"/><text x="18.9732%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (59 samples, 0.06%)</title><rect x="18.9073%" y="805" width="0.0593%" height="15" fill="rgb(234,58,33)" fg:x="18798" fg:w="59"/><text x="19.1573%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::len (31 samples, 0.03%)</title><rect x="18.9666%" y="805" width="0.0312%" height="15" fill="rgb(220,115,36)" fg:x="18857" fg:w="31"/><text x="19.2166%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (27 samples, 0.03%)</title><rect x="18.9978%" y="805" width="0.0272%" height="15" fill="rgb(243,153,54)" fg:x="18888" fg:w="27"/><text x="19.2478%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (77 samples, 0.08%)</title><rect x="19.0250%" y="805" width="0.0774%" height="15" fill="rgb(251,47,18)" fg:x="18915" fg:w="77"/><text x="19.2750%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove::_{{closure}} (29 samples, 0.03%)</title><rect x="19.1024%" y="805" width="0.0292%" height="15" fill="rgb(242,102,42)" fg:x="18992" fg:w="29"/><text x="19.3524%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (105 samples, 0.11%)</title><rect x="19.1316%" y="805" width="0.1056%" height="15" fill="rgb(234,31,38)" fg:x="19021" fg:w="105"/><text x="19.3816%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (28 samples, 0.03%)</title><rect x="19.2372%" y="805" width="0.0282%" height="15" fill="rgb(221,117,51)" fg:x="19126" fg:w="28"/><text x="19.4872%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values_mut (15 samples, 0.02%)</title><rect x="19.2654%" y="805" width="0.0151%" height="15" fill="rgb(212,20,18)" fg:x="19154" fg:w="15"/><text x="19.5154%" y="815.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (133 samples, 0.13%)</title><rect x="19.2804%" y="805" width="0.1338%" height="15" fill="rgb(245,133,36)" fg:x="19169" fg:w="133"/><text x="19.5304%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (34 samples, 0.03%)</title><rect x="19.4263%" y="805" width="0.0342%" height="15" fill="rgb(212,6,19)" fg:x="19314" fg:w="34"/><text x="19.6763%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (25 samples, 0.03%)</title><rect x="19.4605%" y="805" width="0.0251%" height="15" fill="rgb(218,1,36)" fg:x="19348" fg:w="25"/><text x="19.7105%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (112 samples, 0.11%)</title><rect x="19.4856%" y="805" width="0.1127%" height="15" fill="rgb(246,84,54)" fg:x="19373" fg:w="112"/><text x="19.7356%" y="815.50"></text></g><g><title>alloc::collections::btree::mem::replace (129 samples, 0.13%)</title><rect x="19.5983%" y="805" width="0.1297%" height="15" fill="rgb(242,110,6)" fg:x="19485" fg:w="129"/><text x="19.8483%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (122 samples, 0.12%)</title><rect x="19.7361%" y="805" width="0.1227%" height="15" fill="rgb(214,47,5)" fg:x="19622" fg:w="122"/><text x="19.9861%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (172 samples, 0.17%)</title><rect x="19.8588%" y="805" width="0.1730%" height="15" fill="rgb(218,159,25)" fg:x="19744" fg:w="172"/><text x="20.1088%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (62 samples, 0.06%)</title><rect x="20.0318%" y="805" width="0.0624%" height="15" fill="rgb(215,211,28)" fg:x="19916" fg:w="62"/><text x="20.2818%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (142 samples, 0.14%)</title><rect x="20.0941%" y="805" width="0.1428%" height="15" fill="rgb(238,59,32)" fg:x="19978" fg:w="142"/><text x="20.3441%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (59 samples, 0.06%)</title><rect x="20.2370%" y="805" width="0.0593%" height="15" fill="rgb(226,82,3)" fg:x="20120" fg:w="59"/><text x="20.4870%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (71 samples, 0.07%)</title><rect x="20.2963%" y="805" width="0.0714%" height="15" fill="rgb(240,164,32)" fg:x="20179" fg:w="71"/><text x="20.5463%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="20.3677%" y="805" width="0.0121%" height="15" fill="rgb(232,46,7)" fg:x="20250" fg:w="12"/><text x="20.6177%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (99 samples, 0.10%)</title><rect x="20.3798%" y="805" width="0.0996%" height="15" fill="rgb(229,129,53)" fg:x="20262" fg:w="99"/><text x="20.6298%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (17 samples, 0.02%)</title><rect x="20.4794%" y="805" width="0.0171%" height="15" fill="rgb(234,188,29)" fg:x="20361" fg:w="17"/><text x="20.7294%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (65 samples, 0.07%)</title><rect x="20.4965%" y="805" width="0.0654%" height="15" fill="rgb(246,141,4)" fg:x="20378" fg:w="65"/><text x="20.7465%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::none (48 samples, 0.05%)</title><rect x="20.5659%" y="805" width="0.0483%" height="15" fill="rgb(229,23,39)" fg:x="20447" fg:w="48"/><text x="20.8159%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (51 samples, 0.05%)</title><rect x="20.6141%" y="805" width="0.0513%" height="15" fill="rgb(206,12,3)" fg:x="20495" fg:w="51"/><text x="20.8641%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (131 samples, 0.13%)</title><rect x="20.6654%" y="805" width="0.1318%" height="15" fill="rgb(252,226,20)" fg:x="20546" fg:w="131"/><text x="20.9154%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.01%)</title><rect x="20.7972%" y="805" width="0.0131%" height="15" fill="rgb(216,123,35)" fg:x="20677" fg:w="13"/><text x="21.0472%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (195 samples, 0.20%)</title><rect x="20.8103%" y="805" width="0.1961%" height="15" fill="rgb(212,68,40)" fg:x="20690" fg:w="195"/><text x="21.0603%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (102 samples, 0.10%)</title><rect x="21.0094%" y="805" width="0.1026%" height="15" fill="rgb(254,125,32)" fg:x="20888" fg:w="102"/><text x="21.2594%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (347 samples, 0.35%)</title><rect x="21.1130%" y="805" width="0.3490%" height="15" fill="rgb(253,97,22)" fg:x="20991" fg:w="347"/><text x="21.3630%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (250 samples, 0.25%)</title><rect x="21.4621%" y="805" width="0.2515%" height="15" fill="rgb(241,101,14)" fg:x="21338" fg:w="250"/><text x="21.7121%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (15 samples, 0.02%)</title><rect x="21.6984%" y="789" width="0.0151%" height="15" fill="rgb(238,103,29)" fg:x="21573" fg:w="15"/><text x="21.9484%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::left_edge (39 samples, 0.04%)</title><rect x="21.7135%" y="805" width="0.0392%" height="15" fill="rgb(233,195,47)" fg:x="21588" fg:w="39"/><text x="21.9635%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (187 samples, 0.19%)</title><rect x="21.7527%" y="805" width="0.1881%" height="15" fill="rgb(246,218,30)" fg:x="21627" fg:w="187"/><text x="22.0027%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (105 samples, 0.11%)</title><rect x="21.9408%" y="805" width="0.1056%" height="15" fill="rgb(219,145,47)" fg:x="21814" fg:w="105"/><text x="22.1908%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (19 samples, 0.02%)</title><rect x="22.0464%" y="805" width="0.0191%" height="15" fill="rgb(243,12,26)" fg:x="21919" fg:w="19"/><text x="22.2964%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (208 samples, 0.21%)</title><rect x="22.0726%" y="805" width="0.2092%" height="15" fill="rgb(214,87,16)" fg:x="21945" fg:w="208"/><text x="22.3226%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::forget_node_type (95 samples, 0.10%)</title><rect x="22.2818%" y="805" width="0.0956%" height="15" fill="rgb(208,99,42)" fg:x="22153" fg:w="95"/><text x="22.5318%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (324 samples, 0.33%)</title><rect x="22.3773%" y="805" width="0.3259%" height="15" fill="rgb(253,99,2)" fg:x="22248" fg:w="324"/><text x="22.6273%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (198 samples, 0.20%)</title><rect x="22.7032%" y="805" width="0.1992%" height="15" fill="rgb(220,168,23)" fg:x="22572" fg:w="198"/><text x="22.9532%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,HandleType&gt;::reborrow_mut (21 samples, 0.02%)</title><rect x="22.9024%" y="805" width="0.0211%" height="15" fill="rgb(242,38,24)" fg:x="22770" fg:w="21"/><text x="23.1524%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (55 samples, 0.06%)</title><rect x="22.9406%" y="805" width="0.0553%" height="15" fill="rgb(225,182,9)" fg:x="22808" fg:w="55"/><text x="23.1906%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (43 samples, 0.04%)</title><rect x="22.9959%" y="805" width="0.0432%" height="15" fill="rgb(243,178,37)" fg:x="22863" fg:w="43"/><text x="23.2459%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (156 samples, 0.16%)</title><rect x="23.0392%" y="805" width="0.1569%" height="15" fill="rgb(232,139,19)" fg:x="22906" fg:w="156"/><text x="23.2892%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (35 samples, 0.04%)</title><rect x="23.1961%" y="805" width="0.0352%" height="15" fill="rgb(225,201,24)" fg:x="23062" fg:w="35"/><text x="23.4461%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::cast_to_leaf_unchecked (23 samples, 0.02%)</title><rect x="23.2323%" y="805" width="0.0231%" height="15" fill="rgb(221,47,46)" fg:x="23098" fg:w="23"/><text x="23.4823%" y="815.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (47 samples, 0.05%)</title><rect x="23.2675%" y="805" width="0.0473%" height="15" fill="rgb(249,23,13)" fg:x="23133" fg:w="47"/><text x="23.5175%" y="815.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (76 samples, 0.08%)</title><rect x="23.3148%" y="805" width="0.0764%" height="15" fill="rgb(219,9,5)" fg:x="23180" fg:w="76"/><text x="23.5648%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (358 samples, 0.36%)</title><rect x="23.3912%" y="805" width="0.3601%" height="15" fill="rgb(254,171,16)" fg:x="23256" fg:w="358"/><text x="23.6412%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (151 samples, 0.15%)</title><rect x="23.7513%" y="805" width="0.1519%" height="15" fill="rgb(230,171,20)" fg:x="23614" fg:w="151"/><text x="24.0013%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::first_edge (190 samples, 0.19%)</title><rect x="23.9092%" y="805" width="0.1911%" height="15" fill="rgb(210,71,41)" fg:x="23771" fg:w="190"/><text x="24.1592%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (116 samples, 0.12%)</title><rect x="24.1003%" y="805" width="0.1167%" height="15" fill="rgb(206,173,20)" fg:x="23961" fg:w="116"/><text x="24.3503%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (337 samples, 0.34%)</title><rect x="24.2170%" y="805" width="0.3390%" height="15" fill="rgb(233,88,34)" fg:x="24077" fg:w="337"/><text x="24.4670%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (151 samples, 0.15%)</title><rect x="24.5559%" y="805" width="0.1519%" height="15" fill="rgb(223,209,46)" fg:x="24414" fg:w="151"/><text x="24.8059%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;::forget_type (110 samples, 0.11%)</title><rect x="24.7249%" y="805" width="0.1106%" height="15" fill="rgb(250,43,18)" fg:x="24582" fg:w="110"/><text x="24.9749%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (184 samples, 0.19%)</title><rect x="24.8355%" y="805" width="0.1851%" height="15" fill="rgb(208,13,10)" fg:x="24692" fg:w="184"/><text x="25.0855%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (97 samples, 0.10%)</title><rect x="25.0206%" y="805" width="0.0976%" height="15" fill="rgb(212,200,36)" fg:x="24876" fg:w="97"/><text x="25.2706%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (101 samples, 0.10%)</title><rect x="25.1182%" y="805" width="0.1016%" height="15" fill="rgb(225,90,30)" fg:x="24973" fg:w="101"/><text x="25.3682%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (133 samples, 0.13%)</title><rect x="25.2198%" y="805" width="0.1338%" height="15" fill="rgb(236,182,39)" fg:x="25074" fg:w="133"/><text x="25.4698%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (113 samples, 0.11%)</title><rect x="25.3535%" y="805" width="0.1137%" height="15" fill="rgb(212,144,35)" fg:x="25207" fg:w="113"/><text x="25.6035%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (54 samples, 0.05%)</title><rect x="25.4752%" y="805" width="0.0543%" height="15" fill="rgb(228,63,44)" fg:x="25328" fg:w="54"/><text x="25.7252%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::len_mut (67 samples, 0.07%)</title><rect x="25.5296%" y="805" width="0.0674%" height="15" fill="rgb(228,109,6)" fg:x="25382" fg:w="67"/><text x="25.7796%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::reborrow_mut (21 samples, 0.02%)</title><rect x="25.5970%" y="805" width="0.0211%" height="15" fill="rgb(238,117,24)" fg:x="25449" fg:w="21"/><text x="25.8470%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (83 samples, 0.08%)</title><rect x="25.6181%" y="805" width="0.0835%" height="15" fill="rgb(242,26,26)" fg:x="25470" fg:w="83"/><text x="25.8681%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (11 samples, 0.01%)</title><rect x="25.7116%" y="805" width="0.0111%" height="15" fill="rgb(221,92,48)" fg:x="25563" fg:w="11"/><text x="25.9616%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (12 samples, 0.01%)</title><rect x="25.7247%" y="805" width="0.0121%" height="15" fill="rgb(209,209,32)" fg:x="25576" fg:w="12"/><text x="25.9747%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::cast_to_leaf_unchecked (12 samples, 0.01%)</title><rect x="25.7368%" y="805" width="0.0121%" height="15" fill="rgb(221,70,22)" fg:x="25588" fg:w="12"/><text x="25.9868%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (53 samples, 0.05%)</title><rect x="25.7488%" y="805" width="0.0533%" height="15" fill="rgb(248,145,5)" fg:x="25600" fg:w="53"/><text x="25.9988%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (53 samples, 0.05%)</title><rect x="25.8031%" y="805" width="0.0533%" height="15" fill="rgb(226,116,26)" fg:x="25654" fg:w="53"/><text x="26.0531%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::from_new_leaf (70 samples, 0.07%)</title><rect x="25.8715%" y="805" width="0.0704%" height="15" fill="rgb(244,5,17)" fg:x="25722" fg:w="70"/><text x="26.1215%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (68 samples, 0.07%)</title><rect x="25.9419%" y="805" width="0.0684%" height="15" fill="rgb(252,159,33)" fg:x="25792" fg:w="68"/><text x="26.1919%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (102 samples, 0.10%)</title><rect x="26.0103%" y="805" width="0.1026%" height="15" fill="rgb(206,71,0)" fg:x="25860" fg:w="102"/><text x="26.2603%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,Type&gt;::into_key_val_mut_at (18 samples, 0.02%)</title><rect x="26.1190%" y="805" width="0.0181%" height="15" fill="rgb(233,118,54)" fg:x="25968" fg:w="18"/><text x="26.3690%" y="815.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (85 samples, 0.09%)</title><rect x="26.1391%" y="805" width="0.0855%" height="15" fill="rgb(234,83,48)" fg:x="25988" fg:w="85"/><text x="26.3891%" y="815.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (69 samples, 0.07%)</title><rect x="26.2246%" y="805" width="0.0694%" height="15" fill="rgb(228,3,54)" fg:x="26073" fg:w="69"/><text x="26.4746%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (16 samples, 0.02%)</title><rect x="26.2779%" y="789" width="0.0161%" height="15" fill="rgb(226,155,13)" fg:x="26126" fg:w="16"/><text x="26.5279%" y="799.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (44 samples, 0.04%)</title><rect x="26.2940%" y="805" width="0.0443%" height="15" fill="rgb(241,28,37)" fg:x="26142" fg:w="44"/><text x="26.5440%" y="815.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (34 samples, 0.03%)</title><rect x="26.3382%" y="805" width="0.0342%" height="15" fill="rgb(233,93,10)" fg:x="26186" fg:w="34"/><text x="26.5882%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (256 samples, 0.26%)</title><rect x="26.3724%" y="805" width="0.2575%" height="15" fill="rgb(225,113,19)" fg:x="26220" fg:w="256"/><text x="26.6224%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (178 samples, 0.18%)</title><rect x="26.6299%" y="805" width="0.1790%" height="15" fill="rgb(241,2,18)" fg:x="26476" fg:w="178"/><text x="26.8799%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (199 samples, 0.20%)</title><rect x="26.8090%" y="805" width="0.2002%" height="15" fill="rgb(228,207,21)" fg:x="26654" fg:w="199"/><text x="27.0590%" y="815.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (13 samples, 0.01%)</title><rect x="27.0111%" y="805" width="0.0131%" height="15" fill="rgb(213,211,35)" fg:x="26855" fg:w="13"/><text x="27.2611%" y="815.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (16 samples, 0.02%)</title><rect x="27.0242%" y="805" width="0.0161%" height="15" fill="rgb(209,83,10)" fg:x="26868" fg:w="16"/><text x="27.2742%" y="815.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (31 samples, 0.03%)</title><rect x="27.0423%" y="805" width="0.0312%" height="15" fill="rgb(209,164,1)" fg:x="26886" fg:w="31"/><text x="27.2923%" y="815.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="27.0735%" y="805" width="0.0262%" height="15" fill="rgb(213,184,43)" fg:x="26917" fg:w="26"/><text x="27.3235%" y="815.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (15 samples, 0.02%)</title><rect x="27.0996%" y="805" width="0.0151%" height="15" fill="rgb(231,61,34)" fg:x="26943" fg:w="15"/><text x="27.3496%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.03%)</title><rect x="27.1177%" y="805" width="0.0282%" height="15" fill="rgb(235,75,3)" fg:x="26961" fg:w="28"/><text x="27.3677%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocator (23 samples, 0.02%)</title><rect x="27.1459%" y="805" width="0.0231%" height="15" fill="rgb(220,106,47)" fg:x="26989" fg:w="23"/><text x="27.3959%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (35 samples, 0.04%)</title><rect x="27.1751%" y="805" width="0.0352%" height="15" fill="rgb(210,196,33)" fg:x="27018" fg:w="35"/><text x="27.4251%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (18 samples, 0.02%)</title><rect x="27.2103%" y="805" width="0.0181%" height="15" fill="rgb(229,154,42)" fg:x="27053" fg:w="18"/><text x="27.4603%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.04%)</title><rect x="27.2284%" y="805" width="0.0392%" height="15" fill="rgb(228,114,26)" fg:x="27071" fg:w="39"/><text x="27.4784%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (12 samples, 0.01%)</title><rect x="27.2726%" y="805" width="0.0121%" height="15" fill="rgb(208,144,1)" fg:x="27115" fg:w="12"/><text x="27.5226%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (227 samples, 0.23%)</title><rect x="27.2847%" y="805" width="0.2283%" height="15" fill="rgb(239,112,37)" fg:x="27127" fg:w="227"/><text x="27.5347%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.05%)</title><rect x="27.5130%" y="805" width="0.0483%" height="15" fill="rgb(210,96,50)" fg:x="27354" fg:w="48"/><text x="27.7630%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (12 samples, 0.01%)</title><rect x="27.5613%" y="805" width="0.0121%" height="15" fill="rgb(222,178,2)" fg:x="27402" fg:w="12"/><text x="27.8113%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (51 samples, 0.05%)</title><rect x="27.5734%" y="805" width="0.0513%" height="15" fill="rgb(226,74,18)" fg:x="27414" fg:w="51"/><text x="27.8234%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.03%)</title><rect x="27.6247%" y="805" width="0.0262%" height="15" fill="rgb(225,67,54)" fg:x="27465" fg:w="26"/><text x="27.8747%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="27.6860%" y="805" width="0.0151%" height="15" fill="rgb(251,92,32)" fg:x="27526" fg:w="15"/><text x="27.9360%" y="815.50"></text></g><g><title>alloc::slice::hack::into_vec (11 samples, 0.01%)</title><rect x="27.7011%" y="805" width="0.0111%" height="15" fill="rgb(228,149,22)" fg:x="27541" fg:w="11"/><text x="27.9511%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="27.7122%" y="805" width="0.0181%" height="15" fill="rgb(243,54,13)" fg:x="27552" fg:w="18"/><text x="27.9622%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::allocator (30 samples, 0.03%)</title><rect x="27.7363%" y="805" width="0.0302%" height="15" fill="rgb(243,180,28)" fg:x="27576" fg:w="30"/><text x="27.9863%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (87 samples, 0.09%)</title><rect x="27.7705%" y="805" width="0.0875%" height="15" fill="rgb(208,167,24)" fg:x="27610" fg:w="87"/><text x="28.0205%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (167 samples, 0.17%)</title><rect x="27.8580%" y="805" width="0.1680%" height="15" fill="rgb(245,73,45)" fg:x="27697" fg:w="167"/><text x="28.1080%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (15 samples, 0.02%)</title><rect x="28.0391%" y="805" width="0.0151%" height="15" fill="rgb(237,203,48)" fg:x="27877" fg:w="15"/><text x="28.2891%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (36 samples, 0.04%)</title><rect x="28.0592%" y="805" width="0.0362%" height="15" fill="rgb(211,197,16)" fg:x="27897" fg:w="36"/><text x="28.3092%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (61 samples, 0.06%)</title><rect x="28.0954%" y="805" width="0.0614%" height="15" fill="rgb(243,99,51)" fg:x="27933" fg:w="61"/><text x="28.3454%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (42 samples, 0.04%)</title><rect x="28.1567%" y="805" width="0.0422%" height="15" fill="rgb(215,123,29)" fg:x="27994" fg:w="42"/><text x="28.4067%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.03%)</title><rect x="28.1990%" y="805" width="0.0322%" height="15" fill="rgb(239,186,37)" fg:x="28036" fg:w="32"/><text x="28.4490%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="28.2453%" y="805" width="0.0272%" height="15" fill="rgb(252,136,39)" fg:x="28082" fg:w="27"/><text x="28.4953%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.02%)</title><rect x="28.2724%" y="805" width="0.0181%" height="15" fill="rgb(223,213,32)" fg:x="28109" fg:w="18"/><text x="28.5224%" y="815.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (20 samples, 0.02%)</title><rect x="28.2915%" y="805" width="0.0201%" height="15" fill="rgb(233,115,5)" fg:x="28128" fg:w="20"/><text x="28.5415%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (18 samples, 0.02%)</title><rect x="28.3499%" y="805" width="0.0181%" height="15" fill="rgb(207,226,44)" fg:x="28186" fg:w="18"/><text x="28.5999%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (41 samples, 0.04%)</title><rect x="28.3680%" y="805" width="0.0412%" height="15" fill="rgb(208,126,0)" fg:x="28204" fg:w="41"/><text x="28.6180%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (11 samples, 0.01%)</title><rect x="28.4092%" y="805" width="0.0111%" height="15" fill="rgb(244,66,21)" fg:x="28245" fg:w="11"/><text x="28.6592%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (20 samples, 0.02%)</title><rect x="28.4203%" y="805" width="0.0201%" height="15" fill="rgb(222,97,12)" fg:x="28256" fg:w="20"/><text x="28.6703%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (10 samples, 0.01%)</title><rect x="28.4404%" y="805" width="0.0101%" height="15" fill="rgb(219,213,19)" fg:x="28276" fg:w="10"/><text x="28.6904%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (25 samples, 0.03%)</title><rect x="28.4595%" y="805" width="0.0251%" height="15" fill="rgb(252,169,30)" fg:x="28295" fg:w="25"/><text x="28.7095%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (40 samples, 0.04%)</title><rect x="28.4846%" y="805" width="0.0402%" height="15" fill="rgb(206,32,51)" fg:x="28320" fg:w="40"/><text x="28.7346%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (15 samples, 0.02%)</title><rect x="28.5420%" y="805" width="0.0151%" height="15" fill="rgb(250,172,42)" fg:x="28377" fg:w="15"/><text x="28.7920%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (25 samples, 0.03%)</title><rect x="28.5631%" y="805" width="0.0251%" height="15" fill="rgb(209,34,43)" fg:x="28398" fg:w="25"/><text x="28.8131%" y="815.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (40 samples, 0.04%)</title><rect x="28.5882%" y="805" width="0.0402%" height="15" fill="rgb(223,11,35)" fg:x="28423" fg:w="40"/><text x="28.8382%" y="815.50"></text></g><g><title>borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt;::remap_refs (13 samples, 0.01%)</title><rect x="28.6456%" y="805" width="0.0131%" height="15" fill="rgb(251,219,26)" fg:x="28480" fg:w="13"/><text x="28.8956%" y="815.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="757" width="0.0111%" height="15" fill="rgb(231,119,3)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="741" width="0.0111%" height="15" fill="rgb(216,97,11)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="28.6888%" y="725" width="0.0111%" height="15" fill="rgb(223,59,9)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="735.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="709" width="0.0111%" height="15" fill="rgb(233,93,31)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="693" width="0.0111%" height="15" fill="rgb(239,81,33)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="677" width="0.0111%" height="15" fill="rgb(213,120,34)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="28.6888%" y="661" width="0.0111%" height="15" fill="rgb(243,49,53)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="645" width="0.0111%" height="15" fill="rgb(247,216,33)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="629" width="0.0111%" height="15" fill="rgb(226,26,14)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="28.6888%" y="613" width="0.0111%" height="15" fill="rgb(215,49,53)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="623.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="597" width="0.0111%" height="15" fill="rgb(245,162,40)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.6888%" y="581" width="0.0111%" height="15" fill="rgb(229,68,17)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="28.6888%" y="565" width="0.0111%" height="15" fill="rgb(213,182,10)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="28.6888%" y="549" width="0.0111%" height="15" fill="rgb(245,125,30)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="28.6888%" y="533" width="0.0111%" height="15" fill="rgb(232,202,2)" fg:x="28523" fg:w="11"/><text x="28.9388%" y="543.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (20 samples, 0.02%)</title><rect x="28.6888%" y="789" width="0.0201%" height="15" fill="rgb(237,140,51)" fg:x="28523" fg:w="20"/><text x="28.9388%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (20 samples, 0.02%)</title><rect x="28.6888%" y="773" width="0.0201%" height="15" fill="rgb(236,157,25)" fg:x="28523" fg:w="20"/><text x="28.9388%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="28.7130%" y="485" width="0.0101%" height="15" fill="rgb(219,209,0)" fg:x="28547" fg:w="10"/><text x="28.9630%" y="495.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="789" width="0.0151%" height="15" fill="rgb(240,116,54)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="799.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="773" width="0.0151%" height="15" fill="rgb(216,10,36)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="757" width="0.0151%" height="15" fill="rgb(222,72,44)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.02%)</title><rect x="28.7089%" y="741" width="0.0151%" height="15" fill="rgb(232,159,9)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="751.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="725" width="0.0151%" height="15" fill="rgb(210,39,32)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="735.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="709" width="0.0151%" height="15" fill="rgb(216,194,45)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="693" width="0.0151%" height="15" fill="rgb(218,18,35)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.02%)</title><rect x="28.7089%" y="677" width="0.0151%" height="15" fill="rgb(207,83,51)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="661" width="0.0151%" height="15" fill="rgb(225,63,43)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="645" width="0.0151%" height="15" fill="rgb(207,57,36)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 0.02%)</title><rect x="28.7089%" y="629" width="0.0151%" height="15" fill="rgb(216,99,33)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="639.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="613" width="0.0151%" height="15" fill="rgb(225,42,16)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7089%" y="597" width="0.0151%" height="15" fill="rgb(220,201,45)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="28.7089%" y="581" width="0.0151%" height="15" fill="rgb(225,33,4)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="28.7089%" y="565" width="0.0151%" height="15" fill="rgb(224,33,50)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="28.7089%" y="549" width="0.0151%" height="15" fill="rgb(246,198,51)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="28.7089%" y="533" width="0.0151%" height="15" fill="rgb(205,22,4)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="28.7089%" y="517" width="0.0151%" height="15" fill="rgb(206,3,8)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="28.7089%" y="501" width="0.0151%" height="15" fill="rgb(251,23,15)" fg:x="28543" fg:w="15"/><text x="28.9589%" y="511.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7250%" y="581" width="0.0151%" height="15" fill="rgb(252,88,28)" fg:x="28559" fg:w="15"/><text x="28.9750%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="28.7250%" y="565" width="0.0151%" height="15" fill="rgb(212,127,14)" fg:x="28559" fg:w="15"/><text x="28.9750%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="28.7260%" y="549" width="0.0141%" height="15" fill="rgb(247,145,37)" fg:x="28560" fg:w="14"/><text x="28.9760%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="28.7260%" y="533" width="0.0141%" height="15" fill="rgb(209,117,53)" fg:x="28560" fg:w="14"/><text x="28.9760%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="28.7270%" y="517" width="0.0131%" height="15" fill="rgb(212,90,42)" fg:x="28561" fg:w="13"/><text x="28.9770%" y="527.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="741" width="0.0342%" height="15" fill="rgb(218,164,37)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="725" width="0.0342%" height="15" fill="rgb(246,65,34)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.03%)</title><rect x="28.7240%" y="709" width="0.0342%" height="15" fill="rgb(231,100,33)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="693" width="0.0342%" height="15" fill="rgb(228,126,14)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="703.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="677" width="0.0342%" height="15" fill="rgb(215,173,21)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="661" width="0.0342%" height="15" fill="rgb(210,6,40)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.03%)</title><rect x="28.7240%" y="645" width="0.0342%" height="15" fill="rgb(212,48,18)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="629" width="0.0342%" height="15" fill="rgb(230,214,11)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="28.7240%" y="613" width="0.0342%" height="15" fill="rgb(254,105,39)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.03%)</title><rect x="28.7240%" y="597" width="0.0342%" height="15" fill="rgb(245,158,5)" fg:x="28558" fg:w="34"/><text x="28.9740%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (17 samples, 0.02%)</title><rect x="28.7985%" y="645" width="0.0171%" height="15" fill="rgb(249,208,11)" fg:x="28632" fg:w="17"/><text x="29.0485%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (20 samples, 0.02%)</title><rect x="28.8186%" y="645" width="0.0201%" height="15" fill="rgb(210,39,28)" fg:x="28652" fg:w="20"/><text x="29.0686%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="28.8709%" y="613" width="0.0171%" height="15" fill="rgb(211,56,53)" fg:x="28704" fg:w="17"/><text x="29.1209%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (27 samples, 0.03%)</title><rect x="28.8618%" y="629" width="0.0272%" height="15" fill="rgb(226,201,30)" fg:x="28695" fg:w="27"/><text x="29.1118%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (122 samples, 0.12%)</title><rect x="28.7824%" y="661" width="0.1227%" height="15" fill="rgb(239,101,34)" fg:x="28616" fg:w="122"/><text x="29.0324%" y="671.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (66 samples, 0.07%)</title><rect x="28.8387%" y="645" width="0.0664%" height="15" fill="rgb(226,209,5)" fg:x="28672" fg:w="66"/><text x="29.0887%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (150 samples, 0.15%)</title><rect x="28.7582%" y="725" width="0.1509%" height="15" fill="rgb(250,105,47)" fg:x="28592" fg:w="150"/><text x="29.0082%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (150 samples, 0.15%)</title><rect x="28.7582%" y="709" width="0.1509%" height="15" fill="rgb(230,72,3)" fg:x="28592" fg:w="150"/><text x="29.0082%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (150 samples, 0.15%)</title><rect x="28.7582%" y="693" width="0.1509%" height="15" fill="rgb(232,218,39)" fg:x="28592" fg:w="150"/><text x="29.0082%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (150 samples, 0.15%)</title><rect x="28.7582%" y="677" width="0.1509%" height="15" fill="rgb(248,166,6)" fg:x="28592" fg:w="150"/><text x="29.0082%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (155 samples, 0.16%)</title><rect x="28.7582%" y="741" width="0.1559%" height="15" fill="rgb(247,89,20)" fg:x="28592" fg:w="155"/><text x="29.0082%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (13 samples, 0.01%)</title><rect x="28.9141%" y="533" width="0.0131%" height="15" fill="rgb(248,130,54)" fg:x="28747" fg:w="13"/><text x="29.1641%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::split_leaf_data (16 samples, 0.02%)</title><rect x="28.9272%" y="517" width="0.0161%" height="15" fill="rgb(234,196,4)" fg:x="28760" fg:w="16"/><text x="29.1772%" y="527.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (223 samples, 0.22%)</title><rect x="28.7240%" y="773" width="0.2243%" height="15" fill="rgb(250,143,31)" fg:x="28558" fg:w="223"/><text x="28.9740%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (223 samples, 0.22%)</title><rect x="28.7240%" y="757" width="0.2243%" height="15" fill="rgb(211,110,34)" fg:x="28558" fg:w="223"/><text x="28.9740%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.03%)</title><rect x="28.9141%" y="741" width="0.0342%" height="15" fill="rgb(215,124,48)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="28.9141%" y="725" width="0.0342%" height="15" fill="rgb(216,46,13)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (34 samples, 0.03%)</title><rect x="28.9141%" y="709" width="0.0342%" height="15" fill="rgb(205,184,25)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 0.03%)</title><rect x="28.9141%" y="693" width="0.0342%" height="15" fill="rgb(228,1,10)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.03%)</title><rect x="28.9141%" y="677" width="0.0342%" height="15" fill="rgb(213,116,27)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.03%)</title><rect x="28.9141%" y="661" width="0.0342%" height="15" fill="rgb(241,95,50)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (34 samples, 0.03%)</title><rect x="28.9141%" y="645" width="0.0342%" height="15" fill="rgb(238,48,32)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (34 samples, 0.03%)</title><rect x="28.9141%" y="629" width="0.0342%" height="15" fill="rgb(235,113,49)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (34 samples, 0.03%)</title><rect x="28.9141%" y="613" width="0.0342%" height="15" fill="rgb(205,127,43)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (34 samples, 0.03%)</title><rect x="28.9141%" y="597" width="0.0342%" height="15" fill="rgb(250,162,2)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (34 samples, 0.03%)</title><rect x="28.9141%" y="581" width="0.0342%" height="15" fill="rgb(220,13,41)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (34 samples, 0.03%)</title><rect x="28.9141%" y="565" width="0.0342%" height="15" fill="rgb(249,221,25)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (34 samples, 0.03%)</title><rect x="28.9141%" y="549" width="0.0342%" height="15" fill="rgb(215,208,19)" fg:x="28747" fg:w="34"/><text x="29.1641%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (21 samples, 0.02%)</title><rect x="28.9272%" y="533" width="0.0211%" height="15" fill="rgb(236,175,2)" fg:x="28760" fg:w="21"/><text x="29.1772%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="28.9654%" y="517" width="0.0201%" height="15" fill="rgb(241,52,2)" fg:x="28798" fg:w="20"/><text x="29.2154%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="28.9674%" y="501" width="0.0181%" height="15" fill="rgb(248,140,14)" fg:x="28800" fg:w="18"/><text x="29.2174%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="28.9674%" y="485" width="0.0181%" height="15" fill="rgb(253,22,42)" fg:x="28800" fg:w="18"/><text x="29.2174%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="28.9694%" y="469" width="0.0161%" height="15" fill="rgb(234,61,47)" fg:x="28802" fg:w="16"/><text x="29.2194%" y="479.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="28.9483%" y="597" width="0.0443%" height="15" fill="rgb(208,226,15)" fg:x="28781" fg:w="44"/><text x="29.1983%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="28.9483%" y="581" width="0.0443%" height="15" fill="rgb(217,221,4)" fg:x="28781" fg:w="44"/><text x="29.1983%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.04%)</title><rect x="28.9503%" y="565" width="0.0422%" height="15" fill="rgb(212,174,34)" fg:x="28783" fg:w="42"/><text x="29.2003%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.04%)</title><rect x="28.9503%" y="549" width="0.0422%" height="15" fill="rgb(253,83,4)" fg:x="28783" fg:w="42"/><text x="29.2003%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="28.9503%" y="533" width="0.0422%" height="15" fill="rgb(250,195,49)" fg:x="28783" fg:w="42"/><text x="29.2003%" y="543.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (330 samples, 0.33%)</title><rect x="28.6798%" y="805" width="0.3319%" height="15" fill="rgb(241,192,25)" fg:x="28514" fg:w="330"/><text x="28.9298%" y="815.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (286 samples, 0.29%)</title><rect x="28.7240%" y="789" width="0.2877%" height="15" fill="rgb(208,124,10)" fg:x="28558" fg:w="286"/><text x="28.9740%" y="799.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="773" width="0.0634%" height="15" fill="rgb(222,33,0)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="783.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="757" width="0.0634%" height="15" fill="rgb(234,209,28)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="741" width="0.0634%" height="15" fill="rgb(224,11,23)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (63 samples, 0.06%)</title><rect x="28.9483%" y="725" width="0.0634%" height="15" fill="rgb(232,99,1)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="735.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="709" width="0.0634%" height="15" fill="rgb(237,95,45)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="693" width="0.0634%" height="15" fill="rgb(208,109,11)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="677" width="0.0634%" height="15" fill="rgb(216,190,48)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (63 samples, 0.06%)</title><rect x="28.9483%" y="661" width="0.0634%" height="15" fill="rgb(251,171,36)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="645" width="0.0634%" height="15" fill="rgb(230,62,22)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="28.9483%" y="629" width="0.0634%" height="15" fill="rgb(225,114,35)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (63 samples, 0.06%)</title><rect x="28.9483%" y="613" width="0.0634%" height="15" fill="rgb(215,118,42)" fg:x="28781" fg:w="63"/><text x="29.1983%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (13 samples, 0.01%)</title><rect x="28.9986%" y="597" width="0.0131%" height="15" fill="rgb(243,119,21)" fg:x="28831" fg:w="13"/><text x="29.2486%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (13 samples, 0.01%)</title><rect x="28.9986%" y="581" width="0.0131%" height="15" fill="rgb(252,177,53)" fg:x="28831" fg:w="13"/><text x="29.2486%" y="591.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="28.9986%" y="565" width="0.0131%" height="15" fill="rgb(237,209,29)" fg:x="28831" fg:w="13"/><text x="29.2486%" y="575.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (27 samples, 0.03%)</title><rect x="29.0117%" y="805" width="0.0272%" height="15" fill="rgb(212,65,23)" fg:x="28844" fg:w="27"/><text x="29.2617%" y="815.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (11 samples, 0.01%)</title><rect x="29.0278%" y="789" width="0.0111%" height="15" fill="rgb(230,222,46)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (11 samples, 0.01%)</title><rect x="29.0278%" y="773" width="0.0111%" height="15" fill="rgb(215,135,32)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="783.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="757" width="0.0111%" height="15" fill="rgb(246,101,22)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="741" width="0.0111%" height="15" fill="rgb(206,107,13)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="29.0278%" y="725" width="0.0111%" height="15" fill="rgb(250,100,44)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="735.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="709" width="0.0111%" height="15" fill="rgb(231,147,38)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="693" width="0.0111%" height="15" fill="rgb(229,8,40)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="677" width="0.0111%" height="15" fill="rgb(221,135,30)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="29.0278%" y="661" width="0.0111%" height="15" fill="rgb(249,193,18)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="645" width="0.0111%" height="15" fill="rgb(209,133,39)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="629" width="0.0111%" height="15" fill="rgb(232,100,14)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.01%)</title><rect x="29.0278%" y="613" width="0.0111%" height="15" fill="rgb(224,185,1)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="623.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="597" width="0.0111%" height="15" fill="rgb(223,139,8)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="29.0278%" y="581" width="0.0111%" height="15" fill="rgb(232,213,38)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="29.0278%" y="565" width="0.0111%" height="15" fill="rgb(207,94,22)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="29.0278%" y="549" width="0.0111%" height="15" fill="rgb(219,183,54)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="29.0278%" y="533" width="0.0111%" height="15" fill="rgb(216,185,54)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="29.0278%" y="517" width="0.0111%" height="15" fill="rgb(254,217,39)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="29.0278%" y="501" width="0.0111%" height="15" fill="rgb(240,178,23)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="29.0278%" y="485" width="0.0111%" height="15" fill="rgb(218,11,47)" fg:x="28860" fg:w="11"/><text x="29.2778%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="29.0288%" y="469" width="0.0101%" height="15" fill="rgb(218,51,51)" fg:x="28861" fg:w="10"/><text x="29.2788%" y="479.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (20 samples, 0.02%)</title><rect x="29.0811%" y="773" width="0.0201%" height="15" fill="rgb(238,126,27)" fg:x="28913" fg:w="20"/><text x="29.3311%" y="783.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (20 samples, 0.02%)</title><rect x="29.0811%" y="757" width="0.0201%" height="15" fill="rgb(249,202,22)" fg:x="28913" fg:w="20"/><text x="29.3311%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (20 samples, 0.02%)</title><rect x="29.0811%" y="741" width="0.0201%" height="15" fill="rgb(254,195,49)" fg:x="28913" fg:w="20"/><text x="29.3311%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="29.0811%" y="725" width="0.0201%" height="15" fill="rgb(208,123,14)" fg:x="28913" fg:w="20"/><text x="29.3311%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="29.0811%" y="709" width="0.0201%" height="15" fill="rgb(224,200,8)" fg:x="28913" fg:w="20"/><text x="29.3311%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 0.01%)</title><rect x="29.0871%" y="693" width="0.0141%" height="15" fill="rgb(217,61,36)" fg:x="28919" fg:w="14"/><text x="29.3371%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="29.0871%" y="677" width="0.0141%" height="15" fill="rgb(206,35,45)" fg:x="28919" fg:w="14"/><text x="29.3371%" y="687.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_signatures (10 samples, 0.01%)</title><rect x="29.1042%" y="773" width="0.0101%" height="15" fill="rgb(217,65,33)" fg:x="28936" fg:w="10"/><text x="29.3542%" y="783.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (10 samples, 0.01%)</title><rect x="29.1042%" y="757" width="0.0101%" height="15" fill="rgb(222,158,48)" fg:x="28936" fg:w="10"/><text x="29.3542%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (10 samples, 0.01%)</title><rect x="29.1042%" y="741" width="0.0101%" height="15" fill="rgb(254,2,54)" fg:x="28936" fg:w="10"/><text x="29.3542%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (10 samples, 0.01%)</title><rect x="29.1042%" y="725" width="0.0101%" height="15" fill="rgb(250,143,38)" fg:x="28936" fg:w="10"/><text x="29.3542%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.01%)</title><rect x="29.1042%" y="709" width="0.0101%" height="15" fill="rgb(248,25,0)" fg:x="28936" fg:w="10"/><text x="29.3542%" y="719.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module (69 samples, 0.07%)</title><rect x="29.0590%" y="805" width="0.0694%" height="15" fill="rgb(206,152,27)" fg:x="28891" fg:w="69"/><text x="29.3090%" y="815.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (69 samples, 0.07%)</title><rect x="29.0590%" y="789" width="0.0694%" height="15" fill="rgb(240,77,30)" fg:x="28891" fg:w="69"/><text x="29.3090%" y="799.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (19 samples, 0.02%)</title><rect x="29.1414%" y="645" width="0.0191%" height="15" fill="rgb(231,5,3)" fg:x="28973" fg:w="19"/><text x="29.3914%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="29.1414%" y="629" width="0.0191%" height="15" fill="rgb(207,226,32)" fg:x="28973" fg:w="19"/><text x="29.3914%" y="639.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_constants (41 samples, 0.04%)</title><rect x="29.1304%" y="789" width="0.0412%" height="15" fill="rgb(222,207,47)" fg:x="28962" fg:w="41"/><text x="29.3804%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (41 samples, 0.04%)</title><rect x="29.1304%" y="773" width="0.0412%" height="15" fill="rgb(229,115,45)" fg:x="28962" fg:w="41"/><text x="29.3804%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (41 samples, 0.04%)</title><rect x="29.1304%" y="757" width="0.0412%" height="15" fill="rgb(224,191,6)" fg:x="28962" fg:w="41"/><text x="29.3804%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (41 samples, 0.04%)</title><rect x="29.1304%" y="741" width="0.0412%" height="15" fill="rgb(230,227,24)" fg:x="28962" fg:w="41"/><text x="29.3804%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (41 samples, 0.04%)</title><rect x="29.1304%" y="725" width="0.0412%" height="15" fill="rgb(228,80,19)" fg:x="28962" fg:w="41"/><text x="29.3804%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (34 samples, 0.03%)</title><rect x="29.1374%" y="709" width="0.0342%" height="15" fill="rgb(247,229,0)" fg:x="28969" fg:w="34"/><text x="29.3874%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="29.1374%" y="693" width="0.0342%" height="15" fill="rgb(237,194,15)" fg:x="28969" fg:w="34"/><text x="29.3874%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.03%)</title><rect x="29.1374%" y="677" width="0.0342%" height="15" fill="rgb(219,203,20)" fg:x="28969" fg:w="34"/><text x="29.3874%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (34 samples, 0.03%)</title><rect x="29.1374%" y="661" width="0.0342%" height="15" fill="rgb(234,128,8)" fg:x="28969" fg:w="34"/><text x="29.3874%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_field_handles (15 samples, 0.02%)</title><rect x="29.1716%" y="789" width="0.0151%" height="15" fill="rgb(248,202,8)" fg:x="29003" fg:w="15"/><text x="29.4216%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (15 samples, 0.02%)</title><rect x="29.1716%" y="773" width="0.0151%" height="15" fill="rgb(206,104,37)" fg:x="29003" fg:w="15"/><text x="29.4216%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (15 samples, 0.02%)</title><rect x="29.1716%" y="757" width="0.0151%" height="15" fill="rgb(223,8,27)" fg:x="29003" fg:w="15"/><text x="29.4216%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (15 samples, 0.02%)</title><rect x="29.1716%" y="741" width="0.0151%" height="15" fill="rgb(216,217,28)" fg:x="29003" fg:w="15"/><text x="29.4216%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.02%)</title><rect x="29.1716%" y="725" width="0.0151%" height="15" fill="rgb(249,199,1)" fg:x="29003" fg:w="15"/><text x="29.4216%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.01%)</title><rect x="29.1726%" y="709" width="0.0141%" height="15" fill="rgb(240,85,17)" fg:x="29004" fg:w="14"/><text x="29.4226%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="29.1726%" y="693" width="0.0141%" height="15" fill="rgb(206,108,45)" fg:x="29004" fg:w="14"/><text x="29.4226%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.01%)</title><rect x="29.1726%" y="677" width="0.0141%" height="15" fill="rgb(245,210,41)" fg:x="29004" fg:w="14"/><text x="29.4226%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (14 samples, 0.01%)</title><rect x="29.1726%" y="661" width="0.0141%" height="15" fill="rgb(206,13,37)" fg:x="29004" fg:w="14"/><text x="29.4226%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="29.2058%" y="645" width="0.0101%" height="15" fill="rgb(250,61,18)" fg:x="29037" fg:w="10"/><text x="29.4558%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.03%)</title><rect x="29.2048%" y="693" width="0.0251%" height="15" fill="rgb(235,172,48)" fg:x="29036" fg:w="25"/><text x="29.4548%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.03%)</title><rect x="29.2048%" y="677" width="0.0251%" height="15" fill="rgb(249,201,17)" fg:x="29036" fg:w="25"/><text x="29.4548%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="29.2058%" y="661" width="0.0241%" height="15" fill="rgb(219,208,6)" fg:x="29037" fg:w="24"/><text x="29.4558%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="29.2159%" y="645" width="0.0141%" height="15" fill="rgb(248,31,23)" fg:x="29047" fg:w="14"/><text x="29.4659%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (32 samples, 0.03%)</title><rect x="29.2028%" y="709" width="0.0322%" height="15" fill="rgb(245,15,42)" fg:x="29034" fg:w="32"/><text x="29.4528%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="29.2400%" y="677" width="0.0171%" height="15" fill="rgb(222,217,39)" fg:x="29071" fg:w="17"/><text x="29.4900%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="29.2420%" y="661" width="0.0151%" height="15" fill="rgb(210,219,27)" fg:x="29073" fg:w="15"/><text x="29.4920%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (12 samples, 0.01%)</title><rect x="29.2450%" y="645" width="0.0121%" height="15" fill="rgb(252,166,36)" fg:x="29076" fg:w="12"/><text x="29.4950%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.01%)</title><rect x="29.2450%" y="629" width="0.0121%" height="15" fill="rgb(245,132,34)" fg:x="29076" fg:w="12"/><text x="29.4950%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (38 samples, 0.04%)</title><rect x="29.2350%" y="709" width="0.0382%" height="15" fill="rgb(236,54,3)" fg:x="29066" fg:w="38"/><text x="29.4850%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.04%)</title><rect x="29.2350%" y="693" width="0.0382%" height="15" fill="rgb(241,173,43)" fg:x="29066" fg:w="38"/><text x="29.4850%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (15 samples, 0.02%)</title><rect x="29.2581%" y="677" width="0.0151%" height="15" fill="rgb(215,190,9)" fg:x="29089" fg:w="15"/><text x="29.5081%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (15 samples, 0.02%)</title><rect x="29.2581%" y="661" width="0.0151%" height="15" fill="rgb(242,101,16)" fg:x="29089" fg:w="15"/><text x="29.5081%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (13 samples, 0.01%)</title><rect x="29.2601%" y="645" width="0.0131%" height="15" fill="rgb(223,190,21)" fg:x="29091" fg:w="13"/><text x="29.5101%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="29.2631%" y="629" width="0.0101%" height="15" fill="rgb(215,228,25)" fg:x="29094" fg:w="10"/><text x="29.5131%" y="639.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (10 samples, 0.01%)</title><rect x="29.2923%" y="645" width="0.0101%" height="15" fill="rgb(225,36,22)" fg:x="29123" fg:w="10"/><text x="29.5423%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="29.2923%" y="629" width="0.0101%" height="15" fill="rgb(251,106,46)" fg:x="29123" fg:w="10"/><text x="29.5423%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.01%)</title><rect x="29.3134%" y="629" width="0.0111%" height="15" fill="rgb(208,90,1)" fg:x="29144" fg:w="11"/><text x="29.5634%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (16 samples, 0.02%)</title><rect x="29.3124%" y="645" width="0.0161%" height="15" fill="rgb(243,10,4)" fg:x="29143" fg:w="16"/><text x="29.5624%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (15 samples, 0.02%)</title><rect x="29.3285%" y="645" width="0.0151%" height="15" fill="rgb(212,137,27)" fg:x="29159" fg:w="15"/><text x="29.5785%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (14 samples, 0.01%)</title><rect x="29.3295%" y="629" width="0.0141%" height="15" fill="rgb(231,220,49)" fg:x="29160" fg:w="14"/><text x="29.5795%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (14 samples, 0.01%)</title><rect x="29.3295%" y="613" width="0.0141%" height="15" fill="rgb(237,96,20)" fg:x="29160" fg:w="14"/><text x="29.5795%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (65 samples, 0.07%)</title><rect x="29.2792%" y="693" width="0.0654%" height="15" fill="rgb(239,229,30)" fg:x="29110" fg:w="65"/><text x="29.5292%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (65 samples, 0.07%)</title><rect x="29.2792%" y="677" width="0.0654%" height="15" fill="rgb(219,65,33)" fg:x="29110" fg:w="65"/><text x="29.5292%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (62 samples, 0.06%)</title><rect x="29.2823%" y="661" width="0.0624%" height="15" fill="rgb(243,134,7)" fg:x="29113" fg:w="62"/><text x="29.5323%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (20 samples, 0.02%)</title><rect x="29.3456%" y="693" width="0.0201%" height="15" fill="rgb(216,177,54)" fg:x="29176" fg:w="20"/><text x="29.5956%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (163 samples, 0.16%)</title><rect x="29.2028%" y="757" width="0.1639%" height="15" fill="rgb(211,160,20)" fg:x="29034" fg:w="163"/><text x="29.4528%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (163 samples, 0.16%)</title><rect x="29.2028%" y="741" width="0.1639%" height="15" fill="rgb(239,85,39)" fg:x="29034" fg:w="163"/><text x="29.4528%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (163 samples, 0.16%)</title><rect x="29.2028%" y="725" width="0.1639%" height="15" fill="rgb(232,125,22)" fg:x="29034" fg:w="163"/><text x="29.4528%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (93 samples, 0.09%)</title><rect x="29.2732%" y="709" width="0.0935%" height="15" fill="rgb(244,57,34)" fg:x="29104" fg:w="93"/><text x="29.5232%" y="719.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (175 samples, 0.18%)</title><rect x="29.1947%" y="773" width="0.1760%" height="15" fill="rgb(214,203,32)" fg:x="29026" fg:w="175"/><text x="29.4447%" y="783.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.01%)</title><rect x="29.3748%" y="549" width="0.0121%" height="15" fill="rgb(207,58,43)" fg:x="29205" fg:w="12"/><text x="29.6248%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 0.01%)</title><rect x="29.3869%" y="549" width="0.0141%" height="15" fill="rgb(215,193,15)" fg:x="29217" fg:w="14"/><text x="29.6369%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.01%)</title><rect x="29.3879%" y="533" width="0.0131%" height="15" fill="rgb(232,15,44)" fg:x="29218" fg:w="13"/><text x="29.6379%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (41 samples, 0.04%)</title><rect x="29.3708%" y="693" width="0.0412%" height="15" fill="rgb(212,3,48)" fg:x="29201" fg:w="41"/><text x="29.6208%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.04%)</title><rect x="29.3708%" y="677" width="0.0412%" height="15" fill="rgb(218,128,7)" fg:x="29201" fg:w="41"/><text x="29.6208%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.04%)</title><rect x="29.3708%" y="661" width="0.0412%" height="15" fill="rgb(226,216,39)" fg:x="29201" fg:w="41"/><text x="29.6208%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 0.04%)</title><rect x="29.3718%" y="645" width="0.0402%" height="15" fill="rgb(243,47,51)" fg:x="29202" fg:w="40"/><text x="29.6218%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (37 samples, 0.04%)</title><rect x="29.3748%" y="629" width="0.0372%" height="15" fill="rgb(241,183,40)" fg:x="29205" fg:w="37"/><text x="29.6248%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (37 samples, 0.04%)</title><rect x="29.3748%" y="613" width="0.0372%" height="15" fill="rgb(231,217,32)" fg:x="29205" fg:w="37"/><text x="29.6248%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (37 samples, 0.04%)</title><rect x="29.3748%" y="597" width="0.0372%" height="15" fill="rgb(229,61,38)" fg:x="29205" fg:w="37"/><text x="29.6248%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (37 samples, 0.04%)</title><rect x="29.3748%" y="581" width="0.0372%" height="15" fill="rgb(225,210,5)" fg:x="29205" fg:w="37"/><text x="29.6248%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.04%)</title><rect x="29.3748%" y="565" width="0.0372%" height="15" fill="rgb(231,79,45)" fg:x="29205" fg:w="37"/><text x="29.6248%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.01%)</title><rect x="29.4009%" y="549" width="0.0111%" height="15" fill="rgb(224,100,7)" fg:x="29231" fg:w="11"/><text x="29.6509%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.04%)</title><rect x="29.3708%" y="773" width="0.0432%" height="15" fill="rgb(241,198,18)" fg:x="29201" fg:w="43"/><text x="29.6208%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.04%)</title><rect x="29.3708%" y="757" width="0.0432%" height="15" fill="rgb(252,97,53)" fg:x="29201" fg:w="43"/><text x="29.6208%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (43 samples, 0.04%)</title><rect x="29.3708%" y="741" width="0.0432%" height="15" fill="rgb(220,88,7)" fg:x="29201" fg:w="43"/><text x="29.6208%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (43 samples, 0.04%)</title><rect x="29.3708%" y="725" width="0.0432%" height="15" fill="rgb(213,176,14)" fg:x="29201" fg:w="43"/><text x="29.6208%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (43 samples, 0.04%)</title><rect x="29.3708%" y="709" width="0.0432%" height="15" fill="rgb(246,73,7)" fg:x="29201" fg:w="43"/><text x="29.6208%" y="719.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (11 samples, 0.01%)</title><rect x="29.4140%" y="709" width="0.0111%" height="15" fill="rgb(245,64,36)" fg:x="29244" fg:w="11"/><text x="29.6640%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.01%)</title><rect x="29.4261%" y="645" width="0.0131%" height="15" fill="rgb(245,80,10)" fg:x="29256" fg:w="13"/><text x="29.6761%" y="655.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions (260 samples, 0.26%)</title><rect x="29.1937%" y="789" width="0.2615%" height="15" fill="rgb(232,107,50)" fg:x="29025" fg:w="260"/><text x="29.4437%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (41 samples, 0.04%)</title><rect x="29.4140%" y="773" width="0.0412%" height="15" fill="rgb(253,3,0)" fg:x="29244" fg:w="41"/><text x="29.6640%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.04%)</title><rect x="29.4140%" y="757" width="0.0412%" height="15" fill="rgb(212,99,53)" fg:x="29244" fg:w="41"/><text x="29.6640%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (41 samples, 0.04%)</title><rect x="29.4140%" y="741" width="0.0412%" height="15" fill="rgb(249,111,54)" fg:x="29244" fg:w="41"/><text x="29.6640%" y="751.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions::_{{closure}} (41 samples, 0.04%)</title><rect x="29.4140%" y="725" width="0.0412%" height="15" fill="rgb(249,55,30)" fg:x="29244" fg:w="41"/><text x="29.6640%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30 samples, 0.03%)</title><rect x="29.4251%" y="709" width="0.0302%" height="15" fill="rgb(237,47,42)" fg:x="29255" fg:w="30"/><text x="29.6751%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30 samples, 0.03%)</title><rect x="29.4251%" y="693" width="0.0302%" height="15" fill="rgb(211,20,18)" fg:x="29255" fg:w="30"/><text x="29.6751%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.03%)</title><rect x="29.4251%" y="677" width="0.0302%" height="15" fill="rgb(231,203,46)" fg:x="29255" fg:w="30"/><text x="29.6751%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.03%)</title><rect x="29.4261%" y="661" width="0.0292%" height="15" fill="rgb(237,142,3)" fg:x="29256" fg:w="29"/><text x="29.6761%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="29.4392%" y="645" width="0.0161%" height="15" fill="rgb(241,107,1)" fg:x="29269" fg:w="16"/><text x="29.6892%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.02%)</title><rect x="29.4402%" y="629" width="0.0151%" height="15" fill="rgb(229,83,13)" fg:x="29270" fg:w="15"/><text x="29.6902%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="29.4553%" y="677" width="0.0121%" height="15" fill="rgb(241,91,40)" fg:x="29285" fg:w="12"/><text x="29.7053%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="29.4553%" y="661" width="0.0121%" height="15" fill="rgb(225,3,45)" fg:x="29285" fg:w="12"/><text x="29.7053%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (12 samples, 0.01%)</title><rect x="29.4553%" y="645" width="0.0121%" height="15" fill="rgb(244,223,14)" fg:x="29285" fg:w="12"/><text x="29.7053%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.01%)</title><rect x="29.4553%" y="629" width="0.0121%" height="15" fill="rgb(224,124,37)" fg:x="29285" fg:w="12"/><text x="29.7053%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (22 samples, 0.02%)</title><rect x="29.4553%" y="709" width="0.0221%" height="15" fill="rgb(251,171,30)" fg:x="29285" fg:w="22"/><text x="29.7053%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="29.4553%" y="693" width="0.0221%" height="15" fill="rgb(236,46,54)" fg:x="29285" fg:w="22"/><text x="29.7053%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.01%)</title><rect x="29.4673%" y="677" width="0.0101%" height="15" fill="rgb(245,213,5)" fg:x="29297" fg:w="10"/><text x="29.7173%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.01%)</title><rect x="29.4673%" y="661" width="0.0101%" height="15" fill="rgb(230,144,27)" fg:x="29297" fg:w="10"/><text x="29.7173%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.01%)</title><rect x="29.4673%" y="645" width="0.0101%" height="15" fill="rgb(220,86,6)" fg:x="29297" fg:w="10"/><text x="29.7173%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.01%)</title><rect x="29.4945%" y="565" width="0.0101%" height="15" fill="rgb(240,20,13)" fg:x="29324" fg:w="10"/><text x="29.7445%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="29.5116%" y="549" width="0.0131%" height="15" fill="rgb(217,89,34)" fg:x="29341" fg:w="13"/><text x="29.7616%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.04%)</title><rect x="29.4925%" y="613" width="0.0352%" height="15" fill="rgb(229,13,5)" fg:x="29322" fg:w="35"/><text x="29.7425%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (35 samples, 0.04%)</title><rect x="29.4925%" y="597" width="0.0352%" height="15" fill="rgb(244,67,35)" fg:x="29322" fg:w="35"/><text x="29.7425%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (35 samples, 0.04%)</title><rect x="29.4925%" y="581" width="0.0352%" height="15" fill="rgb(221,40,2)" fg:x="29322" fg:w="35"/><text x="29.7425%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (23 samples, 0.02%)</title><rect x="29.5045%" y="565" width="0.0231%" height="15" fill="rgb(237,157,21)" fg:x="29334" fg:w="23"/><text x="29.7545%" y="575.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (49 samples, 0.05%)</title><rect x="29.4915%" y="645" width="0.0493%" height="15" fill="rgb(222,94,11)" fg:x="29321" fg:w="49"/><text x="29.7415%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.05%)</title><rect x="29.4925%" y="629" width="0.0483%" height="15" fill="rgb(249,113,6)" fg:x="29322" fg:w="48"/><text x="29.7425%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (10 samples, 0.01%)</title><rect x="29.5307%" y="613" width="0.0101%" height="15" fill="rgb(238,137,36)" fg:x="29360" fg:w="10"/><text x="29.7807%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (11 samples, 0.01%)</title><rect x="29.5448%" y="645" width="0.0111%" height="15" fill="rgb(210,102,26)" fg:x="29374" fg:w="11"/><text x="29.7948%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (23 samples, 0.02%)</title><rect x="29.5679%" y="629" width="0.0231%" height="15" fill="rgb(218,30,30)" fg:x="29397" fg:w="23"/><text x="29.8179%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (34 samples, 0.03%)</title><rect x="29.5649%" y="645" width="0.0342%" height="15" fill="rgb(214,67,26)" fg:x="29394" fg:w="34"/><text x="29.8149%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.01%)</title><rect x="29.5991%" y="645" width="0.0101%" height="15" fill="rgb(251,9,53)" fg:x="29428" fg:w="10"/><text x="29.8491%" y="655.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_handles (154 samples, 0.15%)</title><rect x="29.4553%" y="789" width="0.1549%" height="15" fill="rgb(228,204,25)" fg:x="29285" fg:w="154"/><text x="29.7053%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (154 samples, 0.15%)</title><rect x="29.4553%" y="773" width="0.1549%" height="15" fill="rgb(207,153,8)" fg:x="29285" fg:w="154"/><text x="29.7053%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (154 samples, 0.15%)</title><rect x="29.4553%" y="757" width="0.1549%" height="15" fill="rgb(242,9,16)" fg:x="29285" fg:w="154"/><text x="29.7053%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (154 samples, 0.15%)</title><rect x="29.4553%" y="741" width="0.1549%" height="15" fill="rgb(217,211,10)" fg:x="29285" fg:w="154"/><text x="29.7053%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (154 samples, 0.15%)</title><rect x="29.4553%" y="725" width="0.1549%" height="15" fill="rgb(219,228,52)" fg:x="29285" fg:w="154"/><text x="29.7053%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (132 samples, 0.13%)</title><rect x="29.4774%" y="709" width="0.1328%" height="15" fill="rgb(231,92,29)" fg:x="29307" fg:w="132"/><text x="29.7274%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (132 samples, 0.13%)</title><rect x="29.4774%" y="693" width="0.1328%" height="15" fill="rgb(232,8,23)" fg:x="29307" fg:w="132"/><text x="29.7274%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (132 samples, 0.13%)</title><rect x="29.4774%" y="677" width="0.1328%" height="15" fill="rgb(216,211,34)" fg:x="29307" fg:w="132"/><text x="29.7274%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (132 samples, 0.13%)</title><rect x="29.4774%" y="661" width="0.1328%" height="15" fill="rgb(236,151,0)" fg:x="29307" fg:w="132"/><text x="29.7274%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (10 samples, 0.01%)</title><rect x="29.6172%" y="645" width="0.0101%" height="15" fill="rgb(209,168,3)" fg:x="29446" fg:w="10"/><text x="29.8672%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="29.6172%" y="629" width="0.0101%" height="15" fill="rgb(208,129,28)" fg:x="29446" fg:w="10"/><text x="29.8672%" y="639.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_instantiations (34 samples, 0.03%)</title><rect x="29.6101%" y="789" width="0.0342%" height="15" fill="rgb(229,78,22)" fg:x="29439" fg:w="34"/><text x="29.8601%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (34 samples, 0.03%)</title><rect x="29.6101%" y="773" width="0.0342%" height="15" fill="rgb(228,187,13)" fg:x="29439" fg:w="34"/><text x="29.8601%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (34 samples, 0.03%)</title><rect x="29.6101%" y="757" width="0.0342%" height="15" fill="rgb(240,119,24)" fg:x="29439" fg:w="34"/><text x="29.8601%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (34 samples, 0.03%)</title><rect x="29.6101%" y="741" width="0.0342%" height="15" fill="rgb(209,194,42)" fg:x="29439" fg:w="34"/><text x="29.8601%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.03%)</title><rect x="29.6101%" y="725" width="0.0342%" height="15" fill="rgb(247,200,46)" fg:x="29439" fg:w="34"/><text x="29.8601%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (29 samples, 0.03%)</title><rect x="29.6152%" y="709" width="0.0292%" height="15" fill="rgb(218,76,16)" fg:x="29444" fg:w="29"/><text x="29.8652%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="29.6152%" y="693" width="0.0292%" height="15" fill="rgb(225,21,48)" fg:x="29444" fg:w="29"/><text x="29.8652%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 0.03%)</title><rect x="29.6152%" y="677" width="0.0292%" height="15" fill="rgb(239,223,50)" fg:x="29444" fg:w="29"/><text x="29.8652%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (29 samples, 0.03%)</title><rect x="29.6152%" y="661" width="0.0292%" height="15" fill="rgb(244,45,21)" fg:x="29444" fg:w="29"/><text x="29.8652%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="29.6454%" y="677" width="0.0141%" height="15" fill="rgb(232,33,43)" fg:x="29474" fg:w="14"/><text x="29.8954%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="29.6454%" y="661" width="0.0141%" height="15" fill="rgb(209,8,3)" fg:x="29474" fg:w="14"/><text x="29.8954%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (14 samples, 0.01%)</title><rect x="29.6454%" y="645" width="0.0141%" height="15" fill="rgb(214,25,53)" fg:x="29474" fg:w="14"/><text x="29.8954%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.01%)</title><rect x="29.6454%" y="629" width="0.0141%" height="15" fill="rgb(254,186,54)" fg:x="29474" fg:w="14"/><text x="29.8954%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (20 samples, 0.02%)</title><rect x="29.6454%" y="709" width="0.0201%" height="15" fill="rgb(208,174,49)" fg:x="29474" fg:w="20"/><text x="29.8954%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="29.6454%" y="693" width="0.0201%" height="15" fill="rgb(233,191,51)" fg:x="29474" fg:w="20"/><text x="29.8954%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="29.6695%" y="645" width="0.0121%" height="15" fill="rgb(222,134,10)" fg:x="29498" fg:w="12"/><text x="29.9195%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="29.7148%" y="549" width="0.0101%" height="15" fill="rgb(230,226,20)" fg:x="29543" fg:w="10"/><text x="29.9648%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="29.6886%" y="613" width="0.0392%" height="15" fill="rgb(251,111,25)" fg:x="29517" fg:w="39"/><text x="29.9386%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="29.6886%" y="597" width="0.0392%" height="15" fill="rgb(224,40,46)" fg:x="29517" fg:w="39"/><text x="29.9386%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="29.6886%" y="581" width="0.0392%" height="15" fill="rgb(236,108,47)" fg:x="29517" fg:w="39"/><text x="29.9386%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.03%)</title><rect x="29.6997%" y="565" width="0.0282%" height="15" fill="rgb(234,93,0)" fg:x="29528" fg:w="28"/><text x="29.9497%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.01%)</title><rect x="29.7389%" y="501" width="0.0141%" height="15" fill="rgb(224,213,32)" fg:x="29567" fg:w="14"/><text x="29.9889%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.03%)</title><rect x="29.7349%" y="549" width="0.0292%" height="15" fill="rgb(251,11,48)" fg:x="29563" fg:w="29"/><text x="29.9849%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.03%)</title><rect x="29.7349%" y="533" width="0.0292%" height="15" fill="rgb(236,173,5)" fg:x="29563" fg:w="29"/><text x="29.9849%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.03%)</title><rect x="29.7349%" y="517" width="0.0292%" height="15" fill="rgb(230,95,12)" fg:x="29563" fg:w="29"/><text x="29.9849%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.01%)</title><rect x="29.7640%" y="549" width="0.0121%" height="15" fill="rgb(232,209,1)" fg:x="29592" fg:w="12"/><text x="30.0140%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="29.7650%" y="533" width="0.0111%" height="15" fill="rgb(232,6,1)" fg:x="29593" fg:w="11"/><text x="30.0150%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="29.7650%" y="517" width="0.0111%" height="15" fill="rgb(210,224,50)" fg:x="29593" fg:w="11"/><text x="30.0150%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="29.7650%" y="501" width="0.0111%" height="15" fill="rgb(228,127,35)" fg:x="29593" fg:w="11"/><text x="30.0150%" y="511.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (91 samples, 0.09%)</title><rect x="29.6856%" y="645" width="0.0915%" height="15" fill="rgb(245,102,45)" fg:x="29514" fg:w="91"/><text x="29.9356%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (91 samples, 0.09%)</title><rect x="29.6856%" y="629" width="0.0915%" height="15" fill="rgb(214,1,49)" fg:x="29514" fg:w="91"/><text x="29.9356%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47 samples, 0.05%)</title><rect x="29.7298%" y="613" width="0.0473%" height="15" fill="rgb(226,163,40)" fg:x="29558" fg:w="47"/><text x="29.9798%" y="623.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (47 samples, 0.05%)</title><rect x="29.7298%" y="597" width="0.0473%" height="15" fill="rgb(239,212,28)" fg:x="29558" fg:w="47"/><text x="29.9798%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (47 samples, 0.05%)</title><rect x="29.7298%" y="581" width="0.0473%" height="15" fill="rgb(220,20,13)" fg:x="29558" fg:w="47"/><text x="29.9798%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (47 samples, 0.05%)</title><rect x="29.7298%" y="565" width="0.0473%" height="15" fill="rgb(210,164,35)" fg:x="29558" fg:w="47"/><text x="29.9798%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (25 samples, 0.03%)</title><rect x="29.7952%" y="629" width="0.0251%" height="15" fill="rgb(248,109,41)" fg:x="29623" fg:w="25"/><text x="30.0452%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (38 samples, 0.04%)</title><rect x="29.7932%" y="645" width="0.0382%" height="15" fill="rgb(238,23,50)" fg:x="29621" fg:w="38"/><text x="30.0432%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (11 samples, 0.01%)</title><rect x="29.8204%" y="629" width="0.0111%" height="15" fill="rgb(211,48,49)" fg:x="29648" fg:w="11"/><text x="30.0704%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.01%)</title><rect x="29.8314%" y="645" width="0.0101%" height="15" fill="rgb(223,36,21)" fg:x="29659" fg:w="10"/><text x="30.0814%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.01%)</title><rect x="29.8314%" y="629" width="0.0101%" height="15" fill="rgb(207,123,46)" fg:x="29659" fg:w="10"/><text x="30.0814%" y="639.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (197 samples, 0.20%)</title><rect x="29.6443%" y="789" width="0.1981%" height="15" fill="rgb(240,218,32)" fg:x="29473" fg:w="197"/><text x="29.8943%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (197 samples, 0.20%)</title><rect x="29.6443%" y="773" width="0.1981%" height="15" fill="rgb(252,5,43)" fg:x="29473" fg:w="197"/><text x="29.8943%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (197 samples, 0.20%)</title><rect x="29.6443%" y="757" width="0.1981%" height="15" fill="rgb(252,84,19)" fg:x="29473" fg:w="197"/><text x="29.8943%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (197 samples, 0.20%)</title><rect x="29.6443%" y="741" width="0.1981%" height="15" fill="rgb(243,152,39)" fg:x="29473" fg:w="197"/><text x="29.8943%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (197 samples, 0.20%)</title><rect x="29.6443%" y="725" width="0.1981%" height="15" fill="rgb(234,160,15)" fg:x="29473" fg:w="197"/><text x="29.8943%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (176 samples, 0.18%)</title><rect x="29.6655%" y="709" width="0.1770%" height="15" fill="rgb(237,34,20)" fg:x="29494" fg:w="176"/><text x="29.9155%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (176 samples, 0.18%)</title><rect x="29.6655%" y="693" width="0.1770%" height="15" fill="rgb(229,97,13)" fg:x="29494" fg:w="176"/><text x="29.9155%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (176 samples, 0.18%)</title><rect x="29.6655%" y="677" width="0.1770%" height="15" fill="rgb(234,71,50)" fg:x="29494" fg:w="176"/><text x="29.9155%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (176 samples, 0.18%)</title><rect x="29.6655%" y="661" width="0.1770%" height="15" fill="rgb(253,155,4)" fg:x="29494" fg:w="176"/><text x="29.9155%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_module_handles (27 samples, 0.03%)</title><rect x="29.8425%" y="789" width="0.0272%" height="15" fill="rgb(222,185,37)" fg:x="29670" fg:w="27"/><text x="30.0925%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (27 samples, 0.03%)</title><rect x="29.8425%" y="773" width="0.0272%" height="15" fill="rgb(251,177,13)" fg:x="29670" fg:w="27"/><text x="30.0925%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (27 samples, 0.03%)</title><rect x="29.8425%" y="757" width="0.0272%" height="15" fill="rgb(250,179,40)" fg:x="29670" fg:w="27"/><text x="30.0925%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (27 samples, 0.03%)</title><rect x="29.8425%" y="741" width="0.0272%" height="15" fill="rgb(242,44,2)" fg:x="29670" fg:w="27"/><text x="30.0925%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.03%)</title><rect x="29.8425%" y="725" width="0.0272%" height="15" fill="rgb(216,177,13)" fg:x="29670" fg:w="27"/><text x="30.0925%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.02%)</title><rect x="29.8455%" y="709" width="0.0241%" height="15" fill="rgb(216,106,43)" fg:x="29673" fg:w="24"/><text x="30.0955%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="29.8455%" y="693" width="0.0241%" height="15" fill="rgb(216,183,2)" fg:x="29673" fg:w="24"/><text x="30.0955%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.02%)</title><rect x="29.8455%" y="677" width="0.0241%" height="15" fill="rgb(249,75,3)" fg:x="29673" fg:w="24"/><text x="30.0955%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (24 samples, 0.02%)</title><rect x="29.8455%" y="661" width="0.0241%" height="15" fill="rgb(219,67,39)" fg:x="29673" fg:w="24"/><text x="30.0955%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="29.8696%" y="597" width="0.0111%" height="15" fill="rgb(253,228,2)" fg:x="29697" fg:w="11"/><text x="30.1196%" y="607.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="29.8696%" y="581" width="0.0111%" height="15" fill="rgb(235,138,27)" fg:x="29697" fg:w="11"/><text x="30.1196%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (24 samples, 0.02%)</title><rect x="29.8827%" y="597" width="0.0241%" height="15" fill="rgb(236,97,51)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (24 samples, 0.02%)</title><rect x="29.8827%" y="581" width="0.0241%" height="15" fill="rgb(240,80,30)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (24 samples, 0.02%)</title><rect x="29.8827%" y="565" width="0.0241%" height="15" fill="rgb(230,178,19)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="29.8827%" y="549" width="0.0241%" height="15" fill="rgb(210,190,27)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="29.8827%" y="533" width="0.0241%" height="15" fill="rgb(222,107,31)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="29.8827%" y="517" width="0.0241%" height="15" fill="rgb(216,127,34)" fg:x="29710" fg:w="24"/><text x="30.1327%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (38 samples, 0.04%)</title><rect x="29.8696%" y="709" width="0.0382%" height="15" fill="rgb(234,116,52)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (38 samples, 0.04%)</title><rect x="29.8696%" y="693" width="0.0382%" height="15" fill="rgb(222,124,15)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="703.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="29.8696%" y="677" width="0.0382%" height="15" fill="rgb(231,179,28)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="29.8696%" y="661" width="0.0382%" height="15" fill="rgb(226,93,45)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (38 samples, 0.04%)</title><rect x="29.8696%" y="645" width="0.0382%" height="15" fill="rgb(215,8,51)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="655.50"></text></g><g><title>core::hash::Hash::hash_slice (38 samples, 0.04%)</title><rect x="29.8696%" y="629" width="0.0382%" height="15" fill="rgb(223,106,5)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="639.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="29.8696%" y="613" width="0.0382%" height="15" fill="rgb(250,191,5)" fg:x="29697" fg:w="38"/><text x="30.1196%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (16 samples, 0.02%)</title><rect x="29.9079%" y="709" width="0.0161%" height="15" fill="rgb(242,132,44)" fg:x="29735" fg:w="16"/><text x="30.1579%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.02%)</title><rect x="29.9079%" y="693" width="0.0161%" height="15" fill="rgb(251,152,29)" fg:x="29735" fg:w="16"/><text x="30.1579%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.01%)</title><rect x="29.9139%" y="677" width="0.0101%" height="15" fill="rgb(218,179,5)" fg:x="29741" fg:w="10"/><text x="30.1639%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.01%)</title><rect x="29.9139%" y="661" width="0.0101%" height="15" fill="rgb(227,67,19)" fg:x="29741" fg:w="10"/><text x="30.1639%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.01%)</title><rect x="29.9139%" y="645" width="0.0101%" height="15" fill="rgb(233,119,31)" fg:x="29741" fg:w="10"/><text x="30.1639%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.03%)</title><rect x="29.9350%" y="613" width="0.0262%" height="15" fill="rgb(241,120,22)" fg:x="29762" fg:w="26"/><text x="30.1850%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.03%)</title><rect x="29.9350%" y="597" width="0.0262%" height="15" fill="rgb(224,102,30)" fg:x="29762" fg:w="26"/><text x="30.1850%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.03%)</title><rect x="29.9350%" y="581" width="0.0262%" height="15" fill="rgb(210,164,37)" fg:x="29762" fg:w="26"/><text x="30.1850%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.02%)</title><rect x="29.9451%" y="565" width="0.0161%" height="15" fill="rgb(226,191,16)" fg:x="29772" fg:w="16"/><text x="30.1951%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="29.9652%" y="533" width="0.0101%" height="15" fill="rgb(214,40,45)" fg:x="29792" fg:w="10"/><text x="30.2152%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="29.9763%" y="517" width="0.0121%" height="15" fill="rgb(244,29,26)" fg:x="29803" fg:w="12"/><text x="30.2263%" y="527.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="29.9763%" y="501" width="0.0121%" height="15" fill="rgb(216,16,5)" fg:x="29803" fg:w="12"/><text x="30.2263%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.02%)</title><rect x="29.9984%" y="421" width="0.0171%" height="15" fill="rgb(249,76,35)" fg:x="29825" fg:w="17"/><text x="30.2484%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.03%)</title><rect x="29.9944%" y="469" width="0.0262%" height="15" fill="rgb(207,11,44)" fg:x="29821" fg:w="26"/><text x="30.2444%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="29.9964%" y="453" width="0.0241%" height="15" fill="rgb(228,190,49)" fg:x="29823" fg:w="24"/><text x="30.2464%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.02%)</title><rect x="29.9964%" y="437" width="0.0241%" height="15" fill="rgb(214,173,12)" fg:x="29823" fg:w="24"/><text x="30.2464%" y="447.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::hash::Hash&gt;::hash (46 samples, 0.05%)</title><rect x="29.9753%" y="533" width="0.0463%" height="15" fill="rgb(218,26,35)" fg:x="29802" fg:w="46"/><text x="30.2253%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (28 samples, 0.03%)</title><rect x="29.9934%" y="517" width="0.0282%" height="15" fill="rgb(220,200,19)" fg:x="29820" fg:w="28"/><text x="30.2434%" y="527.50"></text></g><g><title>core::hash::Hasher::write_isize (27 samples, 0.03%)</title><rect x="29.9944%" y="501" width="0.0272%" height="15" fill="rgb(239,95,49)" fg:x="29821" fg:w="27"/><text x="30.2444%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.03%)</title><rect x="29.9944%" y="485" width="0.0272%" height="15" fill="rgb(235,85,53)" fg:x="29821" fg:w="27"/><text x="30.2444%" y="495.50"></text></g><g><title>core::hash::Hash::hash_slice (57 samples, 0.06%)</title><rect x="29.9652%" y="549" width="0.0573%" height="15" fill="rgb(233,133,31)" fg:x="29792" fg:w="57"/><text x="30.2152%" y="559.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (95 samples, 0.10%)</title><rect x="29.9340%" y="645" width="0.0956%" height="15" fill="rgb(218,25,20)" fg:x="29761" fg:w="95"/><text x="30.1840%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (95 samples, 0.10%)</title><rect x="29.9340%" y="629" width="0.0956%" height="15" fill="rgb(252,210,38)" fg:x="29761" fg:w="95"/><text x="30.1840%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (65 samples, 0.07%)</title><rect x="29.9642%" y="613" width="0.0654%" height="15" fill="rgb(242,134,21)" fg:x="29791" fg:w="65"/><text x="30.2142%" y="623.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (65 samples, 0.07%)</title><rect x="29.9642%" y="597" width="0.0654%" height="15" fill="rgb(213,28,48)" fg:x="29791" fg:w="65"/><text x="30.2142%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (65 samples, 0.07%)</title><rect x="29.9642%" y="581" width="0.0654%" height="15" fill="rgb(250,196,2)" fg:x="29791" fg:w="65"/><text x="30.2142%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (64 samples, 0.06%)</title><rect x="29.9652%" y="565" width="0.0644%" height="15" fill="rgb(227,5,17)" fg:x="29792" fg:w="64"/><text x="30.2152%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.01%)</title><rect x="30.0426%" y="629" width="0.0141%" height="15" fill="rgb(221,226,24)" fg:x="29869" fg:w="14"/><text x="30.2926%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (18 samples, 0.02%)</title><rect x="30.0406%" y="645" width="0.0181%" height="15" fill="rgb(211,5,48)" fg:x="29867" fg:w="18"/><text x="30.2906%" y="655.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_signatures (192 samples, 0.19%)</title><rect x="29.8696%" y="789" width="0.1931%" height="15" fill="rgb(219,150,6)" fg:x="29697" fg:w="192"/><text x="30.1196%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (192 samples, 0.19%)</title><rect x="29.8696%" y="773" width="0.1931%" height="15" fill="rgb(251,46,16)" fg:x="29697" fg:w="192"/><text x="30.1196%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (192 samples, 0.19%)</title><rect x="29.8696%" y="757" width="0.1931%" height="15" fill="rgb(220,204,40)" fg:x="29697" fg:w="192"/><text x="30.1196%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (192 samples, 0.19%)</title><rect x="29.8696%" y="741" width="0.1931%" height="15" fill="rgb(211,85,2)" fg:x="29697" fg:w="192"/><text x="30.1196%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (192 samples, 0.19%)</title><rect x="29.8696%" y="725" width="0.1931%" height="15" fill="rgb(229,17,7)" fg:x="29697" fg:w="192"/><text x="30.1196%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (138 samples, 0.14%)</title><rect x="29.9240%" y="709" width="0.1388%" height="15" fill="rgb(239,72,28)" fg:x="29751" fg:w="138"/><text x="30.1740%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (138 samples, 0.14%)</title><rect x="29.9240%" y="693" width="0.1388%" height="15" fill="rgb(230,47,54)" fg:x="29751" fg:w="138"/><text x="30.1740%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (138 samples, 0.14%)</title><rect x="29.9240%" y="677" width="0.1388%" height="15" fill="rgb(214,50,8)" fg:x="29751" fg:w="138"/><text x="30.1740%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (138 samples, 0.14%)</title><rect x="29.9240%" y="661" width="0.1388%" height="15" fill="rgb(216,198,43)" fg:x="29751" fg:w="138"/><text x="30.1740%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.01%)</title><rect x="30.0778%" y="709" width="0.0101%" height="15" fill="rgb(234,20,35)" fg:x="29904" fg:w="10"/><text x="30.3278%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="30.0778%" y="693" width="0.0101%" height="15" fill="rgb(254,45,19)" fg:x="29904" fg:w="10"/><text x="30.3278%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="30.0909%" y="693" width="0.0181%" height="15" fill="rgb(219,14,44)" fg:x="29917" fg:w="18"/><text x="30.3409%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.02%)</title><rect x="30.0909%" y="677" width="0.0181%" height="15" fill="rgb(217,220,26)" fg:x="29917" fg:w="18"/><text x="30.3409%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (18 samples, 0.02%)</title><rect x="30.0909%" y="661" width="0.0181%" height="15" fill="rgb(213,158,28)" fg:x="29917" fg:w="18"/><text x="30.3409%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (46 samples, 0.05%)</title><rect x="30.0728%" y="757" width="0.0463%" height="15" fill="rgb(252,51,52)" fg:x="29899" fg:w="46"/><text x="30.3228%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (46 samples, 0.05%)</title><rect x="30.0728%" y="741" width="0.0463%" height="15" fill="rgb(246,89,16)" fg:x="29899" fg:w="46"/><text x="30.3228%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.05%)</title><rect x="30.0728%" y="725" width="0.0463%" height="15" fill="rgb(216,158,49)" fg:x="29899" fg:w="46"/><text x="30.3228%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (31 samples, 0.03%)</title><rect x="30.0879%" y="709" width="0.0312%" height="15" fill="rgb(236,107,19)" fg:x="29914" fg:w="31"/><text x="30.3379%" y="719.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (58 samples, 0.06%)</title><rect x="30.0638%" y="773" width="0.0583%" height="15" fill="rgb(228,185,30)" fg:x="29890" fg:w="58"/><text x="30.3138%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.01%)</title><rect x="30.1221%" y="693" width="0.0101%" height="15" fill="rgb(246,134,8)" fg:x="29948" fg:w="10"/><text x="30.3721%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.01%)</title><rect x="30.1221%" y="677" width="0.0101%" height="15" fill="rgb(214,143,50)" fg:x="29948" fg:w="10"/><text x="30.3721%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.01%)</title><rect x="30.1221%" y="661" width="0.0101%" height="15" fill="rgb(228,75,8)" fg:x="29948" fg:w="10"/><text x="30.3721%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.01%)</title><rect x="30.1221%" y="645" width="0.0101%" height="15" fill="rgb(207,175,4)" fg:x="29948" fg:w="10"/><text x="30.3721%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10 samples, 0.01%)</title><rect x="30.1221%" y="629" width="0.0101%" height="15" fill="rgb(205,108,24)" fg:x="29948" fg:w="10"/><text x="30.3721%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="30.1221%" y="741" width="0.0131%" height="15" fill="rgb(244,120,49)" fg:x="29948" fg:w="13"/><text x="30.3721%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="30.1221%" y="725" width="0.0131%" height="15" fill="rgb(223,47,38)" fg:x="29948" fg:w="13"/><text x="30.3721%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="30.1221%" y="709" width="0.0131%" height="15" fill="rgb(229,179,11)" fg:x="29948" fg:w="13"/><text x="30.3721%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="30.1221%" y="773" width="0.0141%" height="15" fill="rgb(231,122,1)" fg:x="29948" fg:w="14"/><text x="30.3721%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="30.1221%" y="757" width="0.0141%" height="15" fill="rgb(245,119,9)" fg:x="29948" fg:w="14"/><text x="30.3721%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_definitions (86 samples, 0.09%)</title><rect x="30.0628%" y="789" width="0.0865%" height="15" fill="rgb(241,163,25)" fg:x="29889" fg:w="86"/><text x="30.3128%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (13 samples, 0.01%)</title><rect x="30.1362%" y="773" width="0.0131%" height="15" fill="rgb(217,214,3)" fg:x="29962" fg:w="13"/><text x="30.3862%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="30.1362%" y="757" width="0.0131%" height="15" fill="rgb(240,86,28)" fg:x="29962" fg:w="13"/><text x="30.3862%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (11 samples, 0.01%)</title><rect x="30.1382%" y="741" width="0.0111%" height="15" fill="rgb(215,47,9)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="751.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_definitions::_{{closure}} (11 samples, 0.01%)</title><rect x="30.1382%" y="725" width="0.0111%" height="15" fill="rgb(252,25,45)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11 samples, 0.01%)</title><rect x="30.1382%" y="709" width="0.0111%" height="15" fill="rgb(251,164,9)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11 samples, 0.01%)</title><rect x="30.1382%" y="693" width="0.0111%" height="15" fill="rgb(233,194,0)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.01%)</title><rect x="30.1382%" y="677" width="0.0111%" height="15" fill="rgb(249,111,24)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="30.1382%" y="661" width="0.0111%" height="15" fill="rgb(250,223,3)" fg:x="29964" fg:w="11"/><text x="30.3882%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (1,029 samples, 1.03%)</title><rect x="29.1284%" y="805" width="1.0350%" height="15" fill="rgb(236,178,37)" fg:x="28960" fg:w="1029"/><text x="29.3784%" y="815.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_handles (14 samples, 0.01%)</title><rect x="30.1493%" y="789" width="0.0141%" height="15" fill="rgb(241,158,50)" fg:x="29975" fg:w="14"/><text x="30.3993%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (14 samples, 0.01%)</title><rect x="30.1493%" y="773" width="0.0141%" height="15" fill="rgb(213,121,41)" fg:x="29975" fg:w="14"/><text x="30.3993%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (14 samples, 0.01%)</title><rect x="30.1493%" y="757" width="0.0141%" height="15" fill="rgb(240,92,3)" fg:x="29975" fg:w="14"/><text x="30.3993%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (14 samples, 0.01%)</title><rect x="30.1493%" y="741" width="0.0141%" height="15" fill="rgb(205,123,3)" fg:x="29975" fg:w="14"/><text x="30.3993%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.01%)</title><rect x="30.1493%" y="725" width="0.0141%" height="15" fill="rgb(205,97,47)" fg:x="29975" fg:w="14"/><text x="30.3993%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.01%)</title><rect x="30.1503%" y="709" width="0.0131%" height="15" fill="rgb(247,152,14)" fg:x="29976" fg:w="13"/><text x="30.4003%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="30.1503%" y="693" width="0.0131%" height="15" fill="rgb(248,195,53)" fg:x="29976" fg:w="13"/><text x="30.4003%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.01%)</title><rect x="30.1503%" y="677" width="0.0131%" height="15" fill="rgb(226,201,16)" fg:x="29976" fg:w="13"/><text x="30.4003%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (13 samples, 0.01%)</title><rect x="30.1503%" y="661" width="0.0131%" height="15" fill="rgb(205,98,0)" fg:x="29976" fg:w="13"/><text x="30.4003%" y="671.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::LocalsSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (15 samples, 0.02%)</title><rect x="30.1633%" y="741" width="0.0151%" height="15" fill="rgb(214,191,48)" fg:x="29989" fg:w="15"/><text x="30.4133%" y="751.50"></text></g><g><title>bytecode_verifier::locals_safety::execute_inner (15 samples, 0.02%)</title><rect x="30.1633%" y="725" width="0.0151%" height="15" fill="rgb(237,112,39)" fg:x="29989" fg:w="15"/><text x="30.4133%" y="735.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="30.1784%" y="741" width="0.0141%" height="15" fill="rgb(247,203,27)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="30.1784%" y="725" width="0.0141%" height="15" fill="rgb(235,124,28)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="30.1784%" y="709" width="0.0141%" height="15" fill="rgb(208,207,46)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="30.1784%" y="693" width="0.0141%" height="15" fill="rgb(234,176,4)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="30.1784%" y="677" width="0.0141%" height="15" fill="rgb(230,133,28)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="30.1784%" y="661" width="0.0141%" height="15" fill="rgb(211,137,40)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="30.1784%" y="645" width="0.0141%" height="15" fill="rgb(254,35,13)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="30.1784%" y="629" width="0.0141%" height="15" fill="rgb(225,49,51)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="30.1784%" y="613" width="0.0141%" height="15" fill="rgb(251,10,15)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::repeat (14 samples, 0.01%)</title><rect x="30.1784%" y="597" width="0.0141%" height="15" fill="rgb(228,207,15)" fg:x="30004" fg:w="14"/><text x="30.4284%" y="607.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (13 samples, 0.01%)</title><rect x="30.1955%" y="725" width="0.0131%" height="15" fill="rgb(241,99,19)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (13 samples, 0.01%)</title><rect x="30.1955%" y="709" width="0.0131%" height="15" fill="rgb(207,104,49)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (13 samples, 0.01%)</title><rect x="30.1955%" y="693" width="0.0131%" height="15" fill="rgb(234,99,18)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="30.1955%" y="677" width="0.0131%" height="15" fill="rgb(213,191,49)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="30.1955%" y="661" width="0.0131%" height="15" fill="rgb(210,226,19)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="30.1955%" y="645" width="0.0131%" height="15" fill="rgb(229,97,18)" fg:x="30021" fg:w="13"/><text x="30.4455%" y="655.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (59 samples, 0.06%)</title><rect x="30.1633%" y="757" width="0.0593%" height="15" fill="rgb(211,167,15)" fg:x="29989" fg:w="59"/><text x="30.4133%" y="767.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (27 samples, 0.03%)</title><rect x="30.1955%" y="741" width="0.0272%" height="15" fill="rgb(210,169,34)" fg:x="30021" fg:w="27"/><text x="30.4455%" y="751.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (14 samples, 0.01%)</title><rect x="30.2086%" y="725" width="0.0141%" height="15" fill="rgb(241,121,31)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (14 samples, 0.01%)</title><rect x="30.2086%" y="709" width="0.0141%" height="15" fill="rgb(232,40,11)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="30.2086%" y="693" width="0.0141%" height="15" fill="rgb(205,86,26)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="30.2086%" y="677" width="0.0141%" height="15" fill="rgb(231,126,28)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="30.2086%" y="661" width="0.0141%" height="15" fill="rgb(219,221,18)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="30.2086%" y="645" width="0.0141%" height="15" fill="rgb(211,40,0)" fg:x="30034" fg:w="14"/><text x="30.4586%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="30.2418%" y="661" width="0.0171%" height="15" fill="rgb(239,85,43)" fg:x="30067" fg:w="17"/><text x="30.4918%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="30.2428%" y="645" width="0.0161%" height="15" fill="rgb(231,55,21)" fg:x="30068" fg:w="16"/><text x="30.4928%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="30.2790%" y="629" width="0.0241%" height="15" fill="rgb(225,184,43)" fg:x="30104" fg:w="24"/><text x="30.5290%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="30.2790%" y="613" width="0.0241%" height="15" fill="rgb(251,158,41)" fg:x="30104" fg:w="24"/><text x="30.5290%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.02%)</title><rect x="30.2800%" y="597" width="0.0231%" height="15" fill="rgb(234,159,37)" fg:x="30105" fg:w="23"/><text x="30.5300%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.02%)</title><rect x="30.2881%" y="581" width="0.0151%" height="15" fill="rgb(216,204,22)" fg:x="30113" fg:w="15"/><text x="30.5381%" y="591.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (41 samples, 0.04%)</title><rect x="30.2770%" y="661" width="0.0412%" height="15" fill="rgb(214,17,3)" fg:x="30102" fg:w="41"/><text x="30.5270%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (40 samples, 0.04%)</title><rect x="30.2780%" y="645" width="0.0402%" height="15" fill="rgb(212,111,17)" fg:x="30103" fg:w="40"/><text x="30.5280%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (12 samples, 0.01%)</title><rect x="30.3062%" y="629" width="0.0121%" height="15" fill="rgb(221,157,24)" fg:x="30131" fg:w="12"/><text x="30.5562%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u16 (12 samples, 0.01%)</title><rect x="30.3062%" y="613" width="0.0121%" height="15" fill="rgb(252,16,13)" fg:x="30131" fg:w="12"/><text x="30.5562%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="30.3062%" y="597" width="0.0121%" height="15" fill="rgb(221,62,2)" fg:x="30131" fg:w="12"/><text x="30.5562%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="30.3062%" y="581" width="0.0121%" height="15" fill="rgb(247,87,22)" fg:x="30131" fg:w="12"/><text x="30.5562%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="30.3072%" y="565" width="0.0111%" height="15" fill="rgb(215,73,9)" fg:x="30132" fg:w="11"/><text x="30.5572%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (10 samples, 0.01%)</title><rect x="30.3273%" y="661" width="0.0101%" height="15" fill="rgb(207,175,33)" fg:x="30152" fg:w="10"/><text x="30.5773%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (12 samples, 0.01%)</title><rect x="30.3494%" y="645" width="0.0121%" height="15" fill="rgb(243,129,54)" fg:x="30174" fg:w="12"/><text x="30.5994%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (24 samples, 0.02%)</title><rect x="30.3454%" y="661" width="0.0241%" height="15" fill="rgb(227,119,45)" fg:x="30170" fg:w="24"/><text x="30.5954%" y="671.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="30.4118%" y="549" width="0.0101%" height="15" fill="rgb(205,109,36)" fg:x="30236" fg:w="10"/><text x="30.6618%" y="559.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="30.4108%" y="565" width="0.0131%" height="15" fill="rgb(205,6,39)" fg:x="30235" fg:w="13"/><text x="30.6608%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="30.4068%" y="597" width="0.0211%" height="15" fill="rgb(221,32,16)" fg:x="30231" fg:w="21"/><text x="30.6568%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="30.4068%" y="581" width="0.0211%" height="15" fill="rgb(228,144,50)" fg:x="30231" fg:w="21"/><text x="30.6568%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (26 samples, 0.03%)</title><rect x="30.4057%" y="613" width="0.0262%" height="15" fill="rgb(229,201,53)" fg:x="30230" fg:w="26"/><text x="30.6557%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (60 samples, 0.06%)</title><rect x="30.3726%" y="645" width="0.0603%" height="15" fill="rgb(249,153,27)" fg:x="30197" fg:w="60"/><text x="30.6226%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (40 samples, 0.04%)</title><rect x="30.3927%" y="629" width="0.0402%" height="15" fill="rgb(227,106,25)" fg:x="30217" fg:w="40"/><text x="30.6427%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (64 samples, 0.06%)</title><rect x="30.3695%" y="661" width="0.0644%" height="15" fill="rgb(230,65,29)" fg:x="30194" fg:w="64"/><text x="30.6195%" y="671.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (278 samples, 0.28%)</title><rect x="30.1633%" y="773" width="0.2796%" height="15" fill="rgb(221,57,46)" fg:x="29989" fg:w="278"/><text x="30.4133%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (219 samples, 0.22%)</title><rect x="30.2227%" y="757" width="0.2203%" height="15" fill="rgb(229,161,17)" fg:x="30048" fg:w="219"/><text x="30.4727%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (219 samples, 0.22%)</title><rect x="30.2227%" y="741" width="0.2203%" height="15" fill="rgb(222,213,11)" fg:x="30048" fg:w="219"/><text x="30.4727%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (211 samples, 0.21%)</title><rect x="30.2307%" y="725" width="0.2122%" height="15" fill="rgb(235,35,13)" fg:x="30056" fg:w="211"/><text x="30.4807%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (211 samples, 0.21%)</title><rect x="30.2307%" y="709" width="0.2122%" height="15" fill="rgb(233,158,34)" fg:x="30056" fg:w="211"/><text x="30.4807%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (211 samples, 0.21%)</title><rect x="30.2307%" y="693" width="0.2122%" height="15" fill="rgb(215,151,48)" fg:x="30056" fg:w="211"/><text x="30.4807%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (211 samples, 0.21%)</title><rect x="30.2307%" y="677" width="0.2122%" height="15" fill="rgb(229,84,14)" fg:x="30056" fg:w="211"/><text x="30.4807%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (11 samples, 0.01%)</title><rect x="30.4500%" y="437" width="0.0111%" height="15" fill="rgb(229,68,14)" fg:x="30274" fg:w="11"/><text x="30.7000%" y="447.50"></text></g><g><title>alloc::slice::hack::into_vec (11 samples, 0.01%)</title><rect x="30.4500%" y="421" width="0.0111%" height="15" fill="rgb(243,106,26)" fg:x="30274" fg:w="11"/><text x="30.7000%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="30.4430%" y="597" width="0.0241%" height="15" fill="rgb(206,45,38)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.02%)</title><rect x="30.4430%" y="581" width="0.0241%" height="15" fill="rgb(226,6,15)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="30.4430%" y="565" width="0.0241%" height="15" fill="rgb(232,22,54)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="30.4430%" y="549" width="0.0241%" height="15" fill="rgb(229,222,32)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.02%)</title><rect x="30.4430%" y="533" width="0.0241%" height="15" fill="rgb(228,62,29)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.02%)</title><rect x="30.4430%" y="517" width="0.0241%" height="15" fill="rgb(251,103,34)" fg:x="30267" fg:w="24"/><text x="30.6930%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="30.4480%" y="501" width="0.0191%" height="15" fill="rgb(233,12,30)" fg:x="30272" fg:w="19"/><text x="30.6980%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (19 samples, 0.02%)</title><rect x="30.4480%" y="485" width="0.0191%" height="15" fill="rgb(238,52,0)" fg:x="30272" fg:w="19"/><text x="30.6980%" y="495.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new::_{{closure}} (19 samples, 0.02%)</title><rect x="30.4480%" y="469" width="0.0191%" height="15" fill="rgb(223,98,5)" fg:x="30272" fg:w="19"/><text x="30.6980%" y="479.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (19 samples, 0.02%)</title><rect x="30.4480%" y="453" width="0.0191%" height="15" fill="rgb(228,75,37)" fg:x="30272" fg:w="19"/><text x="30.6980%" y="463.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.01%)</title><rect x="30.4671%" y="469" width="0.0111%" height="15" fill="rgb(205,115,49)" fg:x="30291" fg:w="11"/><text x="30.7171%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (36 samples, 0.04%)</title><rect x="30.4430%" y="629" width="0.0362%" height="15" fill="rgb(250,154,43)" fg:x="30267" fg:w="36"/><text x="30.6930%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (36 samples, 0.04%)</title><rect x="30.4430%" y="613" width="0.0362%" height="15" fill="rgb(226,43,29)" fg:x="30267" fg:w="36"/><text x="30.6930%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="30.4671%" y="597" width="0.0121%" height="15" fill="rgb(249,228,39)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="30.4671%" y="581" width="0.0121%" height="15" fill="rgb(216,79,43)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (12 samples, 0.01%)</title><rect x="30.4671%" y="565" width="0.0121%" height="15" fill="rgb(228,95,12)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="30.4671%" y="549" width="0.0121%" height="15" fill="rgb(249,221,15)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="30.4671%" y="533" width="0.0121%" height="15" fill="rgb(233,34,13)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.01%)</title><rect x="30.4671%" y="517" width="0.0121%" height="15" fill="rgb(214,103,39)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.01%)</title><rect x="30.4671%" y="501" width="0.0121%" height="15" fill="rgb(251,126,39)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="511.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.01%)</title><rect x="30.4671%" y="485" width="0.0121%" height="15" fill="rgb(214,216,36)" fg:x="30291" fg:w="12"/><text x="30.7171%" y="495.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (324 samples, 0.33%)</title><rect x="30.1633%" y="789" width="0.3259%" height="15" fill="rgb(220,221,8)" fg:x="29989" fg:w="324"/><text x="30.4133%" y="799.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (46 samples, 0.05%)</title><rect x="30.4430%" y="773" width="0.0463%" height="15" fill="rgb(240,216,3)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (46 samples, 0.05%)</title><rect x="30.4430%" y="757" width="0.0463%" height="15" fill="rgb(232,218,17)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (46 samples, 0.05%)</title><rect x="30.4430%" y="741" width="0.0463%" height="15" fill="rgb(229,163,45)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="751.50"></text></g><g><title>core::iter::adapters::process_results (46 samples, 0.05%)</title><rect x="30.4430%" y="725" width="0.0463%" height="15" fill="rgb(231,110,42)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (46 samples, 0.05%)</title><rect x="30.4430%" y="709" width="0.0463%" height="15" fill="rgb(208,170,48)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (46 samples, 0.05%)</title><rect x="30.4430%" y="693" width="0.0463%" height="15" fill="rgb(239,116,25)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (46 samples, 0.05%)</title><rect x="30.4430%" y="677" width="0.0463%" height="15" fill="rgb(219,200,50)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 0.05%)</title><rect x="30.4430%" y="661" width="0.0463%" height="15" fill="rgb(245,200,0)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.05%)</title><rect x="30.4430%" y="645" width="0.0463%" height="15" fill="rgb(245,119,33)" fg:x="30267" fg:w="46"/><text x="30.6930%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="30.4792%" y="629" width="0.0101%" height="15" fill="rgb(231,125,12)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 0.01%)</title><rect x="30.4792%" y="613" width="0.0101%" height="15" fill="rgb(216,96,41)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="30.4792%" y="597" width="0.0101%" height="15" fill="rgb(248,43,45)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="30.4792%" y="581" width="0.0101%" height="15" fill="rgb(217,222,7)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.01%)</title><rect x="30.4792%" y="565" width="0.0101%" height="15" fill="rgb(233,28,6)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="30.4792%" y="549" width="0.0101%" height="15" fill="rgb(231,218,15)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.01%)</title><rect x="30.4792%" y="533" width="0.0101%" height="15" fill="rgb(226,171,48)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (10 samples, 0.01%)</title><rect x="30.4792%" y="517" width="0.0101%" height="15" fill="rgb(235,201,9)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="527.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new::_{{closure}} (10 samples, 0.01%)</title><rect x="30.4792%" y="501" width="0.0101%" height="15" fill="rgb(217,80,15)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="511.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (10 samples, 0.01%)</title><rect x="30.4792%" y="485" width="0.0101%" height="15" fill="rgb(219,152,8)" fg:x="30303" fg:w="10"/><text x="30.7292%" y="495.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="30.4902%" y="677" width="0.0131%" height="15" fill="rgb(243,107,38)" fg:x="30314" fg:w="13"/><text x="30.7402%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (10 samples, 0.01%)</title><rect x="30.5033%" y="677" width="0.0101%" height="15" fill="rgb(231,17,5)" fg:x="30327" fg:w="10"/><text x="30.7533%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="30.5134%" y="581" width="0.0141%" height="15" fill="rgb(209,25,54)" fg:x="30337" fg:w="14"/><text x="30.7634%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="30.5134%" y="565" width="0.0141%" height="15" fill="rgb(219,0,2)" fg:x="30337" fg:w="14"/><text x="30.7634%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (15 samples, 0.02%)</title><rect x="30.5134%" y="629" width="0.0151%" height="15" fill="rgb(246,9,5)" fg:x="30337" fg:w="15"/><text x="30.7634%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (15 samples, 0.02%)</title><rect x="30.5134%" y="613" width="0.0151%" height="15" fill="rgb(226,159,4)" fg:x="30337" fg:w="15"/><text x="30.7634%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (15 samples, 0.02%)</title><rect x="30.5134%" y="597" width="0.0151%" height="15" fill="rgb(219,175,34)" fg:x="30337" fg:w="15"/><text x="30.7634%" y="607.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="30.4902%" y="725" width="0.0392%" height="15" fill="rgb(236,10,46)" fg:x="30314" fg:w="39"/><text x="30.7402%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="30.4902%" y="709" width="0.0392%" height="15" fill="rgb(240,211,16)" fg:x="30314" fg:w="39"/><text x="30.7402%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (39 samples, 0.04%)</title><rect x="30.4902%" y="693" width="0.0392%" height="15" fill="rgb(205,3,43)" fg:x="30314" fg:w="39"/><text x="30.7402%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (16 samples, 0.02%)</title><rect x="30.5134%" y="677" width="0.0161%" height="15" fill="rgb(245,7,22)" fg:x="30337" fg:w="16"/><text x="30.7634%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.02%)</title><rect x="30.5134%" y="661" width="0.0161%" height="15" fill="rgb(239,132,32)" fg:x="30337" fg:w="16"/><text x="30.7634%" y="671.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (16 samples, 0.02%)</title><rect x="30.5134%" y="645" width="0.0161%" height="15" fill="rgb(228,202,34)" fg:x="30337" fg:w="16"/><text x="30.7634%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (14 samples, 0.01%)</title><rect x="30.5516%" y="645" width="0.0141%" height="15" fill="rgb(254,200,22)" fg:x="30375" fg:w="14"/><text x="30.8016%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (37 samples, 0.04%)</title><rect x="30.5355%" y="661" width="0.0372%" height="15" fill="rgb(219,10,39)" fg:x="30359" fg:w="37"/><text x="30.7855%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (50 samples, 0.05%)</title><rect x="30.5335%" y="677" width="0.0503%" height="15" fill="rgb(226,210,39)" fg:x="30357" fg:w="50"/><text x="30.7835%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (56 samples, 0.06%)</title><rect x="30.5295%" y="725" width="0.0563%" height="15" fill="rgb(208,219,16)" fg:x="30353" fg:w="56"/><text x="30.7795%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (56 samples, 0.06%)</title><rect x="30.5295%" y="709" width="0.0563%" height="15" fill="rgb(216,158,51)" fg:x="30353" fg:w="56"/><text x="30.7795%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (56 samples, 0.06%)</title><rect x="30.5295%" y="693" width="0.0563%" height="15" fill="rgb(233,14,44)" fg:x="30353" fg:w="56"/><text x="30.7795%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.01%)</title><rect x="30.5979%" y="613" width="0.0111%" height="15" fill="rgb(237,97,39)" fg:x="30421" fg:w="11"/><text x="30.8479%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="30.5979%" y="597" width="0.0111%" height="15" fill="rgb(218,198,43)" fg:x="30421" fg:w="11"/><text x="30.8479%" y="607.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="30.5898%" y="709" width="0.0201%" height="15" fill="rgb(231,104,20)" fg:x="30413" fg:w="20"/><text x="30.8398%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="30.5898%" y="693" width="0.0201%" height="15" fill="rgb(254,36,13)" fg:x="30413" fg:w="20"/><text x="30.8398%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.02%)</title><rect x="30.5898%" y="677" width="0.0201%" height="15" fill="rgb(248,14,50)" fg:x="30413" fg:w="20"/><text x="30.8398%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (12 samples, 0.01%)</title><rect x="30.5979%" y="661" width="0.0121%" height="15" fill="rgb(217,107,29)" fg:x="30421" fg:w="12"/><text x="30.8479%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (12 samples, 0.01%)</title><rect x="30.5979%" y="645" width="0.0121%" height="15" fill="rgb(251,169,33)" fg:x="30421" fg:w="12"/><text x="30.8479%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (12 samples, 0.01%)</title><rect x="30.5979%" y="629" width="0.0121%" height="15" fill="rgb(217,108,32)" fg:x="30421" fg:w="12"/><text x="30.8479%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (61 samples, 0.06%)</title><rect x="30.6119%" y="693" width="0.0614%" height="15" fill="rgb(219,66,42)" fg:x="30435" fg:w="61"/><text x="30.8619%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (57 samples, 0.06%)</title><rect x="30.6160%" y="677" width="0.0573%" height="15" fill="rgb(206,180,7)" fg:x="30439" fg:w="57"/><text x="30.8660%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 0.06%)</title><rect x="30.6160%" y="661" width="0.0573%" height="15" fill="rgb(208,226,31)" fg:x="30439" fg:w="57"/><text x="30.8660%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (48 samples, 0.05%)</title><rect x="30.6250%" y="645" width="0.0483%" height="15" fill="rgb(218,26,49)" fg:x="30448" fg:w="48"/><text x="30.8750%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (48 samples, 0.05%)</title><rect x="30.6250%" y="629" width="0.0483%" height="15" fill="rgb(233,197,48)" fg:x="30448" fg:w="48"/><text x="30.8750%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (35 samples, 0.04%)</title><rect x="30.6381%" y="613" width="0.0352%" height="15" fill="rgb(252,181,51)" fg:x="30461" fg:w="35"/><text x="30.8881%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 0.03%)</title><rect x="30.6451%" y="597" width="0.0282%" height="15" fill="rgb(253,90,19)" fg:x="30468" fg:w="28"/><text x="30.8951%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (18 samples, 0.02%)</title><rect x="30.6552%" y="581" width="0.0181%" height="15" fill="rgb(215,171,30)" fg:x="30478" fg:w="18"/><text x="30.9052%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (18 samples, 0.02%)</title><rect x="30.6552%" y="565" width="0.0181%" height="15" fill="rgb(214,222,9)" fg:x="30478" fg:w="18"/><text x="30.9052%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (17 samples, 0.02%)</title><rect x="30.6562%" y="549" width="0.0171%" height="15" fill="rgb(223,3,22)" fg:x="30479" fg:w="17"/><text x="30.9062%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.01%)</title><rect x="30.6753%" y="565" width="0.0131%" height="15" fill="rgb(225,196,46)" fg:x="30498" fg:w="13"/><text x="30.9253%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="30.6743%" y="645" width="0.0161%" height="15" fill="rgb(209,110,37)" fg:x="30497" fg:w="16"/><text x="30.9243%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="30.6743%" y="629" width="0.0161%" height="15" fill="rgb(249,89,12)" fg:x="30497" fg:w="16"/><text x="30.9243%" y="639.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (16 samples, 0.02%)</title><rect x="30.6743%" y="613" width="0.0161%" height="15" fill="rgb(226,27,33)" fg:x="30497" fg:w="16"/><text x="30.9243%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (16 samples, 0.02%)</title><rect x="30.6743%" y="597" width="0.0161%" height="15" fill="rgb(213,82,22)" fg:x="30497" fg:w="16"/><text x="30.9243%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.02%)</title><rect x="30.6743%" y="581" width="0.0161%" height="15" fill="rgb(248,140,0)" fg:x="30497" fg:w="16"/><text x="30.9243%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="30.7115%" y="517" width="0.0101%" height="15" fill="rgb(228,106,3)" fg:x="30534" fg:w="10"/><text x="30.9615%" y="527.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (49 samples, 0.05%)</title><rect x="30.6733%" y="693" width="0.0493%" height="15" fill="rgb(209,23,37)" fg:x="30496" fg:w="49"/><text x="30.9233%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (48 samples, 0.05%)</title><rect x="30.6743%" y="677" width="0.0483%" height="15" fill="rgb(241,93,50)" fg:x="30497" fg:w="48"/><text x="30.9243%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.05%)</title><rect x="30.6743%" y="661" width="0.0483%" height="15" fill="rgb(253,46,43)" fg:x="30497" fg:w="48"/><text x="30.9243%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (32 samples, 0.03%)</title><rect x="30.6904%" y="645" width="0.0322%" height="15" fill="rgb(226,206,43)" fg:x="30513" fg:w="32"/><text x="30.9404%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (32 samples, 0.03%)</title><rect x="30.6904%" y="629" width="0.0322%" height="15" fill="rgb(217,54,7)" fg:x="30513" fg:w="32"/><text x="30.9404%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (25 samples, 0.03%)</title><rect x="30.6974%" y="613" width="0.0251%" height="15" fill="rgb(223,5,52)" fg:x="30520" fg:w="25"/><text x="30.9474%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.02%)</title><rect x="30.6984%" y="597" width="0.0241%" height="15" fill="rgb(206,52,46)" fg:x="30521" fg:w="24"/><text x="30.9484%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.01%)</title><rect x="30.7105%" y="581" width="0.0121%" height="15" fill="rgb(253,136,11)" fg:x="30533" fg:w="12"/><text x="30.9605%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (12 samples, 0.01%)</title><rect x="30.7105%" y="565" width="0.0121%" height="15" fill="rgb(208,106,33)" fg:x="30533" fg:w="12"/><text x="30.9605%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (12 samples, 0.01%)</title><rect x="30.7105%" y="549" width="0.0121%" height="15" fill="rgb(206,54,4)" fg:x="30533" fg:w="12"/><text x="30.9605%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.01%)</title><rect x="30.7105%" y="533" width="0.0121%" height="15" fill="rgb(213,3,15)" fg:x="30533" fg:w="12"/><text x="30.9605%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="30.7276%" y="581" width="0.0121%" height="15" fill="rgb(252,211,39)" fg:x="30550" fg:w="12"/><text x="30.9776%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="30.7276%" y="645" width="0.0141%" height="15" fill="rgb(223,6,36)" fg:x="30550" fg:w="14"/><text x="30.9776%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="30.7276%" y="629" width="0.0141%" height="15" fill="rgb(252,169,45)" fg:x="30550" fg:w="14"/><text x="30.9776%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="30.7276%" y="613" width="0.0141%" height="15" fill="rgb(212,48,26)" fg:x="30550" fg:w="14"/><text x="30.9776%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="30.7276%" y="597" width="0.0141%" height="15" fill="rgb(251,102,48)" fg:x="30550" fg:w="14"/><text x="30.9776%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (159 samples, 0.16%)</title><rect x="30.6119%" y="709" width="0.1599%" height="15" fill="rgb(243,208,16)" fg:x="30435" fg:w="159"/><text x="30.8619%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (49 samples, 0.05%)</title><rect x="30.7226%" y="693" width="0.0493%" height="15" fill="rgb(219,96,24)" fg:x="30545" fg:w="49"/><text x="30.9726%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (44 samples, 0.04%)</title><rect x="30.7276%" y="677" width="0.0443%" height="15" fill="rgb(219,33,29)" fg:x="30550" fg:w="44"/><text x="30.9776%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (44 samples, 0.04%)</title><rect x="30.7276%" y="661" width="0.0443%" height="15" fill="rgb(223,176,5)" fg:x="30550" fg:w="44"/><text x="30.9776%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (30 samples, 0.03%)</title><rect x="30.7417%" y="645" width="0.0302%" height="15" fill="rgb(228,140,14)" fg:x="30564" fg:w="30"/><text x="30.9917%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (30 samples, 0.03%)</title><rect x="30.7417%" y="629" width="0.0302%" height="15" fill="rgb(217,179,31)" fg:x="30564" fg:w="30"/><text x="30.9917%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (21 samples, 0.02%)</title><rect x="30.7507%" y="613" width="0.0211%" height="15" fill="rgb(230,9,30)" fg:x="30573" fg:w="21"/><text x="31.0007%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="30.7538%" y="597" width="0.0181%" height="15" fill="rgb(230,136,20)" fg:x="30576" fg:w="18"/><text x="31.0038%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (11 samples, 0.01%)</title><rect x="30.7809%" y="693" width="0.0111%" height="15" fill="rgb(215,210,22)" fg:x="30603" fg:w="11"/><text x="31.0309%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (11 samples, 0.01%)</title><rect x="30.7809%" y="677" width="0.0111%" height="15" fill="rgb(218,43,5)" fg:x="30603" fg:w="11"/><text x="31.0309%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::unmatched_edges (44 samples, 0.04%)</title><rect x="30.7719%" y="709" width="0.0443%" height="15" fill="rgb(216,11,5)" fg:x="30594" fg:w="44"/><text x="31.0219%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="30.8051%" y="693" width="0.0111%" height="15" fill="rgb(209,82,29)" fg:x="30627" fg:w="11"/><text x="31.0551%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::unmatched_edges::_{{closure}} (11 samples, 0.01%)</title><rect x="30.8051%" y="677" width="0.0111%" height="15" fill="rgb(244,115,12)" fg:x="30627" fg:w="11"/><text x="31.0551%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join (248 samples, 0.25%)</title><rect x="30.5858%" y="725" width="0.2494%" height="15" fill="rgb(222,82,18)" fg:x="30409" fg:w="248"/><text x="30.8358%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (19 samples, 0.02%)</title><rect x="30.8161%" y="709" width="0.0191%" height="15" fill="rgb(249,227,8)" fg:x="30638" fg:w="19"/><text x="31.0661%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.02%)</title><rect x="30.8161%" y="693" width="0.0191%" height="15" fill="rgb(253,141,45)" fg:x="30638" fg:w="19"/><text x="31.0661%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.01%)</title><rect x="30.8232%" y="677" width="0.0121%" height="15" fill="rgb(234,184,4)" fg:x="30645" fg:w="12"/><text x="31.0732%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join::_{{closure}} (12 samples, 0.01%)</title><rect x="30.8232%" y="661" width="0.0121%" height="15" fill="rgb(218,194,23)" fg:x="30645" fg:w="12"/><text x="31.0732%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (12 samples, 0.01%)</title><rect x="30.8232%" y="645" width="0.0121%" height="15" fill="rgb(235,66,41)" fg:x="30645" fg:w="12"/><text x="31.0732%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (12 samples, 0.01%)</title><rect x="30.8232%" y="629" width="0.0121%" height="15" fill="rgb(245,217,1)" fg:x="30645" fg:w="12"/><text x="31.0732%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="30.8252%" y="613" width="0.0101%" height="15" fill="rgb(229,91,1)" fg:x="30647" fg:w="10"/><text x="31.0752%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (15 samples, 0.02%)</title><rect x="30.8352%" y="645" width="0.0151%" height="15" fill="rgb(207,101,30)" fg:x="30657" fg:w="15"/><text x="31.0852%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (15 samples, 0.02%)</title><rect x="30.8352%" y="629" width="0.0151%" height="15" fill="rgb(223,82,49)" fg:x="30657" fg:w="15"/><text x="31.0852%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.02%)</title><rect x="30.8352%" y="613" width="0.0151%" height="15" fill="rgb(218,167,17)" fg:x="30657" fg:w="15"/><text x="31.0852%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (15 samples, 0.02%)</title><rect x="30.8352%" y="597" width="0.0151%" height="15" fill="rgb(208,103,14)" fg:x="30657" fg:w="15"/><text x="31.0852%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (15 samples, 0.02%)</title><rect x="30.8352%" y="581" width="0.0151%" height="15" fill="rgb(238,20,8)" fg:x="30657" fg:w="15"/><text x="31.0852%" y="591.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (368 samples, 0.37%)</title><rect x="30.4902%" y="741" width="0.3701%" height="15" fill="rgb(218,80,54)" fg:x="30314" fg:w="368"/><text x="30.7402%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (25 samples, 0.03%)</title><rect x="30.8352%" y="725" width="0.0251%" height="15" fill="rgb(240,144,17)" fg:x="30657" fg:w="25"/><text x="31.0852%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (25 samples, 0.03%)</title><rect x="30.8352%" y="709" width="0.0251%" height="15" fill="rgb(245,27,50)" fg:x="30657" fg:w="25"/><text x="31.0852%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="30.8352%" y="693" width="0.0251%" height="15" fill="rgb(251,51,7)" fg:x="30657" fg:w="25"/><text x="31.0852%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (25 samples, 0.03%)</title><rect x="30.8352%" y="677" width="0.0251%" height="15" fill="rgb(245,217,29)" fg:x="30657" fg:w="25"/><text x="31.0852%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="30.8352%" y="661" width="0.0251%" height="15" fill="rgb(221,176,29)" fg:x="30657" fg:w="25"/><text x="31.0852%" y="671.50"></text></g><g><title>core::mem::drop (10 samples, 0.01%)</title><rect x="30.8503%" y="645" width="0.0101%" height="15" fill="rgb(212,180,24)" fg:x="30672" fg:w="10"/><text x="31.1003%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (10 samples, 0.01%)</title><rect x="30.8503%" y="629" width="0.0101%" height="15" fill="rgb(254,24,2)" fg:x="30672" fg:w="10"/><text x="31.1003%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (10 samples, 0.01%)</title><rect x="30.8503%" y="613" width="0.0101%" height="15" fill="rgb(230,100,2)" fg:x="30672" fg:w="10"/><text x="31.1003%" y="623.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (376 samples, 0.38%)</title><rect x="30.4892%" y="757" width="0.3782%" height="15" fill="rgb(219,142,25)" fg:x="30313" fg:w="376"/><text x="30.7392%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="30.8734%" y="693" width="0.0101%" height="15" fill="rgb(240,73,43)" fg:x="30695" fg:w="10"/><text x="31.1234%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (14 samples, 0.01%)</title><rect x="30.8835%" y="693" width="0.0141%" height="15" fill="rgb(214,114,15)" fg:x="30705" fg:w="14"/><text x="31.1335%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (27 samples, 0.03%)</title><rect x="30.8976%" y="693" width="0.0272%" height="15" fill="rgb(207,130,4)" fg:x="30719" fg:w="27"/><text x="31.1476%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.01%)</title><rect x="30.9308%" y="645" width="0.0121%" height="15" fill="rgb(221,25,40)" fg:x="30752" fg:w="12"/><text x="31.1808%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="30.9308%" y="629" width="0.0121%" height="15" fill="rgb(241,184,7)" fg:x="30752" fg:w="12"/><text x="31.1808%" y="639.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (22 samples, 0.02%)</title><rect x="30.9278%" y="661" width="0.0221%" height="15" fill="rgb(235,159,4)" fg:x="30749" fg:w="22"/><text x="31.1778%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (83 samples, 0.08%)</title><rect x="30.8674%" y="709" width="0.0835%" height="15" fill="rgb(214,87,48)" fg:x="30689" fg:w="83"/><text x="31.1174%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (25 samples, 0.03%)</title><rect x="30.9258%" y="693" width="0.0251%" height="15" fill="rgb(246,198,24)" fg:x="30747" fg:w="25"/><text x="31.1758%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (24 samples, 0.02%)</title><rect x="30.9268%" y="677" width="0.0241%" height="15" fill="rgb(209,66,40)" fg:x="30748" fg:w="24"/><text x="31.1768%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (90 samples, 0.09%)</title><rect x="30.8674%" y="741" width="0.0905%" height="15" fill="rgb(233,147,39)" fg:x="30689" fg:w="90"/><text x="31.1174%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (90 samples, 0.09%)</title><rect x="30.8674%" y="725" width="0.0905%" height="15" fill="rgb(231,145,52)" fg:x="30689" fg:w="90"/><text x="31.1174%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="30.9579%" y="677" width="0.0191%" height="15" fill="rgb(206,20,26)" fg:x="30779" fg:w="19"/><text x="31.2079%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="30.9579%" y="661" width="0.0191%" height="15" fill="rgb(238,220,4)" fg:x="30779" fg:w="19"/><text x="31.2079%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.02%)</title><rect x="30.9579%" y="645" width="0.0191%" height="15" fill="rgb(252,195,42)" fg:x="30779" fg:w="19"/><text x="31.2079%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (10 samples, 0.01%)</title><rect x="30.9911%" y="581" width="0.0101%" height="15" fill="rgb(209,10,6)" fg:x="30812" fg:w="10"/><text x="31.2411%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.01%)</title><rect x="30.9911%" y="565" width="0.0101%" height="15" fill="rgb(229,3,52)" fg:x="30812" fg:w="10"/><text x="31.2411%" y="575.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (15 samples, 0.02%)</title><rect x="30.9901%" y="597" width="0.0151%" height="15" fill="rgb(253,49,37)" fg:x="30811" fg:w="15"/><text x="31.2401%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (16 samples, 0.02%)</title><rect x="30.9901%" y="629" width="0.0161%" height="15" fill="rgb(240,103,49)" fg:x="30811" fg:w="16"/><text x="31.2401%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (16 samples, 0.02%)</title><rect x="30.9901%" y="613" width="0.0161%" height="15" fill="rgb(250,182,30)" fg:x="30811" fg:w="16"/><text x="31.2401%" y="623.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="30.9579%" y="693" width="0.0513%" height="15" fill="rgb(248,8,30)" fg:x="30779" fg:w="51"/><text x="31.2079%" y="703.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="30.9770%" y="677" width="0.0322%" height="15" fill="rgb(237,120,30)" fg:x="30798" fg:w="32"/><text x="31.2270%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="30.9770%" y="661" width="0.0322%" height="15" fill="rgb(221,146,34)" fg:x="30798" fg:w="32"/><text x="31.2270%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (32 samples, 0.03%)</title><rect x="30.9770%" y="645" width="0.0322%" height="15" fill="rgb(242,55,13)" fg:x="30798" fg:w="32"/><text x="31.2270%" y="655.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (151 samples, 0.15%)</title><rect x="30.8674%" y="757" width="0.1519%" height="15" fill="rgb(242,112,31)" fg:x="30689" fg:w="151"/><text x="31.1174%" y="767.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (61 samples, 0.06%)</title><rect x="30.9579%" y="741" width="0.0614%" height="15" fill="rgb(249,192,27)" fg:x="30779" fg:w="61"/><text x="31.2079%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (61 samples, 0.06%)</title><rect x="30.9579%" y="725" width="0.0614%" height="15" fill="rgb(208,204,44)" fg:x="30779" fg:w="61"/><text x="31.2079%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (61 samples, 0.06%)</title><rect x="30.9579%" y="709" width="0.0614%" height="15" fill="rgb(208,93,54)" fg:x="30779" fg:w="61"/><text x="31.2079%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="31.0414%" y="645" width="0.0121%" height="15" fill="rgb(242,1,31)" fg:x="30862" fg:w="12"/><text x="31.2914%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="31.0414%" y="629" width="0.0121%" height="15" fill="rgb(241,83,25)" fg:x="30862" fg:w="12"/><text x="31.2914%" y="639.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="31.0364%" y="661" width="0.0251%" height="15" fill="rgb(205,169,50)" fg:x="30857" fg:w="25"/><text x="31.2864%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (18 samples, 0.02%)</title><rect x="31.0646%" y="661" width="0.0181%" height="15" fill="rgb(239,186,37)" fg:x="30885" fg:w="18"/><text x="31.3146%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (10 samples, 0.01%)</title><rect x="31.0726%" y="645" width="0.0101%" height="15" fill="rgb(205,221,10)" fg:x="30893" fg:w="10"/><text x="31.3226%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (21 samples, 0.02%)</title><rect x="31.0837%" y="661" width="0.0211%" height="15" fill="rgb(218,196,15)" fg:x="30904" fg:w="21"/><text x="31.3337%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (14 samples, 0.01%)</title><rect x="31.1209%" y="645" width="0.0141%" height="15" fill="rgb(218,196,35)" fg:x="30941" fg:w="14"/><text x="31.3709%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (14 samples, 0.01%)</title><rect x="31.1360%" y="645" width="0.0141%" height="15" fill="rgb(233,63,24)" fg:x="30956" fg:w="14"/><text x="31.3860%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (24 samples, 0.02%)</title><rect x="31.1511%" y="645" width="0.0241%" height="15" fill="rgb(225,8,4)" fg:x="30971" fg:w="24"/><text x="31.4011%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="31.1621%" y="629" width="0.0131%" height="15" fill="rgb(234,105,35)" fg:x="30982" fg:w="13"/><text x="31.4121%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (68 samples, 0.07%)</title><rect x="31.1078%" y="661" width="0.0684%" height="15" fill="rgb(236,21,32)" fg:x="30928" fg:w="68"/><text x="31.3578%" y="671.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.02%)</title><rect x="31.2265%" y="517" width="0.0171%" height="15" fill="rgb(228,109,6)" fg:x="31046" fg:w="17"/><text x="31.4765%" y="527.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="31.2265%" y="533" width="0.0201%" height="15" fill="rgb(229,215,31)" fg:x="31046" fg:w="20"/><text x="31.4765%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.04%)</title><rect x="31.2194%" y="565" width="0.0362%" height="15" fill="rgb(221,52,54)" fg:x="31039" fg:w="36"/><text x="31.4694%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.04%)</title><rect x="31.2205%" y="549" width="0.0352%" height="15" fill="rgb(252,129,43)" fg:x="31040" fg:w="35"/><text x="31.4705%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (63 samples, 0.06%)</title><rect x="31.1983%" y="581" width="0.0634%" height="15" fill="rgb(248,183,27)" fg:x="31018" fg:w="63"/><text x="31.4483%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (73 samples, 0.07%)</title><rect x="31.1933%" y="613" width="0.0734%" height="15" fill="rgb(250,0,22)" fg:x="31013" fg:w="73"/><text x="31.4433%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (71 samples, 0.07%)</title><rect x="31.1953%" y="597" width="0.0714%" height="15" fill="rgb(213,166,10)" fg:x="31015" fg:w="71"/><text x="31.4453%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (14 samples, 0.01%)</title><rect x="31.2748%" y="581" width="0.0141%" height="15" fill="rgb(207,163,36)" fg:x="31094" fg:w="14"/><text x="31.5248%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (23 samples, 0.02%)</title><rect x="31.2667%" y="613" width="0.0231%" height="15" fill="rgb(208,122,22)" fg:x="31086" fg:w="23"/><text x="31.5167%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (16 samples, 0.02%)</title><rect x="31.2738%" y="597" width="0.0161%" height="15" fill="rgb(207,104,49)" fg:x="31093" fg:w="16"/><text x="31.5238%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (113 samples, 0.11%)</title><rect x="31.1822%" y="629" width="0.1137%" height="15" fill="rgb(248,211,50)" fg:x="31002" fg:w="113"/><text x="31.4322%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (118 samples, 0.12%)</title><rect x="31.1802%" y="661" width="0.1187%" height="15" fill="rgb(217,13,45)" fg:x="31000" fg:w="118"/><text x="31.4302%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (118 samples, 0.12%)</title><rect x="31.1802%" y="645" width="0.1187%" height="15" fill="rgb(211,216,49)" fg:x="31000" fg:w="118"/><text x="31.4302%" y="655.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (284 samples, 0.29%)</title><rect x="31.0193%" y="709" width="0.2857%" height="15" fill="rgb(221,58,53)" fg:x="30840" fg:w="284"/><text x="31.2693%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (284 samples, 0.29%)</title><rect x="31.0193%" y="693" width="0.2857%" height="15" fill="rgb(220,112,41)" fg:x="30840" fg:w="284"/><text x="31.2693%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (284 samples, 0.29%)</title><rect x="31.0193%" y="677" width="0.2857%" height="15" fill="rgb(236,38,28)" fg:x="30840" fg:w="284"/><text x="31.2693%" y="687.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.03%)</title><rect x="31.3542%" y="485" width="0.0272%" height="15" fill="rgb(227,195,22)" fg:x="31173" fg:w="27"/><text x="31.6042%" y="495.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.03%)</title><rect x="31.3542%" y="501" width="0.0292%" height="15" fill="rgb(214,55,33)" fg:x="31173" fg:w="29"/><text x="31.6042%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.05%)</title><rect x="31.3492%" y="533" width="0.0473%" height="15" fill="rgb(248,80,13)" fg:x="31168" fg:w="47"/><text x="31.5992%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.05%)</title><rect x="31.3512%" y="517" width="0.0453%" height="15" fill="rgb(238,52,6)" fg:x="31170" fg:w="45"/><text x="31.6012%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (69 samples, 0.07%)</title><rect x="31.3371%" y="549" width="0.0694%" height="15" fill="rgb(224,198,47)" fg:x="31156" fg:w="69"/><text x="31.5871%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (84 samples, 0.08%)</title><rect x="31.3331%" y="581" width="0.0845%" height="15" fill="rgb(233,171,20)" fg:x="31152" fg:w="84"/><text x="31.5831%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (84 samples, 0.08%)</title><rect x="31.3331%" y="565" width="0.0845%" height="15" fill="rgb(241,30,25)" fg:x="31152" fg:w="84"/><text x="31.5831%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::new (11 samples, 0.01%)</title><rect x="31.4065%" y="549" width="0.0111%" height="15" fill="rgb(207,171,38)" fg:x="31225" fg:w="11"/><text x="31.6565%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (14 samples, 0.01%)</title><rect x="31.4236%" y="549" width="0.0141%" height="15" fill="rgb(234,70,1)" fg:x="31242" fg:w="14"/><text x="31.6736%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (24 samples, 0.02%)</title><rect x="31.4176%" y="581" width="0.0241%" height="15" fill="rgb(232,178,18)" fg:x="31236" fg:w="24"/><text x="31.6676%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (20 samples, 0.02%)</title><rect x="31.4216%" y="565" width="0.0201%" height="15" fill="rgb(241,78,40)" fg:x="31240" fg:w="20"/><text x="31.6716%" y="575.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (117 samples, 0.12%)</title><rect x="31.3271%" y="597" width="0.1177%" height="15" fill="rgb(222,35,25)" fg:x="31146" fg:w="117"/><text x="31.5771%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (136 samples, 0.14%)</title><rect x="31.3150%" y="677" width="0.1368%" height="15" fill="rgb(207,92,16)" fg:x="31134" fg:w="136"/><text x="31.5650%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (134 samples, 0.13%)</title><rect x="31.3170%" y="661" width="0.1348%" height="15" fill="rgb(216,59,51)" fg:x="31136" fg:w="134"/><text x="31.5670%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (128 samples, 0.13%)</title><rect x="31.3230%" y="645" width="0.1287%" height="15" fill="rgb(213,80,28)" fg:x="31142" fg:w="128"/><text x="31.5730%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (127 samples, 0.13%)</title><rect x="31.3241%" y="629" width="0.1277%" height="15" fill="rgb(220,93,7)" fg:x="31143" fg:w="127"/><text x="31.5741%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (125 samples, 0.13%)</title><rect x="31.3261%" y="613" width="0.1257%" height="15" fill="rgb(225,24,44)" fg:x="31145" fg:w="125"/><text x="31.5761%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (19 samples, 0.02%)</title><rect x="31.4588%" y="661" width="0.0191%" height="15" fill="rgb(243,74,40)" fg:x="31277" fg:w="19"/><text x="31.7088%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="31.4981%" y="629" width="0.0111%" height="15" fill="rgb(228,39,7)" fg:x="31316" fg:w="11"/><text x="31.7481%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="31.5111%" y="629" width="0.0181%" height="15" fill="rgb(227,79,8)" fg:x="31329" fg:w="18"/><text x="31.7611%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="31.5172%" y="613" width="0.0121%" height="15" fill="rgb(236,58,11)" fg:x="31335" fg:w="12"/><text x="31.7672%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="31.5192%" y="597" width="0.0101%" height="15" fill="rgb(249,63,35)" fg:x="31337" fg:w="10"/><text x="31.7692%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (234 samples, 0.24%)</title><rect x="31.3049%" y="693" width="0.2354%" height="15" fill="rgb(252,114,16)" fg:x="31124" fg:w="234"/><text x="31.5549%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (87 samples, 0.09%)</title><rect x="31.4528%" y="677" width="0.0875%" height="15" fill="rgb(254,151,24)" fg:x="31271" fg:w="87"/><text x="31.7028%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (62 samples, 0.06%)</title><rect x="31.4779%" y="661" width="0.0624%" height="15" fill="rgb(253,54,39)" fg:x="31296" fg:w="62"/><text x="31.7279%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (56 samples, 0.06%)</title><rect x="31.4840%" y="645" width="0.0563%" height="15" fill="rgb(243,25,45)" fg:x="31302" fg:w="56"/><text x="31.7340%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (47 samples, 0.05%)</title><rect x="31.5836%" y="645" width="0.0473%" height="15" fill="rgb(234,134,9)" fg:x="31401" fg:w="47"/><text x="31.8336%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (13 samples, 0.01%)</title><rect x="31.6178%" y="629" width="0.0131%" height="15" fill="rgb(227,166,31)" fg:x="31435" fg:w="13"/><text x="31.8678%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (331 samples, 0.33%)</title><rect x="31.3049%" y="709" width="0.3329%" height="15" fill="rgb(245,143,41)" fg:x="31124" fg:w="331"/><text x="31.5549%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (97 samples, 0.10%)</title><rect x="31.5403%" y="693" width="0.0976%" height="15" fill="rgb(238,181,32)" fg:x="31358" fg:w="97"/><text x="31.7903%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (97 samples, 0.10%)</title><rect x="31.5403%" y="677" width="0.0976%" height="15" fill="rgb(224,113,18)" fg:x="31358" fg:w="97"/><text x="31.7903%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (79 samples, 0.08%)</title><rect x="31.5584%" y="661" width="0.0795%" height="15" fill="rgb(240,229,28)" fg:x="31376" fg:w="79"/><text x="31.8084%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (14 samples, 0.01%)</title><rect x="31.6459%" y="661" width="0.0141%" height="15" fill="rgb(250,185,3)" fg:x="31463" fg:w="14"/><text x="31.8959%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (25 samples, 0.03%)</title><rect x="31.6379%" y="709" width="0.0251%" height="15" fill="rgb(212,59,25)" fg:x="31455" fg:w="25"/><text x="31.8879%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (25 samples, 0.03%)</title><rect x="31.6379%" y="693" width="0.0251%" height="15" fill="rgb(221,87,20)" fg:x="31455" fg:w="25"/><text x="31.8879%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (25 samples, 0.03%)</title><rect x="31.6379%" y="677" width="0.0251%" height="15" fill="rgb(213,74,28)" fg:x="31455" fg:w="25"/><text x="31.8879%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="31.6932%" y="661" width="0.0101%" height="15" fill="rgb(224,132,34)" fg:x="31510" fg:w="10"/><text x="31.9432%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (10 samples, 0.01%)</title><rect x="31.6932%" y="645" width="0.0101%" height="15" fill="rgb(222,101,24)" fg:x="31510" fg:w="10"/><text x="31.9432%" y="655.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="31.6851%" y="693" width="0.0191%" height="15" fill="rgb(254,142,4)" fg:x="31502" fg:w="19"/><text x="31.9351%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="31.6872%" y="677" width="0.0171%" height="15" fill="rgb(230,229,49)" fg:x="31504" fg:w="17"/><text x="31.9372%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="31.7364%" y="613" width="0.0101%" height="15" fill="rgb(238,70,47)" fg:x="31553" fg:w="10"/><text x="31.9864%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (34 samples, 0.03%)</title><rect x="31.7173%" y="629" width="0.0342%" height="15" fill="rgb(231,160,17)" fg:x="31534" fg:w="34"/><text x="31.9673%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (41 samples, 0.04%)</title><rect x="31.7133%" y="661" width="0.0412%" height="15" fill="rgb(218,68,53)" fg:x="31530" fg:w="41"/><text x="31.9633%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (41 samples, 0.04%)</title><rect x="31.7133%" y="645" width="0.0412%" height="15" fill="rgb(236,111,10)" fg:x="31530" fg:w="41"/><text x="31.9633%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.05%)</title><rect x="31.7073%" y="693" width="0.0503%" height="15" fill="rgb(224,34,41)" fg:x="31524" fg:w="50"/><text x="31.9573%" y="703.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (47 samples, 0.05%)</title><rect x="31.7103%" y="677" width="0.0473%" height="15" fill="rgb(241,118,19)" fg:x="31527" fg:w="47"/><text x="31.9603%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="31.8129%" y="581" width="0.0101%" height="15" fill="rgb(238,129,25)" fg:x="31629" fg:w="10"/><text x="32.0629%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (29 samples, 0.03%)</title><rect x="31.7948%" y="597" width="0.0292%" height="15" fill="rgb(238,22,31)" fg:x="31611" fg:w="29"/><text x="32.0448%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (16 samples, 0.02%)</title><rect x="31.8239%" y="597" width="0.0161%" height="15" fill="rgb(222,174,48)" fg:x="31640" fg:w="16"/><text x="32.0739%" y="607.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="31.8431%" y="597" width="0.0121%" height="15" fill="rgb(206,152,40)" fg:x="31659" fg:w="12"/><text x="32.0931%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (77 samples, 0.08%)</title><rect x="31.7857%" y="613" width="0.0774%" height="15" fill="rgb(218,99,54)" fg:x="31602" fg:w="77"/><text x="32.0357%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (97 samples, 0.10%)</title><rect x="31.7737%" y="629" width="0.0976%" height="15" fill="rgb(220,174,26)" fg:x="31590" fg:w="97"/><text x="32.0237%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (135 samples, 0.14%)</title><rect x="31.7686%" y="645" width="0.1358%" height="15" fill="rgb(245,116,9)" fg:x="31585" fg:w="135"/><text x="32.0186%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv_valmut (33 samples, 0.03%)</title><rect x="31.8712%" y="629" width="0.0332%" height="15" fill="rgb(209,72,35)" fg:x="31687" fg:w="33"/><text x="32.1212%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,Type&gt;::into_key_val_mut_at (32 samples, 0.03%)</title><rect x="31.8722%" y="613" width="0.0322%" height="15" fill="rgb(226,126,21)" fg:x="31688" fg:w="32"/><text x="32.1222%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="31.8903%" y="597" width="0.0141%" height="15" fill="rgb(227,192,1)" fg:x="31706" fg:w="14"/><text x="32.1403%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 0.15%)</title><rect x="31.7606%" y="677" width="0.1529%" height="15" fill="rgb(237,180,29)" fg:x="31577" fg:w="152"/><text x="32.0106%" y="687.50"></text></g><g><title>alloc::collections::btree::map::RangeMut&lt;K,V&gt;::next_unchecked (147 samples, 0.15%)</title><rect x="31.7656%" y="661" width="0.1479%" height="15" fill="rgb(230,197,35)" fg:x="31582" fg:w="147"/><text x="32.0156%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.16%)</title><rect x="31.7576%" y="693" width="0.1629%" height="15" fill="rgb(246,193,31)" fg:x="31574" fg:w="162"/><text x="32.0076%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="31.9205%" y="693" width="0.0111%" height="15" fill="rgb(241,36,4)" fg:x="31736" fg:w="11"/><text x="32.1705%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (11 samples, 0.01%)</title><rect x="31.9718%" y="645" width="0.0111%" height="15" fill="rgb(241,130,17)" fg:x="31787" fg:w="11"/><text x="32.2218%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="32.0000%" y="613" width="0.0151%" height="15" fill="rgb(206,137,32)" fg:x="31815" fg:w="15"/><text x="32.2500%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (69 samples, 0.07%)</title><rect x="31.9627%" y="661" width="0.0694%" height="15" fill="rgb(237,228,51)" fg:x="31778" fg:w="69"/><text x="32.2127%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (49 samples, 0.05%)</title><rect x="31.9829%" y="645" width="0.0493%" height="15" fill="rgb(243,6,42)" fg:x="31798" fg:w="49"/><text x="32.2329%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (40 samples, 0.04%)</title><rect x="31.9919%" y="629" width="0.0402%" height="15" fill="rgb(251,74,28)" fg:x="31807" fg:w="40"/><text x="32.2419%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (96 samples, 0.10%)</title><rect x="31.9366%" y="677" width="0.0966%" height="15" fill="rgb(218,20,49)" fg:x="31752" fg:w="96"/><text x="32.1866%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (109 samples, 0.11%)</title><rect x="31.9316%" y="693" width="0.1096%" height="15" fill="rgb(238,28,14)" fg:x="31747" fg:w="109"/><text x="32.1816%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (23 samples, 0.02%)</title><rect x="32.0684%" y="661" width="0.0231%" height="15" fill="rgb(229,40,46)" fg:x="31883" fg:w="23"/><text x="32.3184%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (21 samples, 0.02%)</title><rect x="32.0704%" y="645" width="0.0211%" height="15" fill="rgb(244,195,20)" fg:x="31885" fg:w="21"/><text x="32.3204%" y="655.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (12 samples, 0.01%)</title><rect x="32.0794%" y="629" width="0.0121%" height="15" fill="rgb(253,56,35)" fg:x="31894" fg:w="12"/><text x="32.3294%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="32.1156%" y="613" width="0.0221%" height="15" fill="rgb(210,149,44)" fg:x="31930" fg:w="22"/><text x="32.3656%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="32.1257%" y="597" width="0.0121%" height="15" fill="rgb(240,135,12)" fg:x="31940" fg:w="12"/><text x="32.3757%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (17 samples, 0.02%)</title><rect x="32.1428%" y="613" width="0.0171%" height="15" fill="rgb(251,24,50)" fg:x="31957" fg:w="17"/><text x="32.3928%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (77 samples, 0.08%)</title><rect x="32.0945%" y="661" width="0.0774%" height="15" fill="rgb(243,200,47)" fg:x="31909" fg:w="77"/><text x="32.3445%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (73 samples, 0.07%)</title><rect x="32.0985%" y="645" width="0.0734%" height="15" fill="rgb(224,166,26)" fg:x="31913" fg:w="73"/><text x="32.3485%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (66 samples, 0.07%)</title><rect x="32.1056%" y="629" width="0.0664%" height="15" fill="rgb(233,0,47)" fg:x="31920" fg:w="66"/><text x="32.3556%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (10 samples, 0.01%)</title><rect x="32.1619%" y="613" width="0.0101%" height="15" fill="rgb(253,80,5)" fg:x="31976" fg:w="10"/><text x="32.4119%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (130 samples, 0.13%)</title><rect x="32.0432%" y="677" width="0.1308%" height="15" fill="rgb(214,133,25)" fg:x="31858" fg:w="130"/><text x="32.2932%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="32.1790%" y="661" width="0.0101%" height="15" fill="rgb(209,27,14)" fg:x="31993" fg:w="10"/><text x="32.4290%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (154 samples, 0.15%)</title><rect x="32.0412%" y="693" width="0.1549%" height="15" fill="rgb(219,102,51)" fg:x="31856" fg:w="154"/><text x="32.2912%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="32.1740%" y="677" width="0.0221%" height="15" fill="rgb(237,18,16)" fg:x="31988" fg:w="22"/><text x="32.4240%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (24 samples, 0.02%)</title><rect x="32.2212%" y="645" width="0.0241%" height="15" fill="rgb(241,85,17)" fg:x="32035" fg:w="24"/><text x="32.4712%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (39 samples, 0.04%)</title><rect x="32.2142%" y="661" width="0.0392%" height="15" fill="rgb(236,90,42)" fg:x="32028" fg:w="39"/><text x="32.4642%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values_mut (59 samples, 0.06%)</title><rect x="32.1961%" y="693" width="0.0593%" height="15" fill="rgb(249,57,21)" fg:x="32010" fg:w="59"/><text x="32.4461%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter_mut (52 samples, 0.05%)</title><rect x="32.2031%" y="677" width="0.0523%" height="15" fill="rgb(243,12,36)" fg:x="32017" fg:w="52"/><text x="32.4531%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (27 samples, 0.03%)</title><rect x="32.2745%" y="645" width="0.0272%" height="15" fill="rgb(253,128,47)" fg:x="32088" fg:w="27"/><text x="32.5245%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (27 samples, 0.03%)</title><rect x="32.2745%" y="629" width="0.0272%" height="15" fill="rgb(207,33,20)" fg:x="32088" fg:w="27"/><text x="32.5245%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (38 samples, 0.04%)</title><rect x="32.2655%" y="661" width="0.0382%" height="15" fill="rgb(233,215,35)" fg:x="32079" fg:w="38"/><text x="32.5155%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="32.3108%" y="645" width="0.0111%" height="15" fill="rgb(249,188,52)" fg:x="32124" fg:w="11"/><text x="32.5608%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (12 samples, 0.01%)</title><rect x="32.3631%" y="533" width="0.0121%" height="15" fill="rgb(225,12,32)" fg:x="32176" fg:w="12"/><text x="32.6131%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (27 samples, 0.03%)</title><rect x="32.3560%" y="549" width="0.0272%" height="15" fill="rgb(247,98,14)" fg:x="32169" fg:w="27"/><text x="32.6060%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (17 samples, 0.02%)</title><rect x="32.3832%" y="549" width="0.0171%" height="15" fill="rgb(247,219,48)" fg:x="32196" fg:w="17"/><text x="32.6332%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (10 samples, 0.01%)</title><rect x="32.3902%" y="533" width="0.0101%" height="15" fill="rgb(253,60,48)" fg:x="32203" fg:w="10"/><text x="32.6402%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (20 samples, 0.02%)</title><rect x="32.4003%" y="549" width="0.0201%" height="15" fill="rgb(245,15,52)" fg:x="32213" fg:w="20"/><text x="32.6503%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="32.4053%" y="533" width="0.0151%" height="15" fill="rgb(220,133,28)" fg:x="32218" fg:w="15"/><text x="32.6553%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="32.4053%" y="517" width="0.0151%" height="15" fill="rgb(217,180,4)" fg:x="32218" fg:w="15"/><text x="32.6553%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (75 samples, 0.08%)</title><rect x="32.3500%" y="565" width="0.0754%" height="15" fill="rgb(251,24,1)" fg:x="32163" fg:w="75"/><text x="32.6000%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (89 samples, 0.09%)</title><rect x="32.3439%" y="597" width="0.0895%" height="15" fill="rgb(212,185,49)" fg:x="32157" fg:w="89"/><text x="32.5939%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (88 samples, 0.09%)</title><rect x="32.3450%" y="581" width="0.0885%" height="15" fill="rgb(215,175,22)" fg:x="32158" fg:w="88"/><text x="32.5950%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.10%)</title><rect x="32.3379%" y="629" width="0.1046%" height="15" fill="rgb(250,205,14)" fg:x="32151" fg:w="104"/><text x="32.5879%" y="639.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (101 samples, 0.10%)</title><rect x="32.3409%" y="613" width="0.1016%" height="15" fill="rgb(225,211,22)" fg:x="32154" fg:w="101"/><text x="32.5909%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.01%)</title><rect x="32.4747%" y="581" width="0.0131%" height="15" fill="rgb(251,179,42)" fg:x="32287" fg:w="13"/><text x="32.7247%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (23 samples, 0.02%)</title><rect x="32.4657%" y="597" width="0.0231%" height="15" fill="rgb(208,216,51)" fg:x="32278" fg:w="23"/><text x="32.7157%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.01%)</title><rect x="32.4998%" y="565" width="0.0101%" height="15" fill="rgb(235,36,11)" fg:x="32312" fg:w="10"/><text x="32.7498%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (22 samples, 0.02%)</title><rect x="32.4888%" y="597" width="0.0221%" height="15" fill="rgb(213,189,28)" fg:x="32301" fg:w="22"/><text x="32.7388%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (16 samples, 0.02%)</title><rect x="32.4948%" y="581" width="0.0161%" height="15" fill="rgb(227,203,42)" fg:x="32307" fg:w="16"/><text x="32.7448%" y="591.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="32.5310%" y="581" width="0.0181%" height="15" fill="rgb(244,72,36)" fg:x="32343" fg:w="18"/><text x="32.7810%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (344 samples, 0.35%)</title><rect x="32.2605%" y="677" width="0.3460%" height="15" fill="rgb(213,53,17)" fg:x="32074" fg:w="344"/><text x="32.5105%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (301 samples, 0.30%)</title><rect x="32.3037%" y="661" width="0.3027%" height="15" fill="rgb(207,167,3)" fg:x="32117" fg:w="301"/><text x="32.5537%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (281 samples, 0.28%)</title><rect x="32.3238%" y="645" width="0.2826%" height="15" fill="rgb(216,98,30)" fg:x="32137" fg:w="281"/><text x="32.5738%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (155 samples, 0.16%)</title><rect x="32.4506%" y="629" width="0.1559%" height="15" fill="rgb(236,123,15)" fg:x="32263" fg:w="155"/><text x="32.7006%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (147 samples, 0.15%)</title><rect x="32.4586%" y="613" width="0.1479%" height="15" fill="rgb(248,81,50)" fg:x="32271" fg:w="147"/><text x="32.7086%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (95 samples, 0.10%)</title><rect x="32.5109%" y="597" width="0.0956%" height="15" fill="rgb(214,120,4)" fg:x="32323" fg:w="95"/><text x="32.7609%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (54 samples, 0.05%)</title><rect x="32.5522%" y="581" width="0.0543%" height="15" fill="rgb(208,179,34)" fg:x="32364" fg:w="54"/><text x="32.8022%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (23 samples, 0.02%)</title><rect x="32.5833%" y="565" width="0.0231%" height="15" fill="rgb(227,140,7)" fg:x="32395" fg:w="23"/><text x="32.8333%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (22 samples, 0.02%)</title><rect x="32.5843%" y="549" width="0.0221%" height="15" fill="rgb(214,22,6)" fg:x="32396" fg:w="22"/><text x="32.8343%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (22 samples, 0.02%)</title><rect x="32.5843%" y="533" width="0.0221%" height="15" fill="rgb(207,137,27)" fg:x="32396" fg:w="22"/><text x="32.8343%" y="543.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (10 samples, 0.01%)</title><rect x="32.5964%" y="517" width="0.0101%" height="15" fill="rgb(210,8,46)" fg:x="32408" fg:w="10"/><text x="32.8464%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="32.6185%" y="629" width="0.0161%" height="15" fill="rgb(240,16,54)" fg:x="32430" fg:w="16"/><text x="32.8685%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (19 samples, 0.02%)</title><rect x="32.6547%" y="597" width="0.0191%" height="15" fill="rgb(211,209,29)" fg:x="32466" fg:w="19"/><text x="32.9047%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (12 samples, 0.01%)</title><rect x="32.6618%" y="581" width="0.0121%" height="15" fill="rgb(226,228,24)" fg:x="32473" fg:w="12"/><text x="32.9118%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (56 samples, 0.06%)</title><rect x="32.6346%" y="629" width="0.0563%" height="15" fill="rgb(222,84,9)" fg:x="32446" fg:w="56"/><text x="32.8846%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (55 samples, 0.06%)</title><rect x="32.6356%" y="613" width="0.0553%" height="15" fill="rgb(234,203,30)" fg:x="32447" fg:w="55"/><text x="32.8856%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (13 samples, 0.01%)</title><rect x="32.6779%" y="597" width="0.0131%" height="15" fill="rgb(238,109,14)" fg:x="32489" fg:w="13"/><text x="32.9279%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (10 samples, 0.01%)</title><rect x="32.6809%" y="581" width="0.0101%" height="15" fill="rgb(233,206,34)" fg:x="32492" fg:w="10"/><text x="32.9309%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (84 samples, 0.08%)</title><rect x="32.6105%" y="661" width="0.0845%" height="15" fill="rgb(220,167,47)" fg:x="32422" fg:w="84"/><text x="32.8605%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (83 samples, 0.08%)</title><rect x="32.6115%" y="645" width="0.0835%" height="15" fill="rgb(238,105,10)" fg:x="32423" fg:w="83"/><text x="32.8615%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (14 samples, 0.01%)</title><rect x="32.7734%" y="517" width="0.0141%" height="15" fill="rgb(213,227,17)" fg:x="32584" fg:w="14"/><text x="33.0234%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (29 samples, 0.03%)</title><rect x="32.7624%" y="533" width="0.0292%" height="15" fill="rgb(217,132,38)" fg:x="32573" fg:w="29"/><text x="33.0124%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (22 samples, 0.02%)</title><rect x="32.7915%" y="533" width="0.0221%" height="15" fill="rgb(242,146,4)" fg:x="32602" fg:w="22"/><text x="33.0415%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (15 samples, 0.02%)</title><rect x="32.7986%" y="517" width="0.0151%" height="15" fill="rgb(212,61,9)" fg:x="32609" fg:w="15"/><text x="33.0486%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (28 samples, 0.03%)</title><rect x="32.8137%" y="533" width="0.0282%" height="15" fill="rgb(247,126,22)" fg:x="32624" fg:w="28"/><text x="33.0637%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="32.8227%" y="517" width="0.0191%" height="15" fill="rgb(220,196,2)" fg:x="32633" fg:w="19"/><text x="33.0727%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="32.8257%" y="501" width="0.0161%" height="15" fill="rgb(208,46,4)" fg:x="32636" fg:w="16"/><text x="33.0757%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (97 samples, 0.10%)</title><rect x="32.7533%" y="549" width="0.0976%" height="15" fill="rgb(252,104,46)" fg:x="32564" fg:w="97"/><text x="33.0033%" y="559.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="32.8509%" y="549" width="0.0101%" height="15" fill="rgb(237,152,48)" fg:x="32661" fg:w="10"/><text x="33.1009%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (121 samples, 0.12%)</title><rect x="32.7402%" y="581" width="0.1217%" height="15" fill="rgb(221,59,37)" fg:x="32551" fg:w="121"/><text x="32.9902%" y="591.50"></text></g><g><title>alloc::collections::btree::mem::replace (120 samples, 0.12%)</title><rect x="32.7412%" y="565" width="0.1207%" height="15" fill="rgb(209,202,51)" fg:x="32552" fg:w="120"/><text x="32.9912%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.14%)</title><rect x="32.7302%" y="613" width="0.1378%" height="15" fill="rgb(228,81,30)" fg:x="32541" fg:w="137"/><text x="32.9802%" y="623.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (129 samples, 0.13%)</title><rect x="32.7382%" y="597" width="0.1297%" height="15" fill="rgb(227,42,39)" fg:x="32549" fg:w="129"/><text x="32.9882%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (161 samples, 0.16%)</title><rect x="32.7252%" y="629" width="0.1619%" height="15" fill="rgb(221,26,2)" fg:x="32536" fg:w="161"/><text x="32.9752%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="32.8680%" y="613" width="0.0191%" height="15" fill="rgb(254,61,31)" fg:x="32678" fg:w="19"/><text x="33.1180%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (35 samples, 0.04%)</title><rect x="32.8951%" y="597" width="0.0352%" height="15" fill="rgb(222,173,38)" fg:x="32705" fg:w="35"/><text x="33.1451%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (30 samples, 0.03%)</title><rect x="32.9002%" y="581" width="0.0302%" height="15" fill="rgb(218,50,12)" fg:x="32710" fg:w="30"/><text x="33.1502%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (20 samples, 0.02%)</title><rect x="32.9364%" y="565" width="0.0201%" height="15" fill="rgb(223,88,40)" fg:x="32746" fg:w="20"/><text x="33.1864%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (22 samples, 0.02%)</title><rect x="32.9354%" y="581" width="0.0221%" height="15" fill="rgb(237,54,19)" fg:x="32745" fg:w="22"/><text x="33.1854%" y="591.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (29 samples, 0.03%)</title><rect x="32.9303%" y="597" width="0.0292%" height="15" fill="rgb(251,129,25)" fg:x="32740" fg:w="29"/><text x="33.1803%" y="607.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="32.9706%" y="581" width="0.0141%" height="15" fill="rgb(238,97,19)" fg:x="32780" fg:w="14"/><text x="33.2206%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="33.0048%" y="549" width="0.0201%" height="15" fill="rgb(240,169,18)" fg:x="32814" fg:w="20"/><text x="33.2548%" y="559.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="33.0098%" y="533" width="0.0151%" height="15" fill="rgb(230,187,49)" fg:x="32819" fg:w="15"/><text x="33.2598%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="33.0108%" y="517" width="0.0141%" height="15" fill="rgb(209,44,26)" fg:x="32820" fg:w="14"/><text x="33.2608%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="33.0108%" y="501" width="0.0141%" height="15" fill="rgb(244,0,6)" fg:x="32820" fg:w="14"/><text x="33.2608%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="33.0038%" y="565" width="0.0272%" height="15" fill="rgb(248,18,21)" fg:x="32813" fg:w="27"/><text x="33.2538%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.01%)</title><rect x="33.0400%" y="469" width="0.0111%" height="15" fill="rgb(245,180,19)" fg:x="32849" fg:w="11"/><text x="33.2900%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="33.0370%" y="501" width="0.0151%" height="15" fill="rgb(252,118,36)" fg:x="32846" fg:w="15"/><text x="33.2870%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.02%)</title><rect x="33.0370%" y="485" width="0.0151%" height="15" fill="rgb(210,224,19)" fg:x="32846" fg:w="15"/><text x="33.2870%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="33.0370%" y="533" width="0.0161%" height="15" fill="rgb(218,30,24)" fg:x="32846" fg:w="16"/><text x="33.2870%" y="543.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (16 samples, 0.02%)</title><rect x="33.0370%" y="517" width="0.0161%" height="15" fill="rgb(219,75,50)" fg:x="32846" fg:w="16"/><text x="33.2870%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="33.0309%" y="565" width="0.0251%" height="15" fill="rgb(234,72,50)" fg:x="32840" fg:w="25"/><text x="33.2809%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="33.0349%" y="549" width="0.0211%" height="15" fill="rgb(219,100,48)" fg:x="32844" fg:w="21"/><text x="33.2849%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (460 samples, 0.46%)</title><rect x="32.6065%" y="677" width="0.4627%" height="15" fill="rgb(253,5,41)" fg:x="32418" fg:w="460"/><text x="32.8565%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (372 samples, 0.37%)</title><rect x="32.6950%" y="661" width="0.3742%" height="15" fill="rgb(247,181,11)" fg:x="32506" fg:w="372"/><text x="32.9450%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (359 samples, 0.36%)</title><rect x="32.7081%" y="645" width="0.3611%" height="15" fill="rgb(222,223,25)" fg:x="32519" fg:w="359"/><text x="32.9581%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (180 samples, 0.18%)</title><rect x="32.8881%" y="629" width="0.1810%" height="15" fill="rgb(214,198,28)" fg:x="32698" fg:w="180"/><text x="33.1381%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (177 samples, 0.18%)</title><rect x="32.8911%" y="613" width="0.1780%" height="15" fill="rgb(230,46,43)" fg:x="32701" fg:w="177"/><text x="33.1411%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (109 samples, 0.11%)</title><rect x="32.9595%" y="597" width="0.1096%" height="15" fill="rgb(233,65,53)" fg:x="32769" fg:w="109"/><text x="33.2095%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.08%)</title><rect x="32.9877%" y="581" width="0.0815%" height="15" fill="rgb(221,121,27)" fg:x="32797" fg:w="81"/><text x="33.2377%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11 samples, 0.01%)</title><rect x="33.0581%" y="565" width="0.0111%" height="15" fill="rgb(247,70,47)" fg:x="32867" fg:w="11"/><text x="33.3081%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (10 samples, 0.01%)</title><rect x="33.0591%" y="549" width="0.0101%" height="15" fill="rgb(228,85,35)" fg:x="32868" fg:w="10"/><text x="33.3091%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (10 samples, 0.01%)</title><rect x="33.0591%" y="533" width="0.0101%" height="15" fill="rgb(209,50,18)" fg:x="32868" fg:w="10"/><text x="33.3091%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (26 samples, 0.03%)</title><rect x="33.0812%" y="645" width="0.0262%" height="15" fill="rgb(250,19,35)" fg:x="32890" fg:w="26"/><text x="33.3312%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (24 samples, 0.02%)</title><rect x="33.0832%" y="629" width="0.0241%" height="15" fill="rgb(253,107,29)" fg:x="32892" fg:w="24"/><text x="33.3332%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (39 samples, 0.04%)</title><rect x="33.0712%" y="661" width="0.0392%" height="15" fill="rgb(252,179,29)" fg:x="32880" fg:w="39"/><text x="33.3212%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (18 samples, 0.02%)</title><rect x="33.1647%" y="549" width="0.0181%" height="15" fill="rgb(238,194,6)" fg:x="32973" fg:w="18"/><text x="33.4147%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (14 samples, 0.01%)</title><rect x="33.1828%" y="549" width="0.0141%" height="15" fill="rgb(238,164,29)" fg:x="32991" fg:w="14"/><text x="33.4328%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (20 samples, 0.02%)</title><rect x="33.1969%" y="549" width="0.0201%" height="15" fill="rgb(224,25,9)" fg:x="33005" fg:w="20"/><text x="33.4469%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="33.2019%" y="533" width="0.0151%" height="15" fill="rgb(244,153,23)" fg:x="33010" fg:w="15"/><text x="33.4519%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="33.2039%" y="517" width="0.0131%" height="15" fill="rgb(212,203,14)" fg:x="33012" fg:w="13"/><text x="33.4539%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (63 samples, 0.06%)</title><rect x="33.1577%" y="565" width="0.0634%" height="15" fill="rgb(220,164,20)" fg:x="32966" fg:w="63"/><text x="33.4077%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (87 samples, 0.09%)</title><rect x="33.1426%" y="597" width="0.0875%" height="15" fill="rgb(222,203,48)" fg:x="32951" fg:w="87"/><text x="33.3926%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (87 samples, 0.09%)</title><rect x="33.1426%" y="581" width="0.0875%" height="15" fill="rgb(215,159,22)" fg:x="32951" fg:w="87"/><text x="33.3926%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.10%)</title><rect x="33.1375%" y="629" width="0.0956%" height="15" fill="rgb(216,183,47)" fg:x="32946" fg:w="95"/><text x="33.3875%" y="639.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (93 samples, 0.09%)</title><rect x="33.1395%" y="613" width="0.0935%" height="15" fill="rgb(229,195,25)" fg:x="32948" fg:w="93"/><text x="33.3895%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (28 samples, 0.03%)</title><rect x="33.2452%" y="597" width="0.0282%" height="15" fill="rgb(224,132,51)" fg:x="33053" fg:w="28"/><text x="33.4952%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (19 samples, 0.02%)</title><rect x="33.2542%" y="581" width="0.0191%" height="15" fill="rgb(240,63,7)" fg:x="33062" fg:w="19"/><text x="33.5042%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.01%)</title><rect x="33.2804%" y="565" width="0.0121%" height="15" fill="rgb(249,182,41)" fg:x="33088" fg:w="12"/><text x="33.5304%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (19 samples, 0.02%)</title><rect x="33.2753%" y="581" width="0.0191%" height="15" fill="rgb(243,47,26)" fg:x="33083" fg:w="19"/><text x="33.5253%" y="591.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (22 samples, 0.02%)</title><rect x="33.2733%" y="597" width="0.0221%" height="15" fill="rgb(233,48,2)" fg:x="33081" fg:w="22"/><text x="33.5233%" y="607.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="33.3055%" y="581" width="0.0201%" height="15" fill="rgb(244,165,34)" fg:x="33113" fg:w="20"/><text x="33.5555%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (1,098 samples, 1.10%)</title><rect x="32.2554%" y="693" width="1.1044%" height="15" fill="rgb(207,89,7)" fg:x="32069" fg:w="1098"/><text x="32.5054%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (289 samples, 0.29%)</title><rect x="33.0691%" y="677" width="0.2907%" height="15" fill="rgb(244,117,36)" fg:x="32878" fg:w="289"/><text x="33.3191%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (248 samples, 0.25%)</title><rect x="33.1104%" y="661" width="0.2494%" height="15" fill="rgb(226,144,34)" fg:x="32919" fg:w="248"/><text x="33.3604%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (238 samples, 0.24%)</title><rect x="33.1204%" y="645" width="0.2394%" height="15" fill="rgb(213,23,19)" fg:x="32929" fg:w="238"/><text x="33.3704%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (123 samples, 0.12%)</title><rect x="33.2361%" y="629" width="0.1237%" height="15" fill="rgb(217,75,12)" fg:x="33044" fg:w="123"/><text x="33.4861%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (119 samples, 0.12%)</title><rect x="33.2401%" y="613" width="0.1197%" height="15" fill="rgb(224,159,17)" fg:x="33048" fg:w="119"/><text x="33.4901%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (64 samples, 0.06%)</title><rect x="33.2954%" y="597" width="0.0644%" height="15" fill="rgb(217,118,1)" fg:x="33103" fg:w="64"/><text x="33.5454%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.03%)</title><rect x="33.3286%" y="581" width="0.0312%" height="15" fill="rgb(232,180,48)" fg:x="33136" fg:w="31"/><text x="33.5786%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (22 samples, 0.02%)</title><rect x="33.4041%" y="597" width="0.0221%" height="15" fill="rgb(230,27,33)" fg:x="33211" fg:w="22"/><text x="33.6541%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (14 samples, 0.01%)</title><rect x="33.4121%" y="581" width="0.0141%" height="15" fill="rgb(205,31,21)" fg:x="33219" fg:w="14"/><text x="33.6621%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (44 samples, 0.04%)</title><rect x="33.3910%" y="629" width="0.0443%" height="15" fill="rgb(253,59,4)" fg:x="33198" fg:w="44"/><text x="33.6410%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (43 samples, 0.04%)</title><rect x="33.3920%" y="613" width="0.0432%" height="15" fill="rgb(224,201,9)" fg:x="33199" fg:w="43"/><text x="33.6420%" y="623.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (67 samples, 0.07%)</title><rect x="33.3699%" y="661" width="0.0674%" height="15" fill="rgb(229,206,30)" fg:x="33177" fg:w="67"/><text x="33.6199%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (67 samples, 0.07%)</title><rect x="33.3699%" y="645" width="0.0674%" height="15" fill="rgb(212,67,47)" fg:x="33177" fg:w="67"/><text x="33.6199%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (21 samples, 0.02%)</title><rect x="33.4705%" y="581" width="0.0211%" height="15" fill="rgb(211,96,50)" fg:x="33277" fg:w="21"/><text x="33.7205%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (24 samples, 0.02%)</title><rect x="33.4916%" y="581" width="0.0241%" height="15" fill="rgb(252,114,18)" fg:x="33298" fg:w="24"/><text x="33.7416%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (11 samples, 0.01%)</title><rect x="33.5047%" y="565" width="0.0111%" height="15" fill="rgb(223,58,37)" fg:x="33311" fg:w="11"/><text x="33.7547%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (16 samples, 0.02%)</title><rect x="33.5157%" y="581" width="0.0161%" height="15" fill="rgb(237,70,4)" fg:x="33322" fg:w="16"/><text x="33.7657%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="33.5197%" y="565" width="0.0121%" height="15" fill="rgb(244,85,46)" fg:x="33326" fg:w="12"/><text x="33.7697%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="33.5218%" y="549" width="0.0101%" height="15" fill="rgb(223,39,52)" fg:x="33328" fg:w="10"/><text x="33.7718%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (73 samples, 0.07%)</title><rect x="33.4654%" y="597" width="0.0734%" height="15" fill="rgb(218,200,14)" fg:x="33272" fg:w="73"/><text x="33.7154%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="33.5409%" y="581" width="0.0111%" height="15" fill="rgb(208,171,16)" fg:x="33347" fg:w="11"/><text x="33.7909%" y="591.50"></text></g><g><title>core::ptr::read (15 samples, 0.02%)</title><rect x="33.5389%" y="597" width="0.0151%" height="15" fill="rgb(234,200,18)" fg:x="33345" fg:w="15"/><text x="33.7889%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (108 samples, 0.11%)</title><rect x="33.4493%" y="629" width="0.1086%" height="15" fill="rgb(228,45,11)" fg:x="33256" fg:w="108"/><text x="33.6993%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (107 samples, 0.11%)</title><rect x="33.4503%" y="613" width="0.1076%" height="15" fill="rgb(237,182,11)" fg:x="33257" fg:w="107"/><text x="33.7003%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.13%)</title><rect x="33.4373%" y="661" width="0.1287%" height="15" fill="rgb(241,175,49)" fg:x="33244" fg:w="128"/><text x="33.6873%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (122 samples, 0.12%)</title><rect x="33.4433%" y="645" width="0.1227%" height="15" fill="rgb(247,38,35)" fg:x="33250" fg:w="122"/><text x="33.6933%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (34 samples, 0.03%)</title><rect x="33.5751%" y="645" width="0.0342%" height="15" fill="rgb(228,39,49)" fg:x="33381" fg:w="34"/><text x="33.8251%" y="655.50"></text></g><g><title>borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt;::remap_refs (257 samples, 0.26%)</title><rect x="33.3628%" y="677" width="0.2585%" height="15" fill="rgb(226,101,26)" fg:x="33170" fg:w="257"/><text x="33.6128%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (48 samples, 0.05%)</title><rect x="33.5731%" y="661" width="0.0483%" height="15" fill="rgb(206,141,19)" fg:x="33379" fg:w="48"/><text x="33.8231%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="33.6093%" y="645" width="0.0121%" height="15" fill="rgb(211,200,13)" fg:x="33415" fg:w="12"/><text x="33.8593%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="33.6364%" y="629" width="0.0101%" height="15" fill="rgb(241,121,6)" fg:x="33442" fg:w="10"/><text x="33.8864%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (21 samples, 0.02%)</title><rect x="33.6465%" y="629" width="0.0211%" height="15" fill="rgb(234,221,29)" fg:x="33452" fg:w="21"/><text x="33.8965%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (21 samples, 0.02%)</title><rect x="33.6465%" y="613" width="0.0211%" height="15" fill="rgb(229,136,5)" fg:x="33452" fg:w="21"/><text x="33.8965%" y="623.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (40 samples, 0.04%)</title><rect x="33.6294%" y="661" width="0.0402%" height="15" fill="rgb(238,36,11)" fg:x="33435" fg:w="40"/><text x="33.8794%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (40 samples, 0.04%)</title><rect x="33.6294%" y="645" width="0.0402%" height="15" fill="rgb(251,55,41)" fg:x="33435" fg:w="40"/><text x="33.8794%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (11 samples, 0.01%)</title><rect x="33.6877%" y="581" width="0.0111%" height="15" fill="rgb(242,34,40)" fg:x="33493" fg:w="11"/><text x="33.9377%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (15 samples, 0.02%)</title><rect x="33.7058%" y="581" width="0.0151%" height="15" fill="rgb(215,42,17)" fg:x="33511" fg:w="15"/><text x="33.9558%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="33.7078%" y="565" width="0.0131%" height="15" fill="rgb(207,44,46)" fg:x="33513" fg:w="13"/><text x="33.9578%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="33.7078%" y="549" width="0.0131%" height="15" fill="rgb(211,206,28)" fg:x="33513" fg:w="13"/><text x="33.9578%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (46 samples, 0.05%)</title><rect x="33.6817%" y="597" width="0.0463%" height="15" fill="rgb(237,167,16)" fg:x="33487" fg:w="46"/><text x="33.9317%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (58 samples, 0.06%)</title><rect x="33.6746%" y="629" width="0.0583%" height="15" fill="rgb(233,66,6)" fg:x="33480" fg:w="58"/><text x="33.9246%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (58 samples, 0.06%)</title><rect x="33.6746%" y="613" width="0.0583%" height="15" fill="rgb(246,123,29)" fg:x="33480" fg:w="58"/><text x="33.9246%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.07%)</title><rect x="33.6696%" y="661" width="0.0664%" height="15" fill="rgb(209,62,40)" fg:x="33475" fg:w="66"/><text x="33.9196%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (62 samples, 0.06%)</title><rect x="33.6736%" y="645" width="0.0624%" height="15" fill="rgb(218,4,25)" fg:x="33479" fg:w="62"/><text x="33.9236%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.01%)</title><rect x="33.7370%" y="645" width="0.0131%" height="15" fill="rgb(253,91,49)" fg:x="33542" fg:w="13"/><text x="33.9870%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (14 samples, 0.01%)</title><rect x="33.7370%" y="661" width="0.0141%" height="15" fill="rgb(228,155,29)" fg:x="33542" fg:w="14"/><text x="33.9870%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (34 samples, 0.03%)</title><rect x="33.7571%" y="629" width="0.0342%" height="15" fill="rgb(243,57,37)" fg:x="33562" fg:w="34"/><text x="34.0071%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (48 samples, 0.05%)</title><rect x="33.7511%" y="645" width="0.0483%" height="15" fill="rgb(244,167,17)" fg:x="33556" fg:w="48"/><text x="34.0011%" y="655.50"></text></g><g><title>borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (439 samples, 0.44%)</title><rect x="33.3598%" y="693" width="0.4416%" height="15" fill="rgb(207,181,38)" fg:x="33167" fg:w="439"/><text x="33.6098%" y="703.50"></text></g><g><title>borrow_graph::shared::remap_set (179 samples, 0.18%)</title><rect x="33.6213%" y="677" width="0.1800%" height="15" fill="rgb(211,8,23)" fg:x="33427" fg:w="179"/><text x="33.8713%" y="687.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (50 samples, 0.05%)</title><rect x="33.7511%" y="661" width="0.0503%" height="15" fill="rgb(235,11,44)" fg:x="33556" fg:w="50"/><text x="34.0011%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (2,132 samples, 2.14%)</title><rect x="31.6630%" y="709" width="2.1444%" height="15" fill="rgb(248,18,52)" fg:x="31480" fg:w="2132"/><text x="31.9130%" y="719.50">b..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (25 samples, 0.03%)</title><rect x="33.8074%" y="693" width="0.0251%" height="15" fill="rgb(208,4,7)" fg:x="33612" fg:w="25"/><text x="34.0574%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (25 samples, 0.03%)</title><rect x="33.8074%" y="677" width="0.0251%" height="15" fill="rgb(240,17,39)" fg:x="33612" fg:w="25"/><text x="34.0574%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (25 samples, 0.03%)</title><rect x="33.8074%" y="661" width="0.0251%" height="15" fill="rgb(207,170,3)" fg:x="33612" fg:w="25"/><text x="34.0574%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="33.8939%" y="565" width="0.0101%" height="15" fill="rgb(236,100,52)" fg:x="33698" fg:w="10"/><text x="34.1439%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (39 samples, 0.04%)</title><rect x="33.8778%" y="581" width="0.0392%" height="15" fill="rgb(246,78,51)" fg:x="33682" fg:w="39"/><text x="34.1278%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (29 samples, 0.03%)</title><rect x="33.9170%" y="581" width="0.0292%" height="15" fill="rgb(211,17,15)" fg:x="33721" fg:w="29"/><text x="34.1670%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (13 samples, 0.01%)</title><rect x="33.9331%" y="565" width="0.0131%" height="15" fill="rgb(209,59,46)" fg:x="33737" fg:w="13"/><text x="34.1831%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (38 samples, 0.04%)</title><rect x="33.9462%" y="581" width="0.0382%" height="15" fill="rgb(210,92,25)" fg:x="33750" fg:w="38"/><text x="34.1962%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (28 samples, 0.03%)</title><rect x="33.9563%" y="565" width="0.0282%" height="15" fill="rgb(238,174,52)" fg:x="33760" fg:w="28"/><text x="34.2063%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 0.02%)</title><rect x="33.9623%" y="549" width="0.0221%" height="15" fill="rgb(230,73,7)" fg:x="33766" fg:w="22"/><text x="34.2123%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (137 samples, 0.14%)</title><rect x="33.8567%" y="597" width="0.1378%" height="15" fill="rgb(243,124,40)" fg:x="33661" fg:w="137"/><text x="34.1067%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="34.0015%" y="581" width="0.0101%" height="15" fill="rgb(244,170,11)" fg:x="33805" fg:w="10"/><text x="34.2515%" y="591.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="33.9945%" y="597" width="0.0221%" height="15" fill="rgb(207,114,54)" fg:x="33798" fg:w="22"/><text x="34.2445%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (187 samples, 0.19%)</title><rect x="33.8326%" y="661" width="0.1881%" height="15" fill="rgb(205,42,20)" fg:x="33637" fg:w="187"/><text x="34.0826%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (187 samples, 0.19%)</title><rect x="33.8326%" y="645" width="0.1881%" height="15" fill="rgb(230,30,28)" fg:x="33637" fg:w="187"/><text x="34.0826%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (187 samples, 0.19%)</title><rect x="33.8326%" y="629" width="0.1881%" height="15" fill="rgb(205,73,54)" fg:x="33637" fg:w="187"/><text x="34.0826%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (187 samples, 0.19%)</title><rect x="33.8326%" y="613" width="0.1881%" height="15" fill="rgb(254,227,23)" fg:x="33637" fg:w="187"/><text x="34.0826%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (217 samples, 0.22%)</title><rect x="33.8074%" y="709" width="0.2183%" height="15" fill="rgb(228,202,34)" fg:x="33612" fg:w="217"/><text x="34.0574%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (192 samples, 0.19%)</title><rect x="33.8326%" y="693" width="0.1931%" height="15" fill="rgb(222,225,37)" fg:x="33637" fg:w="192"/><text x="34.0826%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (192 samples, 0.19%)</title><rect x="33.8326%" y="677" width="0.1931%" height="15" fill="rgb(221,14,54)" fg:x="33637" fg:w="192"/><text x="34.0826%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (20 samples, 0.02%)</title><rect x="34.1504%" y="517" width="0.0201%" height="15" fill="rgb(254,102,2)" fg:x="33953" fg:w="20"/><text x="34.4004%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (12 samples, 0.01%)</title><rect x="34.1705%" y="517" width="0.0121%" height="15" fill="rgb(232,104,17)" fg:x="33973" fg:w="12"/><text x="34.4205%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (54 samples, 0.05%)</title><rect x="34.1343%" y="533" width="0.0543%" height="15" fill="rgb(250,220,14)" fg:x="33937" fg:w="54"/><text x="34.3843%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (12 samples, 0.01%)</title><rect x="34.1997%" y="517" width="0.0121%" height="15" fill="rgb(241,158,9)" fg:x="34002" fg:w="12"/><text x="34.4497%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (37 samples, 0.04%)</title><rect x="34.1886%" y="533" width="0.0372%" height="15" fill="rgb(246,9,43)" fg:x="33991" fg:w="37"/><text x="34.4386%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (13 samples, 0.01%)</title><rect x="34.2127%" y="517" width="0.0131%" height="15" fill="rgb(206,73,33)" fg:x="34015" fg:w="13"/><text x="34.4627%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (54 samples, 0.05%)</title><rect x="34.2258%" y="533" width="0.0543%" height="15" fill="rgb(222,79,8)" fg:x="34028" fg:w="54"/><text x="34.4758%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (39 samples, 0.04%)</title><rect x="34.2409%" y="517" width="0.0392%" height="15" fill="rgb(234,8,54)" fg:x="34043" fg:w="39"/><text x="34.4909%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="34.2459%" y="501" width="0.0342%" height="15" fill="rgb(209,134,38)" fg:x="34048" fg:w="34"/><text x="34.4959%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="34.2671%" y="485" width="0.0131%" height="15" fill="rgb(230,127,29)" fg:x="34069" fg:w="13"/><text x="34.5171%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (175 samples, 0.18%)</title><rect x="34.1162%" y="549" width="0.1760%" height="15" fill="rgb(242,44,41)" fg:x="33919" fg:w="175"/><text x="34.3662%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="34.2992%" y="533" width="0.0101%" height="15" fill="rgb(222,56,43)" fg:x="34101" fg:w="10"/><text x="34.5492%" y="543.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="34.2922%" y="549" width="0.0221%" height="15" fill="rgb(238,39,47)" fg:x="34094" fg:w="22"/><text x="34.5422%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (218 samples, 0.22%)</title><rect x="34.0971%" y="581" width="0.2193%" height="15" fill="rgb(226,79,43)" fg:x="33900" fg:w="218"/><text x="34.3471%" y="591.50"></text></g><g><title>alloc::collections::btree::mem::replace (215 samples, 0.22%)</title><rect x="34.1001%" y="565" width="0.2162%" height="15" fill="rgb(242,105,53)" fg:x="33903" fg:w="215"/><text x="34.3501%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (260 samples, 0.26%)</title><rect x="34.0699%" y="613" width="0.2615%" height="15" fill="rgb(251,132,46)" fg:x="33873" fg:w="260"/><text x="34.3199%" y="623.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (243 samples, 0.24%)</title><rect x="34.0870%" y="597" width="0.2444%" height="15" fill="rgb(231,77,14)" fg:x="33890" fg:w="243"/><text x="34.3370%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (15 samples, 0.02%)</title><rect x="34.3586%" y="565" width="0.0151%" height="15" fill="rgb(240,135,9)" fg:x="34160" fg:w="15"/><text x="34.6086%" y="575.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state::_{{closure}} (28 samples, 0.03%)</title><rect x="34.3475%" y="597" width="0.0282%" height="15" fill="rgb(248,109,14)" fg:x="34149" fg:w="28"/><text x="34.5975%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (18 samples, 0.02%)</title><rect x="34.3576%" y="581" width="0.0181%" height="15" fill="rgb(227,146,52)" fg:x="34159" fg:w="18"/><text x="34.6076%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="34.4672%" y="389" width="0.0101%" height="15" fill="rgb(232,54,3)" fg:x="34268" fg:w="10"/><text x="34.7172%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (22 samples, 0.02%)</title><rect x="34.4622%" y="405" width="0.0221%" height="15" fill="rgb(229,201,43)" fg:x="34263" fg:w="22"/><text x="34.7122%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (29 samples, 0.03%)</title><rect x="34.4582%" y="437" width="0.0292%" height="15" fill="rgb(252,161,33)" fg:x="34259" fg:w="29"/><text x="34.7082%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (28 samples, 0.03%)</title><rect x="34.4592%" y="421" width="0.0282%" height="15" fill="rgb(226,146,40)" fg:x="34260" fg:w="28"/><text x="34.7092%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (15 samples, 0.02%)</title><rect x="34.4924%" y="405" width="0.0151%" height="15" fill="rgb(219,47,25)" fg:x="34293" fg:w="15"/><text x="34.7424%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (22 samples, 0.02%)</title><rect x="34.4873%" y="437" width="0.0221%" height="15" fill="rgb(250,135,13)" fg:x="34288" fg:w="22"/><text x="34.7373%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (19 samples, 0.02%)</title><rect x="34.4904%" y="421" width="0.0191%" height="15" fill="rgb(219,229,18)" fg:x="34291" fg:w="19"/><text x="34.7404%" y="431.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (58 samples, 0.06%)</title><rect x="34.4562%" y="453" width="0.0583%" height="15" fill="rgb(217,152,27)" fg:x="34257" fg:w="58"/><text x="34.7062%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (86 samples, 0.09%)</title><rect x="34.4360%" y="533" width="0.0865%" height="15" fill="rgb(225,71,47)" fg:x="34237" fg:w="86"/><text x="34.6860%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (83 samples, 0.08%)</title><rect x="34.4391%" y="517" width="0.0835%" height="15" fill="rgb(220,139,14)" fg:x="34240" fg:w="83"/><text x="34.6891%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (68 samples, 0.07%)</title><rect x="34.4541%" y="501" width="0.0684%" height="15" fill="rgb(247,54,32)" fg:x="34255" fg:w="68"/><text x="34.7041%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (68 samples, 0.07%)</title><rect x="34.4541%" y="485" width="0.0684%" height="15" fill="rgb(252,131,39)" fg:x="34255" fg:w="68"/><text x="34.7041%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (68 samples, 0.07%)</title><rect x="34.4541%" y="469" width="0.0684%" height="15" fill="rgb(210,108,39)" fg:x="34255" fg:w="68"/><text x="34.7041%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (26 samples, 0.03%)</title><rect x="34.5427%" y="517" width="0.0262%" height="15" fill="rgb(205,23,29)" fg:x="34343" fg:w="26"/><text x="34.7927%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.06%)</title><rect x="34.6563%" y="485" width="0.0593%" height="15" fill="rgb(246,139,46)" fg:x="34456" fg:w="59"/><text x="34.9063%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (15 samples, 0.02%)</title><rect x="34.7207%" y="485" width="0.0151%" height="15" fill="rgb(250,81,26)" fg:x="34520" fg:w="15"/><text x="34.9707%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (12 samples, 0.01%)</title><rect x="34.7358%" y="485" width="0.0121%" height="15" fill="rgb(214,104,7)" fg:x="34535" fg:w="12"/><text x="34.9858%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (245 samples, 0.25%)</title><rect x="34.5256%" y="533" width="0.2464%" height="15" fill="rgb(233,189,8)" fg:x="34326" fg:w="245"/><text x="34.7756%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (202 samples, 0.20%)</title><rect x="34.5688%" y="517" width="0.2032%" height="15" fill="rgb(228,141,17)" fg:x="34369" fg:w="202"/><text x="34.8188%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (185 samples, 0.19%)</title><rect x="34.5859%" y="501" width="0.1861%" height="15" fill="rgb(247,157,1)" fg:x="34386" fg:w="185"/><text x="34.8359%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (23 samples, 0.02%)</title><rect x="34.7488%" y="485" width="0.0231%" height="15" fill="rgb(249,225,5)" fg:x="34548" fg:w="23"/><text x="34.9988%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="34.7559%" y="469" width="0.0161%" height="15" fill="rgb(242,55,13)" fg:x="34555" fg:w="16"/><text x="35.0059%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (367 samples, 0.37%)</title><rect x="34.4049%" y="549" width="0.3691%" height="15" fill="rgb(230,49,50)" fg:x="34206" fg:w="367"/><text x="34.6549%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::push (13 samples, 0.01%)</title><rect x="34.7971%" y="533" width="0.0131%" height="15" fill="rgb(241,111,38)" fg:x="34596" fg:w="13"/><text x="35.0471%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (13 samples, 0.01%)</title><rect x="34.8102%" y="533" width="0.0131%" height="15" fill="rgb(252,155,4)" fg:x="34609" fg:w="13"/><text x="35.0602%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (12 samples, 0.01%)</title><rect x="34.8112%" y="517" width="0.0121%" height="15" fill="rgb(212,69,32)" fg:x="34610" fg:w="12"/><text x="35.0612%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="34.8112%" y="501" width="0.0121%" height="15" fill="rgb(243,107,47)" fg:x="34610" fg:w="12"/><text x="35.0612%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (794 samples, 0.80%)</title><rect x="34.0257%" y="709" width="0.7986%" height="15" fill="rgb(247,130,12)" fg:x="33829" fg:w="794"/><text x="34.2757%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (794 samples, 0.80%)</title><rect x="34.0257%" y="693" width="0.7986%" height="15" fill="rgb(233,74,16)" fg:x="33829" fg:w="794"/><text x="34.2757%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (794 samples, 0.80%)</title><rect x="34.0257%" y="677" width="0.7986%" height="15" fill="rgb(208,58,18)" fg:x="33829" fg:w="794"/><text x="34.2757%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (794 samples, 0.80%)</title><rect x="34.0257%" y="661" width="0.7986%" height="15" fill="rgb(242,225,1)" fg:x="33829" fg:w="794"/><text x="34.2757%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (794 samples, 0.80%)</title><rect x="34.0257%" y="645" width="0.7986%" height="15" fill="rgb(249,39,40)" fg:x="33829" fg:w="794"/><text x="34.2757%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (774 samples, 0.78%)</title><rect x="34.0458%" y="629" width="0.7785%" height="15" fill="rgb(207,72,44)" fg:x="33849" fg:w="774"/><text x="34.2958%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (490 samples, 0.49%)</title><rect x="34.3314%" y="613" width="0.4928%" height="15" fill="rgb(215,193,12)" fg:x="34133" fg:w="490"/><text x="34.5814%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (446 samples, 0.45%)</title><rect x="34.3757%" y="597" width="0.4486%" height="15" fill="rgb(248,41,39)" fg:x="34177" fg:w="446"/><text x="34.6257%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (441 samples, 0.44%)</title><rect x="34.3807%" y="581" width="0.4436%" height="15" fill="rgb(253,85,4)" fg:x="34182" fg:w="441"/><text x="34.6307%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (435 samples, 0.44%)</title><rect x="34.3868%" y="565" width="0.4375%" height="15" fill="rgb(243,70,31)" fg:x="34188" fg:w="435"/><text x="34.6368%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (50 samples, 0.05%)</title><rect x="34.7740%" y="549" width="0.0503%" height="15" fill="rgb(253,195,26)" fg:x="34573" fg:w="50"/><text x="35.0240%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="34.8273%" y="597" width="0.0221%" height="15" fill="rgb(243,42,11)" fg:x="34626" fg:w="22"/><text x="35.0773%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="34.8293%" y="581" width="0.0201%" height="15" fill="rgb(239,66,17)" fg:x="34628" fg:w="20"/><text x="35.0793%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (27 samples, 0.03%)</title><rect x="34.8494%" y="597" width="0.0272%" height="15" fill="rgb(217,132,21)" fg:x="34648" fg:w="27"/><text x="35.0994%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::new (12 samples, 0.01%)</title><rect x="34.8766%" y="597" width="0.0121%" height="15" fill="rgb(252,202,21)" fg:x="34675" fg:w="12"/><text x="35.1266%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (78 samples, 0.08%)</title><rect x="34.8243%" y="629" width="0.0785%" height="15" fill="rgb(233,98,36)" fg:x="34623" fg:w="78"/><text x="35.0743%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (77 samples, 0.08%)</title><rect x="34.8253%" y="613" width="0.0774%" height="15" fill="rgb(216,153,54)" fg:x="34624" fg:w="77"/><text x="35.0753%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (11 samples, 0.01%)</title><rect x="34.9359%" y="565" width="0.0111%" height="15" fill="rgb(250,99,7)" fg:x="34734" fg:w="11"/><text x="35.1859%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (17 samples, 0.02%)</title><rect x="34.9470%" y="565" width="0.0171%" height="15" fill="rgb(207,56,50)" fg:x="34745" fg:w="17"/><text x="35.1970%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (28 samples, 0.03%)</title><rect x="34.9681%" y="565" width="0.0282%" height="15" fill="rgb(244,61,34)" fg:x="34766" fg:w="28"/><text x="35.2181%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="34.9802%" y="549" width="0.0161%" height="15" fill="rgb(241,50,38)" fg:x="34778" fg:w="16"/><text x="35.2302%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="34.9832%" y="533" width="0.0131%" height="15" fill="rgb(212,166,30)" fg:x="34781" fg:w="13"/><text x="35.2332%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (85 samples, 0.09%)</title><rect x="34.9168%" y="581" width="0.0855%" height="15" fill="rgb(249,127,32)" fg:x="34715" fg:w="85"/><text x="35.1668%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (102 samples, 0.10%)</title><rect x="34.9118%" y="597" width="0.1026%" height="15" fill="rgb(209,103,0)" fg:x="34710" fg:w="102"/><text x="35.1618%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (12 samples, 0.01%)</title><rect x="35.0023%" y="581" width="0.0121%" height="15" fill="rgb(238,209,51)" fg:x="34800" fg:w="12"/><text x="35.2523%" y="591.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="35.0144%" y="597" width="0.0161%" height="15" fill="rgb(237,56,23)" fg:x="34812" fg:w="16"/><text x="35.2644%" y="607.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (3,989 samples, 4.01%)</title><rect x="31.0193%" y="725" width="4.0122%" height="15" fill="rgb(215,153,46)" fg:x="30840" fg:w="3989"/><text x="31.2693%" y="735.50">byte..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (206 samples, 0.21%)</title><rect x="34.8243%" y="709" width="0.2072%" height="15" fill="rgb(224,49,31)" fg:x="34623" fg:w="206"/><text x="35.0743%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.21%)</title><rect x="34.8243%" y="693" width="0.2072%" height="15" fill="rgb(250,18,42)" fg:x="34623" fg:w="206"/><text x="35.0743%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (206 samples, 0.21%)</title><rect x="34.8243%" y="677" width="0.2072%" height="15" fill="rgb(215,176,39)" fg:x="34623" fg:w="206"/><text x="35.0743%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.21%)</title><rect x="34.8243%" y="661" width="0.2072%" height="15" fill="rgb(223,77,29)" fg:x="34623" fg:w="206"/><text x="35.0743%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (206 samples, 0.21%)</title><rect x="34.8243%" y="645" width="0.2072%" height="15" fill="rgb(234,94,52)" fg:x="34623" fg:w="206"/><text x="35.0743%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (128 samples, 0.13%)</title><rect x="34.9027%" y="629" width="0.1287%" height="15" fill="rgb(220,154,50)" fg:x="34701" fg:w="128"/><text x="35.1527%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (128 samples, 0.13%)</title><rect x="34.9027%" y="613" width="0.1287%" height="15" fill="rgb(212,11,10)" fg:x="34701" fg:w="128"/><text x="35.1527%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (10 samples, 0.01%)</title><rect x="35.0315%" y="629" width="0.0101%" height="15" fill="rgb(205,166,19)" fg:x="34829" fg:w="10"/><text x="35.2815%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (10 samples, 0.01%)</title><rect x="35.0315%" y="613" width="0.0101%" height="15" fill="rgb(244,198,16)" fg:x="34829" fg:w="10"/><text x="35.2815%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (42 samples, 0.04%)</title><rect x="35.0818%" y="565" width="0.0422%" height="15" fill="rgb(219,69,12)" fg:x="34879" fg:w="42"/><text x="35.3318%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (19 samples, 0.02%)</title><rect x="35.1049%" y="549" width="0.0191%" height="15" fill="rgb(245,30,7)" fg:x="34902" fg:w="19"/><text x="35.3549%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (11 samples, 0.01%)</title><rect x="35.1130%" y="533" width="0.0111%" height="15" fill="rgb(218,221,48)" fg:x="34910" fg:w="11"/><text x="35.3630%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (10 samples, 0.01%)</title><rect x="35.1240%" y="565" width="0.0101%" height="15" fill="rgb(216,66,15)" fg:x="34921" fg:w="10"/><text x="35.3740%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (18 samples, 0.02%)</title><rect x="35.1341%" y="565" width="0.0181%" height="15" fill="rgb(226,122,50)" fg:x="34931" fg:w="18"/><text x="35.3841%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (12 samples, 0.01%)</title><rect x="35.1401%" y="549" width="0.0121%" height="15" fill="rgb(239,156,16)" fg:x="34937" fg:w="12"/><text x="35.3901%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (11 samples, 0.01%)</title><rect x="35.1824%" y="549" width="0.0111%" height="15" fill="rgb(224,27,38)" fg:x="34979" fg:w="11"/><text x="35.4324%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (25 samples, 0.03%)</title><rect x="35.2125%" y="517" width="0.0251%" height="15" fill="rgb(224,39,27)" fg:x="35009" fg:w="25"/><text x="35.4625%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (19 samples, 0.02%)</title><rect x="35.2186%" y="501" width="0.0191%" height="15" fill="rgb(215,92,29)" fg:x="35015" fg:w="19"/><text x="35.4686%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (78 samples, 0.08%)</title><rect x="35.1622%" y="565" width="0.0785%" height="15" fill="rgb(207,159,16)" fg:x="34959" fg:w="78"/><text x="35.4122%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (47 samples, 0.05%)</title><rect x="35.1934%" y="549" width="0.0473%" height="15" fill="rgb(238,163,47)" fg:x="34990" fg:w="47"/><text x="35.4434%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (37 samples, 0.04%)</title><rect x="35.2035%" y="533" width="0.0372%" height="15" fill="rgb(219,91,49)" fg:x="35000" fg:w="37"/><text x="35.4535%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (11 samples, 0.01%)</title><rect x="35.2407%" y="565" width="0.0111%" height="15" fill="rgb(227,167,31)" fg:x="35037" fg:w="11"/><text x="35.4907%" y="575.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="35.2518%" y="565" width="0.0302%" height="15" fill="rgb(234,80,54)" fg:x="35048" fg:w="30"/><text x="35.5018%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.02%)</title><rect x="35.2658%" y="549" width="0.0161%" height="15" fill="rgb(212,114,2)" fg:x="35062" fg:w="16"/><text x="35.5158%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (250 samples, 0.25%)</title><rect x="35.0315%" y="709" width="0.2515%" height="15" fill="rgb(234,50,24)" fg:x="34829" fg:w="250"/><text x="35.2815%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.25%)</title><rect x="35.0315%" y="693" width="0.2515%" height="15" fill="rgb(221,68,8)" fg:x="34829" fg:w="250"/><text x="35.2815%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (250 samples, 0.25%)</title><rect x="35.0315%" y="677" width="0.2515%" height="15" fill="rgb(254,180,31)" fg:x="34829" fg:w="250"/><text x="35.2815%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.25%)</title><rect x="35.0315%" y="661" width="0.2515%" height="15" fill="rgb(247,130,50)" fg:x="34829" fg:w="250"/><text x="35.2815%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (250 samples, 0.25%)</title><rect x="35.0315%" y="645" width="0.2515%" height="15" fill="rgb(211,109,4)" fg:x="34829" fg:w="250"/><text x="35.2815%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (240 samples, 0.24%)</title><rect x="35.0415%" y="629" width="0.2414%" height="15" fill="rgb(238,50,21)" fg:x="34839" fg:w="240"/><text x="35.2915%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (240 samples, 0.24%)</title><rect x="35.0415%" y="613" width="0.2414%" height="15" fill="rgb(225,57,45)" fg:x="34839" fg:w="240"/><text x="35.2915%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (240 samples, 0.24%)</title><rect x="35.0415%" y="597" width="0.2414%" height="15" fill="rgb(209,196,50)" fg:x="34839" fg:w="240"/><text x="35.2915%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (240 samples, 0.24%)</title><rect x="35.0415%" y="581" width="0.2414%" height="15" fill="rgb(242,140,13)" fg:x="34839" fg:w="240"/><text x="35.2915%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (23 samples, 0.02%)</title><rect x="35.2910%" y="581" width="0.0231%" height="15" fill="rgb(217,111,7)" fg:x="35087" fg:w="23"/><text x="35.5410%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (37 samples, 0.04%)</title><rect x="35.2829%" y="613" width="0.0372%" height="15" fill="rgb(253,193,51)" fg:x="35079" fg:w="37"/><text x="35.5329%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (37 samples, 0.04%)</title><rect x="35.2829%" y="597" width="0.0372%" height="15" fill="rgb(252,70,29)" fg:x="35079" fg:w="37"/><text x="35.5329%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,HandleType&gt;::reborrow (17 samples, 0.02%)</title><rect x="35.3533%" y="549" width="0.0171%" height="15" fill="rgb(232,127,12)" fg:x="35149" fg:w="17"/><text x="35.6033%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="35.3704%" y="549" width="0.0101%" height="15" fill="rgb(211,180,21)" fg:x="35166" fg:w="10"/><text x="35.6204%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (24 samples, 0.02%)</title><rect x="35.3865%" y="549" width="0.0241%" height="15" fill="rgb(229,72,13)" fg:x="35182" fg:w="24"/><text x="35.6365%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="35.3936%" y="533" width="0.0171%" height="15" fill="rgb(240,211,49)" fg:x="35189" fg:w="17"/><text x="35.6436%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="35.3966%" y="517" width="0.0141%" height="15" fill="rgb(219,149,40)" fg:x="35192" fg:w="14"/><text x="35.6466%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="35.4147%" y="533" width="0.0111%" height="15" fill="rgb(210,127,46)" fg:x="35210" fg:w="11"/><text x="35.6647%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (113 samples, 0.11%)</title><rect x="35.3242%" y="565" width="0.1137%" height="15" fill="rgb(220,106,7)" fg:x="35120" fg:w="113"/><text x="35.5742%" y="575.50"></text></g><g><title>core::ptr::read (27 samples, 0.03%)</title><rect x="35.4107%" y="549" width="0.0272%" height="15" fill="rgb(249,31,22)" fg:x="35206" fg:w="27"/><text x="35.6607%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (12 samples, 0.01%)</title><rect x="35.4258%" y="533" width="0.0121%" height="15" fill="rgb(253,1,49)" fg:x="35221" fg:w="12"/><text x="35.6758%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (128 samples, 0.13%)</title><rect x="35.3202%" y="581" width="0.1287%" height="15" fill="rgb(227,144,33)" fg:x="35116" fg:w="128"/><text x="35.5702%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (11 samples, 0.01%)</title><rect x="35.4378%" y="565" width="0.0111%" height="15" fill="rgb(249,163,44)" fg:x="35233" fg:w="11"/><text x="35.6878%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (177 samples, 0.18%)</title><rect x="35.2829%" y="629" width="0.1780%" height="15" fill="rgb(234,15,39)" fg:x="35079" fg:w="177"/><text x="35.5329%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (140 samples, 0.14%)</title><rect x="35.3202%" y="613" width="0.1408%" height="15" fill="rgb(207,66,16)" fg:x="35116" fg:w="140"/><text x="35.5702%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (140 samples, 0.14%)</title><rect x="35.3202%" y="597" width="0.1408%" height="15" fill="rgb(233,112,24)" fg:x="35116" fg:w="140"/><text x="35.5702%" y="607.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="35.4489%" y="581" width="0.0121%" height="15" fill="rgb(230,90,22)" fg:x="35244" fg:w="12"/><text x="35.6989%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (20 samples, 0.02%)</title><rect x="35.4610%" y="581" width="0.0201%" height="15" fill="rgb(229,61,13)" fg:x="35256" fg:w="20"/><text x="35.7110%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (20 samples, 0.02%)</title><rect x="35.4610%" y="565" width="0.0201%" height="15" fill="rgb(225,57,24)" fg:x="35256" fg:w="20"/><text x="35.7110%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="35.4610%" y="549" width="0.0201%" height="15" fill="rgb(208,169,48)" fg:x="35256" fg:w="20"/><text x="35.7110%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (18 samples, 0.02%)</title><rect x="35.4630%" y="533" width="0.0181%" height="15" fill="rgb(244,218,51)" fg:x="35258" fg:w="18"/><text x="35.7130%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="35.4630%" y="517" width="0.0181%" height="15" fill="rgb(214,148,10)" fg:x="35258" fg:w="18"/><text x="35.7130%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (18 samples, 0.02%)</title><rect x="35.4630%" y="501" width="0.0181%" height="15" fill="rgb(225,174,27)" fg:x="35258" fg:w="18"/><text x="35.7130%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (13 samples, 0.01%)</title><rect x="35.4992%" y="453" width="0.0131%" height="15" fill="rgb(230,96,26)" fg:x="35294" fg:w="13"/><text x="35.7492%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (34 samples, 0.03%)</title><rect x="35.4891%" y="485" width="0.0342%" height="15" fill="rgb(232,10,30)" fg:x="35284" fg:w="34"/><text x="35.7391%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (28 samples, 0.03%)</title><rect x="35.4952%" y="469" width="0.0282%" height="15" fill="rgb(222,8,50)" fg:x="35290" fg:w="28"/><text x="35.7452%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="35.5233%" y="485" width="0.0101%" height="15" fill="rgb(213,81,27)" fg:x="35318" fg:w="10"/><text x="35.7733%" y="495.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="35.5233%" y="469" width="0.0101%" height="15" fill="rgb(245,50,10)" fg:x="35318" fg:w="10"/><text x="35.7733%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (56 samples, 0.06%)</title><rect x="35.4881%" y="501" width="0.0563%" height="15" fill="rgb(216,100,18)" fg:x="35283" fg:w="56"/><text x="35.7381%" y="511.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="35.5334%" y="485" width="0.0111%" height="15" fill="rgb(236,147,54)" fg:x="35328" fg:w="11"/><text x="35.7834%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (12 samples, 0.01%)</title><rect x="35.5575%" y="373" width="0.0121%" height="15" fill="rgb(205,143,26)" fg:x="35352" fg:w="12"/><text x="35.8075%" y="383.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="35.5575%" y="357" width="0.0121%" height="15" fill="rgb(236,26,9)" fg:x="35352" fg:w="12"/><text x="35.8075%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="35.5575%" y="341" width="0.0121%" height="15" fill="rgb(221,165,53)" fg:x="35352" fg:w="12"/><text x="35.8075%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (12 samples, 0.01%)</title><rect x="35.5575%" y="325" width="0.0121%" height="15" fill="rgb(214,110,17)" fg:x="35352" fg:w="12"/><text x="35.8075%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (19 samples, 0.02%)</title><rect x="35.5515%" y="389" width="0.0191%" height="15" fill="rgb(237,197,12)" fg:x="35346" fg:w="19"/><text x="35.8015%" y="399.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (4,529 samples, 4.56%)</title><rect x="31.0193%" y="741" width="4.5553%" height="15" fill="rgb(205,84,17)" fg:x="30840" fg:w="4529"/><text x="31.2693%" y="751.50">&lt;byte..</text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (540 samples, 0.54%)</title><rect x="35.0315%" y="725" width="0.5431%" height="15" fill="rgb(237,18,45)" fg:x="34829" fg:w="540"/><text x="35.2815%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (290 samples, 0.29%)</title><rect x="35.2829%" y="709" width="0.2917%" height="15" fill="rgb(221,87,14)" fg:x="35079" fg:w="290"/><text x="35.5329%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (290 samples, 0.29%)</title><rect x="35.2829%" y="693" width="0.2917%" height="15" fill="rgb(238,186,15)" fg:x="35079" fg:w="290"/><text x="35.5329%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (290 samples, 0.29%)</title><rect x="35.2829%" y="677" width="0.2917%" height="15" fill="rgb(208,115,11)" fg:x="35079" fg:w="290"/><text x="35.5329%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (290 samples, 0.29%)</title><rect x="35.2829%" y="661" width="0.2917%" height="15" fill="rgb(254,175,0)" fg:x="35079" fg:w="290"/><text x="35.5329%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (290 samples, 0.29%)</title><rect x="35.2829%" y="645" width="0.2917%" height="15" fill="rgb(227,24,42)" fg:x="35079" fg:w="290"/><text x="35.5329%" y="655.50"></text></g><g><title>core::mem::drop (113 samples, 0.11%)</title><rect x="35.4610%" y="629" width="0.1137%" height="15" fill="rgb(223,211,37)" fg:x="35256" fg:w="113"/><text x="35.7110%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (113 samples, 0.11%)</title><rect x="35.4610%" y="613" width="0.1137%" height="15" fill="rgb(235,49,27)" fg:x="35256" fg:w="113"/><text x="35.7110%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (113 samples, 0.11%)</title><rect x="35.4610%" y="597" width="0.1137%" height="15" fill="rgb(254,97,51)" fg:x="35256" fg:w="113"/><text x="35.7110%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (93 samples, 0.09%)</title><rect x="35.4811%" y="581" width="0.0935%" height="15" fill="rgb(249,51,40)" fg:x="35276" fg:w="93"/><text x="35.7311%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (93 samples, 0.09%)</title><rect x="35.4811%" y="565" width="0.0935%" height="15" fill="rgb(210,128,45)" fg:x="35276" fg:w="93"/><text x="35.7311%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.09%)</title><rect x="35.4811%" y="549" width="0.0935%" height="15" fill="rgb(224,137,50)" fg:x="35276" fg:w="93"/><text x="35.7311%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (86 samples, 0.09%)</title><rect x="35.4881%" y="533" width="0.0865%" height="15" fill="rgb(242,15,9)" fg:x="35283" fg:w="86"/><text x="35.7381%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.09%)</title><rect x="35.4881%" y="517" width="0.0865%" height="15" fill="rgb(233,187,41)" fg:x="35283" fg:w="86"/><text x="35.7381%" y="527.50"></text></g><g><title>core::mem::drop (30 samples, 0.03%)</title><rect x="35.5444%" y="501" width="0.0302%" height="15" fill="rgb(227,2,29)" fg:x="35339" fg:w="30"/><text x="35.7944%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (30 samples, 0.03%)</title><rect x="35.5444%" y="485" width="0.0302%" height="15" fill="rgb(222,70,3)" fg:x="35339" fg:w="30"/><text x="35.7944%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="35.5444%" y="469" width="0.0302%" height="15" fill="rgb(213,11,42)" fg:x="35339" fg:w="30"/><text x="35.7944%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (30 samples, 0.03%)</title><rect x="35.5444%" y="453" width="0.0302%" height="15" fill="rgb(225,150,9)" fg:x="35339" fg:w="30"/><text x="35.7944%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="35.5444%" y="437" width="0.0302%" height="15" fill="rgb(230,162,45)" fg:x="35339" fg:w="30"/><text x="35.7944%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (24 samples, 0.02%)</title><rect x="35.5505%" y="421" width="0.0241%" height="15" fill="rgb(222,14,52)" fg:x="35345" fg:w="24"/><text x="35.8005%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="35.5505%" y="405" width="0.0241%" height="15" fill="rgb(254,198,14)" fg:x="35345" fg:w="24"/><text x="35.8005%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (10 samples, 0.01%)</title><rect x="35.5907%" y="677" width="0.0101%" height="15" fill="rgb(220,217,30)" fg:x="35385" fg:w="10"/><text x="35.8407%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (20 samples, 0.02%)</title><rect x="35.6008%" y="677" width="0.0201%" height="15" fill="rgb(215,146,41)" fg:x="35395" fg:w="20"/><text x="35.8508%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="35.6098%" y="661" width="0.0111%" height="15" fill="rgb(217,27,36)" fg:x="35404" fg:w="11"/><text x="35.8598%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.01%)</title><rect x="35.6320%" y="661" width="0.0101%" height="15" fill="rgb(219,218,39)" fg:x="35426" fg:w="10"/><text x="35.8820%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (36 samples, 0.04%)</title><rect x="35.6219%" y="677" width="0.0362%" height="15" fill="rgb(219,4,42)" fg:x="35416" fg:w="36"/><text x="35.8719%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (13 samples, 0.01%)</title><rect x="35.6591%" y="677" width="0.0131%" height="15" fill="rgb(249,119,36)" fg:x="35453" fg:w="13"/><text x="35.9091%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (12 samples, 0.01%)</title><rect x="35.6601%" y="661" width="0.0121%" height="15" fill="rgb(209,23,33)" fg:x="35454" fg:w="12"/><text x="35.9101%" y="671.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (12 samples, 0.01%)</title><rect x="35.6601%" y="645" width="0.0121%" height="15" fill="rgb(211,10,0)" fg:x="35454" fg:w="12"/><text x="35.9101%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (99 samples, 0.10%)</title><rect x="35.5746%" y="693" width="0.0996%" height="15" fill="rgb(208,99,37)" fg:x="35369" fg:w="99"/><text x="35.8246%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (23 samples, 0.02%)</title><rect x="35.6742%" y="693" width="0.0231%" height="15" fill="rgb(213,132,31)" fg:x="35468" fg:w="23"/><text x="35.9242%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (10 samples, 0.01%)</title><rect x="35.6873%" y="677" width="0.0101%" height="15" fill="rgb(243,129,40)" fg:x="35481" fg:w="10"/><text x="35.9373%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (32 samples, 0.03%)</title><rect x="35.7034%" y="693" width="0.0322%" height="15" fill="rgb(210,66,33)" fg:x="35497" fg:w="32"/><text x="35.9534%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="35.7164%" y="677" width="0.0191%" height="15" fill="rgb(209,189,4)" fg:x="35510" fg:w="19"/><text x="35.9664%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="35.7205%" y="661" width="0.0151%" height="15" fill="rgb(214,107,37)" fg:x="35514" fg:w="15"/><text x="35.9705%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (16 samples, 0.02%)</title><rect x="35.7577%" y="677" width="0.0161%" height="15" fill="rgb(245,88,54)" fg:x="35551" fg:w="16"/><text x="36.0077%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (18 samples, 0.02%)</title><rect x="35.7758%" y="677" width="0.0181%" height="15" fill="rgb(205,146,20)" fg:x="35569" fg:w="18"/><text x="36.0258%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (13 samples, 0.01%)</title><rect x="35.7808%" y="661" width="0.0131%" height="15" fill="rgb(220,161,25)" fg:x="35574" fg:w="13"/><text x="36.0308%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="35.7838%" y="645" width="0.0101%" height="15" fill="rgb(215,152,15)" fg:x="35577" fg:w="10"/><text x="36.0338%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (56 samples, 0.06%)</title><rect x="35.7446%" y="693" width="0.0563%" height="15" fill="rgb(233,192,44)" fg:x="35538" fg:w="56"/><text x="35.9946%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="35.8160%" y="597" width="0.0211%" height="15" fill="rgb(240,170,46)" fg:x="35609" fg:w="21"/><text x="36.0660%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="35.8180%" y="581" width="0.0191%" height="15" fill="rgb(207,104,33)" fg:x="35611" fg:w="19"/><text x="36.0680%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (44 samples, 0.04%)</title><rect x="35.8050%" y="613" width="0.0443%" height="15" fill="rgb(219,21,39)" fg:x="35598" fg:w="44"/><text x="36.0550%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (52 samples, 0.05%)</title><rect x="35.8039%" y="645" width="0.0523%" height="15" fill="rgb(214,133,29)" fg:x="35597" fg:w="52"/><text x="36.0539%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (52 samples, 0.05%)</title><rect x="35.8039%" y="629" width="0.0523%" height="15" fill="rgb(226,93,6)" fg:x="35597" fg:w="52"/><text x="36.0539%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (17 samples, 0.02%)</title><rect x="35.8562%" y="645" width="0.0171%" height="15" fill="rgb(252,222,34)" fg:x="35649" fg:w="17"/><text x="36.1062%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (13 samples, 0.01%)</title><rect x="35.8603%" y="629" width="0.0131%" height="15" fill="rgb(252,92,48)" fg:x="35653" fg:w="13"/><text x="36.1103%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (13 samples, 0.01%)</title><rect x="35.8603%" y="613" width="0.0131%" height="15" fill="rgb(245,223,24)" fg:x="35653" fg:w="13"/><text x="36.1103%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (81 samples, 0.08%)</title><rect x="35.8019%" y="661" width="0.0815%" height="15" fill="rgb(205,176,3)" fg:x="35595" fg:w="81"/><text x="36.0519%" y="671.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (10 samples, 0.01%)</title><rect x="35.8733%" y="645" width="0.0101%" height="15" fill="rgb(235,151,15)" fg:x="35666" fg:w="10"/><text x="36.1233%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (85 samples, 0.09%)</title><rect x="35.8009%" y="693" width="0.0855%" height="15" fill="rgb(237,209,11)" fg:x="35594" fg:w="85"/><text x="36.0509%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (84 samples, 0.08%)</title><rect x="35.8019%" y="677" width="0.0845%" height="15" fill="rgb(243,227,24)" fg:x="35595" fg:w="84"/><text x="36.0519%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (21 samples, 0.02%)</title><rect x="35.8864%" y="645" width="0.0211%" height="15" fill="rgb(239,193,16)" fg:x="35679" fg:w="21"/><text x="36.1364%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (21 samples, 0.02%)</title><rect x="35.8864%" y="629" width="0.0211%" height="15" fill="rgb(231,27,9)" fg:x="35679" fg:w="21"/><text x="36.1364%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (21 samples, 0.02%)</title><rect x="35.8864%" y="613" width="0.0211%" height="15" fill="rgb(219,169,10)" fg:x="35679" fg:w="21"/><text x="36.1364%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::from_new_internal (12 samples, 0.01%)</title><rect x="35.8955%" y="597" width="0.0121%" height="15" fill="rgb(244,229,43)" fg:x="35688" fg:w="12"/><text x="36.1455%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_all_childrens_parent_links (12 samples, 0.01%)</title><rect x="35.8955%" y="581" width="0.0121%" height="15" fill="rgb(254,38,20)" fg:x="35688" fg:w="12"/><text x="36.1455%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (12 samples, 0.01%)</title><rect x="35.8955%" y="565" width="0.0121%" height="15" fill="rgb(250,47,30)" fg:x="35688" fg:w="12"/><text x="36.1455%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (23 samples, 0.02%)</title><rect x="35.8864%" y="693" width="0.0231%" height="15" fill="rgb(224,124,36)" fg:x="35679" fg:w="23"/><text x="36.1364%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (23 samples, 0.02%)</title><rect x="35.8864%" y="677" width="0.0231%" height="15" fill="rgb(246,68,51)" fg:x="35679" fg:w="23"/><text x="36.1364%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="35.8864%" y="661" width="0.0231%" height="15" fill="rgb(253,43,49)" fg:x="35679" fg:w="23"/><text x="36.1364%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (334 samples, 0.34%)</title><rect x="35.5746%" y="725" width="0.3359%" height="15" fill="rgb(219,54,36)" fg:x="35369" fg:w="334"/><text x="35.8246%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (334 samples, 0.34%)</title><rect x="35.5746%" y="709" width="0.3359%" height="15" fill="rgb(227,133,34)" fg:x="35369" fg:w="334"/><text x="35.8246%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (12 samples, 0.01%)</title><rect x="35.9578%" y="613" width="0.0121%" height="15" fill="rgb(247,227,15)" fg:x="35750" fg:w="12"/><text x="36.2078%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.01%)</title><rect x="35.9588%" y="597" width="0.0111%" height="15" fill="rgb(229,96,14)" fg:x="35751" fg:w="11"/><text x="36.2088%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (29 samples, 0.03%)</title><rect x="35.9417%" y="629" width="0.0292%" height="15" fill="rgb(220,79,17)" fg:x="35734" fg:w="29"/><text x="36.1917%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.04%)</title><rect x="35.9367%" y="661" width="0.0402%" height="15" fill="rgb(205,131,53)" fg:x="35729" fg:w="40"/><text x="36.1867%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="35.9387%" y="645" width="0.0382%" height="15" fill="rgb(209,50,29)" fg:x="35731" fg:w="38"/><text x="36.1887%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.02%)</title><rect x="35.9810%" y="629" width="0.0191%" height="15" fill="rgb(245,86,46)" fg:x="35773" fg:w="19"/><text x="36.2310%" y="639.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="35.9769%" y="661" width="0.0262%" height="15" fill="rgb(235,66,46)" fg:x="35769" fg:w="26"/><text x="36.2269%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (25 samples, 0.03%)</title><rect x="35.9780%" y="645" width="0.0251%" height="15" fill="rgb(232,148,31)" fg:x="35770" fg:w="25"/><text x="36.2280%" y="655.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (71 samples, 0.07%)</title><rect x="35.9327%" y="677" width="0.0714%" height="15" fill="rgb(217,149,8)" fg:x="35725" fg:w="71"/><text x="36.1827%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (12 samples, 0.01%)</title><rect x="36.0071%" y="677" width="0.0121%" height="15" fill="rgb(209,183,11)" fg:x="35799" fg:w="12"/><text x="36.2571%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (15 samples, 0.02%)</title><rect x="36.0192%" y="677" width="0.0151%" height="15" fill="rgb(208,55,20)" fg:x="35811" fg:w="15"/><text x="36.2692%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (20 samples, 0.02%)</title><rect x="36.0494%" y="661" width="0.0201%" height="15" fill="rgb(218,39,14)" fg:x="35841" fg:w="20"/><text x="36.2994%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="36.0594%" y="645" width="0.0101%" height="15" fill="rgb(216,169,33)" fg:x="35851" fg:w="10"/><text x="36.3094%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (12 samples, 0.01%)</title><rect x="36.0755%" y="661" width="0.0121%" height="15" fill="rgb(233,80,24)" fg:x="35867" fg:w="12"/><text x="36.3255%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="36.0946%" y="629" width="0.0111%" height="15" fill="rgb(213,179,31)" fg:x="35886" fg:w="11"/><text x="36.3446%" y="639.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="36.1057%" y="629" width="0.0121%" height="15" fill="rgb(209,19,5)" fg:x="35897" fg:w="12"/><text x="36.3557%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="36.1077%" y="613" width="0.0101%" height="15" fill="rgb(219,18,35)" fg:x="35899" fg:w="10"/><text x="36.3577%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (79 samples, 0.08%)</title><rect x="36.0393%" y="677" width="0.0795%" height="15" fill="rgb(209,169,16)" fg:x="35831" fg:w="79"/><text x="36.2893%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (30 samples, 0.03%)</title><rect x="36.0886%" y="661" width="0.0302%" height="15" fill="rgb(245,90,51)" fg:x="35880" fg:w="30"/><text x="36.3386%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="36.0916%" y="645" width="0.0272%" height="15" fill="rgb(220,99,45)" fg:x="35883" fg:w="27"/><text x="36.3416%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="36.1419%" y="581" width="0.0201%" height="15" fill="rgb(249,89,25)" fg:x="35933" fg:w="20"/><text x="36.3919%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="36.1439%" y="565" width="0.0181%" height="15" fill="rgb(239,193,0)" fg:x="35935" fg:w="18"/><text x="36.3939%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (39 samples, 0.04%)</title><rect x="36.1318%" y="597" width="0.0392%" height="15" fill="rgb(231,126,1)" fg:x="35923" fg:w="39"/><text x="36.3818%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (52 samples, 0.05%)</title><rect x="36.1258%" y="629" width="0.0523%" height="15" fill="rgb(243,166,3)" fg:x="35917" fg:w="52"/><text x="36.3758%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (51 samples, 0.05%)</title><rect x="36.1268%" y="613" width="0.0513%" height="15" fill="rgb(223,22,34)" fg:x="35918" fg:w="51"/><text x="36.3768%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (10 samples, 0.01%)</title><rect x="36.1831%" y="597" width="0.0101%" height="15" fill="rgb(251,52,51)" fg:x="35974" fg:w="10"/><text x="36.4331%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (16 samples, 0.02%)</title><rect x="36.1781%" y="629" width="0.0161%" height="15" fill="rgb(221,165,28)" fg:x="35969" fg:w="16"/><text x="36.4281%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (12 samples, 0.01%)</title><rect x="36.1821%" y="613" width="0.0121%" height="15" fill="rgb(218,121,47)" fg:x="35973" fg:w="12"/><text x="36.4321%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (71 samples, 0.07%)</title><rect x="36.1248%" y="645" width="0.0714%" height="15" fill="rgb(209,120,9)" fg:x="35916" fg:w="71"/><text x="36.3748%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (83 samples, 0.08%)</title><rect x="36.1188%" y="677" width="0.0835%" height="15" fill="rgb(236,68,12)" fg:x="35910" fg:w="83"/><text x="36.3688%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (78 samples, 0.08%)</title><rect x="36.1238%" y="661" width="0.0785%" height="15" fill="rgb(225,194,26)" fg:x="35915" fg:w="78"/><text x="36.3738%" y="671.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (5,156 samples, 5.19%)</title><rect x="31.0193%" y="757" width="5.1860%" height="15" fill="rgb(231,84,39)" fg:x="30840" fg:w="5156"/><text x="31.2693%" y="767.50">byteco..</text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (627 samples, 0.63%)</title><rect x="35.5746%" y="741" width="0.6306%" height="15" fill="rgb(210,11,45)" fg:x="35369" fg:w="627"/><text x="35.8246%" y="751.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (293 samples, 0.29%)</title><rect x="35.9106%" y="725" width="0.2947%" height="15" fill="rgb(224,54,52)" fg:x="35703" fg:w="293"/><text x="36.1606%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (293 samples, 0.29%)</title><rect x="35.9106%" y="709" width="0.2947%" height="15" fill="rgb(238,102,14)" fg:x="35703" fg:w="293"/><text x="36.1606%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (293 samples, 0.29%)</title><rect x="35.9106%" y="693" width="0.2947%" height="15" fill="rgb(243,160,52)" fg:x="35703" fg:w="293"/><text x="36.1606%" y="703.50"></text></g><g><title>core::mem::swap (11 samples, 0.01%)</title><rect x="36.2173%" y="661" width="0.0111%" height="15" fill="rgb(216,114,19)" fg:x="36008" fg:w="11"/><text x="36.4673%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (11 samples, 0.01%)</title><rect x="36.2173%" y="645" width="0.0111%" height="15" fill="rgb(244,166,37)" fg:x="36008" fg:w="11"/><text x="36.4673%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping (11 samples, 0.01%)</title><rect x="36.2173%" y="629" width="0.0111%" height="15" fill="rgb(246,29,44)" fg:x="36008" fg:w="11"/><text x="36.4673%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (12 samples, 0.01%)</title><rect x="36.2284%" y="613" width="0.0121%" height="15" fill="rgb(215,56,53)" fg:x="36019" fg:w="12"/><text x="36.4784%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="36.2284%" y="661" width="0.0131%" height="15" fill="rgb(217,60,2)" fg:x="36019" fg:w="13"/><text x="36.4784%" y="671.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="36.2284%" y="645" width="0.0131%" height="15" fill="rgb(207,26,24)" fg:x="36019" fg:w="13"/><text x="36.4784%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (13 samples, 0.01%)</title><rect x="36.2284%" y="629" width="0.0131%" height="15" fill="rgb(252,210,15)" fg:x="36019" fg:w="13"/><text x="36.4784%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="36.2415%" y="629" width="0.0221%" height="15" fill="rgb(253,209,26)" fg:x="36032" fg:w="22"/><text x="36.4915%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="36.2415%" y="613" width="0.0221%" height="15" fill="rgb(238,170,14)" fg:x="36032" fg:w="22"/><text x="36.4915%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="36.2415%" y="597" width="0.0221%" height="15" fill="rgb(216,178,15)" fg:x="36032" fg:w="22"/><text x="36.4915%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.02%)</title><rect x="36.2485%" y="581" width="0.0151%" height="15" fill="rgb(250,197,2)" fg:x="36039" fg:w="15"/><text x="36.4985%" y="591.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (32 samples, 0.03%)</title><rect x="36.2415%" y="661" width="0.0322%" height="15" fill="rgb(212,70,42)" fg:x="36032" fg:w="32"/><text x="36.4915%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.03%)</title><rect x="36.2415%" y="645" width="0.0322%" height="15" fill="rgb(227,213,9)" fg:x="36032" fg:w="32"/><text x="36.4915%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.01%)</title><rect x="36.2827%" y="645" width="0.0111%" height="15" fill="rgb(245,99,25)" fg:x="36073" fg:w="11"/><text x="36.5327%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (19 samples, 0.02%)</title><rect x="36.2827%" y="661" width="0.0191%" height="15" fill="rgb(250,82,29)" fg:x="36073" fg:w="19"/><text x="36.5327%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.01%)</title><rect x="36.3058%" y="645" width="0.0141%" height="15" fill="rgb(241,226,54)" fg:x="36096" fg:w="14"/><text x="36.5558%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (21 samples, 0.02%)</title><rect x="36.3058%" y="661" width="0.0211%" height="15" fill="rgb(221,99,41)" fg:x="36096" fg:w="21"/><text x="36.5558%" y="671.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (21 samples, 0.02%)</title><rect x="36.3571%" y="613" width="0.0211%" height="15" fill="rgb(213,90,21)" fg:x="36147" fg:w="21"/><text x="36.6071%" y="623.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.03%)</title><rect x="36.3853%" y="549" width="0.0322%" height="15" fill="rgb(205,208,24)" fg:x="36175" fg:w="32"/><text x="36.6353%" y="559.50"></text></g><g><title>_int_malloc (25 samples, 0.03%)</title><rect x="36.3923%" y="533" width="0.0251%" height="15" fill="rgb(246,31,12)" fg:x="36182" fg:w="25"/><text x="36.6423%" y="543.50"></text></g><g><title>malloc_consolidate (14 samples, 0.01%)</title><rect x="36.4034%" y="517" width="0.0141%" height="15" fill="rgb(213,154,6)" fg:x="36193" fg:w="14"/><text x="36.6534%" y="527.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.03%)</title><rect x="36.3853%" y="565" width="0.0342%" height="15" fill="rgb(222,163,29)" fg:x="36175" fg:w="34"/><text x="36.6353%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.05%)</title><rect x="36.3793%" y="597" width="0.0493%" height="15" fill="rgb(227,201,8)" fg:x="36169" fg:w="49"/><text x="36.6293%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.05%)</title><rect x="36.3803%" y="581" width="0.0483%" height="15" fill="rgb(233,9,32)" fg:x="36170" fg:w="48"/><text x="36.6303%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (55 samples, 0.06%)</title><rect x="36.3783%" y="613" width="0.0553%" height="15" fill="rgb(217,54,24)" fg:x="36168" fg:w="55"/><text x="36.6283%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (89 samples, 0.09%)</title><rect x="36.3461%" y="629" width="0.0895%" height="15" fill="rgb(235,192,0)" fg:x="36136" fg:w="89"/><text x="36.5961%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (103 samples, 0.10%)</title><rect x="36.3340%" y="645" width="0.1036%" height="15" fill="rgb(235,45,9)" fg:x="36124" fg:w="103"/><text x="36.5840%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (111 samples, 0.11%)</title><rect x="36.3270%" y="661" width="0.1116%" height="15" fill="rgb(246,42,40)" fg:x="36117" fg:w="111"/><text x="36.5770%" y="671.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (5,918 samples, 5.95%)</title><rect x="30.4892%" y="773" width="5.9524%" height="15" fill="rgb(248,111,24)" fg:x="30313" fg:w="5918"/><text x="30.7392%" y="783.50">bytecode..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (231 samples, 0.23%)</title><rect x="36.2093%" y="757" width="0.2323%" height="15" fill="rgb(249,65,22)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (231 samples, 0.23%)</title><rect x="36.2093%" y="741" width="0.2323%" height="15" fill="rgb(238,111,51)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (231 samples, 0.23%)</title><rect x="36.2093%" y="725" width="0.2323%" height="15" fill="rgb(250,118,22)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (231 samples, 0.23%)</title><rect x="36.2093%" y="709" width="0.2323%" height="15" fill="rgb(234,84,26)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (231 samples, 0.23%)</title><rect x="36.2093%" y="693" width="0.2323%" height="15" fill="rgb(243,172,12)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (231 samples, 0.23%)</title><rect x="36.2093%" y="677" width="0.2323%" height="15" fill="rgb(236,150,49)" fg:x="36000" fg:w="231"/><text x="36.4593%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (16 samples, 0.02%)</title><rect x="36.4467%" y="661" width="0.0161%" height="15" fill="rgb(225,197,26)" fg:x="36236" fg:w="16"/><text x="36.6967%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (13 samples, 0.01%)</title><rect x="36.4497%" y="645" width="0.0131%" height="15" fill="rgb(214,17,42)" fg:x="36239" fg:w="13"/><text x="36.6997%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (11 samples, 0.01%)</title><rect x="36.4517%" y="629" width="0.0111%" height="15" fill="rgb(224,165,40)" fg:x="36241" fg:w="11"/><text x="36.7017%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (11 samples, 0.01%)</title><rect x="36.4517%" y="613" width="0.0111%" height="15" fill="rgb(246,100,4)" fg:x="36241" fg:w="11"/><text x="36.7017%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (12 samples, 0.01%)</title><rect x="36.4698%" y="629" width="0.0121%" height="15" fill="rgb(222,103,0)" fg:x="36259" fg:w="12"/><text x="36.7198%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="36.4718%" y="613" width="0.0101%" height="15" fill="rgb(227,189,26)" fg:x="36261" fg:w="10"/><text x="36.7218%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (20 samples, 0.02%)</title><rect x="36.4638%" y="661" width="0.0201%" height="15" fill="rgb(214,202,17)" fg:x="36253" fg:w="20"/><text x="36.7138%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (15 samples, 0.02%)</title><rect x="36.4688%" y="645" width="0.0151%" height="15" fill="rgb(229,111,3)" fg:x="36258" fg:w="15"/><text x="36.7188%" y="655.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (6,300 samples, 6.34%)</title><rect x="30.1633%" y="805" width="6.3366%" height="15" fill="rgb(229,172,15)" fg:x="29989" fg:w="6300"/><text x="30.4133%" y="815.50">bytecode..</text></g><g><title>bytecode_verifier::reference_safety::verify (5,976 samples, 6.01%)</title><rect x="30.4892%" y="789" width="6.0107%" height="15" fill="rgb(230,224,35)" fg:x="30313" fg:w="5976"/><text x="30.7392%" y="799.50">bytecode..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (58 samples, 0.06%)</title><rect x="36.4416%" y="773" width="0.0583%" height="15" fill="rgb(251,141,6)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (58 samples, 0.06%)</title><rect x="36.4416%" y="757" width="0.0583%" height="15" fill="rgb(225,208,6)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (58 samples, 0.06%)</title><rect x="36.4416%" y="741" width="0.0583%" height="15" fill="rgb(246,181,16)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (58 samples, 0.06%)</title><rect x="36.4416%" y="725" width="0.0583%" height="15" fill="rgb(227,129,36)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (58 samples, 0.06%)</title><rect x="36.4416%" y="709" width="0.0583%" height="15" fill="rgb(248,117,24)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (58 samples, 0.06%)</title><rect x="36.4416%" y="693" width="0.0583%" height="15" fill="rgb(214,185,35)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (58 samples, 0.06%)</title><rect x="36.4416%" y="677" width="0.0583%" height="15" fill="rgb(236,150,34)" fg:x="36231" fg:w="58"/><text x="36.6916%" y="687.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (16 samples, 0.02%)</title><rect x="36.4839%" y="661" width="0.0161%" height="15" fill="rgb(243,228,27)" fg:x="36273" fg:w="16"/><text x="36.7339%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="36.5100%" y="709" width="0.0111%" height="15" fill="rgb(245,77,44)" fg:x="36299" fg:w="11"/><text x="36.7600%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="36.5100%" y="693" width="0.0111%" height="15" fill="rgb(235,214,42)" fg:x="36299" fg:w="11"/><text x="36.7600%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="36.5100%" y="677" width="0.0111%" height="15" fill="rgb(221,74,3)" fg:x="36299" fg:w="11"/><text x="36.7600%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="36.5100%" y="661" width="0.0111%" height="15" fill="rgb(206,121,29)" fg:x="36299" fg:w="11"/><text x="36.7600%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="36.5100%" y="645" width="0.0111%" height="15" fill="rgb(249,131,53)" fg:x="36299" fg:w="11"/><text x="36.7600%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="36.5352%" y="581" width="0.0131%" height="15" fill="rgb(236,170,29)" fg:x="36324" fg:w="13"/><text x="36.7852%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (13 samples, 0.01%)</title><rect x="36.5352%" y="565" width="0.0131%" height="15" fill="rgb(247,96,15)" fg:x="36324" fg:w="13"/><text x="36.7852%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.04%)</title><rect x="36.5221%" y="613" width="0.0392%" height="15" fill="rgb(211,210,7)" fg:x="36311" fg:w="39"/><text x="36.7721%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 0.04%)</title><rect x="36.5251%" y="597" width="0.0362%" height="15" fill="rgb(240,88,50)" fg:x="36314" fg:w="36"/><text x="36.7751%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.01%)</title><rect x="36.5493%" y="581" width="0.0121%" height="15" fill="rgb(209,229,26)" fg:x="36338" fg:w="12"/><text x="36.7993%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41 samples, 0.04%)</title><rect x="36.5211%" y="645" width="0.0412%" height="15" fill="rgb(210,68,23)" fg:x="36310" fg:w="41"/><text x="36.7711%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (40 samples, 0.04%)</title><rect x="36.5221%" y="629" width="0.0402%" height="15" fill="rgb(229,180,13)" fg:x="36311" fg:w="40"/><text x="36.7721%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.05%)</title><rect x="36.5211%" y="709" width="0.0503%" height="15" fill="rgb(236,53,44)" fg:x="36310" fg:w="50"/><text x="36.7711%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (50 samples, 0.05%)</title><rect x="36.5211%" y="693" width="0.0503%" height="15" fill="rgb(244,214,29)" fg:x="36310" fg:w="50"/><text x="36.7711%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.05%)</title><rect x="36.5211%" y="677" width="0.0503%" height="15" fill="rgb(220,75,29)" fg:x="36310" fg:w="50"/><text x="36.7711%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (50 samples, 0.05%)</title><rect x="36.5211%" y="661" width="0.0503%" height="15" fill="rgb(214,183,37)" fg:x="36310" fg:w="50"/><text x="36.7711%" y="671.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (64 samples, 0.06%)</title><rect x="36.5100%" y="741" width="0.0644%" height="15" fill="rgb(239,117,29)" fg:x="36299" fg:w="64"/><text x="36.7600%" y="751.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::join_ (64 samples, 0.06%)</title><rect x="36.5100%" y="725" width="0.0644%" height="15" fill="rgb(237,171,35)" fg:x="36299" fg:w="64"/><text x="36.7600%" y="735.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.03%)</title><rect x="36.5774%" y="565" width="0.0272%" height="15" fill="rgb(229,178,53)" fg:x="36366" fg:w="27"/><text x="36.8274%" y="575.50"></text></g><g><title>_int_malloc (18 samples, 0.02%)</title><rect x="36.5865%" y="549" width="0.0181%" height="15" fill="rgb(210,102,19)" fg:x="36375" fg:w="18"/><text x="36.8365%" y="559.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.03%)</title><rect x="36.5774%" y="581" width="0.0292%" height="15" fill="rgb(235,127,22)" fg:x="36366" fg:w="29"/><text x="36.8274%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="36.5744%" y="613" width="0.0432%" height="15" fill="rgb(244,31,31)" fg:x="36363" fg:w="43"/><text x="36.8244%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="36.5744%" y="597" width="0.0432%" height="15" fill="rgb(231,43,21)" fg:x="36363" fg:w="43"/><text x="36.8244%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (11 samples, 0.01%)</title><rect x="36.6317%" y="597" width="0.0111%" height="15" fill="rgb(217,131,35)" fg:x="36420" fg:w="11"/><text x="36.8817%" y="607.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (95 samples, 0.10%)</title><rect x="36.5744%" y="741" width="0.0956%" height="15" fill="rgb(221,149,4)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (95 samples, 0.10%)</title><rect x="36.5744%" y="725" width="0.0956%" height="15" fill="rgb(232,170,28)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (95 samples, 0.10%)</title><rect x="36.5744%" y="709" width="0.0956%" height="15" fill="rgb(238,56,10)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (95 samples, 0.10%)</title><rect x="36.5744%" y="693" width="0.0956%" height="15" fill="rgb(235,196,14)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (95 samples, 0.10%)</title><rect x="36.5744%" y="677" width="0.0956%" height="15" fill="rgb(216,45,48)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.10%)</title><rect x="36.5744%" y="661" width="0.0956%" height="15" fill="rgb(238,213,17)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.10%)</title><rect x="36.5744%" y="645" width="0.0956%" height="15" fill="rgb(212,13,2)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.10%)</title><rect x="36.5744%" y="629" width="0.0956%" height="15" fill="rgb(240,114,20)" fg:x="36363" fg:w="95"/><text x="36.8244%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (52 samples, 0.05%)</title><rect x="36.6177%" y="613" width="0.0523%" height="15" fill="rgb(228,41,40)" fg:x="36406" fg:w="52"/><text x="36.8677%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::repeat (27 samples, 0.03%)</title><rect x="36.6428%" y="597" width="0.0272%" height="15" fill="rgb(244,132,35)" fg:x="36431" fg:w="27"/><text x="36.8928%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="36.6820%" y="645" width="0.0241%" height="15" fill="rgb(253,189,4)" fg:x="36470" fg:w="24"/><text x="36.9320%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="36.6941%" y="629" width="0.0121%" height="15" fill="rgb(224,37,19)" fg:x="36482" fg:w="12"/><text x="36.9441%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.02%)</title><rect x="36.7072%" y="645" width="0.0161%" height="15" fill="rgb(235,223,18)" fg:x="36495" fg:w="16"/><text x="36.9572%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="36.7122%" y="629" width="0.0111%" height="15" fill="rgb(235,163,25)" fg:x="36500" fg:w="11"/><text x="36.9622%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="36.7132%" y="613" width="0.0101%" height="15" fill="rgb(217,145,28)" fg:x="36501" fg:w="10"/><text x="36.9632%" y="623.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (64 samples, 0.06%)</title><rect x="36.6700%" y="741" width="0.0644%" height="15" fill="rgb(223,223,32)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (64 samples, 0.06%)</title><rect x="36.6700%" y="725" width="0.0644%" height="15" fill="rgb(227,189,39)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (64 samples, 0.06%)</title><rect x="36.6700%" y="709" width="0.0644%" height="15" fill="rgb(248,10,22)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (64 samples, 0.06%)</title><rect x="36.6700%" y="693" width="0.0644%" height="15" fill="rgb(248,46,39)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (64 samples, 0.06%)</title><rect x="36.6700%" y="677" width="0.0644%" height="15" fill="rgb(248,113,48)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (64 samples, 0.06%)</title><rect x="36.6700%" y="661" width="0.0644%" height="15" fill="rgb(245,16,25)" fg:x="36458" fg:w="64"/><text x="36.9200%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="36.7343%" y="661" width="0.0101%" height="15" fill="rgb(249,152,16)" fg:x="36522" fg:w="10"/><text x="36.9843%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="36.7343%" y="741" width="0.0221%" height="15" fill="rgb(250,16,1)" fg:x="36522" fg:w="22"/><text x="36.9843%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="36.7343%" y="725" width="0.0221%" height="15" fill="rgb(249,138,3)" fg:x="36522" fg:w="22"/><text x="36.9843%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="36.7343%" y="709" width="0.0221%" height="15" fill="rgb(227,71,41)" fg:x="36522" fg:w="22"/><text x="36.9843%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (22 samples, 0.02%)</title><rect x="36.7343%" y="693" width="0.0221%" height="15" fill="rgb(209,184,23)" fg:x="36522" fg:w="22"/><text x="36.9843%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="36.7343%" y="677" width="0.0221%" height="15" fill="rgb(223,215,31)" fg:x="36522" fg:w="22"/><text x="36.9843%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="36.7444%" y="661" width="0.0121%" height="15" fill="rgb(210,146,28)" fg:x="36532" fg:w="12"/><text x="36.9944%" y="671.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="36.7635%" y="677" width="0.0181%" height="15" fill="rgb(209,183,41)" fg:x="36551" fg:w="18"/><text x="37.0135%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="36.7695%" y="661" width="0.0121%" height="15" fill="rgb(209,224,45)" fg:x="36557" fg:w="12"/><text x="37.0195%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="36.7565%" y="725" width="0.0282%" height="15" fill="rgb(224,209,51)" fg:x="36544" fg:w="28"/><text x="37.0065%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (28 samples, 0.03%)</title><rect x="36.7565%" y="709" width="0.0282%" height="15" fill="rgb(223,17,39)" fg:x="36544" fg:w="28"/><text x="37.0065%" y="719.50"></text></g><g><title>core::mem::replace (28 samples, 0.03%)</title><rect x="36.7565%" y="693" width="0.0282%" height="15" fill="rgb(234,204,37)" fg:x="36544" fg:w="28"/><text x="37.0065%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="36.7846%" y="693" width="0.0191%" height="15" fill="rgb(236,120,5)" fg:x="36572" fg:w="19"/><text x="37.0346%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.01%)</title><rect x="36.7917%" y="677" width="0.0121%" height="15" fill="rgb(248,97,27)" fg:x="36579" fg:w="12"/><text x="37.0417%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (11 samples, 0.01%)</title><rect x="36.7927%" y="661" width="0.0111%" height="15" fill="rgb(240,66,17)" fg:x="36580" fg:w="11"/><text x="37.0427%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.03%)</title><rect x="36.7846%" y="709" width="0.0302%" height="15" fill="rgb(210,79,3)" fg:x="36572" fg:w="30"/><text x="37.0346%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts (11 samples, 0.01%)</title><rect x="36.8037%" y="693" width="0.0111%" height="15" fill="rgb(214,176,27)" fg:x="36591" fg:w="11"/><text x="37.0537%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (37 samples, 0.04%)</title><rect x="36.7846%" y="725" width="0.0372%" height="15" fill="rgb(235,185,3)" fg:x="36572" fg:w="37"/><text x="37.0346%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="36.8671%" y="693" width="0.0151%" height="15" fill="rgb(227,24,12)" fg:x="36654" fg:w="15"/><text x="37.1171%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.02%)</title><rect x="36.8671%" y="677" width="0.0151%" height="15" fill="rgb(252,169,48)" fg:x="36654" fg:w="15"/><text x="37.1171%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="36.8932%" y="645" width="0.0131%" height="15" fill="rgb(212,65,1)" fg:x="36680" fg:w="13"/><text x="37.1432%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="36.8872%" y="661" width="0.0221%" height="15" fill="rgb(242,39,24)" fg:x="36674" fg:w="22"/><text x="37.1372%" y="671.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::local_state (31 samples, 0.03%)</title><rect x="36.8822%" y="693" width="0.0312%" height="15" fill="rgb(249,32,23)" fg:x="36669" fg:w="31"/><text x="37.1322%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (27 samples, 0.03%)</title><rect x="36.8862%" y="677" width="0.0272%" height="15" fill="rgb(251,195,23)" fg:x="36673" fg:w="27"/><text x="37.1362%" y="687.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::set_unavailable (15 samples, 0.02%)</title><rect x="36.9194%" y="693" width="0.0151%" height="15" fill="rgb(236,174,8)" fg:x="36706" fg:w="15"/><text x="37.1694%" y="703.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::LocalsSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (123 samples, 0.12%)</title><rect x="36.8218%" y="725" width="0.1237%" height="15" fill="rgb(220,197,8)" fg:x="36609" fg:w="123"/><text x="37.0718%" y="735.50"></text></g><g><title>bytecode_verifier::locals_safety::execute_inner (123 samples, 0.12%)</title><rect x="36.8218%" y="709" width="0.1237%" height="15" fill="rgb(240,108,37)" fg:x="36609" fg:w="123"/><text x="37.0718%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.03%)</title><rect x="36.9536%" y="693" width="0.0292%" height="15" fill="rgb(232,176,24)" fg:x="36740" fg:w="29"/><text x="37.2036%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (18 samples, 0.02%)</title><rect x="36.9647%" y="677" width="0.0181%" height="15" fill="rgb(243,35,29)" fg:x="36751" fg:w="18"/><text x="37.2147%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts (15 samples, 0.02%)</title><rect x="36.9677%" y="661" width="0.0151%" height="15" fill="rgb(210,37,18)" fg:x="36754" fg:w="15"/><text x="37.2177%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="37.0411%" y="597" width="0.0302%" height="15" fill="rgb(224,184,40)" fg:x="36827" fg:w="30"/><text x="37.2911%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="37.0421%" y="581" width="0.0292%" height="15" fill="rgb(236,39,29)" fg:x="36828" fg:w="29"/><text x="37.2921%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::new (13 samples, 0.01%)</title><rect x="37.0874%" y="581" width="0.0131%" height="15" fill="rgb(232,48,39)" fg:x="36873" fg:w="13"/><text x="37.3374%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (17 samples, 0.02%)</title><rect x="37.1085%" y="565" width="0.0171%" height="15" fill="rgb(236,34,42)" fg:x="36894" fg:w="17"/><text x="37.3585%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (35 samples, 0.04%)</title><rect x="37.1004%" y="581" width="0.0352%" height="15" fill="rgb(243,106,37)" fg:x="36886" fg:w="35"/><text x="37.3504%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::array (79 samples, 0.08%)</title><rect x="37.0733%" y="597" width="0.0795%" height="15" fill="rgb(218,96,6)" fg:x="36859" fg:w="79"/><text x="37.3233%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::repeat (17 samples, 0.02%)</title><rect x="37.1356%" y="581" width="0.0171%" height="15" fill="rgb(235,130,12)" fg:x="36921" fg:w="17"/><text x="37.3856%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (157 samples, 0.16%)</title><rect x="37.0059%" y="645" width="0.1579%" height="15" fill="rgb(231,95,0)" fg:x="36792" fg:w="157"/><text x="37.2559%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (154 samples, 0.15%)</title><rect x="37.0089%" y="629" width="0.1549%" height="15" fill="rgb(228,12,23)" fg:x="36795" fg:w="154"/><text x="37.2589%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (153 samples, 0.15%)</title><rect x="37.0099%" y="613" width="0.1539%" height="15" fill="rgb(216,12,1)" fg:x="36796" fg:w="153"/><text x="37.2599%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (188 samples, 0.19%)</title><rect x="36.9828%" y="693" width="0.1891%" height="15" fill="rgb(219,59,3)" fg:x="36769" fg:w="188"/><text x="37.2328%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (186 samples, 0.19%)</title><rect x="36.9848%" y="677" width="0.1871%" height="15" fill="rgb(215,208,46)" fg:x="36771" fg:w="186"/><text x="37.2348%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (185 samples, 0.19%)</title><rect x="36.9858%" y="661" width="0.1861%" height="15" fill="rgb(254,224,29)" fg:x="36772" fg:w="185"/><text x="37.2358%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (226 samples, 0.23%)</title><rect x="36.9455%" y="709" width="0.2273%" height="15" fill="rgb(232,14,29)" fg:x="36732" fg:w="226"/><text x="37.1955%" y="719.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (231 samples, 0.23%)</title><rect x="36.9455%" y="725" width="0.2323%" height="15" fill="rgb(208,45,52)" fg:x="36732" fg:w="231"/><text x="37.1955%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (15 samples, 0.02%)</title><rect x="37.1869%" y="677" width="0.0151%" height="15" fill="rgb(234,191,28)" fg:x="36972" fg:w="15"/><text x="37.4369%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.04%)</title><rect x="37.2292%" y="629" width="0.0432%" height="15" fill="rgb(244,67,43)" fg:x="37014" fg:w="43"/><text x="37.4792%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="37.2513%" y="613" width="0.0211%" height="15" fill="rgb(236,189,24)" fg:x="37036" fg:w="21"/><text x="37.5013%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (22 samples, 0.02%)</title><rect x="37.2765%" y="629" width="0.0221%" height="15" fill="rgb(239,214,33)" fg:x="37061" fg:w="22"/><text x="37.5265%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="37.2875%" y="613" width="0.0111%" height="15" fill="rgb(226,176,41)" fg:x="37072" fg:w="11"/><text x="37.5375%" y="623.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (139 samples, 0.14%)</title><rect x="37.1779%" y="725" width="0.1398%" height="15" fill="rgb(248,47,8)" fg:x="36963" fg:w="139"/><text x="37.4279%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (139 samples, 0.14%)</title><rect x="37.1779%" y="709" width="0.1398%" height="15" fill="rgb(218,81,44)" fg:x="36963" fg:w="139"/><text x="37.4279%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (139 samples, 0.14%)</title><rect x="37.1779%" y="693" width="0.1398%" height="15" fill="rgb(213,98,6)" fg:x="36963" fg:w="139"/><text x="37.4279%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (113 samples, 0.11%)</title><rect x="37.2040%" y="677" width="0.1137%" height="15" fill="rgb(222,85,22)" fg:x="36989" fg:w="113"/><text x="37.4540%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (104 samples, 0.10%)</title><rect x="37.2131%" y="661" width="0.1046%" height="15" fill="rgb(239,46,39)" fg:x="36998" fg:w="104"/><text x="37.4631%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (100 samples, 0.10%)</title><rect x="37.2171%" y="645" width="0.1006%" height="15" fill="rgb(237,12,29)" fg:x="37002" fg:w="100"/><text x="37.4671%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (13 samples, 0.01%)</title><rect x="37.3046%" y="629" width="0.0131%" height="15" fill="rgb(214,77,8)" fg:x="37089" fg:w="13"/><text x="37.5546%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="37.3056%" y="613" width="0.0121%" height="15" fill="rgb(217,168,37)" fg:x="37090" fg:w="12"/><text x="37.5556%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="37.3539%" y="613" width="0.0352%" height="15" fill="rgb(221,217,23)" fg:x="37138" fg:w="35"/><text x="37.6039%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="37.3760%" y="597" width="0.0131%" height="15" fill="rgb(243,229,36)" fg:x="37160" fg:w="13"/><text x="37.6260%" y="607.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (89 samples, 0.09%)</title><rect x="37.3177%" y="709" width="0.0895%" height="15" fill="rgb(251,163,40)" fg:x="37102" fg:w="89"/><text x="37.5677%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (89 samples, 0.09%)</title><rect x="37.3177%" y="693" width="0.0895%" height="15" fill="rgb(237,222,12)" fg:x="37102" fg:w="89"/><text x="37.5677%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (89 samples, 0.09%)</title><rect x="37.3177%" y="677" width="0.0895%" height="15" fill="rgb(248,132,6)" fg:x="37102" fg:w="89"/><text x="37.5677%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (81 samples, 0.08%)</title><rect x="37.3257%" y="661" width="0.0815%" height="15" fill="rgb(227,167,50)" fg:x="37110" fg:w="81"/><text x="37.5757%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (74 samples, 0.07%)</title><rect x="37.3328%" y="645" width="0.0744%" height="15" fill="rgb(242,84,37)" fg:x="37117" fg:w="74"/><text x="37.5828%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (72 samples, 0.07%)</title><rect x="37.3348%" y="629" width="0.0724%" height="15" fill="rgb(212,4,50)" fg:x="37119" fg:w="72"/><text x="37.5848%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="37.4495%" y="613" width="0.0241%" height="15" fill="rgb(230,228,32)" fg:x="37233" fg:w="24"/><text x="37.6995%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (70 samples, 0.07%)</title><rect x="37.4243%" y="661" width="0.0704%" height="15" fill="rgb(248,217,23)" fg:x="37208" fg:w="70"/><text x="37.6743%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (58 samples, 0.06%)</title><rect x="37.4364%" y="645" width="0.0583%" height="15" fill="rgb(238,197,32)" fg:x="37220" fg:w="58"/><text x="37.6864%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (56 samples, 0.06%)</title><rect x="37.4384%" y="629" width="0.0563%" height="15" fill="rgb(236,106,1)" fg:x="37222" fg:w="56"/><text x="37.6884%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (13 samples, 0.01%)</title><rect x="37.4816%" y="613" width="0.0131%" height="15" fill="rgb(219,228,13)" fg:x="37265" fg:w="13"/><text x="37.7316%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="37.4826%" y="597" width="0.0121%" height="15" fill="rgb(238,30,35)" fg:x="37266" fg:w="12"/><text x="37.7326%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (89 samples, 0.09%)</title><rect x="37.4082%" y="677" width="0.0895%" height="15" fill="rgb(236,70,23)" fg:x="37192" fg:w="89"/><text x="37.6582%" y="687.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (93 samples, 0.09%)</title><rect x="37.4072%" y="709" width="0.0935%" height="15" fill="rgb(249,104,48)" fg:x="37191" fg:w="93"/><text x="37.6572%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (93 samples, 0.09%)</title><rect x="37.4072%" y="693" width="0.0935%" height="15" fill="rgb(254,117,50)" fg:x="37191" fg:w="93"/><text x="37.6572%" y="703.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.01%)</title><rect x="37.5098%" y="629" width="0.0141%" height="15" fill="rgb(223,152,4)" fg:x="37293" fg:w="14"/><text x="37.7598%" y="639.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="37.5068%" y="645" width="0.0181%" height="15" fill="rgb(245,6,2)" fg:x="37290" fg:w="18"/><text x="37.7568%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.03%)</title><rect x="37.5028%" y="677" width="0.0312%" height="15" fill="rgb(249,150,24)" fg:x="37286" fg:w="31"/><text x="37.7528%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.03%)</title><rect x="37.5028%" y="661" width="0.0312%" height="15" fill="rgb(228,185,42)" fg:x="37286" fg:w="31"/><text x="37.7528%" y="671.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (219 samples, 0.22%)</title><rect x="37.3177%" y="725" width="0.2203%" height="15" fill="rgb(226,39,33)" fg:x="37102" fg:w="219"/><text x="37.5677%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.04%)</title><rect x="37.5008%" y="709" width="0.0372%" height="15" fill="rgb(221,166,19)" fg:x="37284" fg:w="37"/><text x="37.7508%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.04%)</title><rect x="37.5008%" y="693" width="0.0372%" height="15" fill="rgb(209,109,2)" fg:x="37284" fg:w="37"/><text x="37.7508%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="37.5510%" y="693" width="0.0161%" height="15" fill="rgb(252,216,26)" fg:x="37334" fg:w="16"/><text x="37.8010%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="37.5541%" y="677" width="0.0131%" height="15" fill="rgb(227,173,36)" fg:x="37337" fg:w="13"/><text x="37.8041%" y="687.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (811 samples, 0.82%)</title><rect x="36.7565%" y="741" width="0.8157%" height="15" fill="rgb(209,90,7)" fg:x="36544" fg:w="811"/><text x="37.0065%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (34 samples, 0.03%)</title><rect x="37.5380%" y="725" width="0.0342%" height="15" fill="rgb(250,194,11)" fg:x="37321" fg:w="34"/><text x="37.7880%" y="735.50"></text></g><g><title>alloc::alloc::box_free (34 samples, 0.03%)</title><rect x="37.5380%" y="709" width="0.0342%" height="15" fill="rgb(220,72,50)" fg:x="37321" fg:w="34"/><text x="37.7880%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="37.5722%" y="661" width="0.0101%" height="15" fill="rgb(222,106,48)" fg:x="37355" fg:w="10"/><text x="37.8222%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="37.5722%" y="645" width="0.0101%" height="15" fill="rgb(216,220,45)" fg:x="37355" fg:w="10"/><text x="37.8222%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (10 samples, 0.01%)</title><rect x="37.5722%" y="629" width="0.0101%" height="15" fill="rgb(234,112,18)" fg:x="37355" fg:w="10"/><text x="37.8222%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="37.5722%" y="613" width="0.0101%" height="15" fill="rgb(206,179,9)" fg:x="37355" fg:w="10"/><text x="37.8222%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (57 samples, 0.06%)</title><rect x="37.5722%" y="741" width="0.0573%" height="15" fill="rgb(215,115,40)" fg:x="37355" fg:w="57"/><text x="37.8222%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (57 samples, 0.06%)</title><rect x="37.5722%" y="725" width="0.0573%" height="15" fill="rgb(222,69,34)" fg:x="37355" fg:w="57"/><text x="37.8222%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (57 samples, 0.06%)</title><rect x="37.5722%" y="709" width="0.0573%" height="15" fill="rgb(209,161,10)" fg:x="37355" fg:w="57"/><text x="37.8222%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (57 samples, 0.06%)</title><rect x="37.5722%" y="693" width="0.0573%" height="15" fill="rgb(217,6,38)" fg:x="37355" fg:w="57"/><text x="37.8222%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.06%)</title><rect x="37.5722%" y="677" width="0.0573%" height="15" fill="rgb(229,229,48)" fg:x="37355" fg:w="57"/><text x="37.8222%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (47 samples, 0.05%)</title><rect x="37.5822%" y="661" width="0.0473%" height="15" fill="rgb(225,21,28)" fg:x="37365" fg:w="47"/><text x="37.8322%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (47 samples, 0.05%)</title><rect x="37.5822%" y="645" width="0.0473%" height="15" fill="rgb(206,33,13)" fg:x="37365" fg:w="47"/><text x="37.8322%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (47 samples, 0.05%)</title><rect x="37.5822%" y="629" width="0.0473%" height="15" fill="rgb(242,178,17)" fg:x="37365" fg:w="47"/><text x="37.8322%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (34 samples, 0.03%)</title><rect x="37.5953%" y="613" width="0.0342%" height="15" fill="rgb(220,162,5)" fg:x="37378" fg:w="34"/><text x="37.8453%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.01%)</title><rect x="37.6174%" y="597" width="0.0121%" height="15" fill="rgb(210,33,43)" fg:x="37400" fg:w="12"/><text x="37.8674%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.01%)</title><rect x="37.6194%" y="581" width="0.0101%" height="15" fill="rgb(216,116,54)" fg:x="37402" fg:w="10"/><text x="37.8694%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.02%)</title><rect x="37.6577%" y="629" width="0.0201%" height="15" fill="rgb(249,92,24)" fg:x="37440" fg:w="20"/><text x="37.9077%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="37.6416%" y="693" width="0.0392%" height="15" fill="rgb(231,189,14)" fg:x="37424" fg:w="39"/><text x="37.8916%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="37.6416%" y="677" width="0.0392%" height="15" fill="rgb(230,8,41)" fg:x="37424" fg:w="39"/><text x="37.8916%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.04%)</title><rect x="37.6416%" y="661" width="0.0392%" height="15" fill="rgb(249,7,27)" fg:x="37424" fg:w="39"/><text x="37.8916%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.03%)</title><rect x="37.6486%" y="645" width="0.0322%" height="15" fill="rgb(232,86,5)" fg:x="37431" fg:w="32"/><text x="37.8986%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (52 samples, 0.05%)</title><rect x="37.6406%" y="709" width="0.0523%" height="15" fill="rgb(224,175,18)" fg:x="37423" fg:w="52"/><text x="37.8906%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="37.7009%" y="645" width="0.0101%" height="15" fill="rgb(220,129,12)" fg:x="37483" fg:w="10"/><text x="37.9509%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="37.6999%" y="661" width="0.0282%" height="15" fill="rgb(210,19,36)" fg:x="37482" fg:w="28"/><text x="37.9499%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (15 samples, 0.02%)</title><rect x="37.7130%" y="645" width="0.0151%" height="15" fill="rgb(219,96,14)" fg:x="37495" fg:w="15"/><text x="37.9630%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (15 samples, 0.02%)</title><rect x="37.7130%" y="629" width="0.0151%" height="15" fill="rgb(249,106,1)" fg:x="37495" fg:w="15"/><text x="37.9630%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="37.6999%" y="677" width="0.0292%" height="15" fill="rgb(249,155,20)" fg:x="37482" fg:w="29"/><text x="37.9499%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (82 samples, 0.08%)</title><rect x="37.6929%" y="709" width="0.0825%" height="15" fill="rgb(244,168,9)" fg:x="37475" fg:w="82"/><text x="37.9429%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (79 samples, 0.08%)</title><rect x="37.6959%" y="693" width="0.0795%" height="15" fill="rgb(216,23,50)" fg:x="37478" fg:w="79"/><text x="37.9459%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (45 samples, 0.05%)</title><rect x="37.7301%" y="677" width="0.0453%" height="15" fill="rgb(224,219,20)" fg:x="37512" fg:w="45"/><text x="37.9801%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (42 samples, 0.04%)</title><rect x="37.7331%" y="661" width="0.0422%" height="15" fill="rgb(222,156,15)" fg:x="37515" fg:w="42"/><text x="37.9831%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (39 samples, 0.04%)</title><rect x="37.7361%" y="645" width="0.0392%" height="15" fill="rgb(231,97,17)" fg:x="37518" fg:w="39"/><text x="37.9861%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.01%)</title><rect x="37.7613%" y="629" width="0.0141%" height="15" fill="rgb(218,70,48)" fg:x="37543" fg:w="14"/><text x="38.0113%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="37.7854%" y="693" width="0.0101%" height="15" fill="rgb(212,196,52)" fg:x="37567" fg:w="10"/><text x="38.0354%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="37.8005%" y="693" width="0.0141%" height="15" fill="rgb(243,203,18)" fg:x="37582" fg:w="14"/><text x="38.0505%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.01%)</title><rect x="37.8045%" y="677" width="0.0101%" height="15" fill="rgb(252,125,41)" fg:x="37586" fg:w="10"/><text x="38.0545%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (18 samples, 0.02%)</title><rect x="37.8146%" y="693" width="0.0181%" height="15" fill="rgb(223,180,33)" fg:x="37596" fg:w="18"/><text x="38.0646%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (16 samples, 0.02%)</title><rect x="37.8327%" y="677" width="0.0161%" height="15" fill="rgb(254,159,46)" fg:x="37614" fg:w="16"/><text x="38.0827%" y="687.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (1,332 samples, 1.34%)</title><rect x="36.5100%" y="757" width="1.3397%" height="15" fill="rgb(254,38,10)" fg:x="36299" fg:w="1332"/><text x="36.7600%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (219 samples, 0.22%)</title><rect x="37.6295%" y="741" width="0.2203%" height="15" fill="rgb(208,217,32)" fg:x="37412" fg:w="219"/><text x="37.8795%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (219 samples, 0.22%)</title><rect x="37.6295%" y="725" width="0.2203%" height="15" fill="rgb(221,120,13)" fg:x="37412" fg:w="219"/><text x="37.8795%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (74 samples, 0.07%)</title><rect x="37.7753%" y="709" width="0.0744%" height="15" fill="rgb(246,54,52)" fg:x="37557" fg:w="74"/><text x="38.0253%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (17 samples, 0.02%)</title><rect x="37.8327%" y="693" width="0.0171%" height="15" fill="rgb(242,34,25)" fg:x="37614" fg:w="17"/><text x="38.0827%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="37.8679%" y="485" width="0.0111%" height="15" fill="rgb(247,209,9)" fg:x="37649" fg:w="11"/><text x="38.1179%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (11 samples, 0.01%)</title><rect x="37.8789%" y="485" width="0.0111%" height="15" fill="rgb(228,71,26)" fg:x="37660" fg:w="11"/><text x="38.1289%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.04%)</title><rect x="37.8508%" y="517" width="0.0443%" height="15" fill="rgb(222,145,49)" fg:x="37632" fg:w="44"/><text x="38.1008%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.04%)</title><rect x="37.8568%" y="501" width="0.0382%" height="15" fill="rgb(218,121,17)" fg:x="37638" fg:w="38"/><text x="38.1068%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="37.8498%" y="581" width="0.0463%" height="15" fill="rgb(244,50,7)" fg:x="37631" fg:w="46"/><text x="38.0998%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.05%)</title><rect x="37.8498%" y="565" width="0.0463%" height="15" fill="rgb(246,229,37)" fg:x="37631" fg:w="46"/><text x="38.0998%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.05%)</title><rect x="37.8498%" y="549" width="0.0463%" height="15" fill="rgb(225,18,5)" fg:x="37631" fg:w="46"/><text x="38.0998%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.05%)</title><rect x="37.8498%" y="533" width="0.0463%" height="15" fill="rgb(213,204,8)" fg:x="37631" fg:w="46"/><text x="38.0998%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="37.9051%" y="517" width="0.0111%" height="15" fill="rgb(238,103,6)" fg:x="37686" fg:w="11"/><text x="38.1551%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="37.8981%" y="533" width="0.0272%" height="15" fill="rgb(222,25,35)" fg:x="37679" fg:w="27"/><text x="38.1481%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 0.08%)</title><rect x="37.8498%" y="613" width="0.0774%" height="15" fill="rgb(213,203,35)" fg:x="37631" fg:w="77"/><text x="38.0998%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (77 samples, 0.08%)</title><rect x="37.8498%" y="597" width="0.0774%" height="15" fill="rgb(221,79,53)" fg:x="37631" fg:w="77"/><text x="38.0998%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="37.8981%" y="581" width="0.0292%" height="15" fill="rgb(243,200,35)" fg:x="37679" fg:w="29"/><text x="38.1481%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="37.8981%" y="565" width="0.0292%" height="15" fill="rgb(248,60,25)" fg:x="37679" fg:w="29"/><text x="38.1481%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (29 samples, 0.03%)</title><rect x="37.8981%" y="549" width="0.0292%" height="15" fill="rgb(227,53,46)" fg:x="37679" fg:w="29"/><text x="38.1481%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="37.9272%" y="613" width="0.0181%" height="15" fill="rgb(216,120,32)" fg:x="37708" fg:w="18"/><text x="38.1772%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 0.02%)</title><rect x="37.9272%" y="597" width="0.0181%" height="15" fill="rgb(220,134,1)" fg:x="37708" fg:w="18"/><text x="38.1772%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="37.9272%" y="581" width="0.0181%" height="15" fill="rgb(237,168,5)" fg:x="37708" fg:w="18"/><text x="38.1772%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="37.9272%" y="565" width="0.0181%" height="15" fill="rgb(231,100,33)" fg:x="37708" fg:w="18"/><text x="38.1772%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.02%)</title><rect x="37.9272%" y="549" width="0.0181%" height="15" fill="rgb(236,177,47)" fg:x="37708" fg:w="18"/><text x="38.1772%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="37.9282%" y="533" width="0.0171%" height="15" fill="rgb(235,7,49)" fg:x="37709" fg:w="17"/><text x="38.1782%" y="543.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (1,443 samples, 1.45%)</title><rect x="36.5100%" y="773" width="1.4514%" height="15" fill="rgb(232,119,22)" fg:x="36299" fg:w="1443"/><text x="36.7600%" y="783.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (111 samples, 0.11%)</title><rect x="37.8498%" y="757" width="0.1116%" height="15" fill="rgb(254,73,53)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (111 samples, 0.11%)</title><rect x="37.8498%" y="741" width="0.1116%" height="15" fill="rgb(251,35,20)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (111 samples, 0.11%)</title><rect x="37.8498%" y="725" width="0.1116%" height="15" fill="rgb(241,119,20)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="735.50"></text></g><g><title>core::iter::adapters::process_results (111 samples, 0.11%)</title><rect x="37.8498%" y="709" width="0.1116%" height="15" fill="rgb(207,102,14)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (111 samples, 0.11%)</title><rect x="37.8498%" y="693" width="0.1116%" height="15" fill="rgb(248,201,50)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (111 samples, 0.11%)</title><rect x="37.8498%" y="677" width="0.1116%" height="15" fill="rgb(222,185,44)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (111 samples, 0.11%)</title><rect x="37.8498%" y="661" width="0.1116%" height="15" fill="rgb(218,107,18)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (111 samples, 0.11%)</title><rect x="37.8498%" y="645" width="0.1116%" height="15" fill="rgb(237,177,39)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (111 samples, 0.11%)</title><rect x="37.8498%" y="629" width="0.1116%" height="15" fill="rgb(246,69,6)" fg:x="37631" fg:w="111"/><text x="38.0998%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="37.9504%" y="613" width="0.0111%" height="15" fill="rgb(234,208,37)" fg:x="37731" fg:w="11"/><text x="38.2004%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="37.9504%" y="597" width="0.0111%" height="15" fill="rgb(225,4,6)" fg:x="37731" fg:w="11"/><text x="38.2004%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="37.9504%" y="581" width="0.0111%" height="15" fill="rgb(233,45,0)" fg:x="37731" fg:w="11"/><text x="38.2004%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="37.9504%" y="565" width="0.0111%" height="15" fill="rgb(226,136,5)" fg:x="37731" fg:w="11"/><text x="38.2004%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.01%)</title><rect x="37.9675%" y="677" width="0.0101%" height="15" fill="rgb(211,91,47)" fg:x="37748" fg:w="10"/><text x="38.2175%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (11 samples, 0.01%)</title><rect x="37.9675%" y="693" width="0.0111%" height="15" fill="rgb(242,88,51)" fg:x="37748" fg:w="11"/><text x="38.2175%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::leq (30 samples, 0.03%)</title><rect x="37.9614%" y="725" width="0.0302%" height="15" fill="rgb(230,91,28)" fg:x="37742" fg:w="30"/><text x="38.2114%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::unmatched_edges (30 samples, 0.03%)</title><rect x="37.9614%" y="709" width="0.0302%" height="15" fill="rgb(254,186,29)" fg:x="37742" fg:w="30"/><text x="38.2114%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.01%)</title><rect x="37.9986%" y="597" width="0.0101%" height="15" fill="rgb(238,6,4)" fg:x="37779" fg:w="10"/><text x="38.2486%" y="607.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (29 samples, 0.03%)</title><rect x="37.9916%" y="725" width="0.0292%" height="15" fill="rgb(221,151,16)" fg:x="37772" fg:w="29"/><text x="38.2416%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.03%)</title><rect x="37.9936%" y="709" width="0.0272%" height="15" fill="rgb(251,143,52)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="37.9936%" y="693" width="0.0272%" height="15" fill="rgb(206,90,15)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="37.9936%" y="677" width="0.0272%" height="15" fill="rgb(218,35,8)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (27 samples, 0.03%)</title><rect x="37.9936%" y="661" width="0.0272%" height="15" fill="rgb(239,215,6)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (27 samples, 0.03%)</title><rect x="37.9936%" y="645" width="0.0272%" height="15" fill="rgb(245,116,39)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.03%)</title><rect x="37.9936%" y="629" width="0.0272%" height="15" fill="rgb(242,65,28)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (27 samples, 0.03%)</title><rect x="37.9936%" y="613" width="0.0272%" height="15" fill="rgb(252,132,53)" fg:x="37774" fg:w="27"/><text x="38.2436%" y="623.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="38.0208%" y="709" width="0.0211%" height="15" fill="rgb(224,159,50)" fg:x="37801" fg:w="21"/><text x="38.2708%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="38.0208%" y="693" width="0.0211%" height="15" fill="rgb(224,93,4)" fg:x="37801" fg:w="21"/><text x="38.2708%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (21 samples, 0.02%)</title><rect x="38.0208%" y="677" width="0.0211%" height="15" fill="rgb(208,81,34)" fg:x="37801" fg:w="21"/><text x="38.2708%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="38.0590%" y="629" width="0.0282%" height="15" fill="rgb(233,92,54)" fg:x="37839" fg:w="28"/><text x="38.3090%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="38.0690%" y="613" width="0.0181%" height="15" fill="rgb(237,21,14)" fg:x="37849" fg:w="18"/><text x="38.3190%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (56 samples, 0.06%)</title><rect x="38.0419%" y="709" width="0.0563%" height="15" fill="rgb(249,128,51)" fg:x="37822" fg:w="56"/><text x="38.2919%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (56 samples, 0.06%)</title><rect x="38.0419%" y="693" width="0.0563%" height="15" fill="rgb(223,129,24)" fg:x="37822" fg:w="56"/><text x="38.2919%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (56 samples, 0.06%)</title><rect x="38.0419%" y="677" width="0.0563%" height="15" fill="rgb(231,168,25)" fg:x="37822" fg:w="56"/><text x="38.2919%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.05%)</title><rect x="38.0449%" y="661" width="0.0533%" height="15" fill="rgb(224,39,20)" fg:x="37825" fg:w="53"/><text x="38.2949%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (49 samples, 0.05%)</title><rect x="38.0489%" y="645" width="0.0493%" height="15" fill="rgb(225,152,53)" fg:x="37829" fg:w="49"/><text x="38.2989%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (15 samples, 0.02%)</title><rect x="38.0982%" y="677" width="0.0151%" height="15" fill="rgb(252,17,24)" fg:x="37878" fg:w="15"/><text x="38.3482%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (22 samples, 0.02%)</title><rect x="38.2068%" y="629" width="0.0221%" height="15" fill="rgb(250,114,30)" fg:x="37986" fg:w="22"/><text x="38.4568%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (17 samples, 0.02%)</title><rect x="38.2119%" y="613" width="0.0171%" height="15" fill="rgb(229,5,4)" fg:x="37991" fg:w="17"/><text x="38.4619%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (18 samples, 0.02%)</title><rect x="38.2581%" y="613" width="0.0181%" height="15" fill="rgb(225,176,49)" fg:x="38037" fg:w="18"/><text x="38.5081%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.01%)</title><rect x="38.2762%" y="613" width="0.0141%" height="15" fill="rgb(224,221,49)" fg:x="38055" fg:w="14"/><text x="38.5262%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="38.2803%" y="597" width="0.0101%" height="15" fill="rgb(253,169,27)" fg:x="38059" fg:w="10"/><text x="38.5303%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.14%)</title><rect x="38.1666%" y="645" width="0.1368%" height="15" fill="rgb(211,206,16)" fg:x="37946" fg:w="136"/><text x="38.4166%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.07%)</title><rect x="38.2290%" y="629" width="0.0744%" height="15" fill="rgb(244,87,35)" fg:x="38008" fg:w="74"/><text x="38.4790%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (10 samples, 0.01%)</title><rect x="38.2933%" y="613" width="0.0101%" height="15" fill="rgb(246,28,10)" fg:x="38072" fg:w="10"/><text x="38.5433%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (49 samples, 0.05%)</title><rect x="38.3044%" y="645" width="0.0493%" height="15" fill="rgb(229,12,44)" fg:x="38083" fg:w="49"/><text x="38.5544%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (28 samples, 0.03%)</title><rect x="38.3255%" y="629" width="0.0282%" height="15" fill="rgb(210,145,37)" fg:x="38104" fg:w="28"/><text x="38.5755%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (24 samples, 0.02%)</title><rect x="38.3295%" y="613" width="0.0241%" height="15" fill="rgb(227,112,52)" fg:x="38108" fg:w="24"/><text x="38.5795%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="38.3346%" y="597" width="0.0191%" height="15" fill="rgb(238,155,34)" fg:x="38113" fg:w="19"/><text x="38.5846%" y="607.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.01%)</title><rect x="38.3436%" y="581" width="0.0101%" height="15" fill="rgb(239,226,36)" fg:x="38122" fg:w="10"/><text x="38.5936%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (14 samples, 0.01%)</title><rect x="38.3537%" y="645" width="0.0141%" height="15" fill="rgb(230,16,23)" fg:x="38132" fg:w="14"/><text x="38.6037%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (298 samples, 0.30%)</title><rect x="38.0982%" y="709" width="0.2997%" height="15" fill="rgb(236,171,36)" fg:x="37878" fg:w="298"/><text x="38.3482%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (298 samples, 0.30%)</title><rect x="38.0982%" y="693" width="0.2997%" height="15" fill="rgb(221,22,14)" fg:x="37878" fg:w="298"/><text x="38.3482%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (274 samples, 0.28%)</title><rect x="38.1223%" y="677" width="0.2756%" height="15" fill="rgb(242,43,11)" fg:x="37902" fg:w="274"/><text x="38.3723%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (259 samples, 0.26%)</title><rect x="38.1374%" y="661" width="0.2605%" height="15" fill="rgb(232,69,23)" fg:x="37917" fg:w="259"/><text x="38.3874%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (28 samples, 0.03%)</title><rect x="38.3698%" y="645" width="0.0282%" height="15" fill="rgb(216,180,54)" fg:x="38148" fg:w="28"/><text x="38.6198%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="38.3738%" y="629" width="0.0241%" height="15" fill="rgb(216,5,24)" fg:x="38152" fg:w="24"/><text x="38.6238%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (10 samples, 0.01%)</title><rect x="38.4040%" y="677" width="0.0101%" height="15" fill="rgb(225,89,9)" fg:x="38182" fg:w="10"/><text x="38.6540%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (10 samples, 0.01%)</title><rect x="38.4040%" y="661" width="0.0101%" height="15" fill="rgb(243,75,33)" fg:x="38182" fg:w="10"/><text x="38.6540%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="38.4372%" y="629" width="0.0221%" height="15" fill="rgb(247,141,45)" fg:x="38215" fg:w="22"/><text x="38.6872%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="38.4442%" y="613" width="0.0151%" height="15" fill="rgb(232,177,36)" fg:x="38222" fg:w="15"/><text x="38.6942%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (76 samples, 0.08%)</title><rect x="38.3979%" y="693" width="0.0764%" height="15" fill="rgb(219,125,36)" fg:x="38176" fg:w="76"/><text x="38.6479%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (58 samples, 0.06%)</title><rect x="38.4160%" y="677" width="0.0583%" height="15" fill="rgb(227,94,9)" fg:x="38194" fg:w="58"/><text x="38.6660%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (51 samples, 0.05%)</title><rect x="38.4231%" y="661" width="0.0513%" height="15" fill="rgb(240,34,52)" fg:x="38201" fg:w="51"/><text x="38.6731%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (49 samples, 0.05%)</title><rect x="38.4251%" y="645" width="0.0493%" height="15" fill="rgb(216,45,12)" fg:x="38203" fg:w="49"/><text x="38.6751%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (88 samples, 0.09%)</title><rect x="38.3979%" y="709" width="0.0885%" height="15" fill="rgb(246,21,19)" fg:x="38176" fg:w="88"/><text x="38.6479%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (12 samples, 0.01%)</title><rect x="38.4744%" y="693" width="0.0121%" height="15" fill="rgb(213,98,42)" fg:x="38252" fg:w="12"/><text x="38.7244%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (10 samples, 0.01%)</title><rect x="38.4965%" y="677" width="0.0101%" height="15" fill="rgb(250,136,47)" fg:x="38274" fg:w="10"/><text x="38.7465%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (26 samples, 0.03%)</title><rect x="38.4925%" y="693" width="0.0262%" height="15" fill="rgb(251,124,27)" fg:x="38270" fg:w="26"/><text x="38.7425%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (12 samples, 0.01%)</title><rect x="38.5066%" y="677" width="0.0121%" height="15" fill="rgb(229,180,14)" fg:x="38284" fg:w="12"/><text x="38.7566%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.01%)</title><rect x="38.5086%" y="661" width="0.0101%" height="15" fill="rgb(245,216,25)" fg:x="38286" fg:w="10"/><text x="38.7586%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.01%)</title><rect x="38.5186%" y="693" width="0.0121%" height="15" fill="rgb(251,43,5)" fg:x="38296" fg:w="12"/><text x="38.7686%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::join (46 samples, 0.05%)</title><rect x="38.4865%" y="709" width="0.0463%" height="15" fill="rgb(250,128,24)" fg:x="38264" fg:w="46"/><text x="38.7365%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (15 samples, 0.02%)</title><rect x="38.5498%" y="581" width="0.0151%" height="15" fill="rgb(217,117,27)" fg:x="38327" fg:w="15"/><text x="38.7998%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.01%)</title><rect x="38.5709%" y="581" width="0.0121%" height="15" fill="rgb(245,147,4)" fg:x="38348" fg:w="12"/><text x="38.8209%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (38 samples, 0.04%)</title><rect x="38.5458%" y="597" width="0.0382%" height="15" fill="rgb(242,201,35)" fg:x="38323" fg:w="38"/><text x="38.7958%" y="607.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (56 samples, 0.06%)</title><rect x="38.5327%" y="709" width="0.0563%" height="15" fill="rgb(218,181,1)" fg:x="38310" fg:w="56"/><text x="38.7827%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (48 samples, 0.05%)</title><rect x="38.5408%" y="693" width="0.0483%" height="15" fill="rgb(222,6,29)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.05%)</title><rect x="38.5408%" y="677" width="0.0483%" height="15" fill="rgb(208,186,3)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.05%)</title><rect x="38.5408%" y="661" width="0.0483%" height="15" fill="rgb(216,36,26)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (48 samples, 0.05%)</title><rect x="38.5408%" y="645" width="0.0483%" height="15" fill="rgb(248,201,23)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (48 samples, 0.05%)</title><rect x="38.5408%" y="629" width="0.0483%" height="15" fill="rgb(251,170,31)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (48 samples, 0.05%)</title><rect x="38.5408%" y="613" width="0.0483%" height="15" fill="rgb(207,110,25)" fg:x="38318" fg:w="48"/><text x="38.7908%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="38.5931%" y="581" width="0.0121%" height="15" fill="rgb(250,54,15)" fg:x="38370" fg:w="12"/><text x="38.8431%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (18 samples, 0.02%)</title><rect x="38.5890%" y="629" width="0.0181%" height="15" fill="rgb(227,68,33)" fg:x="38366" fg:w="18"/><text x="38.8390%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (15 samples, 0.02%)</title><rect x="38.5921%" y="613" width="0.0151%" height="15" fill="rgb(238,34,41)" fg:x="38369" fg:w="15"/><text x="38.8421%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.02%)</title><rect x="38.5921%" y="597" width="0.0151%" height="15" fill="rgb(220,11,15)" fg:x="38369" fg:w="15"/><text x="38.8421%" y="607.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (601 samples, 0.60%)</title><rect x="38.0208%" y="725" width="0.6045%" height="15" fill="rgb(246,111,35)" fg:x="37801" fg:w="601"/><text x="38.2708%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (36 samples, 0.04%)</title><rect x="38.5890%" y="709" width="0.0362%" height="15" fill="rgb(209,88,53)" fg:x="38366" fg:w="36"/><text x="38.8390%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (36 samples, 0.04%)</title><rect x="38.5890%" y="693" width="0.0362%" height="15" fill="rgb(231,185,47)" fg:x="38366" fg:w="36"/><text x="38.8390%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="38.5890%" y="677" width="0.0362%" height="15" fill="rgb(233,154,1)" fg:x="38366" fg:w="36"/><text x="38.8390%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (36 samples, 0.04%)</title><rect x="38.5890%" y="661" width="0.0362%" height="15" fill="rgb(225,15,46)" fg:x="38366" fg:w="36"/><text x="38.8390%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="38.5890%" y="645" width="0.0362%" height="15" fill="rgb(211,135,41)" fg:x="38366" fg:w="36"/><text x="38.8390%" y="655.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="38.6071%" y="629" width="0.0181%" height="15" fill="rgb(208,54,0)" fg:x="38384" fg:w="18"/><text x="38.8571%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (18 samples, 0.02%)</title><rect x="38.6071%" y="613" width="0.0181%" height="15" fill="rgb(244,136,14)" fg:x="38384" fg:w="18"/><text x="38.8571%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (18 samples, 0.02%)</title><rect x="38.6071%" y="597" width="0.0181%" height="15" fill="rgb(241,56,14)" fg:x="38384" fg:w="18"/><text x="38.8571%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (10 samples, 0.01%)</title><rect x="38.6152%" y="581" width="0.0101%" height="15" fill="rgb(205,80,24)" fg:x="38392" fg:w="10"/><text x="38.8652%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="38.6152%" y="565" width="0.0101%" height="15" fill="rgb(220,57,4)" fg:x="38392" fg:w="10"/><text x="38.8652%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="38.6152%" y="549" width="0.0101%" height="15" fill="rgb(226,193,50)" fg:x="38392" fg:w="10"/><text x="38.8652%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.05%)</title><rect x="38.6494%" y="597" width="0.0483%" height="15" fill="rgb(231,168,22)" fg:x="38426" fg:w="48"/><text x="38.8994%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="38.6675%" y="581" width="0.0302%" height="15" fill="rgb(254,215,14)" fg:x="38444" fg:w="30"/><text x="38.9175%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (10 samples, 0.01%)</title><rect x="38.6876%" y="565" width="0.0101%" height="15" fill="rgb(211,115,16)" fg:x="38464" fg:w="10"/><text x="38.9376%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="38.6977%" y="597" width="0.0181%" height="15" fill="rgb(236,210,16)" fg:x="38474" fg:w="18"/><text x="38.9477%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="38.7007%" y="581" width="0.0151%" height="15" fill="rgb(221,94,12)" fg:x="38477" fg:w="15"/><text x="38.9507%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="38.7017%" y="565" width="0.0141%" height="15" fill="rgb(235,218,49)" fg:x="38478" fg:w="14"/><text x="38.9517%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="38.7057%" y="549" width="0.0101%" height="15" fill="rgb(217,114,14)" fg:x="38482" fg:w="10"/><text x="38.9557%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (111 samples, 0.11%)</title><rect x="38.6253%" y="725" width="0.1116%" height="15" fill="rgb(216,145,22)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.11%)</title><rect x="38.6253%" y="709" width="0.1116%" height="15" fill="rgb(217,112,39)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (111 samples, 0.11%)</title><rect x="38.6253%" y="693" width="0.1116%" height="15" fill="rgb(225,85,32)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="703.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join::_{{closure}} (111 samples, 0.11%)</title><rect x="38.6253%" y="677" width="0.1116%" height="15" fill="rgb(245,209,47)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (111 samples, 0.11%)</title><rect x="38.6253%" y="661" width="0.1116%" height="15" fill="rgb(218,220,15)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (111 samples, 0.11%)</title><rect x="38.6253%" y="645" width="0.1116%" height="15" fill="rgb(222,202,31)" fg:x="38402" fg:w="111"/><text x="38.8753%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (105 samples, 0.11%)</title><rect x="38.6313%" y="629" width="0.1056%" height="15" fill="rgb(243,203,4)" fg:x="38408" fg:w="105"/><text x="38.8813%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (105 samples, 0.11%)</title><rect x="38.6313%" y="613" width="0.1056%" height="15" fill="rgb(237,92,17)" fg:x="38408" fg:w="105"/><text x="38.8813%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.01%)</title><rect x="38.7228%" y="597" width="0.0141%" height="15" fill="rgb(231,119,7)" fg:x="38499" fg:w="14"/><text x="38.9728%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="38.7238%" y="581" width="0.0131%" height="15" fill="rgb(237,82,41)" fg:x="38500" fg:w="13"/><text x="38.9738%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="38.7520%" y="565" width="0.0131%" height="15" fill="rgb(226,81,48)" fg:x="38528" fg:w="13"/><text x="39.0020%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (39 samples, 0.04%)</title><rect x="38.7369%" y="709" width="0.0392%" height="15" fill="rgb(234,70,51)" fg:x="38513" fg:w="39"/><text x="38.9869%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="38.7369%" y="693" width="0.0392%" height="15" fill="rgb(251,86,4)" fg:x="38513" fg:w="39"/><text x="38.9869%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (39 samples, 0.04%)</title><rect x="38.7369%" y="677" width="0.0392%" height="15" fill="rgb(244,144,28)" fg:x="38513" fg:w="39"/><text x="38.9869%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="38.7369%" y="661" width="0.0392%" height="15" fill="rgb(232,161,39)" fg:x="38513" fg:w="39"/><text x="38.9869%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (39 samples, 0.04%)</title><rect x="38.7369%" y="645" width="0.0392%" height="15" fill="rgb(247,34,51)" fg:x="38513" fg:w="39"/><text x="38.9869%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (37 samples, 0.04%)</title><rect x="38.7389%" y="629" width="0.0372%" height="15" fill="rgb(225,132,2)" fg:x="38515" fg:w="37"/><text x="38.9889%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (37 samples, 0.04%)</title><rect x="38.7389%" y="613" width="0.0372%" height="15" fill="rgb(209,159,44)" fg:x="38515" fg:w="37"/><text x="38.9889%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (37 samples, 0.04%)</title><rect x="38.7389%" y="597" width="0.0372%" height="15" fill="rgb(251,214,1)" fg:x="38515" fg:w="37"/><text x="38.9889%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (37 samples, 0.04%)</title><rect x="38.7389%" y="581" width="0.0372%" height="15" fill="rgb(247,84,47)" fg:x="38515" fg:w="37"/><text x="38.9889%" y="591.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (822 samples, 0.83%)</title><rect x="37.9614%" y="741" width="0.8268%" height="15" fill="rgb(240,111,43)" fg:x="37742" fg:w="822"/><text x="38.2114%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (51 samples, 0.05%)</title><rect x="38.7369%" y="725" width="0.0513%" height="15" fill="rgb(215,214,35)" fg:x="38513" fg:w="51"/><text x="38.9869%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (12 samples, 0.01%)</title><rect x="38.7761%" y="709" width="0.0121%" height="15" fill="rgb(248,207,23)" fg:x="38552" fg:w="12"/><text x="39.0261%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="38.7761%" y="693" width="0.0121%" height="15" fill="rgb(214,186,4)" fg:x="38552" fg:w="12"/><text x="39.0261%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="38.7761%" y="677" width="0.0121%" height="15" fill="rgb(220,133,22)" fg:x="38552" fg:w="12"/><text x="39.0261%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="38.7761%" y="661" width="0.0121%" height="15" fill="rgb(239,134,19)" fg:x="38552" fg:w="12"/><text x="39.0261%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="38.7761%" y="645" width="0.0121%" height="15" fill="rgb(250,140,9)" fg:x="38552" fg:w="12"/><text x="39.0261%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (13 samples, 0.01%)</title><rect x="38.8264%" y="693" width="0.0131%" height="15" fill="rgb(225,59,14)" fg:x="38602" fg:w="13"/><text x="39.0764%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (28 samples, 0.03%)</title><rect x="38.8455%" y="693" width="0.0282%" height="15" fill="rgb(214,152,51)" fg:x="38621" fg:w="28"/><text x="39.0955%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="38.8576%" y="677" width="0.0161%" height="15" fill="rgb(251,227,43)" fg:x="38633" fg:w="16"/><text x="39.1076%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="38.8586%" y="661" width="0.0151%" height="15" fill="rgb(241,96,17)" fg:x="38634" fg:w="15"/><text x="39.1086%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::push (10 samples, 0.01%)</title><rect x="38.8787%" y="693" width="0.0101%" height="15" fill="rgb(234,198,43)" fg:x="38654" fg:w="10"/><text x="39.1287%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (11 samples, 0.01%)</title><rect x="38.9039%" y="677" width="0.0111%" height="15" fill="rgb(220,108,29)" fg:x="38679" fg:w="11"/><text x="39.1539%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.01%)</title><rect x="38.9159%" y="677" width="0.0101%" height="15" fill="rgb(226,163,33)" fg:x="38691" fg:w="10"/><text x="39.1659%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (47 samples, 0.05%)</title><rect x="38.8888%" y="693" width="0.0473%" height="15" fill="rgb(205,194,45)" fg:x="38664" fg:w="47"/><text x="39.1388%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="38.9531%" y="597" width="0.0231%" height="15" fill="rgb(206,143,44)" fg:x="38728" fg:w="23"/><text x="39.2031%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="38.9542%" y="581" width="0.0221%" height="15" fill="rgb(236,136,36)" fg:x="38729" fg:w="22"/><text x="39.2042%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (33 samples, 0.03%)</title><rect x="38.9501%" y="613" width="0.0332%" height="15" fill="rgb(249,172,42)" fg:x="38725" fg:w="33"/><text x="39.2001%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (44 samples, 0.04%)</title><rect x="38.9411%" y="645" width="0.0443%" height="15" fill="rgb(216,139,23)" fg:x="38716" fg:w="44"/><text x="39.1911%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (43 samples, 0.04%)</title><rect x="38.9421%" y="629" width="0.0432%" height="15" fill="rgb(207,166,20)" fg:x="38717" fg:w="43"/><text x="39.1921%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (11 samples, 0.01%)</title><rect x="38.9853%" y="645" width="0.0111%" height="15" fill="rgb(210,209,22)" fg:x="38760" fg:w="11"/><text x="39.2353%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (65 samples, 0.07%)</title><rect x="38.9371%" y="661" width="0.0654%" height="15" fill="rgb(232,118,20)" fg:x="38712" fg:w="65"/><text x="39.1871%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (70 samples, 0.07%)</title><rect x="38.9371%" y="693" width="0.0704%" height="15" fill="rgb(238,113,42)" fg:x="38712" fg:w="70"/><text x="39.1871%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (70 samples, 0.07%)</title><rect x="38.9371%" y="677" width="0.0704%" height="15" fill="rgb(231,42,5)" fg:x="38712" fg:w="70"/><text x="39.1871%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (14 samples, 0.01%)</title><rect x="39.0075%" y="693" width="0.0141%" height="15" fill="rgb(243,166,24)" fg:x="38782" fg:w="14"/><text x="39.2575%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (13 samples, 0.01%)</title><rect x="39.0085%" y="677" width="0.0131%" height="15" fill="rgb(237,226,12)" fg:x="38783" fg:w="13"/><text x="39.2585%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="39.0085%" y="661" width="0.0131%" height="15" fill="rgb(229,133,24)" fg:x="38783" fg:w="13"/><text x="39.2585%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (12 samples, 0.01%)</title><rect x="39.0095%" y="645" width="0.0121%" height="15" fill="rgb(238,33,43)" fg:x="38784" fg:w="12"/><text x="39.2595%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (12 samples, 0.01%)</title><rect x="39.0095%" y="629" width="0.0121%" height="15" fill="rgb(227,59,38)" fg:x="38784" fg:w="12"/><text x="39.2595%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (12 samples, 0.01%)</title><rect x="39.0095%" y="613" width="0.0121%" height="15" fill="rgb(230,97,0)" fg:x="38784" fg:w="12"/><text x="39.2595%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (237 samples, 0.24%)</title><rect x="38.7882%" y="725" width="0.2384%" height="15" fill="rgb(250,173,50)" fg:x="38564" fg:w="237"/><text x="39.0382%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (237 samples, 0.24%)</title><rect x="38.7882%" y="709" width="0.2384%" height="15" fill="rgb(240,15,50)" fg:x="38564" fg:w="237"/><text x="39.0382%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="39.0407%" y="677" width="0.0191%" height="15" fill="rgb(221,93,22)" fg:x="38815" fg:w="19"/><text x="39.2907%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (11 samples, 0.01%)</title><rect x="39.0598%" y="677" width="0.0111%" height="15" fill="rgb(245,180,53)" fg:x="38834" fg:w="11"/><text x="39.3098%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (16 samples, 0.02%)</title><rect x="39.0728%" y="677" width="0.0161%" height="15" fill="rgb(231,88,51)" fg:x="38847" fg:w="16"/><text x="39.3228%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="39.0779%" y="661" width="0.0111%" height="15" fill="rgb(240,58,21)" fg:x="38852" fg:w="11"/><text x="39.3279%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (11 samples, 0.01%)</title><rect x="39.1040%" y="661" width="0.0111%" height="15" fill="rgb(237,21,10)" fg:x="38878" fg:w="11"/><text x="39.3540%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (38 samples, 0.04%)</title><rect x="39.0950%" y="677" width="0.0382%" height="15" fill="rgb(218,43,11)" fg:x="38869" fg:w="38"/><text x="39.3450%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="39.1211%" y="661" width="0.0121%" height="15" fill="rgb(218,221,29)" fg:x="38895" fg:w="12"/><text x="39.3711%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="39.1453%" y="581" width="0.0141%" height="15" fill="rgb(214,118,42)" fg:x="38919" fg:w="14"/><text x="39.3953%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="39.1463%" y="565" width="0.0131%" height="15" fill="rgb(251,200,26)" fg:x="38920" fg:w="13"/><text x="39.3963%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (26 samples, 0.03%)</title><rect x="39.1422%" y="597" width="0.0262%" height="15" fill="rgb(237,101,39)" fg:x="38916" fg:w="26"/><text x="39.3922%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (31 samples, 0.03%)</title><rect x="39.1412%" y="629" width="0.0312%" height="15" fill="rgb(251,117,11)" fg:x="38915" fg:w="31"/><text x="39.3912%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (31 samples, 0.03%)</title><rect x="39.1412%" y="613" width="0.0312%" height="15" fill="rgb(216,223,23)" fg:x="38915" fg:w="31"/><text x="39.3912%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (14 samples, 0.01%)</title><rect x="39.1764%" y="597" width="0.0141%" height="15" fill="rgb(251,54,12)" fg:x="38950" fg:w="14"/><text x="39.4264%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (19 samples, 0.02%)</title><rect x="39.1724%" y="629" width="0.0191%" height="15" fill="rgb(254,176,54)" fg:x="38946" fg:w="19"/><text x="39.4224%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (16 samples, 0.02%)</title><rect x="39.1754%" y="613" width="0.0161%" height="15" fill="rgb(210,32,8)" fg:x="38949" fg:w="16"/><text x="39.4254%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (52 samples, 0.05%)</title><rect x="39.1402%" y="645" width="0.0523%" height="15" fill="rgb(235,52,38)" fg:x="38914" fg:w="52"/><text x="39.3902%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (62 samples, 0.06%)</title><rect x="39.1362%" y="677" width="0.0624%" height="15" fill="rgb(231,4,44)" fg:x="38910" fg:w="62"/><text x="39.3862%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (60 samples, 0.06%)</title><rect x="39.1382%" y="661" width="0.0603%" height="15" fill="rgb(249,2,32)" fg:x="38912" fg:w="60"/><text x="39.3882%" y="671.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (412 samples, 0.41%)</title><rect x="38.7882%" y="741" width="0.4144%" height="15" fill="rgb(224,65,26)" fg:x="38564" fg:w="412"/><text x="39.0382%" y="751.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (175 samples, 0.18%)</title><rect x="39.0266%" y="725" width="0.1760%" height="15" fill="rgb(250,73,40)" fg:x="38801" fg:w="175"/><text x="39.2766%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (175 samples, 0.18%)</title><rect x="39.0266%" y="709" width="0.1760%" height="15" fill="rgb(253,177,16)" fg:x="38801" fg:w="175"/><text x="39.2766%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (175 samples, 0.18%)</title><rect x="39.0266%" y="693" width="0.1760%" height="15" fill="rgb(217,32,34)" fg:x="38801" fg:w="175"/><text x="39.2766%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.01%)</title><rect x="39.2137%" y="613" width="0.0121%" height="15" fill="rgb(212,7,10)" fg:x="38987" fg:w="12"/><text x="39.4637%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="39.2026%" y="645" width="0.0332%" height="15" fill="rgb(245,89,8)" fg:x="38976" fg:w="33"/><text x="39.4526%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="39.2026%" y="629" width="0.0332%" height="15" fill="rgb(237,16,53)" fg:x="38976" fg:w="33"/><text x="39.4526%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.01%)</title><rect x="39.2358%" y="645" width="0.0131%" height="15" fill="rgb(250,204,30)" fg:x="39009" fg:w="13"/><text x="39.4858%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="39.2358%" y="629" width="0.0131%" height="15" fill="rgb(208,77,27)" fg:x="39009" fg:w="13"/><text x="39.4858%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="39.2358%" y="613" width="0.0131%" height="15" fill="rgb(250,204,28)" fg:x="39009" fg:w="13"/><text x="39.4858%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="39.2358%" y="597" width="0.0131%" height="15" fill="rgb(244,63,21)" fg:x="39009" fg:w="13"/><text x="39.4858%" y="607.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (55 samples, 0.06%)</title><rect x="39.2026%" y="741" width="0.0553%" height="15" fill="rgb(236,85,44)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (55 samples, 0.06%)</title><rect x="39.2026%" y="725" width="0.0553%" height="15" fill="rgb(215,98,4)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (55 samples, 0.06%)</title><rect x="39.2026%" y="709" width="0.0553%" height="15" fill="rgb(235,38,11)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (55 samples, 0.06%)</title><rect x="39.2026%" y="693" width="0.0553%" height="15" fill="rgb(254,186,25)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (55 samples, 0.06%)</title><rect x="39.2026%" y="677" width="0.0553%" height="15" fill="rgb(225,55,31)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (55 samples, 0.06%)</title><rect x="39.2026%" y="661" width="0.0553%" height="15" fill="rgb(211,15,21)" fg:x="38976" fg:w="55"/><text x="39.4526%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="39.2579%" y="661" width="0.0121%" height="15" fill="rgb(215,187,41)" fg:x="39031" fg:w="12"/><text x="39.5079%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.01%)</title><rect x="39.2579%" y="645" width="0.0121%" height="15" fill="rgb(248,69,32)" fg:x="39031" fg:w="12"/><text x="39.5079%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.01%)</title><rect x="39.2579%" y="629" width="0.0121%" height="15" fill="rgb(252,102,52)" fg:x="39031" fg:w="12"/><text x="39.5079%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="39.2579%" y="741" width="0.0131%" height="15" fill="rgb(253,140,32)" fg:x="39031" fg:w="13"/><text x="39.5079%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="39.2579%" y="725" width="0.0131%" height="15" fill="rgb(216,56,42)" fg:x="39031" fg:w="13"/><text x="39.5079%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="39.2579%" y="709" width="0.0131%" height="15" fill="rgb(216,184,14)" fg:x="39031" fg:w="13"/><text x="39.5079%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (13 samples, 0.01%)</title><rect x="39.2579%" y="693" width="0.0131%" height="15" fill="rgb(237,187,27)" fg:x="39031" fg:w="13"/><text x="39.5079%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="39.2579%" y="677" width="0.0131%" height="15" fill="rgb(219,65,3)" fg:x="39031" fg:w="13"/><text x="39.5079%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (23 samples, 0.02%)</title><rect x="39.3263%" y="709" width="0.0231%" height="15" fill="rgb(245,83,25)" fg:x="39099" fg:w="23"/><text x="39.5763%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="39.3263%" y="693" width="0.0231%" height="15" fill="rgb(214,205,45)" fg:x="39099" fg:w="23"/><text x="39.5763%" y="703.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="39.3937%" y="693" width="0.0121%" height="15" fill="rgb(241,20,18)" fg:x="39166" fg:w="12"/><text x="39.6437%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (10 samples, 0.01%)</title><rect x="39.4148%" y="677" width="0.0101%" height="15" fill="rgb(232,163,23)" fg:x="39187" fg:w="10"/><text x="39.6648%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (29 samples, 0.03%)</title><rect x="39.4058%" y="693" width="0.0292%" height="15" fill="rgb(214,5,46)" fg:x="39178" fg:w="29"/><text x="39.6558%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (10 samples, 0.01%)</title><rect x="39.4249%" y="677" width="0.0101%" height="15" fill="rgb(229,78,17)" fg:x="39197" fg:w="10"/><text x="39.6749%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="39.4420%" y="677" width="0.0101%" height="15" fill="rgb(248,89,10)" fg:x="39214" fg:w="10"/><text x="39.6920%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (21 samples, 0.02%)</title><rect x="39.4349%" y="693" width="0.0211%" height="15" fill="rgb(248,54,15)" fg:x="39207" fg:w="21"/><text x="39.6849%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="39.4701%" y="677" width="0.0171%" height="15" fill="rgb(223,116,6)" fg:x="39242" fg:w="17"/><text x="39.7201%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="39.5124%" y="645" width="0.0292%" height="15" fill="rgb(205,125,38)" fg:x="39284" fg:w="29"/><text x="39.7624%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (20 samples, 0.02%)</title><rect x="39.5214%" y="629" width="0.0201%" height="15" fill="rgb(251,78,38)" fg:x="39293" fg:w="20"/><text x="39.7714%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="39.5657%" y="613" width="0.0121%" height="15" fill="rgb(253,78,28)" fg:x="39337" fg:w="12"/><text x="39.8157%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (121 samples, 0.12%)</title><rect x="39.4651%" y="693" width="0.1217%" height="15" fill="rgb(209,120,3)" fg:x="39237" fg:w="121"/><text x="39.7151%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (99 samples, 0.10%)</title><rect x="39.4872%" y="677" width="0.0996%" height="15" fill="rgb(238,229,9)" fg:x="39259" fg:w="99"/><text x="39.7372%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (92 samples, 0.09%)</title><rect x="39.4943%" y="661" width="0.0925%" height="15" fill="rgb(253,159,18)" fg:x="39266" fg:w="92"/><text x="39.7443%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (41 samples, 0.04%)</title><rect x="39.5456%" y="645" width="0.0412%" height="15" fill="rgb(244,42,34)" fg:x="39317" fg:w="41"/><text x="39.7956%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical::_{{closure}} (31 samples, 0.03%)</title><rect x="39.5556%" y="629" width="0.0312%" height="15" fill="rgb(224,8,7)" fg:x="39327" fg:w="31"/><text x="39.8056%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (21 samples, 0.02%)</title><rect x="39.5999%" y="661" width="0.0211%" height="15" fill="rgb(210,201,45)" fg:x="39371" fg:w="21"/><text x="39.8499%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="39.5908%" y="677" width="0.0322%" height="15" fill="rgb(252,185,21)" fg:x="39362" fg:w="32"/><text x="39.8408%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 0.04%)</title><rect x="39.5868%" y="693" width="0.0392%" height="15" fill="rgb(223,131,1)" fg:x="39358" fg:w="39"/><text x="39.8368%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (12 samples, 0.01%)</title><rect x="39.6260%" y="693" width="0.0121%" height="15" fill="rgb(245,141,16)" fg:x="39397" fg:w="12"/><text x="39.8760%" y="703.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="39.6804%" y="613" width="0.0101%" height="15" fill="rgb(229,55,45)" fg:x="39451" fg:w="10"/><text x="39.9304%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (33 samples, 0.03%)</title><rect x="39.6582%" y="661" width="0.0332%" height="15" fill="rgb(208,92,15)" fg:x="39429" fg:w="33"/><text x="39.9082%" y="671.50"></text></g><g><title>core::mem::take (28 samples, 0.03%)</title><rect x="39.6633%" y="645" width="0.0282%" height="15" fill="rgb(234,185,47)" fg:x="39434" fg:w="28"/><text x="39.9133%" y="655.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="39.6723%" y="629" width="0.0191%" height="15" fill="rgb(253,104,50)" fg:x="39443" fg:w="19"/><text x="39.9223%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (12 samples, 0.01%)</title><rect x="39.7105%" y="613" width="0.0121%" height="15" fill="rgb(205,70,7)" fg:x="39481" fg:w="12"/><text x="39.9605%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (33 samples, 0.03%)</title><rect x="39.7005%" y="629" width="0.0332%" height="15" fill="rgb(240,178,43)" fg:x="39471" fg:w="33"/><text x="39.9505%" y="639.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (375 samples, 0.38%)</title><rect x="39.3585%" y="709" width="0.3772%" height="15" fill="rgb(214,112,2)" fg:x="39131" fg:w="375"/><text x="39.6085%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (97 samples, 0.10%)</title><rect x="39.6381%" y="693" width="0.0976%" height="15" fill="rgb(206,46,17)" fg:x="39409" fg:w="97"/><text x="39.8881%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.10%)</title><rect x="39.6391%" y="677" width="0.0966%" height="15" fill="rgb(225,220,16)" fg:x="39410" fg:w="96"/><text x="39.8891%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::RefID&gt;&gt; (44 samples, 0.04%)</title><rect x="39.6914%" y="661" width="0.0443%" height="15" fill="rgb(238,65,40)" fg:x="39462" fg:w="44"/><text x="39.9414%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="39.6914%" y="645" width="0.0443%" height="15" fill="rgb(230,151,21)" fg:x="39462" fg:w="44"/><text x="39.9414%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::execute_inner (12 samples, 0.01%)</title><rect x="39.7357%" y="709" width="0.0121%" height="15" fill="rgb(218,58,49)" fg:x="39506" fg:w="12"/><text x="39.9857%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (16 samples, 0.02%)</title><rect x="39.7558%" y="661" width="0.0161%" height="15" fill="rgb(219,179,14)" fg:x="39526" fg:w="16"/><text x="40.0058%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (27 samples, 0.03%)</title><rect x="39.7749%" y="661" width="0.0272%" height="15" fill="rgb(223,72,1)" fg:x="39545" fg:w="27"/><text x="40.0249%" y="671.50"></text></g><g><title>core::mem::take (18 samples, 0.02%)</title><rect x="39.7840%" y="645" width="0.0181%" height="15" fill="rgb(238,126,10)" fg:x="39554" fg:w="18"/><text x="40.0340%" y="655.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="39.7880%" y="629" width="0.0141%" height="15" fill="rgb(224,206,38)" fg:x="39558" fg:w="14"/><text x="40.0380%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (16 samples, 0.02%)</title><rect x="39.8483%" y="581" width="0.0161%" height="15" fill="rgb(212,201,54)" fg:x="39618" fg:w="16"/><text x="40.0983%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (44 samples, 0.04%)</title><rect x="39.8312%" y="613" width="0.0443%" height="15" fill="rgb(218,154,48)" fg:x="39601" fg:w="44"/><text x="40.0812%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (38 samples, 0.04%)</title><rect x="39.8373%" y="597" width="0.0382%" height="15" fill="rgb(232,93,24)" fg:x="39607" fg:w="38"/><text x="40.0873%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (22 samples, 0.02%)</title><rect x="39.8986%" y="581" width="0.0221%" height="15" fill="rgb(245,30,21)" fg:x="39668" fg:w="22"/><text x="40.1486%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (15 samples, 0.02%)</title><rect x="39.9057%" y="565" width="0.0151%" height="15" fill="rgb(242,148,29)" fg:x="39675" fg:w="15"/><text x="40.1557%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="39.9308%" y="565" width="0.0111%" height="15" fill="rgb(244,153,54)" fg:x="39700" fg:w="11"/><text x="40.1808%" y="575.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="39.9207%" y="581" width="0.0221%" height="15" fill="rgb(252,87,22)" fg:x="39690" fg:w="22"/><text x="40.1707%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (71 samples, 0.07%)</title><rect x="39.8755%" y="613" width="0.0714%" height="15" fill="rgb(210,51,29)" fg:x="39645" fg:w="71"/><text x="40.1255%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (67 samples, 0.07%)</title><rect x="39.8795%" y="597" width="0.0674%" height="15" fill="rgb(242,136,47)" fg:x="39649" fg:w="67"/><text x="40.1295%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (133 samples, 0.13%)</title><rect x="39.8181%" y="629" width="0.1338%" height="15" fill="rgb(238,68,4)" fg:x="39588" fg:w="133"/><text x="40.0681%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (202 samples, 0.20%)</title><rect x="39.7508%" y="693" width="0.2032%" height="15" fill="rgb(242,161,30)" fg:x="39521" fg:w="202"/><text x="40.0008%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (202 samples, 0.20%)</title><rect x="39.7508%" y="677" width="0.2032%" height="15" fill="rgb(218,58,44)" fg:x="39521" fg:w="202"/><text x="40.0008%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (151 samples, 0.15%)</title><rect x="39.8021%" y="661" width="0.1519%" height="15" fill="rgb(252,125,32)" fg:x="39572" fg:w="151"/><text x="40.0521%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.15%)</title><rect x="39.8031%" y="645" width="0.1509%" height="15" fill="rgb(219,178,0)" fg:x="39573" fg:w="150"/><text x="40.0531%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (26 samples, 0.03%)</title><rect x="39.9690%" y="645" width="0.0262%" height="15" fill="rgb(213,152,7)" fg:x="39738" fg:w="26"/><text x="40.2190%" y="655.50"></text></g><g><title>core::mem::take (18 samples, 0.02%)</title><rect x="39.9771%" y="629" width="0.0181%" height="15" fill="rgb(249,109,34)" fg:x="39746" fg:w="18"/><text x="40.2271%" y="639.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="39.9821%" y="613" width="0.0131%" height="15" fill="rgb(232,96,21)" fg:x="39751" fg:w="13"/><text x="40.2321%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.02%)</title><rect x="40.0163%" y="597" width="0.0151%" height="15" fill="rgb(228,27,39)" fg:x="39785" fg:w="15"/><text x="40.2663%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (11 samples, 0.01%)</title><rect x="40.0314%" y="597" width="0.0111%" height="15" fill="rgb(211,182,52)" fg:x="39800" fg:w="11"/><text x="40.2814%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (41 samples, 0.04%)</title><rect x="40.0093%" y="613" width="0.0412%" height="15" fill="rgb(234,178,38)" fg:x="39778" fg:w="41"/><text x="40.2593%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (14 samples, 0.01%)</title><rect x="40.0736%" y="517" width="0.0141%" height="15" fill="rgb(221,111,3)" fg:x="39842" fg:w="14"/><text x="40.3236%" y="527.50"></text></g><g><title>core::mem::take (10 samples, 0.01%)</title><rect x="40.0776%" y="501" width="0.0101%" height="15" fill="rgb(228,175,21)" fg:x="39846" fg:w="10"/><text x="40.3276%" y="511.50"></text></g><g><title>core::mem::drop (38 samples, 0.04%)</title><rect x="40.0505%" y="613" width="0.0382%" height="15" fill="rgb(228,174,43)" fg:x="39819" fg:w="38"/><text x="40.3005%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (38 samples, 0.04%)</title><rect x="40.0505%" y="597" width="0.0382%" height="15" fill="rgb(211,191,0)" fg:x="39819" fg:w="38"/><text x="40.3005%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (38 samples, 0.04%)</title><rect x="40.0505%" y="581" width="0.0382%" height="15" fill="rgb(253,117,3)" fg:x="39819" fg:w="38"/><text x="40.3005%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (26 samples, 0.03%)</title><rect x="40.0626%" y="565" width="0.0262%" height="15" fill="rgb(241,127,19)" fg:x="39831" fg:w="26"/><text x="40.3126%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (25 samples, 0.03%)</title><rect x="40.0636%" y="549" width="0.0251%" height="15" fill="rgb(218,103,12)" fg:x="39832" fg:w="25"/><text x="40.3136%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="40.0656%" y="533" width="0.0231%" height="15" fill="rgb(236,214,43)" fg:x="39834" fg:w="23"/><text x="40.3156%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (341 samples, 0.34%)</title><rect x="39.7477%" y="709" width="0.3430%" height="15" fill="rgb(244,144,19)" fg:x="39518" fg:w="341"/><text x="39.9977%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (136 samples, 0.14%)</title><rect x="39.9539%" y="693" width="0.1368%" height="15" fill="rgb(246,188,10)" fg:x="39723" fg:w="136"/><text x="40.2039%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (136 samples, 0.14%)</title><rect x="39.9539%" y="677" width="0.1368%" height="15" fill="rgb(212,193,33)" fg:x="39723" fg:w="136"/><text x="40.2039%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.14%)</title><rect x="39.9539%" y="661" width="0.1368%" height="15" fill="rgb(241,51,29)" fg:x="39723" fg:w="136"/><text x="40.2039%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (95 samples, 0.10%)</title><rect x="39.9952%" y="645" width="0.0956%" height="15" fill="rgb(211,58,19)" fg:x="39764" fg:w="95"/><text x="40.2452%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.10%)</title><rect x="39.9952%" y="629" width="0.0956%" height="15" fill="rgb(229,111,26)" fg:x="39764" fg:w="95"/><text x="40.2452%" y="639.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (816 samples, 0.82%)</title><rect x="39.2710%" y="725" width="0.8207%" height="15" fill="rgb(213,115,40)" fg:x="39044" fg:w="816"/><text x="39.5210%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="40.0917%" y="709" width="0.0624%" height="15" fill="rgb(209,56,44)" fg:x="39860" fg:w="62"/><text x="40.3417%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (62 samples, 0.06%)</title><rect x="40.0917%" y="693" width="0.0624%" height="15" fill="rgb(230,108,32)" fg:x="39860" fg:w="62"/><text x="40.3417%" y="703.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (67 samples, 0.07%)</title><rect x="40.0917%" y="725" width="0.0674%" height="15" fill="rgb(216,165,31)" fg:x="39860" fg:w="67"/><text x="40.3417%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="40.1591%" y="677" width="0.0131%" height="15" fill="rgb(218,122,21)" fg:x="39927" fg:w="13"/><text x="40.4091%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="40.2275%" y="613" width="0.0101%" height="15" fill="rgb(223,224,47)" fg:x="39995" fg:w="10"/><text x="40.4775%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="40.2124%" y="629" width="0.0443%" height="15" fill="rgb(238,102,44)" fg:x="39980" fg:w="44"/><text x="40.4624%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="40.2376%" y="613" width="0.0191%" height="15" fill="rgb(236,46,40)" fg:x="40005" fg:w="19"/><text x="40.4876%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (25 samples, 0.03%)</title><rect x="40.2567%" y="629" width="0.0251%" height="15" fill="rgb(247,202,50)" fg:x="40024" fg:w="25"/><text x="40.5067%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="40.2677%" y="613" width="0.0141%" height="15" fill="rgb(209,99,20)" fg:x="40035" fg:w="14"/><text x="40.5177%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="40.2698%" y="597" width="0.0121%" height="15" fill="rgb(252,27,34)" fg:x="40037" fg:w="12"/><text x="40.5198%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="40.2718%" y="581" width="0.0101%" height="15" fill="rgb(215,206,23)" fg:x="40039" fg:w="10"/><text x="40.5218%" y="591.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (137 samples, 0.14%)</title><rect x="40.1591%" y="725" width="0.1378%" height="15" fill="rgb(212,135,36)" fg:x="39927" fg:w="137"/><text x="40.4091%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (137 samples, 0.14%)</title><rect x="40.1591%" y="709" width="0.1378%" height="15" fill="rgb(240,189,1)" fg:x="39927" fg:w="137"/><text x="40.4091%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (137 samples, 0.14%)</title><rect x="40.1591%" y="693" width="0.1378%" height="15" fill="rgb(242,56,20)" fg:x="39927" fg:w="137"/><text x="40.4091%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (124 samples, 0.12%)</title><rect x="40.1722%" y="677" width="0.1247%" height="15" fill="rgb(247,132,33)" fg:x="39940" fg:w="124"/><text x="40.4222%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (114 samples, 0.11%)</title><rect x="40.1823%" y="661" width="0.1147%" height="15" fill="rgb(208,149,11)" fg:x="39950" fg:w="114"/><text x="40.4323%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (110 samples, 0.11%)</title><rect x="40.1863%" y="645" width="0.1106%" height="15" fill="rgb(211,33,11)" fg:x="39954" fg:w="110"/><text x="40.4363%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.01%)</title><rect x="40.2848%" y="629" width="0.0121%" height="15" fill="rgb(221,29,38)" fg:x="40052" fg:w="12"/><text x="40.5348%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="40.3281%" y="613" width="0.0302%" height="15" fill="rgb(206,182,49)" fg:x="40095" fg:w="30"/><text x="40.5781%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="40.3422%" y="597" width="0.0161%" height="15" fill="rgb(216,140,1)" fg:x="40109" fg:w="16"/><text x="40.5922%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (10 samples, 0.01%)</title><rect x="40.3593%" y="613" width="0.0101%" height="15" fill="rgb(232,57,40)" fg:x="40126" fg:w="10"/><text x="40.6093%" y="623.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (85 samples, 0.09%)</title><rect x="40.2969%" y="709" width="0.0855%" height="15" fill="rgb(224,186,18)" fg:x="40064" fg:w="85"/><text x="40.5469%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (85 samples, 0.09%)</title><rect x="40.2969%" y="693" width="0.0855%" height="15" fill="rgb(215,121,11)" fg:x="40064" fg:w="85"/><text x="40.5469%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (85 samples, 0.09%)</title><rect x="40.2969%" y="677" width="0.0855%" height="15" fill="rgb(245,147,10)" fg:x="40064" fg:w="85"/><text x="40.5469%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (75 samples, 0.08%)</title><rect x="40.3070%" y="661" width="0.0754%" height="15" fill="rgb(238,153,13)" fg:x="40074" fg:w="75"/><text x="40.5570%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (72 samples, 0.07%)</title><rect x="40.3100%" y="645" width="0.0724%" height="15" fill="rgb(233,108,0)" fg:x="40077" fg:w="72"/><text x="40.5600%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (67 samples, 0.07%)</title><rect x="40.3150%" y="629" width="0.0674%" height="15" fill="rgb(212,157,17)" fg:x="40082" fg:w="67"/><text x="40.5650%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (10 samples, 0.01%)</title><rect x="40.3724%" y="613" width="0.0101%" height="15" fill="rgb(225,213,38)" fg:x="40139" fg:w="10"/><text x="40.6224%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="40.4045%" y="613" width="0.0322%" height="15" fill="rgb(248,16,11)" fg:x="40171" fg:w="32"/><text x="40.6545%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="40.4186%" y="597" width="0.0181%" height="15" fill="rgb(241,33,4)" fg:x="40185" fg:w="18"/><text x="40.6686%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.01%)</title><rect x="40.4367%" y="613" width="0.0131%" height="15" fill="rgb(222,26,43)" fg:x="40203" fg:w="13"/><text x="40.6867%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="40.4387%" y="597" width="0.0111%" height="15" fill="rgb(243,29,36)" fg:x="40205" fg:w="11"/><text x="40.6887%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="40.4387%" y="581" width="0.0111%" height="15" fill="rgb(241,9,27)" fg:x="40205" fg:w="11"/><text x="40.6887%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (69 samples, 0.07%)</title><rect x="40.3905%" y="661" width="0.0694%" height="15" fill="rgb(205,117,26)" fg:x="40157" fg:w="69"/><text x="40.6405%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (65 samples, 0.07%)</title><rect x="40.3945%" y="645" width="0.0654%" height="15" fill="rgb(209,80,39)" fg:x="40161" fg:w="65"/><text x="40.6445%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (65 samples, 0.07%)</title><rect x="40.3945%" y="629" width="0.0654%" height="15" fill="rgb(239,155,6)" fg:x="40161" fg:w="65"/><text x="40.6445%" y="639.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (79 samples, 0.08%)</title><rect x="40.3824%" y="709" width="0.0795%" height="15" fill="rgb(212,104,12)" fg:x="40149" fg:w="79"/><text x="40.6324%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (79 samples, 0.08%)</title><rect x="40.3824%" y="693" width="0.0795%" height="15" fill="rgb(234,204,3)" fg:x="40149" fg:w="79"/><text x="40.6324%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (79 samples, 0.08%)</title><rect x="40.3824%" y="677" width="0.0795%" height="15" fill="rgb(251,218,7)" fg:x="40149" fg:w="79"/><text x="40.6324%" y="687.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.02%)</title><rect x="40.4719%" y="629" width="0.0161%" height="15" fill="rgb(221,81,32)" fg:x="40238" fg:w="16"/><text x="40.7219%" y="639.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="40.4699%" y="645" width="0.0211%" height="15" fill="rgb(214,152,26)" fg:x="40236" fg:w="21"/><text x="40.7199%" y="655.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (208 samples, 0.21%)</title><rect x="40.2969%" y="725" width="0.2092%" height="15" fill="rgb(223,22,3)" fg:x="40064" fg:w="208"/><text x="40.5469%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (44 samples, 0.04%)</title><rect x="40.4619%" y="709" width="0.0443%" height="15" fill="rgb(207,174,7)" fg:x="40228" fg:w="44"/><text x="40.7119%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (44 samples, 0.04%)</title><rect x="40.4619%" y="693" width="0.0443%" height="15" fill="rgb(224,19,52)" fg:x="40228" fg:w="44"/><text x="40.7119%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="40.4619%" y="677" width="0.0443%" height="15" fill="rgb(228,24,14)" fg:x="40228" fg:w="44"/><text x="40.7119%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="40.4619%" y="661" width="0.0443%" height="15" fill="rgb(230,153,43)" fg:x="40228" fg:w="44"/><text x="40.7119%" y="671.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (1,235 samples, 1.24%)</title><rect x="39.2710%" y="741" width="1.2422%" height="15" fill="rgb(231,106,12)" fg:x="39044" fg:w="1235"/><text x="39.5210%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (33 samples, 0.03%)</title><rect x="40.5443%" y="581" width="0.0332%" height="15" fill="rgb(215,92,2)" fg:x="40310" fg:w="33"/><text x="40.7943%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (15 samples, 0.02%)</title><rect x="40.5625%" y="565" width="0.0151%" height="15" fill="rgb(249,143,25)" fg:x="40328" fg:w="15"/><text x="40.8125%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (14 samples, 0.01%)</title><rect x="40.5866%" y="581" width="0.0141%" height="15" fill="rgb(252,7,35)" fg:x="40352" fg:w="14"/><text x="40.8366%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_leaf (10 samples, 0.01%)</title><rect x="40.6319%" y="565" width="0.0101%" height="15" fill="rgb(216,69,40)" fg:x="40397" fg:w="10"/><text x="40.8819%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (22 samples, 0.02%)</title><rect x="40.6781%" y="533" width="0.0221%" height="15" fill="rgb(240,36,33)" fg:x="40443" fg:w="22"/><text x="40.9281%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="40.6882%" y="517" width="0.0121%" height="15" fill="rgb(231,128,14)" fg:x="40453" fg:w="12"/><text x="40.9382%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (92 samples, 0.09%)</title><rect x="40.6107%" y="581" width="0.0925%" height="15" fill="rgb(245,143,14)" fg:x="40376" fg:w="92"/><text x="40.8607%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (61 samples, 0.06%)</title><rect x="40.6419%" y="565" width="0.0614%" height="15" fill="rgb(222,130,28)" fg:x="40407" fg:w="61"/><text x="40.8919%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (50 samples, 0.05%)</title><rect x="40.6530%" y="549" width="0.0503%" height="15" fill="rgb(212,10,48)" fg:x="40418" fg:w="50"/><text x="40.9030%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (208 samples, 0.21%)</title><rect x="40.5132%" y="725" width="0.2092%" height="15" fill="rgb(254,118,45)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (208 samples, 0.21%)</title><rect x="40.5132%" y="709" width="0.2092%" height="15" fill="rgb(228,6,45)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (208 samples, 0.21%)</title><rect x="40.5132%" y="693" width="0.2092%" height="15" fill="rgb(241,18,35)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (208 samples, 0.21%)</title><rect x="40.5132%" y="677" width="0.2092%" height="15" fill="rgb(227,214,53)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (208 samples, 0.21%)</title><rect x="40.5132%" y="661" width="0.2092%" height="15" fill="rgb(224,107,51)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (208 samples, 0.21%)</title><rect x="40.5132%" y="645" width="0.2092%" height="15" fill="rgb(248,60,28)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (208 samples, 0.21%)</title><rect x="40.5132%" y="629" width="0.2092%" height="15" fill="rgb(249,101,23)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (208 samples, 0.21%)</title><rect x="40.5132%" y="613" width="0.2092%" height="15" fill="rgb(228,51,19)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (208 samples, 0.21%)</title><rect x="40.5132%" y="597" width="0.2092%" height="15" fill="rgb(213,20,6)" fg:x="40279" fg:w="208"/><text x="40.7632%" y="607.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="40.7083%" y="581" width="0.0141%" height="15" fill="rgb(212,124,10)" fg:x="40473" fg:w="14"/><text x="40.9583%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.01%)</title><rect x="40.7405%" y="565" width="0.0101%" height="15" fill="rgb(248,3,40)" fg:x="40505" fg:w="10"/><text x="40.9905%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (24 samples, 0.02%)</title><rect x="40.7646%" y="565" width="0.0241%" height="15" fill="rgb(223,178,23)" fg:x="40529" fg:w="24"/><text x="41.0146%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (18 samples, 0.02%)</title><rect x="40.7707%" y="549" width="0.0181%" height="15" fill="rgb(240,132,45)" fg:x="40535" fg:w="18"/><text x="41.0207%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="40.7767%" y="533" width="0.0121%" height="15" fill="rgb(245,164,36)" fg:x="40541" fg:w="12"/><text x="41.0267%" y="543.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="40.7888%" y="565" width="0.0191%" height="15" fill="rgb(231,188,53)" fg:x="40553" fg:w="19"/><text x="41.0388%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (10 samples, 0.01%)</title><rect x="40.7978%" y="549" width="0.0101%" height="15" fill="rgb(237,198,39)" fg:x="40562" fg:w="10"/><text x="41.0478%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (87 samples, 0.09%)</title><rect x="40.7224%" y="645" width="0.0875%" height="15" fill="rgb(223,120,35)" fg:x="40487" fg:w="87"/><text x="40.9724%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (87 samples, 0.09%)</title><rect x="40.7224%" y="629" width="0.0875%" height="15" fill="rgb(253,107,49)" fg:x="40487" fg:w="87"/><text x="40.9724%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (87 samples, 0.09%)</title><rect x="40.7224%" y="613" width="0.0875%" height="15" fill="rgb(216,44,31)" fg:x="40487" fg:w="87"/><text x="40.9724%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (87 samples, 0.09%)</title><rect x="40.7224%" y="597" width="0.0875%" height="15" fill="rgb(253,87,21)" fg:x="40487" fg:w="87"/><text x="40.9724%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (87 samples, 0.09%)</title><rect x="40.7224%" y="581" width="0.0875%" height="15" fill="rgb(226,18,2)" fg:x="40487" fg:w="87"/><text x="40.9724%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (13 samples, 0.01%)</title><rect x="40.8159%" y="517" width="0.0131%" height="15" fill="rgb(216,8,46)" fg:x="40580" fg:w="13"/><text x="41.0659%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="40.8189%" y="501" width="0.0101%" height="15" fill="rgb(226,140,39)" fg:x="40583" fg:w="10"/><text x="41.0689%" y="511.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="40.8189%" y="485" width="0.0101%" height="15" fill="rgb(221,194,54)" fg:x="40583" fg:w="10"/><text x="41.0689%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (324 samples, 0.33%)</title><rect x="40.5132%" y="741" width="0.3259%" height="15" fill="rgb(213,92,11)" fg:x="40279" fg:w="324"/><text x="40.7632%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (116 samples, 0.12%)</title><rect x="40.7224%" y="725" width="0.1167%" height="15" fill="rgb(229,162,46)" fg:x="40487" fg:w="116"/><text x="40.9724%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (116 samples, 0.12%)</title><rect x="40.7224%" y="709" width="0.1167%" height="15" fill="rgb(214,111,36)" fg:x="40487" fg:w="116"/><text x="40.9724%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.12%)</title><rect x="40.7224%" y="693" width="0.1167%" height="15" fill="rgb(207,6,21)" fg:x="40487" fg:w="116"/><text x="40.9724%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (116 samples, 0.12%)</title><rect x="40.7224%" y="677" width="0.1167%" height="15" fill="rgb(213,127,38)" fg:x="40487" fg:w="116"/><text x="40.9724%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.12%)</title><rect x="40.7224%" y="661" width="0.1167%" height="15" fill="rgb(238,118,32)" fg:x="40487" fg:w="116"/><text x="40.9724%" y="671.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="40.8099%" y="645" width="0.0292%" height="15" fill="rgb(240,139,39)" fg:x="40574" fg:w="29"/><text x="41.0599%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (29 samples, 0.03%)</title><rect x="40.8099%" y="629" width="0.0292%" height="15" fill="rgb(235,10,37)" fg:x="40574" fg:w="29"/><text x="41.0599%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (29 samples, 0.03%)</title><rect x="40.8099%" y="613" width="0.0292%" height="15" fill="rgb(249,171,38)" fg:x="40574" fg:w="29"/><text x="41.0599%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (23 samples, 0.02%)</title><rect x="40.8159%" y="597" width="0.0231%" height="15" fill="rgb(242,144,32)" fg:x="40580" fg:w="23"/><text x="41.0659%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="40.8159%" y="581" width="0.0231%" height="15" fill="rgb(217,117,21)" fg:x="40580" fg:w="23"/><text x="41.0659%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="40.8159%" y="565" width="0.0231%" height="15" fill="rgb(249,87,1)" fg:x="40580" fg:w="23"/><text x="41.0659%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="40.8159%" y="549" width="0.0231%" height="15" fill="rgb(248,196,48)" fg:x="40580" fg:w="23"/><text x="41.0659%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="40.8159%" y="533" width="0.0231%" height="15" fill="rgb(251,206,33)" fg:x="40580" fg:w="23"/><text x="41.0659%" y="543.50"></text></g><g><title>core::mem::drop (10 samples, 0.01%)</title><rect x="40.8290%" y="517" width="0.0101%" height="15" fill="rgb(232,141,28)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (10 samples, 0.01%)</title><rect x="40.8290%" y="501" width="0.0101%" height="15" fill="rgb(209,167,14)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="40.8290%" y="485" width="0.0101%" height="15" fill="rgb(225,11,50)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (10 samples, 0.01%)</title><rect x="40.8290%" y="469" width="0.0101%" height="15" fill="rgb(209,50,20)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="40.8290%" y="453" width="0.0101%" height="15" fill="rgb(212,17,46)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (10 samples, 0.01%)</title><rect x="40.8290%" y="437" width="0.0101%" height="15" fill="rgb(216,101,39)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="40.8290%" y="421" width="0.0101%" height="15" fill="rgb(212,228,48)" fg:x="40593" fg:w="10"/><text x="41.0790%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (54 samples, 0.05%)</title><rect x="40.8390%" y="741" width="0.0543%" height="15" fill="rgb(250,6,50)" fg:x="40603" fg:w="54"/><text x="41.0890%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (54 samples, 0.05%)</title><rect x="40.8390%" y="725" width="0.0543%" height="15" fill="rgb(250,160,48)" fg:x="40603" fg:w="54"/><text x="41.0890%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (54 samples, 0.05%)</title><rect x="40.8390%" y="709" width="0.0543%" height="15" fill="rgb(244,216,33)" fg:x="40603" fg:w="54"/><text x="41.0890%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (54 samples, 0.05%)</title><rect x="40.8390%" y="693" width="0.0543%" height="15" fill="rgb(207,157,5)" fg:x="40603" fg:w="54"/><text x="41.0890%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (54 samples, 0.05%)</title><rect x="40.8390%" y="677" width="0.0543%" height="15" fill="rgb(228,199,8)" fg:x="40603" fg:w="54"/><text x="41.0890%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (49 samples, 0.05%)</title><rect x="40.8441%" y="661" width="0.0493%" height="15" fill="rgb(227,80,20)" fg:x="40608" fg:w="49"/><text x="41.0941%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (49 samples, 0.05%)</title><rect x="40.8441%" y="645" width="0.0493%" height="15" fill="rgb(222,9,33)" fg:x="40608" fg:w="49"/><text x="41.0941%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (49 samples, 0.05%)</title><rect x="40.8441%" y="629" width="0.0493%" height="15" fill="rgb(239,44,28)" fg:x="40608" fg:w="49"/><text x="41.0941%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (49 samples, 0.05%)</title><rect x="40.8441%" y="613" width="0.0493%" height="15" fill="rgb(249,187,43)" fg:x="40608" fg:w="49"/><text x="41.0941%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (40 samples, 0.04%)</title><rect x="40.8531%" y="597" width="0.0402%" height="15" fill="rgb(216,141,28)" fg:x="40617" fg:w="40"/><text x="41.1031%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (40 samples, 0.04%)</title><rect x="40.8531%" y="581" width="0.0402%" height="15" fill="rgb(230,154,53)" fg:x="40617" fg:w="40"/><text x="41.1031%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (25 samples, 0.03%)</title><rect x="40.8682%" y="565" width="0.0251%" height="15" fill="rgb(227,82,4)" fg:x="40632" fg:w="25"/><text x="41.1182%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="40.9205%" y="629" width="0.0131%" height="15" fill="rgb(220,107,16)" fg:x="40684" fg:w="13"/><text x="41.1705%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (43 samples, 0.04%)</title><rect x="40.8934%" y="693" width="0.0432%" height="15" fill="rgb(207,187,2)" fg:x="40657" fg:w="43"/><text x="41.1434%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (43 samples, 0.04%)</title><rect x="40.8934%" y="677" width="0.0432%" height="15" fill="rgb(210,162,52)" fg:x="40657" fg:w="43"/><text x="41.1434%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (43 samples, 0.04%)</title><rect x="40.8934%" y="661" width="0.0432%" height="15" fill="rgb(217,216,49)" fg:x="40657" fg:w="43"/><text x="41.1434%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34 samples, 0.03%)</title><rect x="40.9024%" y="645" width="0.0342%" height="15" fill="rgb(218,146,49)" fg:x="40666" fg:w="34"/><text x="41.1524%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.02%)</title><rect x="40.9406%" y="677" width="0.0161%" height="15" fill="rgb(216,55,40)" fg:x="40704" fg:w="16"/><text x="41.1906%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.02%)</title><rect x="40.9366%" y="693" width="0.0211%" height="15" fill="rgb(208,196,21)" fg:x="40700" fg:w="21"/><text x="41.1866%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (82 samples, 0.08%)</title><rect x="40.8934%" y="709" width="0.0825%" height="15" fill="rgb(242,117,42)" fg:x="40657" fg:w="82"/><text x="41.1434%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (18 samples, 0.02%)</title><rect x="40.9577%" y="693" width="0.0181%" height="15" fill="rgb(210,11,23)" fg:x="40721" fg:w="18"/><text x="41.2077%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u16 (18 samples, 0.02%)</title><rect x="40.9577%" y="677" width="0.0181%" height="15" fill="rgb(217,110,2)" fg:x="40721" fg:w="18"/><text x="41.2077%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="40.9597%" y="661" width="0.0161%" height="15" fill="rgb(229,77,54)" fg:x="40723" fg:w="16"/><text x="41.2097%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="40.9597%" y="645" width="0.0161%" height="15" fill="rgb(218,53,16)" fg:x="40723" fg:w="16"/><text x="41.2097%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="40.9597%" y="629" width="0.0161%" height="15" fill="rgb(215,38,13)" fg:x="40723" fg:w="16"/><text x="41.2097%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="40.9819%" y="677" width="0.0392%" height="15" fill="rgb(235,42,18)" fg:x="40745" fg:w="39"/><text x="41.2319%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="40.9839%" y="661" width="0.0372%" height="15" fill="rgb(219,66,54)" fg:x="40747" fg:w="37"/><text x="41.2339%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (22 samples, 0.02%)</title><rect x="40.9990%" y="645" width="0.0221%" height="15" fill="rgb(222,205,4)" fg:x="40762" fg:w="22"/><text x="41.2490%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (22 samples, 0.02%)</title><rect x="40.9990%" y="629" width="0.0221%" height="15" fill="rgb(227,213,46)" fg:x="40762" fg:w="22"/><text x="41.2490%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.01%)</title><rect x="41.0473%" y="629" width="0.0111%" height="15" fill="rgb(250,145,42)" fg:x="40810" fg:w="11"/><text x="41.2973%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (105 samples, 0.11%)</title><rect x="40.9758%" y="709" width="0.1056%" height="15" fill="rgb(219,15,2)" fg:x="40739" fg:w="105"/><text x="41.2258%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (105 samples, 0.11%)</title><rect x="40.9758%" y="693" width="0.1056%" height="15" fill="rgb(231,181,52)" fg:x="40739" fg:w="105"/><text x="41.2258%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (58 samples, 0.06%)</title><rect x="41.0231%" y="677" width="0.0583%" height="15" fill="rgb(235,1,42)" fg:x="40786" fg:w="58"/><text x="41.2731%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (58 samples, 0.06%)</title><rect x="41.0231%" y="661" width="0.0583%" height="15" fill="rgb(249,88,27)" fg:x="40786" fg:w="58"/><text x="41.2731%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (54 samples, 0.05%)</title><rect x="41.0271%" y="645" width="0.0543%" height="15" fill="rgb(235,145,16)" fg:x="40790" fg:w="54"/><text x="41.2771%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (23 samples, 0.02%)</title><rect x="41.0583%" y="629" width="0.0231%" height="15" fill="rgb(237,114,19)" fg:x="40821" fg:w="23"/><text x="41.3083%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12 samples, 0.01%)</title><rect x="41.0965%" y="677" width="0.0121%" height="15" fill="rgb(238,51,50)" fg:x="40859" fg:w="12"/><text x="41.3465%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (29 samples, 0.03%)</title><rect x="41.0915%" y="693" width="0.0292%" height="15" fill="rgb(205,194,25)" fg:x="40854" fg:w="29"/><text x="41.3415%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.01%)</title><rect x="41.1086%" y="677" width="0.0121%" height="15" fill="rgb(215,203,17)" fg:x="40871" fg:w="12"/><text x="41.3586%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (13 samples, 0.01%)</title><rect x="41.1217%" y="677" width="0.0131%" height="15" fill="rgb(233,112,49)" fg:x="40884" fg:w="13"/><text x="41.3717%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (17 samples, 0.02%)</title><rect x="41.1207%" y="693" width="0.0171%" height="15" fill="rgb(241,130,26)" fg:x="40883" fg:w="17"/><text x="41.3707%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (51 samples, 0.05%)</title><rect x="41.1378%" y="693" width="0.0513%" height="15" fill="rgb(252,223,19)" fg:x="40900" fg:w="51"/><text x="41.3878%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (45 samples, 0.05%)</title><rect x="41.1438%" y="677" width="0.0453%" height="15" fill="rgb(211,95,25)" fg:x="40906" fg:w="45"/><text x="41.3938%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (33 samples, 0.03%)</title><rect x="41.1559%" y="661" width="0.0332%" height="15" fill="rgb(251,182,27)" fg:x="40918" fg:w="33"/><text x="41.4059%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (46 samples, 0.05%)</title><rect x="41.1911%" y="693" width="0.0463%" height="15" fill="rgb(238,24,4)" fg:x="40953" fg:w="46"/><text x="41.4411%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (13 samples, 0.01%)</title><rect x="41.2384%" y="677" width="0.0131%" height="15" fill="rgb(224,220,25)" fg:x="41000" fg:w="13"/><text x="41.4884%" y="687.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (3,272 samples, 3.29%)</title><rect x="37.9614%" y="757" width="3.2910%" height="15" fill="rgb(239,133,26)" fg:x="37742" fg:w="3272"/><text x="38.2114%" y="767.50">byt..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (357 samples, 0.36%)</title><rect x="40.8934%" y="741" width="0.3591%" height="15" fill="rgb(211,94,48)" fg:x="40657" fg:w="357"/><text x="41.1434%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (357 samples, 0.36%)</title><rect x="40.8934%" y="725" width="0.3591%" height="15" fill="rgb(239,87,6)" fg:x="40657" fg:w="357"/><text x="41.1434%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (170 samples, 0.17%)</title><rect x="41.0815%" y="709" width="0.1710%" height="15" fill="rgb(227,62,0)" fg:x="40844" fg:w="170"/><text x="41.3315%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (15 samples, 0.02%)</title><rect x="41.2374%" y="693" width="0.0151%" height="15" fill="rgb(211,226,4)" fg:x="40999" fg:w="15"/><text x="41.4874%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.01%)</title><rect x="41.2524%" y="661" width="0.0101%" height="15" fill="rgb(253,38,52)" fg:x="41014" fg:w="10"/><text x="41.5024%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="41.2524%" y="645" width="0.0101%" height="15" fill="rgb(229,126,40)" fg:x="41014" fg:w="10"/><text x="41.5024%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="41.2524%" y="629" width="0.0101%" height="15" fill="rgb(229,165,44)" fg:x="41014" fg:w="10"/><text x="41.5024%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="41.2524%" y="613" width="0.0101%" height="15" fill="rgb(247,95,47)" fg:x="41014" fg:w="10"/><text x="41.5024%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="41.2625%" y="629" width="0.0101%" height="15" fill="rgb(216,140,30)" fg:x="41024" fg:w="10"/><text x="41.5125%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (12 samples, 0.01%)</title><rect x="41.2625%" y="661" width="0.0121%" height="15" fill="rgb(246,214,8)" fg:x="41024" fg:w="12"/><text x="41.5125%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (12 samples, 0.01%)</title><rect x="41.2625%" y="645" width="0.0121%" height="15" fill="rgb(227,224,15)" fg:x="41024" fg:w="12"/><text x="41.5125%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (28 samples, 0.03%)</title><rect x="41.2524%" y="741" width="0.0282%" height="15" fill="rgb(233,175,4)" fg:x="41014" fg:w="28"/><text x="41.5024%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (28 samples, 0.03%)</title><rect x="41.2524%" y="725" width="0.0282%" height="15" fill="rgb(221,66,45)" fg:x="41014" fg:w="28"/><text x="41.5024%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.03%)</title><rect x="41.2524%" y="709" width="0.0282%" height="15" fill="rgb(221,178,18)" fg:x="41014" fg:w="28"/><text x="41.5024%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (28 samples, 0.03%)</title><rect x="41.2524%" y="693" width="0.0282%" height="15" fill="rgb(213,81,29)" fg:x="41014" fg:w="28"/><text x="41.5024%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (28 samples, 0.03%)</title><rect x="41.2524%" y="677" width="0.0282%" height="15" fill="rgb(220,89,49)" fg:x="41014" fg:w="28"/><text x="41.5024%" y="687.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (3,316 samples, 3.34%)</title><rect x="37.9614%" y="773" width="3.3353%" height="15" fill="rgb(227,60,33)" fg:x="37742" fg:w="3316"/><text x="38.2114%" y="783.50">byt..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (44 samples, 0.04%)</title><rect x="41.2524%" y="757" width="0.0443%" height="15" fill="rgb(205,113,12)" fg:x="41014" fg:w="44"/><text x="41.5024%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (16 samples, 0.02%)</title><rect x="41.2806%" y="741" width="0.0161%" height="15" fill="rgb(211,32,1)" fg:x="41042" fg:w="16"/><text x="41.5306%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (16 samples, 0.02%)</title><rect x="41.2806%" y="725" width="0.0161%" height="15" fill="rgb(246,2,12)" fg:x="41042" fg:w="16"/><text x="41.5306%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (16 samples, 0.02%)</title><rect x="41.2806%" y="709" width="0.0161%" height="15" fill="rgb(243,37,27)" fg:x="41042" fg:w="16"/><text x="41.5306%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (16 samples, 0.02%)</title><rect x="41.2806%" y="693" width="0.0161%" height="15" fill="rgb(248,211,31)" fg:x="41042" fg:w="16"/><text x="41.5306%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (11 samples, 0.01%)</title><rect x="41.2856%" y="677" width="0.0111%" height="15" fill="rgb(242,146,47)" fg:x="41047" fg:w="11"/><text x="41.5356%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.01%)</title><rect x="41.3259%" y="693" width="0.0101%" height="15" fill="rgb(206,70,20)" fg:x="41087" fg:w="10"/><text x="41.5759%" y="703.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (17 samples, 0.02%)</title><rect x="41.3198%" y="725" width="0.0171%" height="15" fill="rgb(215,10,51)" fg:x="41081" fg:w="17"/><text x="41.5698%" y="735.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (15 samples, 0.02%)</title><rect x="41.3218%" y="709" width="0.0151%" height="15" fill="rgb(243,178,53)" fg:x="41083" fg:w="15"/><text x="41.5718%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="41.3480%" y="677" width="0.0121%" height="15" fill="rgb(233,221,20)" fg:x="41109" fg:w="12"/><text x="41.5980%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (19 samples, 0.02%)</title><rect x="41.3450%" y="693" width="0.0191%" height="15" fill="rgb(218,95,35)" fg:x="41106" fg:w="19"/><text x="41.5950%" y="703.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (25 samples, 0.03%)</title><rect x="41.3399%" y="725" width="0.0251%" height="15" fill="rgb(229,13,5)" fg:x="41101" fg:w="25"/><text x="41.5899%" y="735.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (20 samples, 0.02%)</title><rect x="41.3450%" y="709" width="0.0201%" height="15" fill="rgb(252,164,30)" fg:x="41106" fg:w="20"/><text x="41.5950%" y="719.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify (74 samples, 0.07%)</title><rect x="41.2967%" y="773" width="0.0744%" height="15" fill="rgb(232,68,36)" fg:x="41058" fg:w="74"/><text x="41.5467%" y="783.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify_block (74 samples, 0.07%)</title><rect x="41.2967%" y="757" width="0.0744%" height="15" fill="rgb(219,59,54)" fg:x="41058" fg:w="74"/><text x="41.5467%" y="767.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::instruction_effect (74 samples, 0.07%)</title><rect x="41.2967%" y="741" width="0.0744%" height="15" fill="rgb(250,92,33)" fg:x="41058" fg:w="74"/><text x="41.5467%" y="751.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (4,846 samples, 4.87%)</title><rect x="36.5000%" y="805" width="4.8742%" height="15" fill="rgb(229,162,54)" fg:x="36289" fg:w="4846"/><text x="36.7500%" y="815.50">byteco..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (4,839 samples, 4.87%)</title><rect x="36.5070%" y="789" width="4.8671%" height="15" fill="rgb(244,114,52)" fg:x="36296" fg:w="4839"/><text x="36.7570%" y="799.50">byteco..</text></g><g><title>bytecode_verifier::control_flow::verify (24 samples, 0.02%)</title><rect x="41.3741%" y="741" width="0.0241%" height="15" fill="rgb(212,211,43)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="751.50"></text></g><g><title>bytecode_verifier::control_flow::check_jumps (24 samples, 0.02%)</title><rect x="41.3741%" y="725" width="0.0241%" height="15" fill="rgb(226,147,8)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="735.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits (24 samples, 0.02%)</title><rect x="41.3741%" y="709" width="0.0241%" height="15" fill="rgb(226,23,13)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="719.50"></text></g><g><title>bytecode_verifier::control_flow::count_loop_depth (24 samples, 0.02%)</title><rect x="41.3741%" y="693" width="0.0241%" height="15" fill="rgb(240,63,4)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="41.3741%" y="677" width="0.0241%" height="15" fill="rgb(221,1,32)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="41.3741%" y="661" width="0.0241%" height="15" fill="rgb(242,117,10)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="41.3741%" y="645" width="0.0241%" height="15" fill="rgb(249,172,44)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (24 samples, 0.02%)</title><rect x="41.3741%" y="629" width="0.0241%" height="15" fill="rgb(244,46,45)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.02%)</title><rect x="41.3741%" y="613" width="0.0241%" height="15" fill="rgb(206,43,17)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="41.3741%" y="597" width="0.0241%" height="15" fill="rgb(239,218,39)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.02%)</title><rect x="41.3741%" y="581" width="0.0241%" height="15" fill="rgb(208,169,54)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.02%)</title><rect x="41.3741%" y="565" width="0.0241%" height="15" fill="rgb(247,25,42)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="575.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.02%)</title><rect x="41.3741%" y="549" width="0.0241%" height="15" fill="rgb(226,23,31)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="559.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.02%)</title><rect x="41.3741%" y="533" width="0.0241%" height="15" fill="rgb(247,16,28)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="543.50"></text></g><g><title>_int_realloc (24 samples, 0.02%)</title><rect x="41.3741%" y="517" width="0.0241%" height="15" fill="rgb(231,147,38)" fg:x="41135" fg:w="24"/><text x="41.6241%" y="527.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="41.3782%" y="501" width="0.0201%" height="15" fill="rgb(253,81,48)" fg:x="41139" fg:w="20"/><text x="41.6282%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="41.4053%" y="709" width="0.0211%" height="15" fill="rgb(249,222,43)" fg:x="41166" fg:w="21"/><text x="41.6553%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.01%)</title><rect x="41.4325%" y="709" width="0.0141%" height="15" fill="rgb(221,3,27)" fg:x="41193" fg:w="14"/><text x="41.6825%" y="719.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (64 samples, 0.06%)</title><rect x="41.3983%" y="725" width="0.0644%" height="15" fill="rgb(228,180,5)" fg:x="41159" fg:w="64"/><text x="41.6483%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="41.4627%" y="645" width="0.0211%" height="15" fill="rgb(227,131,42)" fg:x="41223" fg:w="21"/><text x="41.7127%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.02%)</title><rect x="41.4627%" y="629" width="0.0211%" height="15" fill="rgb(212,3,39)" fg:x="41223" fg:w="21"/><text x="41.7127%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.02%)</title><rect x="41.4627%" y="613" width="0.0211%" height="15" fill="rgb(226,45,5)" fg:x="41223" fg:w="21"/><text x="41.7127%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.02%)</title><rect x="41.4627%" y="597" width="0.0211%" height="15" fill="rgb(215,167,45)" fg:x="41223" fg:w="21"/><text x="41.7127%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.01%)</title><rect x="41.4717%" y="581" width="0.0121%" height="15" fill="rgb(250,218,53)" fg:x="41232" fg:w="12"/><text x="41.7217%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="41.4627%" y="693" width="0.0272%" height="15" fill="rgb(207,140,0)" fg:x="41223" fg:w="27"/><text x="41.7127%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="41.4627%" y="677" width="0.0272%" height="15" fill="rgb(238,133,51)" fg:x="41223" fg:w="27"/><text x="41.7127%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (27 samples, 0.03%)</title><rect x="41.4627%" y="661" width="0.0272%" height="15" fill="rgb(218,203,53)" fg:x="41223" fg:w="27"/><text x="41.7127%" y="671.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (95 samples, 0.10%)</title><rect x="41.3983%" y="741" width="0.0956%" height="15" fill="rgb(226,184,25)" fg:x="41159" fg:w="95"/><text x="41.6483%" y="751.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (31 samples, 0.03%)</title><rect x="41.4627%" y="725" width="0.0312%" height="15" fill="rgb(231,121,21)" fg:x="41223" fg:w="31"/><text x="41.7127%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="41.4627%" y="709" width="0.0312%" height="15" fill="rgb(251,14,34)" fg:x="41223" fg:w="31"/><text x="41.7127%" y="719.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="41.4969%" y="709" width="0.0101%" height="15" fill="rgb(249,193,11)" fg:x="41257" fg:w="10"/><text x="41.7469%" y="719.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (11 samples, 0.01%)</title><rect x="41.5069%" y="709" width="0.0111%" height="15" fill="rgb(220,172,37)" fg:x="41267" fg:w="11"/><text x="41.7569%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (11 samples, 0.01%)</title><rect x="41.5069%" y="693" width="0.0111%" height="15" fill="rgb(231,229,43)" fg:x="41267" fg:w="11"/><text x="41.7569%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (11 samples, 0.01%)</title><rect x="41.5069%" y="677" width="0.0111%" height="15" fill="rgb(250,161,5)" fg:x="41267" fg:w="11"/><text x="41.7569%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (37 samples, 0.04%)</title><rect x="41.5260%" y="693" width="0.0372%" height="15" fill="rgb(218,225,18)" fg:x="41286" fg:w="37"/><text x="41.7760%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="41.5260%" y="677" width="0.0372%" height="15" fill="rgb(245,45,42)" fg:x="41286" fg:w="37"/><text x="41.7760%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (24 samples, 0.02%)</title><rect x="41.5391%" y="661" width="0.0241%" height="15" fill="rgb(211,115,1)" fg:x="41299" fg:w="24"/><text x="41.7891%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="41.5391%" y="645" width="0.0241%" height="15" fill="rgb(248,133,52)" fg:x="41299" fg:w="24"/><text x="41.7891%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (44 samples, 0.04%)</title><rect x="41.5260%" y="709" width="0.0443%" height="15" fill="rgb(238,100,21)" fg:x="41286" fg:w="44"/><text x="41.7760%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.02%)</title><rect x="41.5703%" y="661" width="0.0231%" height="15" fill="rgb(247,144,11)" fg:x="41330" fg:w="23"/><text x="41.8203%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (34 samples, 0.03%)</title><rect x="41.5703%" y="709" width="0.0342%" height="15" fill="rgb(206,164,16)" fg:x="41330" fg:w="34"/><text x="41.8203%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (34 samples, 0.03%)</title><rect x="41.5703%" y="693" width="0.0342%" height="15" fill="rgb(222,34,3)" fg:x="41330" fg:w="34"/><text x="41.8203%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (34 samples, 0.03%)</title><rect x="41.5703%" y="677" width="0.0342%" height="15" fill="rgb(248,82,4)" fg:x="41330" fg:w="34"/><text x="41.8203%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="41.5934%" y="661" width="0.0111%" height="15" fill="rgb(228,81,46)" fg:x="41353" fg:w="11"/><text x="41.8434%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (11 samples, 0.01%)</title><rect x="41.5934%" y="645" width="0.0111%" height="15" fill="rgb(227,67,47)" fg:x="41353" fg:w="11"/><text x="41.8434%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (11 samples, 0.01%)</title><rect x="41.5934%" y="629" width="0.0111%" height="15" fill="rgb(215,93,53)" fg:x="41353" fg:w="11"/><text x="41.8434%" y="639.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (116 samples, 0.12%)</title><rect x="41.4938%" y="725" width="0.1167%" height="15" fill="rgb(248,194,39)" fg:x="41254" fg:w="116"/><text x="41.7438%" y="735.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (15 samples, 0.02%)</title><rect x="41.6105%" y="725" width="0.0151%" height="15" fill="rgb(215,5,19)" fg:x="41370" fg:w="15"/><text x="41.8605%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (15 samples, 0.02%)</title><rect x="41.6105%" y="709" width="0.0151%" height="15" fill="rgb(226,215,51)" fg:x="41370" fg:w="15"/><text x="41.8605%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.02%)</title><rect x="41.6105%" y="693" width="0.0151%" height="15" fill="rgb(225,56,26)" fg:x="41370" fg:w="15"/><text x="41.8605%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (15 samples, 0.02%)</title><rect x="41.6105%" y="677" width="0.0151%" height="15" fill="rgb(222,75,29)" fg:x="41370" fg:w="15"/><text x="41.8605%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="41.6125%" y="661" width="0.0131%" height="15" fill="rgb(236,139,6)" fg:x="41372" fg:w="13"/><text x="41.8625%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="41.6125%" y="645" width="0.0131%" height="15" fill="rgb(223,137,36)" fg:x="41372" fg:w="13"/><text x="41.8625%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="41.6125%" y="629" width="0.0131%" height="15" fill="rgb(226,99,2)" fg:x="41372" fg:w="13"/><text x="41.8625%" y="639.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (251 samples, 0.25%)</title><rect x="41.3741%" y="805" width="0.2525%" height="15" fill="rgb(206,133,23)" fg:x="41135" fg:w="251"/><text x="41.6241%" y="815.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (251 samples, 0.25%)</title><rect x="41.3741%" y="789" width="0.2525%" height="15" fill="rgb(243,173,15)" fg:x="41135" fg:w="251"/><text x="41.6241%" y="799.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (251 samples, 0.25%)</title><rect x="41.3741%" y="773" width="0.2525%" height="15" fill="rgb(228,69,28)" fg:x="41135" fg:w="251"/><text x="41.6241%" y="783.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (251 samples, 0.25%)</title><rect x="41.3741%" y="757" width="0.2525%" height="15" fill="rgb(212,51,22)" fg:x="41135" fg:w="251"/><text x="41.6241%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (132 samples, 0.13%)</title><rect x="41.4938%" y="741" width="0.1328%" height="15" fill="rgb(227,113,0)" fg:x="41254" fg:w="132"/><text x="41.7438%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.01%)</title><rect x="41.6357%" y="725" width="0.0101%" height="15" fill="rgb(252,84,27)" fg:x="41395" fg:w="10"/><text x="41.8857%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.02%)</title><rect x="41.6578%" y="709" width="0.0181%" height="15" fill="rgb(223,145,39)" fg:x="41417" fg:w="18"/><text x="41.9078%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="41.6618%" y="693" width="0.0141%" height="15" fill="rgb(239,219,30)" fg:x="41421" fg:w="14"/><text x="41.9118%" y="703.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (39 samples, 0.04%)</title><rect x="41.6457%" y="725" width="0.0392%" height="15" fill="rgb(224,196,39)" fg:x="41405" fg:w="39"/><text x="41.8957%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="41.6859%" y="693" width="0.0171%" height="15" fill="rgb(205,35,43)" fg:x="41445" fg:w="17"/><text x="41.9359%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="41.7121%" y="645" width="0.0211%" height="15" fill="rgb(228,201,21)" fg:x="41471" fg:w="21"/><text x="41.9621%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="41.7151%" y="629" width="0.0181%" height="15" fill="rgb(237,118,16)" fg:x="41474" fg:w="18"/><text x="41.9651%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="41.7161%" y="613" width="0.0171%" height="15" fill="rgb(241,17,19)" fg:x="41475" fg:w="17"/><text x="41.9661%" y="623.50"></text></g><g><title>&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="41.6849%" y="725" width="0.0513%" height="15" fill="rgb(214,10,25)" fg:x="41444" fg:w="51"/><text x="41.9349%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="41.6849%" y="709" width="0.0513%" height="15" fill="rgb(238,37,29)" fg:x="41444" fg:w="51"/><text x="41.9349%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.03%)</title><rect x="41.7030%" y="693" width="0.0332%" height="15" fill="rgb(253,83,25)" fg:x="41462" fg:w="33"/><text x="41.9530%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.03%)</title><rect x="41.7030%" y="677" width="0.0332%" height="15" fill="rgb(234,192,12)" fg:x="41462" fg:w="33"/><text x="41.9530%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.03%)</title><rect x="41.7030%" y="661" width="0.0332%" height="15" fill="rgb(241,216,45)" fg:x="41462" fg:w="33"/><text x="41.9530%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="41.7503%" y="677" width="0.0121%" height="15" fill="rgb(242,22,33)" fg:x="41509" fg:w="12"/><text x="42.0003%" y="687.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (29 samples, 0.03%)</title><rect x="41.7362%" y="725" width="0.0292%" height="15" fill="rgb(231,105,49)" fg:x="41495" fg:w="29"/><text x="41.9862%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (29 samples, 0.03%)</title><rect x="41.7362%" y="709" width="0.0292%" height="15" fill="rgb(218,204,15)" fg:x="41495" fg:w="29"/><text x="41.9862%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (29 samples, 0.03%)</title><rect x="41.7362%" y="693" width="0.0292%" height="15" fill="rgb(235,138,41)" fg:x="41495" fg:w="29"/><text x="41.9862%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="41.7785%" y="661" width="0.0141%" height="15" fill="rgb(246,0,9)" fg:x="41537" fg:w="14"/><text x="42.0285%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="41.7755%" y="725" width="0.0191%" height="15" fill="rgb(210,74,4)" fg:x="41534" fg:w="19"/><text x="42.0255%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="41.7775%" y="709" width="0.0171%" height="15" fill="rgb(250,60,41)" fg:x="41536" fg:w="17"/><text x="42.0275%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="41.7775%" y="693" width="0.0171%" height="15" fill="rgb(220,115,12)" fg:x="41536" fg:w="17"/><text x="42.0275%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (16 samples, 0.02%)</title><rect x="41.7785%" y="677" width="0.0161%" height="15" fill="rgb(237,100,13)" fg:x="41537" fg:w="16"/><text x="42.0285%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="41.8258%" y="709" width="0.0533%" height="15" fill="rgb(213,55,26)" fg:x="41584" fg:w="53"/><text x="42.0758%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (47 samples, 0.05%)</title><rect x="41.8318%" y="693" width="0.0473%" height="15" fill="rgb(216,17,4)" fg:x="41590" fg:w="47"/><text x="42.0818%" y="703.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (12 samples, 0.01%)</title><rect x="41.8670%" y="677" width="0.0121%" height="15" fill="rgb(220,153,47)" fg:x="41625" fg:w="12"/><text x="42.1170%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.01%)</title><rect x="41.8841%" y="693" width="0.0101%" height="15" fill="rgb(215,131,9)" fg:x="41642" fg:w="10"/><text x="42.1341%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.02%)</title><rect x="41.8791%" y="709" width="0.0181%" height="15" fill="rgb(233,46,42)" fg:x="41637" fg:w="18"/><text x="42.1291%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (23 samples, 0.02%)</title><rect x="41.9072%" y="709" width="0.0231%" height="15" fill="rgb(226,86,7)" fg:x="41665" fg:w="23"/><text x="42.1572%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.02%)</title><rect x="41.9123%" y="693" width="0.0181%" height="15" fill="rgb(239,226,21)" fg:x="41670" fg:w="18"/><text x="42.1623%" y="703.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (156 samples, 0.16%)</title><rect x="41.7946%" y="725" width="0.1569%" height="15" fill="rgb(244,137,22)" fg:x="41553" fg:w="156"/><text x="42.0446%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (23 samples, 0.02%)</title><rect x="41.9595%" y="709" width="0.0231%" height="15" fill="rgb(211,139,35)" fg:x="41717" fg:w="23"/><text x="42.2095%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (19 samples, 0.02%)</title><rect x="41.9635%" y="693" width="0.0191%" height="15" fill="rgb(214,62,50)" fg:x="41721" fg:w="19"/><text x="42.2135%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="41.9635%" y="677" width="0.0191%" height="15" fill="rgb(212,113,44)" fg:x="41721" fg:w="19"/><text x="42.2135%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (10 samples, 0.01%)</title><rect x="41.9726%" y="661" width="0.0101%" height="15" fill="rgb(226,150,43)" fg:x="41730" fg:w="10"/><text x="42.2226%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="41.9907%" y="661" width="0.0141%" height="15" fill="rgb(250,71,37)" fg:x="41748" fg:w="14"/><text x="42.2407%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="41.9917%" y="645" width="0.0131%" height="15" fill="rgb(219,76,19)" fg:x="41749" fg:w="13"/><text x="42.2417%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState&gt; (59 samples, 0.06%)</title><rect x="41.9595%" y="725" width="0.0593%" height="15" fill="rgb(250,39,11)" fg:x="41717" fg:w="59"/><text x="42.2095%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (36 samples, 0.04%)</title><rect x="41.9827%" y="709" width="0.0362%" height="15" fill="rgb(230,64,31)" fg:x="41740" fg:w="36"/><text x="42.2327%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (33 samples, 0.03%)</title><rect x="41.9857%" y="693" width="0.0332%" height="15" fill="rgb(208,222,23)" fg:x="41743" fg:w="33"/><text x="42.2357%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="41.9857%" y="677" width="0.0332%" height="15" fill="rgb(227,125,18)" fg:x="41743" fg:w="33"/><text x="42.2357%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="42.0048%" y="661" width="0.0141%" height="15" fill="rgb(234,210,9)" fg:x="41762" fg:w="14"/><text x="42.2548%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.02%)</title><rect x="42.0249%" y="613" width="0.0181%" height="15" fill="rgb(217,127,24)" fg:x="41782" fg:w="18"/><text x="42.2749%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="42.0330%" y="597" width="0.0101%" height="15" fill="rgb(239,141,48)" fg:x="41790" fg:w="10"/><text x="42.2830%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.02%)</title><rect x="42.0742%" y="597" width="0.0181%" height="15" fill="rgb(227,109,8)" fg:x="41831" fg:w="18"/><text x="42.3242%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (78 samples, 0.08%)</title><rect x="42.0209%" y="661" width="0.0785%" height="15" fill="rgb(235,184,23)" fg:x="41778" fg:w="78"/><text x="42.2709%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (78 samples, 0.08%)</title><rect x="42.0209%" y="645" width="0.0785%" height="15" fill="rgb(227,226,48)" fg:x="41778" fg:w="78"/><text x="42.2709%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (76 samples, 0.08%)</title><rect x="42.0229%" y="629" width="0.0764%" height="15" fill="rgb(206,150,11)" fg:x="41780" fg:w="76"/><text x="42.2729%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (56 samples, 0.06%)</title><rect x="42.0430%" y="613" width="0.0563%" height="15" fill="rgb(254,2,33)" fg:x="41800" fg:w="56"/><text x="42.2930%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (16 samples, 0.02%)</title><rect x="42.0993%" y="661" width="0.0161%" height="15" fill="rgb(243,160,20)" fg:x="41856" fg:w="16"/><text x="42.3493%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (12 samples, 0.01%)</title><rect x="42.1034%" y="645" width="0.0121%" height="15" fill="rgb(218,208,30)" fg:x="41860" fg:w="12"/><text x="42.3534%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="42.1195%" y="629" width="0.0171%" height="15" fill="rgb(224,120,49)" fg:x="41876" fg:w="17"/><text x="42.3695%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.02%)</title><rect x="42.1195%" y="613" width="0.0171%" height="15" fill="rgb(246,12,2)" fg:x="41876" fg:w="17"/><text x="42.3695%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="42.1205%" y="597" width="0.0161%" height="15" fill="rgb(236,117,3)" fg:x="41877" fg:w="16"/><text x="42.3705%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.02%)</title><rect x="42.1215%" y="581" width="0.0151%" height="15" fill="rgb(216,128,52)" fg:x="41878" fg:w="15"/><text x="42.3715%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (119 samples, 0.12%)</title><rect x="42.0189%" y="677" width="0.1197%" height="15" fill="rgb(246,145,19)" fg:x="41776" fg:w="119"/><text x="42.2689%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (23 samples, 0.02%)</title><rect x="42.1154%" y="661" width="0.0231%" height="15" fill="rgb(222,11,46)" fg:x="41872" fg:w="23"/><text x="42.3654%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u16 (21 samples, 0.02%)</title><rect x="42.1174%" y="645" width="0.0211%" height="15" fill="rgb(245,82,36)" fg:x="41874" fg:w="21"/><text x="42.3674%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="42.1617%" y="629" width="0.0201%" height="15" fill="rgb(250,73,51)" fg:x="41918" fg:w="20"/><text x="42.4117%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="42.1707%" y="613" width="0.0111%" height="15" fill="rgb(221,189,23)" fg:x="41927" fg:w="11"/><text x="42.4207%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.01%)</title><rect x="42.1858%" y="613" width="0.0121%" height="15" fill="rgb(210,33,7)" fg:x="41942" fg:w="12"/><text x="42.4358%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="42.1567%" y="645" width="0.0443%" height="15" fill="rgb(210,107,22)" fg:x="41913" fg:w="44"/><text x="42.4067%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (19 samples, 0.02%)</title><rect x="42.1818%" y="629" width="0.0191%" height="15" fill="rgb(222,116,37)" fg:x="41938" fg:w="19"/><text x="42.4318%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (18 samples, 0.02%)</title><rect x="42.2230%" y="613" width="0.0181%" height="15" fill="rgb(254,17,48)" fg:x="41979" fg:w="18"/><text x="42.4730%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (25 samples, 0.03%)</title><rect x="42.2180%" y="645" width="0.0251%" height="15" fill="rgb(224,36,32)" fg:x="41974" fg:w="25"/><text x="42.4680%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (24 samples, 0.02%)</title><rect x="42.2190%" y="629" width="0.0241%" height="15" fill="rgb(232,90,46)" fg:x="41975" fg:w="24"/><text x="42.4690%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (225 samples, 0.23%)</title><rect x="42.0189%" y="725" width="0.2263%" height="15" fill="rgb(241,66,40)" fg:x="41776" fg:w="225"/><text x="42.2689%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (225 samples, 0.23%)</title><rect x="42.0189%" y="709" width="0.2263%" height="15" fill="rgb(249,184,29)" fg:x="41776" fg:w="225"/><text x="42.2689%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (225 samples, 0.23%)</title><rect x="42.0189%" y="693" width="0.2263%" height="15" fill="rgb(231,181,1)" fg:x="41776" fg:w="225"/><text x="42.2689%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (106 samples, 0.11%)</title><rect x="42.1386%" y="677" width="0.1066%" height="15" fill="rgb(224,94,2)" fg:x="41895" fg:w="106"/><text x="42.3886%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (99 samples, 0.10%)</title><rect x="42.1456%" y="661" width="0.0996%" height="15" fill="rgb(229,170,15)" fg:x="41902" fg:w="99"/><text x="42.3956%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="42.2532%" y="693" width="0.0111%" height="15" fill="rgb(240,127,35)" fg:x="42009" fg:w="11"/><text x="42.5032%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (11 samples, 0.01%)</title><rect x="42.2532%" y="677" width="0.0111%" height="15" fill="rgb(248,196,34)" fg:x="42009" fg:w="11"/><text x="42.5032%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="42.2532%" y="661" width="0.0111%" height="15" fill="rgb(236,137,7)" fg:x="42009" fg:w="11"/><text x="42.5032%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.01%)</title><rect x="42.2542%" y="645" width="0.0101%" height="15" fill="rgb(235,127,16)" fg:x="42010" fg:w="10"/><text x="42.5042%" y="655.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (634 samples, 0.64%)</title><rect x="41.6357%" y="741" width="0.6377%" height="15" fill="rgb(250,192,54)" fg:x="41395" fg:w="634"/><text x="41.8857%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (20 samples, 0.02%)</title><rect x="42.2532%" y="725" width="0.0201%" height="15" fill="rgb(218,98,20)" fg:x="42009" fg:w="20"/><text x="42.5032%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (20 samples, 0.02%)</title><rect x="42.2532%" y="709" width="0.0201%" height="15" fill="rgb(230,176,47)" fg:x="42009" fg:w="20"/><text x="42.5032%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="42.2733%" y="709" width="0.0211%" height="15" fill="rgb(244,2,33)" fg:x="42029" fg:w="21"/><text x="42.5233%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="42.2733%" y="693" width="0.0211%" height="15" fill="rgb(231,100,17)" fg:x="42029" fg:w="21"/><text x="42.5233%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="42.2733%" y="677" width="0.0211%" height="15" fill="rgb(245,23,12)" fg:x="42029" fg:w="21"/><text x="42.5233%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.01%)</title><rect x="42.2814%" y="661" width="0.0131%" height="15" fill="rgb(249,55,22)" fg:x="42037" fg:w="13"/><text x="42.5314%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="42.2814%" y="645" width="0.0131%" height="15" fill="rgb(207,134,9)" fg:x="42037" fg:w="13"/><text x="42.5314%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="42.2814%" y="629" width="0.0131%" height="15" fill="rgb(218,134,0)" fg:x="42037" fg:w="13"/><text x="42.5314%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="42.2814%" y="613" width="0.0131%" height="15" fill="rgb(213,212,33)" fg:x="42037" fg:w="13"/><text x="42.5314%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="42.2814%" y="597" width="0.0131%" height="15" fill="rgb(252,106,18)" fg:x="42037" fg:w="13"/><text x="42.5314%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::repeat (10 samples, 0.01%)</title><rect x="42.2844%" y="581" width="0.0101%" height="15" fill="rgb(208,126,42)" fg:x="42040" fg:w="10"/><text x="42.5344%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="42.3015%" y="597" width="0.0171%" height="15" fill="rgb(246,175,29)" fg:x="42057" fg:w="17"/><text x="42.5515%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.02%)</title><rect x="42.3035%" y="581" width="0.0151%" height="15" fill="rgb(215,13,50)" fg:x="42059" fg:w="15"/><text x="42.5535%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="42.3196%" y="565" width="0.0131%" height="15" fill="rgb(216,172,15)" fg:x="42075" fg:w="13"/><text x="42.5696%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="42.3186%" y="597" width="0.0151%" height="15" fill="rgb(212,103,13)" fg:x="42074" fg:w="15"/><text x="42.5686%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.02%)</title><rect x="42.3186%" y="581" width="0.0151%" height="15" fill="rgb(231,171,36)" fg:x="42074" fg:w="15"/><text x="42.5686%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (50 samples, 0.05%)</title><rect x="42.2965%" y="613" width="0.0503%" height="15" fill="rgb(250,123,20)" fg:x="42052" fg:w="50"/><text x="42.5465%" y="623.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (709 samples, 0.71%)</title><rect x="41.6357%" y="757" width="0.7131%" height="15" fill="rgb(212,53,50)" fg:x="41395" fg:w="709"/><text x="41.8857%" y="767.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (75 samples, 0.08%)</title><rect x="42.2733%" y="741" width="0.0754%" height="15" fill="rgb(243,54,12)" fg:x="42029" fg:w="75"/><text x="42.5233%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 0.08%)</title><rect x="42.2733%" y="725" width="0.0754%" height="15" fill="rgb(234,101,34)" fg:x="42029" fg:w="75"/><text x="42.5233%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (54 samples, 0.05%)</title><rect x="42.2945%" y="709" width="0.0543%" height="15" fill="rgb(254,67,22)" fg:x="42050" fg:w="54"/><text x="42.5445%" y="719.50"></text></g><g><title>core::iter::adapters::process_results (54 samples, 0.05%)</title><rect x="42.2945%" y="693" width="0.0543%" height="15" fill="rgb(250,35,47)" fg:x="42050" fg:w="54"/><text x="42.5445%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (54 samples, 0.05%)</title><rect x="42.2945%" y="677" width="0.0543%" height="15" fill="rgb(226,126,38)" fg:x="42050" fg:w="54"/><text x="42.5445%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.05%)</title><rect x="42.2945%" y="661" width="0.0543%" height="15" fill="rgb(216,138,53)" fg:x="42050" fg:w="54"/><text x="42.5445%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (54 samples, 0.05%)</title><rect x="42.2945%" y="645" width="0.0543%" height="15" fill="rgb(246,199,43)" fg:x="42050" fg:w="54"/><text x="42.5445%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 0.05%)</title><rect x="42.2955%" y="629" width="0.0533%" height="15" fill="rgb(232,125,11)" fg:x="42051" fg:w="53"/><text x="42.5455%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.01%)</title><rect x="42.3588%" y="629" width="0.0101%" height="15" fill="rgb(218,219,45)" fg:x="42114" fg:w="10"/><text x="42.6088%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="42.3558%" y="661" width="0.0141%" height="15" fill="rgb(216,102,54)" fg:x="42111" fg:w="14"/><text x="42.6058%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="42.3568%" y="645" width="0.0131%" height="15" fill="rgb(250,228,7)" fg:x="42112" fg:w="13"/><text x="42.6068%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (20 samples, 0.02%)</title><rect x="42.3548%" y="709" width="0.0201%" height="15" fill="rgb(226,125,25)" fg:x="42110" fg:w="20"/><text x="42.6048%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (20 samples, 0.02%)</title><rect x="42.3548%" y="693" width="0.0201%" height="15" fill="rgb(224,165,27)" fg:x="42110" fg:w="20"/><text x="42.6048%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.02%)</title><rect x="42.3548%" y="677" width="0.0201%" height="15" fill="rgb(233,86,3)" fg:x="42110" fg:w="20"/><text x="42.6048%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="42.4152%" y="677" width="0.0111%" height="15" fill="rgb(228,116,20)" fg:x="42170" fg:w="11"/><text x="42.6652%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (33 samples, 0.03%)</title><rect x="42.3960%" y="693" width="0.0332%" height="15" fill="rgb(209,192,17)" fg:x="42151" fg:w="33"/><text x="42.6460%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="42.4413%" y="645" width="0.0111%" height="15" fill="rgb(224,88,34)" fg:x="42196" fg:w="11"/><text x="42.6913%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (31 samples, 0.03%)</title><rect x="42.4323%" y="693" width="0.0312%" height="15" fill="rgb(233,38,6)" fg:x="42187" fg:w="31"/><text x="42.6823%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (31 samples, 0.03%)</title><rect x="42.4323%" y="677" width="0.0312%" height="15" fill="rgb(212,59,30)" fg:x="42187" fg:w="31"/><text x="42.6823%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="42.4363%" y="661" width="0.0272%" height="15" fill="rgb(213,80,3)" fg:x="42191" fg:w="27"/><text x="42.6863%" y="671.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (111 samples, 0.11%)</title><rect x="42.3749%" y="709" width="0.1116%" height="15" fill="rgb(251,178,7)" fg:x="42130" fg:w="111"/><text x="42.6249%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (12 samples, 0.01%)</title><rect x="42.4745%" y="693" width="0.0121%" height="15" fill="rgb(213,154,26)" fg:x="42229" fg:w="12"/><text x="42.7245%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="42.4745%" y="677" width="0.0121%" height="15" fill="rgb(238,165,49)" fg:x="42229" fg:w="12"/><text x="42.7245%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="42.4745%" y="661" width="0.0121%" height="15" fill="rgb(248,91,46)" fg:x="42229" fg:w="12"/><text x="42.7245%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="42.5137%" y="629" width="0.0171%" height="15" fill="rgb(244,21,52)" fg:x="42268" fg:w="17"/><text x="42.7637%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (45 samples, 0.05%)</title><rect x="42.4866%" y="709" width="0.0453%" height="15" fill="rgb(247,122,20)" fg:x="42241" fg:w="45"/><text x="42.7366%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.05%)</title><rect x="42.4866%" y="693" width="0.0453%" height="15" fill="rgb(218,27,9)" fg:x="42241" fg:w="45"/><text x="42.7366%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (36 samples, 0.04%)</title><rect x="42.4956%" y="677" width="0.0362%" height="15" fill="rgb(246,7,6)" fg:x="42250" fg:w="36"/><text x="42.7456%" y="687.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join::_{{closure}} (36 samples, 0.04%)</title><rect x="42.4956%" y="661" width="0.0362%" height="15" fill="rgb(227,135,54)" fg:x="42250" fg:w="36"/><text x="42.7456%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (33 samples, 0.03%)</title><rect x="42.4986%" y="645" width="0.0332%" height="15" fill="rgb(247,14,11)" fg:x="42253" fg:w="33"/><text x="42.7486%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (20 samples, 0.02%)</title><rect x="42.5349%" y="629" width="0.0201%" height="15" fill="rgb(206,149,34)" fg:x="42289" fg:w="20"/><text x="42.7849%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (13 samples, 0.01%)</title><rect x="42.5419%" y="613" width="0.0131%" height="15" fill="rgb(227,228,4)" fg:x="42296" fg:w="13"/><text x="42.7919%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="42.5419%" y="597" width="0.0131%" height="15" fill="rgb(238,218,28)" fg:x="42296" fg:w="13"/><text x="42.7919%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (25 samples, 0.03%)</title><rect x="42.5318%" y="693" width="0.0251%" height="15" fill="rgb(252,86,40)" fg:x="42286" fg:w="25"/><text x="42.7818%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="42.5318%" y="677" width="0.0251%" height="15" fill="rgb(251,225,11)" fg:x="42286" fg:w="25"/><text x="42.7818%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (24 samples, 0.02%)</title><rect x="42.5328%" y="661" width="0.0241%" height="15" fill="rgb(206,46,49)" fg:x="42287" fg:w="24"/><text x="42.7828%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="42.5328%" y="645" width="0.0241%" height="15" fill="rgb(245,128,24)" fg:x="42287" fg:w="24"/><text x="42.7828%" y="655.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (211 samples, 0.21%)</title><rect x="42.3488%" y="725" width="0.2122%" height="15" fill="rgb(219,177,34)" fg:x="42104" fg:w="211"/><text x="42.5988%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (29 samples, 0.03%)</title><rect x="42.5318%" y="709" width="0.0292%" height="15" fill="rgb(218,60,48)" fg:x="42286" fg:w="29"/><text x="42.7818%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="42.6224%" y="629" width="0.0151%" height="15" fill="rgb(221,11,5)" fg:x="42376" fg:w="15"/><text x="42.8724%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="42.6395%" y="629" width="0.0181%" height="15" fill="rgb(220,148,13)" fg:x="42393" fg:w="18"/><text x="42.8895%" y="639.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (14 samples, 0.01%)</title><rect x="42.6696%" y="613" width="0.0141%" height="15" fill="rgb(210,16,3)" fg:x="42423" fg:w="14"/><text x="42.9196%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.01%)</title><rect x="42.6948%" y="597" width="0.0111%" height="15" fill="rgb(236,80,2)" fg:x="42448" fg:w="11"/><text x="42.9448%" y="607.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (149 samples, 0.15%)</title><rect x="42.5610%" y="725" width="0.1499%" height="15" fill="rgb(239,129,19)" fg:x="42315" fg:w="149"/><text x="42.8110%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (149 samples, 0.15%)</title><rect x="42.5610%" y="709" width="0.1499%" height="15" fill="rgb(220,106,35)" fg:x="42315" fg:w="149"/><text x="42.8110%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (149 samples, 0.15%)</title><rect x="42.5610%" y="693" width="0.1499%" height="15" fill="rgb(252,139,45)" fg:x="42315" fg:w="149"/><text x="42.8110%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (142 samples, 0.14%)</title><rect x="42.5680%" y="677" width="0.1428%" height="15" fill="rgb(229,8,36)" fg:x="42322" fg:w="142"/><text x="42.8180%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (125 samples, 0.13%)</title><rect x="42.5851%" y="661" width="0.1257%" height="15" fill="rgb(230,126,33)" fg:x="42339" fg:w="125"/><text x="42.8351%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (114 samples, 0.11%)</title><rect x="42.5962%" y="645" width="0.1147%" height="15" fill="rgb(239,140,21)" fg:x="42350" fg:w="114"/><text x="42.8462%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (42 samples, 0.04%)</title><rect x="42.6686%" y="629" width="0.0422%" height="15" fill="rgb(254,104,9)" fg:x="42422" fg:w="42"/><text x="42.9186%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="42.6837%" y="613" width="0.0272%" height="15" fill="rgb(239,52,14)" fg:x="42437" fg:w="27"/><text x="42.9337%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="42.7330%" y="645" width="0.0101%" height="15" fill="rgb(208,227,44)" fg:x="42486" fg:w="10"/><text x="42.9830%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (42 samples, 0.04%)</title><rect x="42.7119%" y="725" width="0.0422%" height="15" fill="rgb(246,18,19)" fg:x="42465" fg:w="42"/><text x="42.9619%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="42.7119%" y="709" width="0.0422%" height="15" fill="rgb(235,228,25)" fg:x="42465" fg:w="42"/><text x="42.9619%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.04%)</title><rect x="42.7119%" y="693" width="0.0422%" height="15" fill="rgb(240,156,20)" fg:x="42465" fg:w="42"/><text x="42.9619%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (42 samples, 0.04%)</title><rect x="42.7119%" y="677" width="0.0422%" height="15" fill="rgb(224,8,20)" fg:x="42465" fg:w="42"/><text x="42.9619%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.04%)</title><rect x="42.7119%" y="661" width="0.0422%" height="15" fill="rgb(214,12,52)" fg:x="42465" fg:w="42"/><text x="42.9619%" y="671.50"></text></g><g><title>&lt;u16 as core::iter::range::Step&gt;::forward_unchecked (19 samples, 0.02%)</title><rect x="42.8990%" y="677" width="0.0191%" height="15" fill="rgb(211,220,47)" fg:x="42651" fg:w="19"/><text x="43.1490%" y="687.50"></text></g><g><title>core::num::&lt;impl u16&gt;::unchecked_add (13 samples, 0.01%)</title><rect x="42.9050%" y="661" width="0.0131%" height="15" fill="rgb(250,173,5)" fg:x="42657" fg:w="13"/><text x="43.1550%" y="671.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="42.9342%" y="661" width="0.0231%" height="15" fill="rgb(250,125,52)" fg:x="42686" fg:w="23"/><text x="43.1842%" y="671.50"></text></g><g><title>core::mem::replace (38 samples, 0.04%)</title><rect x="42.9261%" y="677" width="0.0382%" height="15" fill="rgb(209,133,18)" fg:x="42678" fg:w="38"/><text x="43.1761%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.15%)</title><rect x="42.8487%" y="709" width="0.1479%" height="15" fill="rgb(216,173,22)" fg:x="42601" fg:w="147"/><text x="43.0987%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (134 samples, 0.13%)</title><rect x="42.8617%" y="693" width="0.1348%" height="15" fill="rgb(205,3,22)" fg:x="42614" fg:w="134"/><text x="43.1117%" y="703.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (32 samples, 0.03%)</title><rect x="42.9643%" y="677" width="0.0322%" height="15" fill="rgb(248,22,20)" fg:x="42716" fg:w="32"/><text x="43.2143%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u16&gt;::le (12 samples, 0.01%)</title><rect x="42.9845%" y="661" width="0.0121%" height="15" fill="rgb(233,6,29)" fg:x="42736" fg:w="12"/><text x="43.2345%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (14 samples, 0.01%)</title><rect x="43.0307%" y="661" width="0.0141%" height="15" fill="rgb(240,22,54)" fg:x="42782" fg:w="14"/><text x="43.2807%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (39 samples, 0.04%)</title><rect x="43.0257%" y="677" width="0.0392%" height="15" fill="rgb(231,133,32)" fg:x="42777" fg:w="39"/><text x="43.2757%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.02%)</title><rect x="43.0458%" y="661" width="0.0191%" height="15" fill="rgb(248,193,4)" fg:x="42797" fg:w="19"/><text x="43.2958%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="43.0549%" y="645" width="0.0101%" height="15" fill="rgb(211,178,46)" fg:x="42806" fg:w="10"/><text x="43.3049%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (66 samples, 0.07%)</title><rect x="43.0197%" y="693" width="0.0664%" height="15" fill="rgb(224,5,42)" fg:x="42771" fg:w="66"/><text x="43.2697%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (21 samples, 0.02%)</title><rect x="43.0649%" y="677" width="0.0211%" height="15" fill="rgb(239,176,25)" fg:x="42816" fg:w="21"/><text x="43.3149%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts (16 samples, 0.02%)</title><rect x="43.0699%" y="661" width="0.0161%" height="15" fill="rgb(245,187,50)" fg:x="42821" fg:w="16"/><text x="43.3199%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (102 samples, 0.10%)</title><rect x="42.9965%" y="709" width="0.1026%" height="15" fill="rgb(248,24,15)" fg:x="42748" fg:w="102"/><text x="43.2465%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.01%)</title><rect x="43.0860%" y="693" width="0.0131%" height="15" fill="rgb(205,166,13)" fg:x="42837" fg:w="13"/><text x="43.3360%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="43.1082%" y="693" width="0.0161%" height="15" fill="rgb(208,114,23)" fg:x="42859" fg:w="16"/><text x="43.3582%" y="703.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="43.1243%" y="693" width="0.0201%" height="15" fill="rgb(239,127,18)" fg:x="42875" fg:w="20"/><text x="43.3743%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="43.1293%" y="677" width="0.0151%" height="15" fill="rgb(219,154,28)" fg:x="42880" fg:w="15"/><text x="43.3793%" y="687.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="43.0991%" y="709" width="0.0513%" height="15" fill="rgb(225,157,23)" fg:x="42850" fg:w="51"/><text x="43.3491%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (37 samples, 0.04%)</title><rect x="43.1504%" y="709" width="0.0372%" height="15" fill="rgb(219,8,6)" fg:x="42901" fg:w="37"/><text x="43.4004%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (35 samples, 0.04%)</title><rect x="43.1524%" y="693" width="0.0352%" height="15" fill="rgb(212,47,6)" fg:x="42903" fg:w="35"/><text x="43.4024%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="43.1947%" y="677" width="0.0141%" height="15" fill="rgb(224,190,4)" fg:x="42945" fg:w="14"/><text x="43.4447%" y="687.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (23 samples, 0.02%)</title><rect x="43.1876%" y="709" width="0.0231%" height="15" fill="rgb(239,183,29)" fg:x="42938" fg:w="23"/><text x="43.4376%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (17 samples, 0.02%)</title><rect x="43.1937%" y="693" width="0.0171%" height="15" fill="rgb(213,57,7)" fg:x="42944" fg:w="17"/><text x="43.4437%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="43.2299%" y="693" width="0.0221%" height="15" fill="rgb(216,148,1)" fg:x="42980" fg:w="22"/><text x="43.4799%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.02%)</title><rect x="43.2299%" y="677" width="0.0221%" height="15" fill="rgb(236,182,29)" fg:x="42980" fg:w="22"/><text x="43.4799%" y="687.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (42 samples, 0.04%)</title><rect x="43.2108%" y="709" width="0.0422%" height="15" fill="rgb(244,120,48)" fg:x="42961" fg:w="42"/><text x="43.4608%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (50 samples, 0.05%)</title><rect x="43.2610%" y="709" width="0.0503%" height="15" fill="rgb(206,71,34)" fg:x="43011" fg:w="50"/><text x="43.5110%" y="719.50"></text></g><g><title>alloc::alloc::box_free (46 samples, 0.05%)</title><rect x="43.2651%" y="693" width="0.0463%" height="15" fill="rgb(242,32,6)" fg:x="43015" fg:w="46"/><text x="43.5151%" y="703.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (564 samples, 0.57%)</title><rect x="42.7541%" y="725" width="0.5673%" height="15" fill="rgb(241,35,3)" fg:x="42507" fg:w="564"/><text x="43.0041%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (31 samples, 0.03%)</title><rect x="43.3335%" y="629" width="0.0312%" height="15" fill="rgb(222,62,19)" fg:x="43083" fg:w="31"/><text x="43.5835%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (27 samples, 0.03%)</title><rect x="43.3375%" y="613" width="0.0272%" height="15" fill="rgb(223,110,41)" fg:x="43087" fg:w="27"/><text x="43.5875%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (11 samples, 0.01%)</title><rect x="43.3878%" y="597" width="0.0111%" height="15" fill="rgb(208,224,4)" fg:x="43137" fg:w="11"/><text x="43.6378%" y="607.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="43.3988%" y="597" width="0.0161%" height="15" fill="rgb(241,137,19)" fg:x="43148" fg:w="16"/><text x="43.6488%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (98 samples, 0.10%)</title><rect x="43.3214%" y="709" width="0.0986%" height="15" fill="rgb(244,24,17)" fg:x="43071" fg:w="98"/><text x="43.5714%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.10%)</title><rect x="43.3214%" y="693" width="0.0986%" height="15" fill="rgb(245,178,49)" fg:x="43071" fg:w="98"/><text x="43.5714%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (86 samples, 0.09%)</title><rect x="43.3335%" y="677" width="0.0865%" height="15" fill="rgb(219,160,38)" fg:x="43083" fg:w="86"/><text x="43.5835%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.09%)</title><rect x="43.3335%" y="661" width="0.0865%" height="15" fill="rgb(228,137,14)" fg:x="43083" fg:w="86"/><text x="43.5835%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (86 samples, 0.09%)</title><rect x="43.3335%" y="645" width="0.0865%" height="15" fill="rgb(237,134,11)" fg:x="43083" fg:w="86"/><text x="43.5835%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (55 samples, 0.06%)</title><rect x="43.3646%" y="629" width="0.0553%" height="15" fill="rgb(211,126,44)" fg:x="43114" fg:w="55"/><text x="43.6146%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (53 samples, 0.05%)</title><rect x="43.3667%" y="613" width="0.0533%" height="15" fill="rgb(226,171,33)" fg:x="43116" fg:w="53"/><text x="43.6167%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="43.4240%" y="661" width="0.0111%" height="15" fill="rgb(253,99,13)" fg:x="43173" fg:w="11"/><text x="43.6740%" y="671.50"></text></g><g><title>core::mem::take (11 samples, 0.01%)</title><rect x="43.4240%" y="645" width="0.0111%" height="15" fill="rgb(244,48,7)" fg:x="43173" fg:w="11"/><text x="43.6740%" y="655.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="43.4240%" y="629" width="0.0111%" height="15" fill="rgb(244,217,54)" fg:x="43173" fg:w="11"/><text x="43.6740%" y="639.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="43.4240%" y="613" width="0.0111%" height="15" fill="rgb(224,15,18)" fg:x="43173" fg:w="11"/><text x="43.6740%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (12 samples, 0.01%)</title><rect x="43.4592%" y="581" width="0.0121%" height="15" fill="rgb(244,99,12)" fg:x="43208" fg:w="12"/><text x="43.7092%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (34 samples, 0.03%)</title><rect x="43.4441%" y="613" width="0.0342%" height="15" fill="rgb(233,226,8)" fg:x="43193" fg:w="34"/><text x="43.6941%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (27 samples, 0.03%)</title><rect x="43.4511%" y="597" width="0.0272%" height="15" fill="rgb(229,211,3)" fg:x="43200" fg:w="27"/><text x="43.7011%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (17 samples, 0.02%)</title><rect x="43.4783%" y="613" width="0.0171%" height="15" fill="rgb(216,140,21)" fg:x="43227" fg:w="17"/><text x="43.7283%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.02%)</title><rect x="43.4783%" y="597" width="0.0171%" height="15" fill="rgb(234,122,30)" fg:x="43227" fg:w="17"/><text x="43.7283%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (58 samples, 0.06%)</title><rect x="43.4431%" y="629" width="0.0583%" height="15" fill="rgb(236,25,46)" fg:x="43192" fg:w="58"/><text x="43.6931%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (11 samples, 0.01%)</title><rect x="43.5024%" y="581" width="0.0111%" height="15" fill="rgb(217,52,54)" fg:x="43251" fg:w="11"/><text x="43.7524%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (11 samples, 0.01%)</title><rect x="43.5024%" y="565" width="0.0111%" height="15" fill="rgb(222,29,26)" fg:x="43251" fg:w="11"/><text x="43.7524%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="43.5024%" y="549" width="0.0111%" height="15" fill="rgb(216,177,29)" fg:x="43251" fg:w="11"/><text x="43.7524%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (211 samples, 0.21%)</title><rect x="43.3214%" y="725" width="0.2122%" height="15" fill="rgb(247,136,51)" fg:x="43071" fg:w="211"/><text x="43.5714%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (113 samples, 0.11%)</title><rect x="43.4200%" y="709" width="0.1137%" height="15" fill="rgb(231,47,47)" fg:x="43169" fg:w="113"/><text x="43.6700%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (113 samples, 0.11%)</title><rect x="43.4200%" y="693" width="0.1137%" height="15" fill="rgb(211,192,36)" fg:x="43169" fg:w="113"/><text x="43.6700%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.11%)</title><rect x="43.4200%" y="677" width="0.1137%" height="15" fill="rgb(229,156,32)" fg:x="43169" fg:w="113"/><text x="43.6700%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (98 samples, 0.10%)</title><rect x="43.4351%" y="661" width="0.0986%" height="15" fill="rgb(248,213,20)" fg:x="43184" fg:w="98"/><text x="43.6851%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.10%)</title><rect x="43.4351%" y="645" width="0.0986%" height="15" fill="rgb(217,64,7)" fg:x="43184" fg:w="98"/><text x="43.6851%" y="655.50"></text></g><g><title>core::mem::drop (32 samples, 0.03%)</title><rect x="43.5014%" y="629" width="0.0322%" height="15" fill="rgb(232,142,8)" fg:x="43250" fg:w="32"/><text x="43.7514%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (32 samples, 0.03%)</title><rect x="43.5014%" y="613" width="0.0322%" height="15" fill="rgb(224,92,44)" fg:x="43250" fg:w="32"/><text x="43.7514%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (32 samples, 0.03%)</title><rect x="43.5014%" y="597" width="0.0322%" height="15" fill="rgb(214,169,17)" fg:x="43250" fg:w="32"/><text x="43.7514%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (20 samples, 0.02%)</title><rect x="43.5135%" y="581" width="0.0201%" height="15" fill="rgb(210,59,37)" fg:x="43262" fg:w="20"/><text x="43.7635%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="43.5145%" y="565" width="0.0191%" height="15" fill="rgb(214,116,48)" fg:x="43263" fg:w="19"/><text x="43.7645%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="43.5145%" y="549" width="0.0191%" height="15" fill="rgb(244,191,6)" fg:x="43263" fg:w="19"/><text x="43.7645%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28 samples, 0.03%)</title><rect x="43.5336%" y="613" width="0.0282%" height="15" fill="rgb(241,50,52)" fg:x="43282" fg:w="28"/><text x="43.7836%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39 samples, 0.04%)</title><rect x="43.5910%" y="597" width="0.0392%" height="15" fill="rgb(236,75,39)" fg:x="43339" fg:w="39"/><text x="43.8410%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (103 samples, 0.10%)</title><rect x="43.5336%" y="661" width="0.1036%" height="15" fill="rgb(236,99,0)" fg:x="43282" fg:w="103"/><text x="43.7836%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (103 samples, 0.10%)</title><rect x="43.5336%" y="645" width="0.1036%" height="15" fill="rgb(207,202,15)" fg:x="43282" fg:w="103"/><text x="43.7836%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (103 samples, 0.10%)</title><rect x="43.5336%" y="629" width="0.1036%" height="15" fill="rgb(233,207,14)" fg:x="43282" fg:w="103"/><text x="43.7836%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (75 samples, 0.08%)</title><rect x="43.5618%" y="613" width="0.0754%" height="15" fill="rgb(226,27,51)" fg:x="43310" fg:w="75"/><text x="43.8118%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (11 samples, 0.01%)</title><rect x="43.6423%" y="629" width="0.0111%" height="15" fill="rgb(206,104,42)" fg:x="43390" fg:w="11"/><text x="43.8923%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.02%)</title><rect x="43.6372%" y="661" width="0.0171%" height="15" fill="rgb(212,225,4)" fg:x="43385" fg:w="17"/><text x="43.8872%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (17 samples, 0.02%)</title><rect x="43.6372%" y="645" width="0.0171%" height="15" fill="rgb(233,96,42)" fg:x="43385" fg:w="17"/><text x="43.8872%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (20 samples, 0.02%)</title><rect x="43.6724%" y="581" width="0.0201%" height="15" fill="rgb(229,21,32)" fg:x="43420" fg:w="20"/><text x="43.9224%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (159 samples, 0.16%)</title><rect x="43.5336%" y="677" width="0.1599%" height="15" fill="rgb(226,216,24)" fg:x="43282" fg:w="159"/><text x="43.7836%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (39 samples, 0.04%)</title><rect x="43.6543%" y="661" width="0.0392%" height="15" fill="rgb(221,163,17)" fg:x="43402" fg:w="39"/><text x="43.9043%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u16 (39 samples, 0.04%)</title><rect x="43.6543%" y="645" width="0.0392%" height="15" fill="rgb(216,216,42)" fg:x="43402" fg:w="39"/><text x="43.9043%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="43.6543%" y="629" width="0.0392%" height="15" fill="rgb(240,118,7)" fg:x="43402" fg:w="39"/><text x="43.9043%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="43.6543%" y="613" width="0.0392%" height="15" fill="rgb(221,67,37)" fg:x="43402" fg:w="39"/><text x="43.9043%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="43.6543%" y="597" width="0.0392%" height="15" fill="rgb(241,32,44)" fg:x="43402" fg:w="39"/><text x="43.9043%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="43.7257%" y="613" width="0.0251%" height="15" fill="rgb(235,204,43)" fg:x="43473" fg:w="25"/><text x="43.9757%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="43.7197%" y="629" width="0.0392%" height="15" fill="rgb(213,116,10)" fg:x="43467" fg:w="39"/><text x="43.9697%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.01%)</title><rect x="43.7640%" y="597" width="0.0111%" height="15" fill="rgb(239,15,48)" fg:x="43511" fg:w="11"/><text x="44.0140%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (14 samples, 0.01%)</title><rect x="43.7619%" y="613" width="0.0141%" height="15" fill="rgb(207,123,36)" fg:x="43509" fg:w="14"/><text x="44.0119%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.07%)</title><rect x="43.7117%" y="645" width="0.0694%" height="15" fill="rgb(209,103,30)" fg:x="43459" fg:w="69"/><text x="43.9617%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (22 samples, 0.02%)</title><rect x="43.7589%" y="629" width="0.0221%" height="15" fill="rgb(238,100,19)" fg:x="43506" fg:w="22"/><text x="44.0089%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (11 samples, 0.01%)</title><rect x="43.8163%" y="597" width="0.0111%" height="15" fill="rgb(244,30,14)" fg:x="43563" fg:w="11"/><text x="44.0663%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (16 samples, 0.02%)</title><rect x="43.8324%" y="597" width="0.0161%" height="15" fill="rgb(249,174,6)" fg:x="43579" fg:w="16"/><text x="44.0824%" y="607.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.01%)</title><rect x="43.8344%" y="581" width="0.0141%" height="15" fill="rgb(235,213,41)" fg:x="43581" fg:w="14"/><text x="44.0844%" y="591.50"></text></g><g><title>core::cmp::min_by (14 samples, 0.01%)</title><rect x="43.8344%" y="565" width="0.0141%" height="15" fill="rgb(213,118,6)" fg:x="43581" fg:w="14"/><text x="44.0844%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (17 samples, 0.02%)</title><rect x="43.8484%" y="597" width="0.0171%" height="15" fill="rgb(235,44,51)" fg:x="43595" fg:w="17"/><text x="44.0984%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.02%)</title><rect x="43.8505%" y="581" width="0.0151%" height="15" fill="rgb(217,9,53)" fg:x="43597" fg:w="15"/><text x="44.1005%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (356 samples, 0.36%)</title><rect x="43.5336%" y="725" width="0.3581%" height="15" fill="rgb(237,172,34)" fg:x="43282" fg:w="356"/><text x="43.7836%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (356 samples, 0.36%)</title><rect x="43.5336%" y="709" width="0.3581%" height="15" fill="rgb(206,206,11)" fg:x="43282" fg:w="356"/><text x="43.7836%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (356 samples, 0.36%)</title><rect x="43.5336%" y="693" width="0.3581%" height="15" fill="rgb(214,149,29)" fg:x="43282" fg:w="356"/><text x="43.7836%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (197 samples, 0.20%)</title><rect x="43.6935%" y="677" width="0.1981%" height="15" fill="rgb(208,123,3)" fg:x="43441" fg:w="197"/><text x="43.9435%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (194 samples, 0.20%)</title><rect x="43.6966%" y="661" width="0.1951%" height="15" fill="rgb(229,126,4)" fg:x="43444" fg:w="194"/><text x="43.9466%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (94 samples, 0.09%)</title><rect x="43.7971%" y="645" width="0.0945%" height="15" fill="rgb(222,92,36)" fg:x="43544" fg:w="94"/><text x="44.0471%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (92 samples, 0.09%)</title><rect x="43.7992%" y="629" width="0.0925%" height="15" fill="rgb(216,39,41)" fg:x="43546" fg:w="92"/><text x="44.0492%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (88 samples, 0.09%)</title><rect x="43.8032%" y="613" width="0.0885%" height="15" fill="rgb(253,127,28)" fg:x="43550" fg:w="88"/><text x="44.0532%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (26 samples, 0.03%)</title><rect x="43.8655%" y="597" width="0.0262%" height="15" fill="rgb(249,152,51)" fg:x="43612" fg:w="26"/><text x="44.1155%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.02%)</title><rect x="43.8917%" y="725" width="0.0201%" height="15" fill="rgb(209,123,42)" fg:x="43638" fg:w="20"/><text x="44.1417%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="43.8917%" y="709" width="0.0201%" height="15" fill="rgb(241,118,22)" fg:x="43638" fg:w="20"/><text x="44.1417%" y="719.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (1,556 samples, 1.57%)</title><rect x="42.3488%" y="741" width="1.5650%" height="15" fill="rgb(208,25,7)" fg:x="42104" fg:w="1556"/><text x="42.5988%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (20 samples, 0.02%)</title><rect x="43.9209%" y="661" width="0.0201%" height="15" fill="rgb(243,144,39)" fg:x="43667" fg:w="20"/><text x="44.1709%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (28 samples, 0.03%)</title><rect x="43.9138%" y="725" width="0.0282%" height="15" fill="rgb(250,50,5)" fg:x="43660" fg:w="28"/><text x="44.1638%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (28 samples, 0.03%)</title><rect x="43.9138%" y="709" width="0.0282%" height="15" fill="rgb(207,67,11)" fg:x="43660" fg:w="28"/><text x="44.1638%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.03%)</title><rect x="43.9138%" y="693" width="0.0282%" height="15" fill="rgb(245,204,40)" fg:x="43660" fg:w="28"/><text x="44.1638%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (28 samples, 0.03%)</title><rect x="43.9138%" y="677" width="0.0282%" height="15" fill="rgb(238,228,24)" fg:x="43660" fg:w="28"/><text x="44.1638%" y="687.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (40 samples, 0.04%)</title><rect x="43.9138%" y="741" width="0.0402%" height="15" fill="rgb(217,116,22)" fg:x="43660" fg:w="40"/><text x="44.1638%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (12 samples, 0.01%)</title><rect x="43.9420%" y="725" width="0.0121%" height="15" fill="rgb(234,98,12)" fg:x="43688" fg:w="12"/><text x="44.1920%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.01%)</title><rect x="43.9420%" y="709" width="0.0121%" height="15" fill="rgb(242,170,50)" fg:x="43688" fg:w="12"/><text x="44.1920%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (12 samples, 0.01%)</title><rect x="43.9420%" y="693" width="0.0121%" height="15" fill="rgb(235,7,5)" fg:x="43688" fg:w="12"/><text x="44.1920%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="43.9430%" y="677" width="0.0111%" height="15" fill="rgb(241,114,28)" fg:x="43689" fg:w="11"/><text x="44.1930%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="43.9430%" y="661" width="0.0111%" height="15" fill="rgb(246,112,42)" fg:x="43689" fg:w="11"/><text x="44.1930%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="43.9430%" y="645" width="0.0111%" height="15" fill="rgb(248,228,14)" fg:x="43689" fg:w="11"/><text x="44.1930%" y="655.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (2,319 samples, 2.33%)</title><rect x="41.6266%" y="805" width="2.3325%" height="15" fill="rgb(208,133,18)" fg:x="41386" fg:w="2319"/><text x="41.8766%" y="815.50">b..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (2,318 samples, 2.33%)</title><rect x="41.6276%" y="789" width="2.3315%" height="15" fill="rgb(207,35,49)" fg:x="41387" fg:w="2318"/><text x="41.8776%" y="799.50">b..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (2,318 samples, 2.33%)</title><rect x="41.6276%" y="773" width="2.3315%" height="15" fill="rgb(205,68,36)" fg:x="41387" fg:w="2318"/><text x="41.8776%" y="783.50">b..</text></g><g><title>bytecode_verifier::reference_safety::verify (1,601 samples, 1.61%)</title><rect x="42.3488%" y="757" width="1.6103%" height="15" fill="rgb(245,62,40)" fg:x="42104" fg:w="1601"/><text x="42.5988%" y="767.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (15 samples, 0.02%)</title><rect x="44.0074%" y="725" width="0.0151%" height="15" fill="rgb(228,27,24)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.02%)</title><rect x="44.0074%" y="709" width="0.0151%" height="15" fill="rgb(253,19,12)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (15 samples, 0.02%)</title><rect x="44.0074%" y="693" width="0.0151%" height="15" fill="rgb(232,28,20)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.02%)</title><rect x="44.0074%" y="677" width="0.0151%" height="15" fill="rgb(218,35,51)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="44.0074%" y="661" width="0.0151%" height="15" fill="rgb(212,90,40)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.02%)</title><rect x="44.0074%" y="645" width="0.0151%" height="15" fill="rgb(220,172,12)" fg:x="43753" fg:w="15"/><text x="44.2574%" y="655.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (16 samples, 0.02%)</title><rect x="44.0074%" y="741" width="0.0161%" height="15" fill="rgb(226,159,20)" fg:x="43753" fg:w="16"/><text x="44.2574%" y="751.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (23 samples, 0.02%)</title><rect x="44.0033%" y="805" width="0.0231%" height="15" fill="rgb(234,205,16)" fg:x="43749" fg:w="23"/><text x="44.2533%" y="815.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.02%)</title><rect x="44.0064%" y="789" width="0.0201%" height="15" fill="rgb(207,9,39)" fg:x="43752" fg:w="20"/><text x="44.2564%" y="799.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.02%)</title><rect x="44.0064%" y="773" width="0.0201%" height="15" fill="rgb(249,143,15)" fg:x="43752" fg:w="20"/><text x="44.2564%" y="783.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.02%)</title><rect x="44.0064%" y="757" width="0.0201%" height="15" fill="rgb(253,133,29)" fg:x="43752" fg:w="20"/><text x="44.2564%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (14 samples, 0.01%)</title><rect x="44.0285%" y="629" width="0.0141%" height="15" fill="rgb(221,187,0)" fg:x="43774" fg:w="14"/><text x="44.2785%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (16 samples, 0.02%)</title><rect x="44.0275%" y="725" width="0.0161%" height="15" fill="rgb(205,204,26)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (16 samples, 0.02%)</title><rect x="44.0275%" y="709" width="0.0161%" height="15" fill="rgb(224,68,54)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (16 samples, 0.02%)</title><rect x="44.0275%" y="693" width="0.0161%" height="15" fill="rgb(209,67,4)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="44.0275%" y="677" width="0.0161%" height="15" fill="rgb(228,229,18)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.02%)</title><rect x="44.0275%" y="661" width="0.0161%" height="15" fill="rgb(231,89,13)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.02%)</title><rect x="44.0275%" y="645" width="0.0161%" height="15" fill="rgb(210,182,18)" fg:x="43773" fg:w="16"/><text x="44.2775%" y="655.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (22 samples, 0.02%)</title><rect x="44.0275%" y="741" width="0.0221%" height="15" fill="rgb(240,105,2)" fg:x="43773" fg:w="22"/><text x="44.2775%" y="751.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (24 samples, 0.02%)</title><rect x="44.0265%" y="805" width="0.0241%" height="15" fill="rgb(207,170,50)" fg:x="43772" fg:w="24"/><text x="44.2765%" y="815.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (24 samples, 0.02%)</title><rect x="44.0265%" y="789" width="0.0241%" height="15" fill="rgb(232,133,24)" fg:x="43772" fg:w="24"/><text x="44.2765%" y="799.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (24 samples, 0.02%)</title><rect x="44.0265%" y="773" width="0.0241%" height="15" fill="rgb(235,166,27)" fg:x="43772" fg:w="24"/><text x="44.2765%" y="783.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (24 samples, 0.02%)</title><rect x="44.0265%" y="757" width="0.0241%" height="15" fill="rgb(209,19,13)" fg:x="43772" fg:w="24"/><text x="44.2765%" y="767.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (14 samples, 0.01%)</title><rect x="44.0577%" y="741" width="0.0141%" height="15" fill="rgb(226,79,39)" fg:x="43803" fg:w="14"/><text x="44.3077%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (14 samples, 0.01%)</title><rect x="44.0577%" y="725" width="0.0141%" height="15" fill="rgb(222,163,10)" fg:x="43803" fg:w="14"/><text x="44.3077%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (14 samples, 0.01%)</title><rect x="44.0577%" y="709" width="0.0141%" height="15" fill="rgb(214,44,19)" fg:x="43803" fg:w="14"/><text x="44.3077%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (14 samples, 0.01%)</title><rect x="44.0577%" y="693" width="0.0141%" height="15" fill="rgb(210,217,13)" fg:x="43803" fg:w="14"/><text x="44.3077%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.01%)</title><rect x="44.0597%" y="677" width="0.0121%" height="15" fill="rgb(237,61,54)" fg:x="43805" fg:w="12"/><text x="44.3097%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="44.0838%" y="629" width="0.0141%" height="15" fill="rgb(226,184,24)" fg:x="43829" fg:w="14"/><text x="44.3338%" y="639.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="44.0999%" y="613" width="0.0131%" height="15" fill="rgb(223,226,4)" fg:x="43845" fg:w="13"/><text x="44.3499%" y="623.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (13 samples, 0.01%)</title><rect x="44.0999%" y="597" width="0.0131%" height="15" fill="rgb(210,26,41)" fg:x="43845" fg:w="13"/><text x="44.3499%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (10 samples, 0.01%)</title><rect x="44.1029%" y="581" width="0.0101%" height="15" fill="rgb(220,221,6)" fg:x="43848" fg:w="10"/><text x="44.3529%" y="591.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (27 samples, 0.03%)</title><rect x="44.0979%" y="629" width="0.0272%" height="15" fill="rgb(225,89,49)" fg:x="43843" fg:w="27"/><text x="44.3479%" y="639.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="44.1130%" y="613" width="0.0121%" height="15" fill="rgb(218,70,45)" fg:x="43858" fg:w="12"/><text x="44.3630%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="44.1130%" y="597" width="0.0121%" height="15" fill="rgb(238,166,21)" fg:x="43858" fg:w="12"/><text x="44.3630%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (12 samples, 0.01%)</title><rect x="44.1130%" y="581" width="0.0121%" height="15" fill="rgb(224,141,44)" fg:x="43858" fg:w="12"/><text x="44.3630%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.01%)</title><rect x="44.1140%" y="565" width="0.0111%" height="15" fill="rgb(230,12,49)" fg:x="43859" fg:w="11"/><text x="44.3640%" y="575.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.01%)</title><rect x="44.1150%" y="549" width="0.0101%" height="15" fill="rgb(212,174,12)" fg:x="43860" fg:w="10"/><text x="44.3650%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (61 samples, 0.06%)</title><rect x="44.0717%" y="677" width="0.0614%" height="15" fill="rgb(246,67,9)" fg:x="43817" fg:w="61"/><text x="44.3217%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (57 samples, 0.06%)</title><rect x="44.0758%" y="661" width="0.0573%" height="15" fill="rgb(239,35,23)" fg:x="43821" fg:w="57"/><text x="44.3258%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (57 samples, 0.06%)</title><rect x="44.0758%" y="645" width="0.0573%" height="15" fill="rgb(211,167,0)" fg:x="43821" fg:w="57"/><text x="44.3258%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (62 samples, 0.06%)</title><rect x="44.0717%" y="693" width="0.0624%" height="15" fill="rgb(225,119,45)" fg:x="43817" fg:w="62"/><text x="44.3217%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (64 samples, 0.06%)</title><rect x="44.0717%" y="725" width="0.0644%" height="15" fill="rgb(210,162,6)" fg:x="43817" fg:w="64"/><text x="44.3217%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (64 samples, 0.06%)</title><rect x="44.0717%" y="709" width="0.0644%" height="15" fill="rgb(208,118,35)" fg:x="43817" fg:w="64"/><text x="44.3217%" y="719.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (20 samples, 0.02%)</title><rect x="44.1361%" y="725" width="0.0201%" height="15" fill="rgb(239,4,53)" fg:x="43881" fg:w="20"/><text x="44.3861%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="44.1562%" y="565" width="0.0111%" height="15" fill="rgb(213,130,21)" fg:x="43901" fg:w="11"/><text x="44.4062%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="44.1562%" y="597" width="0.0161%" height="15" fill="rgb(235,148,0)" fg:x="43901" fg:w="16"/><text x="44.4062%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.02%)</title><rect x="44.1562%" y="581" width="0.0161%" height="15" fill="rgb(244,224,18)" fg:x="43901" fg:w="16"/><text x="44.4062%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="44.1562%" y="709" width="0.0201%" height="15" fill="rgb(211,214,4)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (20 samples, 0.02%)</title><rect x="44.1562%" y="693" width="0.0201%" height="15" fill="rgb(206,119,25)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="703.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (20 samples, 0.02%)</title><rect x="44.1562%" y="677" width="0.0201%" height="15" fill="rgb(243,93,47)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.02%)</title><rect x="44.1562%" y="661" width="0.0201%" height="15" fill="rgb(224,194,6)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="44.1562%" y="645" width="0.0201%" height="15" fill="rgb(243,229,6)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="44.1562%" y="629" width="0.0201%" height="15" fill="rgb(207,23,50)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="44.1562%" y="613" width="0.0201%" height="15" fill="rgb(253,192,32)" fg:x="43901" fg:w="20"/><text x="44.4062%" y="623.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (114 samples, 0.11%)</title><rect x="44.0717%" y="741" width="0.1147%" height="15" fill="rgb(213,21,6)" fg:x="43817" fg:w="114"/><text x="44.3217%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (30 samples, 0.03%)</title><rect x="44.1562%" y="725" width="0.0302%" height="15" fill="rgb(243,151,13)" fg:x="43901" fg:w="30"/><text x="44.4062%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (10 samples, 0.01%)</title><rect x="44.1763%" y="709" width="0.0101%" height="15" fill="rgb(233,165,41)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (10 samples, 0.01%)</title><rect x="44.1763%" y="693" width="0.0101%" height="15" fill="rgb(246,176,45)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="703.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (10 samples, 0.01%)</title><rect x="44.1763%" y="677" width="0.0101%" height="15" fill="rgb(217,170,52)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="44.1763%" y="661" width="0.0101%" height="15" fill="rgb(214,203,54)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="44.1763%" y="645" width="0.0101%" height="15" fill="rgb(248,215,49)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="44.1763%" y="629" width="0.0101%" height="15" fill="rgb(208,46,10)" fg:x="43921" fg:w="10"/><text x="44.4263%" y="639.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (136 samples, 0.14%)</title><rect x="44.0577%" y="805" width="0.1368%" height="15" fill="rgb(254,5,31)" fg:x="43803" fg:w="136"/><text x="44.3077%" y="815.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (136 samples, 0.14%)</title><rect x="44.0577%" y="789" width="0.1368%" height="15" fill="rgb(222,104,33)" fg:x="43803" fg:w="136"/><text x="44.3077%" y="799.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (136 samples, 0.14%)</title><rect x="44.0577%" y="773" width="0.1368%" height="15" fill="rgb(248,49,16)" fg:x="43803" fg:w="136"/><text x="44.3077%" y="783.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (136 samples, 0.14%)</title><rect x="44.0577%" y="757" width="0.1368%" height="15" fill="rgb(232,198,41)" fg:x="43803" fg:w="136"/><text x="44.3077%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (10 samples, 0.01%)</title><rect x="44.2025%" y="805" width="0.0101%" height="15" fill="rgb(214,125,3)" fg:x="43947" fg:w="10"/><text x="44.4525%" y="815.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (10 samples, 0.01%)</title><rect x="44.2025%" y="789" width="0.0101%" height="15" fill="rgb(229,220,28)" fg:x="43947" fg:w="10"/><text x="44.4525%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="44.2125%" y="741" width="0.0141%" height="15" fill="rgb(222,64,37)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.01%)</title><rect x="44.2125%" y="725" width="0.0141%" height="15" fill="rgb(249,184,13)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.01%)</title><rect x="44.2125%" y="709" width="0.0141%" height="15" fill="rgb(252,176,6)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="44.2125%" y="693" width="0.0141%" height="15" fill="rgb(228,153,7)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="44.2125%" y="677" width="0.0141%" height="15" fill="rgb(242,193,5)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="44.2125%" y="661" width="0.0141%" height="15" fill="rgb(232,140,9)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="44.2125%" y="645" width="0.0141%" height="15" fill="rgb(213,222,16)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="44.2125%" y="629" width="0.0141%" height="15" fill="rgb(222,75,50)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14 samples, 0.01%)</title><rect x="44.2125%" y="613" width="0.0141%" height="15" fill="rgb(205,180,2)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="44.2125%" y="597" width="0.0141%" height="15" fill="rgb(216,34,7)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="607.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (14 samples, 0.01%)</title><rect x="44.2125%" y="581" width="0.0141%" height="15" fill="rgb(253,16,32)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14 samples, 0.01%)</title><rect x="44.2125%" y="565" width="0.0141%" height="15" fill="rgb(208,97,28)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14 samples, 0.01%)</title><rect x="44.2125%" y="549" width="0.0141%" height="15" fill="rgb(225,92,11)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (14 samples, 0.01%)</title><rect x="44.2125%" y="533" width="0.0141%" height="15" fill="rgb(243,38,12)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (14 samples, 0.01%)</title><rect x="44.2125%" y="517" width="0.0141%" height="15" fill="rgb(208,139,16)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (14 samples, 0.01%)</title><rect x="44.2125%" y="501" width="0.0141%" height="15" fill="rgb(227,24,9)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (14 samples, 0.01%)</title><rect x="44.2125%" y="485" width="0.0141%" height="15" fill="rgb(206,62,11)" fg:x="43957" fg:w="14"/><text x="44.4625%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.01%)</title><rect x="44.2146%" y="469" width="0.0121%" height="15" fill="rgb(228,134,27)" fg:x="43959" fg:w="12"/><text x="44.4646%" y="479.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (18 samples, 0.02%)</title><rect x="44.2125%" y="789" width="0.0181%" height="15" fill="rgb(205,55,33)" fg:x="43957" fg:w="18"/><text x="44.4625%" y="799.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (18 samples, 0.02%)</title><rect x="44.2125%" y="773" width="0.0181%" height="15" fill="rgb(243,75,43)" fg:x="43957" fg:w="18"/><text x="44.4625%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="44.2125%" y="757" width="0.0181%" height="15" fill="rgb(223,27,42)" fg:x="43957" fg:w="18"/><text x="44.4625%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (24 samples, 0.02%)</title><rect x="44.2125%" y="805" width="0.0241%" height="15" fill="rgb(232,189,33)" fg:x="43957" fg:w="24"/><text x="44.4625%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (10 samples, 0.01%)</title><rect x="44.2900%" y="757" width="0.0101%" height="15" fill="rgb(210,9,39)" fg:x="44034" fg:w="10"/><text x="44.5400%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.01%)</title><rect x="44.3001%" y="757" width="0.0131%" height="15" fill="rgb(242,85,26)" fg:x="44044" fg:w="13"/><text x="44.5501%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.01%)</title><rect x="44.3031%" y="741" width="0.0101%" height="15" fill="rgb(248,44,4)" fg:x="44047" fg:w="10"/><text x="44.5531%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.06%)</title><rect x="44.2598%" y="789" width="0.0624%" height="15" fill="rgb(250,96,46)" fg:x="44004" fg:w="62"/><text x="44.5098%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.04%)</title><rect x="44.2789%" y="773" width="0.0432%" height="15" fill="rgb(229,116,26)" fg:x="44023" fg:w="43"/><text x="44.5289%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.01%)</title><rect x="44.3423%" y="741" width="0.0101%" height="15" fill="rgb(246,94,34)" fg:x="44086" fg:w="10"/><text x="44.5923%" y="751.50"></text></g><g><title>bytecode_verifier::instruction_consistency::InstructionConsistency::check_function_op (21 samples, 0.02%)</title><rect x="44.3332%" y="789" width="0.0211%" height="15" fill="rgb(251,73,21)" fg:x="44077" fg:w="21"/><text x="44.5832%" y="799.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (17 samples, 0.02%)</title><rect x="44.3373%" y="773" width="0.0171%" height="15" fill="rgb(254,121,25)" fg:x="44081" fg:w="17"/><text x="44.5873%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (14 samples, 0.01%)</title><rect x="44.3403%" y="757" width="0.0141%" height="15" fill="rgb(215,161,49)" fg:x="44084" fg:w="14"/><text x="44.5903%" y="767.50"></text></g><g><title>bytecode_verifier::instruction_consistency::InstructionConsistency::check_type_op (11 samples, 0.01%)</title><rect x="44.3544%" y="789" width="0.0111%" height="15" fill="rgb(221,43,13)" fg:x="44098" fg:w="11"/><text x="44.6044%" y="799.50"></text></g><g><title>bytecode_verifier::instruction_consistency::InstructionConsistency::check_instructions (132 samples, 0.13%)</title><rect x="44.2387%" y="805" width="0.1328%" height="15" fill="rgb(249,5,37)" fg:x="43983" fg:w="132"/><text x="44.4887%" y="815.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (11 samples, 0.01%)</title><rect x="44.4067%" y="389" width="0.0111%" height="15" fill="rgb(226,25,44)" fg:x="44150" fg:w="11"/><text x="44.6567%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11 samples, 0.01%)</title><rect x="44.4067%" y="373" width="0.0111%" height="15" fill="rgb(238,189,16)" fg:x="44150" fg:w="11"/><text x="44.6567%" y="383.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities::_{{closure}} (11 samples, 0.01%)</title><rect x="44.4067%" y="357" width="0.0111%" height="15" fill="rgb(251,186,8)" fg:x="44150" fg:w="11"/><text x="44.6567%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.01%)</title><rect x="44.4067%" y="341" width="0.0111%" height="15" fill="rgb(254,34,31)" fg:x="44150" fg:w="11"/><text x="44.6567%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.01%)</title><rect x="44.4067%" y="325" width="0.0111%" height="15" fill="rgb(225,215,27)" fg:x="44150" fg:w="11"/><text x="44.6567%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.03%)</title><rect x="44.4016%" y="437" width="0.0272%" height="15" fill="rgb(221,192,48)" fg:x="44145" fg:w="27"/><text x="44.6516%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.03%)</title><rect x="44.4016%" y="421" width="0.0272%" height="15" fill="rgb(219,137,20)" fg:x="44145" fg:w="27"/><text x="44.6516%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.03%)</title><rect x="44.4026%" y="405" width="0.0262%" height="15" fill="rgb(219,84,11)" fg:x="44146" fg:w="26"/><text x="44.6526%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_binary_format::file_format::AbilitySet&gt;,alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="44.4177%" y="389" width="0.0111%" height="15" fill="rgb(224,10,23)" fg:x="44161" fg:w="11"/><text x="44.6677%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (46 samples, 0.05%)</title><rect x="44.3906%" y="645" width="0.0463%" height="15" fill="rgb(248,22,39)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (46 samples, 0.05%)</title><rect x="44.3906%" y="629" width="0.0463%" height="15" fill="rgb(212,154,20)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="44.3906%" y="613" width="0.0463%" height="15" fill="rgb(236,199,50)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.05%)</title><rect x="44.3906%" y="597" width="0.0463%" height="15" fill="rgb(211,9,17)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.05%)</title><rect x="44.3906%" y="581" width="0.0463%" height="15" fill="rgb(243,216,36)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.05%)</title><rect x="44.3906%" y="565" width="0.0463%" height="15" fill="rgb(250,2,10)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.05%)</title><rect x="44.3906%" y="549" width="0.0463%" height="15" fill="rgb(226,50,48)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.05%)</title><rect x="44.3906%" y="533" width="0.0463%" height="15" fill="rgb(243,81,16)" fg:x="44134" fg:w="46"/><text x="44.6406%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.04%)</title><rect x="44.3966%" y="517" width="0.0402%" height="15" fill="rgb(250,14,2)" fg:x="44140" fg:w="40"/><text x="44.6466%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (40 samples, 0.04%)</title><rect x="44.3966%" y="501" width="0.0402%" height="15" fill="rgb(233,135,29)" fg:x="44140" fg:w="40"/><text x="44.6466%" y="511.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new::_{{closure}} (40 samples, 0.04%)</title><rect x="44.3966%" y="485" width="0.0402%" height="15" fill="rgb(224,64,43)" fg:x="44140" fg:w="40"/><text x="44.6466%" y="495.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (40 samples, 0.04%)</title><rect x="44.3966%" y="469" width="0.0402%" height="15" fill="rgb(238,84,13)" fg:x="44140" fg:w="40"/><text x="44.6466%" y="479.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (38 samples, 0.04%)</title><rect x="44.3986%" y="453" width="0.0382%" height="15" fill="rgb(253,48,26)" fg:x="44142" fg:w="38"/><text x="44.6486%" y="463.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (50 samples, 0.05%)</title><rect x="44.3876%" y="805" width="0.0503%" height="15" fill="rgb(205,223,31)" fg:x="44131" fg:w="50"/><text x="44.6376%" y="815.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (47 samples, 0.05%)</title><rect x="44.3906%" y="789" width="0.0473%" height="15" fill="rgb(221,41,32)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.05%)</title><rect x="44.3906%" y="773" width="0.0473%" height="15" fill="rgb(213,158,31)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (47 samples, 0.05%)</title><rect x="44.3906%" y="757" width="0.0473%" height="15" fill="rgb(245,126,43)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="767.50"></text></g><g><title>core::iter::adapters::process_results (47 samples, 0.05%)</title><rect x="44.3906%" y="741" width="0.0473%" height="15" fill="rgb(227,7,22)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (47 samples, 0.05%)</title><rect x="44.3906%" y="725" width="0.0473%" height="15" fill="rgb(252,90,44)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.05%)</title><rect x="44.3906%" y="709" width="0.0473%" height="15" fill="rgb(253,91,0)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.05%)</title><rect x="44.3906%" y="693" width="0.0473%" height="15" fill="rgb(252,175,49)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.05%)</title><rect x="44.3906%" y="677" width="0.0473%" height="15" fill="rgb(246,150,1)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 0.05%)</title><rect x="44.3906%" y="661" width="0.0473%" height="15" fill="rgb(241,192,25)" fg:x="44134" fg:w="47"/><text x="44.6406%" y="671.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (20 samples, 0.02%)</title><rect x="44.4549%" y="805" width="0.0201%" height="15" fill="rgb(239,187,11)" fg:x="44198" fg:w="20"/><text x="44.7049%" y="815.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::frame_root (19 samples, 0.02%)</title><rect x="44.4902%" y="805" width="0.0191%" height="15" fill="rgb(218,202,51)" fg:x="44233" fg:w="19"/><text x="44.7402%" y="815.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (11 samples, 0.01%)</title><rect x="44.5093%" y="805" width="0.0111%" height="15" fill="rgb(225,176,8)" fg:x="44252" fg:w="11"/><text x="44.7593%" y="815.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (11 samples, 0.01%)</title><rect x="44.5264%" y="805" width="0.0111%" height="15" fill="rgb(219,122,41)" fg:x="44269" fg:w="11"/><text x="44.7764%" y="815.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::move_loc (13 samples, 0.01%)</title><rect x="44.5565%" y="805" width="0.0131%" height="15" fill="rgb(248,140,20)" fg:x="44299" fg:w="13"/><text x="44.8065%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.06%)</title><rect x="44.7557%" y="773" width="0.0563%" height="15" fill="rgb(245,41,37)" fg:x="44497" fg:w="56"/><text x="45.0057%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (60 samples, 0.06%)</title><rect x="44.7527%" y="789" width="0.0603%" height="15" fill="rgb(235,82,39)" fg:x="44494" fg:w="60"/><text x="45.0027%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.01%)</title><rect x="44.8261%" y="773" width="0.0121%" height="15" fill="rgb(230,108,42)" fg:x="44567" fg:w="12"/><text x="45.0761%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (43 samples, 0.04%)</title><rect x="44.8130%" y="789" width="0.0432%" height="15" fill="rgb(215,150,50)" fg:x="44554" fg:w="43"/><text x="45.0630%" y="799.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="44.8432%" y="773" width="0.0131%" height="15" fill="rgb(233,212,5)" fg:x="44584" fg:w="13"/><text x="45.0932%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22 samples, 0.02%)</title><rect x="44.8895%" y="773" width="0.0221%" height="15" fill="rgb(245,80,22)" fg:x="44630" fg:w="22"/><text x="45.1395%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.01%)</title><rect x="44.8975%" y="757" width="0.0141%" height="15" fill="rgb(238,129,16)" fg:x="44638" fg:w="14"/><text x="45.1475%" y="767.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="44.9458%" y="645" width="0.0111%" height="15" fill="rgb(240,19,0)" fg:x="44686" fg:w="11"/><text x="45.1958%" y="655.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="44.9448%" y="661" width="0.0161%" height="15" fill="rgb(232,42,35)" fg:x="44685" fg:w="16"/><text x="45.1948%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="44.9428%" y="693" width="0.0211%" height="15" fill="rgb(223,130,24)" fg:x="44683" fg:w="21"/><text x="45.1928%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="44.9428%" y="677" width="0.0211%" height="15" fill="rgb(237,16,22)" fg:x="44683" fg:w="21"/><text x="45.1928%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.04%)</title><rect x="44.9377%" y="709" width="0.0412%" height="15" fill="rgb(248,192,20)" fg:x="44678" fg:w="41"/><text x="45.1877%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (19 samples, 0.02%)</title><rect x="44.9790%" y="709" width="0.0191%" height="15" fill="rgb(233,167,2)" fg:x="44719" fg:w="19"/><text x="45.2290%" y="719.50"></text></g><g><title>core::cmp::max (10 samples, 0.01%)</title><rect x="44.9981%" y="709" width="0.0101%" height="15" fill="rgb(252,71,44)" fg:x="44738" fg:w="10"/><text x="45.2481%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (103 samples, 0.10%)</title><rect x="44.9136%" y="725" width="0.1036%" height="15" fill="rgb(238,37,47)" fg:x="44654" fg:w="103"/><text x="45.1636%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (109 samples, 0.11%)</title><rect x="44.9116%" y="773" width="0.1096%" height="15" fill="rgb(214,202,54)" fg:x="44652" fg:w="109"/><text x="45.1616%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (108 samples, 0.11%)</title><rect x="44.9126%" y="757" width="0.1086%" height="15" fill="rgb(254,165,40)" fg:x="44653" fg:w="108"/><text x="45.1626%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (108 samples, 0.11%)</title><rect x="44.9126%" y="741" width="0.1086%" height="15" fill="rgb(246,173,38)" fg:x="44653" fg:w="108"/><text x="45.1626%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (172 samples, 0.17%)</title><rect x="44.8563%" y="789" width="0.1730%" height="15" fill="rgb(215,3,27)" fg:x="44597" fg:w="172"/><text x="45.1063%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="45.0403%" y="741" width="0.0121%" height="15" fill="rgb(239,169,51)" fg:x="44780" fg:w="12"/><text x="45.2903%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="45.0705%" y="725" width="0.0111%" height="15" fill="rgb(212,5,25)" fg:x="44810" fg:w="11"/><text x="45.3205%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="45.0816%" y="725" width="0.0111%" height="15" fill="rgb(243,45,17)" fg:x="44821" fg:w="11"/><text x="45.3316%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="45.1087%" y="709" width="0.0131%" height="15" fill="rgb(242,97,9)" fg:x="44848" fg:w="13"/><text x="45.3587%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="45.1107%" y="693" width="0.0111%" height="15" fill="rgb(228,71,31)" fg:x="44850" fg:w="11"/><text x="45.3607%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="45.1117%" y="677" width="0.0101%" height="15" fill="rgb(252,184,16)" fg:x="44851" fg:w="10"/><text x="45.3617%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (17 samples, 0.02%)</title><rect x="45.1067%" y="725" width="0.0171%" height="15" fill="rgb(236,169,46)" fg:x="44846" fg:w="17"/><text x="45.3567%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="45.1389%" y="549" width="0.0101%" height="15" fill="rgb(207,17,47)" fg:x="44878" fg:w="10"/><text x="45.3889%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.01%)</title><rect x="45.1379%" y="581" width="0.0121%" height="15" fill="rgb(206,201,28)" fg:x="44877" fg:w="12"/><text x="45.3879%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="45.1389%" y="565" width="0.0111%" height="15" fill="rgb(224,184,23)" fg:x="44878" fg:w="11"/><text x="45.3889%" y="575.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (21 samples, 0.02%)</title><rect x="45.1339%" y="597" width="0.0211%" height="15" fill="rgb(208,139,48)" fg:x="44873" fg:w="21"/><text x="45.3839%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (23 samples, 0.02%)</title><rect x="45.1339%" y="677" width="0.0231%" height="15" fill="rgb(208,130,10)" fg:x="44873" fg:w="23"/><text x="45.3839%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (23 samples, 0.02%)</title><rect x="45.1339%" y="661" width="0.0231%" height="15" fill="rgb(211,213,45)" fg:x="44873" fg:w="23"/><text x="45.3839%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 0.02%)</title><rect x="45.1339%" y="645" width="0.0231%" height="15" fill="rgb(235,100,30)" fg:x="44873" fg:w="23"/><text x="45.3839%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (23 samples, 0.02%)</title><rect x="45.1339%" y="629" width="0.0231%" height="15" fill="rgb(206,144,31)" fg:x="44873" fg:w="23"/><text x="45.3839%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (23 samples, 0.02%)</title><rect x="45.1339%" y="613" width="0.0231%" height="15" fill="rgb(224,200,26)" fg:x="44873" fg:w="23"/><text x="45.3839%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (42 samples, 0.04%)</title><rect x="45.1309%" y="693" width="0.0422%" height="15" fill="rgb(247,104,53)" fg:x="44870" fg:w="42"/><text x="45.3809%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="45.1590%" y="677" width="0.0141%" height="15" fill="rgb(220,14,17)" fg:x="44898" fg:w="14"/><text x="45.4090%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="45.1620%" y="661" width="0.0111%" height="15" fill="rgb(230,140,40)" fg:x="44901" fg:w="11"/><text x="45.4120%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="45.1872%" y="629" width="0.0131%" height="15" fill="rgb(229,2,41)" fg:x="44926" fg:w="13"/><text x="45.4372%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="45.1892%" y="613" width="0.0111%" height="15" fill="rgb(232,89,16)" fg:x="44928" fg:w="11"/><text x="45.4392%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (34 samples, 0.03%)</title><rect x="45.1731%" y="693" width="0.0342%" height="15" fill="rgb(247,59,52)" fg:x="44912" fg:w="34"/><text x="45.4231%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (28 samples, 0.03%)</title><rect x="45.1791%" y="677" width="0.0282%" height="15" fill="rgb(226,110,21)" fg:x="44918" fg:w="28"/><text x="45.4291%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (27 samples, 0.03%)</title><rect x="45.1801%" y="661" width="0.0272%" height="15" fill="rgb(224,176,43)" fg:x="44919" fg:w="27"/><text x="45.4301%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.03%)</title><rect x="45.1811%" y="645" width="0.0262%" height="15" fill="rgb(221,73,6)" fg:x="44920" fg:w="26"/><text x="45.4311%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (25 samples, 0.03%)</title><rect x="45.2073%" y="693" width="0.0251%" height="15" fill="rgb(232,78,19)" fg:x="44946" fg:w="25"/><text x="45.4573%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (23 samples, 0.02%)</title><rect x="45.2093%" y="677" width="0.0231%" height="15" fill="rgb(233,112,48)" fg:x="44948" fg:w="23"/><text x="45.4593%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.02%)</title><rect x="45.2093%" y="661" width="0.0231%" height="15" fill="rgb(243,131,47)" fg:x="44948" fg:w="23"/><text x="45.4593%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (21 samples, 0.02%)</title><rect x="45.2113%" y="645" width="0.0211%" height="15" fill="rgb(226,51,1)" fg:x="44950" fg:w="21"/><text x="45.4613%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="45.2153%" y="629" width="0.0171%" height="15" fill="rgb(247,58,7)" fg:x="44954" fg:w="17"/><text x="45.4653%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="45.2546%" y="501" width="0.0101%" height="15" fill="rgb(209,7,32)" fg:x="44993" fg:w="10"/><text x="45.5046%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="45.2546%" y="485" width="0.0101%" height="15" fill="rgb(209,39,41)" fg:x="44993" fg:w="10"/><text x="45.5046%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.02%)</title><rect x="45.2526%" y="517" width="0.0161%" height="15" fill="rgb(226,182,46)" fg:x="44991" fg:w="16"/><text x="45.5026%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (22 samples, 0.02%)</title><rect x="45.2495%" y="549" width="0.0221%" height="15" fill="rgb(230,219,10)" fg:x="44988" fg:w="22"/><text x="45.4995%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (20 samples, 0.02%)</title><rect x="45.2516%" y="533" width="0.0201%" height="15" fill="rgb(227,175,30)" fg:x="44990" fg:w="20"/><text x="45.5016%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (31 samples, 0.03%)</title><rect x="45.2475%" y="565" width="0.0312%" height="15" fill="rgb(217,2,50)" fg:x="44986" fg:w="31"/><text x="45.4975%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (42 samples, 0.04%)</title><rect x="45.2405%" y="645" width="0.0422%" height="15" fill="rgb(229,160,0)" fg:x="44979" fg:w="42"/><text x="45.4905%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (40 samples, 0.04%)</title><rect x="45.2425%" y="629" width="0.0402%" height="15" fill="rgb(207,78,37)" fg:x="44981" fg:w="40"/><text x="45.4925%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.04%)</title><rect x="45.2455%" y="613" width="0.0372%" height="15" fill="rgb(225,57,0)" fg:x="44984" fg:w="37"/><text x="45.4955%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (36 samples, 0.04%)</title><rect x="45.2465%" y="597" width="0.0362%" height="15" fill="rgb(232,154,2)" fg:x="44985" fg:w="36"/><text x="45.4965%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (35 samples, 0.04%)</title><rect x="45.2475%" y="581" width="0.0352%" height="15" fill="rgb(241,212,25)" fg:x="44986" fg:w="35"/><text x="45.4975%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (71 samples, 0.07%)</title><rect x="45.2324%" y="661" width="0.0714%" height="15" fill="rgb(226,69,20)" fg:x="44971" fg:w="71"/><text x="45.4824%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.02%)</title><rect x="45.2827%" y="645" width="0.0211%" height="15" fill="rgb(247,184,54)" fg:x="45021" fg:w="21"/><text x="45.5327%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="45.2868%" y="629" width="0.0171%" height="15" fill="rgb(210,145,0)" fg:x="45025" fg:w="17"/><text x="45.5368%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="45.2868%" y="613" width="0.0171%" height="15" fill="rgb(253,82,12)" fg:x="45025" fg:w="17"/><text x="45.5368%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.01%)</title><rect x="45.3290%" y="597" width="0.0101%" height="15" fill="rgb(245,42,11)" fg:x="45067" fg:w="10"/><text x="45.5790%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.01%)</title><rect x="45.3411%" y="597" width="0.0101%" height="15" fill="rgb(219,147,32)" fg:x="45079" fg:w="10"/><text x="45.5911%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (35 samples, 0.04%)</title><rect x="45.3230%" y="613" width="0.0352%" height="15" fill="rgb(246,12,7)" fg:x="45061" fg:w="35"/><text x="45.5730%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (49 samples, 0.05%)</title><rect x="45.3109%" y="629" width="0.0493%" height="15" fill="rgb(243,50,9)" fg:x="45049" fg:w="49"/><text x="45.5609%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (233 samples, 0.23%)</title><rect x="45.1268%" y="725" width="0.2344%" height="15" fill="rgb(219,149,6)" fg:x="44866" fg:w="233"/><text x="45.3768%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (233 samples, 0.23%)</title><rect x="45.1268%" y="709" width="0.2344%" height="15" fill="rgb(241,51,42)" fg:x="44866" fg:w="233"/><text x="45.3768%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (128 samples, 0.13%)</title><rect x="45.2324%" y="693" width="0.1287%" height="15" fill="rgb(226,128,27)" fg:x="44971" fg:w="128"/><text x="45.4824%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (128 samples, 0.13%)</title><rect x="45.2324%" y="677" width="0.1287%" height="15" fill="rgb(244,144,4)" fg:x="44971" fg:w="128"/><text x="45.4824%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (57 samples, 0.06%)</title><rect x="45.3039%" y="661" width="0.0573%" height="15" fill="rgb(221,4,13)" fg:x="45042" fg:w="57"/><text x="45.5539%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (54 samples, 0.05%)</title><rect x="45.3069%" y="645" width="0.0543%" height="15" fill="rgb(208,170,28)" fg:x="45045" fg:w="54"/><text x="45.5569%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="45.4125%" y="581" width="0.0131%" height="15" fill="rgb(226,131,13)" fg:x="45150" fg:w="13"/><text x="45.6625%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (33 samples, 0.03%)</title><rect x="45.3934%" y="597" width="0.0332%" height="15" fill="rgb(215,72,41)" fg:x="45131" fg:w="33"/><text x="45.6434%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (37 samples, 0.04%)</title><rect x="45.3914%" y="629" width="0.0372%" height="15" fill="rgb(243,108,20)" fg:x="45129" fg:w="37"/><text x="45.6414%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (37 samples, 0.04%)</title><rect x="45.3914%" y="613" width="0.0372%" height="15" fill="rgb(230,189,17)" fg:x="45129" fg:w="37"/><text x="45.6414%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.05%)</title><rect x="45.3843%" y="661" width="0.0453%" height="15" fill="rgb(220,50,17)" fg:x="45122" fg:w="45"/><text x="45.6343%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (41 samples, 0.04%)</title><rect x="45.3883%" y="645" width="0.0412%" height="15" fill="rgb(248,152,48)" fg:x="45126" fg:w="41"/><text x="45.6383%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (12 samples, 0.01%)</title><rect x="45.4487%" y="597" width="0.0121%" height="15" fill="rgb(244,91,11)" fg:x="45186" fg:w="12"/><text x="45.6987%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (12 samples, 0.01%)</title><rect x="45.4487%" y="581" width="0.0121%" height="15" fill="rgb(220,157,5)" fg:x="45186" fg:w="12"/><text x="45.6987%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (28 samples, 0.03%)</title><rect x="45.4366%" y="629" width="0.0282%" height="15" fill="rgb(253,137,8)" fg:x="45174" fg:w="28"/><text x="45.6866%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (28 samples, 0.03%)</title><rect x="45.4366%" y="613" width="0.0282%" height="15" fill="rgb(217,137,51)" fg:x="45174" fg:w="28"/><text x="45.6866%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.01%)</title><rect x="45.4769%" y="581" width="0.0111%" height="15" fill="rgb(218,209,53)" fg:x="45214" fg:w="11"/><text x="45.7269%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.01%)</title><rect x="45.4769%" y="565" width="0.0111%" height="15" fill="rgb(249,137,25)" fg:x="45214" fg:w="11"/><text x="45.7269%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (19 samples, 0.02%)</title><rect x="45.4718%" y="597" width="0.0191%" height="15" fill="rgb(239,155,26)" fg:x="45209" fg:w="19"/><text x="45.7218%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (27 samples, 0.03%)</title><rect x="45.4648%" y="629" width="0.0272%" height="15" fill="rgb(227,85,46)" fg:x="45202" fg:w="27"/><text x="45.7148%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (24 samples, 0.02%)</title><rect x="45.4678%" y="613" width="0.0241%" height="15" fill="rgb(251,107,43)" fg:x="45205" fg:w="24"/><text x="45.7178%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.01%)</title><rect x="45.5201%" y="517" width="0.0111%" height="15" fill="rgb(234,170,33)" fg:x="45257" fg:w="11"/><text x="45.7701%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="45.5161%" y="581" width="0.0171%" height="15" fill="rgb(206,29,35)" fg:x="45253" fg:w="17"/><text x="45.7661%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="45.5181%" y="565" width="0.0151%" height="15" fill="rgb(227,138,25)" fg:x="45255" fg:w="15"/><text x="45.7681%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="45.5191%" y="549" width="0.0141%" height="15" fill="rgb(249,131,35)" fg:x="45256" fg:w="14"/><text x="45.7691%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="45.5191%" y="533" width="0.0141%" height="15" fill="rgb(239,6,40)" fg:x="45256" fg:w="14"/><text x="45.7691%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="45.5151%" y="597" width="0.0201%" height="15" fill="rgb(246,136,47)" fg:x="45252" fg:w="20"/><text x="45.7651%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="45.5473%" y="485" width="0.0101%" height="15" fill="rgb(253,58,26)" fg:x="45284" fg:w="10"/><text x="45.7973%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (22 samples, 0.02%)</title><rect x="45.5392%" y="501" width="0.0221%" height="15" fill="rgb(237,141,10)" fg:x="45276" fg:w="22"/><text x="45.7892%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="45.5352%" y="565" width="0.0322%" height="15" fill="rgb(234,156,12)" fg:x="45272" fg:w="32"/><text x="45.7852%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (31 samples, 0.03%)</title><rect x="45.5362%" y="549" width="0.0312%" height="15" fill="rgb(243,224,36)" fg:x="45273" fg:w="31"/><text x="45.7862%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (31 samples, 0.03%)</title><rect x="45.5362%" y="533" width="0.0312%" height="15" fill="rgb(205,229,51)" fg:x="45273" fg:w="31"/><text x="45.7862%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (31 samples, 0.03%)</title><rect x="45.5362%" y="517" width="0.0312%" height="15" fill="rgb(223,189,4)" fg:x="45273" fg:w="31"/><text x="45.7862%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="45.5352%" y="597" width="0.0352%" height="15" fill="rgb(249,167,54)" fg:x="45272" fg:w="35"/><text x="45.7852%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="45.5352%" y="581" width="0.0352%" height="15" fill="rgb(218,34,28)" fg:x="45272" fg:w="35"/><text x="45.7852%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="45.6106%" y="469" width="0.0312%" height="15" fill="rgb(232,109,42)" fg:x="45347" fg:w="31"/><text x="45.8606%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="45.6257%" y="453" width="0.0161%" height="15" fill="rgb(248,214,46)" fg:x="45362" fg:w="16"/><text x="45.8757%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (72 samples, 0.07%)</title><rect x="45.5865%" y="517" width="0.0724%" height="15" fill="rgb(244,216,40)" fg:x="45323" fg:w="72"/><text x="45.8365%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (69 samples, 0.07%)</title><rect x="45.5895%" y="501" width="0.0694%" height="15" fill="rgb(231,226,31)" fg:x="45326" fg:w="69"/><text x="45.8395%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (64 samples, 0.06%)</title><rect x="45.5945%" y="485" width="0.0644%" height="15" fill="rgb(238,38,43)" fg:x="45331" fg:w="64"/><text x="45.8445%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (82 samples, 0.08%)</title><rect x="45.5784%" y="533" width="0.0825%" height="15" fill="rgb(208,88,43)" fg:x="45315" fg:w="82"/><text x="45.8284%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (84 samples, 0.08%)</title><rect x="45.5784%" y="549" width="0.0845%" height="15" fill="rgb(205,136,37)" fg:x="45315" fg:w="84"/><text x="45.8284%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.02%)</title><rect x="45.6720%" y="517" width="0.0221%" height="15" fill="rgb(237,34,14)" fg:x="45408" fg:w="22"/><text x="45.9220%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="45.6740%" y="501" width="0.0201%" height="15" fill="rgb(236,193,44)" fg:x="45410" fg:w="20"/><text x="45.9240%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="45.6760%" y="485" width="0.0181%" height="15" fill="rgb(231,48,10)" fg:x="45412" fg:w="18"/><text x="45.9260%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (32 samples, 0.03%)</title><rect x="45.6629%" y="533" width="0.0322%" height="15" fill="rgb(213,141,34)" fg:x="45399" fg:w="32"/><text x="45.9129%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (33 samples, 0.03%)</title><rect x="45.6629%" y="549" width="0.0332%" height="15" fill="rgb(249,130,34)" fg:x="45399" fg:w="33"/><text x="45.9129%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="45.7012%" y="501" width="0.0111%" height="15" fill="rgb(219,42,41)" fg:x="45437" fg:w="11"/><text x="45.9512%" y="511.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (370 samples, 0.37%)</title><rect x="45.3652%" y="709" width="0.3722%" height="15" fill="rgb(224,100,54)" fg:x="45103" fg:w="370"/><text x="45.6152%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (362 samples, 0.36%)</title><rect x="45.3733%" y="693" width="0.3641%" height="15" fill="rgb(229,200,27)" fg:x="45111" fg:w="362"/><text x="45.6233%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (358 samples, 0.36%)</title><rect x="45.3773%" y="677" width="0.3601%" height="15" fill="rgb(217,118,10)" fg:x="45115" fg:w="358"/><text x="45.6273%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (304 samples, 0.31%)</title><rect x="45.4316%" y="661" width="0.3058%" height="15" fill="rgb(206,22,3)" fg:x="45169" fg:w="304"/><text x="45.6816%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (304 samples, 0.31%)</title><rect x="45.4316%" y="645" width="0.3058%" height="15" fill="rgb(232,163,46)" fg:x="45169" fg:w="304"/><text x="45.6816%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (244 samples, 0.25%)</title><rect x="45.4919%" y="629" width="0.2454%" height="15" fill="rgb(206,95,13)" fg:x="45229" fg:w="244"/><text x="45.7419%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (231 samples, 0.23%)</title><rect x="45.5050%" y="613" width="0.2323%" height="15" fill="rgb(253,154,18)" fg:x="45242" fg:w="231"/><text x="45.7550%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (164 samples, 0.16%)</title><rect x="45.5724%" y="597" width="0.1650%" height="15" fill="rgb(219,32,23)" fg:x="45309" fg:w="164"/><text x="45.8224%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (161 samples, 0.16%)</title><rect x="45.5754%" y="581" width="0.1619%" height="15" fill="rgb(230,191,45)" fg:x="45312" fg:w="161"/><text x="45.8254%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (158 samples, 0.16%)</title><rect x="45.5784%" y="565" width="0.1589%" height="15" fill="rgb(229,64,36)" fg:x="45315" fg:w="158"/><text x="45.8284%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (41 samples, 0.04%)</title><rect x="45.6961%" y="549" width="0.0412%" height="15" fill="rgb(205,129,25)" fg:x="45432" fg:w="41"/><text x="45.9461%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (40 samples, 0.04%)</title><rect x="45.6971%" y="533" width="0.0402%" height="15" fill="rgb(254,112,7)" fg:x="45433" fg:w="40"/><text x="45.9471%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (40 samples, 0.04%)</title><rect x="45.6971%" y="517" width="0.0402%" height="15" fill="rgb(226,53,48)" fg:x="45433" fg:w="40"/><text x="45.9471%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (24 samples, 0.02%)</title><rect x="45.7132%" y="501" width="0.0241%" height="15" fill="rgb(214,153,38)" fg:x="45449" fg:w="24"/><text x="45.9632%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (23 samples, 0.02%)</title><rect x="45.7142%" y="485" width="0.0231%" height="15" fill="rgb(243,101,7)" fg:x="45450" fg:w="23"/><text x="45.9642%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.02%)</title><rect x="45.7142%" y="469" width="0.0231%" height="15" fill="rgb(240,140,22)" fg:x="45450" fg:w="23"/><text x="45.9642%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (18 samples, 0.02%)</title><rect x="45.7786%" y="565" width="0.0181%" height="15" fill="rgb(235,114,2)" fg:x="45514" fg:w="18"/><text x="46.0286%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (13 samples, 0.01%)</title><rect x="45.7967%" y="565" width="0.0131%" height="15" fill="rgb(242,59,12)" fg:x="45532" fg:w="13"/><text x="46.0467%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (14 samples, 0.01%)</title><rect x="45.8098%" y="565" width="0.0141%" height="15" fill="rgb(252,134,9)" fg:x="45545" fg:w="14"/><text x="46.0598%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (57 samples, 0.06%)</title><rect x="45.7736%" y="581" width="0.0573%" height="15" fill="rgb(236,4,44)" fg:x="45509" fg:w="57"/><text x="46.0236%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (73 samples, 0.07%)</title><rect x="45.7675%" y="613" width="0.0734%" height="15" fill="rgb(254,172,41)" fg:x="45503" fg:w="73"/><text x="46.0175%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (73 samples, 0.07%)</title><rect x="45.7675%" y="597" width="0.0734%" height="15" fill="rgb(244,63,20)" fg:x="45503" fg:w="73"/><text x="46.0175%" y="607.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="45.8309%" y="581" width="0.0101%" height="15" fill="rgb(250,73,31)" fg:x="45566" fg:w="10"/><text x="46.0809%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.08%)</title><rect x="45.7635%" y="645" width="0.0815%" height="15" fill="rgb(241,38,36)" fg:x="45499" fg:w="81"/><text x="46.0135%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (79 samples, 0.08%)</title><rect x="45.7655%" y="629" width="0.0795%" height="15" fill="rgb(245,211,2)" fg:x="45501" fg:w="79"/><text x="46.0155%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.08%)</title><rect x="45.7615%" y="661" width="0.0845%" height="15" fill="rgb(206,120,28)" fg:x="45497" fg:w="84"/><text x="46.0115%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (19 samples, 0.02%)</title><rect x="45.8480%" y="629" width="0.0191%" height="15" fill="rgb(211,59,34)" fg:x="45583" fg:w="19"/><text x="46.0980%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="45.8490%" y="613" width="0.0181%" height="15" fill="rgb(233,168,5)" fg:x="45584" fg:w="18"/><text x="46.0990%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (13 samples, 0.01%)</title><rect x="45.8752%" y="581" width="0.0131%" height="15" fill="rgb(234,33,13)" fg:x="45610" fg:w="13"/><text x="46.1252%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.01%)</title><rect x="45.8772%" y="565" width="0.0111%" height="15" fill="rgb(231,150,26)" fg:x="45612" fg:w="11"/><text x="46.1272%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (19 samples, 0.02%)</title><rect x="45.8701%" y="597" width="0.0191%" height="15" fill="rgb(217,191,4)" fg:x="45605" fg:w="19"/><text x="46.1201%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (21 samples, 0.02%)</title><rect x="45.8691%" y="613" width="0.0211%" height="15" fill="rgb(246,198,38)" fg:x="45604" fg:w="21"/><text x="46.1191%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (25 samples, 0.03%)</title><rect x="45.8671%" y="629" width="0.0251%" height="15" fill="rgb(245,64,37)" fg:x="45602" fg:w="25"/><text x="46.1171%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.01%)</title><rect x="45.9214%" y="501" width="0.0101%" height="15" fill="rgb(250,30,36)" fg:x="45656" fg:w="10"/><text x="46.1714%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.01%)</title><rect x="45.9315%" y="501" width="0.0101%" height="15" fill="rgb(217,86,53)" fg:x="45666" fg:w="10"/><text x="46.1815%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="45.9415%" y="501" width="0.0111%" height="15" fill="rgb(228,157,16)" fg:x="45676" fg:w="11"/><text x="46.1915%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (34 samples, 0.03%)</title><rect x="45.9204%" y="517" width="0.0342%" height="15" fill="rgb(217,59,31)" fg:x="45655" fg:w="34"/><text x="46.1704%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (38 samples, 0.04%)</title><rect x="45.9184%" y="549" width="0.0382%" height="15" fill="rgb(237,138,41)" fg:x="45653" fg:w="38"/><text x="46.1684%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (38 samples, 0.04%)</title><rect x="45.9184%" y="533" width="0.0382%" height="15" fill="rgb(227,91,49)" fg:x="45653" fg:w="38"/><text x="46.1684%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="45.9184%" y="581" width="0.0412%" height="15" fill="rgb(247,21,44)" fg:x="45653" fg:w="41"/><text x="46.1684%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (41 samples, 0.04%)</title><rect x="45.9184%" y="565" width="0.0412%" height="15" fill="rgb(219,210,51)" fg:x="45653" fg:w="41"/><text x="46.1684%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="45.9184%" y="597" width="0.0443%" height="15" fill="rgb(209,140,6)" fg:x="45653" fg:w="44"/><text x="46.1684%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (11 samples, 0.01%)</title><rect x="45.9868%" y="485" width="0.0111%" height="15" fill="rgb(221,188,24)" fg:x="45721" fg:w="11"/><text x="46.2368%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="45.9979%" y="485" width="0.0131%" height="15" fill="rgb(232,154,20)" fg:x="45732" fg:w="13"/><text x="46.2479%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (37 samples, 0.04%)</title><rect x="45.9757%" y="501" width="0.0372%" height="15" fill="rgb(244,137,50)" fg:x="45710" fg:w="37"/><text x="46.2257%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (49 samples, 0.05%)</title><rect x="45.9697%" y="533" width="0.0493%" height="15" fill="rgb(225,185,43)" fg:x="45704" fg:w="49"/><text x="46.2197%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (48 samples, 0.05%)</title><rect x="45.9707%" y="517" width="0.0483%" height="15" fill="rgb(213,205,38)" fg:x="45705" fg:w="48"/><text x="46.2207%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="45.9677%" y="565" width="0.0543%" height="15" fill="rgb(236,73,12)" fg:x="45702" fg:w="54"/><text x="46.2177%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (52 samples, 0.05%)</title><rect x="45.9697%" y="549" width="0.0523%" height="15" fill="rgb(235,219,13)" fg:x="45704" fg:w="52"/><text x="46.2197%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.06%)</title><rect x="45.9627%" y="597" width="0.0624%" height="15" fill="rgb(218,59,36)" fg:x="45697" fg:w="62"/><text x="46.2127%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.06%)</title><rect x="45.9627%" y="581" width="0.0624%" height="15" fill="rgb(205,110,39)" fg:x="45697" fg:w="62"/><text x="46.2127%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (17 samples, 0.02%)</title><rect x="46.0411%" y="533" width="0.0171%" height="15" fill="rgb(218,206,42)" fg:x="45775" fg:w="17"/><text x="46.2911%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="46.0461%" y="517" width="0.0121%" height="15" fill="rgb(248,125,24)" fg:x="45780" fg:w="12"/><text x="46.2961%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="46.0472%" y="501" width="0.0111%" height="15" fill="rgb(242,28,27)" fg:x="45781" fg:w="11"/><text x="46.2972%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="46.0854%" y="485" width="0.0241%" height="15" fill="rgb(216,228,15)" fg:x="45819" fg:w="24"/><text x="46.3354%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="46.0944%" y="469" width="0.0151%" height="15" fill="rgb(235,116,46)" fg:x="45828" fg:w="15"/><text x="46.3444%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.02%)</title><rect x="46.1095%" y="485" width="0.0161%" height="15" fill="rgb(224,18,32)" fg:x="45843" fg:w="16"/><text x="46.3595%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="46.1115%" y="469" width="0.0141%" height="15" fill="rgb(252,5,12)" fg:x="45845" fg:w="14"/><text x="46.3615%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (76 samples, 0.08%)</title><rect x="46.0582%" y="533" width="0.0764%" height="15" fill="rgb(251,36,5)" fg:x="45792" fg:w="76"/><text x="46.3082%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (74 samples, 0.07%)</title><rect x="46.0602%" y="517" width="0.0744%" height="15" fill="rgb(217,53,14)" fg:x="45794" fg:w="74"/><text x="46.3102%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (69 samples, 0.07%)</title><rect x="46.0653%" y="501" width="0.0694%" height="15" fill="rgb(215,86,45)" fg:x="45799" fg:w="69"/><text x="46.3153%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (97 samples, 0.10%)</title><rect x="46.0381%" y="549" width="0.0976%" height="15" fill="rgb(242,169,11)" fg:x="45772" fg:w="97"/><text x="46.2881%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (397 samples, 0.40%)</title><rect x="45.7374%" y="709" width="0.3993%" height="15" fill="rgb(211,213,45)" fg:x="45473" fg:w="397"/><text x="45.9874%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (387 samples, 0.39%)</title><rect x="45.7474%" y="693" width="0.3892%" height="15" fill="rgb(205,88,11)" fg:x="45483" fg:w="387"/><text x="45.9974%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (382 samples, 0.38%)</title><rect x="45.7524%" y="677" width="0.3842%" height="15" fill="rgb(252,69,26)" fg:x="45488" fg:w="382"/><text x="46.0024%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (288 samples, 0.29%)</title><rect x="45.8470%" y="661" width="0.2897%" height="15" fill="rgb(246,123,37)" fg:x="45582" fg:w="288"/><text x="46.0970%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (288 samples, 0.29%)</title><rect x="45.8470%" y="645" width="0.2897%" height="15" fill="rgb(212,205,5)" fg:x="45582" fg:w="288"/><text x="46.0970%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (243 samples, 0.24%)</title><rect x="45.8923%" y="629" width="0.2444%" height="15" fill="rgb(253,148,0)" fg:x="45627" fg:w="243"/><text x="46.1423%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (231 samples, 0.23%)</title><rect x="45.9043%" y="613" width="0.2323%" height="15" fill="rgb(239,22,4)" fg:x="45639" fg:w="231"/><text x="46.1543%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (106 samples, 0.11%)</title><rect x="46.0301%" y="597" width="0.1066%" height="15" fill="rgb(226,26,53)" fg:x="45764" fg:w="106"/><text x="46.2801%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (101 samples, 0.10%)</title><rect x="46.0351%" y="581" width="0.1016%" height="15" fill="rgb(225,229,45)" fg:x="45769" fg:w="101"/><text x="46.2851%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (99 samples, 0.10%)</title><rect x="46.0371%" y="565" width="0.0996%" height="15" fill="rgb(220,60,37)" fg:x="45771" fg:w="99"/><text x="46.2871%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.01%)</title><rect x="46.1387%" y="693" width="0.0131%" height="15" fill="rgb(217,180,35)" fg:x="45872" fg:w="13"/><text x="46.3887%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="46.1809%" y="581" width="0.0101%" height="15" fill="rgb(229,7,53)" fg:x="45914" fg:w="10"/><text x="46.4309%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (26 samples, 0.03%)</title><rect x="46.1679%" y="597" width="0.0262%" height="15" fill="rgb(254,137,3)" fg:x="45901" fg:w="26"/><text x="46.4179%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (36 samples, 0.04%)</title><rect x="46.1608%" y="629" width="0.0362%" height="15" fill="rgb(215,140,41)" fg:x="45894" fg:w="36"/><text x="46.4108%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (34 samples, 0.03%)</title><rect x="46.1628%" y="613" width="0.0342%" height="15" fill="rgb(250,80,15)" fg:x="45896" fg:w="34"/><text x="46.4128%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="46.1598%" y="661" width="0.0402%" height="15" fill="rgb(252,191,6)" fg:x="45893" fg:w="40"/><text x="46.4098%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (39 samples, 0.04%)</title><rect x="46.1608%" y="645" width="0.0392%" height="15" fill="rgb(246,217,18)" fg:x="45894" fg:w="39"/><text x="46.4108%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="46.2151%" y="597" width="0.0101%" height="15" fill="rgb(223,93,7)" fg:x="45948" fg:w="10"/><text x="46.4651%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (10 samples, 0.01%)</title><rect x="46.2151%" y="581" width="0.0101%" height="15" fill="rgb(225,55,52)" fg:x="45948" fg:w="10"/><text x="46.4651%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="46.2101%" y="613" width="0.0171%" height="15" fill="rgb(240,31,24)" fg:x="45943" fg:w="17"/><text x="46.4601%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (20 samples, 0.02%)</title><rect x="46.2081%" y="629" width="0.0201%" height="15" fill="rgb(205,56,52)" fg:x="45941" fg:w="20"/><text x="46.4581%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.01%)</title><rect x="46.2342%" y="597" width="0.0121%" height="15" fill="rgb(246,146,12)" fg:x="45967" fg:w="12"/><text x="46.4842%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (20 samples, 0.02%)</title><rect x="46.2282%" y="629" width="0.0201%" height="15" fill="rgb(239,84,36)" fg:x="45961" fg:w="20"/><text x="46.4782%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (17 samples, 0.02%)</title><rect x="46.2312%" y="613" width="0.0171%" height="15" fill="rgb(207,41,40)" fg:x="45964" fg:w="17"/><text x="46.4812%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (23 samples, 0.02%)</title><rect x="46.2775%" y="517" width="0.0231%" height="15" fill="rgb(241,179,25)" fg:x="46010" fg:w="23"/><text x="46.5275%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (28 samples, 0.03%)</title><rect x="46.2745%" y="549" width="0.0282%" height="15" fill="rgb(210,0,34)" fg:x="46007" fg:w="28"/><text x="46.5245%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (28 samples, 0.03%)</title><rect x="46.2745%" y="533" width="0.0282%" height="15" fill="rgb(225,217,29)" fg:x="46007" fg:w="28"/><text x="46.5245%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="46.2714%" y="597" width="0.0322%" height="15" fill="rgb(216,191,38)" fg:x="46004" fg:w="32"/><text x="46.5214%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="46.2725%" y="581" width="0.0312%" height="15" fill="rgb(232,140,52)" fg:x="46005" fg:w="31"/><text x="46.5225%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (29 samples, 0.03%)</title><rect x="46.2745%" y="565" width="0.0292%" height="15" fill="rgb(223,158,51)" fg:x="46007" fg:w="29"/><text x="46.5245%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="46.3036%" y="533" width="0.0131%" height="15" fill="rgb(235,29,51)" fg:x="46036" fg:w="13"/><text x="46.5536%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="46.3046%" y="517" width="0.0121%" height="15" fill="rgb(215,181,18)" fg:x="46037" fg:w="12"/><text x="46.5546%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="46.3036%" y="565" width="0.0141%" height="15" fill="rgb(227,125,34)" fg:x="46036" fg:w="14"/><text x="46.5536%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="46.3036%" y="549" width="0.0141%" height="15" fill="rgb(230,197,49)" fg:x="46036" fg:w="14"/><text x="46.5536%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="46.3036%" y="597" width="0.0171%" height="15" fill="rgb(239,141,16)" fg:x="46036" fg:w="17"/><text x="46.5536%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="46.3036%" y="581" width="0.0171%" height="15" fill="rgb(225,105,43)" fg:x="46036" fg:w="17"/><text x="46.5536%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (964 samples, 0.97%)</title><rect x="45.3612%" y="725" width="0.9696%" height="15" fill="rgb(214,131,14)" fg:x="45099" fg:w="964"/><text x="45.6112%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (193 samples, 0.19%)</title><rect x="46.1367%" y="709" width="0.1941%" height="15" fill="rgb(229,177,11)" fg:x="45870" fg:w="193"/><text x="46.3867%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (178 samples, 0.18%)</title><rect x="46.1518%" y="693" width="0.1790%" height="15" fill="rgb(231,180,14)" fg:x="45885" fg:w="178"/><text x="46.4018%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (176 samples, 0.18%)</title><rect x="46.1538%" y="677" width="0.1770%" height="15" fill="rgb(232,88,2)" fg:x="45887" fg:w="176"/><text x="46.4038%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (128 samples, 0.13%)</title><rect x="46.2020%" y="661" width="0.1287%" height="15" fill="rgb(205,220,8)" fg:x="45935" fg:w="128"/><text x="46.4520%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (128 samples, 0.13%)</title><rect x="46.2020%" y="645" width="0.1287%" height="15" fill="rgb(225,23,53)" fg:x="45935" fg:w="128"/><text x="46.4520%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (82 samples, 0.08%)</title><rect x="46.2483%" y="629" width="0.0825%" height="15" fill="rgb(213,62,29)" fg:x="45981" fg:w="82"/><text x="46.4983%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 0.08%)</title><rect x="46.2544%" y="613" width="0.0764%" height="15" fill="rgb(227,75,7)" fg:x="45987" fg:w="76"/><text x="46.5044%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_field_borrow (1,306 samples, 1.31%)</title><rect x="45.0393%" y="773" width="1.3136%" height="15" fill="rgb(207,105,14)" fg:x="44779" fg:w="1306"/><text x="45.2893%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_field_borrow (1,305 samples, 1.31%)</title><rect x="45.0403%" y="757" width="1.3126%" height="15" fill="rgb(245,62,29)" fg:x="44780" fg:w="1305"/><text x="45.2903%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (1,287 samples, 1.29%)</title><rect x="45.0584%" y="741" width="1.2945%" height="15" fill="rgb(236,202,4)" fg:x="44798" fg:w="1287"/><text x="45.3084%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(borrow_graph::references::RefID,borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt;&gt; (15 samples, 0.02%)</title><rect x="46.3378%" y="725" width="0.0151%" height="15" fill="rgb(250,67,1)" fg:x="46070" fg:w="15"/><text x="46.5878%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="46.3378%" y="709" width="0.0151%" height="15" fill="rgb(253,115,44)" fg:x="46070" fg:w="15"/><text x="46.5878%" y="719.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_full_borrows (12 samples, 0.01%)</title><rect x="46.3590%" y="757" width="0.0121%" height="15" fill="rgb(251,139,18)" fg:x="46091" fg:w="12"/><text x="46.6090%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (19 samples, 0.02%)</title><rect x="46.3710%" y="741" width="0.0191%" height="15" fill="rgb(218,22,32)" fg:x="46103" fg:w="19"/><text x="46.6210%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (19 samples, 0.02%)</title><rect x="46.3710%" y="725" width="0.0191%" height="15" fill="rgb(243,53,5)" fg:x="46103" fg:w="19"/><text x="46.6210%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="46.3761%" y="709" width="0.0141%" height="15" fill="rgb(227,56,16)" fg:x="46108" fg:w="14"/><text x="46.6261%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="46.3761%" y="693" width="0.0141%" height="15" fill="rgb(245,53,0)" fg:x="46108" fg:w="14"/><text x="46.6261%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="46.3761%" y="677" width="0.0141%" height="15" fill="rgb(216,170,35)" fg:x="46108" fg:w="14"/><text x="46.6261%" y="687.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field::_{{closure}} (41 samples, 0.04%)</title><rect x="46.3529%" y="773" width="0.0412%" height="15" fill="rgb(211,200,8)" fg:x="46085" fg:w="41"/><text x="46.6029%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_readable (23 samples, 0.02%)</title><rect x="46.3710%" y="757" width="0.0231%" height="15" fill="rgb(228,204,44)" fg:x="46103" fg:w="23"/><text x="46.6210%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (21 samples, 0.02%)</title><rect x="46.3972%" y="725" width="0.0211%" height="15" fill="rgb(214,121,17)" fg:x="46129" fg:w="21"/><text x="46.6472%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="46.4012%" y="709" width="0.0171%" height="15" fill="rgb(233,64,38)" fg:x="46133" fg:w="17"/><text x="46.6512%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="46.4032%" y="693" width="0.0151%" height="15" fill="rgb(253,54,19)" fg:x="46135" fg:w="15"/><text x="46.6532%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.02%)</title><rect x="46.4032%" y="677" width="0.0151%" height="15" fill="rgb(253,94,18)" fg:x="46135" fg:w="15"/><text x="46.6532%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (22 samples, 0.02%)</title><rect x="46.4304%" y="677" width="0.0221%" height="15" fill="rgb(227,57,52)" fg:x="46162" fg:w="22"/><text x="46.6804%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (58 samples, 0.06%)</title><rect x="46.3952%" y="741" width="0.0583%" height="15" fill="rgb(230,228,50)" fg:x="46127" fg:w="58"/><text x="46.6452%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (35 samples, 0.04%)</title><rect x="46.4183%" y="725" width="0.0352%" height="15" fill="rgb(217,205,27)" fg:x="46150" fg:w="35"/><text x="46.6683%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (31 samples, 0.03%)</title><rect x="46.4223%" y="709" width="0.0312%" height="15" fill="rgb(252,71,50)" fg:x="46154" fg:w="31"/><text x="46.6723%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (27 samples, 0.03%)</title><rect x="46.4263%" y="693" width="0.0272%" height="15" fill="rgb(209,86,4)" fg:x="46158" fg:w="27"/><text x="46.6763%" y="703.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (61 samples, 0.06%)</title><rect x="46.3942%" y="773" width="0.0614%" height="15" fill="rgb(229,94,0)" fg:x="46126" fg:w="61"/><text x="46.6442%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (61 samples, 0.06%)</title><rect x="46.3942%" y="757" width="0.0614%" height="15" fill="rgb(252,223,21)" fg:x="46126" fg:w="61"/><text x="46.6442%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="46.4947%" y="661" width="0.0101%" height="15" fill="rgb(230,210,4)" fg:x="46226" fg:w="10"/><text x="46.7447%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="46.4927%" y="725" width="0.0141%" height="15" fill="rgb(240,149,38)" fg:x="46224" fg:w="14"/><text x="46.7427%" y="735.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="46.4927%" y="709" width="0.0141%" height="15" fill="rgb(254,105,20)" fg:x="46224" fg:w="14"/><text x="46.7427%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="46.4927%" y="693" width="0.0141%" height="15" fill="rgb(253,87,46)" fg:x="46224" fg:w="14"/><text x="46.7427%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="46.4927%" y="677" width="0.0141%" height="15" fill="rgb(253,116,33)" fg:x="46224" fg:w="14"/><text x="46.7427%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="46.4927%" y="741" width="0.0191%" height="15" fill="rgb(229,198,5)" fg:x="46224" fg:w="19"/><text x="46.7427%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (10 samples, 0.01%)</title><rect x="46.5199%" y="677" width="0.0101%" height="15" fill="rgb(242,38,37)" fg:x="46251" fg:w="10"/><text x="46.7699%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (13 samples, 0.01%)</title><rect x="46.5189%" y="693" width="0.0131%" height="15" fill="rgb(242,69,53)" fg:x="46250" fg:w="13"/><text x="46.7689%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (17 samples, 0.02%)</title><rect x="46.5179%" y="709" width="0.0171%" height="15" fill="rgb(249,80,16)" fg:x="46249" fg:w="17"/><text x="46.7679%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.03%)</title><rect x="46.5118%" y="725" width="0.0342%" height="15" fill="rgb(206,128,11)" fg:x="46243" fg:w="34"/><text x="46.7618%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.04%)</title><rect x="46.5118%" y="741" width="0.0352%" height="15" fill="rgb(212,35,20)" fg:x="46243" fg:w="35"/><text x="46.7618%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (12 samples, 0.01%)</title><rect x="46.5611%" y="645" width="0.0121%" height="15" fill="rgb(236,79,13)" fg:x="46292" fg:w="12"/><text x="46.8111%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (34 samples, 0.03%)</title><rect x="46.5561%" y="661" width="0.0342%" height="15" fill="rgb(233,123,3)" fg:x="46287" fg:w="34"/><text x="46.8061%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (37 samples, 0.04%)</title><rect x="46.5551%" y="677" width="0.0372%" height="15" fill="rgb(214,93,52)" fg:x="46286" fg:w="37"/><text x="46.8051%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="46.5491%" y="725" width="0.0463%" height="15" fill="rgb(251,37,40)" fg:x="46280" fg:w="46"/><text x="46.7991%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (44 samples, 0.04%)</title><rect x="46.5511%" y="709" width="0.0443%" height="15" fill="rgb(227,80,54)" fg:x="46282" fg:w="44"/><text x="46.8011%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (42 samples, 0.04%)</title><rect x="46.5531%" y="693" width="0.0422%" height="15" fill="rgb(254,48,11)" fg:x="46284" fg:w="42"/><text x="46.8031%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="46.5470%" y="741" width="0.0513%" height="15" fill="rgb(235,193,26)" fg:x="46278" fg:w="51"/><text x="46.7970%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="46.6034%" y="645" width="0.0121%" height="15" fill="rgb(229,99,21)" fg:x="46334" fg:w="12"/><text x="46.8534%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="46.6024%" y="677" width="0.0151%" height="15" fill="rgb(211,140,41)" fg:x="46333" fg:w="15"/><text x="46.8524%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.02%)</title><rect x="46.6024%" y="661" width="0.0151%" height="15" fill="rgb(240,227,30)" fg:x="46333" fg:w="15"/><text x="46.8524%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="46.6004%" y="709" width="0.0191%" height="15" fill="rgb(215,224,45)" fg:x="46331" fg:w="19"/><text x="46.8504%" y="719.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (18 samples, 0.02%)</title><rect x="46.6014%" y="693" width="0.0181%" height="15" fill="rgb(206,123,31)" fg:x="46332" fg:w="18"/><text x="46.8514%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="46.5983%" y="725" width="0.0251%" height="15" fill="rgb(210,138,16)" fg:x="46329" fg:w="25"/><text x="46.8483%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="46.5983%" y="741" width="0.0282%" height="15" fill="rgb(228,57,28)" fg:x="46329" fg:w="28"/><text x="46.8483%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="46.6416%" y="677" width="0.0131%" height="15" fill="rgb(242,170,10)" fg:x="46372" fg:w="13"/><text x="46.8916%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (32 samples, 0.03%)</title><rect x="46.6295%" y="741" width="0.0322%" height="15" fill="rgb(228,214,39)" fg:x="46360" fg:w="32"/><text x="46.8795%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="46.6345%" y="725" width="0.0272%" height="15" fill="rgb(218,179,33)" fg:x="46365" fg:w="27"/><text x="46.8845%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="46.6366%" y="709" width="0.0251%" height="15" fill="rgb(235,193,39)" fg:x="46367" fg:w="25"/><text x="46.8866%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.02%)</title><rect x="46.6386%" y="693" width="0.0231%" height="15" fill="rgb(219,221,36)" fg:x="46369" fg:w="23"/><text x="46.8886%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.01%)</title><rect x="46.7392%" y="629" width="0.0101%" height="15" fill="rgb(248,218,19)" fg:x="46469" fg:w="10"/><text x="46.9892%" y="639.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (21 samples, 0.02%)</title><rect x="46.7552%" y="629" width="0.0211%" height="15" fill="rgb(205,50,9)" fg:x="46485" fg:w="21"/><text x="47.0052%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (46 samples, 0.05%)</title><rect x="46.7311%" y="645" width="0.0463%" height="15" fill="rgb(238,81,28)" fg:x="46461" fg:w="46"/><text x="46.9811%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (17 samples, 0.02%)</title><rect x="46.7904%" y="629" width="0.0171%" height="15" fill="rgb(235,110,19)" fg:x="46520" fg:w="17"/><text x="47.0404%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (129 samples, 0.13%)</title><rect x="46.6828%" y="709" width="0.1297%" height="15" fill="rgb(214,7,14)" fg:x="46413" fg:w="129"/><text x="46.9328%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (128 samples, 0.13%)</title><rect x="46.6838%" y="693" width="0.1287%" height="15" fill="rgb(211,77,3)" fg:x="46414" fg:w="128"/><text x="46.9338%" y="703.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (125 samples, 0.13%)</title><rect x="46.6868%" y="677" width="0.1257%" height="15" fill="rgb(229,5,9)" fg:x="46417" fg:w="125"/><text x="46.9368%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (118 samples, 0.12%)</title><rect x="46.6939%" y="661" width="0.1187%" height="15" fill="rgb(225,90,11)" fg:x="46424" fg:w="118"/><text x="46.9439%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (23 samples, 0.02%)</title><rect x="46.7894%" y="645" width="0.0231%" height="15" fill="rgb(242,56,8)" fg:x="46519" fg:w="23"/><text x="47.0394%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (170 samples, 0.17%)</title><rect x="46.6657%" y="725" width="0.1710%" height="15" fill="rgb(249,212,39)" fg:x="46396" fg:w="170"/><text x="46.9157%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.02%)</title><rect x="46.8146%" y="709" width="0.0221%" height="15" fill="rgb(236,90,9)" fg:x="46544" fg:w="22"/><text x="47.0646%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="46.8166%" y="693" width="0.0201%" height="15" fill="rgb(206,88,35)" fg:x="46546" fg:w="20"/><text x="47.0666%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="46.8186%" y="677" width="0.0181%" height="15" fill="rgb(205,126,30)" fg:x="46548" fg:w="18"/><text x="47.0686%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (180 samples, 0.18%)</title><rect x="46.6647%" y="741" width="0.1810%" height="15" fill="rgb(230,176,12)" fg:x="46395" fg:w="180"/><text x="46.9147%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (21 samples, 0.02%)</title><rect x="46.8709%" y="629" width="0.0211%" height="15" fill="rgb(243,19,9)" fg:x="46600" fg:w="21"/><text x="47.1209%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (12 samples, 0.01%)</title><rect x="46.9031%" y="613" width="0.0121%" height="15" fill="rgb(245,171,17)" fg:x="46632" fg:w="12"/><text x="47.1531%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (65 samples, 0.07%)</title><rect x="46.8548%" y="693" width="0.0654%" height="15" fill="rgb(227,52,21)" fg:x="46584" fg:w="65"/><text x="47.1048%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (65 samples, 0.07%)</title><rect x="46.8548%" y="677" width="0.0654%" height="15" fill="rgb(238,69,14)" fg:x="46584" fg:w="65"/><text x="47.1048%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (63 samples, 0.06%)</title><rect x="46.8568%" y="661" width="0.0634%" height="15" fill="rgb(241,156,39)" fg:x="46586" fg:w="63"/><text x="47.1068%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (61 samples, 0.06%)</title><rect x="46.8588%" y="645" width="0.0614%" height="15" fill="rgb(212,227,28)" fg:x="46588" fg:w="61"/><text x="47.1088%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (21 samples, 0.02%)</title><rect x="46.8991%" y="629" width="0.0211%" height="15" fill="rgb(209,118,27)" fg:x="46628" fg:w="21"/><text x="47.1491%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="46.9202%" y="693" width="0.0111%" height="15" fill="rgb(226,102,5)" fg:x="46649" fg:w="11"/><text x="47.1702%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="46.9212%" y="677" width="0.0101%" height="15" fill="rgb(223,34,3)" fg:x="46650" fg:w="10"/><text x="47.1712%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (85 samples, 0.09%)</title><rect x="46.8478%" y="709" width="0.0855%" height="15" fill="rgb(221,81,38)" fg:x="46577" fg:w="85"/><text x="47.0978%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (89 samples, 0.09%)</title><rect x="46.8458%" y="725" width="0.0895%" height="15" fill="rgb(236,219,28)" fg:x="46575" fg:w="89"/><text x="47.0958%" y="735.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (90 samples, 0.09%)</title><rect x="46.8458%" y="741" width="0.0905%" height="15" fill="rgb(213,200,14)" fg:x="46575" fg:w="90"/><text x="47.0958%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (16 samples, 0.02%)</title><rect x="46.9725%" y="597" width="0.0161%" height="15" fill="rgb(240,33,19)" fg:x="46701" fg:w="16"/><text x="47.2225%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (35 samples, 0.04%)</title><rect x="46.9705%" y="613" width="0.0352%" height="15" fill="rgb(233,113,27)" fg:x="46699" fg:w="35"/><text x="47.2205%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (45 samples, 0.05%)</title><rect x="46.9634%" y="645" width="0.0453%" height="15" fill="rgb(220,221,18)" fg:x="46692" fg:w="45"/><text x="47.2134%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (45 samples, 0.05%)</title><rect x="46.9634%" y="629" width="0.0453%" height="15" fill="rgb(238,92,8)" fg:x="46692" fg:w="45"/><text x="47.2134%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="46.9584%" y="677" width="0.0533%" height="15" fill="rgb(222,164,16)" fg:x="46687" fg:w="53"/><text x="47.2084%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (51 samples, 0.05%)</title><rect x="46.9604%" y="661" width="0.0513%" height="15" fill="rgb(241,119,3)" fg:x="46689" fg:w="51"/><text x="47.2104%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (16 samples, 0.02%)</title><rect x="47.0137%" y="645" width="0.0161%" height="15" fill="rgb(241,44,8)" fg:x="46742" fg:w="16"/><text x="47.2637%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.01%)</title><rect x="47.0168%" y="629" width="0.0131%" height="15" fill="rgb(230,36,40)" fg:x="46745" fg:w="13"/><text x="47.2668%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.01%)</title><rect x="47.0349%" y="613" width="0.0121%" height="15" fill="rgb(243,16,36)" fg:x="46763" fg:w="12"/><text x="47.2849%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (18 samples, 0.02%)</title><rect x="47.0298%" y="645" width="0.0181%" height="15" fill="rgb(231,4,26)" fg:x="46758" fg:w="18"/><text x="47.2798%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (16 samples, 0.02%)</title><rect x="47.0318%" y="629" width="0.0161%" height="15" fill="rgb(240,9,31)" fg:x="46760" fg:w="16"/><text x="47.2818%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (23 samples, 0.02%)</title><rect x="47.0711%" y="533" width="0.0231%" height="15" fill="rgb(207,173,15)" fg:x="46799" fg:w="23"/><text x="47.3211%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (28 samples, 0.03%)</title><rect x="47.0701%" y="565" width="0.0282%" height="15" fill="rgb(224,192,53)" fg:x="46798" fg:w="28"/><text x="47.3201%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (28 samples, 0.03%)</title><rect x="47.0701%" y="549" width="0.0282%" height="15" fill="rgb(223,67,28)" fg:x="46798" fg:w="28"/><text x="47.3201%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="47.0681%" y="597" width="0.0322%" height="15" fill="rgb(211,20,47)" fg:x="46796" fg:w="32"/><text x="47.3181%" y="607.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (30 samples, 0.03%)</title><rect x="47.0701%" y="581" width="0.0302%" height="15" fill="rgb(240,228,2)" fg:x="46798" fg:w="30"/><text x="47.3201%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="47.0681%" y="613" width="0.0342%" height="15" fill="rgb(248,151,12)" fg:x="46796" fg:w="34"/><text x="47.3181%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (19 samples, 0.02%)</title><rect x="47.1063%" y="517" width="0.0191%" height="15" fill="rgb(244,8,39)" fg:x="46834" fg:w="19"/><text x="47.3563%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (23 samples, 0.02%)</title><rect x="47.1053%" y="549" width="0.0231%" height="15" fill="rgb(222,26,8)" fg:x="46833" fg:w="23"/><text x="47.3553%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="47.1053%" y="533" width="0.0231%" height="15" fill="rgb(213,106,44)" fg:x="46833" fg:w="23"/><text x="47.3553%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="47.1033%" y="581" width="0.0262%" height="15" fill="rgb(214,129,20)" fg:x="46831" fg:w="26"/><text x="47.3533%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="47.1053%" y="565" width="0.0241%" height="15" fill="rgb(212,32,13)" fg:x="46833" fg:w="24"/><text x="47.3553%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="47.1023%" y="613" width="0.0282%" height="15" fill="rgb(208,168,33)" fg:x="46830" fg:w="28"/><text x="47.3523%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="47.1033%" y="597" width="0.0272%" height="15" fill="rgb(231,207,8)" fg:x="46831" fg:w="27"/><text x="47.3533%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="47.1686%" y="485" width="0.0251%" height="15" fill="rgb(235,219,23)" fg:x="46896" fg:w="25"/><text x="47.4186%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="47.1807%" y="469" width="0.0131%" height="15" fill="rgb(226,216,26)" fg:x="46908" fg:w="13"/><text x="47.4307%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (15 samples, 0.02%)</title><rect x="47.1938%" y="485" width="0.0151%" height="15" fill="rgb(239,137,16)" fg:x="46921" fg:w="15"/><text x="47.4438%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (74 samples, 0.07%)</title><rect x="47.1455%" y="533" width="0.0744%" height="15" fill="rgb(207,12,36)" fg:x="46873" fg:w="74"/><text x="47.3955%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (72 samples, 0.07%)</title><rect x="47.1475%" y="517" width="0.0724%" height="15" fill="rgb(210,214,24)" fg:x="46875" fg:w="72"/><text x="47.3975%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (70 samples, 0.07%)</title><rect x="47.1495%" y="501" width="0.0704%" height="15" fill="rgb(206,56,30)" fg:x="46877" fg:w="70"/><text x="47.3995%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (10 samples, 0.01%)</title><rect x="47.2099%" y="485" width="0.0101%" height="15" fill="rgb(228,143,26)" fg:x="46937" fg:w="10"/><text x="47.4599%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (88 samples, 0.09%)</title><rect x="47.1344%" y="549" width="0.0885%" height="15" fill="rgb(216,218,46)" fg:x="46862" fg:w="88"/><text x="47.3844%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (90 samples, 0.09%)</title><rect x="47.1344%" y="565" width="0.0905%" height="15" fill="rgb(206,6,19)" fg:x="46862" fg:w="90"/><text x="47.3844%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.03%)</title><rect x="47.2390%" y="533" width="0.0262%" height="15" fill="rgb(239,177,51)" fg:x="46966" fg:w="26"/><text x="47.4890%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="47.2400%" y="517" width="0.0251%" height="15" fill="rgb(216,55,25)" fg:x="46967" fg:w="25"/><text x="47.4900%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.02%)</title><rect x="47.2411%" y="501" width="0.0241%" height="15" fill="rgb(231,163,29)" fg:x="46968" fg:w="24"/><text x="47.4911%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (39 samples, 0.04%)</title><rect x="47.2270%" y="549" width="0.0392%" height="15" fill="rgb(232,149,50)" fg:x="46954" fg:w="39"/><text x="47.4770%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (42 samples, 0.04%)</title><rect x="47.2250%" y="565" width="0.0422%" height="15" fill="rgb(223,142,48)" fg:x="46952" fg:w="42"/><text x="47.4750%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (362 samples, 0.36%)</title><rect x="46.9393%" y="725" width="0.3641%" height="15" fill="rgb(245,83,23)" fg:x="46668" fg:w="362"/><text x="47.1893%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (353 samples, 0.36%)</title><rect x="46.9484%" y="709" width="0.3551%" height="15" fill="rgb(224,63,2)" fg:x="46677" fg:w="353"/><text x="47.1984%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (347 samples, 0.35%)</title><rect x="46.9544%" y="693" width="0.3490%" height="15" fill="rgb(218,65,53)" fg:x="46683" fg:w="347"/><text x="47.2044%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (290 samples, 0.29%)</title><rect x="47.0117%" y="677" width="0.2917%" height="15" fill="rgb(221,84,29)" fg:x="46740" fg:w="290"/><text x="47.2617%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (290 samples, 0.29%)</title><rect x="47.0117%" y="661" width="0.2917%" height="15" fill="rgb(234,0,32)" fg:x="46740" fg:w="290"/><text x="47.2617%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (254 samples, 0.26%)</title><rect x="47.0479%" y="645" width="0.2555%" height="15" fill="rgb(206,20,16)" fg:x="46776" fg:w="254"/><text x="47.2979%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (241 samples, 0.24%)</title><rect x="47.0610%" y="629" width="0.2424%" height="15" fill="rgb(244,172,18)" fg:x="46789" fg:w="241"/><text x="47.3110%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (171 samples, 0.17%)</title><rect x="47.1314%" y="613" width="0.1720%" height="15" fill="rgb(254,133,1)" fg:x="46859" fg:w="171"/><text x="47.3814%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (171 samples, 0.17%)</title><rect x="47.1314%" y="597" width="0.1720%" height="15" fill="rgb(222,206,41)" fg:x="46859" fg:w="171"/><text x="47.3814%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (171 samples, 0.17%)</title><rect x="47.1314%" y="581" width="0.1720%" height="15" fill="rgb(212,3,42)" fg:x="46859" fg:w="171"/><text x="47.3814%" y="591.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (36 samples, 0.04%)</title><rect x="47.2672%" y="565" width="0.0362%" height="15" fill="rgb(241,11,4)" fg:x="46994" fg:w="36"/><text x="47.5172%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (36 samples, 0.04%)</title><rect x="47.2672%" y="549" width="0.0362%" height="15" fill="rgb(205,19,26)" fg:x="46994" fg:w="36"/><text x="47.5172%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (35 samples, 0.04%)</title><rect x="47.2682%" y="533" width="0.0352%" height="15" fill="rgb(210,179,32)" fg:x="46995" fg:w="35"/><text x="47.5182%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="47.2833%" y="517" width="0.0201%" height="15" fill="rgb(227,116,49)" fg:x="47010" fg:w="20"/><text x="47.5333%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.02%)</title><rect x="47.2843%" y="501" width="0.0191%" height="15" fill="rgb(211,146,6)" fg:x="47011" fg:w="19"/><text x="47.5343%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="47.2863%" y="485" width="0.0171%" height="15" fill="rgb(219,44,39)" fg:x="47013" fg:w="17"/><text x="47.5363%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="47.3094%" y="677" width="0.0101%" height="15" fill="rgb(234,128,11)" fg:x="47036" fg:w="10"/><text x="47.5594%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (17 samples, 0.02%)</title><rect x="47.3034%" y="709" width="0.0171%" height="15" fill="rgb(220,183,53)" fg:x="47030" fg:w="17"/><text x="47.5534%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (15 samples, 0.02%)</title><rect x="47.3054%" y="693" width="0.0151%" height="15" fill="rgb(213,219,32)" fg:x="47032" fg:w="15"/><text x="47.5554%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.01%)</title><rect x="47.3587%" y="581" width="0.0121%" height="15" fill="rgb(232,156,16)" fg:x="47085" fg:w="12"/><text x="47.6087%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (33 samples, 0.03%)</title><rect x="47.3396%" y="597" width="0.0332%" height="15" fill="rgb(246,135,34)" fg:x="47066" fg:w="33"/><text x="47.5896%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (47 samples, 0.05%)</title><rect x="47.3326%" y="629" width="0.0473%" height="15" fill="rgb(241,99,0)" fg:x="47059" fg:w="47"/><text x="47.5826%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (47 samples, 0.05%)</title><rect x="47.3326%" y="613" width="0.0473%" height="15" fill="rgb(222,103,45)" fg:x="47059" fg:w="47"/><text x="47.5826%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.06%)</title><rect x="47.3286%" y="661" width="0.0553%" height="15" fill="rgb(212,57,4)" fg:x="47055" fg:w="55"/><text x="47.5786%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (53 samples, 0.05%)</title><rect x="47.3306%" y="645" width="0.0533%" height="15" fill="rgb(215,68,47)" fg:x="47057" fg:w="53"/><text x="47.5806%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.06%)</title><rect x="47.3286%" y="677" width="0.0593%" height="15" fill="rgb(230,84,2)" fg:x="47055" fg:w="59"/><text x="47.5786%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="47.4000%" y="613" width="0.0101%" height="15" fill="rgb(220,102,14)" fg:x="47126" fg:w="10"/><text x="47.6500%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (20 samples, 0.02%)</title><rect x="47.3929%" y="645" width="0.0201%" height="15" fill="rgb(240,10,32)" fg:x="47119" fg:w="20"/><text x="47.6429%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="47.3949%" y="629" width="0.0181%" height="15" fill="rgb(215,47,27)" fg:x="47121" fg:w="18"/><text x="47.6449%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (16 samples, 0.02%)</title><rect x="47.4271%" y="597" width="0.0161%" height="15" fill="rgb(233,188,43)" fg:x="47153" fg:w="16"/><text x="47.6771%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (16 samples, 0.02%)</title><rect x="47.4271%" y="581" width="0.0161%" height="15" fill="rgb(253,190,1)" fg:x="47153" fg:w="16"/><text x="47.6771%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (22 samples, 0.02%)</title><rect x="47.4221%" y="613" width="0.0221%" height="15" fill="rgb(206,114,52)" fg:x="47148" fg:w="22"/><text x="47.6721%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (32 samples, 0.03%)</title><rect x="47.4130%" y="645" width="0.0322%" height="15" fill="rgb(233,120,37)" fg:x="47139" fg:w="32"/><text x="47.6630%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (30 samples, 0.03%)</title><rect x="47.4151%" y="629" width="0.0302%" height="15" fill="rgb(214,52,39)" fg:x="47141" fg:w="30"/><text x="47.6651%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.01%)</title><rect x="47.4744%" y="533" width="0.0131%" height="15" fill="rgb(223,80,29)" fg:x="47200" fg:w="13"/><text x="47.7244%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="47.4714%" y="565" width="0.0171%" height="15" fill="rgb(230,101,40)" fg:x="47197" fg:w="17"/><text x="47.7214%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.02%)</title><rect x="47.4724%" y="549" width="0.0161%" height="15" fill="rgb(219,211,8)" fg:x="47198" fg:w="16"/><text x="47.7224%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="47.4684%" y="597" width="0.0221%" height="15" fill="rgb(252,126,28)" fg:x="47194" fg:w="22"/><text x="47.7184%" y="607.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (20 samples, 0.02%)</title><rect x="47.4704%" y="581" width="0.0201%" height="15" fill="rgb(215,56,38)" fg:x="47196" fg:w="20"/><text x="47.7204%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="47.4684%" y="613" width="0.0262%" height="15" fill="rgb(249,55,44)" fg:x="47194" fg:w="26"/><text x="47.7184%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (24 samples, 0.02%)</title><rect x="47.5016%" y="517" width="0.0241%" height="15" fill="rgb(220,221,32)" fg:x="47227" fg:w="24"/><text x="47.7516%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (31 samples, 0.03%)</title><rect x="47.4975%" y="549" width="0.0312%" height="15" fill="rgb(212,216,41)" fg:x="47223" fg:w="31"/><text x="47.7475%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (31 samples, 0.03%)</title><rect x="47.4975%" y="533" width="0.0312%" height="15" fill="rgb(228,213,43)" fg:x="47223" fg:w="31"/><text x="47.7475%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="47.4955%" y="581" width="0.0342%" height="15" fill="rgb(211,31,26)" fg:x="47221" fg:w="34"/><text x="47.7455%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="47.4975%" y="565" width="0.0322%" height="15" fill="rgb(229,202,19)" fg:x="47223" fg:w="32"/><text x="47.7475%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="47.4945%" y="613" width="0.0362%" height="15" fill="rgb(229,105,46)" fg:x="47220" fg:w="36"/><text x="47.7445%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="47.4945%" y="597" width="0.0362%" height="15" fill="rgb(235,108,1)" fg:x="47220" fg:w="36"/><text x="47.7445%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="47.5398%" y="549" width="0.0101%" height="15" fill="rgb(245,111,35)" fg:x="47265" fg:w="10"/><text x="47.7898%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="47.5730%" y="501" width="0.0191%" height="15" fill="rgb(219,185,31)" fg:x="47298" fg:w="19"/><text x="47.8230%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="47.5810%" y="485" width="0.0111%" height="15" fill="rgb(214,4,43)" fg:x="47306" fg:w="11"/><text x="47.8310%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (19 samples, 0.02%)</title><rect x="47.5931%" y="501" width="0.0191%" height="15" fill="rgb(235,227,40)" fg:x="47318" fg:w="19"/><text x="47.8431%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="47.5991%" y="485" width="0.0131%" height="15" fill="rgb(230,88,30)" fg:x="47324" fg:w="13"/><text x="47.8491%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="47.6001%" y="469" width="0.0121%" height="15" fill="rgb(216,217,1)" fg:x="47325" fg:w="12"/><text x="47.8501%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (69 samples, 0.07%)</title><rect x="47.5508%" y="549" width="0.0694%" height="15" fill="rgb(248,139,50)" fg:x="47276" fg:w="69"/><text x="47.8008%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (69 samples, 0.07%)</title><rect x="47.5508%" y="533" width="0.0694%" height="15" fill="rgb(233,1,21)" fg:x="47276" fg:w="69"/><text x="47.8008%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (65 samples, 0.07%)</title><rect x="47.5549%" y="517" width="0.0654%" height="15" fill="rgb(215,183,12)" fg:x="47280" fg:w="65"/><text x="47.8049%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (82 samples, 0.08%)</title><rect x="47.5388%" y="565" width="0.0825%" height="15" fill="rgb(229,104,42)" fg:x="47264" fg:w="82"/><text x="47.7888%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (318 samples, 0.32%)</title><rect x="47.3034%" y="725" width="0.3198%" height="15" fill="rgb(243,34,48)" fg:x="47030" fg:w="318"/><text x="47.5534%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (301 samples, 0.30%)</title><rect x="47.3205%" y="709" width="0.3027%" height="15" fill="rgb(239,11,44)" fg:x="47047" fg:w="301"/><text x="47.5705%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (301 samples, 0.30%)</title><rect x="47.3205%" y="693" width="0.3027%" height="15" fill="rgb(231,98,35)" fg:x="47047" fg:w="301"/><text x="47.5705%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (233 samples, 0.23%)</title><rect x="47.3889%" y="677" width="0.2344%" height="15" fill="rgb(233,28,25)" fg:x="47115" fg:w="233"/><text x="47.6389%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (233 samples, 0.23%)</title><rect x="47.3889%" y="661" width="0.2344%" height="15" fill="rgb(234,123,11)" fg:x="47115" fg:w="233"/><text x="47.6389%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (177 samples, 0.18%)</title><rect x="47.4452%" y="645" width="0.1780%" height="15" fill="rgb(220,69,3)" fg:x="47171" fg:w="177"/><text x="47.6952%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (166 samples, 0.17%)</title><rect x="47.4563%" y="629" width="0.1670%" height="15" fill="rgb(214,64,36)" fg:x="47182" fg:w="166"/><text x="47.7063%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (91 samples, 0.09%)</title><rect x="47.5317%" y="613" width="0.0915%" height="15" fill="rgb(211,138,32)" fg:x="47257" fg:w="91"/><text x="47.7817%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (87 samples, 0.09%)</title><rect x="47.5358%" y="597" width="0.0875%" height="15" fill="rgb(213,118,47)" fg:x="47261" fg:w="87"/><text x="47.7858%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (85 samples, 0.09%)</title><rect x="47.5378%" y="581" width="0.0855%" height="15" fill="rgb(243,124,49)" fg:x="47263" fg:w="85"/><text x="47.7878%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (13 samples, 0.01%)</title><rect x="47.6514%" y="597" width="0.0131%" height="15" fill="rgb(221,30,28)" fg:x="47376" fg:w="13"/><text x="47.9014%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.01%)</title><rect x="47.6645%" y="597" width="0.0101%" height="15" fill="rgb(246,37,13)" fg:x="47389" fg:w="10"/><text x="47.9145%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (33 samples, 0.03%)</title><rect x="47.6504%" y="613" width="0.0332%" height="15" fill="rgb(249,66,14)" fg:x="47375" fg:w="33"/><text x="47.9004%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (43 samples, 0.04%)</title><rect x="47.6434%" y="645" width="0.0432%" height="15" fill="rgb(213,166,5)" fg:x="47368" fg:w="43"/><text x="47.8934%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (43 samples, 0.04%)</title><rect x="47.6434%" y="629" width="0.0432%" height="15" fill="rgb(221,66,24)" fg:x="47368" fg:w="43"/><text x="47.8934%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.05%)</title><rect x="47.6404%" y="677" width="0.0503%" height="15" fill="rgb(210,132,17)" fg:x="47365" fg:w="50"/><text x="47.8904%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (49 samples, 0.05%)</title><rect x="47.6414%" y="661" width="0.0493%" height="15" fill="rgb(243,202,5)" fg:x="47366" fg:w="49"/><text x="47.8914%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (19 samples, 0.02%)</title><rect x="47.6947%" y="645" width="0.0191%" height="15" fill="rgb(233,70,48)" fg:x="47419" fg:w="19"/><text x="47.9447%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="47.6957%" y="629" width="0.0181%" height="15" fill="rgb(238,41,26)" fg:x="47420" fg:w="18"/><text x="47.9457%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (15 samples, 0.02%)</title><rect x="47.7138%" y="645" width="0.0151%" height="15" fill="rgb(241,19,31)" fg:x="47438" fg:w="15"/><text x="47.9638%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (14 samples, 0.01%)</title><rect x="47.7148%" y="629" width="0.0141%" height="15" fill="rgb(214,76,10)" fg:x="47439" fg:w="14"/><text x="47.9648%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.01%)</title><rect x="47.7158%" y="613" width="0.0131%" height="15" fill="rgb(254,202,22)" fg:x="47440" fg:w="13"/><text x="47.9658%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (23 samples, 0.02%)</title><rect x="47.7490%" y="533" width="0.0231%" height="15" fill="rgb(214,72,24)" fg:x="47473" fg:w="23"/><text x="47.9990%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (28 samples, 0.03%)</title><rect x="47.7450%" y="565" width="0.0282%" height="15" fill="rgb(221,92,46)" fg:x="47469" fg:w="28"/><text x="47.9950%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (26 samples, 0.03%)</title><rect x="47.7470%" y="549" width="0.0262%" height="15" fill="rgb(246,13,50)" fg:x="47471" fg:w="26"/><text x="47.9970%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="47.7419%" y="597" width="0.0332%" height="15" fill="rgb(240,165,38)" fg:x="47466" fg:w="33"/><text x="47.9919%" y="607.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="47.7430%" y="581" width="0.0322%" height="15" fill="rgb(241,24,51)" fg:x="47467" fg:w="32"/><text x="47.9930%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="47.7419%" y="613" width="0.0352%" height="15" fill="rgb(227,51,44)" fg:x="47466" fg:w="35"/><text x="47.9919%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="47.7772%" y="581" width="0.0181%" height="15" fill="rgb(231,121,3)" fg:x="47501" fg:w="18"/><text x="48.0272%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="47.7782%" y="565" width="0.0171%" height="15" fill="rgb(245,3,41)" fg:x="47502" fg:w="17"/><text x="48.0282%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="47.7782%" y="549" width="0.0171%" height="15" fill="rgb(214,13,26)" fg:x="47502" fg:w="17"/><text x="48.0282%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.02%)</title><rect x="47.7782%" y="533" width="0.0171%" height="15" fill="rgb(252,75,11)" fg:x="47502" fg:w="17"/><text x="48.0282%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (17 samples, 0.02%)</title><rect x="47.7782%" y="517" width="0.0171%" height="15" fill="rgb(218,226,17)" fg:x="47502" fg:w="17"/><text x="48.0282%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="47.7772%" y="613" width="0.0191%" height="15" fill="rgb(248,89,38)" fg:x="47501" fg:w="19"/><text x="48.0272%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="47.7772%" y="597" width="0.0191%" height="15" fill="rgb(237,73,46)" fg:x="47501" fg:w="19"/><text x="48.0272%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (857 samples, 0.86%)</title><rect x="46.9363%" y="741" width="0.8620%" height="15" fill="rgb(242,78,33)" fg:x="46665" fg:w="857"/><text x="47.1863%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (174 samples, 0.18%)</title><rect x="47.6233%" y="725" width="0.1750%" height="15" fill="rgb(235,60,3)" fg:x="47348" fg:w="174"/><text x="47.8733%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (166 samples, 0.17%)</title><rect x="47.6313%" y="709" width="0.1670%" height="15" fill="rgb(216,172,19)" fg:x="47356" fg:w="166"/><text x="47.8813%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (163 samples, 0.16%)</title><rect x="47.6343%" y="693" width="0.1639%" height="15" fill="rgb(227,6,42)" fg:x="47359" fg:w="163"/><text x="47.8843%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (106 samples, 0.11%)</title><rect x="47.6917%" y="677" width="0.1066%" height="15" fill="rgb(223,207,42)" fg:x="47416" fg:w="106"/><text x="47.9417%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (106 samples, 0.11%)</title><rect x="47.6917%" y="661" width="0.1066%" height="15" fill="rgb(246,138,30)" fg:x="47416" fg:w="106"/><text x="47.9417%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (69 samples, 0.07%)</title><rect x="47.7289%" y="645" width="0.0694%" height="15" fill="rgb(251,199,47)" fg:x="47453" fg:w="69"/><text x="47.9789%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (61 samples, 0.06%)</title><rect x="47.7369%" y="629" width="0.0614%" height="15" fill="rgb(228,218,44)" fg:x="47461" fg:w="61"/><text x="47.9869%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="47.8234%" y="661" width="0.0171%" height="15" fill="rgb(220,68,6)" fg:x="47547" fg:w="17"/><text x="48.0734%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="47.8234%" y="645" width="0.0171%" height="15" fill="rgb(240,60,26)" fg:x="47547" fg:w="17"/><text x="48.0734%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="47.8234%" y="629" width="0.0171%" height="15" fill="rgb(211,200,19)" fg:x="47547" fg:w="17"/><text x="48.0734%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="47.8003%" y="725" width="0.0432%" height="15" fill="rgb(242,145,30)" fg:x="47524" fg:w="43"/><text x="48.0503%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 0.04%)</title><rect x="47.8033%" y="709" width="0.0402%" height="15" fill="rgb(225,64,13)" fg:x="47527" fg:w="40"/><text x="48.0533%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="47.8053%" y="693" width="0.0382%" height="15" fill="rgb(218,103,35)" fg:x="47529" fg:w="38"/><text x="48.0553%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="47.8053%" y="677" width="0.0382%" height="15" fill="rgb(216,93,46)" fg:x="47529" fg:w="38"/><text x="48.0553%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (13 samples, 0.01%)</title><rect x="47.8486%" y="709" width="0.0131%" height="15" fill="rgb(225,159,27)" fg:x="47572" fg:w="13"/><text x="48.0986%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="47.8516%" y="693" width="0.0101%" height="15" fill="rgb(225,204,11)" fg:x="47575" fg:w="10"/><text x="48.1016%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (20 samples, 0.02%)</title><rect x="47.8616%" y="709" width="0.0201%" height="15" fill="rgb(205,56,4)" fg:x="47585" fg:w="20"/><text x="48.1116%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="47.8687%" y="693" width="0.0131%" height="15" fill="rgb(206,6,35)" fg:x="47592" fg:w="13"/><text x="48.1187%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="47.8687%" y="677" width="0.0131%" height="15" fill="rgb(247,73,52)" fg:x="47592" fg:w="13"/><text x="48.1187%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="47.8697%" y="661" width="0.0121%" height="15" fill="rgb(246,97,4)" fg:x="47593" fg:w="12"/><text x="48.1197%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (16 samples, 0.02%)</title><rect x="47.8958%" y="645" width="0.0161%" height="15" fill="rgb(212,37,15)" fg:x="47619" fg:w="16"/><text x="48.1458%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (32 samples, 0.03%)</title><rect x="47.8818%" y="709" width="0.0322%" height="15" fill="rgb(208,130,40)" fg:x="47605" fg:w="32"/><text x="48.1318%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (31 samples, 0.03%)</title><rect x="47.8828%" y="693" width="0.0312%" height="15" fill="rgb(236,55,29)" fg:x="47606" fg:w="31"/><text x="48.1328%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (30 samples, 0.03%)</title><rect x="47.8838%" y="677" width="0.0302%" height="15" fill="rgb(209,156,45)" fg:x="47607" fg:w="30"/><text x="48.1338%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (24 samples, 0.02%)</title><rect x="47.8898%" y="661" width="0.0241%" height="15" fill="rgb(249,107,4)" fg:x="47613" fg:w="24"/><text x="48.1398%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.01%)</title><rect x="47.9270%" y="565" width="0.0111%" height="15" fill="rgb(227,7,13)" fg:x="47650" fg:w="11"/><text x="48.1770%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="47.9270%" y="549" width="0.0111%" height="15" fill="rgb(250,129,14)" fg:x="47650" fg:w="11"/><text x="48.1770%" y="559.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (14 samples, 0.01%)</title><rect x="47.9270%" y="581" width="0.0141%" height="15" fill="rgb(229,92,13)" fg:x="47650" fg:w="14"/><text x="48.1770%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (18 samples, 0.02%)</title><rect x="47.9240%" y="661" width="0.0181%" height="15" fill="rgb(245,98,39)" fg:x="47647" fg:w="18"/><text x="48.1740%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (18 samples, 0.02%)</title><rect x="47.9240%" y="645" width="0.0181%" height="15" fill="rgb(234,135,48)" fg:x="47647" fg:w="18"/><text x="48.1740%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.02%)</title><rect x="47.9270%" y="629" width="0.0151%" height="15" fill="rgb(230,98,28)" fg:x="47650" fg:w="15"/><text x="48.1770%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (15 samples, 0.02%)</title><rect x="47.9270%" y="613" width="0.0151%" height="15" fill="rgb(223,121,0)" fg:x="47650" fg:w="15"/><text x="48.1770%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (15 samples, 0.02%)</title><rect x="47.9270%" y="597" width="0.0151%" height="15" fill="rgb(234,173,33)" fg:x="47650" fg:w="15"/><text x="48.1770%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (50 samples, 0.05%)</title><rect x="47.9190%" y="677" width="0.0503%" height="15" fill="rgb(245,47,8)" fg:x="47642" fg:w="50"/><text x="48.1690%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.03%)</title><rect x="47.9431%" y="661" width="0.0262%" height="15" fill="rgb(205,17,20)" fg:x="47666" fg:w="26"/><text x="48.1931%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.02%)</title><rect x="47.9481%" y="645" width="0.0211%" height="15" fill="rgb(232,151,16)" fg:x="47671" fg:w="21"/><text x="48.1981%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (18 samples, 0.02%)</title><rect x="47.9512%" y="629" width="0.0181%" height="15" fill="rgb(208,30,32)" fg:x="47674" fg:w="18"/><text x="48.2012%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (34 samples, 0.03%)</title><rect x="47.9833%" y="629" width="0.0342%" height="15" fill="rgb(254,26,3)" fg:x="47706" fg:w="34"/><text x="48.2333%" y="639.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (15 samples, 0.02%)</title><rect x="48.0025%" y="613" width="0.0151%" height="15" fill="rgb(240,177,30)" fg:x="47725" fg:w="15"/><text x="48.2525%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (104 samples, 0.10%)</title><rect x="47.9149%" y="693" width="0.1046%" height="15" fill="rgb(248,76,44)" fg:x="47638" fg:w="104"/><text x="48.1649%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (50 samples, 0.05%)</title><rect x="47.9693%" y="677" width="0.0503%" height="15" fill="rgb(241,186,54)" fg:x="47692" fg:w="50"/><text x="48.2193%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (48 samples, 0.05%)</title><rect x="47.9713%" y="661" width="0.0483%" height="15" fill="rgb(249,171,29)" fg:x="47694" fg:w="48"/><text x="48.2213%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (38 samples, 0.04%)</title><rect x="47.9813%" y="645" width="0.0382%" height="15" fill="rgb(237,151,44)" fg:x="47704" fg:w="38"/><text x="48.2313%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (106 samples, 0.11%)</title><rect x="47.9139%" y="709" width="0.1066%" height="15" fill="rgb(228,174,30)" fg:x="47637" fg:w="106"/><text x="48.1639%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (174 samples, 0.18%)</title><rect x="47.8466%" y="725" width="0.1750%" height="15" fill="rgb(252,14,37)" fg:x="47570" fg:w="174"/><text x="48.0966%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="48.0286%" y="613" width="0.0111%" height="15" fill="rgb(207,111,40)" fg:x="47751" fg:w="11"/><text x="48.2786%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="48.0286%" y="597" width="0.0111%" height="15" fill="rgb(248,171,54)" fg:x="47751" fg:w="11"/><text x="48.2786%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="48.0286%" y="581" width="0.0111%" height="15" fill="rgb(211,127,2)" fg:x="47751" fg:w="11"/><text x="48.2786%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19 samples, 0.02%)</title><rect x="48.0216%" y="709" width="0.0191%" height="15" fill="rgb(236,87,47)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (19 samples, 0.02%)</title><rect x="48.0216%" y="693" width="0.0191%" height="15" fill="rgb(223,190,45)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="48.0216%" y="677" width="0.0191%" height="15" fill="rgb(215,5,16)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="48.0216%" y="661" width="0.0191%" height="15" fill="rgb(252,82,33)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="48.0216%" y="645" width="0.0191%" height="15" fill="rgb(247,213,44)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="48.0216%" y="629" width="0.0191%" height="15" fill="rgb(205,196,44)" fg:x="47744" fg:w="19"/><text x="48.2716%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.01%)</title><rect x="48.0407%" y="709" width="0.0121%" height="15" fill="rgb(237,96,54)" fg:x="47763" fg:w="12"/><text x="48.2907%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="48.0407%" y="693" width="0.0121%" height="15" fill="rgb(230,113,34)" fg:x="47763" fg:w="12"/><text x="48.2907%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="48.0407%" y="677" width="0.0121%" height="15" fill="rgb(221,224,12)" fg:x="47763" fg:w="12"/><text x="48.2907%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="48.0407%" y="661" width="0.0121%" height="15" fill="rgb(219,112,44)" fg:x="47763" fg:w="12"/><text x="48.2907%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="48.0407%" y="645" width="0.0121%" height="15" fill="rgb(210,31,13)" fg:x="47763" fg:w="12"/><text x="48.2907%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="48.0527%" y="693" width="0.0201%" height="15" fill="rgb(230,25,16)" fg:x="47775" fg:w="20"/><text x="48.3027%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="48.0538%" y="677" width="0.0191%" height="15" fill="rgb(246,108,53)" fg:x="47776" fg:w="19"/><text x="48.3038%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="48.0548%" y="661" width="0.0181%" height="15" fill="rgb(241,172,50)" fg:x="47777" fg:w="18"/><text x="48.3048%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.02%)</title><rect x="48.0548%" y="645" width="0.0181%" height="15" fill="rgb(235,141,10)" fg:x="47777" fg:w="18"/><text x="48.3048%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="48.0548%" y="629" width="0.0181%" height="15" fill="rgb(220,174,43)" fg:x="47777" fg:w="18"/><text x="48.3048%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (21 samples, 0.02%)</title><rect x="48.0527%" y="709" width="0.0211%" height="15" fill="rgb(215,181,40)" fg:x="47775" fg:w="21"/><text x="48.3027%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (277 samples, 0.28%)</title><rect x="47.7983%" y="741" width="0.2786%" height="15" fill="rgb(230,97,2)" fg:x="47522" fg:w="277"/><text x="48.0483%" y="751.50"></text></g><g><title>borrow_graph::paths::append (55 samples, 0.06%)</title><rect x="48.0216%" y="725" width="0.0553%" height="15" fill="rgb(211,25,27)" fg:x="47744" fg:w="55"/><text x="48.2716%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.02%)</title><rect x="48.0859%" y="645" width="0.0181%" height="15" fill="rgb(230,87,26)" fg:x="47808" fg:w="18"/><text x="48.3359%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (16 samples, 0.02%)</title><rect x="48.0879%" y="629" width="0.0161%" height="15" fill="rgb(227,160,17)" fg:x="47810" fg:w="16"/><text x="48.3379%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (21 samples, 0.02%)</title><rect x="48.0859%" y="661" width="0.0211%" height="15" fill="rgb(244,85,34)" fg:x="47808" fg:w="21"/><text x="48.3359%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="48.0779%" y="741" width="0.0302%" height="15" fill="rgb(207,70,0)" fg:x="47800" fg:w="30"/><text x="48.3279%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (30 samples, 0.03%)</title><rect x="48.0779%" y="725" width="0.0302%" height="15" fill="rgb(223,129,7)" fg:x="47800" fg:w="30"/><text x="48.3279%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="48.0779%" y="709" width="0.0302%" height="15" fill="rgb(246,105,7)" fg:x="47800" fg:w="30"/><text x="48.3279%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (23 samples, 0.02%)</title><rect x="48.0849%" y="693" width="0.0231%" height="15" fill="rgb(215,154,42)" fg:x="47807" fg:w="23"/><text x="48.3349%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="48.0849%" y="677" width="0.0231%" height="15" fill="rgb(220,215,30)" fg:x="47807" fg:w="23"/><text x="48.3349%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (20 samples, 0.02%)</title><rect x="48.1081%" y="741" width="0.0201%" height="15" fill="rgb(228,81,51)" fg:x="47830" fg:w="20"/><text x="48.3581%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (20 samples, 0.02%)</title><rect x="48.1081%" y="725" width="0.0201%" height="15" fill="rgb(247,71,54)" fg:x="47830" fg:w="20"/><text x="48.3581%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="48.1081%" y="709" width="0.0201%" height="15" fill="rgb(234,176,34)" fg:x="47830" fg:w="20"/><text x="48.3581%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (14 samples, 0.01%)</title><rect x="48.1141%" y="693" width="0.0141%" height="15" fill="rgb(241,103,54)" fg:x="47836" fg:w="14"/><text x="48.3641%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="48.1151%" y="677" width="0.0131%" height="15" fill="rgb(228,22,34)" fg:x="47837" fg:w="13"/><text x="48.3651%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (13 samples, 0.01%)</title><rect x="48.1151%" y="661" width="0.0131%" height="15" fill="rgb(241,179,48)" fg:x="47837" fg:w="13"/><text x="48.3651%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="48.1151%" y="645" width="0.0131%" height="15" fill="rgb(235,167,37)" fg:x="47837" fg:w="13"/><text x="48.3651%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.02%)</title><rect x="48.1473%" y="645" width="0.0151%" height="15" fill="rgb(213,109,30)" fg:x="47869" fg:w="15"/><text x="48.3973%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (12 samples, 0.01%)</title><rect x="48.1503%" y="629" width="0.0121%" height="15" fill="rgb(222,172,16)" fg:x="47872" fg:w="12"/><text x="48.4003%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (33 samples, 0.03%)</title><rect x="48.1644%" y="613" width="0.0332%" height="15" fill="rgb(233,192,5)" fg:x="47886" fg:w="33"/><text x="48.4144%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (33 samples, 0.03%)</title><rect x="48.1644%" y="597" width="0.0332%" height="15" fill="rgb(247,189,41)" fg:x="47886" fg:w="33"/><text x="48.4144%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (56 samples, 0.06%)</title><rect x="48.1453%" y="661" width="0.0563%" height="15" fill="rgb(218,134,47)" fg:x="47867" fg:w="56"/><text x="48.3953%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (39 samples, 0.04%)</title><rect x="48.1624%" y="645" width="0.0392%" height="15" fill="rgb(216,29,3)" fg:x="47884" fg:w="39"/><text x="48.4124%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (39 samples, 0.04%)</title><rect x="48.1624%" y="629" width="0.0392%" height="15" fill="rgb(246,140,12)" fg:x="47884" fg:w="39"/><text x="48.4124%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (16 samples, 0.02%)</title><rect x="48.2177%" y="501" width="0.0161%" height="15" fill="rgb(230,136,11)" fg:x="47939" fg:w="16"/><text x="48.4677%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (16 samples, 0.02%)</title><rect x="48.2177%" y="485" width="0.0161%" height="15" fill="rgb(247,22,47)" fg:x="47939" fg:w="16"/><text x="48.4677%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (20 samples, 0.02%)</title><rect x="48.2167%" y="533" width="0.0201%" height="15" fill="rgb(218,84,22)" fg:x="47938" fg:w="20"/><text x="48.4667%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (20 samples, 0.02%)</title><rect x="48.2167%" y="517" width="0.0201%" height="15" fill="rgb(216,87,39)" fg:x="47938" fg:w="20"/><text x="48.4667%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (28 samples, 0.03%)</title><rect x="48.2097%" y="549" width="0.0282%" height="15" fill="rgb(221,178,8)" fg:x="47931" fg:w="28"/><text x="48.4597%" y="559.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_field (3,193 samples, 3.21%)</title><rect x="45.0353%" y="789" width="3.2116%" height="15" fill="rgb(230,42,11)" fg:x="44775" fg:w="3193"/><text x="45.2853%" y="799.50">byt..</text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (1,781 samples, 1.79%)</title><rect x="46.4555%" y="773" width="1.7914%" height="15" fill="rgb(237,229,4)" fg:x="46187" fg:w="1781"/><text x="46.7055%" y="783.50">b..</text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (1,781 samples, 1.79%)</title><rect x="46.4555%" y="757" width="1.7914%" height="15" fill="rgb(222,31,33)" fg:x="46187" fg:w="1781"/><text x="46.7055%" y="767.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (112 samples, 0.11%)</title><rect x="48.1342%" y="741" width="0.1127%" height="15" fill="rgb(210,17,39)" fg:x="47856" fg:w="112"/><text x="48.3842%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (111 samples, 0.11%)</title><rect x="48.1352%" y="725" width="0.1116%" height="15" fill="rgb(244,93,20)" fg:x="47857" fg:w="111"/><text x="48.3852%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.11%)</title><rect x="48.1352%" y="709" width="0.1116%" height="15" fill="rgb(210,40,47)" fg:x="47857" fg:w="111"/><text x="48.3852%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (104 samples, 0.10%)</title><rect x="48.1423%" y="693" width="0.1046%" height="15" fill="rgb(239,211,47)" fg:x="47864" fg:w="104"/><text x="48.3923%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="48.1423%" y="677" width="0.1046%" height="15" fill="rgb(251,223,49)" fg:x="47864" fg:w="104"/><text x="48.3923%" y="687.50"></text></g><g><title>core::mem::drop (45 samples, 0.05%)</title><rect x="48.2016%" y="661" width="0.0453%" height="15" fill="rgb(221,149,5)" fg:x="47923" fg:w="45"/><text x="48.4516%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (45 samples, 0.05%)</title><rect x="48.2016%" y="645" width="0.0453%" height="15" fill="rgb(219,224,51)" fg:x="47923" fg:w="45"/><text x="48.4516%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (45 samples, 0.05%)</title><rect x="48.2016%" y="629" width="0.0453%" height="15" fill="rgb(223,7,8)" fg:x="47923" fg:w="45"/><text x="48.4516%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (45 samples, 0.05%)</title><rect x="48.2016%" y="613" width="0.0453%" height="15" fill="rgb(241,217,22)" fg:x="47923" fg:w="45"/><text x="48.4516%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.05%)</title><rect x="48.2016%" y="597" width="0.0453%" height="15" fill="rgb(248,209,0)" fg:x="47923" fg:w="45"/><text x="48.4516%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (38 samples, 0.04%)</title><rect x="48.2086%" y="581" width="0.0382%" height="15" fill="rgb(217,205,4)" fg:x="47930" fg:w="38"/><text x="48.4586%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="48.2086%" y="565" width="0.0382%" height="15" fill="rgb(228,124,39)" fg:x="47930" fg:w="38"/><text x="48.4586%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (19 samples, 0.02%)</title><rect x="48.2569%" y="709" width="0.0191%" height="15" fill="rgb(250,116,42)" fg:x="47978" fg:w="19"/><text x="48.5069%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (17 samples, 0.02%)</title><rect x="48.2760%" y="709" width="0.0171%" height="15" fill="rgb(223,202,9)" fg:x="47997" fg:w="17"/><text x="48.5260%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="48.2821%" y="693" width="0.0111%" height="15" fill="rgb(242,222,40)" fg:x="48003" fg:w="11"/><text x="48.5321%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="48.2821%" y="677" width="0.0111%" height="15" fill="rgb(229,99,46)" fg:x="48003" fg:w="11"/><text x="48.5321%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="48.2831%" y="661" width="0.0101%" height="15" fill="rgb(225,56,46)" fg:x="48004" fg:w="10"/><text x="48.5331%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (14 samples, 0.01%)</title><rect x="48.3012%" y="645" width="0.0141%" height="15" fill="rgb(227,94,5)" fg:x="48022" fg:w="14"/><text x="48.5512%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (22 samples, 0.02%)</title><rect x="48.2951%" y="693" width="0.0221%" height="15" fill="rgb(205,112,38)" fg:x="48016" fg:w="22"/><text x="48.5451%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (20 samples, 0.02%)</title><rect x="48.2972%" y="677" width="0.0201%" height="15" fill="rgb(231,133,46)" fg:x="48018" fg:w="20"/><text x="48.5472%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (18 samples, 0.02%)</title><rect x="48.2992%" y="661" width="0.0181%" height="15" fill="rgb(217,16,9)" fg:x="48020" fg:w="18"/><text x="48.5492%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (25 samples, 0.03%)</title><rect x="48.2931%" y="709" width="0.0251%" height="15" fill="rgb(249,173,9)" fg:x="48014" fg:w="25"/><text x="48.5431%" y="719.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (15 samples, 0.02%)</title><rect x="48.3384%" y="581" width="0.0151%" height="15" fill="rgb(205,163,53)" fg:x="48059" fg:w="15"/><text x="48.5884%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (21 samples, 0.02%)</title><rect x="48.3334%" y="661" width="0.0211%" height="15" fill="rgb(217,54,41)" fg:x="48054" fg:w="21"/><text x="48.5834%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (21 samples, 0.02%)</title><rect x="48.3334%" y="645" width="0.0211%" height="15" fill="rgb(228,216,12)" fg:x="48054" fg:w="21"/><text x="48.5834%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="48.3364%" y="629" width="0.0181%" height="15" fill="rgb(244,228,15)" fg:x="48057" fg:w="18"/><text x="48.5864%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (17 samples, 0.02%)</title><rect x="48.3374%" y="613" width="0.0171%" height="15" fill="rgb(221,176,53)" fg:x="48058" fg:w="17"/><text x="48.5874%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (17 samples, 0.02%)</title><rect x="48.3374%" y="597" width="0.0171%" height="15" fill="rgb(205,94,34)" fg:x="48058" fg:w="17"/><text x="48.5874%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (45 samples, 0.05%)</title><rect x="48.3223%" y="677" width="0.0453%" height="15" fill="rgb(213,110,48)" fg:x="48043" fg:w="45"/><text x="48.5723%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="48.3555%" y="661" width="0.0121%" height="15" fill="rgb(236,142,28)" fg:x="48076" fg:w="12"/><text x="48.6055%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (13 samples, 0.01%)</title><rect x="48.3967%" y="613" width="0.0131%" height="15" fill="rgb(225,135,29)" fg:x="48117" fg:w="13"/><text x="48.6467%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (31 samples, 0.03%)</title><rect x="48.3867%" y="629" width="0.0312%" height="15" fill="rgb(252,45,31)" fg:x="48107" fg:w="31"/><text x="48.6367%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (100 samples, 0.10%)</title><rect x="48.3183%" y="693" width="0.1006%" height="15" fill="rgb(211,187,50)" fg:x="48039" fg:w="100"/><text x="48.5683%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (51 samples, 0.05%)</title><rect x="48.3676%" y="677" width="0.0513%" height="15" fill="rgb(229,109,7)" fg:x="48088" fg:w="51"/><text x="48.6176%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (50 samples, 0.05%)</title><rect x="48.3686%" y="661" width="0.0503%" height="15" fill="rgb(251,131,51)" fg:x="48089" fg:w="50"/><text x="48.6186%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (43 samples, 0.04%)</title><rect x="48.3756%" y="645" width="0.0432%" height="15" fill="rgb(251,180,35)" fg:x="48096" fg:w="43"/><text x="48.6256%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_resource_borrow (170 samples, 0.17%)</title><rect x="48.2489%" y="773" width="0.1710%" height="15" fill="rgb(211,46,32)" fg:x="47970" fg:w="170"/><text x="48.4989%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_weak_field_borrow (169 samples, 0.17%)</title><rect x="48.2499%" y="757" width="0.1700%" height="15" fill="rgb(248,123,17)" fg:x="47971" fg:w="169"/><text x="48.4999%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (164 samples, 0.16%)</title><rect x="48.2549%" y="741" width="0.1650%" height="15" fill="rgb(227,141,18)" fg:x="47976" fg:w="164"/><text x="48.5049%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (164 samples, 0.16%)</title><rect x="48.2549%" y="725" width="0.1650%" height="15" fill="rgb(216,102,9)" fg:x="47976" fg:w="164"/><text x="48.5049%" y="735.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (101 samples, 0.10%)</title><rect x="48.3183%" y="709" width="0.1016%" height="15" fill="rgb(253,47,13)" fg:x="48039" fg:w="101"/><text x="48.5683%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (14 samples, 0.01%)</title><rect x="48.4229%" y="741" width="0.0141%" height="15" fill="rgb(226,93,23)" fg:x="48143" fg:w="14"/><text x="48.6729%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_global_borrowed (20 samples, 0.02%)</title><rect x="48.4199%" y="773" width="0.0201%" height="15" fill="rgb(247,104,17)" fg:x="48140" fg:w="20"/><text x="48.6699%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (20 samples, 0.02%)</title><rect x="48.4199%" y="757" width="0.0201%" height="15" fill="rgb(233,203,26)" fg:x="48140" fg:w="20"/><text x="48.6699%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (15 samples, 0.02%)</title><rect x="48.4420%" y="741" width="0.0151%" height="15" fill="rgb(244,98,49)" fg:x="48162" fg:w="15"/><text x="48.6920%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_global_mutably_borrowed (27 samples, 0.03%)</title><rect x="48.4400%" y="773" width="0.0272%" height="15" fill="rgb(235,134,22)" fg:x="48160" fg:w="27"/><text x="48.6900%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (27 samples, 0.03%)</title><rect x="48.4400%" y="757" width="0.0272%" height="15" fill="rgb(221,70,32)" fg:x="48160" fg:w="27"/><text x="48.6900%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_global (243 samples, 0.24%)</title><rect x="48.2469%" y="789" width="0.2444%" height="15" fill="rgb(238,15,50)" fg:x="47968" fg:w="243"/><text x="48.4969%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (24 samples, 0.02%)</title><rect x="48.4671%" y="773" width="0.0241%" height="15" fill="rgb(215,221,48)" fg:x="48187" fg:w="24"/><text x="48.7171%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (24 samples, 0.02%)</title><rect x="48.4671%" y="757" width="0.0241%" height="15" fill="rgb(236,73,3)" fg:x="48187" fg:w="24"/><text x="48.7171%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (24 samples, 0.02%)</title><rect x="48.4671%" y="741" width="0.0241%" height="15" fill="rgb(250,107,11)" fg:x="48187" fg:w="24"/><text x="48.7171%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (14 samples, 0.01%)</title><rect x="48.4772%" y="725" width="0.0141%" height="15" fill="rgb(242,39,14)" fg:x="48197" fg:w="14"/><text x="48.7272%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (14 samples, 0.01%)</title><rect x="48.4772%" y="709" width="0.0141%" height="15" fill="rgb(248,164,37)" fg:x="48197" fg:w="14"/><text x="48.7272%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (12 samples, 0.01%)</title><rect x="48.4792%" y="693" width="0.0121%" height="15" fill="rgb(217,60,12)" fg:x="48199" fg:w="12"/><text x="48.7292%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (11 samples, 0.01%)</title><rect x="48.4802%" y="677" width="0.0111%" height="15" fill="rgb(240,125,29)" fg:x="48200" fg:w="11"/><text x="48.7302%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="48.4943%" y="741" width="0.0121%" height="15" fill="rgb(208,207,28)" fg:x="48214" fg:w="12"/><text x="48.7443%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (11 samples, 0.01%)</title><rect x="48.5064%" y="741" width="0.0111%" height="15" fill="rgb(209,159,27)" fg:x="48226" fg:w="11"/><text x="48.7564%" y="751.50"></text></g><g><title>alloc::slice::hack::into_vec (11 samples, 0.01%)</title><rect x="48.5064%" y="725" width="0.0111%" height="15" fill="rgb(251,176,53)" fg:x="48226" fg:w="11"/><text x="48.7564%" y="735.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="48.5345%" y="725" width="0.0111%" height="15" fill="rgb(211,85,7)" fg:x="48254" fg:w="11"/><text x="48.7845%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.02%)</title><rect x="48.5768%" y="709" width="0.0181%" height="15" fill="rgb(216,64,54)" fg:x="48296" fg:w="18"/><text x="48.8268%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.02%)</title><rect x="48.5768%" y="693" width="0.0181%" height="15" fill="rgb(217,54,24)" fg:x="48296" fg:w="18"/><text x="48.8268%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (15 samples, 0.02%)</title><rect x="48.5798%" y="677" width="0.0151%" height="15" fill="rgb(208,206,53)" fg:x="48299" fg:w="15"/><text x="48.8298%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (23 samples, 0.02%)</title><rect x="48.5728%" y="725" width="0.0231%" height="15" fill="rgb(251,74,39)" fg:x="48292" fg:w="23"/><text x="48.8228%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (10 samples, 0.01%)</title><rect x="48.5959%" y="693" width="0.0101%" height="15" fill="rgb(226,47,5)" fg:x="48315" fg:w="10"/><text x="48.8459%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (10 samples, 0.01%)</title><rect x="48.5959%" y="677" width="0.0101%" height="15" fill="rgb(234,111,33)" fg:x="48315" fg:w="10"/><text x="48.8459%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (10 samples, 0.01%)</title><rect x="48.5959%" y="661" width="0.0101%" height="15" fill="rgb(251,14,10)" fg:x="48315" fg:w="10"/><text x="48.8459%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (11 samples, 0.01%)</title><rect x="48.5959%" y="725" width="0.0111%" height="15" fill="rgb(232,43,0)" fg:x="48315" fg:w="11"/><text x="48.8459%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (11 samples, 0.01%)</title><rect x="48.5959%" y="709" width="0.0111%" height="15" fill="rgb(222,68,43)" fg:x="48315" fg:w="11"/><text x="48.8459%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (12 samples, 0.01%)</title><rect x="48.6140%" y="725" width="0.0121%" height="15" fill="rgb(217,24,23)" fg:x="48333" fg:w="12"/><text x="48.8640%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (12 samples, 0.01%)</title><rect x="48.6140%" y="709" width="0.0121%" height="15" fill="rgb(229,209,14)" fg:x="48333" fg:w="12"/><text x="48.8640%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (12 samples, 0.01%)</title><rect x="48.6140%" y="693" width="0.0121%" height="15" fill="rgb(250,149,48)" fg:x="48333" fg:w="12"/><text x="48.8640%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (33 samples, 0.03%)</title><rect x="48.6291%" y="693" width="0.0332%" height="15" fill="rgb(210,120,37)" fg:x="48348" fg:w="33"/><text x="48.8791%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="48.6422%" y="677" width="0.0201%" height="15" fill="rgb(210,21,8)" fg:x="48361" fg:w="20"/><text x="48.8922%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="48.6472%" y="661" width="0.0151%" height="15" fill="rgb(243,145,7)" fg:x="48366" fg:w="15"/><text x="48.8972%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="48.6492%" y="645" width="0.0131%" height="15" fill="rgb(238,178,32)" fg:x="48368" fg:w="13"/><text x="48.8992%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="48.6733%" y="629" width="0.0121%" height="15" fill="rgb(222,4,10)" fg:x="48392" fg:w="12"/><text x="48.9233%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.02%)</title><rect x="48.6683%" y="677" width="0.0211%" height="15" fill="rgb(239,7,37)" fg:x="48387" fg:w="21"/><text x="48.9183%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="48.6693%" y="661" width="0.0201%" height="15" fill="rgb(215,31,37)" fg:x="48388" fg:w="20"/><text x="48.9193%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.02%)</title><rect x="48.6693%" y="645" width="0.0201%" height="15" fill="rgb(224,83,33)" fg:x="48388" fg:w="20"/><text x="48.9193%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (28 samples, 0.03%)</title><rect x="48.6623%" y="693" width="0.0282%" height="15" fill="rgb(239,55,3)" fg:x="48381" fg:w="28"/><text x="48.9123%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.01%)</title><rect x="48.7045%" y="613" width="0.0101%" height="15" fill="rgb(247,92,11)" fg:x="48423" fg:w="10"/><text x="48.9545%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (18 samples, 0.02%)</title><rect x="48.7015%" y="629" width="0.0181%" height="15" fill="rgb(239,200,7)" fg:x="48420" fg:w="18"/><text x="48.9515%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (28 samples, 0.03%)</title><rect x="48.6924%" y="677" width="0.0282%" height="15" fill="rgb(227,115,8)" fg:x="48411" fg:w="28"/><text x="48.9424%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (27 samples, 0.03%)</title><rect x="48.6934%" y="661" width="0.0272%" height="15" fill="rgb(215,189,27)" fg:x="48412" fg:w="27"/><text x="48.9434%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (24 samples, 0.02%)</title><rect x="48.6965%" y="645" width="0.0241%" height="15" fill="rgb(251,216,39)" fg:x="48415" fg:w="24"/><text x="48.9465%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (31 samples, 0.03%)</title><rect x="48.6904%" y="693" width="0.0312%" height="15" fill="rgb(207,29,47)" fg:x="48409" fg:w="31"/><text x="48.9404%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="48.7528%" y="501" width="0.0121%" height="15" fill="rgb(210,71,34)" fg:x="48471" fg:w="12"/><text x="49.0028%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="48.7538%" y="485" width="0.0111%" height="15" fill="rgb(253,217,51)" fg:x="48472" fg:w="11"/><text x="49.0038%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.02%)</title><rect x="48.7498%" y="517" width="0.0201%" height="15" fill="rgb(222,117,46)" fg:x="48468" fg:w="20"/><text x="48.9998%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (30 samples, 0.03%)</title><rect x="48.7437%" y="549" width="0.0302%" height="15" fill="rgb(226,132,6)" fg:x="48462" fg:w="30"/><text x="48.9937%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (29 samples, 0.03%)</title><rect x="48.7447%" y="533" width="0.0292%" height="15" fill="rgb(254,145,51)" fg:x="48463" fg:w="29"/><text x="48.9947%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (11 samples, 0.01%)</title><rect x="48.7739%" y="549" width="0.0111%" height="15" fill="rgb(231,199,27)" fg:x="48492" fg:w="11"/><text x="49.0239%" y="559.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (42 samples, 0.04%)</title><rect x="48.7437%" y="565" width="0.0422%" height="15" fill="rgb(245,158,14)" fg:x="48462" fg:w="42"/><text x="48.9937%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (54 samples, 0.05%)</title><rect x="48.7357%" y="645" width="0.0543%" height="15" fill="rgb(240,113,14)" fg:x="48454" fg:w="54"/><text x="48.9857%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (53 samples, 0.05%)</title><rect x="48.7367%" y="629" width="0.0533%" height="15" fill="rgb(210,20,13)" fg:x="48455" fg:w="53"/><text x="48.9867%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (50 samples, 0.05%)</title><rect x="48.7397%" y="613" width="0.0503%" height="15" fill="rgb(241,144,13)" fg:x="48458" fg:w="50"/><text x="48.9897%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (50 samples, 0.05%)</title><rect x="48.7397%" y="597" width="0.0503%" height="15" fill="rgb(235,43,34)" fg:x="48458" fg:w="50"/><text x="48.9897%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (49 samples, 0.05%)</title><rect x="48.7407%" y="581" width="0.0493%" height="15" fill="rgb(208,36,20)" fg:x="48459" fg:w="49"/><text x="48.9907%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (93 samples, 0.09%)</title><rect x="48.7276%" y="661" width="0.0935%" height="15" fill="rgb(239,204,10)" fg:x="48446" fg:w="93"/><text x="48.9776%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.03%)</title><rect x="48.7910%" y="645" width="0.0302%" height="15" fill="rgb(217,84,43)" fg:x="48509" fg:w="30"/><text x="49.0410%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="48.7930%" y="629" width="0.0282%" height="15" fill="rgb(241,170,50)" fg:x="48511" fg:w="28"/><text x="49.0430%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.03%)</title><rect x="48.7960%" y="613" width="0.0251%" height="15" fill="rgb(226,205,29)" fg:x="48514" fg:w="25"/><text x="49.0460%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (15 samples, 0.02%)</title><rect x="48.8524%" y="597" width="0.0151%" height="15" fill="rgb(233,113,1)" fg:x="48570" fg:w="15"/><text x="49.1024%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (13 samples, 0.01%)</title><rect x="48.8544%" y="581" width="0.0131%" height="15" fill="rgb(253,98,13)" fg:x="48572" fg:w="13"/><text x="49.1044%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (158 samples, 0.16%)</title><rect x="48.7216%" y="677" width="0.1589%" height="15" fill="rgb(211,115,12)" fg:x="48440" fg:w="158"/><text x="48.9716%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (59 samples, 0.06%)</title><rect x="48.8212%" y="661" width="0.0593%" height="15" fill="rgb(208,12,16)" fg:x="48539" fg:w="59"/><text x="49.0712%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (53 samples, 0.05%)</title><rect x="48.8272%" y="645" width="0.0533%" height="15" fill="rgb(237,193,54)" fg:x="48545" fg:w="53"/><text x="49.0772%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (50 samples, 0.05%)</title><rect x="48.8302%" y="629" width="0.0503%" height="15" fill="rgb(243,22,42)" fg:x="48548" fg:w="50"/><text x="49.0802%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (42 samples, 0.04%)</title><rect x="48.8383%" y="613" width="0.0422%" height="15" fill="rgb(233,151,36)" fg:x="48556" fg:w="42"/><text x="49.0883%" y="623.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (13 samples, 0.01%)</title><rect x="48.8675%" y="597" width="0.0131%" height="15" fill="rgb(237,57,45)" fg:x="48585" fg:w="13"/><text x="49.1175%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (159 samples, 0.16%)</title><rect x="48.7216%" y="693" width="0.1599%" height="15" fill="rgb(221,88,17)" fg:x="48440" fg:w="159"/><text x="48.9716%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (255 samples, 0.26%)</title><rect x="48.6271%" y="725" width="0.2565%" height="15" fill="rgb(230,79,15)" fg:x="48346" fg:w="255"/><text x="48.8771%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (255 samples, 0.26%)</title><rect x="48.6271%" y="709" width="0.2565%" height="15" fill="rgb(213,57,13)" fg:x="48346" fg:w="255"/><text x="48.8771%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (25 samples, 0.03%)</title><rect x="48.9117%" y="597" width="0.0251%" height="15" fill="rgb(222,116,39)" fg:x="48629" fg:w="25"/><text x="49.1617%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (36 samples, 0.04%)</title><rect x="48.9027%" y="629" width="0.0362%" height="15" fill="rgb(245,107,2)" fg:x="48620" fg:w="36"/><text x="49.1527%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (35 samples, 0.04%)</title><rect x="48.9037%" y="613" width="0.0352%" height="15" fill="rgb(238,1,10)" fg:x="48621" fg:w="35"/><text x="49.1537%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="48.8996%" y="661" width="0.0443%" height="15" fill="rgb(249,4,48)" fg:x="48617" fg:w="44"/><text x="49.1496%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (41 samples, 0.04%)</title><rect x="48.9027%" y="645" width="0.0412%" height="15" fill="rgb(223,151,18)" fg:x="48620" fg:w="41"/><text x="49.1527%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.01%)</title><rect x="48.9459%" y="629" width="0.0131%" height="15" fill="rgb(227,65,43)" fg:x="48663" fg:w="13"/><text x="49.1959%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.01%)</title><rect x="48.9489%" y="613" width="0.0101%" height="15" fill="rgb(218,40,45)" fg:x="48666" fg:w="10"/><text x="49.1989%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="48.9630%" y="597" width="0.0171%" height="15" fill="rgb(252,121,31)" fg:x="48680" fg:w="17"/><text x="49.2130%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (20 samples, 0.02%)</title><rect x="48.9610%" y="613" width="0.0201%" height="15" fill="rgb(219,158,43)" fg:x="48678" fg:w="20"/><text x="49.2110%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (23 samples, 0.02%)</title><rect x="48.9590%" y="629" width="0.0231%" height="15" fill="rgb(231,162,42)" fg:x="48676" fg:w="23"/><text x="49.2090%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="49.0063%" y="597" width="0.0101%" height="15" fill="rgb(217,179,25)" fg:x="48723" fg:w="10"/><text x="49.2563%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="49.0183%" y="565" width="0.0111%" height="15" fill="rgb(206,212,31)" fg:x="48735" fg:w="11"/><text x="49.2683%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.01%)</title><rect x="49.0193%" y="549" width="0.0101%" height="15" fill="rgb(235,144,12)" fg:x="48736" fg:w="10"/><text x="49.2693%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="49.0163%" y="597" width="0.0161%" height="15" fill="rgb(213,51,10)" fg:x="48733" fg:w="16"/><text x="49.2663%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="49.0183%" y="581" width="0.0141%" height="15" fill="rgb(231,145,14)" fg:x="48735" fg:w="14"/><text x="49.2683%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="49.0545%" y="469" width="0.0141%" height="15" fill="rgb(235,15,28)" fg:x="48771" fg:w="14"/><text x="49.3045%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (39 samples, 0.04%)</title><rect x="49.0374%" y="549" width="0.0392%" height="15" fill="rgb(237,206,10)" fg:x="48754" fg:w="39"/><text x="49.2874%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (38 samples, 0.04%)</title><rect x="49.0384%" y="533" width="0.0382%" height="15" fill="rgb(236,227,27)" fg:x="48755" fg:w="38"/><text x="49.2884%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="49.0495%" y="517" width="0.0272%" height="15" fill="rgb(246,83,35)" fg:x="48766" fg:w="27"/><text x="49.2995%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (26 samples, 0.03%)</title><rect x="49.0505%" y="501" width="0.0262%" height="15" fill="rgb(220,136,24)" fg:x="48767" fg:w="26"/><text x="49.3005%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.03%)</title><rect x="49.0505%" y="485" width="0.0262%" height="15" fill="rgb(217,3,25)" fg:x="48767" fg:w="26"/><text x="49.3005%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (25 samples, 0.03%)</title><rect x="49.0797%" y="517" width="0.0251%" height="15" fill="rgb(239,24,14)" fg:x="48796" fg:w="25"/><text x="49.3297%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (21 samples, 0.02%)</title><rect x="49.0837%" y="501" width="0.0211%" height="15" fill="rgb(244,16,53)" fg:x="48800" fg:w="21"/><text x="49.3337%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.02%)</title><rect x="49.0857%" y="485" width="0.0191%" height="15" fill="rgb(208,175,44)" fg:x="48802" fg:w="19"/><text x="49.3357%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (30 samples, 0.03%)</title><rect x="49.0767%" y="549" width="0.0302%" height="15" fill="rgb(252,18,48)" fg:x="48793" fg:w="30"/><text x="49.3267%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (30 samples, 0.03%)</title><rect x="49.0767%" y="533" width="0.0302%" height="15" fill="rgb(234,199,32)" fg:x="48793" fg:w="30"/><text x="49.3267%" y="543.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (241 samples, 0.24%)</title><rect x="48.8856%" y="709" width="0.2424%" height="15" fill="rgb(225,77,54)" fg:x="48603" fg:w="241"/><text x="49.1356%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (234 samples, 0.24%)</title><rect x="48.8926%" y="693" width="0.2354%" height="15" fill="rgb(225,42,25)" fg:x="48610" fg:w="234"/><text x="49.1426%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (232 samples, 0.23%)</title><rect x="48.8946%" y="677" width="0.2333%" height="15" fill="rgb(242,227,46)" fg:x="48612" fg:w="232"/><text x="49.1446%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (182 samples, 0.18%)</title><rect x="48.9449%" y="661" width="0.1831%" height="15" fill="rgb(246,197,35)" fg:x="48662" fg:w="182"/><text x="49.1949%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (181 samples, 0.18%)</title><rect x="48.9459%" y="645" width="0.1821%" height="15" fill="rgb(215,159,26)" fg:x="48663" fg:w="181"/><text x="49.1959%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (145 samples, 0.15%)</title><rect x="48.9821%" y="629" width="0.1458%" height="15" fill="rgb(212,194,50)" fg:x="48699" fg:w="145"/><text x="49.2321%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (131 samples, 0.13%)</title><rect x="48.9962%" y="613" width="0.1318%" height="15" fill="rgb(246,132,1)" fg:x="48713" fg:w="131"/><text x="49.2462%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (93 samples, 0.09%)</title><rect x="49.0344%" y="597" width="0.0935%" height="15" fill="rgb(217,71,7)" fg:x="48751" fg:w="93"/><text x="49.2844%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (92 samples, 0.09%)</title><rect x="49.0354%" y="581" width="0.0925%" height="15" fill="rgb(252,59,32)" fg:x="48752" fg:w="92"/><text x="49.2854%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (92 samples, 0.09%)</title><rect x="49.0354%" y="565" width="0.0925%" height="15" fill="rgb(253,204,25)" fg:x="48752" fg:w="92"/><text x="49.2854%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (21 samples, 0.02%)</title><rect x="49.1068%" y="549" width="0.0211%" height="15" fill="rgb(232,21,16)" fg:x="48823" fg:w="21"/><text x="49.3568%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (21 samples, 0.02%)</title><rect x="49.1068%" y="533" width="0.0211%" height="15" fill="rgb(248,90,29)" fg:x="48823" fg:w="21"/><text x="49.3568%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (21 samples, 0.02%)</title><rect x="49.1068%" y="517" width="0.0211%" height="15" fill="rgb(249,223,7)" fg:x="48823" fg:w="21"/><text x="49.3568%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="49.1179%" y="501" width="0.0101%" height="15" fill="rgb(231,119,42)" fg:x="48834" fg:w="10"/><text x="49.3679%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (15 samples, 0.02%)</title><rect x="49.1290%" y="693" width="0.0151%" height="15" fill="rgb(215,41,35)" fg:x="48845" fg:w="15"/><text x="49.3790%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (13 samples, 0.01%)</title><rect x="49.1310%" y="677" width="0.0131%" height="15" fill="rgb(220,44,45)" fg:x="48847" fg:w="13"/><text x="49.3810%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (12 samples, 0.01%)</title><rect x="49.1712%" y="565" width="0.0121%" height="15" fill="rgb(253,197,36)" fg:x="48887" fg:w="12"/><text x="49.4212%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (15 samples, 0.02%)</title><rect x="49.1833%" y="565" width="0.0151%" height="15" fill="rgb(245,225,54)" fg:x="48899" fg:w="15"/><text x="49.4333%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (46 samples, 0.05%)</title><rect x="49.1642%" y="581" width="0.0463%" height="15" fill="rgb(239,94,37)" fg:x="48880" fg:w="46"/><text x="49.4142%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (52 samples, 0.05%)</title><rect x="49.1601%" y="613" width="0.0523%" height="15" fill="rgb(242,217,10)" fg:x="48876" fg:w="52"/><text x="49.4101%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (52 samples, 0.05%)</title><rect x="49.1601%" y="597" width="0.0523%" height="15" fill="rgb(250,193,7)" fg:x="48876" fg:w="52"/><text x="49.4101%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.06%)</title><rect x="49.1531%" y="645" width="0.0603%" height="15" fill="rgb(230,104,19)" fg:x="48869" fg:w="60"/><text x="49.4031%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (57 samples, 0.06%)</title><rect x="49.1561%" y="629" width="0.0573%" height="15" fill="rgb(230,181,4)" fg:x="48872" fg:w="57"/><text x="49.4061%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.07%)</title><rect x="49.1511%" y="661" width="0.0654%" height="15" fill="rgb(216,219,49)" fg:x="48867" fg:w="65"/><text x="49.4011%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.01%)</title><rect x="49.2165%" y="629" width="0.0131%" height="15" fill="rgb(254,144,0)" fg:x="48932" fg:w="13"/><text x="49.4665%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.01%)</title><rect x="49.2195%" y="613" width="0.0101%" height="15" fill="rgb(205,209,38)" fg:x="48935" fg:w="10"/><text x="49.4695%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (20 samples, 0.02%)</title><rect x="49.2295%" y="629" width="0.0201%" height="15" fill="rgb(240,21,42)" fg:x="48945" fg:w="20"/><text x="49.4795%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (18 samples, 0.02%)</title><rect x="49.2316%" y="613" width="0.0181%" height="15" fill="rgb(241,132,3)" fg:x="48947" fg:w="18"/><text x="49.4816%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (15 samples, 0.02%)</title><rect x="49.2346%" y="597" width="0.0151%" height="15" fill="rgb(225,14,2)" fg:x="48950" fg:w="15"/><text x="49.4846%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (19 samples, 0.02%)</title><rect x="49.2637%" y="517" width="0.0191%" height="15" fill="rgb(210,141,35)" fg:x="48979" fg:w="19"/><text x="49.5137%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="49.2577%" y="581" width="0.0282%" height="15" fill="rgb(251,14,44)" fg:x="48973" fg:w="28"/><text x="49.5077%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (27 samples, 0.03%)</title><rect x="49.2587%" y="565" width="0.0272%" height="15" fill="rgb(247,48,18)" fg:x="48974" fg:w="27"/><text x="49.5087%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (27 samples, 0.03%)</title><rect x="49.2587%" y="549" width="0.0272%" height="15" fill="rgb(225,0,40)" fg:x="48974" fg:w="27"/><text x="49.5087%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.03%)</title><rect x="49.2587%" y="533" width="0.0272%" height="15" fill="rgb(221,31,33)" fg:x="48974" fg:w="27"/><text x="49.5087%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="49.2557%" y="597" width="0.0352%" height="15" fill="rgb(237,42,40)" fg:x="48971" fg:w="35"/><text x="49.5057%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (11 samples, 0.01%)</title><rect x="49.2949%" y="501" width="0.0111%" height="15" fill="rgb(233,51,29)" fg:x="49010" fg:w="11"/><text x="49.5449%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="49.2939%" y="533" width="0.0131%" height="15" fill="rgb(226,58,20)" fg:x="49009" fg:w="13"/><text x="49.5439%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="49.2939%" y="517" width="0.0131%" height="15" fill="rgb(208,98,7)" fg:x="49009" fg:w="13"/><text x="49.5439%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="49.2939%" y="565" width="0.0151%" height="15" fill="rgb(228,143,44)" fg:x="49009" fg:w="15"/><text x="49.5439%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="49.2939%" y="549" width="0.0151%" height="15" fill="rgb(246,55,38)" fg:x="49009" fg:w="15"/><text x="49.5439%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="49.2909%" y="597" width="0.0201%" height="15" fill="rgb(247,87,16)" fg:x="49006" fg:w="20"/><text x="49.5409%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="49.2919%" y="581" width="0.0191%" height="15" fill="rgb(234,129,42)" fg:x="49007" fg:w="19"/><text x="49.5419%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="49.3342%" y="485" width="0.0111%" height="15" fill="rgb(220,82,16)" fg:x="49049" fg:w="11"/><text x="49.5842%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (39 samples, 0.04%)</title><rect x="49.3171%" y="549" width="0.0392%" height="15" fill="rgb(211,88,4)" fg:x="49032" fg:w="39"/><text x="49.5671%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (30 samples, 0.03%)</title><rect x="49.3261%" y="533" width="0.0302%" height="15" fill="rgb(248,151,21)" fg:x="49041" fg:w="30"/><text x="49.5761%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="49.3281%" y="517" width="0.0282%" height="15" fill="rgb(238,163,6)" fg:x="49043" fg:w="28"/><text x="49.5781%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.03%)</title><rect x="49.3301%" y="501" width="0.0262%" height="15" fill="rgb(209,183,11)" fg:x="49045" fg:w="26"/><text x="49.5801%" y="511.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (228 samples, 0.23%)</title><rect x="49.1280%" y="709" width="0.2293%" height="15" fill="rgb(219,37,20)" fg:x="48844" fg:w="228"/><text x="49.3780%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (212 samples, 0.21%)</title><rect x="49.1441%" y="693" width="0.2132%" height="15" fill="rgb(210,158,4)" fg:x="48860" fg:w="212"/><text x="49.3941%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (212 samples, 0.21%)</title><rect x="49.1441%" y="677" width="0.2132%" height="15" fill="rgb(221,167,53)" fg:x="48860" fg:w="212"/><text x="49.3941%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (140 samples, 0.14%)</title><rect x="49.2165%" y="661" width="0.1408%" height="15" fill="rgb(237,151,45)" fg:x="48932" fg:w="140"/><text x="49.4665%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (140 samples, 0.14%)</title><rect x="49.2165%" y="645" width="0.1408%" height="15" fill="rgb(231,39,3)" fg:x="48932" fg:w="140"/><text x="49.4665%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (107 samples, 0.11%)</title><rect x="49.2497%" y="629" width="0.1076%" height="15" fill="rgb(212,167,28)" fg:x="48965" fg:w="107"/><text x="49.4997%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106 samples, 0.11%)</title><rect x="49.2507%" y="613" width="0.1066%" height="15" fill="rgb(232,178,8)" fg:x="48966" fg:w="106"/><text x="49.5007%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (43 samples, 0.04%)</title><rect x="49.3140%" y="597" width="0.0432%" height="15" fill="rgb(225,151,20)" fg:x="49029" fg:w="43"/><text x="49.5640%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (42 samples, 0.04%)</title><rect x="49.3150%" y="581" width="0.0422%" height="15" fill="rgb(238,3,37)" fg:x="49030" fg:w="42"/><text x="49.5650%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (40 samples, 0.04%)</title><rect x="49.3171%" y="565" width="0.0402%" height="15" fill="rgb(251,147,42)" fg:x="49032" fg:w="40"/><text x="49.5671%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (11 samples, 0.01%)</title><rect x="49.3573%" y="693" width="0.0111%" height="15" fill="rgb(208,173,10)" fg:x="49072" fg:w="11"/><text x="49.6073%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (21 samples, 0.02%)</title><rect x="49.3854%" y="597" width="0.0211%" height="15" fill="rgb(246,225,4)" fg:x="49100" fg:w="21"/><text x="49.6354%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="49.3965%" y="581" width="0.0101%" height="15" fill="rgb(248,102,6)" fg:x="49111" fg:w="10"/><text x="49.6465%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (34 samples, 0.03%)</title><rect x="49.3764%" y="629" width="0.0342%" height="15" fill="rgb(232,6,21)" fg:x="49091" fg:w="34"/><text x="49.6264%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (33 samples, 0.03%)</title><rect x="49.3774%" y="613" width="0.0332%" height="15" fill="rgb(221,179,22)" fg:x="49092" fg:w="33"/><text x="49.6274%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="49.3734%" y="661" width="0.0382%" height="15" fill="rgb(252,50,20)" fg:x="49088" fg:w="38"/><text x="49.6234%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (36 samples, 0.04%)</title><rect x="49.3754%" y="645" width="0.0362%" height="15" fill="rgb(222,56,38)" fg:x="49090" fg:w="36"/><text x="49.6254%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (18 samples, 0.02%)</title><rect x="49.4166%" y="629" width="0.0181%" height="15" fill="rgb(206,193,29)" fg:x="49131" fg:w="18"/><text x="49.6666%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="49.4176%" y="613" width="0.0171%" height="15" fill="rgb(239,192,45)" fg:x="49132" fg:w="17"/><text x="49.6676%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.01%)</title><rect x="49.4388%" y="597" width="0.0101%" height="15" fill="rgb(254,18,36)" fg:x="49153" fg:w="10"/><text x="49.6888%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (15 samples, 0.02%)</title><rect x="49.4347%" y="629" width="0.0151%" height="15" fill="rgb(221,127,11)" fg:x="49149" fg:w="15"/><text x="49.6847%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.01%)</title><rect x="49.4367%" y="613" width="0.0131%" height="15" fill="rgb(234,146,35)" fg:x="49151" fg:w="13"/><text x="49.6867%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="49.4770%" y="597" width="0.0121%" height="15" fill="rgb(254,201,37)" fg:x="49191" fg:w="12"/><text x="49.7270%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="49.4770%" y="581" width="0.0121%" height="15" fill="rgb(211,202,23)" fg:x="49191" fg:w="12"/><text x="49.7270%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (610 samples, 0.61%)</title><rect x="48.8835%" y="725" width="0.6135%" height="15" fill="rgb(237,91,2)" fg:x="48601" fg:w="610"/><text x="49.1335%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (139 samples, 0.14%)</title><rect x="49.3573%" y="709" width="0.1398%" height="15" fill="rgb(226,228,36)" fg:x="49072" fg:w="139"/><text x="49.6073%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (128 samples, 0.13%)</title><rect x="49.3683%" y="693" width="0.1287%" height="15" fill="rgb(213,63,50)" fg:x="49083" fg:w="128"/><text x="49.6183%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (128 samples, 0.13%)</title><rect x="49.3683%" y="677" width="0.1287%" height="15" fill="rgb(235,194,19)" fg:x="49083" fg:w="128"/><text x="49.6183%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (85 samples, 0.09%)</title><rect x="49.4116%" y="661" width="0.0855%" height="15" fill="rgb(207,204,18)" fg:x="49126" fg:w="85"/><text x="49.6616%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (83 samples, 0.08%)</title><rect x="49.4136%" y="645" width="0.0835%" height="15" fill="rgb(248,8,7)" fg:x="49128" fg:w="83"/><text x="49.6636%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (47 samples, 0.05%)</title><rect x="49.4498%" y="629" width="0.0473%" height="15" fill="rgb(223,145,47)" fg:x="49164" fg:w="47"/><text x="49.6998%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.04%)</title><rect x="49.4579%" y="613" width="0.0392%" height="15" fill="rgb(228,84,11)" fg:x="49172" fg:w="39"/><text x="49.7079%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_local_borrow (1,026 samples, 1.03%)</title><rect x="48.4933%" y="773" width="1.0320%" height="15" fill="rgb(218,76,45)" fg:x="48213" fg:w="1026"/><text x="48.7433%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_field_borrow (1,025 samples, 1.03%)</title><rect x="48.4943%" y="757" width="1.0310%" height="15" fill="rgb(223,80,15)" fg:x="48214" fg:w="1025"/><text x="48.7443%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (1,002 samples, 1.01%)</title><rect x="48.5174%" y="741" width="1.0078%" height="15" fill="rgb(219,218,33)" fg:x="48237" fg:w="1002"/><text x="48.7674%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(borrow_graph::references::RefID,borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt;&gt; (19 samples, 0.02%)</title><rect x="49.5061%" y="725" width="0.0191%" height="15" fill="rgb(208,51,11)" fg:x="49220" fg:w="19"/><text x="49.7561%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="49.5061%" y="709" width="0.0191%" height="15" fill="rgb(229,165,39)" fg:x="49220" fg:w="19"/><text x="49.7561%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (16 samples, 0.02%)</title><rect x="49.5605%" y="725" width="0.0161%" height="15" fill="rgb(241,100,24)" fg:x="49274" fg:w="16"/><text x="49.8105%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 0.01%)</title><rect x="49.5655%" y="709" width="0.0111%" height="15" fill="rgb(228,14,23)" fg:x="49279" fg:w="11"/><text x="49.8155%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="49.5655%" y="693" width="0.0111%" height="15" fill="rgb(247,116,52)" fg:x="49279" fg:w="11"/><text x="49.8155%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="49.5655%" y="677" width="0.0111%" height="15" fill="rgb(216,149,33)" fg:x="49279" fg:w="11"/><text x="49.8155%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (53 samples, 0.05%)</title><rect x="49.5393%" y="741" width="0.0533%" height="15" fill="rgb(238,142,29)" fg:x="49253" fg:w="53"/><text x="49.7893%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::all_immutable (12 samples, 0.01%)</title><rect x="49.5926%" y="741" width="0.0121%" height="15" fill="rgb(224,83,40)" fg:x="49306" fg:w="12"/><text x="49.8426%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_mutably_borrowed (97 samples, 0.10%)</title><rect x="49.5253%" y="773" width="0.0976%" height="15" fill="rgb(234,165,11)" fg:x="49239" fg:w="97"/><text x="49.7753%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (97 samples, 0.10%)</title><rect x="49.5253%" y="757" width="0.0976%" height="15" fill="rgb(215,96,23)" fg:x="49239" fg:w="97"/><text x="49.7753%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="49.6087%" y="741" width="0.0141%" height="15" fill="rgb(233,179,26)" fg:x="49322" fg:w="14"/><text x="49.8587%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="49.6087%" y="725" width="0.0141%" height="15" fill="rgb(225,129,33)" fg:x="49322" fg:w="14"/><text x="49.8587%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="49.6128%" y="709" width="0.0101%" height="15" fill="rgb(237,49,13)" fg:x="49326" fg:w="10"/><text x="49.8628%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="49.6128%" y="693" width="0.0101%" height="15" fill="rgb(211,3,31)" fg:x="49326" fg:w="10"/><text x="49.8628%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (23 samples, 0.02%)</title><rect x="49.6248%" y="725" width="0.0231%" height="15" fill="rgb(216,152,19)" fg:x="49338" fg:w="23"/><text x="49.8748%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.02%)</title><rect x="49.6278%" y="709" width="0.0201%" height="15" fill="rgb(251,121,35)" fg:x="49341" fg:w="20"/><text x="49.8778%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.02%)</title><rect x="49.6319%" y="693" width="0.0161%" height="15" fill="rgb(210,217,47)" fg:x="49345" fg:w="16"/><text x="49.8819%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (16 samples, 0.02%)</title><rect x="49.6319%" y="677" width="0.0161%" height="15" fill="rgb(244,116,22)" fg:x="49345" fg:w="16"/><text x="49.8819%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (23 samples, 0.02%)</title><rect x="49.6540%" y="693" width="0.0231%" height="15" fill="rgb(228,17,21)" fg:x="49367" fg:w="23"/><text x="49.9040%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (20 samples, 0.02%)</title><rect x="49.6570%" y="677" width="0.0201%" height="15" fill="rgb(240,149,34)" fg:x="49370" fg:w="20"/><text x="49.9070%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (55 samples, 0.06%)</title><rect x="49.6238%" y="741" width="0.0553%" height="15" fill="rgb(208,125,47)" fg:x="49337" fg:w="55"/><text x="49.8738%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (31 samples, 0.03%)</title><rect x="49.6480%" y="725" width="0.0312%" height="15" fill="rgb(249,186,39)" fg:x="49361" fg:w="31"/><text x="49.8980%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.03%)</title><rect x="49.6510%" y="709" width="0.0282%" height="15" fill="rgb(240,220,33)" fg:x="49364" fg:w="28"/><text x="49.9010%" y="719.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::borrow_loc (1,186 samples, 1.19%)</title><rect x="48.4913%" y="789" width="1.1929%" height="15" fill="rgb(243,110,23)" fg:x="48211" fg:w="1186"/><text x="48.7413%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (61 samples, 0.06%)</title><rect x="49.6228%" y="773" width="0.0614%" height="15" fill="rgb(219,163,46)" fg:x="49336" fg:w="61"/><text x="49.8728%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (60 samples, 0.06%)</title><rect x="49.6238%" y="757" width="0.0603%" height="15" fill="rgb(216,126,30)" fg:x="49337" fg:w="60"/><text x="49.8738%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (11 samples, 0.01%)</title><rect x="49.6882%" y="741" width="0.0111%" height="15" fill="rgb(208,139,11)" fg:x="49401" fg:w="11"/><text x="49.9382%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (15 samples, 0.02%)</title><rect x="49.6852%" y="773" width="0.0151%" height="15" fill="rgb(213,118,36)" fg:x="49398" fg:w="15"/><text x="49.9352%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (15 samples, 0.02%)</title><rect x="49.6852%" y="757" width="0.0151%" height="15" fill="rgb(226,43,17)" fg:x="49398" fg:w="15"/><text x="49.9352%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::comparison (20 samples, 0.02%)</title><rect x="49.6842%" y="789" width="0.0201%" height="15" fill="rgb(254,217,4)" fg:x="49397" fg:w="20"/><text x="49.9342%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="49.7244%" y="757" width="0.0111%" height="15" fill="rgb(210,134,47)" fg:x="49437" fg:w="11"/><text x="49.9744%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.01%)</title><rect x="49.7878%" y="677" width="0.0111%" height="15" fill="rgb(237,24,49)" fg:x="49500" fg:w="11"/><text x="50.0378%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="49.7687%" y="709" width="0.0362%" height="15" fill="rgb(251,39,46)" fg:x="49481" fg:w="36"/><text x="50.0187%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="49.7757%" y="693" width="0.0292%" height="15" fill="rgb(251,220,3)" fg:x="49488" fg:w="29"/><text x="50.0257%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="49.8069%" y="709" width="0.0181%" height="15" fill="rgb(228,105,12)" fg:x="49519" fg:w="18"/><text x="50.0569%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="49.8139%" y="693" width="0.0111%" height="15" fill="rgb(215,196,1)" fg:x="49526" fg:w="11"/><text x="50.0639%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (105 samples, 0.11%)</title><rect x="49.7365%" y="757" width="0.1056%" height="15" fill="rgb(214,33,39)" fg:x="49449" fg:w="105"/><text x="49.9865%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (94 samples, 0.09%)</title><rect x="49.7475%" y="741" width="0.0945%" height="15" fill="rgb(220,19,52)" fg:x="49460" fg:w="94"/><text x="49.9975%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (88 samples, 0.09%)</title><rect x="49.7536%" y="725" width="0.0885%" height="15" fill="rgb(221,78,38)" fg:x="49466" fg:w="88"/><text x="50.0036%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.01%)</title><rect x="49.8300%" y="709" width="0.0121%" height="15" fill="rgb(253,30,16)" fg:x="49542" fg:w="12"/><text x="50.0800%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (129 samples, 0.13%)</title><rect x="49.7154%" y="773" width="0.1297%" height="15" fill="rgb(242,65,0)" fg:x="49428" fg:w="129"/><text x="49.9654%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="49.8461%" y="757" width="0.0141%" height="15" fill="rgb(235,201,12)" fg:x="49558" fg:w="14"/><text x="50.0961%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="49.8481%" y="741" width="0.0121%" height="15" fill="rgb(233,161,9)" fg:x="49560" fg:w="12"/><text x="50.0981%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="49.8501%" y="725" width="0.0101%" height="15" fill="rgb(241,207,41)" fg:x="49562" fg:w="10"/><text x="50.1001%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="49.8501%" y="709" width="0.0101%" height="15" fill="rgb(212,69,46)" fg:x="49562" fg:w="10"/><text x="50.1001%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (16 samples, 0.02%)</title><rect x="49.8451%" y="773" width="0.0161%" height="15" fill="rgb(239,69,45)" fg:x="49557" fg:w="16"/><text x="50.0951%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (16 samples, 0.02%)</title><rect x="49.9226%" y="725" width="0.0161%" height="15" fill="rgb(242,117,48)" fg:x="49634" fg:w="16"/><text x="50.1726%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="49.9246%" y="709" width="0.0141%" height="15" fill="rgb(228,41,36)" fg:x="49636" fg:w="14"/><text x="50.1746%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="49.9256%" y="693" width="0.0131%" height="15" fill="rgb(212,3,32)" fg:x="49637" fg:w="13"/><text x="50.1756%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="49.9276%" y="677" width="0.0111%" height="15" fill="rgb(233,41,49)" fg:x="49639" fg:w="11"/><text x="50.1776%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.01%)</title><rect x="49.9819%" y="581" width="0.0111%" height="15" fill="rgb(252,170,49)" fg:x="49693" fg:w="11"/><text x="50.2319%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (10 samples, 0.01%)</title><rect x="49.9829%" y="565" width="0.0101%" height="15" fill="rgb(229,53,26)" fg:x="49694" fg:w="10"/><text x="50.2329%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="49.9829%" y="549" width="0.0101%" height="15" fill="rgb(217,157,12)" fg:x="49694" fg:w="10"/><text x="50.2329%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (25 samples, 0.03%)</title><rect x="49.9789%" y="677" width="0.0251%" height="15" fill="rgb(227,17,9)" fg:x="49690" fg:w="25"/><text x="50.2289%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (25 samples, 0.03%)</title><rect x="49.9789%" y="661" width="0.0251%" height="15" fill="rgb(218,84,12)" fg:x="49690" fg:w="25"/><text x="50.2289%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 0.02%)</title><rect x="49.9809%" y="645" width="0.0231%" height="15" fill="rgb(212,79,24)" fg:x="49692" fg:w="23"/><text x="50.2309%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (23 samples, 0.02%)</title><rect x="49.9809%" y="629" width="0.0231%" height="15" fill="rgb(217,222,37)" fg:x="49692" fg:w="23"/><text x="50.2309%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (23 samples, 0.02%)</title><rect x="49.9809%" y="613" width="0.0231%" height="15" fill="rgb(246,208,8)" fg:x="49692" fg:w="23"/><text x="50.2309%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (22 samples, 0.02%)</title><rect x="49.9819%" y="597" width="0.0221%" height="15" fill="rgb(244,133,10)" fg:x="49693" fg:w="22"/><text x="50.2319%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (59 samples, 0.06%)</title><rect x="49.9698%" y="693" width="0.0593%" height="15" fill="rgb(209,219,41)" fg:x="49681" fg:w="59"/><text x="50.2198%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (25 samples, 0.03%)</title><rect x="50.0040%" y="677" width="0.0251%" height="15" fill="rgb(253,175,45)" fg:x="49715" fg:w="25"/><text x="50.2540%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (17 samples, 0.02%)</title><rect x="50.0121%" y="661" width="0.0171%" height="15" fill="rgb(235,100,37)" fg:x="49723" fg:w="17"/><text x="50.2621%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="50.0121%" y="645" width="0.0171%" height="15" fill="rgb(225,87,19)" fg:x="49723" fg:w="17"/><text x="50.2621%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (20 samples, 0.02%)</title><rect x="50.0292%" y="693" width="0.0201%" height="15" fill="rgb(217,152,17)" fg:x="49740" fg:w="20"/><text x="50.2792%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="50.0352%" y="677" width="0.0141%" height="15" fill="rgb(235,72,13)" fg:x="49746" fg:w="14"/><text x="50.2852%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="50.0352%" y="661" width="0.0141%" height="15" fill="rgb(233,140,18)" fg:x="49746" fg:w="14"/><text x="50.2852%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="50.0352%" y="645" width="0.0141%" height="15" fill="rgb(207,212,28)" fg:x="49746" fg:w="14"/><text x="50.2852%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (12 samples, 0.01%)</title><rect x="50.0744%" y="613" width="0.0121%" height="15" fill="rgb(220,130,25)" fg:x="49785" fg:w="12"/><text x="50.3244%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (25 samples, 0.03%)</title><rect x="50.0644%" y="629" width="0.0251%" height="15" fill="rgb(205,55,34)" fg:x="49775" fg:w="25"/><text x="50.3144%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (41 samples, 0.04%)</title><rect x="50.0493%" y="693" width="0.0412%" height="15" fill="rgb(237,54,35)" fg:x="49760" fg:w="41"/><text x="50.2993%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (38 samples, 0.04%)</title><rect x="50.0523%" y="677" width="0.0382%" height="15" fill="rgb(208,67,23)" fg:x="49763" fg:w="38"/><text x="50.3023%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (37 samples, 0.04%)</title><rect x="50.0533%" y="661" width="0.0372%" height="15" fill="rgb(206,207,50)" fg:x="49764" fg:w="37"/><text x="50.3033%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (31 samples, 0.03%)</title><rect x="50.0593%" y="645" width="0.0312%" height="15" fill="rgb(213,211,42)" fg:x="49770" fg:w="31"/><text x="50.3093%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="50.1157%" y="501" width="0.0111%" height="15" fill="rgb(252,197,50)" fg:x="49826" fg:w="11"/><text x="50.3657%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="50.1157%" y="485" width="0.0111%" height="15" fill="rgb(251,211,41)" fg:x="49826" fg:w="11"/><text x="50.3657%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.02%)</title><rect x="50.1137%" y="517" width="0.0201%" height="15" fill="rgb(229,211,5)" fg:x="49824" fg:w="20"/><text x="50.3637%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (25 samples, 0.03%)</title><rect x="50.1127%" y="549" width="0.0251%" height="15" fill="rgb(239,36,31)" fg:x="49823" fg:w="25"/><text x="50.3627%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (24 samples, 0.02%)</title><rect x="50.1137%" y="533" width="0.0241%" height="15" fill="rgb(248,67,31)" fg:x="49824" fg:w="24"/><text x="50.3637%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (13 samples, 0.01%)</title><rect x="50.1378%" y="549" width="0.0131%" height="15" fill="rgb(249,55,44)" fg:x="49848" fg:w="13"/><text x="50.3878%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (10 samples, 0.01%)</title><rect x="50.1408%" y="533" width="0.0101%" height="15" fill="rgb(216,82,12)" fg:x="49851" fg:w="10"/><text x="50.3908%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (10 samples, 0.01%)</title><rect x="50.1408%" y="517" width="0.0101%" height="15" fill="rgb(242,174,1)" fg:x="49851" fg:w="10"/><text x="50.3908%" y="527.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (43 samples, 0.04%)</title><rect x="50.1106%" y="565" width="0.0432%" height="15" fill="rgb(208,120,29)" fg:x="49821" fg:w="43"/><text x="50.3606%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (56 samples, 0.06%)</title><rect x="50.0996%" y="645" width="0.0563%" height="15" fill="rgb(221,105,43)" fg:x="49810" fg:w="56"/><text x="50.3496%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (55 samples, 0.06%)</title><rect x="50.1006%" y="629" width="0.0553%" height="15" fill="rgb(234,124,22)" fg:x="49811" fg:w="55"/><text x="50.3506%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (48 samples, 0.05%)</title><rect x="50.1076%" y="613" width="0.0483%" height="15" fill="rgb(212,23,30)" fg:x="49818" fg:w="48"/><text x="50.3576%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (48 samples, 0.05%)</title><rect x="50.1076%" y="597" width="0.0483%" height="15" fill="rgb(219,122,53)" fg:x="49818" fg:w="48"/><text x="50.3576%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (46 samples, 0.05%)</title><rect x="50.1096%" y="581" width="0.0463%" height="15" fill="rgb(248,84,24)" fg:x="49820" fg:w="46"/><text x="50.3596%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (10 samples, 0.01%)</title><rect x="50.1760%" y="597" width="0.0101%" height="15" fill="rgb(245,115,18)" fg:x="49886" fg:w="10"/><text x="50.4260%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (104 samples, 0.10%)</title><rect x="50.0956%" y="661" width="0.1046%" height="15" fill="rgb(227,176,51)" fg:x="49806" fg:w="104"/><text x="50.3456%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (44 samples, 0.04%)</title><rect x="50.1559%" y="645" width="0.0443%" height="15" fill="rgb(229,63,42)" fg:x="49866" fg:w="44"/><text x="50.4059%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (39 samples, 0.04%)</title><rect x="50.1609%" y="629" width="0.0392%" height="15" fill="rgb(247,202,24)" fg:x="49871" fg:w="39"/><text x="50.4109%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.04%)</title><rect x="50.1639%" y="613" width="0.0362%" height="15" fill="rgb(244,173,20)" fg:x="49874" fg:w="36"/><text x="50.4139%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="50.1891%" y="597" width="0.0111%" height="15" fill="rgb(242,81,47)" fg:x="49899" fg:w="11"/><text x="50.4391%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="50.1901%" y="581" width="0.0101%" height="15" fill="rgb(231,185,54)" fg:x="49900" fg:w="10"/><text x="50.4401%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (23 samples, 0.02%)</title><rect x="50.2424%" y="597" width="0.0231%" height="15" fill="rgb(243,55,32)" fg:x="49952" fg:w="23"/><text x="50.4924%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (15 samples, 0.02%)</title><rect x="50.2504%" y="581" width="0.0151%" height="15" fill="rgb(208,167,19)" fg:x="49960" fg:w="15"/><text x="50.5004%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (49 samples, 0.05%)</title><rect x="50.2253%" y="613" width="0.0493%" height="15" fill="rgb(231,72,35)" fg:x="49935" fg:w="49"/><text x="50.4753%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (186 samples, 0.19%)</title><rect x="50.0905%" y="677" width="0.1871%" height="15" fill="rgb(250,173,51)" fg:x="49801" fg:w="186"/><text x="50.3405%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (77 samples, 0.08%)</title><rect x="50.2002%" y="661" width="0.0774%" height="15" fill="rgb(209,5,22)" fg:x="49910" fg:w="77"/><text x="50.4502%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (74 samples, 0.07%)</title><rect x="50.2032%" y="645" width="0.0744%" height="15" fill="rgb(250,174,19)" fg:x="49913" fg:w="74"/><text x="50.4532%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (59 samples, 0.06%)</title><rect x="50.2183%" y="629" width="0.0593%" height="15" fill="rgb(217,3,49)" fg:x="49928" fg:w="59"/><text x="50.4683%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (313 samples, 0.31%)</title><rect x="49.9638%" y="725" width="0.3148%" height="15" fill="rgb(218,225,5)" fg:x="49675" fg:w="313"/><text x="50.2138%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (311 samples, 0.31%)</title><rect x="49.9658%" y="709" width="0.3128%" height="15" fill="rgb(236,89,11)" fg:x="49677" fg:w="311"/><text x="50.2158%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (187 samples, 0.19%)</title><rect x="50.0905%" y="693" width="0.1881%" height="15" fill="rgb(206,33,28)" fg:x="49801" fg:w="187"/><text x="50.3405%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (14 samples, 0.01%)</title><rect x="50.3128%" y="581" width="0.0141%" height="15" fill="rgb(241,56,42)" fg:x="50022" fg:w="14"/><text x="50.5628%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (13 samples, 0.01%)</title><rect x="50.3269%" y="581" width="0.0131%" height="15" fill="rgb(222,44,11)" fg:x="50036" fg:w="13"/><text x="50.5769%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="50.3400%" y="581" width="0.0101%" height="15" fill="rgb(234,111,20)" fg:x="50049" fg:w="10"/><text x="50.5900%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (42 samples, 0.04%)</title><rect x="50.3098%" y="597" width="0.0422%" height="15" fill="rgb(237,77,6)" fg:x="50019" fg:w="42"/><text x="50.5598%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (50 samples, 0.05%)</title><rect x="50.3058%" y="629" width="0.0503%" height="15" fill="rgb(235,111,23)" fg:x="50015" fg:w="50"/><text x="50.5558%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (50 samples, 0.05%)</title><rect x="50.3058%" y="613" width="0.0503%" height="15" fill="rgb(251,135,29)" fg:x="50015" fg:w="50"/><text x="50.5558%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.06%)</title><rect x="50.3007%" y="661" width="0.0583%" height="15" fill="rgb(217,57,1)" fg:x="50010" fg:w="58"/><text x="50.5507%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (55 samples, 0.06%)</title><rect x="50.3038%" y="645" width="0.0553%" height="15" fill="rgb(249,119,31)" fg:x="50013" fg:w="55"/><text x="50.5538%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.01%)</title><rect x="50.3691%" y="629" width="0.0131%" height="15" fill="rgb(233,164,33)" fg:x="50078" fg:w="13"/><text x="50.6191%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (16 samples, 0.02%)</title><rect x="50.3862%" y="597" width="0.0161%" height="15" fill="rgb(250,217,43)" fg:x="50095" fg:w="16"/><text x="50.6362%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (21 samples, 0.02%)</title><rect x="50.3822%" y="629" width="0.0211%" height="15" fill="rgb(232,154,50)" fg:x="50091" fg:w="21"/><text x="50.6322%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (19 samples, 0.02%)</title><rect x="50.3842%" y="613" width="0.0191%" height="15" fill="rgb(227,190,8)" fg:x="50093" fg:w="19"/><text x="50.6342%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="50.4224%" y="581" width="0.0131%" height="15" fill="rgb(209,217,32)" fg:x="50131" fg:w="13"/><text x="50.6724%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="50.4234%" y="565" width="0.0121%" height="15" fill="rgb(243,203,50)" fg:x="50132" fg:w="12"/><text x="50.6734%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.01%)</title><rect x="50.4245%" y="549" width="0.0111%" height="15" fill="rgb(232,152,27)" fg:x="50133" fg:w="11"/><text x="50.6745%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="50.4255%" y="533" width="0.0101%" height="15" fill="rgb(240,34,29)" fg:x="50134" fg:w="10"/><text x="50.6755%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="50.4194%" y="597" width="0.0171%" height="15" fill="rgb(215,185,52)" fg:x="50128" fg:w="17"/><text x="50.6694%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.01%)</title><rect x="50.4436%" y="533" width="0.0111%" height="15" fill="rgb(240,89,49)" fg:x="50152" fg:w="11"/><text x="50.6936%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.01%)</title><rect x="50.4436%" y="517" width="0.0111%" height="15" fill="rgb(225,12,52)" fg:x="50152" fg:w="11"/><text x="50.6936%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="50.4385%" y="565" width="0.0181%" height="15" fill="rgb(239,128,45)" fg:x="50147" fg:w="18"/><text x="50.6885%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="50.4436%" y="549" width="0.0131%" height="15" fill="rgb(211,78,47)" fg:x="50152" fg:w="13"/><text x="50.6936%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="50.4365%" y="597" width="0.0241%" height="15" fill="rgb(232,31,21)" fg:x="50145" fg:w="24"/><text x="50.6865%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="50.4375%" y="581" width="0.0231%" height="15" fill="rgb(222,168,14)" fg:x="50146" fg:w="23"/><text x="50.6875%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (41 samples, 0.04%)</title><rect x="50.4647%" y="549" width="0.0412%" height="15" fill="rgb(209,128,24)" fg:x="50173" fg:w="41"/><text x="50.7147%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (41 samples, 0.04%)</title><rect x="50.4647%" y="533" width="0.0412%" height="15" fill="rgb(249,35,13)" fg:x="50173" fg:w="41"/><text x="50.7147%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (33 samples, 0.03%)</title><rect x="50.4727%" y="517" width="0.0332%" height="15" fill="rgb(218,7,2)" fg:x="50181" fg:w="33"/><text x="50.7227%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (32 samples, 0.03%)</title><rect x="50.4737%" y="501" width="0.0322%" height="15" fill="rgb(238,107,27)" fg:x="50182" fg:w="32"/><text x="50.7237%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.03%)</title><rect x="50.4778%" y="485" width="0.0282%" height="15" fill="rgb(217,88,38)" fg:x="50186" fg:w="28"/><text x="50.7278%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.02%)</title><rect x="50.5170%" y="517" width="0.0211%" height="15" fill="rgb(230,207,0)" fg:x="50225" fg:w="21"/><text x="50.7670%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (18 samples, 0.02%)</title><rect x="50.5200%" y="501" width="0.0181%" height="15" fill="rgb(249,64,54)" fg:x="50228" fg:w="18"/><text x="50.7700%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="50.5240%" y="485" width="0.0141%" height="15" fill="rgb(231,7,11)" fg:x="50232" fg:w="14"/><text x="50.7740%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (35 samples, 0.04%)</title><rect x="50.5059%" y="549" width="0.0352%" height="15" fill="rgb(205,149,21)" fg:x="50214" fg:w="35"/><text x="50.7559%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (35 samples, 0.04%)</title><rect x="50.5059%" y="533" width="0.0352%" height="15" fill="rgb(215,126,34)" fg:x="50214" fg:w="35"/><text x="50.7559%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (18 samples, 0.02%)</title><rect x="50.5472%" y="501" width="0.0181%" height="15" fill="rgb(241,132,45)" fg:x="50255" fg:w="18"/><text x="50.7972%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (16 samples, 0.02%)</title><rect x="50.5492%" y="485" width="0.0161%" height="15" fill="rgb(252,69,32)" fg:x="50257" fg:w="16"/><text x="50.7992%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="50.5522%" y="469" width="0.0131%" height="15" fill="rgb(232,204,19)" fg:x="50260" fg:w="13"/><text x="50.8022%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (21 samples, 0.02%)</title><rect x="50.5452%" y="517" width="0.0211%" height="15" fill="rgb(249,15,47)" fg:x="50253" fg:w="21"/><text x="50.7952%" y="527.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (287 samples, 0.29%)</title><rect x="50.2786%" y="709" width="0.2887%" height="15" fill="rgb(209,227,23)" fg:x="49988" fg:w="287"/><text x="50.5286%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (277 samples, 0.28%)</title><rect x="50.2887%" y="693" width="0.2786%" height="15" fill="rgb(248,92,24)" fg:x="49998" fg:w="277"/><text x="50.5387%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (276 samples, 0.28%)</title><rect x="50.2897%" y="677" width="0.2776%" height="15" fill="rgb(247,59,2)" fg:x="49999" fg:w="276"/><text x="50.5397%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (204 samples, 0.21%)</title><rect x="50.3621%" y="661" width="0.2052%" height="15" fill="rgb(221,30,5)" fg:x="50071" fg:w="204"/><text x="50.6121%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (202 samples, 0.20%)</title><rect x="50.3641%" y="645" width="0.2032%" height="15" fill="rgb(208,108,53)" fg:x="50073" fg:w="202"/><text x="50.6141%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (163 samples, 0.16%)</title><rect x="50.4033%" y="629" width="0.1639%" height="15" fill="rgb(211,183,26)" fg:x="50112" fg:w="163"/><text x="50.6533%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (154 samples, 0.15%)</title><rect x="50.4124%" y="613" width="0.1549%" height="15" fill="rgb(232,132,4)" fg:x="50121" fg:w="154"/><text x="50.6624%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (106 samples, 0.11%)</title><rect x="50.4607%" y="597" width="0.1066%" height="15" fill="rgb(253,128,37)" fg:x="50169" fg:w="106"/><text x="50.7107%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (104 samples, 0.10%)</title><rect x="50.4627%" y="581" width="0.1046%" height="15" fill="rgb(221,58,24)" fg:x="50171" fg:w="104"/><text x="50.7127%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (103 samples, 0.10%)</title><rect x="50.4637%" y="565" width="0.1036%" height="15" fill="rgb(230,54,45)" fg:x="50172" fg:w="103"/><text x="50.7137%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (26 samples, 0.03%)</title><rect x="50.5411%" y="549" width="0.0262%" height="15" fill="rgb(254,21,18)" fg:x="50249" fg:w="26"/><text x="50.7911%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (25 samples, 0.03%)</title><rect x="50.5421%" y="533" width="0.0251%" height="15" fill="rgb(221,108,0)" fg:x="50250" fg:w="25"/><text x="50.7921%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (20 samples, 0.02%)</title><rect x="50.5713%" y="661" width="0.0201%" height="15" fill="rgb(206,95,1)" fg:x="50279" fg:w="20"/><text x="50.8213%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (20 samples, 0.02%)</title><rect x="50.5713%" y="645" width="0.0201%" height="15" fill="rgb(237,52,5)" fg:x="50279" fg:w="20"/><text x="50.8213%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (25 samples, 0.03%)</title><rect x="50.5673%" y="693" width="0.0251%" height="15" fill="rgb(218,150,34)" fg:x="50275" fg:w="25"/><text x="50.8173%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (25 samples, 0.03%)</title><rect x="50.5673%" y="677" width="0.0251%" height="15" fill="rgb(235,194,28)" fg:x="50275" fg:w="25"/><text x="50.8173%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (12 samples, 0.01%)</title><rect x="50.6166%" y="565" width="0.0121%" height="15" fill="rgb(245,92,18)" fg:x="50324" fg:w="12"/><text x="50.8666%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (16 samples, 0.02%)</title><rect x="50.6357%" y="565" width="0.0161%" height="15" fill="rgb(253,203,53)" fg:x="50343" fg:w="16"/><text x="50.8857%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (42 samples, 0.04%)</title><rect x="50.6125%" y="581" width="0.0422%" height="15" fill="rgb(249,185,47)" fg:x="50320" fg:w="42"/><text x="50.8625%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (54 samples, 0.05%)</title><rect x="50.6075%" y="613" width="0.0543%" height="15" fill="rgb(252,194,52)" fg:x="50315" fg:w="54"/><text x="50.8575%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (53 samples, 0.05%)</title><rect x="50.6085%" y="597" width="0.0533%" height="15" fill="rgb(210,53,36)" fg:x="50316" fg:w="53"/><text x="50.8585%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.06%)</title><rect x="50.6065%" y="645" width="0.0593%" height="15" fill="rgb(237,37,25)" fg:x="50314" fg:w="59"/><text x="50.8565%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (59 samples, 0.06%)</title><rect x="50.6065%" y="629" width="0.0593%" height="15" fill="rgb(242,116,27)" fg:x="50314" fg:w="59"/><text x="50.8565%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.07%)</title><rect x="50.6055%" y="661" width="0.0674%" height="15" fill="rgb(213,185,26)" fg:x="50313" fg:w="67"/><text x="50.8555%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (16 samples, 0.02%)</title><rect x="50.6930%" y="597" width="0.0161%" height="15" fill="rgb(225,204,8)" fg:x="50400" fg:w="16"/><text x="50.9430%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (15 samples, 0.02%)</title><rect x="50.6940%" y="581" width="0.0151%" height="15" fill="rgb(254,111,37)" fg:x="50401" fg:w="15"/><text x="50.9440%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (28 samples, 0.03%)</title><rect x="50.6850%" y="613" width="0.0282%" height="15" fill="rgb(242,35,9)" fg:x="50392" fg:w="28"/><text x="50.9350%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (35 samples, 0.04%)</title><rect x="50.6799%" y="629" width="0.0352%" height="15" fill="rgb(232,138,49)" fg:x="50387" fg:w="35"/><text x="50.9299%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (20 samples, 0.02%)</title><rect x="50.7151%" y="629" width="0.0201%" height="15" fill="rgb(247,56,4)" fg:x="50422" fg:w="20"/><text x="50.9651%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (19 samples, 0.02%)</title><rect x="50.7161%" y="613" width="0.0191%" height="15" fill="rgb(226,179,17)" fg:x="50423" fg:w="19"/><text x="50.9661%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="50.7182%" y="597" width="0.0171%" height="15" fill="rgb(216,163,45)" fg:x="50425" fg:w="17"/><text x="50.9682%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.01%)</title><rect x="50.7242%" y="581" width="0.0111%" height="15" fill="rgb(211,157,3)" fg:x="50431" fg:w="11"/><text x="50.9742%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.01%)</title><rect x="50.7242%" y="565" width="0.0111%" height="15" fill="rgb(234,44,20)" fg:x="50431" fg:w="11"/><text x="50.9742%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (15 samples, 0.02%)</title><rect x="50.7584%" y="517" width="0.0151%" height="15" fill="rgb(254,138,23)" fg:x="50465" fg:w="15"/><text x="51.0084%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (23 samples, 0.02%)</title><rect x="50.7544%" y="549" width="0.0231%" height="15" fill="rgb(206,119,39)" fg:x="50461" fg:w="23"/><text x="51.0044%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="50.7544%" y="533" width="0.0231%" height="15" fill="rgb(231,105,52)" fg:x="50461" fg:w="23"/><text x="51.0044%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="50.7513%" y="581" width="0.0282%" height="15" fill="rgb(250,20,5)" fg:x="50458" fg:w="28"/><text x="51.0013%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="50.7544%" y="565" width="0.0251%" height="15" fill="rgb(215,198,30)" fg:x="50461" fg:w="25"/><text x="51.0044%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="50.7503%" y="597" width="0.0312%" height="15" fill="rgb(246,142,8)" fg:x="50457" fg:w="31"/><text x="51.0003%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (17 samples, 0.02%)</title><rect x="50.7896%" y="501" width="0.0171%" height="15" fill="rgb(243,26,38)" fg:x="50496" fg:w="17"/><text x="51.0396%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="50.7835%" y="565" width="0.0262%" height="15" fill="rgb(205,133,28)" fg:x="50490" fg:w="26"/><text x="51.0335%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (26 samples, 0.03%)</title><rect x="50.7835%" y="549" width="0.0262%" height="15" fill="rgb(212,34,0)" fg:x="50490" fg:w="26"/><text x="51.0335%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="50.7845%" y="533" width="0.0251%" height="15" fill="rgb(251,226,22)" fg:x="50491" fg:w="25"/><text x="51.0345%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (25 samples, 0.03%)</title><rect x="50.7845%" y="517" width="0.0251%" height="15" fill="rgb(252,119,9)" fg:x="50491" fg:w="25"/><text x="51.0345%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="50.7815%" y="597" width="0.0342%" height="15" fill="rgb(213,150,50)" fg:x="50488" fg:w="34"/><text x="51.0315%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="50.7815%" y="581" width="0.0342%" height="15" fill="rgb(212,24,39)" fg:x="50488" fg:w="34"/><text x="51.0315%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="50.8409%" y="485" width="0.0161%" height="15" fill="rgb(213,46,39)" fg:x="50547" fg:w="16"/><text x="51.0909%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="50.8469%" y="469" width="0.0101%" height="15" fill="rgb(239,106,12)" fg:x="50553" fg:w="10"/><text x="51.0969%" y="479.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (301 samples, 0.30%)</title><rect x="50.5673%" y="709" width="0.3027%" height="15" fill="rgb(249,229,21)" fg:x="50275" fg:w="301"/><text x="50.8173%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (276 samples, 0.28%)</title><rect x="50.5924%" y="693" width="0.2776%" height="15" fill="rgb(212,158,3)" fg:x="50300" fg:w="276"/><text x="50.8424%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (272 samples, 0.27%)</title><rect x="50.5964%" y="677" width="0.2736%" height="15" fill="rgb(253,26,48)" fg:x="50304" fg:w="272"/><text x="50.8464%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (194 samples, 0.20%)</title><rect x="50.6749%" y="661" width="0.1951%" height="15" fill="rgb(238,178,20)" fg:x="50382" fg:w="194"/><text x="50.9249%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (193 samples, 0.19%)</title><rect x="50.6759%" y="645" width="0.1941%" height="15" fill="rgb(208,86,15)" fg:x="50383" fg:w="193"/><text x="50.9259%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (134 samples, 0.13%)</title><rect x="50.7352%" y="629" width="0.1348%" height="15" fill="rgb(239,42,53)" fg:x="50442" fg:w="134"/><text x="50.9852%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (129 samples, 0.13%)</title><rect x="50.7403%" y="613" width="0.1297%" height="15" fill="rgb(245,226,8)" fg:x="50447" fg:w="129"/><text x="50.9903%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (53 samples, 0.05%)</title><rect x="50.8167%" y="597" width="0.0533%" height="15" fill="rgb(216,176,32)" fg:x="50523" fg:w="53"/><text x="51.0667%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (51 samples, 0.05%)</title><rect x="50.8187%" y="581" width="0.0513%" height="15" fill="rgb(231,186,21)" fg:x="50525" fg:w="51"/><text x="51.0687%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (50 samples, 0.05%)</title><rect x="50.8197%" y="565" width="0.0503%" height="15" fill="rgb(205,95,49)" fg:x="50526" fg:w="50"/><text x="51.0697%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (48 samples, 0.05%)</title><rect x="50.8217%" y="549" width="0.0483%" height="15" fill="rgb(217,145,8)" fg:x="50528" fg:w="48"/><text x="51.0717%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 0.04%)</title><rect x="50.8308%" y="533" width="0.0392%" height="15" fill="rgb(239,144,48)" fg:x="50537" fg:w="39"/><text x="51.0808%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (37 samples, 0.04%)</title><rect x="50.8328%" y="517" width="0.0372%" height="15" fill="rgb(214,189,23)" fg:x="50539" fg:w="37"/><text x="51.0828%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (37 samples, 0.04%)</title><rect x="50.8328%" y="501" width="0.0372%" height="15" fill="rgb(229,157,17)" fg:x="50539" fg:w="37"/><text x="51.0828%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (25 samples, 0.03%)</title><rect x="50.8901%" y="597" width="0.0251%" height="15" fill="rgb(230,5,48)" fg:x="50596" fg:w="25"/><text x="51.1401%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (35 samples, 0.04%)</title><rect x="50.8821%" y="629" width="0.0352%" height="15" fill="rgb(224,156,48)" fg:x="50588" fg:w="35"/><text x="51.1321%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (32 samples, 0.03%)</title><rect x="50.8851%" y="613" width="0.0322%" height="15" fill="rgb(223,14,29)" fg:x="50591" fg:w="32"/><text x="51.1351%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="50.8801%" y="661" width="0.0402%" height="15" fill="rgb(229,96,36)" fg:x="50586" fg:w="40"/><text x="51.1301%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (39 samples, 0.04%)</title><rect x="50.8811%" y="645" width="0.0392%" height="15" fill="rgb(231,102,53)" fg:x="50587" fg:w="39"/><text x="51.1311%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.01%)</title><rect x="50.9223%" y="629" width="0.0111%" height="15" fill="rgb(210,77,38)" fg:x="50628" fg:w="11"/><text x="51.1723%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.01%)</title><rect x="50.9404%" y="613" width="0.0111%" height="15" fill="rgb(235,131,6)" fg:x="50646" fg:w="11"/><text x="51.1904%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (10 samples, 0.01%)</title><rect x="50.9414%" y="597" width="0.0101%" height="15" fill="rgb(252,55,38)" fg:x="50647" fg:w="10"/><text x="51.1914%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (20 samples, 0.02%)</title><rect x="50.9334%" y="629" width="0.0201%" height="15" fill="rgb(246,38,14)" fg:x="50639" fg:w="20"/><text x="51.1834%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="50.9706%" y="581" width="0.0121%" height="15" fill="rgb(242,27,5)" fg:x="50676" fg:w="12"/><text x="51.2206%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="50.9706%" y="565" width="0.0121%" height="15" fill="rgb(228,65,35)" fg:x="50676" fg:w="12"/><text x="51.2206%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="50.9706%" y="549" width="0.0121%" height="15" fill="rgb(245,93,11)" fg:x="50676" fg:w="12"/><text x="51.2206%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="50.9706%" y="533" width="0.0121%" height="15" fill="rgb(213,1,31)" fg:x="50676" fg:w="12"/><text x="51.2206%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="50.9706%" y="517" width="0.0121%" height="15" fill="rgb(237,205,14)" fg:x="50676" fg:w="12"/><text x="51.2206%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="50.9696%" y="597" width="0.0151%" height="15" fill="rgb(232,118,45)" fg:x="50675" fg:w="15"/><text x="51.2196%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="50.9857%" y="565" width="0.0121%" height="15" fill="rgb(218,5,6)" fg:x="50691" fg:w="12"/><text x="51.2357%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (10 samples, 0.01%)</title><rect x="50.9877%" y="549" width="0.0101%" height="15" fill="rgb(251,87,51)" fg:x="50693" fg:w="10"/><text x="51.2377%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="50.9847%" y="597" width="0.0141%" height="15" fill="rgb(207,225,20)" fg:x="50690" fg:w="14"/><text x="51.2347%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="50.9857%" y="581" width="0.0131%" height="15" fill="rgb(222,78,54)" fg:x="50691" fg:w="13"/><text x="51.2357%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (723 samples, 0.73%)</title><rect x="50.2786%" y="725" width="0.7272%" height="15" fill="rgb(232,85,16)" fg:x="49988" fg:w="723"/><text x="50.5286%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (135 samples, 0.14%)</title><rect x="50.8700%" y="709" width="0.1358%" height="15" fill="rgb(244,25,33)" fg:x="50576" fg:w="135"/><text x="51.1200%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (127 samples, 0.13%)</title><rect x="50.8781%" y="693" width="0.1277%" height="15" fill="rgb(233,24,36)" fg:x="50584" fg:w="127"/><text x="51.1281%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (127 samples, 0.13%)</title><rect x="50.8781%" y="677" width="0.1277%" height="15" fill="rgb(253,49,54)" fg:x="50584" fg:w="127"/><text x="51.1281%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (84 samples, 0.08%)</title><rect x="50.9213%" y="661" width="0.0845%" height="15" fill="rgb(245,12,22)" fg:x="50627" fg:w="84"/><text x="51.1713%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (83 samples, 0.08%)</title><rect x="50.9223%" y="645" width="0.0835%" height="15" fill="rgb(253,141,28)" fg:x="50628" fg:w="83"/><text x="51.1723%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (52 samples, 0.05%)</title><rect x="50.9535%" y="629" width="0.0523%" height="15" fill="rgb(225,207,27)" fg:x="50659" fg:w="52"/><text x="51.2035%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.05%)</title><rect x="50.9606%" y="613" width="0.0453%" height="15" fill="rgb(220,84,2)" fg:x="50666" fg:w="45"/><text x="51.2106%" y="623.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (12 samples, 0.01%)</title><rect x="51.0139%" y="693" width="0.0121%" height="15" fill="rgb(224,37,37)" fg:x="50719" fg:w="12"/><text x="51.2639%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(borrow_graph::references::RefID,borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;),alloc::alloc::Global&gt;&gt; (10 samples, 0.01%)</title><rect x="51.0259%" y="693" width="0.0101%" height="15" fill="rgb(220,143,18)" fg:x="50731" fg:w="10"/><text x="51.2759%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="51.0259%" y="677" width="0.0101%" height="15" fill="rgb(210,88,33)" fg:x="50731" fg:w="10"/><text x="51.2759%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(borrow_graph::references::RefID,borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt;&gt; (23 samples, 0.02%)</title><rect x="51.0139%" y="725" width="0.0231%" height="15" fill="rgb(219,87,51)" fg:x="50719" fg:w="23"/><text x="51.2639%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="51.0139%" y="709" width="0.0231%" height="15" fill="rgb(211,7,35)" fg:x="50719" fg:w="23"/><text x="51.2639%" y="719.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_copy (1,171 samples, 1.18%)</title><rect x="49.8612%" y="773" width="1.1778%" height="15" fill="rgb(232,77,2)" fg:x="49573" fg:w="1171"/><text x="50.1112%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_borrow (1,171 samples, 1.18%)</title><rect x="49.8612%" y="757" width="1.1778%" height="15" fill="rgb(249,94,25)" fg:x="49573" fg:w="1171"/><text x="50.1112%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (1,167 samples, 1.17%)</title><rect x="49.8652%" y="741" width="1.1738%" height="15" fill="rgb(215,112,2)" fg:x="49577" fg:w="1167"/><text x="50.1152%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (26 samples, 0.03%)</title><rect x="51.0521%" y="741" width="0.0262%" height="15" fill="rgb(226,115,48)" fg:x="50757" fg:w="26"/><text x="51.3021%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="51.0621%" y="725" width="0.0161%" height="15" fill="rgb(249,196,10)" fg:x="50767" fg:w="16"/><text x="51.3121%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="51.0642%" y="709" width="0.0141%" height="15" fill="rgb(237,109,14)" fg:x="50769" fg:w="14"/><text x="51.3142%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="51.0642%" y="693" width="0.0141%" height="15" fill="rgb(217,103,53)" fg:x="50769" fg:w="14"/><text x="51.3142%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="51.0983%" y="693" width="0.0101%" height="15" fill="rgb(244,137,9)" fg:x="50803" fg:w="10"/><text x="51.3483%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (10 samples, 0.01%)</title><rect x="51.0983%" y="677" width="0.0101%" height="15" fill="rgb(227,201,3)" fg:x="50803" fg:w="10"/><text x="51.3483%" y="687.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="51.0903%" y="725" width="0.0201%" height="15" fill="rgb(243,94,6)" fg:x="50795" fg:w="20"/><text x="51.3403%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="51.0923%" y="709" width="0.0181%" height="15" fill="rgb(235,118,5)" fg:x="50797" fg:w="18"/><text x="51.3423%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (10 samples, 0.01%)</title><rect x="51.1175%" y="661" width="0.0101%" height="15" fill="rgb(247,10,30)" fg:x="50822" fg:w="10"/><text x="51.3675%" y="671.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.02%)</title><rect x="51.1104%" y="725" width="0.0181%" height="15" fill="rgb(205,26,28)" fg:x="50815" fg:w="18"/><text x="51.3604%" y="735.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (18 samples, 0.02%)</title><rect x="51.1104%" y="709" width="0.0181%" height="15" fill="rgb(206,99,35)" fg:x="50815" fg:w="18"/><text x="51.3604%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (16 samples, 0.02%)</title><rect x="51.1124%" y="693" width="0.0161%" height="15" fill="rgb(238,130,40)" fg:x="50817" fg:w="16"/><text x="51.3624%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (14 samples, 0.01%)</title><rect x="51.1144%" y="677" width="0.0141%" height="15" fill="rgb(224,126,31)" fg:x="50819" fg:w="14"/><text x="51.3644%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="51.1305%" y="693" width="0.0131%" height="15" fill="rgb(254,105,17)" fg:x="50835" fg:w="13"/><text x="51.3805%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="51.1315%" y="677" width="0.0121%" height="15" fill="rgb(216,87,36)" fg:x="50836" fg:w="12"/><text x="51.3815%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="51.1285%" y="725" width="0.0171%" height="15" fill="rgb(240,21,12)" fg:x="50833" fg:w="17"/><text x="51.3785%" y="735.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="51.1305%" y="709" width="0.0151%" height="15" fill="rgb(245,192,34)" fg:x="50835" fg:w="15"/><text x="51.3805%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (18 samples, 0.02%)</title><rect x="51.1527%" y="629" width="0.0181%" height="15" fill="rgb(226,100,49)" fg:x="50857" fg:w="18"/><text x="51.4027%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="51.1456%" y="693" width="0.0282%" height="15" fill="rgb(245,188,27)" fg:x="50850" fg:w="28"/><text x="51.3956%" y="703.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="51.1486%" y="677" width="0.0251%" height="15" fill="rgb(212,170,8)" fg:x="50853" fg:w="25"/><text x="51.3986%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="51.1496%" y="661" width="0.0241%" height="15" fill="rgb(217,113,29)" fg:x="50854" fg:w="24"/><text x="51.3996%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.02%)</title><rect x="51.1496%" y="645" width="0.0241%" height="15" fill="rgb(237,30,3)" fg:x="50854" fg:w="24"/><text x="51.3996%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="51.1456%" y="725" width="0.0292%" height="15" fill="rgb(227,19,28)" fg:x="50850" fg:w="29"/><text x="51.3956%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="51.1456%" y="709" width="0.0292%" height="15" fill="rgb(239,172,45)" fg:x="50850" fg:w="29"/><text x="51.3956%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="51.1929%" y="565" width="0.0101%" height="15" fill="rgb(254,55,39)" fg:x="50897" fg:w="10"/><text x="51.4429%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.01%)</title><rect x="51.1929%" y="549" width="0.0101%" height="15" fill="rgb(249,208,12)" fg:x="50897" fg:w="10"/><text x="51.4429%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.01%)</title><rect x="51.1929%" y="581" width="0.0131%" height="15" fill="rgb(240,52,13)" fg:x="50897" fg:w="13"/><text x="51.4429%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (18 samples, 0.02%)</title><rect x="51.1909%" y="613" width="0.0181%" height="15" fill="rgb(252,149,13)" fg:x="50895" fg:w="18"/><text x="51.4409%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="51.1919%" y="597" width="0.0171%" height="15" fill="rgb(232,81,48)" fg:x="50896" fg:w="17"/><text x="51.4419%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (26 samples, 0.03%)</title><rect x="51.1889%" y="629" width="0.0262%" height="15" fill="rgb(222,144,2)" fg:x="50893" fg:w="26"/><text x="51.4389%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (34 samples, 0.03%)</title><rect x="51.1848%" y="709" width="0.0342%" height="15" fill="rgb(216,81,32)" fg:x="50889" fg:w="34"/><text x="51.4348%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (34 samples, 0.03%)</title><rect x="51.1848%" y="693" width="0.0342%" height="15" fill="rgb(244,78,51)" fg:x="50889" fg:w="34"/><text x="51.4348%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (32 samples, 0.03%)</title><rect x="51.1869%" y="677" width="0.0322%" height="15" fill="rgb(217,66,21)" fg:x="50891" fg:w="32"/><text x="51.4369%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (32 samples, 0.03%)</title><rect x="51.1869%" y="661" width="0.0322%" height="15" fill="rgb(247,101,42)" fg:x="50891" fg:w="32"/><text x="51.4369%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (30 samples, 0.03%)</title><rect x="51.1889%" y="645" width="0.0302%" height="15" fill="rgb(227,81,39)" fg:x="50893" fg:w="30"/><text x="51.4389%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (65 samples, 0.07%)</title><rect x="51.1808%" y="725" width="0.0654%" height="15" fill="rgb(220,223,44)" fg:x="50885" fg:w="65"/><text x="51.4308%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.03%)</title><rect x="51.2201%" y="709" width="0.0262%" height="15" fill="rgb(205,218,2)" fg:x="50924" fg:w="26"/><text x="51.4701%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.02%)</title><rect x="51.2241%" y="693" width="0.0221%" height="15" fill="rgb(212,207,28)" fg:x="50928" fg:w="22"/><text x="51.4741%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.02%)</title><rect x="51.2241%" y="677" width="0.0221%" height="15" fill="rgb(224,12,41)" fg:x="50928" fg:w="22"/><text x="51.4741%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="51.2522%" y="709" width="0.0101%" height="15" fill="rgb(216,118,12)" fg:x="50956" fg:w="10"/><text x="51.5022%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="51.2764%" y="661" width="0.0111%" height="15" fill="rgb(252,97,46)" fg:x="50980" fg:w="11"/><text x="51.5264%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (44 samples, 0.04%)</title><rect x="51.2633%" y="709" width="0.0443%" height="15" fill="rgb(244,206,19)" fg:x="50967" fg:w="44"/><text x="51.5133%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (36 samples, 0.04%)</title><rect x="51.2713%" y="693" width="0.0362%" height="15" fill="rgb(231,84,31)" fg:x="50975" fg:w="36"/><text x="51.5213%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (34 samples, 0.03%)</title><rect x="51.2734%" y="677" width="0.0342%" height="15" fill="rgb(244,133,0)" fg:x="50977" fg:w="34"/><text x="51.5234%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (62 samples, 0.06%)</title><rect x="51.2462%" y="725" width="0.0624%" height="15" fill="rgb(223,15,50)" fg:x="50950" fg:w="62"/><text x="51.4962%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.01%)</title><rect x="51.3206%" y="597" width="0.0111%" height="15" fill="rgb(250,118,49)" fg:x="51024" fg:w="11"/><text x="51.5706%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.01%)</title><rect x="51.3206%" y="581" width="0.0111%" height="15" fill="rgb(248,25,38)" fg:x="51024" fg:w="11"/><text x="51.5706%" y="591.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (12 samples, 0.01%)</title><rect x="51.3206%" y="613" width="0.0121%" height="15" fill="rgb(215,70,14)" fg:x="51024" fg:w="12"/><text x="51.5706%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (16 samples, 0.02%)</title><rect x="51.3186%" y="693" width="0.0161%" height="15" fill="rgb(215,28,15)" fg:x="51022" fg:w="16"/><text x="51.5686%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (16 samples, 0.02%)</title><rect x="51.3186%" y="677" width="0.0161%" height="15" fill="rgb(243,6,28)" fg:x="51022" fg:w="16"/><text x="51.5686%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.02%)</title><rect x="51.3196%" y="661" width="0.0151%" height="15" fill="rgb(222,130,1)" fg:x="51023" fg:w="15"/><text x="51.5696%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (15 samples, 0.02%)</title><rect x="51.3196%" y="645" width="0.0151%" height="15" fill="rgb(236,166,44)" fg:x="51023" fg:w="15"/><text x="51.5696%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (14 samples, 0.01%)</title><rect x="51.3206%" y="629" width="0.0141%" height="15" fill="rgb(221,108,14)" fg:x="51024" fg:w="14"/><text x="51.5706%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (33 samples, 0.03%)</title><rect x="51.3136%" y="709" width="0.0332%" height="15" fill="rgb(252,3,45)" fg:x="51017" fg:w="33"/><text x="51.5636%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="51.3347%" y="693" width="0.0121%" height="15" fill="rgb(237,68,30)" fg:x="51038" fg:w="12"/><text x="51.5847%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="51.3367%" y="677" width="0.0101%" height="15" fill="rgb(211,79,22)" fg:x="51040" fg:w="10"/><text x="51.5867%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="51.3367%" y="661" width="0.0101%" height="15" fill="rgb(252,185,21)" fg:x="51040" fg:w="10"/><text x="51.5867%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.01%)</title><rect x="51.3629%" y="645" width="0.0101%" height="15" fill="rgb(225,189,26)" fg:x="51066" fg:w="10"/><text x="51.6129%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (68 samples, 0.07%)</title><rect x="51.3086%" y="725" width="0.0684%" height="15" fill="rgb(241,30,40)" fg:x="51012" fg:w="68"/><text x="51.5586%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (30 samples, 0.03%)</title><rect x="51.3468%" y="709" width="0.0302%" height="15" fill="rgb(235,215,44)" fg:x="51050" fg:w="30"/><text x="51.5968%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.03%)</title><rect x="51.3488%" y="693" width="0.0282%" height="15" fill="rgb(205,8,29)" fg:x="51052" fg:w="28"/><text x="51.5988%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (24 samples, 0.02%)</title><rect x="51.3528%" y="677" width="0.0241%" height="15" fill="rgb(241,137,42)" fg:x="51056" fg:w="24"/><text x="51.6028%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (21 samples, 0.02%)</title><rect x="51.3558%" y="661" width="0.0211%" height="15" fill="rgb(237,155,2)" fg:x="51059" fg:w="21"/><text x="51.6058%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (48 samples, 0.05%)</title><rect x="51.3800%" y="725" width="0.0483%" height="15" fill="rgb(245,29,42)" fg:x="51083" fg:w="48"/><text x="51.6300%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (46 samples, 0.05%)</title><rect x="51.3820%" y="709" width="0.0463%" height="15" fill="rgb(234,101,35)" fg:x="51085" fg:w="46"/><text x="51.6320%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (44 samples, 0.04%)</title><rect x="51.3840%" y="693" width="0.0443%" height="15" fill="rgb(228,64,37)" fg:x="51087" fg:w="44"/><text x="51.6340%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (39 samples, 0.04%)</title><rect x="51.3890%" y="677" width="0.0392%" height="15" fill="rgb(217,214,36)" fg:x="51092" fg:w="39"/><text x="51.6390%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (35 samples, 0.04%)</title><rect x="51.3931%" y="661" width="0.0352%" height="15" fill="rgb(243,70,3)" fg:x="51096" fg:w="35"/><text x="51.6431%" y="671.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (11 samples, 0.01%)</title><rect x="51.4172%" y="645" width="0.0111%" height="15" fill="rgb(253,158,52)" fg:x="51120" fg:w="11"/><text x="51.6672%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (353 samples, 0.36%)</title><rect x="51.0782%" y="741" width="0.3551%" height="15" fill="rgb(234,111,54)" fg:x="50783" fg:w="353"/><text x="51.3282%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::all_immutable (20 samples, 0.02%)</title><rect x="51.4333%" y="741" width="0.0201%" height="15" fill="rgb(217,70,32)" fg:x="51136" fg:w="20"/><text x="51.6833%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (14 samples, 0.01%)</title><rect x="51.4393%" y="725" width="0.0141%" height="15" fill="rgb(234,18,33)" fg:x="51142" fg:w="14"/><text x="51.6893%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (11 samples, 0.01%)</title><rect x="51.4625%" y="741" width="0.0111%" height="15" fill="rgb(234,12,49)" fg:x="51165" fg:w="11"/><text x="51.7125%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="51.4625%" y="725" width="0.0111%" height="15" fill="rgb(236,10,21)" fg:x="51165" fg:w="11"/><text x="51.7125%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.01%)</title><rect x="51.4635%" y="709" width="0.0101%" height="15" fill="rgb(248,182,45)" fg:x="51166" fg:w="10"/><text x="51.7135%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="51.4755%" y="709" width="0.0111%" height="15" fill="rgb(217,95,36)" fg:x="51178" fg:w="11"/><text x="51.7255%" y="719.50"></text></g><g><title>core::mem::take (10 samples, 0.01%)</title><rect x="51.4765%" y="693" width="0.0101%" height="15" fill="rgb(212,110,31)" fg:x="51179" fg:w="10"/><text x="51.7265%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="51.4886%" y="661" width="0.0111%" height="15" fill="rgb(206,32,53)" fg:x="51191" fg:w="11"/><text x="51.7386%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (22 samples, 0.02%)</title><rect x="51.5007%" y="613" width="0.0221%" height="15" fill="rgb(246,141,37)" fg:x="51203" fg:w="22"/><text x="51.7507%" y="623.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="51.5127%" y="597" width="0.0101%" height="15" fill="rgb(219,16,7)" fg:x="51215" fg:w="10"/><text x="51.7627%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (23 samples, 0.02%)</title><rect x="51.5007%" y="629" width="0.0231%" height="15" fill="rgb(230,205,45)" fg:x="51203" fg:w="23"/><text x="51.7507%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (38 samples, 0.04%)</title><rect x="51.4876%" y="677" width="0.0382%" height="15" fill="rgb(231,43,49)" fg:x="51190" fg:w="38"/><text x="51.7376%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (26 samples, 0.03%)</title><rect x="51.4997%" y="661" width="0.0262%" height="15" fill="rgb(212,106,34)" fg:x="51202" fg:w="26"/><text x="51.7497%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (26 samples, 0.03%)</title><rect x="51.4997%" y="645" width="0.0262%" height="15" fill="rgb(206,83,17)" fg:x="51202" fg:w="26"/><text x="51.7497%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="51.5349%" y="565" width="0.0111%" height="15" fill="rgb(244,154,49)" fg:x="51237" fg:w="11"/><text x="51.7849%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (13 samples, 0.01%)</title><rect x="51.5459%" y="533" width="0.0131%" height="15" fill="rgb(244,149,49)" fg:x="51248" fg:w="13"/><text x="51.7959%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (13 samples, 0.01%)</title><rect x="51.5459%" y="517" width="0.0131%" height="15" fill="rgb(227,134,18)" fg:x="51248" fg:w="13"/><text x="51.7959%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (28 samples, 0.03%)</title><rect x="51.5339%" y="581" width="0.0282%" height="15" fill="rgb(237,116,36)" fg:x="51236" fg:w="28"/><text x="51.7839%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (16 samples, 0.02%)</title><rect x="51.5459%" y="565" width="0.0161%" height="15" fill="rgb(205,129,40)" fg:x="51248" fg:w="16"/><text x="51.7959%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (16 samples, 0.02%)</title><rect x="51.5459%" y="549" width="0.0161%" height="15" fill="rgb(236,178,4)" fg:x="51248" fg:w="16"/><text x="51.7959%" y="559.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_mutably_borrowed (521 samples, 0.52%)</title><rect x="51.0390%" y="773" width="0.5240%" height="15" fill="rgb(251,76,53)" fg:x="50744" fg:w="521"/><text x="51.2890%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_mutable_borrows (516 samples, 0.52%)</title><rect x="51.0440%" y="757" width="0.5190%" height="15" fill="rgb(242,92,40)" fg:x="50749" fg:w="516"/><text x="51.2940%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (89 samples, 0.09%)</title><rect x="51.4735%" y="741" width="0.0895%" height="15" fill="rgb(209,45,30)" fg:x="51176" fg:w="89"/><text x="51.7235%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.09%)</title><rect x="51.4735%" y="725" width="0.0895%" height="15" fill="rgb(218,157,36)" fg:x="51176" fg:w="89"/><text x="51.7235%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (76 samples, 0.08%)</title><rect x="51.4866%" y="709" width="0.0764%" height="15" fill="rgb(222,186,16)" fg:x="51189" fg:w="76"/><text x="51.7366%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.08%)</title><rect x="51.4866%" y="693" width="0.0764%" height="15" fill="rgb(254,72,35)" fg:x="51189" fg:w="76"/><text x="51.7366%" y="703.50"></text></g><g><title>core::mem::drop (37 samples, 0.04%)</title><rect x="51.5258%" y="677" width="0.0372%" height="15" fill="rgb(224,25,35)" fg:x="51228" fg:w="37"/><text x="51.7758%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;)&gt; (37 samples, 0.04%)</title><rect x="51.5258%" y="661" width="0.0372%" height="15" fill="rgb(206,135,52)" fg:x="51228" fg:w="37"/><text x="51.7758%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (37 samples, 0.04%)</title><rect x="51.5258%" y="645" width="0.0372%" height="15" fill="rgb(229,174,47)" fg:x="51228" fg:w="37"/><text x="51.7758%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="51.5258%" y="629" width="0.0372%" height="15" fill="rgb(242,184,21)" fg:x="51228" fg:w="37"/><text x="51.7758%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (31 samples, 0.03%)</title><rect x="51.5319%" y="613" width="0.0312%" height="15" fill="rgb(213,22,45)" fg:x="51234" fg:w="31"/><text x="51.7819%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="51.5319%" y="597" width="0.0312%" height="15" fill="rgb(237,81,54)" fg:x="51234" fg:w="31"/><text x="51.7819%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (19 samples, 0.02%)</title><rect x="51.5661%" y="725" width="0.0191%" height="15" fill="rgb(248,177,18)" fg:x="51268" fg:w="19"/><text x="51.8161%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="51.5711%" y="709" width="0.0141%" height="15" fill="rgb(254,31,16)" fg:x="51273" fg:w="14"/><text x="51.8211%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="51.5741%" y="693" width="0.0111%" height="15" fill="rgb(235,20,31)" fg:x="51276" fg:w="11"/><text x="51.8241%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="51.5741%" y="677" width="0.0111%" height="15" fill="rgb(240,56,43)" fg:x="51276" fg:w="11"/><text x="51.8241%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="51.5962%" y="677" width="0.0171%" height="15" fill="rgb(237,197,51)" fg:x="51298" fg:w="17"/><text x="51.8462%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (49 samples, 0.05%)</title><rect x="51.5650%" y="741" width="0.0493%" height="15" fill="rgb(241,162,44)" fg:x="51267" fg:w="49"/><text x="51.8150%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (29 samples, 0.03%)</title><rect x="51.5852%" y="725" width="0.0292%" height="15" fill="rgb(224,23,20)" fg:x="51287" fg:w="29"/><text x="51.8352%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.03%)</title><rect x="51.5862%" y="709" width="0.0282%" height="15" fill="rgb(250,109,34)" fg:x="51288" fg:w="28"/><text x="51.8362%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (23 samples, 0.02%)</title><rect x="51.5912%" y="693" width="0.0231%" height="15" fill="rgb(214,175,50)" fg:x="51293" fg:w="23"/><text x="51.8412%" y="703.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new_ref (56 samples, 0.06%)</title><rect x="51.5630%" y="773" width="0.0563%" height="15" fill="rgb(213,182,5)" fg:x="51265" fg:w="56"/><text x="51.8130%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (56 samples, 0.06%)</title><rect x="51.5630%" y="757" width="0.0563%" height="15" fill="rgb(209,199,19)" fg:x="51265" fg:w="56"/><text x="51.8130%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::copy_loc (1,905 samples, 1.92%)</title><rect x="49.7043%" y="789" width="1.9161%" height="15" fill="rgb(236,224,42)" fg:x="49417" fg:w="1905"/><text x="49.9543%" y="799.50">b..</text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (21 samples, 0.02%)</title><rect x="51.6314%" y="709" width="0.0211%" height="15" fill="rgb(246,226,29)" fg:x="51333" fg:w="21"/><text x="51.8814%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (20 samples, 0.02%)</title><rect x="51.6324%" y="693" width="0.0201%" height="15" fill="rgb(227,223,11)" fg:x="51334" fg:w="20"/><text x="51.8824%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.02%)</title><rect x="51.6324%" y="677" width="0.0201%" height="15" fill="rgb(219,7,51)" fg:x="51334" fg:w="20"/><text x="51.8824%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (15 samples, 0.02%)</title><rect x="51.6375%" y="661" width="0.0151%" height="15" fill="rgb(245,167,10)" fg:x="51339" fg:w="15"/><text x="51.8875%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (15 samples, 0.02%)</title><rect x="51.6375%" y="645" width="0.0151%" height="15" fill="rgb(237,224,16)" fg:x="51339" fg:w="15"/><text x="51.8875%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (13 samples, 0.01%)</title><rect x="51.6395%" y="629" width="0.0131%" height="15" fill="rgb(226,132,13)" fg:x="51341" fg:w="13"/><text x="51.8895%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="51.6405%" y="613" width="0.0121%" height="15" fill="rgb(214,140,3)" fg:x="51342" fg:w="12"/><text x="51.8905%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11 samples, 0.01%)</title><rect x="51.6415%" y="597" width="0.0111%" height="15" fill="rgb(221,177,4)" fg:x="51343" fg:w="11"/><text x="51.8915%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (11 samples, 0.01%)</title><rect x="51.6415%" y="581" width="0.0111%" height="15" fill="rgb(238,139,3)" fg:x="51343" fg:w="11"/><text x="51.8915%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (11 samples, 0.01%)</title><rect x="51.6415%" y="565" width="0.0111%" height="15" fill="rgb(216,17,39)" fg:x="51343" fg:w="11"/><text x="51.8915%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (29 samples, 0.03%)</title><rect x="51.6526%" y="709" width="0.0292%" height="15" fill="rgb(238,120,9)" fg:x="51354" fg:w="29"/><text x="51.9026%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (28 samples, 0.03%)</title><rect x="51.6536%" y="693" width="0.0282%" height="15" fill="rgb(244,92,53)" fg:x="51355" fg:w="28"/><text x="51.9036%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (28 samples, 0.03%)</title><rect x="51.6536%" y="677" width="0.0282%" height="15" fill="rgb(224,148,33)" fg:x="51355" fg:w="28"/><text x="51.9036%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (21 samples, 0.02%)</title><rect x="51.6606%" y="661" width="0.0211%" height="15" fill="rgb(243,6,36)" fg:x="51362" fg:w="21"/><text x="51.9106%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (21 samples, 0.02%)</title><rect x="51.6606%" y="645" width="0.0211%" height="15" fill="rgb(230,102,11)" fg:x="51362" fg:w="21"/><text x="51.9106%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.01%)</title><rect x="51.6676%" y="629" width="0.0141%" height="15" fill="rgb(234,148,36)" fg:x="51369" fg:w="14"/><text x="51.9176%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.01%)</title><rect x="51.6676%" y="613" width="0.0141%" height="15" fill="rgb(251,153,25)" fg:x="51369" fg:w="14"/><text x="51.9176%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_copy (72 samples, 0.07%)</title><rect x="51.6204%" y="773" width="0.0724%" height="15" fill="rgb(215,129,8)" fg:x="51322" fg:w="72"/><text x="51.8704%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_strong_borrow (72 samples, 0.07%)</title><rect x="51.6204%" y="757" width="0.0724%" height="15" fill="rgb(224,128,35)" fg:x="51322" fg:w="72"/><text x="51.8704%" y="767.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::factor (72 samples, 0.07%)</title><rect x="51.6204%" y="741" width="0.0724%" height="15" fill="rgb(237,56,52)" fg:x="51322" fg:w="72"/><text x="51.8704%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (61 samples, 0.06%)</title><rect x="51.6314%" y="725" width="0.0614%" height="15" fill="rgb(234,213,19)" fg:x="51333" fg:w="61"/><text x="51.8814%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (11 samples, 0.01%)</title><rect x="51.6817%" y="709" width="0.0111%" height="15" fill="rgb(252,82,23)" fg:x="51383" fg:w="11"/><text x="51.9317%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.01%)</title><rect x="51.6827%" y="693" width="0.0101%" height="15" fill="rgb(254,201,21)" fg:x="51384" fg:w="10"/><text x="51.9327%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="51.6827%" y="677" width="0.0101%" height="15" fill="rgb(250,186,11)" fg:x="51384" fg:w="10"/><text x="51.9327%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (10 samples, 0.01%)</title><rect x="51.7119%" y="725" width="0.0101%" height="15" fill="rgb(211,174,5)" fg:x="51413" fg:w="10"/><text x="51.9619%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (13 samples, 0.01%)</title><rect x="51.7119%" y="741" width="0.0131%" height="15" fill="rgb(214,121,10)" fg:x="51413" fg:w="13"/><text x="51.9619%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (27 samples, 0.03%)</title><rect x="51.7290%" y="725" width="0.0272%" height="15" fill="rgb(241,66,2)" fg:x="51430" fg:w="27"/><text x="51.9790%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.03%)</title><rect x="51.7290%" y="709" width="0.0272%" height="15" fill="rgb(220,167,19)" fg:x="51430" fg:w="27"/><text x="51.9790%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.03%)</title><rect x="51.7290%" y="693" width="0.0272%" height="15" fill="rgb(231,54,50)" fg:x="51430" fg:w="27"/><text x="51.9790%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (22 samples, 0.02%)</title><rect x="51.7340%" y="677" width="0.0221%" height="15" fill="rgb(239,217,53)" fg:x="51435" fg:w="22"/><text x="51.9840%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (22 samples, 0.02%)</title><rect x="51.7340%" y="661" width="0.0221%" height="15" fill="rgb(248,8,0)" fg:x="51435" fg:w="22"/><text x="51.9840%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.02%)</title><rect x="51.7380%" y="645" width="0.0181%" height="15" fill="rgb(229,118,37)" fg:x="51439" fg:w="18"/><text x="51.9880%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="51.7391%" y="629" width="0.0171%" height="15" fill="rgb(253,223,43)" fg:x="51440" fg:w="17"/><text x="51.9891%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11 samples, 0.01%)</title><rect x="51.7451%" y="613" width="0.0111%" height="15" fill="rgb(211,77,36)" fg:x="51446" fg:w="11"/><text x="51.9951%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (10 samples, 0.01%)</title><rect x="51.7461%" y="597" width="0.0101%" height="15" fill="rgb(219,3,53)" fg:x="51447" fg:w="10"/><text x="51.9961%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (10 samples, 0.01%)</title><rect x="51.7461%" y="581" width="0.0101%" height="15" fill="rgb(244,45,42)" fg:x="51447" fg:w="10"/><text x="51.9961%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (13 samples, 0.01%)</title><rect x="51.7562%" y="725" width="0.0131%" height="15" fill="rgb(225,95,27)" fg:x="51457" fg:w="13"/><text x="52.0062%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.01%)</title><rect x="51.7572%" y="709" width="0.0121%" height="15" fill="rgb(207,74,8)" fg:x="51458" fg:w="12"/><text x="52.0072%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="51.7572%" y="693" width="0.0121%" height="15" fill="rgb(243,63,36)" fg:x="51458" fg:w="12"/><text x="52.0072%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11 samples, 0.01%)</title><rect x="51.7582%" y="677" width="0.0111%" height="15" fill="rgb(211,180,12)" fg:x="51459" fg:w="11"/><text x="52.0082%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (11 samples, 0.01%)</title><rect x="51.7582%" y="661" width="0.0111%" height="15" fill="rgb(254,166,49)" fg:x="51459" fg:w="11"/><text x="52.0082%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (47 samples, 0.05%)</title><rect x="51.7290%" y="741" width="0.0473%" height="15" fill="rgb(205,19,0)" fg:x="51430" fg:w="47"/><text x="51.9790%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (12 samples, 0.01%)</title><rect x="51.7773%" y="725" width="0.0121%" height="15" fill="rgb(224,172,32)" fg:x="51478" fg:w="12"/><text x="52.0273%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (19 samples, 0.02%)</title><rect x="51.7763%" y="741" width="0.0191%" height="15" fill="rgb(254,136,30)" fg:x="51477" fg:w="19"/><text x="52.0263%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::freeze_ref (185 samples, 0.19%)</title><rect x="51.6204%" y="789" width="0.1861%" height="15" fill="rgb(246,19,35)" fg:x="51322" fg:w="185"/><text x="51.8704%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (105 samples, 0.11%)</title><rect x="51.7008%" y="773" width="0.1056%" height="15" fill="rgb(219,24,36)" fg:x="51402" fg:w="105"/><text x="51.9508%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (105 samples, 0.11%)</title><rect x="51.7008%" y="757" width="0.1056%" height="15" fill="rgb(251,55,1)" fg:x="51402" fg:w="105"/><text x="51.9508%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (10 samples, 0.01%)</title><rect x="51.8678%" y="693" width="0.0101%" height="15" fill="rgb(218,117,39)" fg:x="51568" fg:w="10"/><text x="52.1178%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (19 samples, 0.02%)</title><rect x="51.9654%" y="661" width="0.0191%" height="15" fill="rgb(248,169,11)" fg:x="51665" fg:w="19"/><text x="52.2154%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="51.9704%" y="645" width="0.0141%" height="15" fill="rgb(244,40,44)" fg:x="51670" fg:w="14"/><text x="52.2204%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (18 samples, 0.02%)</title><rect x="51.9885%" y="661" width="0.0181%" height="15" fill="rgb(234,62,37)" fg:x="51688" fg:w="18"/><text x="52.2385%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (12 samples, 0.01%)</title><rect x="51.9945%" y="645" width="0.0121%" height="15" fill="rgb(207,117,42)" fg:x="51694" fg:w="12"/><text x="52.2445%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (12 samples, 0.01%)</title><rect x="51.9945%" y="629" width="0.0121%" height="15" fill="rgb(213,43,2)" fg:x="51694" fg:w="12"/><text x="52.2445%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (12 samples, 0.01%)</title><rect x="51.9945%" y="613" width="0.0121%" height="15" fill="rgb(244,202,51)" fg:x="51694" fg:w="12"/><text x="52.2445%" y="623.50"></text></g><g><title>core::intrinsics::copy (10 samples, 0.01%)</title><rect x="52.0167%" y="645" width="0.0101%" height="15" fill="rgb(253,174,46)" fg:x="51716" fg:w="10"/><text x="52.2667%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (24 samples, 0.02%)</title><rect x="52.0267%" y="645" width="0.0241%" height="15" fill="rgb(251,23,1)" fg:x="51726" fg:w="24"/><text x="52.2767%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (22 samples, 0.02%)</title><rect x="52.0287%" y="629" width="0.0221%" height="15" fill="rgb(253,26,1)" fg:x="51728" fg:w="22"/><text x="52.2787%" y="639.50"></text></g><g><title>core::ptr::read (21 samples, 0.02%)</title><rect x="52.0297%" y="613" width="0.0211%" height="15" fill="rgb(216,89,31)" fg:x="51729" fg:w="21"/><text x="52.2797%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.02%)</title><rect x="52.0358%" y="597" width="0.0151%" height="15" fill="rgb(209,109,5)" fg:x="51735" fg:w="15"/><text x="52.2858%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="52.0398%" y="581" width="0.0111%" height="15" fill="rgb(229,63,13)" fg:x="51739" fg:w="11"/><text x="52.2898%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="52.0509%" y="645" width="0.0101%" height="15" fill="rgb(238,137,54)" fg:x="51750" fg:w="10"/><text x="52.3009%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (119 samples, 0.12%)</title><rect x="51.9442%" y="677" width="0.1197%" height="15" fill="rgb(228,1,9)" fg:x="51644" fg:w="119"/><text x="52.1942%" y="687.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (57 samples, 0.06%)</title><rect x="52.0066%" y="661" width="0.0573%" height="15" fill="rgb(249,120,48)" fg:x="51706" fg:w="57"/><text x="52.2566%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (18 samples, 0.02%)</title><rect x="52.0649%" y="677" width="0.0181%" height="15" fill="rgb(209,72,36)" fg:x="51764" fg:w="18"/><text x="52.3149%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (20 samples, 0.02%)</title><rect x="52.0951%" y="661" width="0.0201%" height="15" fill="rgb(247,98,49)" fg:x="51794" fg:w="20"/><text x="52.3451%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (277 samples, 0.28%)</title><rect x="51.8437%" y="741" width="0.2786%" height="15" fill="rgb(233,75,36)" fg:x="51544" fg:w="277"/><text x="52.0937%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (272 samples, 0.27%)</title><rect x="51.8487%" y="725" width="0.2736%" height="15" fill="rgb(225,14,24)" fg:x="51549" fg:w="272"/><text x="52.0987%" y="735.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (262 samples, 0.26%)</title><rect x="51.8587%" y="709" width="0.2635%" height="15" fill="rgb(237,193,20)" fg:x="51559" fg:w="262"/><text x="52.1087%" y="719.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (236 samples, 0.24%)</title><rect x="51.8849%" y="693" width="0.2374%" height="15" fill="rgb(239,122,19)" fg:x="51585" fg:w="236"/><text x="52.1349%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (33 samples, 0.03%)</title><rect x="52.0891%" y="677" width="0.0332%" height="15" fill="rgb(231,220,10)" fg:x="51788" fg:w="33"/><text x="52.3391%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="52.1595%" y="693" width="0.0392%" height="15" fill="rgb(220,66,15)" fg:x="51858" fg:w="39"/><text x="52.4095%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="52.1756%" y="677" width="0.0231%" height="15" fill="rgb(215,171,52)" fg:x="51874" fg:w="23"/><text x="52.4256%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (10 samples, 0.01%)</title><rect x="52.1887%" y="661" width="0.0101%" height="15" fill="rgb(241,169,50)" fg:x="51887" fg:w="10"/><text x="52.4387%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (33 samples, 0.03%)</title><rect x="52.1997%" y="693" width="0.0332%" height="15" fill="rgb(236,189,0)" fg:x="51898" fg:w="33"/><text x="52.4497%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (18 samples, 0.02%)</title><rect x="52.2148%" y="677" width="0.0181%" height="15" fill="rgb(217,147,20)" fg:x="51913" fg:w="18"/><text x="52.4648%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="52.2188%" y="661" width="0.0141%" height="15" fill="rgb(206,188,39)" fg:x="51917" fg:w="14"/><text x="52.4688%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="52.2208%" y="645" width="0.0121%" height="15" fill="rgb(227,118,25)" fg:x="51919" fg:w="12"/><text x="52.4708%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (116 samples, 0.12%)</title><rect x="52.1273%" y="741" width="0.1167%" height="15" fill="rgb(248,171,40)" fg:x="51826" fg:w="116"/><text x="52.3773%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (109 samples, 0.11%)</title><rect x="52.1343%" y="725" width="0.1096%" height="15" fill="rgb(251,90,54)" fg:x="51833" fg:w="109"/><text x="52.3843%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (102 samples, 0.10%)</title><rect x="52.1414%" y="709" width="0.1026%" height="15" fill="rgb(234,11,46)" fg:x="51840" fg:w="102"/><text x="52.3914%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (426 samples, 0.43%)</title><rect x="51.8175%" y="757" width="0.4285%" height="15" fill="rgb(229,134,13)" fg:x="51518" fg:w="426"/><text x="52.0675%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (433 samples, 0.44%)</title><rect x="51.8165%" y="773" width="0.4355%" height="15" fill="rgb(223,129,3)" fg:x="51517" fg:w="433"/><text x="52.0665%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (26 samples, 0.03%)</title><rect x="52.2671%" y="741" width="0.0262%" height="15" fill="rgb(221,124,13)" fg:x="51965" fg:w="26"/><text x="52.5171%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.02%)</title><rect x="52.2762%" y="725" width="0.0171%" height="15" fill="rgb(234,3,18)" fg:x="51974" fg:w="17"/><text x="52.5262%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="52.2802%" y="709" width="0.0131%" height="15" fill="rgb(249,199,20)" fg:x="51978" fg:w="13"/><text x="52.5302%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="52.2822%" y="693" width="0.0111%" height="15" fill="rgb(224,134,6)" fg:x="51980" fg:w="11"/><text x="52.5322%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (13 samples, 0.01%)</title><rect x="52.3104%" y="693" width="0.0131%" height="15" fill="rgb(254,83,26)" fg:x="52008" fg:w="13"/><text x="52.5604%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (12 samples, 0.01%)</title><rect x="52.3114%" y="677" width="0.0121%" height="15" fill="rgb(217,88,9)" fg:x="52009" fg:w="12"/><text x="52.5614%" y="687.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="52.3063%" y="725" width="0.0191%" height="15" fill="rgb(225,73,2)" fg:x="52004" fg:w="19"/><text x="52.5563%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="52.3073%" y="709" width="0.0181%" height="15" fill="rgb(226,44,39)" fg:x="52005" fg:w="18"/><text x="52.5573%" y="719.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="52.3254%" y="725" width="0.0111%" height="15" fill="rgb(228,53,17)" fg:x="52023" fg:w="11"/><text x="52.5754%" y="735.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (11 samples, 0.01%)</title><rect x="52.3254%" y="709" width="0.0111%" height="15" fill="rgb(212,27,27)" fg:x="52023" fg:w="11"/><text x="52.5754%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.01%)</title><rect x="52.3254%" y="693" width="0.0111%" height="15" fill="rgb(241,50,6)" fg:x="52023" fg:w="11"/><text x="52.5754%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (10 samples, 0.01%)</title><rect x="52.3375%" y="693" width="0.0101%" height="15" fill="rgb(225,28,51)" fg:x="52035" fg:w="10"/><text x="52.5875%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="52.3375%" y="677" width="0.0101%" height="15" fill="rgb(215,33,16)" fg:x="52035" fg:w="10"/><text x="52.5875%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="52.3365%" y="725" width="0.0121%" height="15" fill="rgb(243,40,39)" fg:x="52034" fg:w="12"/><text x="52.5865%" y="735.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (11 samples, 0.01%)</title><rect x="52.3375%" y="709" width="0.0111%" height="15" fill="rgb(225,11,42)" fg:x="52035" fg:w="11"/><text x="52.5875%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="52.3526%" y="629" width="0.0101%" height="15" fill="rgb(241,220,38)" fg:x="52050" fg:w="10"/><text x="52.6026%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="52.3496%" y="661" width="0.0151%" height="15" fill="rgb(244,52,35)" fg:x="52047" fg:w="15"/><text x="52.5996%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="52.3516%" y="645" width="0.0131%" height="15" fill="rgb(246,42,46)" fg:x="52049" fg:w="13"/><text x="52.6016%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="52.3496%" y="693" width="0.0171%" height="15" fill="rgb(205,184,13)" fg:x="52047" fg:w="17"/><text x="52.5996%" y="703.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="52.3496%" y="677" width="0.0171%" height="15" fill="rgb(209,48,36)" fg:x="52047" fg:w="17"/><text x="52.5996%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="52.3496%" y="709" width="0.0191%" height="15" fill="rgb(244,34,51)" fg:x="52047" fg:w="19"/><text x="52.5996%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="52.3486%" y="725" width="0.0211%" height="15" fill="rgb(221,107,33)" fg:x="52046" fg:w="21"/><text x="52.5986%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="52.3798%" y="581" width="0.0101%" height="15" fill="rgb(224,203,12)" fg:x="52077" fg:w="10"/><text x="52.6298%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.01%)</title><rect x="52.3787%" y="613" width="0.0121%" height="15" fill="rgb(230,215,18)" fg:x="52076" fg:w="12"/><text x="52.6287%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="52.3787%" y="597" width="0.0121%" height="15" fill="rgb(206,185,35)" fg:x="52076" fg:w="12"/><text x="52.6287%" y="607.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (17 samples, 0.02%)</title><rect x="52.3787%" y="629" width="0.0171%" height="15" fill="rgb(228,140,34)" fg:x="52076" fg:w="17"/><text x="52.6287%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (23 samples, 0.02%)</title><rect x="52.3757%" y="709" width="0.0231%" height="15" fill="rgb(208,93,13)" fg:x="52073" fg:w="23"/><text x="52.6257%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (23 samples, 0.02%)</title><rect x="52.3757%" y="693" width="0.0231%" height="15" fill="rgb(221,193,39)" fg:x="52073" fg:w="23"/><text x="52.6257%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (21 samples, 0.02%)</title><rect x="52.3777%" y="677" width="0.0211%" height="15" fill="rgb(241,132,34)" fg:x="52075" fg:w="21"/><text x="52.6277%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (21 samples, 0.02%)</title><rect x="52.3777%" y="661" width="0.0211%" height="15" fill="rgb(221,141,10)" fg:x="52075" fg:w="21"/><text x="52.6277%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (21 samples, 0.02%)</title><rect x="52.3777%" y="645" width="0.0211%" height="15" fill="rgb(226,90,31)" fg:x="52075" fg:w="21"/><text x="52.6277%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (40 samples, 0.04%)</title><rect x="52.3737%" y="725" width="0.0402%" height="15" fill="rgb(243,75,5)" fg:x="52071" fg:w="40"/><text x="52.6237%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="52.3999%" y="709" width="0.0141%" height="15" fill="rgb(227,156,21)" fg:x="52097" fg:w="14"/><text x="52.6499%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="52.3999%" y="693" width="0.0141%" height="15" fill="rgb(250,195,8)" fg:x="52097" fg:w="14"/><text x="52.6499%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="52.4029%" y="677" width="0.0111%" height="15" fill="rgb(220,134,5)" fg:x="52100" fg:w="11"/><text x="52.6529%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="52.4250%" y="709" width="0.0111%" height="15" fill="rgb(246,106,34)" fg:x="52122" fg:w="11"/><text x="52.6750%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (11 samples, 0.01%)</title><rect x="52.4582%" y="661" width="0.0111%" height="15" fill="rgb(205,1,4)" fg:x="52155" fg:w="11"/><text x="52.7082%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (43 samples, 0.04%)</title><rect x="52.4381%" y="709" width="0.0432%" height="15" fill="rgb(224,151,29)" fg:x="52135" fg:w="43"/><text x="52.6881%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (41 samples, 0.04%)</title><rect x="52.4401%" y="693" width="0.0412%" height="15" fill="rgb(251,196,0)" fg:x="52137" fg:w="41"/><text x="52.6901%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (39 samples, 0.04%)</title><rect x="52.4421%" y="677" width="0.0392%" height="15" fill="rgb(212,127,0)" fg:x="52139" fg:w="39"/><text x="52.6921%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="52.4703%" y="661" width="0.0111%" height="15" fill="rgb(236,71,53)" fg:x="52167" fg:w="11"/><text x="52.7203%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (69 samples, 0.07%)</title><rect x="52.4140%" y="725" width="0.0694%" height="15" fill="rgb(227,99,0)" fg:x="52111" fg:w="69"/><text x="52.6640%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="52.4864%" y="565" width="0.0101%" height="15" fill="rgb(239,89,21)" fg:x="52183" fg:w="10"/><text x="52.7364%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (12 samples, 0.01%)</title><rect x="52.4864%" y="597" width="0.0121%" height="15" fill="rgb(243,122,19)" fg:x="52183" fg:w="12"/><text x="52.7364%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="52.4864%" y="581" width="0.0121%" height="15" fill="rgb(229,192,45)" fg:x="52183" fg:w="12"/><text x="52.7364%" y="591.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (15 samples, 0.02%)</title><rect x="52.4854%" y="613" width="0.0151%" height="15" fill="rgb(235,165,35)" fg:x="52182" fg:w="15"/><text x="52.7354%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (18 samples, 0.02%)</title><rect x="52.4854%" y="693" width="0.0181%" height="15" fill="rgb(253,202,0)" fg:x="52182" fg:w="18"/><text x="52.7354%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (18 samples, 0.02%)</title><rect x="52.4854%" y="677" width="0.0181%" height="15" fill="rgb(235,51,20)" fg:x="52182" fg:w="18"/><text x="52.7354%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="52.4854%" y="661" width="0.0181%" height="15" fill="rgb(218,95,46)" fg:x="52182" fg:w="18"/><text x="52.7354%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (18 samples, 0.02%)</title><rect x="52.4854%" y="645" width="0.0181%" height="15" fill="rgb(212,81,10)" fg:x="52182" fg:w="18"/><text x="52.7354%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (18 samples, 0.02%)</title><rect x="52.4854%" y="629" width="0.0181%" height="15" fill="rgb(240,59,0)" fg:x="52182" fg:w="18"/><text x="52.7354%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (27 samples, 0.03%)</title><rect x="52.4844%" y="709" width="0.0272%" height="15" fill="rgb(212,191,42)" fg:x="52181" fg:w="27"/><text x="52.7344%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (19 samples, 0.02%)</title><rect x="52.5145%" y="661" width="0.0191%" height="15" fill="rgb(233,140,3)" fg:x="52211" fg:w="19"/><text x="52.7645%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (20 samples, 0.02%)</title><rect x="52.5145%" y="677" width="0.0201%" height="15" fill="rgb(215,69,23)" fg:x="52211" fg:w="20"/><text x="52.7645%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (52 samples, 0.05%)</title><rect x="52.4834%" y="725" width="0.0523%" height="15" fill="rgb(240,202,20)" fg:x="52180" fg:w="52"/><text x="52.7334%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (24 samples, 0.02%)</title><rect x="52.5115%" y="709" width="0.0241%" height="15" fill="rgb(209,146,50)" fg:x="52208" fg:w="24"/><text x="52.7615%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (22 samples, 0.02%)</title><rect x="52.5135%" y="693" width="0.0221%" height="15" fill="rgb(253,102,54)" fg:x="52210" fg:w="22"/><text x="52.7635%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (19 samples, 0.02%)</title><rect x="52.5487%" y="661" width="0.0191%" height="15" fill="rgb(250,173,47)" fg:x="52245" fg:w="19"/><text x="52.7987%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V&gt;::or_insert_with (33 samples, 0.03%)</title><rect x="52.5357%" y="725" width="0.0332%" height="15" fill="rgb(232,142,7)" fg:x="52232" fg:w="33"/><text x="52.7857%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (26 samples, 0.03%)</title><rect x="52.5427%" y="709" width="0.0262%" height="15" fill="rgb(230,157,47)" fg:x="52239" fg:w="26"/><text x="52.7927%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.02%)</title><rect x="52.5457%" y="693" width="0.0231%" height="15" fill="rgb(214,177,35)" fg:x="52242" fg:w="23"/><text x="52.7957%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (22 samples, 0.02%)</title><rect x="52.5467%" y="677" width="0.0221%" height="15" fill="rgb(234,119,46)" fg:x="52243" fg:w="22"/><text x="52.7967%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (279 samples, 0.28%)</title><rect x="52.2953%" y="741" width="0.2806%" height="15" fill="rgb(241,180,50)" fg:x="51993" fg:w="279"/><text x="52.5453%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (10 samples, 0.01%)</title><rect x="52.6030%" y="661" width="0.0101%" height="15" fill="rgb(221,54,25)" fg:x="52299" fg:w="10"/><text x="52.8530%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (13 samples, 0.01%)</title><rect x="52.6131%" y="613" width="0.0131%" height="15" fill="rgb(209,157,44)" fg:x="52309" fg:w="13"/><text x="52.8631%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (15 samples, 0.02%)</title><rect x="52.6131%" y="661" width="0.0151%" height="15" fill="rgb(246,115,41)" fg:x="52309" fg:w="15"/><text x="52.8631%" y="671.50"></text></g><g><title>alloc::collections::btree::mem::replace (15 samples, 0.02%)</title><rect x="52.6131%" y="645" width="0.0151%" height="15" fill="rgb(229,86,1)" fg:x="52309" fg:w="15"/><text x="52.8631%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (15 samples, 0.02%)</title><rect x="52.6131%" y="629" width="0.0151%" height="15" fill="rgb(240,108,53)" fg:x="52309" fg:w="15"/><text x="52.8631%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (27 samples, 0.03%)</title><rect x="52.6020%" y="677" width="0.0272%" height="15" fill="rgb(227,134,2)" fg:x="52298" fg:w="27"/><text x="52.8520%" y="687.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="52.6292%" y="677" width="0.0221%" height="15" fill="rgb(213,129,25)" fg:x="52325" fg:w="22"/><text x="52.8792%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;)&gt; (22 samples, 0.02%)</title><rect x="52.6292%" y="661" width="0.0221%" height="15" fill="rgb(226,35,21)" fg:x="52325" fg:w="22"/><text x="52.8792%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (22 samples, 0.02%)</title><rect x="52.6292%" y="645" width="0.0221%" height="15" fill="rgb(208,129,26)" fg:x="52325" fg:w="22"/><text x="52.8792%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="52.6292%" y="629" width="0.0221%" height="15" fill="rgb(224,83,6)" fg:x="52325" fg:w="22"/><text x="52.8792%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (16 samples, 0.02%)</title><rect x="52.6352%" y="613" width="0.0161%" height="15" fill="rgb(227,52,39)" fg:x="52331" fg:w="16"/><text x="52.8852%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="52.6352%" y="597" width="0.0161%" height="15" fill="rgb(241,30,17)" fg:x="52331" fg:w="16"/><text x="52.8852%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (16 samples, 0.02%)</title><rect x="52.6352%" y="581" width="0.0161%" height="15" fill="rgb(246,186,42)" fg:x="52331" fg:w="16"/><text x="52.8852%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="52.6413%" y="565" width="0.0101%" height="15" fill="rgb(221,169,15)" fg:x="52337" fg:w="10"/><text x="52.8913%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="52.6413%" y="549" width="0.0101%" height="15" fill="rgb(235,108,21)" fg:x="52337" fg:w="10"/><text x="52.8913%" y="559.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_local_borrowed (399 samples, 0.40%)</title><rect x="52.2520%" y="773" width="0.4013%" height="15" fill="rgb(219,148,30)" fg:x="51950" fg:w="399"/><text x="52.5020%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (395 samples, 0.40%)</title><rect x="52.2560%" y="757" width="0.3973%" height="15" fill="rgb(220,109,5)" fg:x="51954" fg:w="395"/><text x="52.5060%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (64 samples, 0.06%)</title><rect x="52.5890%" y="741" width="0.0644%" height="15" fill="rgb(213,203,48)" fg:x="52285" fg:w="64"/><text x="52.8390%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="52.5890%" y="725" width="0.0644%" height="15" fill="rgb(244,71,33)" fg:x="52285" fg:w="64"/><text x="52.8390%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="52.6020%" y="709" width="0.0513%" height="15" fill="rgb(209,23,2)" fg:x="52298" fg:w="51"/><text x="52.8520%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="52.6020%" y="693" width="0.0513%" height="15" fill="rgb(219,97,7)" fg:x="52298" fg:w="51"/><text x="52.8520%" y="703.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::move_loc (845 samples, 0.85%)</title><rect x="51.8064%" y="789" width="0.8499%" height="15" fill="rgb(216,161,23)" fg:x="51507" fg:w="845"/><text x="52.0564%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (13 samples, 0.01%)</title><rect x="52.6584%" y="741" width="0.0131%" height="15" fill="rgb(207,45,42)" fg:x="52354" fg:w="13"/><text x="52.9084%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_readable (15 samples, 0.02%)</title><rect x="52.6574%" y="773" width="0.0151%" height="15" fill="rgb(241,61,4)" fg:x="52353" fg:w="15"/><text x="52.9074%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (14 samples, 0.01%)</title><rect x="52.6584%" y="757" width="0.0141%" height="15" fill="rgb(236,170,1)" fg:x="52354" fg:w="14"/><text x="52.9084%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.01%)</title><rect x="52.6855%" y="709" width="0.0111%" height="15" fill="rgb(239,72,5)" fg:x="52381" fg:w="11"/><text x="52.9355%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="52.6785%" y="741" width="0.0201%" height="15" fill="rgb(214,13,50)" fg:x="52374" fg:w="20"/><text x="52.9285%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.02%)</title><rect x="52.6805%" y="725" width="0.0181%" height="15" fill="rgb(224,88,9)" fg:x="52376" fg:w="18"/><text x="52.9305%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="52.7006%" y="709" width="0.0101%" height="15" fill="rgb(238,192,34)" fg:x="52396" fg:w="10"/><text x="52.9506%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="52.7006%" y="693" width="0.0101%" height="15" fill="rgb(217,203,50)" fg:x="52396" fg:w="10"/><text x="52.9506%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="52.6996%" y="725" width="0.0121%" height="15" fill="rgb(241,123,32)" fg:x="52395" fg:w="12"/><text x="52.9496%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="52.6986%" y="741" width="0.0141%" height="15" fill="rgb(248,151,39)" fg:x="52394" fg:w="14"/><text x="52.9486%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (10 samples, 0.01%)</title><rect x="52.7439%" y="629" width="0.0101%" height="15" fill="rgb(208,89,6)" fg:x="52439" fg:w="10"/><text x="52.9939%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (23 samples, 0.02%)</title><rect x="52.7368%" y="645" width="0.0231%" height="15" fill="rgb(254,43,26)" fg:x="52432" fg:w="23"/><text x="52.9868%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (41 samples, 0.04%)</title><rect x="52.7237%" y="709" width="0.0412%" height="15" fill="rgb(216,158,13)" fg:x="52419" fg:w="41"/><text x="52.9737%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (41 samples, 0.04%)</title><rect x="52.7237%" y="693" width="0.0412%" height="15" fill="rgb(212,47,37)" fg:x="52419" fg:w="41"/><text x="52.9737%" y="703.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (39 samples, 0.04%)</title><rect x="52.7258%" y="677" width="0.0392%" height="15" fill="rgb(254,16,10)" fg:x="52421" fg:w="39"/><text x="52.9758%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (34 samples, 0.03%)</title><rect x="52.7308%" y="661" width="0.0342%" height="15" fill="rgb(223,228,16)" fg:x="52426" fg:w="34"/><text x="52.9808%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (58 samples, 0.06%)</title><rect x="52.7217%" y="725" width="0.0583%" height="15" fill="rgb(249,108,50)" fg:x="52417" fg:w="58"/><text x="52.9717%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="52.7660%" y="709" width="0.0141%" height="15" fill="rgb(208,220,5)" fg:x="52461" fg:w="14"/><text x="53.0160%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="52.7670%" y="693" width="0.0131%" height="15" fill="rgb(217,89,48)" fg:x="52462" fg:w="13"/><text x="53.0170%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="52.7690%" y="677" width="0.0111%" height="15" fill="rgb(212,113,41)" fg:x="52464" fg:w="11"/><text x="53.0190%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (63 samples, 0.06%)</title><rect x="52.7217%" y="741" width="0.0634%" height="15" fill="rgb(231,127,5)" fg:x="52417" fg:w="63"/><text x="52.9717%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (13 samples, 0.01%)</title><rect x="52.8062%" y="613" width="0.0131%" height="15" fill="rgb(217,141,17)" fg:x="52501" fg:w="13"/><text x="53.0562%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="52.8022%" y="677" width="0.0181%" height="15" fill="rgb(245,125,54)" fg:x="52497" fg:w="18"/><text x="53.0522%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (18 samples, 0.02%)</title><rect x="52.8022%" y="661" width="0.0181%" height="15" fill="rgb(248,125,3)" fg:x="52497" fg:w="18"/><text x="53.0522%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="52.8032%" y="645" width="0.0171%" height="15" fill="rgb(236,119,51)" fg:x="52498" fg:w="17"/><text x="53.0532%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.02%)</title><rect x="52.8032%" y="629" width="0.0171%" height="15" fill="rgb(239,99,8)" fg:x="52498" fg:w="17"/><text x="53.0532%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (10 samples, 0.01%)</title><rect x="52.8304%" y="645" width="0.0101%" height="15" fill="rgb(224,228,4)" fg:x="52525" fg:w="10"/><text x="53.0804%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="52.8575%" y="613" width="0.0181%" height="15" fill="rgb(220,131,45)" fg:x="52552" fg:w="18"/><text x="53.1075%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="52.8575%" y="597" width="0.0181%" height="15" fill="rgb(215,62,5)" fg:x="52552" fg:w="18"/><text x="53.1075%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (26 samples, 0.03%)</title><rect x="52.8776%" y="549" width="0.0262%" height="15" fill="rgb(253,12,24)" fg:x="52572" fg:w="26"/><text x="53.1276%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.02%)</title><rect x="52.8887%" y="533" width="0.0151%" height="15" fill="rgb(248,120,50)" fg:x="52583" fg:w="15"/><text x="53.1387%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="52.8887%" y="517" width="0.0151%" height="15" fill="rgb(245,194,10)" fg:x="52583" fg:w="15"/><text x="53.1387%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="52.8907%" y="501" width="0.0131%" height="15" fill="rgb(241,149,38)" fg:x="52585" fg:w="13"/><text x="53.1407%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (28 samples, 0.03%)</title><rect x="52.8766%" y="565" width="0.0282%" height="15" fill="rgb(219,215,7)" fg:x="52571" fg:w="28"/><text x="53.1266%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (131 samples, 0.13%)</title><rect x="52.7881%" y="725" width="0.1318%" height="15" fill="rgb(208,120,31)" fg:x="52483" fg:w="131"/><text x="53.0381%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (122 samples, 0.12%)</title><rect x="52.7972%" y="709" width="0.1227%" height="15" fill="rgb(244,30,8)" fg:x="52492" fg:w="122"/><text x="53.0472%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (120 samples, 0.12%)</title><rect x="52.7992%" y="693" width="0.1207%" height="15" fill="rgb(238,35,44)" fg:x="52494" fg:w="120"/><text x="53.0492%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (98 samples, 0.10%)</title><rect x="52.8213%" y="677" width="0.0986%" height="15" fill="rgb(243,218,37)" fg:x="52516" fg:w="98"/><text x="53.0713%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (98 samples, 0.10%)</title><rect x="52.8213%" y="661" width="0.0986%" height="15" fill="rgb(218,169,10)" fg:x="52516" fg:w="98"/><text x="53.0713%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (79 samples, 0.08%)</title><rect x="52.8404%" y="645" width="0.0795%" height="15" fill="rgb(221,144,10)" fg:x="52535" fg:w="79"/><text x="53.0904%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (71 samples, 0.07%)</title><rect x="52.8485%" y="629" width="0.0714%" height="15" fill="rgb(226,41,38)" fg:x="52543" fg:w="71"/><text x="53.0985%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (44 samples, 0.04%)</title><rect x="52.8756%" y="613" width="0.0443%" height="15" fill="rgb(228,3,1)" fg:x="52570" fg:w="44"/><text x="53.1256%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (44 samples, 0.04%)</title><rect x="52.8756%" y="597" width="0.0443%" height="15" fill="rgb(209,129,12)" fg:x="52570" fg:w="44"/><text x="53.1256%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (43 samples, 0.04%)</title><rect x="52.8766%" y="581" width="0.0432%" height="15" fill="rgb(213,136,33)" fg:x="52571" fg:w="43"/><text x="53.1266%" y="591.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (13 samples, 0.01%)</title><rect x="52.9068%" y="565" width="0.0131%" height="15" fill="rgb(209,181,29)" fg:x="52601" fg:w="13"/><text x="53.1568%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (13 samples, 0.01%)</title><rect x="52.9068%" y="549" width="0.0131%" height="15" fill="rgb(234,173,18)" fg:x="52601" fg:w="13"/><text x="53.1568%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (13 samples, 0.01%)</title><rect x="52.9068%" y="533" width="0.0131%" height="15" fill="rgb(227,73,47)" fg:x="52601" fg:w="13"/><text x="53.1568%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="52.9269%" y="597" width="0.0101%" height="15" fill="rgb(234,9,34)" fg:x="52621" fg:w="10"/><text x="53.1769%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="52.9249%" y="677" width="0.0141%" height="15" fill="rgb(235,172,15)" fg:x="52619" fg:w="14"/><text x="53.1749%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="52.9249%" y="661" width="0.0141%" height="15" fill="rgb(245,61,2)" fg:x="52619" fg:w="14"/><text x="53.1749%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="52.9249%" y="645" width="0.0141%" height="15" fill="rgb(238,39,47)" fg:x="52619" fg:w="14"/><text x="53.1749%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="52.9249%" y="629" width="0.0141%" height="15" fill="rgb(234,37,24)" fg:x="52619" fg:w="14"/><text x="53.1749%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="52.9249%" y="613" width="0.0141%" height="15" fill="rgb(248,223,24)" fg:x="52619" fg:w="14"/><text x="53.1749%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (29 samples, 0.03%)</title><rect x="52.9722%" y="565" width="0.0292%" height="15" fill="rgb(223,12,15)" fg:x="52666" fg:w="29"/><text x="53.2222%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (24 samples, 0.02%)</title><rect x="52.9772%" y="549" width="0.0241%" height="15" fill="rgb(249,6,3)" fg:x="52671" fg:w="24"/><text x="53.2272%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (23 samples, 0.02%)</title><rect x="52.9782%" y="533" width="0.0231%" height="15" fill="rgb(237,105,33)" fg:x="52672" fg:w="23"/><text x="53.2282%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (21 samples, 0.02%)</title><rect x="52.9802%" y="517" width="0.0211%" height="15" fill="rgb(252,208,35)" fg:x="52674" fg:w="21"/><text x="53.2302%" y="527.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (83 samples, 0.08%)</title><rect x="52.9199%" y="725" width="0.0835%" height="15" fill="rgb(215,181,35)" fg:x="52614" fg:w="83"/><text x="53.1699%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (78 samples, 0.08%)</title><rect x="52.9249%" y="709" width="0.0785%" height="15" fill="rgb(246,212,3)" fg:x="52619" fg:w="78"/><text x="53.1749%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (78 samples, 0.08%)</title><rect x="52.9249%" y="693" width="0.0785%" height="15" fill="rgb(247,156,24)" fg:x="52619" fg:w="78"/><text x="53.1749%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (63 samples, 0.06%)</title><rect x="52.9400%" y="677" width="0.0634%" height="15" fill="rgb(248,9,31)" fg:x="52634" fg:w="63"/><text x="53.1900%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (63 samples, 0.06%)</title><rect x="52.9400%" y="661" width="0.0634%" height="15" fill="rgb(234,26,45)" fg:x="52634" fg:w="63"/><text x="53.1900%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (53 samples, 0.05%)</title><rect x="52.9501%" y="645" width="0.0533%" height="15" fill="rgb(249,11,32)" fg:x="52644" fg:w="53"/><text x="53.2001%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (49 samples, 0.05%)</title><rect x="52.9541%" y="629" width="0.0493%" height="15" fill="rgb(249,162,33)" fg:x="52648" fg:w="49"/><text x="53.2041%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (32 samples, 0.03%)</title><rect x="52.9712%" y="613" width="0.0322%" height="15" fill="rgb(232,4,32)" fg:x="52665" fg:w="32"/><text x="53.2212%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (32 samples, 0.03%)</title><rect x="52.9712%" y="597" width="0.0322%" height="15" fill="rgb(212,5,45)" fg:x="52665" fg:w="32"/><text x="53.2212%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (31 samples, 0.03%)</title><rect x="52.9722%" y="581" width="0.0312%" height="15" fill="rgb(227,95,13)" fg:x="52666" fg:w="31"/><text x="53.2222%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="53.0154%" y="677" width="0.0131%" height="15" fill="rgb(223,205,10)" fg:x="52709" fg:w="13"/><text x="53.2654%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="53.0164%" y="661" width="0.0121%" height="15" fill="rgb(222,178,8)" fg:x="52710" fg:w="12"/><text x="53.2664%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="53.0164%" y="645" width="0.0121%" height="15" fill="rgb(216,13,22)" fg:x="52710" fg:w="12"/><text x="53.2664%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (12 samples, 0.01%)</title><rect x="53.0164%" y="629" width="0.0121%" height="15" fill="rgb(240,167,12)" fg:x="52710" fg:w="12"/><text x="53.2664%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="53.0184%" y="613" width="0.0101%" height="15" fill="rgb(235,68,35)" fg:x="52712" fg:w="10"/><text x="53.2684%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="53.0426%" y="613" width="0.0101%" height="15" fill="rgb(253,40,27)" fg:x="52736" fg:w="10"/><text x="53.2926%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (273 samples, 0.27%)</title><rect x="52.7851%" y="741" width="0.2746%" height="15" fill="rgb(214,19,28)" fg:x="52480" fg:w="273"/><text x="53.0351%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (56 samples, 0.06%)</title><rect x="53.0034%" y="725" width="0.0563%" height="15" fill="rgb(210,167,45)" fg:x="52697" fg:w="56"/><text x="53.2534%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (48 samples, 0.05%)</title><rect x="53.0114%" y="709" width="0.0483%" height="15" fill="rgb(232,97,40)" fg:x="52705" fg:w="48"/><text x="53.2614%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.05%)</title><rect x="53.0124%" y="693" width="0.0473%" height="15" fill="rgb(250,35,23)" fg:x="52706" fg:w="47"/><text x="53.2624%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (30 samples, 0.03%)</title><rect x="53.0295%" y="677" width="0.0302%" height="15" fill="rgb(248,47,53)" fg:x="52723" fg:w="30"/><text x="53.2795%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (30 samples, 0.03%)</title><rect x="53.0295%" y="661" width="0.0302%" height="15" fill="rgb(226,58,50)" fg:x="52723" fg:w="30"/><text x="53.2795%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (21 samples, 0.02%)</title><rect x="53.0386%" y="645" width="0.0211%" height="15" fill="rgb(217,105,26)" fg:x="52732" fg:w="21"/><text x="53.2886%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="53.0416%" y="629" width="0.0181%" height="15" fill="rgb(208,64,1)" fg:x="52735" fg:w="18"/><text x="53.2916%" y="639.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::read_ref (424 samples, 0.43%)</title><rect x="52.6564%" y="789" width="0.4265%" height="15" fill="rgb(214,80,1)" fg:x="52352" fg:w="424"/><text x="52.9064%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (408 samples, 0.41%)</title><rect x="52.6724%" y="773" width="0.4104%" height="15" fill="rgb(206,175,26)" fg:x="52368" fg:w="408"/><text x="52.9224%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (408 samples, 0.41%)</title><rect x="52.6724%" y="757" width="0.4104%" height="15" fill="rgb(235,156,37)" fg:x="52368" fg:w="408"/><text x="52.9224%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="53.0939%" y="741" width="0.0171%" height="15" fill="rgb(213,100,9)" fg:x="52787" fg:w="17"/><text x="53.3439%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="53.0949%" y="725" width="0.0161%" height="15" fill="rgb(241,15,13)" fg:x="52788" fg:w="16"/><text x="53.3449%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="53.1120%" y="677" width="0.0121%" height="15" fill="rgb(205,97,43)" fg:x="52805" fg:w="12"/><text x="53.3620%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="53.1110%" y="725" width="0.0141%" height="15" fill="rgb(216,106,32)" fg:x="52804" fg:w="14"/><text x="53.3610%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (13 samples, 0.01%)</title><rect x="53.1120%" y="709" width="0.0131%" height="15" fill="rgb(226,200,8)" fg:x="52805" fg:w="13"/><text x="53.3620%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="53.1120%" y="693" width="0.0131%" height="15" fill="rgb(244,54,29)" fg:x="52805" fg:w="13"/><text x="53.3620%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="53.1110%" y="741" width="0.0161%" height="15" fill="rgb(252,169,12)" fg:x="52804" fg:w="16"/><text x="53.3610%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (24 samples, 0.02%)</title><rect x="53.1613%" y="645" width="0.0241%" height="15" fill="rgb(231,199,11)" fg:x="52854" fg:w="24"/><text x="53.4113%" y="655.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (10 samples, 0.01%)</title><rect x="53.1754%" y="629" width="0.0101%" height="15" fill="rgb(233,191,18)" fg:x="52868" fg:w="10"/><text x="53.4254%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (63 samples, 0.06%)</title><rect x="53.1371%" y="709" width="0.0634%" height="15" fill="rgb(215,83,47)" fg:x="52830" fg:w="63"/><text x="53.3871%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (62 samples, 0.06%)</title><rect x="53.1381%" y="693" width="0.0624%" height="15" fill="rgb(251,67,19)" fg:x="52831" fg:w="62"/><text x="53.3881%" y="703.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (59 samples, 0.06%)</title><rect x="53.1412%" y="677" width="0.0593%" height="15" fill="rgb(240,7,20)" fg:x="52834" fg:w="59"/><text x="53.3912%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (52 samples, 0.05%)</title><rect x="53.1482%" y="661" width="0.0523%" height="15" fill="rgb(210,150,26)" fg:x="52841" fg:w="52"/><text x="53.3982%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (80 samples, 0.08%)</title><rect x="53.1351%" y="725" width="0.0805%" height="15" fill="rgb(228,75,42)" fg:x="52828" fg:w="80"/><text x="53.3851%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.02%)</title><rect x="53.2005%" y="709" width="0.0151%" height="15" fill="rgb(237,134,48)" fg:x="52893" fg:w="15"/><text x="53.4505%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.01%)</title><rect x="53.2025%" y="693" width="0.0131%" height="15" fill="rgb(205,80,50)" fg:x="52895" fg:w="13"/><text x="53.4525%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="53.2035%" y="677" width="0.0121%" height="15" fill="rgb(217,74,48)" fg:x="52896" fg:w="12"/><text x="53.4535%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (85 samples, 0.09%)</title><rect x="53.1341%" y="741" width="0.0855%" height="15" fill="rgb(205,82,50)" fg:x="52827" fg:w="85"/><text x="53.3841%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="53.2307%" y="613" width="0.0121%" height="15" fill="rgb(228,1,33)" fg:x="52923" fg:w="12"/><text x="53.4807%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (15 samples, 0.02%)</title><rect x="53.2287%" y="645" width="0.0151%" height="15" fill="rgb(214,50,23)" fg:x="52921" fg:w="15"/><text x="53.4787%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="53.2297%" y="629" width="0.0141%" height="15" fill="rgb(210,62,9)" fg:x="52922" fg:w="14"/><text x="53.4797%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="53.2256%" y="677" width="0.0191%" height="15" fill="rgb(210,104,37)" fg:x="52918" fg:w="19"/><text x="53.4756%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (17 samples, 0.02%)</title><rect x="53.2277%" y="661" width="0.0171%" height="15" fill="rgb(232,104,43)" fg:x="52920" fg:w="17"/><text x="53.4777%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (81 samples, 0.08%)</title><rect x="53.2196%" y="725" width="0.0815%" height="15" fill="rgb(244,52,6)" fg:x="52912" fg:w="81"/><text x="53.4696%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (77 samples, 0.08%)</title><rect x="53.2236%" y="709" width="0.0774%" height="15" fill="rgb(211,174,52)" fg:x="52916" fg:w="77"/><text x="53.4736%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 0.08%)</title><rect x="53.2246%" y="693" width="0.0764%" height="15" fill="rgb(229,48,4)" fg:x="52917" fg:w="76"/><text x="53.4746%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (54 samples, 0.05%)</title><rect x="53.2468%" y="677" width="0.0543%" height="15" fill="rgb(205,155,16)" fg:x="52939" fg:w="54"/><text x="53.4968%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (51 samples, 0.05%)</title><rect x="53.2498%" y="661" width="0.0513%" height="15" fill="rgb(211,141,53)" fg:x="52942" fg:w="51"/><text x="53.4998%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (39 samples, 0.04%)</title><rect x="53.2619%" y="645" width="0.0392%" height="15" fill="rgb(240,148,11)" fg:x="52954" fg:w="39"/><text x="53.5119%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.04%)</title><rect x="53.2639%" y="629" width="0.0372%" height="15" fill="rgb(214,45,23)" fg:x="52956" fg:w="37"/><text x="53.5139%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (23 samples, 0.02%)</title><rect x="53.2779%" y="613" width="0.0231%" height="15" fill="rgb(248,74,26)" fg:x="52970" fg:w="23"/><text x="53.5279%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (22 samples, 0.02%)</title><rect x="53.2790%" y="597" width="0.0221%" height="15" fill="rgb(218,121,16)" fg:x="52971" fg:w="22"/><text x="53.5290%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (21 samples, 0.02%)</title><rect x="53.2800%" y="581" width="0.0211%" height="15" fill="rgb(218,10,47)" fg:x="52972" fg:w="21"/><text x="53.5300%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.01%)</title><rect x="53.3061%" y="677" width="0.0111%" height="15" fill="rgb(227,99,14)" fg:x="52998" fg:w="11"/><text x="53.5561%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.01%)</title><rect x="53.3061%" y="661" width="0.0111%" height="15" fill="rgb(229,83,46)" fg:x="52998" fg:w="11"/><text x="53.5561%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (16 samples, 0.02%)</title><rect x="53.3021%" y="709" width="0.0161%" height="15" fill="rgb(228,25,1)" fg:x="52994" fg:w="16"/><text x="53.5521%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (16 samples, 0.02%)</title><rect x="53.3021%" y="693" width="0.0161%" height="15" fill="rgb(252,190,15)" fg:x="52994" fg:w="16"/><text x="53.5521%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (21 samples, 0.02%)</title><rect x="53.3252%" y="597" width="0.0211%" height="15" fill="rgb(213,103,51)" fg:x="53017" fg:w="21"/><text x="53.5752%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (28 samples, 0.03%)</title><rect x="53.3232%" y="629" width="0.0282%" height="15" fill="rgb(220,38,44)" fg:x="53015" fg:w="28"/><text x="53.5732%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (27 samples, 0.03%)</title><rect x="53.3242%" y="613" width="0.0272%" height="15" fill="rgb(210,45,26)" fg:x="53016" fg:w="27"/><text x="53.5742%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="53.3212%" y="661" width="0.0312%" height="15" fill="rgb(205,95,48)" fg:x="53013" fg:w="31"/><text x="53.5712%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (29 samples, 0.03%)</title><rect x="53.3232%" y="645" width="0.0292%" height="15" fill="rgb(225,179,37)" fg:x="53015" fg:w="29"/><text x="53.5732%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="53.3212%" y="677" width="0.0322%" height="15" fill="rgb(230,209,3)" fg:x="53013" fg:w="32"/><text x="53.5712%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.01%)</title><rect x="53.3584%" y="645" width="0.0111%" height="15" fill="rgb(248,12,46)" fg:x="53050" fg:w="11"/><text x="53.6084%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (12 samples, 0.01%)</title><rect x="53.3695%" y="645" width="0.0121%" height="15" fill="rgb(234,18,0)" fg:x="53061" fg:w="12"/><text x="53.6195%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (11 samples, 0.01%)</title><rect x="53.3705%" y="629" width="0.0111%" height="15" fill="rgb(238,197,14)" fg:x="53062" fg:w="11"/><text x="53.6205%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (11 samples, 0.01%)</title><rect x="53.3896%" y="565" width="0.0111%" height="15" fill="rgb(251,162,48)" fg:x="53081" fg:w="11"/><text x="53.6396%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="53.3906%" y="549" width="0.0101%" height="15" fill="rgb(237,73,42)" fg:x="53082" fg:w="10"/><text x="53.6406%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="53.3896%" y="597" width="0.0121%" height="15" fill="rgb(211,108,8)" fg:x="53081" fg:w="12"/><text x="53.6396%" y="607.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="53.3896%" y="581" width="0.0121%" height="15" fill="rgb(213,45,22)" fg:x="53081" fg:w="12"/><text x="53.6396%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="53.3896%" y="613" width="0.0141%" height="15" fill="rgb(252,154,5)" fg:x="53081" fg:w="14"/><text x="53.6396%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="53.4097%" y="565" width="0.0141%" height="15" fill="rgb(221,79,52)" fg:x="53101" fg:w="14"/><text x="53.6597%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (12 samples, 0.01%)</title><rect x="53.4117%" y="549" width="0.0121%" height="15" fill="rgb(229,220,36)" fg:x="53103" fg:w="12"/><text x="53.6617%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="53.4137%" y="533" width="0.0101%" height="15" fill="rgb(211,17,16)" fg:x="53105" fg:w="10"/><text x="53.6637%" y="543.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (124 samples, 0.12%)</title><rect x="53.3011%" y="725" width="0.1247%" height="15" fill="rgb(222,55,31)" fg:x="52993" fg:w="124"/><text x="53.5511%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (107 samples, 0.11%)</title><rect x="53.3182%" y="709" width="0.1076%" height="15" fill="rgb(221,221,31)" fg:x="53010" fg:w="107"/><text x="53.5682%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106 samples, 0.11%)</title><rect x="53.3192%" y="693" width="0.1066%" height="15" fill="rgb(227,168,26)" fg:x="53011" fg:w="106"/><text x="53.5692%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (71 samples, 0.07%)</title><rect x="53.3544%" y="677" width="0.0714%" height="15" fill="rgb(224,139,9)" fg:x="53046" fg:w="71"/><text x="53.6044%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (68 samples, 0.07%)</title><rect x="53.3574%" y="661" width="0.0684%" height="15" fill="rgb(254,172,0)" fg:x="53049" fg:w="68"/><text x="53.6074%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (44 samples, 0.04%)</title><rect x="53.3815%" y="645" width="0.0443%" height="15" fill="rgb(235,203,1)" fg:x="53073" fg:w="44"/><text x="53.6315%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.04%)</title><rect x="53.3846%" y="629" width="0.0412%" height="15" fill="rgb(216,205,24)" fg:x="53076" fg:w="41"/><text x="53.6346%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.02%)</title><rect x="53.4097%" y="613" width="0.0161%" height="15" fill="rgb(233,24,6)" fg:x="53101" fg:w="16"/><text x="53.6597%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (16 samples, 0.02%)</title><rect x="53.4097%" y="597" width="0.0161%" height="15" fill="rgb(244,110,9)" fg:x="53101" fg:w="16"/><text x="53.6597%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (16 samples, 0.02%)</title><rect x="53.4097%" y="581" width="0.0161%" height="15" fill="rgb(239,222,42)" fg:x="53101" fg:w="16"/><text x="53.6597%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (12 samples, 0.01%)</title><rect x="53.4419%" y="613" width="0.0121%" height="15" fill="rgb(218,145,13)" fg:x="53133" fg:w="12"/><text x="53.6919%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (14 samples, 0.01%)</title><rect x="53.4409%" y="645" width="0.0141%" height="15" fill="rgb(207,69,11)" fg:x="53132" fg:w="14"/><text x="53.6909%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (14 samples, 0.01%)</title><rect x="53.4409%" y="629" width="0.0141%" height="15" fill="rgb(220,223,22)" fg:x="53132" fg:w="14"/><text x="53.6909%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="53.4389%" y="677" width="0.0171%" height="15" fill="rgb(245,102,5)" fg:x="53130" fg:w="17"/><text x="53.6889%" y="687.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (16 samples, 0.02%)</title><rect x="53.4399%" y="661" width="0.0161%" height="15" fill="rgb(211,148,2)" fg:x="53131" fg:w="16"/><text x="53.6899%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (265 samples, 0.27%)</title><rect x="53.2196%" y="741" width="0.2665%" height="15" fill="rgb(241,13,44)" fg:x="52912" fg:w="265"/><text x="53.4696%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (60 samples, 0.06%)</title><rect x="53.4258%" y="725" width="0.0603%" height="15" fill="rgb(219,137,21)" fg:x="53117" fg:w="60"/><text x="53.6758%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (51 samples, 0.05%)</title><rect x="53.4349%" y="709" width="0.0513%" height="15" fill="rgb(242,206,5)" fg:x="53126" fg:w="51"/><text x="53.6849%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.05%)</title><rect x="53.4359%" y="693" width="0.0503%" height="15" fill="rgb(217,114,22)" fg:x="53127" fg:w="50"/><text x="53.6859%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (29 samples, 0.03%)</title><rect x="53.4570%" y="677" width="0.0292%" height="15" fill="rgb(253,206,42)" fg:x="53148" fg:w="29"/><text x="53.7070%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (28 samples, 0.03%)</title><rect x="53.4580%" y="661" width="0.0282%" height="15" fill="rgb(236,102,18)" fg:x="53149" fg:w="28"/><text x="53.7080%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.01%)</title><rect x="53.4751%" y="645" width="0.0111%" height="15" fill="rgb(208,59,49)" fg:x="53166" fg:w="11"/><text x="53.7251%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release_value (430 samples, 0.43%)</title><rect x="53.0828%" y="789" width="0.4325%" height="15" fill="rgb(215,194,28)" fg:x="52776" fg:w="430"/><text x="53.3328%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (428 samples, 0.43%)</title><rect x="53.0848%" y="773" width="0.4305%" height="15" fill="rgb(243,207,11)" fg:x="52778" fg:w="428"/><text x="53.3348%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (428 samples, 0.43%)</title><rect x="53.0848%" y="757" width="0.4305%" height="15" fill="rgb(254,179,35)" fg:x="52778" fg:w="428"/><text x="53.3348%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (10 samples, 0.01%)</title><rect x="53.5425%" y="693" width="0.0101%" height="15" fill="rgb(235,97,3)" fg:x="53233" fg:w="10"/><text x="53.7925%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.01%)</title><rect x="53.5525%" y="693" width="0.0121%" height="15" fill="rgb(215,155,33)" fg:x="53243" fg:w="12"/><text x="53.8025%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="53.5545%" y="677" width="0.0101%" height="15" fill="rgb(223,128,12)" fg:x="53245" fg:w="10"/><text x="53.8045%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (35 samples, 0.04%)</title><rect x="53.5324%" y="709" width="0.0352%" height="15" fill="rgb(208,157,18)" fg:x="53223" fg:w="35"/><text x="53.7824%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (42 samples, 0.04%)</title><rect x="53.5314%" y="741" width="0.0422%" height="15" fill="rgb(249,70,54)" fg:x="53222" fg:w="42"/><text x="53.7814%" y="751.50"></text></g><g><title>alloc::collections::btree::mem::replace (42 samples, 0.04%)</title><rect x="53.5314%" y="725" width="0.0422%" height="15" fill="rgb(244,118,24)" fg:x="53222" fg:w="42"/><text x="53.7814%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.05%)</title><rect x="53.5224%" y="773" width="0.0523%" height="15" fill="rgb(211,54,0)" fg:x="53213" fg:w="52"/><text x="53.7724%" y="783.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (48 samples, 0.05%)</title><rect x="53.5264%" y="757" width="0.0483%" height="15" fill="rgb(245,137,45)" fg:x="53217" fg:w="48"/><text x="53.7764%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="53.5787%" y="773" width="0.0111%" height="15" fill="rgb(232,154,31)" fg:x="53269" fg:w="11"/><text x="53.8287%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="53.5897%" y="773" width="0.0121%" height="15" fill="rgb(253,6,39)" fg:x="53280" fg:w="12"/><text x="53.8397%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (11 samples, 0.01%)</title><rect x="53.5908%" y="757" width="0.0111%" height="15" fill="rgb(234,183,24)" fg:x="53281" fg:w="11"/><text x="53.8408%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (19 samples, 0.02%)</title><rect x="53.6028%" y="773" width="0.0191%" height="15" fill="rgb(252,84,40)" fg:x="53293" fg:w="19"/><text x="53.8528%" y="783.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (14 samples, 0.01%)</title><rect x="53.6079%" y="757" width="0.0141%" height="15" fill="rgb(224,65,2)" fg:x="53298" fg:w="14"/><text x="53.8579%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (12 samples, 0.01%)</title><rect x="53.6099%" y="741" width="0.0121%" height="15" fill="rgb(229,38,24)" fg:x="53300" fg:w="12"/><text x="53.8599%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (16 samples, 0.02%)</title><rect x="53.6410%" y="725" width="0.0161%" height="15" fill="rgb(218,131,50)" fg:x="53331" fg:w="16"/><text x="53.8910%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="53.6471%" y="709" width="0.0101%" height="15" fill="rgb(233,106,18)" fg:x="53337" fg:w="10"/><text x="53.8971%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="53.6471%" y="693" width="0.0101%" height="15" fill="rgb(220,216,11)" fg:x="53337" fg:w="10"/><text x="53.8971%" y="703.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (21 samples, 0.02%)</title><rect x="53.6370%" y="741" width="0.0211%" height="15" fill="rgb(251,100,45)" fg:x="53327" fg:w="21"/><text x="53.8870%" y="751.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_frame_safe_to_destroy (51 samples, 0.05%)</title><rect x="53.6239%" y="773" width="0.0513%" height="15" fill="rgb(235,143,32)" fg:x="53314" fg:w="51"/><text x="53.8739%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (50 samples, 0.05%)</title><rect x="53.6250%" y="757" width="0.0503%" height="15" fill="rgb(248,124,34)" fg:x="53315" fg:w="50"/><text x="53.8750%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::ret (179 samples, 0.18%)</title><rect x="53.5153%" y="789" width="0.1800%" height="15" fill="rgb(225,221,4)" fg:x="53206" fg:w="179"/><text x="53.7653%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;,bytecode_verifier::reference_safety::abstract_state::AbstractState::ret::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="53.6833%" y="773" width="0.0121%" height="15" fill="rgb(242,27,43)" fg:x="53373" fg:w="12"/><text x="53.9333%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (12 samples, 0.01%)</title><rect x="53.6833%" y="757" width="0.0121%" height="15" fill="rgb(227,54,8)" fg:x="53373" fg:w="12"/><text x="53.9333%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="53.6833%" y="741" width="0.0121%" height="15" fill="rgb(253,139,49)" fg:x="53373" fg:w="12"/><text x="53.9333%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,alloc::alloc::Global&gt;&gt; (10 samples, 0.01%)</title><rect x="53.6853%" y="725" width="0.0101%" height="15" fill="rgb(231,26,43)" fg:x="53375" fg:w="10"/><text x="53.9353%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="53.6853%" y="709" width="0.0101%" height="15" fill="rgb(207,121,39)" fg:x="53375" fg:w="10"/><text x="53.9353%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="53.7607%" y="693" width="0.0392%" height="15" fill="rgb(223,101,35)" fg:x="53450" fg:w="39"/><text x="54.0107%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="53.7758%" y="677" width="0.0241%" height="15" fill="rgb(232,87,23)" fg:x="53465" fg:w="24"/><text x="54.0258%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (23 samples, 0.02%)</title><rect x="53.8020%" y="693" width="0.0231%" height="15" fill="rgb(225,180,29)" fg:x="53491" fg:w="23"/><text x="54.0520%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="53.8130%" y="677" width="0.0121%" height="15" fill="rgb(225,25,17)" fg:x="53502" fg:w="12"/><text x="54.0630%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="53.8140%" y="661" width="0.0111%" height="15" fill="rgb(223,8,52)" fg:x="53503" fg:w="11"/><text x="54.0640%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (157 samples, 0.16%)</title><rect x="53.7044%" y="757" width="0.1579%" height="15" fill="rgb(246,42,21)" fg:x="53394" fg:w="157"/><text x="53.9544%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (139 samples, 0.14%)</title><rect x="53.7225%" y="741" width="0.1398%" height="15" fill="rgb(205,64,43)" fg:x="53412" fg:w="139"/><text x="53.9725%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (116 samples, 0.12%)</title><rect x="53.7456%" y="725" width="0.1167%" height="15" fill="rgb(221,160,13)" fg:x="53435" fg:w="116"/><text x="53.9956%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (112 samples, 0.11%)</title><rect x="53.7497%" y="709" width="0.1127%" height="15" fill="rgb(239,58,35)" fg:x="53439" fg:w="112"/><text x="53.9997%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (26 samples, 0.03%)</title><rect x="53.8362%" y="693" width="0.0262%" height="15" fill="rgb(251,26,40)" fg:x="53525" fg:w="26"/><text x="54.0862%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="53.8382%" y="677" width="0.0241%" height="15" fill="rgb(247,0,4)" fg:x="53527" fg:w="24"/><text x="54.0882%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (15 samples, 0.02%)</title><rect x="53.8975%" y="693" width="0.0151%" height="15" fill="rgb(218,130,10)" fg:x="53586" fg:w="15"/><text x="54.1475%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (11 samples, 0.01%)</title><rect x="53.9016%" y="677" width="0.0111%" height="15" fill="rgb(239,32,7)" fg:x="53590" fg:w="11"/><text x="54.1516%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (21 samples, 0.02%)</title><rect x="53.9136%" y="693" width="0.0211%" height="15" fill="rgb(210,192,24)" fg:x="53602" fg:w="21"/><text x="54.1636%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="53.9207%" y="677" width="0.0141%" height="15" fill="rgb(226,212,17)" fg:x="53609" fg:w="14"/><text x="54.1707%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (67 samples, 0.07%)</title><rect x="53.8895%" y="709" width="0.0674%" height="15" fill="rgb(219,201,28)" fg:x="53578" fg:w="67"/><text x="54.1395%" y="719.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (22 samples, 0.02%)</title><rect x="53.9347%" y="693" width="0.0221%" height="15" fill="rgb(235,207,41)" fg:x="53623" fg:w="22"/><text x="54.1847%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (102 samples, 0.10%)</title><rect x="53.8674%" y="741" width="0.1026%" height="15" fill="rgb(241,95,54)" fg:x="53556" fg:w="102"/><text x="54.1174%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (88 samples, 0.09%)</title><rect x="53.8814%" y="725" width="0.0885%" height="15" fill="rgb(248,12,23)" fg:x="53570" fg:w="88"/><text x="54.1314%" y="735.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::st_loc (278 samples, 0.28%)</title><rect x="53.6954%" y="789" width="0.2796%" height="15" fill="rgb(228,173,4)" fg:x="53385" fg:w="278"/><text x="53.9454%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (274 samples, 0.28%)</title><rect x="53.6994%" y="773" width="0.2756%" height="15" fill="rgb(254,99,5)" fg:x="53389" fg:w="274"/><text x="53.9494%" y="783.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (112 samples, 0.11%)</title><rect x="53.8623%" y="757" width="0.1127%" height="15" fill="rgb(212,184,17)" fg:x="53551" fg:w="112"/><text x="54.1123%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (12 samples, 0.01%)</title><rect x="53.9971%" y="741" width="0.0121%" height="15" fill="rgb(252,174,1)" fg:x="53685" fg:w="12"/><text x="54.2471%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (12 samples, 0.01%)</title><rect x="53.9971%" y="725" width="0.0121%" height="15" fill="rgb(241,118,51)" fg:x="53685" fg:w="12"/><text x="54.2471%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (18 samples, 0.02%)</title><rect x="54.0092%" y="725" width="0.0181%" height="15" fill="rgb(227,94,47)" fg:x="53697" fg:w="18"/><text x="54.2592%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.02%)</title><rect x="54.0092%" y="709" width="0.0181%" height="15" fill="rgb(229,104,2)" fg:x="53697" fg:w="18"/><text x="54.2592%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="54.0102%" y="693" width="0.0171%" height="15" fill="rgb(219,28,31)" fg:x="53698" fg:w="17"/><text x="54.2602%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.02%)</title><rect x="54.0112%" y="677" width="0.0161%" height="15" fill="rgb(233,109,36)" fg:x="53699" fg:w="16"/><text x="54.2612%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (15 samples, 0.02%)</title><rect x="54.0122%" y="661" width="0.0151%" height="15" fill="rgb(246,88,11)" fg:x="53700" fg:w="15"/><text x="54.2622%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.01%)</title><rect x="54.0172%" y="645" width="0.0101%" height="15" fill="rgb(209,212,17)" fg:x="53705" fg:w="10"/><text x="54.2672%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.01%)</title><rect x="54.0172%" y="629" width="0.0101%" height="15" fill="rgb(243,59,29)" fg:x="53705" fg:w="10"/><text x="54.2672%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (20 samples, 0.02%)</title><rect x="54.0273%" y="725" width="0.0201%" height="15" fill="rgb(244,205,48)" fg:x="53715" fg:w="20"/><text x="54.2773%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (17 samples, 0.02%)</title><rect x="54.0303%" y="709" width="0.0171%" height="15" fill="rgb(227,30,6)" fg:x="53718" fg:w="17"/><text x="54.2803%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="54.0303%" y="693" width="0.0171%" height="15" fill="rgb(220,205,48)" fg:x="53718" fg:w="17"/><text x="54.2803%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.01%)</title><rect x="54.0353%" y="677" width="0.0121%" height="15" fill="rgb(250,94,14)" fg:x="53723" fg:w="12"/><text x="54.2853%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (12 samples, 0.01%)</title><rect x="54.0353%" y="661" width="0.0121%" height="15" fill="rgb(216,119,42)" fg:x="53723" fg:w="12"/><text x="54.2853%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (55 samples, 0.06%)</title><rect x="54.0092%" y="741" width="0.0553%" height="15" fill="rgb(232,155,0)" fg:x="53697" fg:w="55"/><text x="54.2592%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (17 samples, 0.02%)</title><rect x="54.0474%" y="725" width="0.0171%" height="15" fill="rgb(212,24,32)" fg:x="53735" fg:w="17"/><text x="54.2974%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.02%)</title><rect x="54.0484%" y="709" width="0.0161%" height="15" fill="rgb(216,69,20)" fg:x="53736" fg:w="16"/><text x="54.2984%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.02%)</title><rect x="54.0484%" y="693" width="0.0161%" height="15" fill="rgb(229,73,31)" fg:x="53736" fg:w="16"/><text x="54.2984%" y="703.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::write_ref (88 samples, 0.09%)</title><rect x="53.9780%" y="789" width="0.0885%" height="15" fill="rgb(224,219,20)" fg:x="53666" fg:w="88"/><text x="54.2280%" y="799.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (82 samples, 0.08%)</title><rect x="53.9840%" y="773" width="0.0825%" height="15" fill="rgb(215,146,41)" fg:x="53672" fg:w="82"/><text x="54.2340%" y="783.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (82 samples, 0.08%)</title><rect x="53.9840%" y="757" width="0.0825%" height="15" fill="rgb(244,71,31)" fg:x="53672" fg:w="82"/><text x="54.2340%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.03%)</title><rect x="54.1067%" y="773" width="0.0251%" height="15" fill="rgb(224,24,11)" fg:x="53794" fg:w="25"/><text x="54.3567%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="54.1329%" y="757" width="0.0141%" height="15" fill="rgb(229,76,15)" fg:x="53820" fg:w="14"/><text x="54.3829%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="54.1319%" y="773" width="0.0231%" height="15" fill="rgb(209,93,2)" fg:x="53819" fg:w="23"/><text x="54.3819%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="54.1550%" y="773" width="0.0101%" height="15" fill="rgb(216,200,50)" fg:x="53842" fg:w="10"/><text x="54.4050%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="54.1651%" y="773" width="0.0101%" height="15" fill="rgb(211,67,34)" fg:x="53852" fg:w="10"/><text x="54.4151%" y="783.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (33 samples, 0.03%)</title><rect x="54.2264%" y="757" width="0.0332%" height="15" fill="rgb(225,87,47)" fg:x="53913" fg:w="33"/><text x="54.4764%" y="767.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (30 samples, 0.03%)</title><rect x="54.2294%" y="741" width="0.0302%" height="15" fill="rgb(217,185,16)" fg:x="53916" fg:w="30"/><text x="54.4794%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (28 samples, 0.03%)</title><rect x="54.2315%" y="725" width="0.0282%" height="15" fill="rgb(205,0,0)" fg:x="53918" fg:w="28"/><text x="54.4815%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (22 samples, 0.02%)</title><rect x="54.2375%" y="709" width="0.0221%" height="15" fill="rgb(207,116,45)" fg:x="53924" fg:w="22"/><text x="54.4875%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (21 samples, 0.02%)</title><rect x="54.2707%" y="709" width="0.0211%" height="15" fill="rgb(221,156,26)" fg:x="53957" fg:w="21"/><text x="54.5207%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::last_edge (10 samples, 0.01%)</title><rect x="54.2817%" y="693" width="0.0101%" height="15" fill="rgb(213,140,4)" fg:x="53968" fg:w="10"/><text x="54.5317%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (28 samples, 0.03%)</title><rect x="54.2677%" y="725" width="0.0282%" height="15" fill="rgb(231,224,15)" fg:x="53954" fg:w="28"/><text x="54.5177%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (59 samples, 0.06%)</title><rect x="54.2616%" y="741" width="0.0593%" height="15" fill="rgb(244,76,20)" fg:x="53948" fg:w="59"/><text x="54.5116%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.02%)</title><rect x="54.2988%" y="725" width="0.0221%" height="15" fill="rgb(238,117,7)" fg:x="53985" fg:w="22"/><text x="54.5488%" y="735.50"></text></g><g><title>core::mem::take (19 samples, 0.02%)</title><rect x="54.3019%" y="709" width="0.0191%" height="15" fill="rgb(235,1,10)" fg:x="53988" fg:w="19"/><text x="54.5519%" y="719.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="54.3049%" y="693" width="0.0161%" height="15" fill="rgb(216,165,6)" fg:x="53991" fg:w="16"/><text x="54.5549%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (61 samples, 0.06%)</title><rect x="54.2606%" y="757" width="0.0614%" height="15" fill="rgb(246,91,35)" fg:x="53947" fg:w="61"/><text x="54.5106%" y="767.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (11 samples, 0.01%)</title><rect x="54.3411%" y="661" width="0.0111%" height="15" fill="rgb(228,96,24)" fg:x="54027" fg:w="11"/><text x="54.5911%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="54.3632%" y="661" width="0.0131%" height="15" fill="rgb(254,217,53)" fg:x="54049" fg:w="13"/><text x="54.6132%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (48 samples, 0.05%)</title><rect x="54.3361%" y="677" width="0.0483%" height="15" fill="rgb(209,60,0)" fg:x="54022" fg:w="48"/><text x="54.5861%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (51 samples, 0.05%)</title><rect x="54.3361%" y="693" width="0.0513%" height="15" fill="rgb(250,93,26)" fg:x="54022" fg:w="51"/><text x="54.5861%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.07%)</title><rect x="54.3250%" y="741" width="0.0664%" height="15" fill="rgb(211,9,40)" fg:x="54011" fg:w="66"/><text x="54.5750%" y="751.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (61 samples, 0.06%)</title><rect x="54.3300%" y="725" width="0.0614%" height="15" fill="rgb(242,57,20)" fg:x="54016" fg:w="61"/><text x="54.5800%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::replace (61 samples, 0.06%)</title><rect x="54.3300%" y="709" width="0.0614%" height="15" fill="rgb(248,85,48)" fg:x="54016" fg:w="61"/><text x="54.5800%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.07%)</title><rect x="54.3220%" y="757" width="0.0724%" height="15" fill="rgb(212,117,2)" fg:x="54008" fg:w="72"/><text x="54.5720%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="54.3984%" y="725" width="0.0101%" height="15" fill="rgb(243,19,3)" fg:x="54084" fg:w="10"/><text x="54.6484%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="54.3944%" y="757" width="0.0181%" height="15" fill="rgb(232,217,24)" fg:x="54080" fg:w="18"/><text x="54.6444%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="54.3954%" y="741" width="0.0171%" height="15" fill="rgb(224,175,40)" fg:x="54081" fg:w="17"/><text x="54.6454%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.02%)</title><rect x="54.4145%" y="741" width="0.0171%" height="15" fill="rgb(212,162,32)" fg:x="54100" fg:w="17"/><text x="54.6645%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.03%)</title><rect x="54.4125%" y="757" width="0.0342%" height="15" fill="rgb(215,9,4)" fg:x="54098" fg:w="34"/><text x="54.6625%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts (15 samples, 0.02%)</title><rect x="54.4316%" y="741" width="0.0151%" height="15" fill="rgb(242,42,7)" fg:x="54117" fg:w="15"/><text x="54.6816%" y="751.50"></text></g><g><title>core::ptr::slice_from_raw_parts (11 samples, 0.01%)</title><rect x="54.4356%" y="725" width="0.0111%" height="15" fill="rgb(242,184,45)" fg:x="54121" fg:w="11"/><text x="54.6856%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="54.4628%" y="725" width="0.0302%" height="15" fill="rgb(228,111,51)" fg:x="54148" fg:w="30"/><text x="54.7128%" y="735.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.01%)</title><rect x="54.4819%" y="709" width="0.0111%" height="15" fill="rgb(236,147,17)" fg:x="54167" fg:w="11"/><text x="54.7319%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.06%)</title><rect x="54.4467%" y="757" width="0.0553%" height="15" fill="rgb(210,75,22)" fg:x="54132" fg:w="55"/><text x="54.6967%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (53 samples, 0.05%)</title><rect x="54.4487%" y="741" width="0.0533%" height="15" fill="rgb(217,159,45)" fg:x="54134" fg:w="53"/><text x="54.6987%" y="751.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="54.5312%" y="517" width="0.0121%" height="15" fill="rgb(245,165,53)" fg:x="54216" fg:w="12"/><text x="54.7812%" y="527.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="54.5302%" y="533" width="0.0141%" height="15" fill="rgb(251,190,50)" fg:x="54215" fg:w="14"/><text x="54.7802%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.03%)</title><rect x="54.5262%" y="565" width="0.0292%" height="15" fill="rgb(208,203,29)" fg:x="54211" fg:w="29"/><text x="54.7762%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="54.5282%" y="549" width="0.0272%" height="15" fill="rgb(207,209,35)" fg:x="54213" fg:w="27"/><text x="54.7782%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (33 samples, 0.03%)</title><rect x="54.5241%" y="581" width="0.0332%" height="15" fill="rgb(230,144,49)" fg:x="54209" fg:w="33"/><text x="54.7741%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (38 samples, 0.04%)</title><rect x="54.5211%" y="613" width="0.0382%" height="15" fill="rgb(229,31,6)" fg:x="54206" fg:w="38"/><text x="54.7711%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (38 samples, 0.04%)</title><rect x="54.5211%" y="597" width="0.0382%" height="15" fill="rgb(251,129,24)" fg:x="54206" fg:w="38"/><text x="54.7711%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (14 samples, 0.01%)</title><rect x="54.5594%" y="613" width="0.0141%" height="15" fill="rgb(235,105,15)" fg:x="54244" fg:w="14"/><text x="54.8094%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (13 samples, 0.01%)</title><rect x="54.5604%" y="597" width="0.0131%" height="15" fill="rgb(216,52,43)" fg:x="54245" fg:w="13"/><text x="54.8104%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (13 samples, 0.01%)</title><rect x="54.5604%" y="581" width="0.0131%" height="15" fill="rgb(238,144,41)" fg:x="54245" fg:w="13"/><text x="54.8104%" y="591.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (53 samples, 0.05%)</title><rect x="54.5211%" y="629" width="0.0533%" height="15" fill="rgb(243,63,9)" fg:x="54206" fg:w="53"/><text x="54.7711%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (65 samples, 0.07%)</title><rect x="54.5141%" y="709" width="0.0654%" height="15" fill="rgb(246,208,1)" fg:x="54199" fg:w="65"/><text x="54.7641%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (64 samples, 0.06%)</title><rect x="54.5151%" y="693" width="0.0644%" height="15" fill="rgb(233,182,18)" fg:x="54200" fg:w="64"/><text x="54.7651%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 0.06%)</title><rect x="54.5181%" y="677" width="0.0614%" height="15" fill="rgb(242,224,8)" fg:x="54203" fg:w="61"/><text x="54.7681%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (61 samples, 0.06%)</title><rect x="54.5181%" y="661" width="0.0614%" height="15" fill="rgb(243,54,37)" fg:x="54203" fg:w="61"/><text x="54.7681%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (60 samples, 0.06%)</title><rect x="54.5191%" y="645" width="0.0603%" height="15" fill="rgb(233,192,12)" fg:x="54204" fg:w="60"/><text x="54.7691%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.01%)</title><rect x="54.5996%" y="661" width="0.0131%" height="15" fill="rgb(251,192,53)" fg:x="54284" fg:w="13"/><text x="54.8496%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (109 samples, 0.11%)</title><rect x="54.5071%" y="725" width="0.1096%" height="15" fill="rgb(246,141,26)" fg:x="54192" fg:w="109"/><text x="54.7571%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (37 samples, 0.04%)</title><rect x="54.5795%" y="709" width="0.0372%" height="15" fill="rgb(239,195,19)" fg:x="54264" fg:w="37"/><text x="54.8295%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (31 samples, 0.03%)</title><rect x="54.5855%" y="693" width="0.0312%" height="15" fill="rgb(241,16,39)" fg:x="54270" fg:w="31"/><text x="54.8355%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.03%)</title><rect x="54.5885%" y="677" width="0.0282%" height="15" fill="rgb(223,13,53)" fg:x="54273" fg:w="28"/><text x="54.8385%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (11 samples, 0.01%)</title><rect x="54.6599%" y="661" width="0.0111%" height="15" fill="rgb(214,227,0)" fg:x="54344" fg:w="11"/><text x="54.9099%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (45 samples, 0.05%)</title><rect x="54.6378%" y="677" width="0.0453%" height="15" fill="rgb(228,103,26)" fg:x="54322" fg:w="45"/><text x="54.8878%" y="687.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (12 samples, 0.01%)</title><rect x="54.6710%" y="661" width="0.0121%" height="15" fill="rgb(254,177,53)" fg:x="54355" fg:w="12"/><text x="54.9210%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (182 samples, 0.18%)</title><rect x="54.5050%" y="741" width="0.1831%" height="15" fill="rgb(208,201,34)" fg:x="54190" fg:w="182"/><text x="54.7550%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (71 samples, 0.07%)</title><rect x="54.6167%" y="725" width="0.0714%" height="15" fill="rgb(212,39,5)" fg:x="54301" fg:w="71"/><text x="54.8667%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (69 samples, 0.07%)</title><rect x="54.6187%" y="709" width="0.0694%" height="15" fill="rgb(246,117,3)" fg:x="54303" fg:w="69"/><text x="54.8687%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (55 samples, 0.06%)</title><rect x="54.6328%" y="693" width="0.0553%" height="15" fill="rgb(244,118,39)" fg:x="54317" fg:w="55"/><text x="54.8828%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (183 samples, 0.18%)</title><rect x="54.5050%" y="757" width="0.1841%" height="15" fill="rgb(241,64,10)" fg:x="54190" fg:w="183"/><text x="54.7550%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="54.7193%" y="677" width="0.0211%" height="15" fill="rgb(229,39,44)" fg:x="54403" fg:w="21"/><text x="54.9693%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="54.7263%" y="661" width="0.0141%" height="15" fill="rgb(230,226,3)" fg:x="54410" fg:w="14"/><text x="54.9763%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (11 samples, 0.01%)</title><rect x="54.7414%" y="677" width="0.0111%" height="15" fill="rgb(222,13,42)" fg:x="54425" fg:w="11"/><text x="54.9914%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (46 samples, 0.05%)</title><rect x="54.7092%" y="725" width="0.0463%" height="15" fill="rgb(247,180,54)" fg:x="54393" fg:w="46"/><text x="54.9592%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (44 samples, 0.04%)</title><rect x="54.7112%" y="709" width="0.0443%" height="15" fill="rgb(205,96,16)" fg:x="54395" fg:w="44"/><text x="54.9612%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (42 samples, 0.04%)</title><rect x="54.7132%" y="693" width="0.0422%" height="15" fill="rgb(205,100,21)" fg:x="54397" fg:w="42"/><text x="54.9632%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (61 samples, 0.06%)</title><rect x="54.6951%" y="741" width="0.0614%" height="15" fill="rgb(248,51,4)" fg:x="54379" fg:w="61"/><text x="54.9451%" y="751.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::is_mutable (65 samples, 0.07%)</title><rect x="54.6941%" y="757" width="0.0654%" height="15" fill="rgb(217,197,30)" fg:x="54378" fg:w="65"/><text x="54.9441%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (16 samples, 0.02%)</title><rect x="54.7867%" y="709" width="0.0161%" height="15" fill="rgb(240,179,40)" fg:x="54470" fg:w="16"/><text x="55.0367%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (19 samples, 0.02%)</title><rect x="54.8028%" y="709" width="0.0191%" height="15" fill="rgb(212,185,35)" fg:x="54486" fg:w="19"/><text x="55.0528%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16 samples, 0.02%)</title><rect x="54.8058%" y="693" width="0.0161%" height="15" fill="rgb(251,222,31)" fg:x="54489" fg:w="16"/><text x="55.0558%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="54.8078%" y="677" width="0.0141%" height="15" fill="rgb(208,140,36)" fg:x="54491" fg:w="14"/><text x="55.0578%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="54.8078%" y="661" width="0.0141%" height="15" fill="rgb(220,148,1)" fg:x="54491" fg:w="14"/><text x="55.0578%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.02%)</title><rect x="54.8219%" y="709" width="0.0151%" height="15" fill="rgb(254,4,28)" fg:x="54505" fg:w="15"/><text x="55.0719%" y="719.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::borrowed_by (80 samples, 0.08%)</title><rect x="54.7676%" y="725" width="0.0805%" height="15" fill="rgb(222,185,44)" fg:x="54451" fg:w="80"/><text x="55.0176%" y="735.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_global_borrowed (111 samples, 0.11%)</title><rect x="54.7595%" y="757" width="0.1116%" height="15" fill="rgb(215,74,39)" fg:x="54443" fg:w="111"/><text x="55.0095%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (109 samples, 0.11%)</title><rect x="54.7615%" y="741" width="0.1096%" height="15" fill="rgb(247,86,4)" fg:x="54445" fg:w="109"/><text x="55.0115%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="54.8500%" y="725" width="0.0211%" height="15" fill="rgb(231,105,32)" fg:x="54533" fg:w="21"/><text x="55.1000%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="54.8500%" y="709" width="0.0211%" height="15" fill="rgb(222,65,35)" fg:x="54533" fg:w="21"/><text x="55.1000%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="54.8551%" y="693" width="0.0161%" height="15" fill="rgb(218,145,35)" fg:x="54538" fg:w="16"/><text x="55.1051%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="54.8551%" y="677" width="0.0161%" height="15" fill="rgb(208,7,15)" fg:x="54538" fg:w="16"/><text x="55.1051%" y="687.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_writable (19 samples, 0.02%)</title><rect x="54.8712%" y="757" width="0.0191%" height="15" fill="rgb(209,83,13)" fg:x="54554" fg:w="19"/><text x="55.1212%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::has_consistent_borrows (11 samples, 0.01%)</title><rect x="54.8792%" y="741" width="0.0111%" height="15" fill="rgb(218,3,10)" fg:x="54562" fg:w="11"/><text x="55.1292%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (11 samples, 0.01%)</title><rect x="54.9506%" y="661" width="0.0111%" height="15" fill="rgb(211,219,4)" fg:x="54633" fg:w="11"/><text x="55.2006%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (20 samples, 0.02%)</title><rect x="54.9446%" y="677" width="0.0201%" height="15" fill="rgb(228,194,12)" fg:x="54627" fg:w="20"/><text x="55.1946%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (29 samples, 0.03%)</title><rect x="54.9436%" y="693" width="0.0292%" height="15" fill="rgb(210,175,7)" fg:x="54626" fg:w="29"/><text x="55.1936%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (62 samples, 0.06%)</title><rect x="54.9335%" y="709" width="0.0624%" height="15" fill="rgb(243,132,6)" fg:x="54616" fg:w="62"/><text x="55.1835%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (20 samples, 0.02%)</title><rect x="54.9758%" y="693" width="0.0201%" height="15" fill="rgb(207,72,18)" fg:x="54658" fg:w="20"/><text x="55.2258%" y="703.50"></text></g><g><title>core::mem::take (14 samples, 0.01%)</title><rect x="54.9818%" y="677" width="0.0141%" height="15" fill="rgb(236,1,18)" fg:x="54664" fg:w="14"/><text x="55.2318%" y="687.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="54.9828%" y="661" width="0.0131%" height="15" fill="rgb(227,0,18)" fg:x="54665" fg:w="13"/><text x="55.2328%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (67 samples, 0.07%)</title><rect x="54.9305%" y="725" width="0.0674%" height="15" fill="rgb(247,37,5)" fg:x="54613" fg:w="67"/><text x="55.1805%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (13 samples, 0.01%)</title><rect x="55.0190%" y="629" width="0.0131%" height="15" fill="rgb(237,179,24)" fg:x="54701" fg:w="13"/><text x="55.2690%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (19 samples, 0.02%)</title><rect x="55.0522%" y="629" width="0.0191%" height="15" fill="rgb(226,53,20)" fg:x="54734" fg:w="19"/><text x="55.3022%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="55.0572%" y="613" width="0.0141%" height="15" fill="rgb(247,75,7)" fg:x="54739" fg:w="14"/><text x="55.3072%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="55.0613%" y="597" width="0.0101%" height="15" fill="rgb(233,96,12)" fg:x="54743" fg:w="10"/><text x="55.3113%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (72 samples, 0.07%)</title><rect x="55.0090%" y="645" width="0.0724%" height="15" fill="rgb(224,125,0)" fg:x="54691" fg:w="72"/><text x="55.2590%" y="655.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="55.0713%" y="629" width="0.0101%" height="15" fill="rgb(224,92,25)" fg:x="54753" fg:w="10"/><text x="55.3213%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (78 samples, 0.08%)</title><rect x="55.0079%" y="661" width="0.0785%" height="15" fill="rgb(224,42,24)" fg:x="54690" fg:w="78"/><text x="55.2579%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (92 samples, 0.09%)</title><rect x="54.9999%" y="693" width="0.0925%" height="15" fill="rgb(234,132,49)" fg:x="54682" fg:w="92"/><text x="55.2499%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (92 samples, 0.09%)</title><rect x="54.9999%" y="677" width="0.0925%" height="15" fill="rgb(248,100,35)" fg:x="54682" fg:w="92"/><text x="55.2499%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.10%)</title><rect x="54.9979%" y="709" width="0.0976%" height="15" fill="rgb(239,94,40)" fg:x="54680" fg:w="97"/><text x="55.2479%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.10%)</title><rect x="54.9979%" y="725" width="0.1036%" height="15" fill="rgb(235,139,28)" fg:x="54680" fg:w="103"/><text x="55.2479%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.02%)</title><rect x="55.1206%" y="709" width="0.0151%" height="15" fill="rgb(217,144,7)" fg:x="54802" fg:w="15"/><text x="55.3706%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (15 samples, 0.02%)</title><rect x="55.1206%" y="693" width="0.0151%" height="15" fill="rgb(227,55,4)" fg:x="54802" fg:w="15"/><text x="55.3706%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="55.1226%" y="677" width="0.0131%" height="15" fill="rgb(252,82,54)" fg:x="54804" fg:w="13"/><text x="55.3726%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get_mut (26 samples, 0.03%)</title><rect x="55.1105%" y="725" width="0.0262%" height="15" fill="rgb(245,172,4)" fg:x="54792" fg:w="26"/><text x="55.3605%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (13 samples, 0.01%)</title><rect x="55.1367%" y="725" width="0.0131%" height="15" fill="rgb(207,26,27)" fg:x="54818" fg:w="13"/><text x="55.3867%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (13 samples, 0.01%)</title><rect x="55.2604%" y="613" width="0.0131%" height="15" fill="rgb(252,98,18)" fg:x="54941" fg:w="13"/><text x="55.5104%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (26 samples, 0.03%)</title><rect x="55.2765%" y="613" width="0.0262%" height="15" fill="rgb(244,8,26)" fg:x="54957" fg:w="26"/><text x="55.5265%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (19 samples, 0.02%)</title><rect x="55.2835%" y="597" width="0.0191%" height="15" fill="rgb(237,173,45)" fg:x="54964" fg:w="19"/><text x="55.5335%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (16 samples, 0.02%)</title><rect x="55.2866%" y="581" width="0.0161%" height="15" fill="rgb(208,213,49)" fg:x="54967" fg:w="16"/><text x="55.5366%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="55.2926%" y="565" width="0.0101%" height="15" fill="rgb(212,122,37)" fg:x="54973" fg:w="10"/><text x="55.5426%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="55.3288%" y="549" width="0.0111%" height="15" fill="rgb(213,80,17)" fg:x="55009" fg:w="11"/><text x="55.5788%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (31 samples, 0.03%)</title><rect x="55.3157%" y="597" width="0.0312%" height="15" fill="rgb(206,210,43)" fg:x="54996" fg:w="31"/><text x="55.5657%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (31 samples, 0.03%)</title><rect x="55.3157%" y="581" width="0.0312%" height="15" fill="rgb(229,214,3)" fg:x="54996" fg:w="31"/><text x="55.5657%" y="591.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="55.3167%" y="565" width="0.0302%" height="15" fill="rgb(235,213,29)" fg:x="54997" fg:w="30"/><text x="55.5667%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="55.3469%" y="597" width="0.0101%" height="15" fill="rgb(248,135,26)" fg:x="55027" fg:w="10"/><text x="55.5969%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (121 samples, 0.12%)</title><rect x="55.2403%" y="629" width="0.1217%" height="15" fill="rgb(242,188,12)" fg:x="54921" fg:w="121"/><text x="55.4903%" y="639.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (59 samples, 0.06%)</title><rect x="55.3026%" y="613" width="0.0593%" height="15" fill="rgb(245,38,12)" fg:x="54983" fg:w="59"/><text x="55.5526%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (13 samples, 0.01%)</title><rect x="55.3670%" y="629" width="0.0131%" height="15" fill="rgb(218,42,13)" fg:x="55047" fg:w="13"/><text x="55.6170%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (22 samples, 0.02%)</title><rect x="55.3942%" y="613" width="0.0221%" height="15" fill="rgb(238,132,49)" fg:x="55074" fg:w="22"/><text x="55.6442%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (35 samples, 0.04%)</title><rect x="55.3891%" y="629" width="0.0352%" height="15" fill="rgb(209,196,19)" fg:x="55069" fg:w="35"/><text x="55.6391%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (260 samples, 0.26%)</title><rect x="55.1638%" y="693" width="0.2615%" height="15" fill="rgb(244,131,22)" fg:x="54845" fg:w="260"/><text x="55.4138%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (260 samples, 0.26%)</title><rect x="55.1638%" y="677" width="0.2615%" height="15" fill="rgb(223,18,34)" fg:x="54845" fg:w="260"/><text x="55.4138%" y="687.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (255 samples, 0.26%)</title><rect x="55.1689%" y="661" width="0.2565%" height="15" fill="rgb(252,124,54)" fg:x="54850" fg:w="255"/><text x="55.4189%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (242 samples, 0.24%)</title><rect x="55.1820%" y="645" width="0.2434%" height="15" fill="rgb(229,106,42)" fg:x="54863" fg:w="242"/><text x="55.4320%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="55.4415%" y="645" width="0.0251%" height="15" fill="rgb(221,129,1)" fg:x="55121" fg:w="25"/><text x="55.6915%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="55.4525%" y="629" width="0.0141%" height="15" fill="rgb(229,74,15)" fg:x="55132" fg:w="14"/><text x="55.7025%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (10 samples, 0.01%)</title><rect x="55.4666%" y="645" width="0.0101%" height="15" fill="rgb(210,206,50)" fg:x="55146" fg:w="10"/><text x="55.7166%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (54 samples, 0.05%)</title><rect x="55.4274%" y="693" width="0.0543%" height="15" fill="rgb(251,114,31)" fg:x="55107" fg:w="54"/><text x="55.6774%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.05%)</title><rect x="55.4284%" y="677" width="0.0533%" height="15" fill="rgb(215,225,28)" fg:x="55108" fg:w="53"/><text x="55.6784%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (51 samples, 0.05%)</title><rect x="55.4304%" y="661" width="0.0513%" height="15" fill="rgb(237,109,14)" fg:x="55110" fg:w="51"/><text x="55.6804%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (332 samples, 0.33%)</title><rect x="55.1528%" y="709" width="0.3339%" height="15" fill="rgb(230,13,37)" fg:x="54834" fg:w="332"/><text x="55.4028%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (353 samples, 0.36%)</title><rect x="55.1498%" y="725" width="0.3551%" height="15" fill="rgb(231,40,28)" fg:x="54831" fg:w="353"/><text x="55.3998%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="55.4867%" y="709" width="0.0181%" height="15" fill="rgb(231,202,18)" fg:x="55166" fg:w="18"/><text x="55.7367%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (11 samples, 0.01%)</title><rect x="55.5048%" y="725" width="0.0111%" height="15" fill="rgb(225,33,18)" fg:x="55184" fg:w="11"/><text x="55.7548%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (11 samples, 0.01%)</title><rect x="55.5048%" y="709" width="0.0111%" height="15" fill="rgb(223,64,47)" fg:x="55184" fg:w="11"/><text x="55.7548%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (11 samples, 0.01%)</title><rect x="55.5048%" y="693" width="0.0111%" height="15" fill="rgb(234,114,13)" fg:x="55184" fg:w="11"/><text x="55.7548%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (12 samples, 0.01%)</title><rect x="55.5350%" y="645" width="0.0121%" height="15" fill="rgb(248,56,40)" fg:x="55214" fg:w="12"/><text x="55.7850%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (22 samples, 0.02%)</title><rect x="55.5280%" y="677" width="0.0221%" height="15" fill="rgb(221,194,21)" fg:x="55207" fg:w="22"/><text x="55.7780%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (21 samples, 0.02%)</title><rect x="55.5290%" y="661" width="0.0211%" height="15" fill="rgb(242,108,46)" fg:x="55208" fg:w="21"/><text x="55.7790%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (29 samples, 0.03%)</title><rect x="55.5239%" y="693" width="0.0292%" height="15" fill="rgb(220,106,10)" fg:x="55203" fg:w="29"/><text x="55.7739%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (13 samples, 0.01%)</title><rect x="55.5984%" y="581" width="0.0131%" height="15" fill="rgb(211,88,4)" fg:x="55277" fg:w="13"/><text x="55.8484%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (15 samples, 0.02%)</title><rect x="55.6114%" y="581" width="0.0151%" height="15" fill="rgb(214,95,34)" fg:x="55290" fg:w="15"/><text x="55.8614%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (13 samples, 0.01%)</title><rect x="55.6265%" y="581" width="0.0131%" height="15" fill="rgb(250,160,33)" fg:x="55305" fg:w="13"/><text x="55.8765%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="55.6295%" y="565" width="0.0101%" height="15" fill="rgb(225,29,10)" fg:x="55308" fg:w="10"/><text x="55.8795%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (53 samples, 0.05%)</title><rect x="55.5903%" y="597" width="0.0533%" height="15" fill="rgb(224,28,30)" fg:x="55269" fg:w="53"/><text x="55.8403%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (76 samples, 0.08%)</title><rect x="55.5772%" y="629" width="0.0764%" height="15" fill="rgb(231,77,4)" fg:x="55256" fg:w="76"/><text x="55.8272%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (74 samples, 0.07%)</title><rect x="55.5792%" y="613" width="0.0744%" height="15" fill="rgb(209,63,21)" fg:x="55258" fg:w="74"/><text x="55.8292%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.09%)</title><rect x="55.5692%" y="661" width="0.0855%" height="15" fill="rgb(226,22,11)" fg:x="55248" fg:w="85"/><text x="55.8192%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (83 samples, 0.08%)</title><rect x="55.5712%" y="645" width="0.0835%" height="15" fill="rgb(216,82,30)" fg:x="55250" fg:w="83"/><text x="55.8212%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (22 samples, 0.02%)</title><rect x="55.6849%" y="597" width="0.0221%" height="15" fill="rgb(246,227,38)" fg:x="55363" fg:w="22"/><text x="55.9349%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (19 samples, 0.02%)</title><rect x="55.6879%" y="581" width="0.0191%" height="15" fill="rgb(251,203,53)" fg:x="55366" fg:w="19"/><text x="55.9379%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (45 samples, 0.05%)</title><rect x="55.6668%" y="629" width="0.0453%" height="15" fill="rgb(254,101,1)" fg:x="55345" fg:w="45"/><text x="55.9168%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (38 samples, 0.04%)</title><rect x="55.6738%" y="613" width="0.0382%" height="15" fill="rgb(241,180,5)" fg:x="55352" fg:w="38"/><text x="55.9238%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (13 samples, 0.01%)</title><rect x="55.7261%" y="581" width="0.0131%" height="15" fill="rgb(218,168,4)" fg:x="55404" fg:w="13"/><text x="55.9761%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (13 samples, 0.01%)</title><rect x="55.7261%" y="565" width="0.0131%" height="15" fill="rgb(224,223,32)" fg:x="55404" fg:w="13"/><text x="55.9761%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (18 samples, 0.02%)</title><rect x="55.7231%" y="597" width="0.0181%" height="15" fill="rgb(236,106,22)" fg:x="55401" fg:w="18"/><text x="55.9731%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (26 samples, 0.03%)</title><rect x="55.7160%" y="613" width="0.0262%" height="15" fill="rgb(206,121,5)" fg:x="55394" fg:w="26"/><text x="55.9660%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (31 samples, 0.03%)</title><rect x="55.7120%" y="629" width="0.0312%" height="15" fill="rgb(233,87,28)" fg:x="55390" fg:w="31"/><text x="55.9620%" y="639.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="55.7502%" y="613" width="0.0151%" height="15" fill="rgb(236,137,17)" fg:x="55428" fg:w="15"/><text x="56.0002%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (19 samples, 0.02%)</title><rect x="55.7854%" y="517" width="0.0191%" height="15" fill="rgb(209,183,38)" fg:x="55463" fg:w="19"/><text x="56.0354%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="55.7814%" y="549" width="0.0241%" height="15" fill="rgb(206,162,44)" fg:x="55459" fg:w="24"/><text x="56.0314%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="55.7824%" y="533" width="0.0231%" height="15" fill="rgb(237,70,39)" fg:x="55460" fg:w="23"/><text x="56.0324%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="55.7804%" y="581" width="0.0262%" height="15" fill="rgb(212,176,5)" fg:x="55458" fg:w="26"/><text x="56.0304%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="55.7814%" y="565" width="0.0251%" height="15" fill="rgb(232,95,16)" fg:x="55459" fg:w="25"/><text x="56.0314%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="55.7804%" y="597" width="0.0312%" height="15" fill="rgb(219,115,35)" fg:x="55458" fg:w="31"/><text x="56.0304%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (26 samples, 0.03%)</title><rect x="55.8136%" y="501" width="0.0262%" height="15" fill="rgb(251,67,27)" fg:x="55491" fg:w="26"/><text x="56.0636%" y="511.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (33 samples, 0.03%)</title><rect x="55.8126%" y="533" width="0.0332%" height="15" fill="rgb(222,95,40)" fg:x="55490" fg:w="33"/><text x="56.0626%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (33 samples, 0.03%)</title><rect x="55.8126%" y="517" width="0.0332%" height="15" fill="rgb(250,35,16)" fg:x="55490" fg:w="33"/><text x="56.0626%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="55.8116%" y="565" width="0.0352%" height="15" fill="rgb(224,86,44)" fg:x="55489" fg:w="35"/><text x="56.0616%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (34 samples, 0.03%)</title><rect x="55.8126%" y="549" width="0.0342%" height="15" fill="rgb(237,53,53)" fg:x="55490" fg:w="34"/><text x="56.0626%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="55.8116%" y="597" width="0.0392%" height="15" fill="rgb(208,171,33)" fg:x="55489" fg:w="39"/><text x="56.0616%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="55.8116%" y="581" width="0.0392%" height="15" fill="rgb(222,64,27)" fg:x="55489" fg:w="39"/><text x="56.0616%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="55.9031%" y="469" width="0.0251%" height="15" fill="rgb(221,121,35)" fg:x="55580" fg:w="25"/><text x="56.1531%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="55.9122%" y="453" width="0.0161%" height="15" fill="rgb(228,137,42)" fg:x="55589" fg:w="16"/><text x="56.1622%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (95 samples, 0.10%)</title><rect x="55.8599%" y="533" width="0.0956%" height="15" fill="rgb(227,54,21)" fg:x="55537" fg:w="95"/><text x="56.1099%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (80 samples, 0.08%)</title><rect x="55.8750%" y="517" width="0.0805%" height="15" fill="rgb(240,168,33)" fg:x="55552" fg:w="80"/><text x="56.1250%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (77 samples, 0.08%)</title><rect x="55.8780%" y="501" width="0.0774%" height="15" fill="rgb(243,159,6)" fg:x="55555" fg:w="77"/><text x="56.1280%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (75 samples, 0.08%)</title><rect x="55.8800%" y="485" width="0.0754%" height="15" fill="rgb(205,211,41)" fg:x="55557" fg:w="75"/><text x="56.1300%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (17 samples, 0.02%)</title><rect x="55.9383%" y="469" width="0.0171%" height="15" fill="rgb(253,30,1)" fg:x="55615" fg:w="17"/><text x="56.1883%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="55.9383%" y="453" width="0.0171%" height="15" fill="rgb(226,80,18)" fg:x="55615" fg:w="17"/><text x="56.1883%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (10 samples, 0.01%)</title><rect x="55.9454%" y="437" width="0.0101%" height="15" fill="rgb(253,156,46)" fg:x="55622" fg:w="10"/><text x="56.1954%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (100 samples, 0.10%)</title><rect x="55.8569%" y="549" width="0.1006%" height="15" fill="rgb(248,87,27)" fg:x="55534" fg:w="100"/><text x="56.1069%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (25 samples, 0.03%)</title><rect x="55.9675%" y="517" width="0.0251%" height="15" fill="rgb(227,122,2)" fg:x="55644" fg:w="25"/><text x="56.2175%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="55.9675%" y="501" width="0.0251%" height="15" fill="rgb(229,94,39)" fg:x="55644" fg:w="25"/><text x="56.2175%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (23 samples, 0.02%)</title><rect x="55.9695%" y="485" width="0.0231%" height="15" fill="rgb(225,173,31)" fg:x="55646" fg:w="23"/><text x="56.2195%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (36 samples, 0.04%)</title><rect x="55.9574%" y="533" width="0.0362%" height="15" fill="rgb(239,176,30)" fg:x="55634" fg:w="36"/><text x="56.2074%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (37 samples, 0.04%)</title><rect x="55.9574%" y="549" width="0.0372%" height="15" fill="rgb(212,104,21)" fg:x="55634" fg:w="37"/><text x="56.2074%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (513 samples, 0.52%)</title><rect x="55.5209%" y="709" width="0.5160%" height="15" fill="rgb(240,209,40)" fg:x="55200" fg:w="513"/><text x="55.7709%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (481 samples, 0.48%)</title><rect x="55.5531%" y="693" width="0.4838%" height="15" fill="rgb(234,195,5)" fg:x="55232" fg:w="481"/><text x="55.8031%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (475 samples, 0.48%)</title><rect x="55.5591%" y="677" width="0.4778%" height="15" fill="rgb(238,213,1)" fg:x="55238" fg:w="475"/><text x="55.8091%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (378 samples, 0.38%)</title><rect x="55.6567%" y="661" width="0.3802%" height="15" fill="rgb(235,182,54)" fg:x="55335" fg:w="378"/><text x="55.9067%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (375 samples, 0.38%)</title><rect x="55.6597%" y="645" width="0.3772%" height="15" fill="rgb(229,50,46)" fg:x="55338" fg:w="375"/><text x="55.9097%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (292 samples, 0.29%)</title><rect x="55.7432%" y="629" width="0.2937%" height="15" fill="rgb(219,145,13)" fg:x="55421" fg:w="292"/><text x="55.9932%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (269 samples, 0.27%)</title><rect x="55.7663%" y="613" width="0.2706%" height="15" fill="rgb(220,226,10)" fg:x="55444" fg:w="269"/><text x="56.0163%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (182 samples, 0.18%)</title><rect x="55.8538%" y="597" width="0.1831%" height="15" fill="rgb(248,47,30)" fg:x="55531" fg:w="182"/><text x="56.1038%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (181 samples, 0.18%)</title><rect x="55.8548%" y="581" width="0.1821%" height="15" fill="rgb(231,209,44)" fg:x="55532" fg:w="181"/><text x="56.1048%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (180 samples, 0.18%)</title><rect x="55.8558%" y="565" width="0.1810%" height="15" fill="rgb(209,80,30)" fg:x="55533" fg:w="180"/><text x="56.1058%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (42 samples, 0.04%)</title><rect x="55.9946%" y="549" width="0.0422%" height="15" fill="rgb(232,9,14)" fg:x="55671" fg:w="42"/><text x="56.2446%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (41 samples, 0.04%)</title><rect x="55.9957%" y="533" width="0.0412%" height="15" fill="rgb(243,91,43)" fg:x="55672" fg:w="41"/><text x="56.2457%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (40 samples, 0.04%)</title><rect x="55.9967%" y="517" width="0.0402%" height="15" fill="rgb(231,90,52)" fg:x="55673" fg:w="40"/><text x="56.2467%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.02%)</title><rect x="56.0158%" y="501" width="0.0211%" height="15" fill="rgb(253,192,44)" fg:x="55692" fg:w="21"/><text x="56.2658%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.02%)</title><rect x="56.0178%" y="485" width="0.0191%" height="15" fill="rgb(241,66,31)" fg:x="55694" fg:w="19"/><text x="56.2678%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (17 samples, 0.02%)</title><rect x="56.0198%" y="469" width="0.0171%" height="15" fill="rgb(235,81,37)" fg:x="55696" fg:w="17"/><text x="56.2698%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (23 samples, 0.02%)</title><rect x="56.0540%" y="661" width="0.0231%" height="15" fill="rgb(223,221,9)" fg:x="55730" fg:w="23"/><text x="56.3040%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (23 samples, 0.02%)</title><rect x="56.0540%" y="645" width="0.0231%" height="15" fill="rgb(242,180,7)" fg:x="55730" fg:w="23"/><text x="56.3040%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::values (36 samples, 0.04%)</title><rect x="56.0419%" y="693" width="0.0362%" height="15" fill="rgb(243,78,19)" fg:x="55718" fg:w="36"/><text x="56.2919%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (31 samples, 0.03%)</title><rect x="56.0470%" y="677" width="0.0312%" height="15" fill="rgb(233,23,17)" fg:x="55723" fg:w="31"/><text x="56.2970%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (15 samples, 0.02%)</title><rect x="56.1234%" y="565" width="0.0151%" height="15" fill="rgb(252,122,45)" fg:x="55799" fg:w="15"/><text x="56.3734%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (15 samples, 0.02%)</title><rect x="56.1385%" y="565" width="0.0151%" height="15" fill="rgb(247,108,20)" fg:x="55814" fg:w="15"/><text x="56.3885%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (10 samples, 0.01%)</title><rect x="56.1435%" y="549" width="0.0101%" height="15" fill="rgb(235,84,21)" fg:x="55819" fg:w="10"/><text x="56.3935%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (16 samples, 0.02%)</title><rect x="56.1536%" y="565" width="0.0161%" height="15" fill="rgb(247,129,10)" fg:x="55829" fg:w="16"/><text x="56.4036%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (59 samples, 0.06%)</title><rect x="56.1153%" y="581" width="0.0593%" height="15" fill="rgb(208,173,14)" fg:x="55791" fg:w="59"/><text x="56.3653%" y="591.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="56.1747%" y="581" width="0.0111%" height="15" fill="rgb(236,31,38)" fg:x="55850" fg:w="11"/><text x="56.4247%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (81 samples, 0.08%)</title><rect x="56.1053%" y="613" width="0.0815%" height="15" fill="rgb(232,65,17)" fg:x="55781" fg:w="81"/><text x="56.3553%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (80 samples, 0.08%)</title><rect x="56.1063%" y="597" width="0.0805%" height="15" fill="rgb(224,45,49)" fg:x="55782" fg:w="80"/><text x="56.3563%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.09%)</title><rect x="56.0972%" y="645" width="0.0945%" height="15" fill="rgb(225,2,53)" fg:x="55773" fg:w="94"/><text x="56.3472%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (89 samples, 0.09%)</title><rect x="56.1023%" y="629" width="0.0895%" height="15" fill="rgb(248,210,53)" fg:x="55778" fg:w="89"/><text x="56.3523%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.10%)</title><rect x="56.0962%" y="661" width="0.1006%" height="15" fill="rgb(211,1,30)" fg:x="55772" fg:w="100"/><text x="56.3462%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (24 samples, 0.02%)</title><rect x="56.2260%" y="597" width="0.0241%" height="15" fill="rgb(224,96,15)" fg:x="55901" fg:w="24"/><text x="56.4760%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (24 samples, 0.02%)</title><rect x="56.2260%" y="581" width="0.0241%" height="15" fill="rgb(252,45,11)" fg:x="55901" fg:w="24"/><text x="56.4760%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (45 samples, 0.05%)</title><rect x="56.2089%" y="629" width="0.0453%" height="15" fill="rgb(220,125,38)" fg:x="55884" fg:w="45"/><text x="56.4589%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (44 samples, 0.04%)</title><rect x="56.2099%" y="613" width="0.0443%" height="15" fill="rgb(243,161,33)" fg:x="55885" fg:w="44"/><text x="56.4599%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (17 samples, 0.02%)</title><rect x="56.2763%" y="581" width="0.0171%" height="15" fill="rgb(248,197,34)" fg:x="55951" fg:w="17"/><text x="56.5263%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (16 samples, 0.02%)</title><rect x="56.2773%" y="565" width="0.0161%" height="15" fill="rgb(228,165,23)" fg:x="55952" fg:w="16"/><text x="56.5273%" y="575.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (41 samples, 0.04%)</title><rect x="56.2541%" y="629" width="0.0412%" height="15" fill="rgb(236,94,38)" fg:x="55929" fg:w="41"/><text x="56.5041%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (37 samples, 0.04%)</title><rect x="56.2582%" y="613" width="0.0372%" height="15" fill="rgb(220,13,23)" fg:x="55933" fg:w="37"/><text x="56.5082%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (30 samples, 0.03%)</title><rect x="56.2652%" y="597" width="0.0302%" height="15" fill="rgb(234,26,39)" fg:x="55940" fg:w="30"/><text x="56.5152%" y="607.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="56.3004%" y="613" width="0.0151%" height="15" fill="rgb(205,117,44)" fg:x="55975" fg:w="15"/><text x="56.5504%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (29 samples, 0.03%)</title><rect x="56.3376%" y="517" width="0.0292%" height="15" fill="rgb(250,42,2)" fg:x="56012" fg:w="29"/><text x="56.5876%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="56.3306%" y="581" width="0.0422%" height="15" fill="rgb(223,83,14)" fg:x="56005" fg:w="42"/><text x="56.5806%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (41 samples, 0.04%)</title><rect x="56.3316%" y="565" width="0.0412%" height="15" fill="rgb(241,147,50)" fg:x="56006" fg:w="41"/><text x="56.5816%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (38 samples, 0.04%)</title><rect x="56.3346%" y="549" width="0.0382%" height="15" fill="rgb(218,90,6)" fg:x="56009" fg:w="38"/><text x="56.5846%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (37 samples, 0.04%)</title><rect x="56.3356%" y="533" width="0.0372%" height="15" fill="rgb(210,191,5)" fg:x="56010" fg:w="37"/><text x="56.5856%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.05%)</title><rect x="56.3276%" y="597" width="0.0523%" height="15" fill="rgb(225,139,19)" fg:x="56002" fg:w="52"/><text x="56.5776%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.01%)</title><rect x="56.3909%" y="485" width="0.0101%" height="15" fill="rgb(210,1,33)" fg:x="56065" fg:w="10"/><text x="56.6409%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="56.3839%" y="533" width="0.0241%" height="15" fill="rgb(213,50,3)" fg:x="56058" fg:w="24"/><text x="56.6339%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="56.3849%" y="517" width="0.0231%" height="15" fill="rgb(234,227,4)" fg:x="56059" fg:w="23"/><text x="56.6349%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (19 samples, 0.02%)</title><rect x="56.3889%" y="501" width="0.0191%" height="15" fill="rgb(246,63,5)" fg:x="56063" fg:w="19"/><text x="56.6389%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="56.3809%" y="565" width="0.0282%" height="15" fill="rgb(245,136,27)" fg:x="56055" fg:w="28"/><text x="56.6309%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="56.3839%" y="549" width="0.0251%" height="15" fill="rgb(247,199,27)" fg:x="56058" fg:w="25"/><text x="56.6339%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="56.3799%" y="597" width="0.0362%" height="15" fill="rgb(252,158,49)" fg:x="56054" fg:w="36"/><text x="56.6299%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="56.3799%" y="581" width="0.0362%" height="15" fill="rgb(254,73,1)" fg:x="56054" fg:w="36"/><text x="56.6299%" y="591.50"></text></g><g><title>&lt;borrow_graph::references::RefID as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="56.4644%" y="485" width="0.0121%" height="15" fill="rgb(248,93,19)" fg:x="56138" fg:w="12"/><text x="56.7144%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="56.4764%" y="485" width="0.0282%" height="15" fill="rgb(206,67,5)" fg:x="56150" fg:w="28"/><text x="56.7264%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="56.4875%" y="469" width="0.0171%" height="15" fill="rgb(209,210,4)" fg:x="56161" fg:w="17"/><text x="56.7375%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (76 samples, 0.08%)</title><rect x="56.4463%" y="533" width="0.0764%" height="15" fill="rgb(214,185,36)" fg:x="56120" fg:w="76"/><text x="56.6963%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (73 samples, 0.07%)</title><rect x="56.4493%" y="517" width="0.0734%" height="15" fill="rgb(233,191,26)" fg:x="56123" fg:w="73"/><text x="56.6993%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (71 samples, 0.07%)</title><rect x="56.4513%" y="501" width="0.0714%" height="15" fill="rgb(248,94,17)" fg:x="56125" fg:w="71"/><text x="56.7013%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (96 samples, 0.10%)</title><rect x="56.4282%" y="549" width="0.0966%" height="15" fill="rgb(250,64,4)" fg:x="56102" fg:w="96"/><text x="56.6782%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (486 samples, 0.49%)</title><rect x="56.0369%" y="709" width="0.4888%" height="15" fill="rgb(218,41,53)" fg:x="55713" fg:w="486"/><text x="56.2869%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (445 samples, 0.45%)</title><rect x="56.0781%" y="693" width="0.4476%" height="15" fill="rgb(251,176,28)" fg:x="55754" fg:w="445"/><text x="56.3281%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (441 samples, 0.44%)</title><rect x="56.0822%" y="677" width="0.4436%" height="15" fill="rgb(247,22,9)" fg:x="55758" fg:w="441"/><text x="56.3322%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (325 samples, 0.33%)</title><rect x="56.1988%" y="661" width="0.3269%" height="15" fill="rgb(218,201,14)" fg:x="55874" fg:w="325"/><text x="56.4488%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (322 samples, 0.32%)</title><rect x="56.2018%" y="645" width="0.3239%" height="15" fill="rgb(218,94,10)" fg:x="55877" fg:w="322"/><text x="56.4518%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (229 samples, 0.23%)</title><rect x="56.2954%" y="629" width="0.2303%" height="15" fill="rgb(222,183,52)" fg:x="55970" fg:w="229"/><text x="56.5454%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (209 samples, 0.21%)</title><rect x="56.3155%" y="613" width="0.2102%" height="15" fill="rgb(242,140,25)" fg:x="55990" fg:w="209"/><text x="56.5655%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (105 samples, 0.11%)</title><rect x="56.4201%" y="597" width="0.1056%" height="15" fill="rgb(235,197,38)" fg:x="56094" fg:w="105"/><text x="56.6701%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (100 samples, 0.10%)</title><rect x="56.4251%" y="581" width="0.1006%" height="15" fill="rgb(237,136,15)" fg:x="56099" fg:w="100"/><text x="56.6751%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (99 samples, 0.10%)</title><rect x="56.4261%" y="565" width="0.0996%" height="15" fill="rgb(223,44,49)" fg:x="56100" fg:w="99"/><text x="56.6761%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.01%)</title><rect x="56.5307%" y="693" width="0.0121%" height="15" fill="rgb(227,71,15)" fg:x="56204" fg:w="12"/><text x="56.7807%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (11 samples, 0.01%)</title><rect x="56.5318%" y="677" width="0.0111%" height="15" fill="rgb(225,153,20)" fg:x="56205" fg:w="11"/><text x="56.7818%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (11 samples, 0.01%)</title><rect x="56.5318%" y="661" width="0.0111%" height="15" fill="rgb(210,190,26)" fg:x="56205" fg:w="11"/><text x="56.7818%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (11 samples, 0.01%)</title><rect x="56.5680%" y="581" width="0.0111%" height="15" fill="rgb(223,147,5)" fg:x="56241" fg:w="11"/><text x="56.8180%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (12 samples, 0.01%)</title><rect x="56.5881%" y="581" width="0.0121%" height="15" fill="rgb(207,14,23)" fg:x="56261" fg:w="12"/><text x="56.8381%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="56.5891%" y="565" width="0.0111%" height="15" fill="rgb(211,195,53)" fg:x="56262" fg:w="11"/><text x="56.8391%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (44 samples, 0.04%)</title><rect x="56.5609%" y="597" width="0.0443%" height="15" fill="rgb(237,75,46)" fg:x="56234" fg:w="44"/><text x="56.8109%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (67 samples, 0.07%)</title><rect x="56.5529%" y="629" width="0.0674%" height="15" fill="rgb(254,55,14)" fg:x="56226" fg:w="67"/><text x="56.8029%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (67 samples, 0.07%)</title><rect x="56.5529%" y="613" width="0.0674%" height="15" fill="rgb(230,185,30)" fg:x="56226" fg:w="67"/><text x="56.8029%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.08%)</title><rect x="56.5499%" y="661" width="0.0754%" height="15" fill="rgb(220,14,11)" fg:x="56223" fg:w="75"/><text x="56.7999%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (75 samples, 0.08%)</title><rect x="56.5499%" y="645" width="0.0754%" height="15" fill="rgb(215,169,44)" fg:x="56223" fg:w="75"/><text x="56.7999%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (14 samples, 0.01%)</title><rect x="56.6535%" y="597" width="0.0141%" height="15" fill="rgb(253,203,20)" fg:x="56326" fg:w="14"/><text x="56.9035%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (14 samples, 0.01%)</title><rect x="56.6535%" y="581" width="0.0141%" height="15" fill="rgb(229,225,17)" fg:x="56326" fg:w="14"/><text x="56.9035%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (35 samples, 0.04%)</title><rect x="56.6343%" y="629" width="0.0352%" height="15" fill="rgb(236,76,26)" fg:x="56307" fg:w="35"/><text x="56.8843%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (28 samples, 0.03%)</title><rect x="56.6414%" y="613" width="0.0282%" height="15" fill="rgb(234,15,30)" fg:x="56314" fg:w="28"/><text x="56.8914%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (24 samples, 0.02%)</title><rect x="56.6695%" y="629" width="0.0241%" height="15" fill="rgb(211,113,48)" fg:x="56342" fg:w="24"/><text x="56.9195%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (21 samples, 0.02%)</title><rect x="56.6726%" y="613" width="0.0211%" height="15" fill="rgb(221,31,36)" fg:x="56345" fg:w="21"/><text x="56.9226%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (17 samples, 0.02%)</title><rect x="56.6766%" y="597" width="0.0171%" height="15" fill="rgb(215,118,52)" fg:x="56349" fg:w="17"/><text x="56.9266%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (16 samples, 0.02%)</title><rect x="56.7309%" y="517" width="0.0161%" height="15" fill="rgb(241,151,27)" fg:x="56403" fg:w="16"/><text x="56.9809%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (23 samples, 0.02%)</title><rect x="56.7279%" y="549" width="0.0231%" height="15" fill="rgb(253,51,3)" fg:x="56400" fg:w="23"/><text x="56.9779%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="56.7279%" y="533" width="0.0231%" height="15" fill="rgb(216,201,24)" fg:x="56400" fg:w="23"/><text x="56.9779%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="56.7259%" y="581" width="0.0272%" height="15" fill="rgb(231,107,4)" fg:x="56398" fg:w="27"/><text x="56.9759%" y="591.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (25 samples, 0.03%)</title><rect x="56.7279%" y="565" width="0.0251%" height="15" fill="rgb(243,97,54)" fg:x="56400" fg:w="25"/><text x="56.9779%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="56.7239%" y="597" width="0.0322%" height="15" fill="rgb(221,32,51)" fg:x="56396" fg:w="32"/><text x="56.9739%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (10 samples, 0.01%)</title><rect x="56.7691%" y="485" width="0.0101%" height="15" fill="rgb(218,171,35)" fg:x="56441" fg:w="10"/><text x="57.0191%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (20 samples, 0.02%)</title><rect x="56.7651%" y="501" width="0.0201%" height="15" fill="rgb(214,20,53)" fg:x="56437" fg:w="20"/><text x="57.0151%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="56.7571%" y="565" width="0.0322%" height="15" fill="rgb(239,9,52)" fg:x="56429" fg:w="32"/><text x="57.0071%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (30 samples, 0.03%)</title><rect x="56.7591%" y="549" width="0.0302%" height="15" fill="rgb(215,114,45)" fg:x="56431" fg:w="30"/><text x="57.0091%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (29 samples, 0.03%)</title><rect x="56.7601%" y="533" width="0.0292%" height="15" fill="rgb(208,118,9)" fg:x="56432" fg:w="29"/><text x="57.0101%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (29 samples, 0.03%)</title><rect x="56.7601%" y="517" width="0.0292%" height="15" fill="rgb(235,7,39)" fg:x="56432" fg:w="29"/><text x="57.0101%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="56.7560%" y="597" width="0.0362%" height="15" fill="rgb(243,225,15)" fg:x="56428" fg:w="36"/><text x="57.0060%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="56.7560%" y="581" width="0.0362%" height="15" fill="rgb(225,216,18)" fg:x="56428" fg:w="36"/><text x="57.0060%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (1,280 samples, 1.29%)</title><rect x="55.5159%" y="725" width="1.2874%" height="15" fill="rgb(233,36,38)" fg:x="55195" fg:w="1280"/><text x="55.7659%" y="735.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops (276 samples, 0.28%)</title><rect x="56.5257%" y="709" width="0.2776%" height="15" fill="rgb(239,88,23)" fg:x="56199" fg:w="276"/><text x="56.7757%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (259 samples, 0.26%)</title><rect x="56.5428%" y="693" width="0.2605%" height="15" fill="rgb(219,181,35)" fg:x="56216" fg:w="259"/><text x="56.7928%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (255 samples, 0.26%)</title><rect x="56.5468%" y="677" width="0.2565%" height="15" fill="rgb(215,18,46)" fg:x="56220" fg:w="255"/><text x="56.7968%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (174 samples, 0.18%)</title><rect x="56.6283%" y="661" width="0.1750%" height="15" fill="rgb(241,38,11)" fg:x="56301" fg:w="174"/><text x="56.8783%" y="671.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::no_self_loops::_{{closure}} (173 samples, 0.17%)</title><rect x="56.6293%" y="645" width="0.1740%" height="15" fill="rgb(248,169,45)" fg:x="56302" fg:w="173"/><text x="56.8793%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (109 samples, 0.11%)</title><rect x="56.6937%" y="629" width="0.1096%" height="15" fill="rgb(239,50,49)" fg:x="56366" fg:w="109"/><text x="56.9437%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (97 samples, 0.10%)</title><rect x="56.7058%" y="613" width="0.0976%" height="15" fill="rgb(231,96,31)" fg:x="56378" fg:w="97"/><text x="56.9558%" y="623.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (24 samples, 0.02%)</title><rect x="56.8053%" y="709" width="0.0241%" height="15" fill="rgb(224,193,37)" fg:x="56477" fg:w="24"/><text x="57.0553%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (17 samples, 0.02%)</title><rect x="56.8124%" y="693" width="0.0171%" height="15" fill="rgb(227,153,50)" fg:x="56484" fg:w="17"/><text x="57.0624%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (17 samples, 0.02%)</title><rect x="56.8124%" y="677" width="0.0171%" height="15" fill="rgb(249,228,3)" fg:x="56484" fg:w="17"/><text x="57.0624%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::splice_out_intermediate (39 samples, 0.04%)</title><rect x="56.8033%" y="725" width="0.0392%" height="15" fill="rgb(219,164,43)" fg:x="56475" fg:w="39"/><text x="57.0533%" y="735.50"></text></g><g><title>borrow_graph::paths::append (13 samples, 0.01%)</title><rect x="56.8295%" y="709" width="0.0131%" height="15" fill="rgb(216,45,41)" fg:x="56501" fg:w="13"/><text x="57.0795%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="56.8717%" y="597" width="0.0111%" height="15" fill="rgb(210,226,51)" fg:x="56543" fg:w="11"/><text x="57.1217%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="56.8727%" y="581" width="0.0101%" height="15" fill="rgb(209,117,49)" fg:x="56544" fg:w="10"/><text x="57.1227%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (39 samples, 0.04%)</title><rect x="56.8617%" y="629" width="0.0392%" height="15" fill="rgb(206,196,24)" fg:x="56533" fg:w="39"/><text x="57.1117%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (32 samples, 0.03%)</title><rect x="56.8687%" y="613" width="0.0322%" height="15" fill="rgb(253,218,3)" fg:x="56540" fg:w="32"/><text x="57.1187%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (43 samples, 0.04%)</title><rect x="56.8607%" y="645" width="0.0432%" height="15" fill="rgb(252,166,2)" fg:x="56532" fg:w="43"/><text x="57.1107%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (57 samples, 0.06%)</title><rect x="56.8476%" y="725" width="0.0573%" height="15" fill="rgb(236,218,26)" fg:x="56519" fg:w="57"/><text x="57.0976%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (57 samples, 0.06%)</title><rect x="56.8476%" y="709" width="0.0573%" height="15" fill="rgb(254,84,19)" fg:x="56519" fg:w="57"/><text x="57.0976%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.06%)</title><rect x="56.8476%" y="693" width="0.0573%" height="15" fill="rgb(219,137,29)" fg:x="56519" fg:w="57"/><text x="57.0976%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (47 samples, 0.05%)</title><rect x="56.8576%" y="677" width="0.0473%" height="15" fill="rgb(227,47,52)" fg:x="56529" fg:w="47"/><text x="57.1076%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="56.8576%" y="661" width="0.0473%" height="15" fill="rgb(229,167,24)" fg:x="56529" fg:w="47"/><text x="57.1076%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (16 samples, 0.02%)</title><rect x="56.9220%" y="629" width="0.0161%" height="15" fill="rgb(233,164,1)" fg:x="56593" fg:w="16"/><text x="57.1720%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (12 samples, 0.01%)</title><rect x="56.9260%" y="613" width="0.0121%" height="15" fill="rgb(218,88,48)" fg:x="56597" fg:w="12"/><text x="57.1760%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (37 samples, 0.04%)</title><rect x="56.9049%" y="725" width="0.0372%" height="15" fill="rgb(226,214,24)" fg:x="56576" fg:w="37"/><text x="57.1549%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (37 samples, 0.04%)</title><rect x="56.9049%" y="709" width="0.0372%" height="15" fill="rgb(233,29,12)" fg:x="56576" fg:w="37"/><text x="57.1549%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="56.9049%" y="693" width="0.0372%" height="15" fill="rgb(219,120,34)" fg:x="56576" fg:w="37"/><text x="57.1549%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (24 samples, 0.02%)</title><rect x="56.9180%" y="677" width="0.0241%" height="15" fill="rgb(226,78,44)" fg:x="56589" fg:w="24"/><text x="57.1680%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="56.9180%" y="661" width="0.0241%" height="15" fill="rgb(240,15,48)" fg:x="56589" fg:w="24"/><text x="57.1680%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (23 samples, 0.02%)</title><rect x="56.9190%" y="645" width="0.0231%" height="15" fill="rgb(253,176,7)" fg:x="56590" fg:w="23"/><text x="57.1690%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="56.9482%" y="661" width="0.0121%" height="15" fill="rgb(206,166,28)" fg:x="56619" fg:w="12"/><text x="57.1982%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="56.9502%" y="645" width="0.0101%" height="15" fill="rgb(241,53,51)" fg:x="56621" fg:w="10"/><text x="57.2002%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (23 samples, 0.02%)</title><rect x="56.9421%" y="725" width="0.0231%" height="15" fill="rgb(249,112,30)" fg:x="56613" fg:w="23"/><text x="57.1921%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (23 samples, 0.02%)</title><rect x="56.9421%" y="709" width="0.0231%" height="15" fill="rgb(217,85,30)" fg:x="56613" fg:w="23"/><text x="57.1921%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (20 samples, 0.02%)</title><rect x="56.9451%" y="693" width="0.0201%" height="15" fill="rgb(233,49,7)" fg:x="56616" fg:w="20"/><text x="57.1951%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="56.9451%" y="677" width="0.0201%" height="15" fill="rgb(234,109,9)" fg:x="56616" fg:w="20"/><text x="57.1951%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="56.9673%" y="677" width="0.0111%" height="15" fill="rgb(253,95,22)" fg:x="56638" fg:w="11"/><text x="57.2173%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (19 samples, 0.02%)</title><rect x="56.9783%" y="645" width="0.0191%" height="15" fill="rgb(233,176,25)" fg:x="56649" fg:w="19"/><text x="57.2283%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="56.9874%" y="629" width="0.0101%" height="15" fill="rgb(236,33,39)" fg:x="56658" fg:w="10"/><text x="57.2374%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="56.9874%" y="613" width="0.0101%" height="15" fill="rgb(223,226,42)" fg:x="56658" fg:w="10"/><text x="57.2374%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::release (2,105 samples, 2.12%)</title><rect x="54.8903%" y="757" width="2.1172%" height="15" fill="rgb(216,99,33)" fg:x="54573" fg:w="2105"/><text x="55.1403%" y="767.50">b..</text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::release (2,104 samples, 2.12%)</title><rect x="54.8913%" y="741" width="2.1162%" height="15" fill="rgb(235,84,23)" fg:x="54574" fg:w="2104"/><text x="55.1413%" y="751.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (42 samples, 0.04%)</title><rect x="56.9653%" y="725" width="0.0422%" height="15" fill="rgb(232,2,27)" fg:x="56636" fg:w="42"/><text x="57.2153%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="56.9653%" y="709" width="0.0422%" height="15" fill="rgb(241,23,22)" fg:x="56636" fg:w="42"/><text x="57.2153%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="56.9653%" y="693" width="0.0422%" height="15" fill="rgb(211,73,27)" fg:x="56636" fg:w="42"/><text x="57.2153%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="56.9783%" y="677" width="0.0292%" height="15" fill="rgb(235,109,49)" fg:x="56649" fg:w="29"/><text x="57.2283%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="56.9783%" y="661" width="0.0292%" height="15" fill="rgb(230,99,29)" fg:x="56649" fg:w="29"/><text x="57.2283%" y="671.50"></text></g><g><title>core::mem::drop (10 samples, 0.01%)</title><rect x="56.9974%" y="645" width="0.0101%" height="15" fill="rgb(245,199,7)" fg:x="56668" fg:w="10"/><text x="57.2474%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (10 samples, 0.01%)</title><rect x="56.9974%" y="629" width="0.0101%" height="15" fill="rgb(217,179,10)" fg:x="56668" fg:w="10"/><text x="57.2474%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="56.9974%" y="613" width="0.0101%" height="15" fill="rgb(254,99,47)" fg:x="56668" fg:w="10"/><text x="57.2474%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (10 samples, 0.01%)</title><rect x="56.9974%" y="597" width="0.0101%" height="15" fill="rgb(251,121,7)" fg:x="56668" fg:w="10"/><text x="57.2474%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="56.9974%" y="581" width="0.0101%" height="15" fill="rgb(250,177,26)" fg:x="56668" fg:w="10"/><text x="57.2474%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="57.0699%" y="629" width="0.0201%" height="15" fill="rgb(232,88,15)" fg:x="56740" fg:w="20"/><text x="57.3199%" y="639.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::add_borrow (19 samples, 0.02%)</title><rect x="57.0980%" y="597" width="0.0191%" height="15" fill="rgb(251,54,54)" fg:x="56768" fg:w="19"/><text x="57.3480%" y="607.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_weak_borrow (19 samples, 0.02%)</title><rect x="57.0980%" y="581" width="0.0191%" height="15" fill="rgb(208,177,15)" fg:x="56768" fg:w="19"/><text x="57.3480%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_path (19 samples, 0.02%)</title><rect x="57.0980%" y="565" width="0.0191%" height="15" fill="rgb(205,97,32)" fg:x="56768" fg:w="19"/><text x="57.3480%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::add_edge (19 samples, 0.02%)</title><rect x="57.0980%" y="549" width="0.0191%" height="15" fill="rgb(217,192,13)" fg:x="56768" fg:w="19"/><text x="57.3480%" y="559.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (11 samples, 0.01%)</title><rect x="57.1061%" y="533" width="0.0111%" height="15" fill="rgb(215,163,41)" fg:x="56776" fg:w="11"/><text x="57.3561%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (11 samples, 0.01%)</title><rect x="57.1061%" y="517" width="0.0111%" height="15" fill="rgb(246,83,29)" fg:x="56776" fg:w="11"/><text x="57.3561%" y="527.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::call::_{{closure}} (26 samples, 0.03%)</title><rect x="57.0930%" y="613" width="0.0262%" height="15" fill="rgb(219,2,45)" fg:x="56763" fg:w="26"/><text x="57.3430%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.07%)</title><rect x="57.0538%" y="661" width="0.0714%" height="15" fill="rgb(242,215,33)" fg:x="56724" fg:w="71"/><text x="57.3038%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.06%)</title><rect x="57.0618%" y="645" width="0.0634%" height="15" fill="rgb(217,1,6)" fg:x="56732" fg:w="63"/><text x="57.3118%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (35 samples, 0.04%)</title><rect x="57.0900%" y="629" width="0.0352%" height="15" fill="rgb(207,85,52)" fg:x="56760" fg:w="35"/><text x="57.3400%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (78 samples, 0.08%)</title><rect x="57.0487%" y="677" width="0.0785%" height="15" fill="rgb(231,171,19)" fg:x="56719" fg:w="78"/><text x="57.2987%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (114 samples, 0.11%)</title><rect x="57.0176%" y="693" width="0.1147%" height="15" fill="rgb(207,128,4)" fg:x="56688" fg:w="114"/><text x="57.2676%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="57.1594%" y="629" width="0.0201%" height="15" fill="rgb(219,208,4)" fg:x="56829" fg:w="20"/><text x="57.4094%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="57.1604%" y="613" width="0.0191%" height="15" fill="rgb(235,161,42)" fg:x="56830" fg:w="19"/><text x="57.4104%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (12 samples, 0.01%)</title><rect x="57.1885%" y="613" width="0.0121%" height="15" fill="rgb(247,218,18)" fg:x="56858" fg:w="12"/><text x="57.4385%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (38 samples, 0.04%)</title><rect x="57.1795%" y="629" width="0.0382%" height="15" fill="rgb(232,114,51)" fg:x="56849" fg:w="38"/><text x="57.4295%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::repeat (17 samples, 0.02%)</title><rect x="57.2006%" y="613" width="0.0171%" height="15" fill="rgb(222,95,3)" fg:x="56870" fg:w="17"/><text x="57.4506%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (209 samples, 0.21%)</title><rect x="57.0125%" y="709" width="0.2102%" height="15" fill="rgb(240,65,29)" fg:x="56683" fg:w="209"/><text x="57.2625%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (82 samples, 0.08%)</title><rect x="57.1403%" y="693" width="0.0825%" height="15" fill="rgb(249,209,20)" fg:x="56810" fg:w="82"/><text x="57.3903%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.08%)</title><rect x="57.1413%" y="677" width="0.0815%" height="15" fill="rgb(241,48,37)" fg:x="56811" fg:w="81"/><text x="57.3913%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 0.08%)</title><rect x="57.1433%" y="661" width="0.0795%" height="15" fill="rgb(230,140,42)" fg:x="56813" fg:w="79"/><text x="57.3933%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.08%)</title><rect x="57.1453%" y="645" width="0.0774%" height="15" fill="rgb(230,176,45)" fg:x="56815" fg:w="77"/><text x="57.3953%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (218 samples, 0.22%)</title><rect x="57.0115%" y="725" width="0.2193%" height="15" fill="rgb(245,112,21)" fg:x="56682" fg:w="218"/><text x="57.2615%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (224 samples, 0.23%)</title><rect x="57.0075%" y="741" width="0.2253%" height="15" fill="rgb(207,183,35)" fg:x="56678" fg:w="224"/><text x="57.2575%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (229 samples, 0.23%)</title><rect x="57.0075%" y="757" width="0.2303%" height="15" fill="rgb(227,44,33)" fg:x="56678" fg:w="229"/><text x="57.2575%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (19 samples, 0.02%)</title><rect x="57.2449%" y="757" width="0.0191%" height="15" fill="rgb(246,120,21)" fg:x="56914" fg:w="19"/><text x="57.4949%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (17 samples, 0.02%)</title><rect x="57.2469%" y="741" width="0.0171%" height="15" fill="rgb(235,57,52)" fg:x="56916" fg:w="17"/><text x="57.4969%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="57.2469%" y="725" width="0.0171%" height="15" fill="rgb(238,84,10)" fg:x="56916" fg:w="17"/><text x="57.4969%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="57.2690%" y="709" width="0.0131%" height="15" fill="rgb(251,200,32)" fg:x="56938" fg:w="13"/><text x="57.5190%" y="719.50"></text></g><g><title>core::mem::take (12 samples, 0.01%)</title><rect x="57.2700%" y="693" width="0.0121%" height="15" fill="rgb(247,159,13)" fg:x="56939" fg:w="12"/><text x="57.5200%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (12 samples, 0.01%)</title><rect x="57.2821%" y="661" width="0.0121%" height="15" fill="rgb(238,64,4)" fg:x="56951" fg:w="12"/><text x="57.5321%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (12 samples, 0.01%)</title><rect x="57.2821%" y="645" width="0.0121%" height="15" fill="rgb(221,131,51)" fg:x="56951" fg:w="12"/><text x="57.5321%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (33 samples, 0.03%)</title><rect x="57.2640%" y="757" width="0.0332%" height="15" fill="rgb(242,5,29)" fg:x="56933" fg:w="33"/><text x="57.5140%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (33 samples, 0.03%)</title><rect x="57.2640%" y="741" width="0.0332%" height="15" fill="rgb(214,130,32)" fg:x="56933" fg:w="33"/><text x="57.5140%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="57.2640%" y="725" width="0.0332%" height="15" fill="rgb(244,210,16)" fg:x="56933" fg:w="33"/><text x="57.5140%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (15 samples, 0.02%)</title><rect x="57.2821%" y="709" width="0.0151%" height="15" fill="rgb(234,48,26)" fg:x="56951" fg:w="15"/><text x="57.5321%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="57.2821%" y="693" width="0.0151%" height="15" fill="rgb(231,82,38)" fg:x="56951" fg:w="15"/><text x="57.5321%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (15 samples, 0.02%)</title><rect x="57.2821%" y="677" width="0.0151%" height="15" fill="rgb(254,128,41)" fg:x="56951" fg:w="15"/><text x="57.5321%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="57.3103%" y="709" width="0.0101%" height="15" fill="rgb(212,73,49)" fg:x="56979" fg:w="10"/><text x="57.5603%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (46 samples, 0.05%)</title><rect x="57.2972%" y="757" width="0.0463%" height="15" fill="rgb(205,62,54)" fg:x="56966" fg:w="46"/><text x="57.5472%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (37 samples, 0.04%)</title><rect x="57.3062%" y="741" width="0.0372%" height="15" fill="rgb(228,0,8)" fg:x="56975" fg:w="37"/><text x="57.5562%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="57.3062%" y="725" width="0.0372%" height="15" fill="rgb(251,28,17)" fg:x="56975" fg:w="37"/><text x="57.5562%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23 samples, 0.02%)</title><rect x="57.3203%" y="709" width="0.0231%" height="15" fill="rgb(238,105,27)" fg:x="56989" fg:w="23"/><text x="57.5703%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (12 samples, 0.01%)</title><rect x="57.3605%" y="725" width="0.0121%" height="15" fill="rgb(237,216,33)" fg:x="57029" fg:w="12"/><text x="57.6105%" y="735.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::call (3,172 samples, 3.19%)</title><rect x="54.1862%" y="773" width="3.1904%" height="15" fill="rgb(229,228,25)" fg:x="53873" fg:w="3172"/><text x="54.4362%" y="783.50">byt..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (33 samples, 0.03%)</title><rect x="57.3434%" y="757" width="0.0332%" height="15" fill="rgb(233,75,23)" fg:x="57012" fg:w="33"/><text x="57.5934%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (30 samples, 0.03%)</title><rect x="57.3465%" y="741" width="0.0302%" height="15" fill="rgb(231,207,16)" fg:x="57015" fg:w="30"/><text x="57.5965%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.01%)</title><rect x="57.3927%" y="693" width="0.0141%" height="15" fill="rgb(231,191,45)" fg:x="57061" fg:w="14"/><text x="57.6427%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="57.3947%" y="677" width="0.0121%" height="15" fill="rgb(224,133,17)" fg:x="57063" fg:w="12"/><text x="57.6447%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (10 samples, 0.01%)</title><rect x="57.4068%" y="693" width="0.0101%" height="15" fill="rgb(209,178,27)" fg:x="57075" fg:w="10"/><text x="57.6568%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 0.05%)</title><rect x="57.3766%" y="773" width="0.0493%" height="15" fill="rgb(218,37,11)" fg:x="57045" fg:w="49"/><text x="57.6266%" y="783.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandle as core::cmp::PartialEq&gt;::eq (49 samples, 0.05%)</title><rect x="57.3766%" y="757" width="0.0493%" height="15" fill="rgb(251,226,25)" fg:x="57045" fg:w="49"/><text x="57.6266%" y="767.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (42 samples, 0.04%)</title><rect x="57.3837%" y="741" width="0.0422%" height="15" fill="rgb(209,222,27)" fg:x="57052" fg:w="42"/><text x="57.6337%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (35 samples, 0.04%)</title><rect x="57.3907%" y="725" width="0.0352%" height="15" fill="rgb(238,22,21)" fg:x="57059" fg:w="35"/><text x="57.6407%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (35 samples, 0.04%)</title><rect x="57.3907%" y="709" width="0.0352%" height="15" fill="rgb(233,161,25)" fg:x="57059" fg:w="35"/><text x="57.6407%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (16 samples, 0.02%)</title><rect x="57.4501%" y="565" width="0.0161%" height="15" fill="rgb(226,122,53)" fg:x="57118" fg:w="16"/><text x="57.7001%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (16 samples, 0.02%)</title><rect x="57.4501%" y="549" width="0.0161%" height="15" fill="rgb(220,123,17)" fg:x="57118" fg:w="16"/><text x="57.7001%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="57.4541%" y="533" width="0.0121%" height="15" fill="rgb(230,224,35)" fg:x="57122" fg:w="12"/><text x="57.7041%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (12 samples, 0.01%)</title><rect x="57.4541%" y="517" width="0.0121%" height="15" fill="rgb(246,83,8)" fg:x="57122" fg:w="12"/><text x="57.7041%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.01%)</title><rect x="57.4551%" y="501" width="0.0111%" height="15" fill="rgb(230,214,17)" fg:x="57123" fg:w="11"/><text x="57.7051%" y="511.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="57.4551%" y="485" width="0.0111%" height="15" fill="rgb(222,97,18)" fg:x="57123" fg:w="11"/><text x="57.7051%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (33 samples, 0.03%)</title><rect x="57.4480%" y="581" width="0.0332%" height="15" fill="rgb(206,79,1)" fg:x="57116" fg:w="33"/><text x="57.6980%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="57.4672%" y="565" width="0.0141%" height="15" fill="rgb(214,121,34)" fg:x="57135" fg:w="14"/><text x="57.7172%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.01%)</title><rect x="57.4692%" y="549" width="0.0121%" height="15" fill="rgb(249,199,46)" fg:x="57137" fg:w="12"/><text x="57.7192%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="57.4692%" y="533" width="0.0121%" height="15" fill="rgb(214,222,46)" fg:x="57137" fg:w="12"/><text x="57.7192%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (17 samples, 0.02%)</title><rect x="57.4822%" y="533" width="0.0171%" height="15" fill="rgb(248,168,30)" fg:x="57150" fg:w="17"/><text x="57.7322%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (64 samples, 0.06%)</title><rect x="57.4360%" y="693" width="0.0644%" height="15" fill="rgb(226,14,28)" fg:x="57104" fg:w="64"/><text x="57.6860%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (62 samples, 0.06%)</title><rect x="57.4380%" y="677" width="0.0624%" height="15" fill="rgb(253,123,1)" fg:x="57106" fg:w="62"/><text x="57.6880%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (54 samples, 0.05%)</title><rect x="57.4460%" y="661" width="0.0543%" height="15" fill="rgb(225,24,42)" fg:x="57114" fg:w="54"/><text x="57.6960%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (53 samples, 0.05%)</title><rect x="57.4470%" y="645" width="0.0533%" height="15" fill="rgb(216,161,37)" fg:x="57115" fg:w="53"/><text x="57.6970%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (53 samples, 0.05%)</title><rect x="57.4470%" y="629" width="0.0533%" height="15" fill="rgb(251,164,26)" fg:x="57115" fg:w="53"/><text x="57.6970%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (53 samples, 0.05%)</title><rect x="57.4470%" y="613" width="0.0533%" height="15" fill="rgb(219,177,3)" fg:x="57115" fg:w="53"/><text x="57.6970%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (53 samples, 0.05%)</title><rect x="57.4470%" y="597" width="0.0533%" height="15" fill="rgb(222,65,0)" fg:x="57115" fg:w="53"/><text x="57.6970%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (19 samples, 0.02%)</title><rect x="57.4812%" y="581" width="0.0191%" height="15" fill="rgb(223,69,54)" fg:x="57149" fg:w="19"/><text x="57.7312%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (19 samples, 0.02%)</title><rect x="57.4812%" y="565" width="0.0191%" height="15" fill="rgb(235,30,27)" fg:x="57149" fg:w="19"/><text x="57.7312%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (18 samples, 0.02%)</title><rect x="57.4822%" y="549" width="0.0181%" height="15" fill="rgb(220,183,50)" fg:x="57150" fg:w="18"/><text x="57.7322%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (68 samples, 0.07%)</title><rect x="57.4330%" y="741" width="0.0684%" height="15" fill="rgb(248,198,15)" fg:x="57101" fg:w="68"/><text x="57.6830%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (67 samples, 0.07%)</title><rect x="57.4340%" y="725" width="0.0674%" height="15" fill="rgb(222,211,4)" fg:x="57102" fg:w="67"/><text x="57.6840%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.07%)</title><rect x="57.4350%" y="709" width="0.0664%" height="15" fill="rgb(214,102,34)" fg:x="57103" fg:w="66"/><text x="57.6850%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (74 samples, 0.07%)</title><rect x="57.4299%" y="757" width="0.0744%" height="15" fill="rgb(245,92,5)" fg:x="57098" fg:w="74"/><text x="57.6799%" y="767.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="57.5054%" y="741" width="0.0161%" height="15" fill="rgb(252,72,51)" fg:x="57173" fg:w="16"/><text x="57.7554%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.02%)</title><rect x="57.5959%" y="613" width="0.0151%" height="15" fill="rgb(252,208,19)" fg:x="57263" fg:w="15"/><text x="57.8459%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (32 samples, 0.03%)</title><rect x="57.5858%" y="629" width="0.0322%" height="15" fill="rgb(211,69,7)" fg:x="57253" fg:w="32"/><text x="57.8358%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="57.6321%" y="581" width="0.0111%" height="15" fill="rgb(211,27,16)" fg:x="57299" fg:w="11"/><text x="57.8821%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (34 samples, 0.03%)</title><rect x="57.6281%" y="597" width="0.0342%" height="15" fill="rgb(219,216,14)" fg:x="57295" fg:w="34"/><text x="57.8781%" y="607.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="57.6502%" y="581" width="0.0121%" height="15" fill="rgb(219,71,8)" fg:x="57317" fg:w="12"/><text x="57.9002%" y="591.50"></text></g><g><title>bytecode_verifier::reference_safety::call::_{{closure}} (43 samples, 0.04%)</title><rect x="57.6241%" y="613" width="0.0432%" height="15" fill="rgb(223,170,53)" fg:x="57291" fg:w="43"/><text x="57.8741%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (58 samples, 0.06%)</title><rect x="57.6180%" y="629" width="0.0583%" height="15" fill="rgb(246,21,26)" fg:x="57285" fg:w="58"/><text x="57.8680%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (110 samples, 0.11%)</title><rect x="57.5677%" y="677" width="0.1106%" height="15" fill="rgb(248,20,46)" fg:x="57235" fg:w="110"/><text x="57.8177%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::rfold (109 samples, 0.11%)</title><rect x="57.5687%" y="661" width="0.1096%" height="15" fill="rgb(252,94,11)" fg:x="57236" fg:w="109"/><text x="57.8187%" y="671.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (104 samples, 0.10%)</title><rect x="57.5738%" y="645" width="0.1046%" height="15" fill="rgb(236,163,8)" fg:x="57241" fg:w="104"/><text x="57.8238%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (121 samples, 0.12%)</title><rect x="57.5617%" y="693" width="0.1217%" height="15" fill="rgb(217,221,45)" fg:x="57229" fg:w="121"/><text x="57.8117%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (163 samples, 0.16%)</title><rect x="57.5275%" y="709" width="0.1639%" height="15" fill="rgb(238,38,17)" fg:x="57195" fg:w="163"/><text x="57.7775%" y="719.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="57.7206%" y="597" width="0.0151%" height="15" fill="rgb(242,210,23)" fg:x="57387" fg:w="15"/><text x="57.9706%" y="607.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="57.7186%" y="613" width="0.0191%" height="15" fill="rgb(250,86,53)" fg:x="57385" fg:w="19"/><text x="57.9686%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="57.7146%" y="645" width="0.0272%" height="15" fill="rgb(223,168,25)" fg:x="57381" fg:w="27"/><text x="57.9646%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="57.7176%" y="629" width="0.0241%" height="15" fill="rgb(251,189,4)" fg:x="57384" fg:w="24"/><text x="57.9676%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::new (13 samples, 0.01%)</title><rect x="57.7538%" y="629" width="0.0131%" height="15" fill="rgb(245,19,28)" fg:x="57420" fg:w="13"/><text x="58.0038%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (18 samples, 0.02%)</title><rect x="57.7669%" y="629" width="0.0181%" height="15" fill="rgb(207,10,34)" fg:x="57433" fg:w="18"/><text x="58.0169%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (73 samples, 0.07%)</title><rect x="57.7448%" y="645" width="0.0734%" height="15" fill="rgb(235,153,31)" fg:x="57411" fg:w="73"/><text x="57.9948%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::repeat (33 samples, 0.03%)</title><rect x="57.7850%" y="629" width="0.0332%" height="15" fill="rgb(228,72,37)" fg:x="57451" fg:w="33"/><text x="58.0350%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (396 samples, 0.40%)</title><rect x="57.4279%" y="773" width="0.3983%" height="15" fill="rgb(215,15,16)" fg:x="57096" fg:w="396"/><text x="57.6779%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (320 samples, 0.32%)</title><rect x="57.5044%" y="757" width="0.3219%" height="15" fill="rgb(250,119,29)" fg:x="57172" fg:w="320"/><text x="57.7544%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (303 samples, 0.30%)</title><rect x="57.5215%" y="741" width="0.3048%" height="15" fill="rgb(214,59,1)" fg:x="57189" fg:w="303"/><text x="57.7715%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (302 samples, 0.30%)</title><rect x="57.5225%" y="725" width="0.3038%" height="15" fill="rgb(223,109,25)" fg:x="57190" fg:w="302"/><text x="57.7725%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (125 samples, 0.13%)</title><rect x="57.7005%" y="709" width="0.1257%" height="15" fill="rgb(230,198,22)" fg:x="57367" fg:w="125"/><text x="57.9505%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (125 samples, 0.13%)</title><rect x="57.7005%" y="693" width="0.1257%" height="15" fill="rgb(245,184,46)" fg:x="57367" fg:w="125"/><text x="57.9505%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.12%)</title><rect x="57.7035%" y="677" width="0.1227%" height="15" fill="rgb(253,73,16)" fg:x="57370" fg:w="122"/><text x="57.9535%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (121 samples, 0.12%)</title><rect x="57.7045%" y="661" width="0.1217%" height="15" fill="rgb(206,94,45)" fg:x="57371" fg:w="121"/><text x="57.9545%" y="671.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="57.8534%" y="677" width="0.0111%" height="15" fill="rgb(236,83,27)" fg:x="57519" fg:w="11"/><text x="58.1034%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (25 samples, 0.03%)</title><rect x="57.8403%" y="725" width="0.0251%" height="15" fill="rgb(220,196,8)" fg:x="57506" fg:w="25"/><text x="58.0903%" y="735.50"></text></g><g><title>core::mem::take (19 samples, 0.02%)</title><rect x="57.8464%" y="709" width="0.0191%" height="15" fill="rgb(254,185,14)" fg:x="57512" fg:w="19"/><text x="58.0964%" y="719.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="57.8464%" y="693" width="0.0191%" height="15" fill="rgb(226,50,22)" fg:x="57512" fg:w="19"/><text x="58.0964%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="57.8343%" y="741" width="0.0493%" height="15" fill="rgb(253,147,0)" fg:x="57500" fg:w="49"/><text x="58.0843%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (18 samples, 0.02%)</title><rect x="57.8655%" y="725" width="0.0181%" height="15" fill="rgb(252,46,33)" fg:x="57531" fg:w="18"/><text x="58.1155%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="57.8655%" y="709" width="0.0181%" height="15" fill="rgb(242,22,54)" fg:x="57531" fg:w="18"/><text x="58.1155%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (16 samples, 0.02%)</title><rect x="57.8675%" y="693" width="0.0161%" height="15" fill="rgb(223,178,32)" fg:x="57533" fg:w="16"/><text x="58.1175%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (11 samples, 0.01%)</title><rect x="57.8725%" y="677" width="0.0111%" height="15" fill="rgb(214,106,53)" fg:x="57538" fg:w="11"/><text x="58.1225%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.01%)</title><rect x="57.8725%" y="661" width="0.0111%" height="15" fill="rgb(232,65,50)" fg:x="57538" fg:w="11"/><text x="58.1225%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (50 samples, 0.05%)</title><rect x="57.8343%" y="773" width="0.0503%" height="15" fill="rgb(231,110,28)" fg:x="57500" fg:w="50"/><text x="58.0843%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (50 samples, 0.05%)</title><rect x="57.8343%" y="757" width="0.0503%" height="15" fill="rgb(216,71,40)" fg:x="57500" fg:w="50"/><text x="58.0843%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="57.8956%" y="693" width="0.0121%" height="15" fill="rgb(229,89,53)" fg:x="57561" fg:w="12"/><text x="58.1456%" y="703.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (23 samples, 0.02%)</title><rect x="57.8906%" y="725" width="0.0231%" height="15" fill="rgb(210,124,14)" fg:x="57556" fg:w="23"/><text x="58.1406%" y="735.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (21 samples, 0.02%)</title><rect x="57.8926%" y="709" width="0.0211%" height="15" fill="rgb(236,213,6)" fg:x="57558" fg:w="21"/><text x="58.1426%" y="719.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (29 samples, 0.03%)</title><rect x="57.8876%" y="741" width="0.0292%" height="15" fill="rgb(228,41,5)" fg:x="57553" fg:w="29"/><text x="58.1376%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (12 samples, 0.01%)</title><rect x="57.9228%" y="709" width="0.0121%" height="15" fill="rgb(221,167,25)" fg:x="57588" fg:w="12"/><text x="58.1728%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="57.9228%" y="693" width="0.0121%" height="15" fill="rgb(228,144,37)" fg:x="57588" fg:w="12"/><text x="58.1728%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (54 samples, 0.05%)</title><rect x="57.8846%" y="773" width="0.0543%" height="15" fill="rgb(227,189,38)" fg:x="57550" fg:w="54"/><text x="58.1346%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="57.8846%" y="757" width="0.0543%" height="15" fill="rgb(218,8,2)" fg:x="57550" fg:w="54"/><text x="58.1346%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,alloc::alloc::Global&gt;&gt; (22 samples, 0.02%)</title><rect x="57.9168%" y="741" width="0.0221%" height="15" fill="rgb(209,61,28)" fg:x="57582" fg:w="22"/><text x="58.1668%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="57.9178%" y="725" width="0.0211%" height="15" fill="rgb(233,140,39)" fg:x="57583" fg:w="21"/><text x="58.1678%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (26 samples, 0.03%)</title><rect x="57.9389%" y="773" width="0.0262%" height="15" fill="rgb(251,66,48)" fg:x="57604" fg:w="26"/><text x="58.1889%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="57.9419%" y="757" width="0.0231%" height="15" fill="rgb(210,44,45)" fg:x="57607" fg:w="23"/><text x="58.1919%" y="767.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_def_at (19 samples, 0.02%)</title><rect x="57.9650%" y="773" width="0.0191%" height="15" fill="rgb(214,136,46)" fg:x="57630" fg:w="19"/><text x="58.2150%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_def_at (19 samples, 0.02%)</title><rect x="57.9650%" y="757" width="0.0191%" height="15" fill="rgb(207,130,50)" fg:x="57630" fg:w="19"/><text x="58.2150%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="58.0083%" y="725" width="0.0181%" height="15" fill="rgb(228,102,49)" fg:x="57673" fg:w="18"/><text x="58.2583%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24 samples, 0.02%)</title><rect x="58.0053%" y="741" width="0.0241%" height="15" fill="rgb(253,55,1)" fg:x="57670" fg:w="24"/><text x="58.2553%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (44 samples, 0.04%)</title><rect x="57.9872%" y="773" width="0.0443%" height="15" fill="rgb(238,222,9)" fg:x="57652" fg:w="44"/><text x="58.2372%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (32 samples, 0.03%)</title><rect x="57.9992%" y="757" width="0.0322%" height="15" fill="rgb(246,99,6)" fg:x="57664" fg:w="32"/><text x="58.2492%" y="767.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (28 samples, 0.03%)</title><rect x="58.0415%" y="709" width="0.0282%" height="15" fill="rgb(219,110,26)" fg:x="57706" fg:w="28"/><text x="58.2915%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (25 samples, 0.03%)</title><rect x="58.0445%" y="693" width="0.0251%" height="15" fill="rgb(239,160,33)" fg:x="57709" fg:w="25"/><text x="58.2945%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u16 (25 samples, 0.03%)</title><rect x="58.0445%" y="677" width="0.0251%" height="15" fill="rgb(220,202,23)" fg:x="57709" fg:w="25"/><text x="58.2945%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="58.0465%" y="661" width="0.0231%" height="15" fill="rgb(208,80,26)" fg:x="57711" fg:w="23"/><text x="58.2965%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="58.0475%" y="645" width="0.0221%" height="15" fill="rgb(243,85,7)" fg:x="57712" fg:w="22"/><text x="58.2975%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.02%)</title><rect x="58.0475%" y="629" width="0.0221%" height="15" fill="rgb(228,77,47)" fg:x="57712" fg:w="22"/><text x="58.2975%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (19 samples, 0.02%)</title><rect x="58.0505%" y="613" width="0.0191%" height="15" fill="rgb(212,226,8)" fg:x="57715" fg:w="19"/><text x="58.3005%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="58.0898%" y="645" width="0.0101%" height="15" fill="rgb(241,120,54)" fg:x="57754" fg:w="10"/><text x="58.3398%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.02%)</title><rect x="58.0807%" y="661" width="0.0211%" height="15" fill="rgb(226,80,16)" fg:x="57745" fg:w="21"/><text x="58.3307%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.02%)</title><rect x="58.1270%" y="645" width="0.0171%" height="15" fill="rgb(240,76,13)" fg:x="57791" fg:w="17"/><text x="58.3770%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (78 samples, 0.08%)</title><rect x="58.0696%" y="709" width="0.0785%" height="15" fill="rgb(252,74,8)" fg:x="57734" fg:w="78"/><text x="58.3196%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (76 samples, 0.08%)</title><rect x="58.0717%" y="693" width="0.0764%" height="15" fill="rgb(244,155,2)" fg:x="57736" fg:w="76"/><text x="58.3217%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (75 samples, 0.08%)</title><rect x="58.0727%" y="677" width="0.0754%" height="15" fill="rgb(215,81,35)" fg:x="57737" fg:w="75"/><text x="58.3227%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (46 samples, 0.05%)</title><rect x="58.1018%" y="661" width="0.0463%" height="15" fill="rgb(206,55,2)" fg:x="57766" fg:w="46"/><text x="58.3518%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (138 samples, 0.14%)</title><rect x="58.0375%" y="725" width="0.1388%" height="15" fill="rgb(231,2,34)" fg:x="57702" fg:w="138"/><text x="58.2875%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (28 samples, 0.03%)</title><rect x="58.1481%" y="709" width="0.0282%" height="15" fill="rgb(242,176,48)" fg:x="57812" fg:w="28"/><text x="58.3981%" y="719.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.02%)</title><rect x="58.1612%" y="693" width="0.0151%" height="15" fill="rgb(249,31,36)" fg:x="57825" fg:w="15"/><text x="58.4112%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="58.2014%" y="661" width="0.0151%" height="15" fill="rgb(205,18,17)" fg:x="57865" fg:w="15"/><text x="58.4514%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="58.1954%" y="677" width="0.0362%" height="15" fill="rgb(254,130,5)" fg:x="57859" fg:w="36"/><text x="58.4454%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (14 samples, 0.01%)</title><rect x="58.2175%" y="661" width="0.0141%" height="15" fill="rgb(229,42,45)" fg:x="57881" fg:w="14"/><text x="58.4675%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.01%)</title><rect x="58.2195%" y="645" width="0.0121%" height="15" fill="rgb(245,95,25)" fg:x="57883" fg:w="12"/><text x="58.4695%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.05%)</title><rect x="58.1944%" y="693" width="0.0453%" height="15" fill="rgb(249,193,38)" fg:x="57858" fg:w="45"/><text x="58.4444%" y="703.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.01%)</title><rect x="58.2799%" y="645" width="0.0141%" height="15" fill="rgb(241,140,43)" fg:x="57943" fg:w="14"/><text x="58.5299%" y="655.50"></text></g><g><title>core::cmp::Ord::min (13 samples, 0.01%)</title><rect x="58.2809%" y="629" width="0.0131%" height="15" fill="rgb(245,78,48)" fg:x="57944" fg:w="13"/><text x="58.5309%" y="639.50"></text></g><g><title>core::cmp::min_by (13 samples, 0.01%)</title><rect x="58.2809%" y="613" width="0.0131%" height="15" fill="rgb(214,92,39)" fg:x="57944" fg:w="13"/><text x="58.5309%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.02%)</title><rect x="58.2939%" y="645" width="0.0161%" height="15" fill="rgb(211,189,14)" fg:x="57957" fg:w="16"/><text x="58.5439%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="58.2980%" y="629" width="0.0121%" height="15" fill="rgb(218,7,24)" fg:x="57961" fg:w="12"/><text x="58.5480%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (15 samples, 0.02%)</title><rect x="58.3120%" y="629" width="0.0151%" height="15" fill="rgb(224,200,49)" fg:x="57975" fg:w="15"/><text x="58.5620%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (94 samples, 0.09%)</title><rect x="58.2557%" y="693" width="0.0945%" height="15" fill="rgb(218,210,14)" fg:x="57919" fg:w="94"/><text x="58.5057%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (92 samples, 0.09%)</title><rect x="58.2577%" y="677" width="0.0925%" height="15" fill="rgb(234,142,31)" fg:x="57921" fg:w="92"/><text x="58.5077%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (87 samples, 0.09%)</title><rect x="58.2628%" y="661" width="0.0875%" height="15" fill="rgb(227,165,2)" fg:x="57926" fg:w="87"/><text x="58.5128%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (40 samples, 0.04%)</title><rect x="58.3100%" y="645" width="0.0402%" height="15" fill="rgb(232,44,46)" fg:x="57973" fg:w="40"/><text x="58.5600%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.02%)</title><rect x="58.3332%" y="629" width="0.0171%" height="15" fill="rgb(236,149,47)" fg:x="57996" fg:w="17"/><text x="58.5832%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (15 samples, 0.02%)</title><rect x="58.3352%" y="613" width="0.0151%" height="15" fill="rgb(227,45,31)" fg:x="57998" fg:w="15"/><text x="58.5852%" y="623.50"></text></g><g><title>bytecode_verifier::reference_safety::call (4,256 samples, 4.28%)</title><rect x="54.0705%" y="789" width="4.2807%" height="15" fill="rgb(240,176,51)" fg:x="53758" fg:w="4256"/><text x="54.3205%" y="799.50">bytec..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (318 samples, 0.32%)</title><rect x="58.0314%" y="773" width="0.3198%" height="15" fill="rgb(249,146,41)" fg:x="57696" fg:w="318"/><text x="58.2814%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (317 samples, 0.32%)</title><rect x="58.0324%" y="757" width="0.3188%" height="15" fill="rgb(213,208,4)" fg:x="57697" fg:w="317"/><text x="58.2824%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (316 samples, 0.32%)</title><rect x="58.0334%" y="741" width="0.3178%" height="15" fill="rgb(245,84,36)" fg:x="57698" fg:w="316"/><text x="58.2834%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (174 samples, 0.18%)</title><rect x="58.1763%" y="725" width="0.1750%" height="15" fill="rgb(254,84,18)" fg:x="57840" fg:w="174"/><text x="58.4263%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (166 samples, 0.17%)</title><rect x="58.1843%" y="709" width="0.1670%" height="15" fill="rgb(225,38,54)" fg:x="57848" fg:w="166"/><text x="58.4343%" y="719.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::constant_at (16 samples, 0.02%)</title><rect x="58.3694%" y="789" width="0.0161%" height="15" fill="rgb(246,50,30)" fg:x="58032" fg:w="16"/><text x="58.6194%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (13 samples, 0.01%)</title><rect x="58.3724%" y="773" width="0.0131%" height="15" fill="rgb(246,148,9)" fg:x="58035" fg:w="13"/><text x="58.6224%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="58.4166%" y="725" width="0.0131%" height="15" fill="rgb(223,75,4)" fg:x="58079" fg:w="13"/><text x="58.6666%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.03%)</title><rect x="58.4126%" y="741" width="0.0251%" height="15" fill="rgb(239,148,41)" fg:x="58075" fg:w="25"/><text x="58.6626%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (38 samples, 0.04%)</title><rect x="58.4116%" y="757" width="0.0382%" height="15" fill="rgb(205,195,3)" fg:x="58074" fg:w="38"/><text x="58.6616%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.01%)</title><rect x="58.4378%" y="741" width="0.0121%" height="15" fill="rgb(254,161,1)" fg:x="58100" fg:w="12"/><text x="58.6878%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (64 samples, 0.06%)</title><rect x="58.3895%" y="789" width="0.0644%" height="15" fill="rgb(211,229,8)" fg:x="58052" fg:w="64"/><text x="58.6395%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (52 samples, 0.05%)</title><rect x="58.4016%" y="773" width="0.0523%" height="15" fill="rgb(220,97,9)" fg:x="58064" fg:w="52"/><text x="58.6516%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="58.4579%" y="741" width="0.0111%" height="15" fill="rgb(240,218,8)" fg:x="58120" fg:w="11"/><text x="58.7079%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_instantiation_at (17 samples, 0.02%)</title><rect x="58.4539%" y="789" width="0.0171%" height="15" fill="rgb(250,44,0)" fg:x="58116" fg:w="17"/><text x="58.7039%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_instantiation_at (15 samples, 0.02%)</title><rect x="58.4559%" y="773" width="0.0151%" height="15" fill="rgb(236,41,53)" fg:x="58118" fg:w="15"/><text x="58.7059%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.02%)</title><rect x="58.4559%" y="757" width="0.0151%" height="15" fill="rgb(218,227,13)" fg:x="58118" fg:w="15"/><text x="58.7059%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::execute_inner (13,775 samples, 13.86%)</title><rect x="44.6189%" y="805" width="13.8551%" height="15" fill="rgb(217,94,32)" fg:x="44361" fg:w="13775"/><text x="44.8689%" y="815.50">bytecode_verifier::re..</text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as bytecode_verifier::absint::AbstractDomain&gt;::join (14 samples, 0.01%)</title><rect x="58.4750%" y="773" width="0.0141%" height="15" fill="rgb(213,217,12)" fg:x="58137" fg:w="14"/><text x="58.7250%" y="783.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::join_ (14 samples, 0.01%)</title><rect x="58.4750%" y="757" width="0.0141%" height="15" fill="rgb(229,13,46)" fg:x="58137" fg:w="14"/><text x="58.7250%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="58.4931%" y="581" width="0.0111%" height="15" fill="rgb(243,139,5)" fg:x="58155" fg:w="11"/><text x="58.7431%" y="591.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdge&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="58.4921%" y="597" width="0.0131%" height="15" fill="rgb(249,38,45)" fg:x="58154" fg:w="13"/><text x="58.7421%" y="607.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="773" width="0.0392%" height="15" fill="rgb(216,70,11)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="783.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="757" width="0.0392%" height="15" fill="rgb(253,101,25)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="741" width="0.0392%" height="15" fill="rgb(207,197,30)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (39 samples, 0.04%)</title><rect x="58.4891%" y="725" width="0.0392%" height="15" fill="rgb(238,87,13)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="735.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="709" width="0.0392%" height="15" fill="rgb(215,155,8)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="693" width="0.0392%" height="15" fill="rgb(239,166,38)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="677" width="0.0392%" height="15" fill="rgb(240,194,35)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (39 samples, 0.04%)</title><rect x="58.4891%" y="661" width="0.0392%" height="15" fill="rgb(219,10,44)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="645" width="0.0392%" height="15" fill="rgb(251,220,35)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="58.4891%" y="629" width="0.0392%" height="15" fill="rgb(218,117,13)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (39 samples, 0.04%)</title><rect x="58.4891%" y="613" width="0.0392%" height="15" fill="rgb(221,213,40)" fg:x="58151" fg:w="39"/><text x="58.7391%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="58.5283%" y="661" width="0.0131%" height="15" fill="rgb(251,224,35)" fg:x="58190" fg:w="13"/><text x="58.7783%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="58.5283%" y="645" width="0.0131%" height="15" fill="rgb(241,33,39)" fg:x="58190" fg:w="13"/><text x="58.7783%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.01%)</title><rect x="58.5283%" y="629" width="0.0131%" height="15" fill="rgb(222,74,17)" fg:x="58190" fg:w="13"/><text x="58.7783%" y="639.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="58.5283%" y="725" width="0.0332%" height="15" fill="rgb(225,103,0)" fg:x="58190" fg:w="33"/><text x="58.7783%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="58.5283%" y="709" width="0.0332%" height="15" fill="rgb(240,0,12)" fg:x="58190" fg:w="33"/><text x="58.7783%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (33 samples, 0.03%)</title><rect x="58.5283%" y="693" width="0.0332%" height="15" fill="rgb(233,213,37)" fg:x="58190" fg:w="33"/><text x="58.7783%" y="703.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="58.5283%" y="677" width="0.0332%" height="15" fill="rgb(225,84,52)" fg:x="58190" fg:w="33"/><text x="58.7783%" y="687.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="58.5414%" y="661" width="0.0201%" height="15" fill="rgb(247,160,51)" fg:x="58203" fg:w="20"/><text x="58.7914%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="58.5414%" y="645" width="0.0201%" height="15" fill="rgb(244,60,51)" fg:x="58203" fg:w="20"/><text x="58.7914%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 0.02%)</title><rect x="58.5414%" y="629" width="0.0201%" height="15" fill="rgb(233,114,7)" fg:x="58203" fg:w="20"/><text x="58.7914%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (10 samples, 0.01%)</title><rect x="58.5615%" y="645" width="0.0101%" height="15" fill="rgb(246,136,16)" fg:x="58223" fg:w="10"/><text x="58.8115%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="58.5615%" y="629" width="0.0101%" height="15" fill="rgb(243,114,45)" fg:x="58223" fg:w="10"/><text x="58.8115%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (17 samples, 0.02%)</title><rect x="58.5715%" y="645" width="0.0171%" height="15" fill="rgb(247,183,43)" fg:x="58233" fg:w="17"/><text x="58.8215%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (17 samples, 0.02%)</title><rect x="58.5715%" y="629" width="0.0171%" height="15" fill="rgb(251,210,42)" fg:x="58233" fg:w="17"/><text x="58.8215%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (48 samples, 0.05%)</title><rect x="58.5615%" y="725" width="0.0483%" height="15" fill="rgb(221,88,35)" fg:x="58223" fg:w="48"/><text x="58.8115%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (48 samples, 0.05%)</title><rect x="58.5615%" y="709" width="0.0483%" height="15" fill="rgb(242,21,20)" fg:x="58223" fg:w="48"/><text x="58.8115%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (48 samples, 0.05%)</title><rect x="58.5615%" y="693" width="0.0483%" height="15" fill="rgb(233,226,36)" fg:x="58223" fg:w="48"/><text x="58.8115%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (48 samples, 0.05%)</title><rect x="58.5615%" y="677" width="0.0483%" height="15" fill="rgb(243,189,34)" fg:x="58223" fg:w="48"/><text x="58.8115%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (48 samples, 0.05%)</title><rect x="58.5615%" y="661" width="0.0483%" height="15" fill="rgb(207,145,50)" fg:x="58223" fg:w="48"/><text x="58.8115%" y="671.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (21 samples, 0.02%)</title><rect x="58.5886%" y="645" width="0.0211%" height="15" fill="rgb(242,1,50)" fg:x="58250" fg:w="21"/><text x="58.8386%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (21 samples, 0.02%)</title><rect x="58.6098%" y="709" width="0.0211%" height="15" fill="rgb(231,65,32)" fg:x="58271" fg:w="21"/><text x="58.8598%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (20 samples, 0.02%)</title><rect x="58.6108%" y="693" width="0.0201%" height="15" fill="rgb(208,68,49)" fg:x="58272" fg:w="20"/><text x="58.8608%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (20 samples, 0.02%)</title><rect x="58.6108%" y="677" width="0.0201%" height="15" fill="rgb(253,54,49)" fg:x="58272" fg:w="20"/><text x="58.8608%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="58.6631%" y="613" width="0.0141%" height="15" fill="rgb(245,186,24)" fg:x="58324" fg:w="14"/><text x="58.9131%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (16 samples, 0.02%)</title><rect x="58.7194%" y="597" width="0.0161%" height="15" fill="rgb(209,2,41)" fg:x="58380" fg:w="16"/><text x="58.9694%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (34 samples, 0.03%)</title><rect x="58.7425%" y="597" width="0.0342%" height="15" fill="rgb(242,208,54)" fg:x="58403" fg:w="34"/><text x="58.9925%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (25 samples, 0.03%)</title><rect x="58.7516%" y="581" width="0.0251%" height="15" fill="rgb(225,9,51)" fg:x="58412" fg:w="25"/><text x="59.0016%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (19 samples, 0.02%)</title><rect x="58.7576%" y="565" width="0.0191%" height="15" fill="rgb(207,207,25)" fg:x="58418" fg:w="19"/><text x="59.0076%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (16 samples, 0.02%)</title><rect x="58.7606%" y="549" width="0.0161%" height="15" fill="rgb(253,96,18)" fg:x="58421" fg:w="16"/><text x="59.0106%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (19 samples, 0.02%)</title><rect x="58.8039%" y="581" width="0.0191%" height="15" fill="rgb(252,215,20)" fg:x="58464" fg:w="19"/><text x="59.0539%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (18 samples, 0.02%)</title><rect x="58.8049%" y="565" width="0.0181%" height="15" fill="rgb(245,227,26)" fg:x="58465" fg:w="18"/><text x="59.0549%" y="575.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="58.8059%" y="549" width="0.0171%" height="15" fill="rgb(241,208,0)" fg:x="58466" fg:w="17"/><text x="59.0559%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (137 samples, 0.14%)</title><rect x="58.6963%" y="613" width="0.1378%" height="15" fill="rgb(224,130,10)" fg:x="58357" fg:w="137"/><text x="58.9463%" y="623.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (57 samples, 0.06%)</title><rect x="58.7767%" y="597" width="0.0573%" height="15" fill="rgb(237,29,0)" fg:x="58437" fg:w="57"/><text x="59.0267%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (18 samples, 0.02%)</title><rect x="58.8401%" y="613" width="0.0181%" height="15" fill="rgb(219,27,41)" fg:x="58500" fg:w="18"/><text x="59.0901%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (16 samples, 0.02%)</title><rect x="58.8713%" y="597" width="0.0161%" height="15" fill="rgb(245,101,19)" fg:x="58531" fg:w="16"/><text x="59.1213%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::choose_parent_kv (29 samples, 0.03%)</title><rect x="58.8652%" y="613" width="0.0292%" height="15" fill="rgb(243,44,37)" fg:x="58525" fg:w="29"/><text x="59.1152%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (263 samples, 0.26%)</title><rect x="58.6309%" y="709" width="0.2645%" height="15" fill="rgb(228,213,43)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (263 samples, 0.26%)</title><rect x="58.6309%" y="693" width="0.2645%" height="15" fill="rgb(219,163,21)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (263 samples, 0.26%)</title><rect x="58.6309%" y="677" width="0.2645%" height="15" fill="rgb(234,86,24)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (263 samples, 0.26%)</title><rect x="58.6309%" y="661" width="0.2645%" height="15" fill="rgb(225,10,24)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="671.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (263 samples, 0.26%)</title><rect x="58.6309%" y="645" width="0.2645%" height="15" fill="rgb(218,109,7)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="655.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (263 samples, 0.26%)</title><rect x="58.6309%" y="629" width="0.2645%" height="15" fill="rgb(210,20,26)" fg:x="58292" fg:w="263"/><text x="58.8809%" y="639.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency (26 samples, 0.03%)</title><rect x="58.8954%" y="693" width="0.0262%" height="15" fill="rgb(216,18,1)" fg:x="58555" fg:w="26"/><text x="59.1454%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (26 samples, 0.03%)</title><rect x="58.8954%" y="677" width="0.0262%" height="15" fill="rgb(206,163,23)" fg:x="58555" fg:w="26"/><text x="59.1454%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="58.8954%" y="661" width="0.0262%" height="15" fill="rgb(229,150,31)" fg:x="58555" fg:w="26"/><text x="59.1454%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (26 samples, 0.03%)</title><rect x="58.8954%" y="645" width="0.0262%" height="15" fill="rgb(231,10,5)" fg:x="58555" fg:w="26"/><text x="59.1454%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (26 samples, 0.03%)</title><rect x="58.8954%" y="629" width="0.0262%" height="15" fill="rgb(250,40,50)" fg:x="58555" fg:w="26"/><text x="59.1454%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (21 samples, 0.02%)</title><rect x="58.9004%" y="613" width="0.0211%" height="15" fill="rgb(217,119,7)" fg:x="58560" fg:w="21"/><text x="59.1504%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.02%)</title><rect x="58.9004%" y="597" width="0.0211%" height="15" fill="rgb(245,214,40)" fg:x="58560" fg:w="21"/><text x="59.1504%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (14 samples, 0.01%)</title><rect x="58.9075%" y="581" width="0.0141%" height="15" fill="rgb(216,187,1)" fg:x="58567" fg:w="14"/><text x="59.1575%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}}::_{{closure}} (14 samples, 0.01%)</title><rect x="58.9075%" y="565" width="0.0141%" height="15" fill="rgb(237,146,21)" fg:x="58567" fg:w="14"/><text x="59.1575%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::edge_consistency::_{{closure}} (14 samples, 0.01%)</title><rect x="58.9075%" y="549" width="0.0141%" height="15" fill="rgb(210,174,47)" fg:x="58567" fg:w="14"/><text x="59.1575%" y="559.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency (18 samples, 0.02%)</title><rect x="58.9216%" y="693" width="0.0181%" height="15" fill="rgb(218,111,39)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.02%)</title><rect x="58.9216%" y="677" width="0.0181%" height="15" fill="rgb(224,95,19)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="58.9216%" y="661" width="0.0181%" height="15" fill="rgb(234,15,38)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (18 samples, 0.02%)</title><rect x="58.9216%" y="645" width="0.0181%" height="15" fill="rgb(246,56,12)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="655.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (18 samples, 0.02%)</title><rect x="58.9216%" y="629" width="0.0181%" height="15" fill="rgb(247,16,17)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.02%)</title><rect x="58.9216%" y="613" width="0.0181%" height="15" fill="rgb(215,151,11)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="58.9216%" y="597" width="0.0181%" height="15" fill="rgb(225,16,24)" fg:x="58581" fg:w="18"/><text x="59.1716%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.01%)</title><rect x="58.9296%" y="581" width="0.0101%" height="15" fill="rgb(217,117,5)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="591.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::id_consistency::_{{closure}} (10 samples, 0.01%)</title><rect x="58.9296%" y="565" width="0.0101%" height="15" fill="rgb(246,187,53)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (10 samples, 0.01%)</title><rect x="58.9296%" y="549" width="0.0101%" height="15" fill="rgb(241,71,40)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.01%)</title><rect x="58.9296%" y="533" width="0.0101%" height="15" fill="rgb(231,67,39)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.01%)</title><rect x="58.9296%" y="517" width="0.0101%" height="15" fill="rgb(222,120,24)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="58.9296%" y="501" width="0.0101%" height="15" fill="rgb(248,3,3)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="58.9296%" y="485" width="0.0101%" height="15" fill="rgb(228,218,5)" fg:x="58589" fg:w="10"/><text x="59.1796%" y="495.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::check_invariant (52 samples, 0.05%)</title><rect x="58.8954%" y="709" width="0.0523%" height="15" fill="rgb(212,202,43)" fg:x="58555" fg:w="52"/><text x="59.1454%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (16 samples, 0.02%)</title><rect x="58.9477%" y="677" width="0.0161%" height="15" fill="rgb(235,183,2)" fg:x="58607" fg:w="16"/><text x="59.1977%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.01%)</title><rect x="58.9527%" y="661" width="0.0111%" height="15" fill="rgb(230,165,10)" fg:x="58612" fg:w="11"/><text x="59.2027%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.01%)</title><rect x="58.9527%" y="645" width="0.0111%" height="15" fill="rgb(219,54,40)" fg:x="58612" fg:w="11"/><text x="59.2027%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (12 samples, 0.01%)</title><rect x="58.9709%" y="581" width="0.0121%" height="15" fill="rgb(244,73,9)" fg:x="58630" fg:w="12"/><text x="59.2209%" y="591.50"></text></g><g><title>borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt;::remap_refs (39 samples, 0.04%)</title><rect x="58.9477%" y="693" width="0.0392%" height="15" fill="rgb(212,32,45)" fg:x="58607" fg:w="39"/><text x="59.1977%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (23 samples, 0.02%)</title><rect x="58.9638%" y="677" width="0.0231%" height="15" fill="rgb(205,58,31)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (23 samples, 0.02%)</title><rect x="58.9638%" y="661" width="0.0231%" height="15" fill="rgb(250,120,43)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (23 samples, 0.02%)</title><rect x="58.9638%" y="645" width="0.0231%" height="15" fill="rgb(235,13,10)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (23 samples, 0.02%)</title><rect x="58.9638%" y="629" width="0.0231%" height="15" fill="rgb(232,219,31)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="639.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (23 samples, 0.02%)</title><rect x="58.9638%" y="613" width="0.0231%" height="15" fill="rgb(218,157,51)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="623.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (23 samples, 0.02%)</title><rect x="58.9638%" y="597" width="0.0231%" height="15" fill="rgb(211,91,52)" fg:x="58623" fg:w="23"/><text x="59.2138%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (12 samples, 0.01%)</title><rect x="58.9869%" y="677" width="0.0121%" height="15" fill="rgb(240,173,1)" fg:x="58646" fg:w="12"/><text x="59.2369%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.01%)</title><rect x="58.9869%" y="661" width="0.0121%" height="15" fill="rgb(248,20,47)" fg:x="58646" fg:w="12"/><text x="59.2369%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.01%)</title><rect x="58.9880%" y="645" width="0.0111%" height="15" fill="rgb(217,221,40)" fg:x="58647" fg:w="11"/><text x="59.2380%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.01%)</title><rect x="58.9880%" y="629" width="0.0111%" height="15" fill="rgb(226,149,51)" fg:x="58647" fg:w="11"/><text x="59.2380%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (11 samples, 0.01%)</title><rect x="58.9880%" y="613" width="0.0111%" height="15" fill="rgb(252,193,7)" fg:x="58647" fg:w="11"/><text x="59.2380%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (11 samples, 0.01%)</title><rect x="58.9880%" y="597" width="0.0111%" height="15" fill="rgb(205,123,0)" fg:x="58647" fg:w="11"/><text x="59.2380%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (11 samples, 0.01%)</title><rect x="59.0061%" y="565" width="0.0111%" height="15" fill="rgb(233,173,25)" fg:x="58665" fg:w="11"/><text x="59.2561%" y="575.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::remap_refs (414 samples, 0.42%)</title><rect x="58.6098%" y="725" width="0.4164%" height="15" fill="rgb(216,63,32)" fg:x="58271" fg:w="414"/><text x="58.8598%" y="735.50"></text></g><g><title>borrow_graph::references::Ref&lt;Loc,Lbl&gt;::remap_refs (78 samples, 0.08%)</title><rect x="58.9477%" y="709" width="0.0785%" height="15" fill="rgb(209,56,45)" fg:x="58607" fg:w="78"/><text x="59.1977%" y="719.50"></text></g><g><title>borrow_graph::shared::remap_set (39 samples, 0.04%)</title><rect x="58.9869%" y="693" width="0.0392%" height="15" fill="rgb(226,111,49)" fg:x="58646" fg:w="39"/><text x="59.2369%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::remove (27 samples, 0.03%)</title><rect x="58.9990%" y="677" width="0.0272%" height="15" fill="rgb(244,181,21)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (27 samples, 0.03%)</title><rect x="58.9990%" y="661" width="0.0272%" height="15" fill="rgb(222,126,15)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (27 samples, 0.03%)</title><rect x="58.9990%" y="645" width="0.0272%" height="15" fill="rgb(222,95,17)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (27 samples, 0.03%)</title><rect x="58.9990%" y="629" width="0.0272%" height="15" fill="rgb(254,46,5)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (27 samples, 0.03%)</title><rect x="58.9990%" y="613" width="0.0272%" height="15" fill="rgb(236,216,35)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="623.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (27 samples, 0.03%)</title><rect x="58.9990%" y="597" width="0.0272%" height="15" fill="rgb(217,187,26)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="607.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (27 samples, 0.03%)</title><rect x="58.9990%" y="581" width="0.0272%" height="15" fill="rgb(207,192,25)" fg:x="58658" fg:w="27"/><text x="59.2490%" y="591.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state::_{{closure}} (31 samples, 0.03%)</title><rect x="59.0262%" y="613" width="0.0312%" height="15" fill="rgb(253,135,27)" fg:x="58685" fg:w="31"/><text x="59.2762%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (31 samples, 0.03%)</title><rect x="59.0262%" y="597" width="0.0312%" height="15" fill="rgb(211,122,29)" fg:x="58685" fg:w="31"/><text x="59.2762%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (22 samples, 0.02%)</title><rect x="59.0352%" y="581" width="0.0221%" height="15" fill="rgb(233,162,40)" fg:x="58694" fg:w="22"/><text x="59.2852%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (22 samples, 0.02%)</title><rect x="59.0352%" y="565" width="0.0221%" height="15" fill="rgb(222,184,47)" fg:x="58694" fg:w="22"/><text x="59.2852%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (21 samples, 0.02%)</title><rect x="59.0362%" y="549" width="0.0211%" height="15" fill="rgb(249,99,23)" fg:x="58695" fg:w="21"/><text x="59.2862%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (19 samples, 0.02%)</title><rect x="59.0382%" y="533" width="0.0191%" height="15" fill="rgb(214,60,12)" fg:x="58697" fg:w="19"/><text x="59.2882%" y="543.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="59.0574%" y="373" width="0.0241%" height="15" fill="rgb(250,229,36)" fg:x="58716" fg:w="24"/><text x="59.3074%" y="383.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.02%)</title><rect x="59.0574%" y="357" width="0.0241%" height="15" fill="rgb(232,195,10)" fg:x="58716" fg:w="24"/><text x="59.3074%" y="367.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="59.0684%" y="341" width="0.0131%" height="15" fill="rgb(205,213,31)" fg:x="58727" fg:w="13"/><text x="59.3184%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (26 samples, 0.03%)</title><rect x="59.0574%" y="549" width="0.0262%" height="15" fill="rgb(237,43,8)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (26 samples, 0.03%)</title><rect x="59.0574%" y="533" width="0.0262%" height="15" fill="rgb(216,208,3)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.03%)</title><rect x="59.0574%" y="517" width="0.0262%" height="15" fill="rgb(228,179,44)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (26 samples, 0.03%)</title><rect x="59.0574%" y="501" width="0.0262%" height="15" fill="rgb(230,192,27)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (26 samples, 0.03%)</title><rect x="59.0574%" y="485" width="0.0262%" height="15" fill="rgb(251,30,38)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="495.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (26 samples, 0.03%)</title><rect x="59.0574%" y="469" width="0.0262%" height="15" fill="rgb(246,55,52)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (26 samples, 0.03%)</title><rect x="59.0574%" y="453" width="0.0262%" height="15" fill="rgb(249,79,26)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (26 samples, 0.03%)</title><rect x="59.0574%" y="437" width="0.0262%" height="15" fill="rgb(220,202,16)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (26 samples, 0.03%)</title><rect x="59.0574%" y="421" width="0.0262%" height="15" fill="rgb(250,170,23)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="59.0574%" y="405" width="0.0262%" height="15" fill="rgb(230,7,37)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="59.0574%" y="389" width="0.0262%" height="15" fill="rgb(213,71,1)" fg:x="58716" fg:w="26"/><text x="59.3074%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (31 samples, 0.03%)</title><rect x="59.0855%" y="485" width="0.0312%" height="15" fill="rgb(227,87,39)" fg:x="58744" fg:w="31"/><text x="59.3355%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (23 samples, 0.02%)</title><rect x="59.0936%" y="469" width="0.0231%" height="15" fill="rgb(210,41,29)" fg:x="58752" fg:w="23"/><text x="59.3436%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (14 samples, 0.01%)</title><rect x="59.1509%" y="469" width="0.0141%" height="15" fill="rgb(206,191,31)" fg:x="58809" fg:w="14"/><text x="59.4009%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (22 samples, 0.02%)</title><rect x="59.1650%" y="469" width="0.0221%" height="15" fill="rgb(247,75,54)" fg:x="58823" fg:w="22"/><text x="59.4150%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.01%)</title><rect x="59.1740%" y="453" width="0.0131%" height="15" fill="rgb(208,54,50)" fg:x="58832" fg:w="13"/><text x="59.4240%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.12%)</title><rect x="59.0835%" y="501" width="0.1217%" height="15" fill="rgb(214,90,37)" fg:x="58742" fg:w="121"/><text x="59.3335%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.09%)</title><rect x="59.1167%" y="485" width="0.0885%" height="15" fill="rgb(220,132,6)" fg:x="58775" fg:w="88"/><text x="59.3667%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.02%)</title><rect x="59.1891%" y="469" width="0.0161%" height="15" fill="rgb(213,167,7)" fg:x="58847" fg:w="16"/><text x="59.4391%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (28 samples, 0.03%)</title><rect x="59.2052%" y="501" width="0.0282%" height="15" fill="rgb(243,36,27)" fg:x="58863" fg:w="28"/><text x="59.4552%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (27 samples, 0.03%)</title><rect x="59.2062%" y="485" width="0.0272%" height="15" fill="rgb(235,147,12)" fg:x="58864" fg:w="27"/><text x="59.4562%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (27 samples, 0.03%)</title><rect x="59.2062%" y="469" width="0.0272%" height="15" fill="rgb(212,198,44)" fg:x="58864" fg:w="27"/><text x="59.4562%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.02%)</title><rect x="59.2133%" y="453" width="0.0201%" height="15" fill="rgb(218,68,50)" fg:x="58871" fg:w="20"/><text x="59.4633%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (15 samples, 0.02%)</title><rect x="59.2394%" y="469" width="0.0151%" height="15" fill="rgb(224,79,48)" fg:x="58897" fg:w="15"/><text x="59.4894%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (202 samples, 0.20%)</title><rect x="59.0574%" y="565" width="0.2032%" height="15" fill="rgb(213,191,50)" fg:x="58716" fg:w="202"/><text x="59.3074%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (176 samples, 0.18%)</title><rect x="59.0835%" y="549" width="0.1770%" height="15" fill="rgb(254,146,10)" fg:x="58742" fg:w="176"/><text x="59.3335%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (176 samples, 0.18%)</title><rect x="59.0835%" y="533" width="0.1770%" height="15" fill="rgb(215,175,11)" fg:x="58742" fg:w="176"/><text x="59.3335%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (176 samples, 0.18%)</title><rect x="59.0835%" y="517" width="0.1770%" height="15" fill="rgb(207,49,7)" fg:x="58742" fg:w="176"/><text x="59.3335%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (27 samples, 0.03%)</title><rect x="59.2334%" y="501" width="0.0272%" height="15" fill="rgb(234,144,29)" fg:x="58891" fg:w="27"/><text x="59.4834%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="59.2334%" y="485" width="0.0272%" height="15" fill="rgb(213,222,48)" fg:x="58891" fg:w="27"/><text x="59.4834%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::forget_node_type (14 samples, 0.01%)</title><rect x="59.2977%" y="533" width="0.0141%" height="15" fill="rgb(222,8,6)" fg:x="58955" fg:w="14"/><text x="59.5477%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (42 samples, 0.04%)</title><rect x="59.3712%" y="501" width="0.0422%" height="15" fill="rgb(221,114,49)" fg:x="59028" fg:w="42"/><text x="59.6212%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (28 samples, 0.03%)</title><rect x="59.3852%" y="485" width="0.0282%" height="15" fill="rgb(250,140,42)" fg:x="59042" fg:w="28"/><text x="59.6352%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (25 samples, 0.03%)</title><rect x="59.3883%" y="469" width="0.0251%" height="15" fill="rgb(250,150,27)" fg:x="59045" fg:w="25"/><text x="59.6383%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (22 samples, 0.02%)</title><rect x="59.3913%" y="453" width="0.0221%" height="15" fill="rgb(252,159,3)" fg:x="59048" fg:w="22"/><text x="59.6413%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (10 samples, 0.01%)</title><rect x="59.4034%" y="437" width="0.0101%" height="15" fill="rgb(241,182,3)" fg:x="59060" fg:w="10"/><text x="59.6534%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (24 samples, 0.02%)</title><rect x="59.4717%" y="469" width="0.0241%" height="15" fill="rgb(236,3,9)" fg:x="59128" fg:w="24"/><text x="59.7217%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (22 samples, 0.02%)</title><rect x="59.4738%" y="453" width="0.0221%" height="15" fill="rgb(223,227,51)" fg:x="59130" fg:w="22"/><text x="59.7238%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (93 samples, 0.09%)</title><rect x="59.4184%" y="501" width="0.0935%" height="15" fill="rgb(232,133,30)" fg:x="59075" fg:w="93"/><text x="59.6684%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (47 samples, 0.05%)</title><rect x="59.4647%" y="485" width="0.0473%" height="15" fill="rgb(209,93,27)" fg:x="59121" fg:w="47"/><text x="59.7147%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (16 samples, 0.02%)</title><rect x="59.4959%" y="469" width="0.0161%" height="15" fill="rgb(208,108,34)" fg:x="59152" fg:w="16"/><text x="59.7459%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="59.5432%" y="485" width="0.0101%" height="15" fill="rgb(215,189,13)" fg:x="59199" fg:w="10"/><text x="59.7932%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (212 samples, 0.21%)</title><rect x="59.3470%" y="517" width="0.2132%" height="15" fill="rgb(206,88,23)" fg:x="59004" fg:w="212"/><text x="59.5970%" y="527.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (48 samples, 0.05%)</title><rect x="59.5120%" y="501" width="0.0483%" height="15" fill="rgb(240,173,0)" fg:x="59168" fg:w="48"/><text x="59.7620%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (264 samples, 0.27%)</title><rect x="59.3138%" y="533" width="0.2655%" height="15" fill="rgb(223,106,52)" fg:x="58971" fg:w="264"/><text x="59.5638%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (320 samples, 0.32%)</title><rect x="59.2605%" y="549" width="0.3219%" height="15" fill="rgb(206,130,16)" fg:x="58918" fg:w="320"/><text x="59.5105%" y="559.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="59.5824%" y="453" width="0.0111%" height="15" fill="rgb(220,54,25)" fg:x="59238" fg:w="11"/><text x="59.8324%" y="463.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (1,071 samples, 1.08%)</title><rect x="58.5283%" y="741" width="1.0772%" height="15" fill="rgb(210,4,38)" fg:x="58190" fg:w="1071"/><text x="58.7783%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (576 samples, 0.58%)</title><rect x="59.0262%" y="725" width="0.5793%" height="15" fill="rgb(238,94,39)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (576 samples, 0.58%)</title><rect x="59.0262%" y="709" width="0.5793%" height="15" fill="rgb(234,124,34)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (576 samples, 0.58%)</title><rect x="59.0262%" y="693" width="0.5793%" height="15" fill="rgb(221,91,40)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (576 samples, 0.58%)</title><rect x="59.0262%" y="677" width="0.5793%" height="15" fill="rgb(246,53,28)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (576 samples, 0.58%)</title><rect x="59.0262%" y="661" width="0.5793%" height="15" fill="rgb(229,109,7)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (576 samples, 0.58%)</title><rect x="59.0262%" y="645" width="0.5793%" height="15" fill="rgb(249,117,8)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (576 samples, 0.58%)</title><rect x="59.0262%" y="629" width="0.5793%" height="15" fill="rgb(210,181,1)" fg:x="58685" fg:w="576"/><text x="59.2762%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (545 samples, 0.55%)</title><rect x="59.0574%" y="613" width="0.5482%" height="15" fill="rgb(211,66,1)" fg:x="58716" fg:w="545"/><text x="59.3074%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (545 samples, 0.55%)</title><rect x="59.0574%" y="597" width="0.5482%" height="15" fill="rgb(221,90,14)" fg:x="58716" fg:w="545"/><text x="59.3074%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (545 samples, 0.55%)</title><rect x="59.0574%" y="581" width="0.5482%" height="15" fill="rgb(219,222,44)" fg:x="58716" fg:w="545"/><text x="59.3074%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (343 samples, 0.34%)</title><rect x="59.2605%" y="565" width="0.3450%" height="15" fill="rgb(246,34,33)" fg:x="58918" fg:w="343"/><text x="59.5105%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (23 samples, 0.02%)</title><rect x="59.5824%" y="549" width="0.0231%" height="15" fill="rgb(227,135,41)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (23 samples, 0.02%)</title><rect x="59.5824%" y="533" width="0.0231%" height="15" fill="rgb(226,15,14)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (23 samples, 0.02%)</title><rect x="59.5824%" y="517" width="0.0231%" height="15" fill="rgb(236,148,47)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="527.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::_{{closure}} (23 samples, 0.02%)</title><rect x="59.5824%" y="501" width="0.0231%" height="15" fill="rgb(233,162,52)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::_{{closure}} (23 samples, 0.02%)</title><rect x="59.5824%" y="485" width="0.0231%" height="15" fill="rgb(244,35,28)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (23 samples, 0.02%)</title><rect x="59.5824%" y="469" width="0.0231%" height="15" fill="rgb(205,121,10)" fg:x="59238" fg:w="23"/><text x="59.8324%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::from_new_internal (12 samples, 0.01%)</title><rect x="59.5935%" y="453" width="0.0121%" height="15" fill="rgb(250,58,18)" fg:x="59249" fg:w="12"/><text x="59.8435%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_all_childrens_parent_links (12 samples, 0.01%)</title><rect x="59.5935%" y="437" width="0.0121%" height="15" fill="rgb(216,37,13)" fg:x="59249" fg:w="12"/><text x="59.8435%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (12 samples, 0.01%)</title><rect x="59.5935%" y="421" width="0.0121%" height="15" fill="rgb(221,215,42)" fg:x="59249" fg:w="12"/><text x="59.8435%" y="431.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as bytecode_verifier::absint::TransferFunctions&gt;::execute (1,086 samples, 1.09%)</title><rect x="58.5283%" y="757" width="1.0923%" height="15" fill="rgb(217,214,19)" fg:x="58190" fg:w="1086"/><text x="58.7783%" y="767.50"></text></g><g><title>bytecode_verifier::reference_safety::execute_inner (15 samples, 0.02%)</title><rect x="59.6055%" y="741" width="0.0151%" height="15" fill="rgb(233,139,13)" fg:x="59261" fg:w="15"/><text x="59.8555%" y="751.50"></text></g><g><title>__rust_probestack (15 samples, 0.02%)</title><rect x="59.6055%" y="725" width="0.0151%" height="15" fill="rgb(247,168,23)" fg:x="59261" fg:w="15"/><text x="59.8555%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="59.6216%" y="677" width="0.0131%" height="15" fill="rgb(207,202,1)" fg:x="59277" fg:w="13"/><text x="59.8716%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="59.6216%" y="661" width="0.0131%" height="15" fill="rgb(220,155,48)" fg:x="59277" fg:w="13"/><text x="59.8716%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (13 samples, 0.01%)</title><rect x="59.6216%" y="645" width="0.0131%" height="15" fill="rgb(250,43,26)" fg:x="59277" fg:w="13"/><text x="59.8716%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (11 samples, 0.01%)</title><rect x="59.6236%" y="629" width="0.0111%" height="15" fill="rgb(212,190,23)" fg:x="59279" fg:w="11"/><text x="59.8736%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.01%)</title><rect x="59.6236%" y="613" width="0.0111%" height="15" fill="rgb(216,39,24)" fg:x="59279" fg:w="11"/><text x="59.8736%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="59.6236%" y="597" width="0.0111%" height="15" fill="rgb(252,113,16)" fg:x="59279" fg:w="11"/><text x="59.8736%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="59.6347%" y="629" width="0.0262%" height="15" fill="rgb(208,113,19)" fg:x="59290" fg:w="26"/><text x="59.8847%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="59.6347%" y="613" width="0.0262%" height="15" fill="rgb(234,107,25)" fg:x="59290" fg:w="26"/><text x="59.8847%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (26 samples, 0.03%)</title><rect x="59.6347%" y="597" width="0.0262%" height="15" fill="rgb(234,217,51)" fg:x="59290" fg:w="26"/><text x="59.8847%" y="607.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (1,196 samples, 1.20%)</title><rect x="58.4750%" y="789" width="1.2030%" height="15" fill="rgb(251,29,42)" fg:x="58137" fg:w="1196"/><text x="58.7250%" y="799.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::execute_block (1,143 samples, 1.15%)</title><rect x="58.5283%" y="773" width="1.1496%" height="15" fill="rgb(221,62,51)" fg:x="58190" fg:w="1143"/><text x="58.7783%" y="783.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (57 samples, 0.06%)</title><rect x="59.6206%" y="757" width="0.0573%" height="15" fill="rgb(240,192,43)" fg:x="59276" fg:w="57"/><text x="59.8706%" y="767.50"></text></g><g><title>&lt;borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (56 samples, 0.06%)</title><rect x="59.6216%" y="741" width="0.0563%" height="15" fill="rgb(224,157,47)" fg:x="59277" fg:w="56"/><text x="59.8716%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (56 samples, 0.06%)</title><rect x="59.6216%" y="725" width="0.0563%" height="15" fill="rgb(226,84,45)" fg:x="59277" fg:w="56"/><text x="59.8716%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (56 samples, 0.06%)</title><rect x="59.6216%" y="709" width="0.0563%" height="15" fill="rgb(208,207,23)" fg:x="59277" fg:w="56"/><text x="59.8716%" y="719.50"></text></g><g><title>&lt;borrow_graph::references::Ref&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (56 samples, 0.06%)</title><rect x="59.6216%" y="693" width="0.0563%" height="15" fill="rgb(253,34,51)" fg:x="59277" fg:w="56"/><text x="59.8716%" y="703.50"></text></g><g><title>&lt;borrow_graph::references::BorrowEdges&lt;Loc,Lbl&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="59.6347%" y="677" width="0.0432%" height="15" fill="rgb(227,26,34)" fg:x="59290" fg:w="43"/><text x="59.8847%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="59.6347%" y="661" width="0.0432%" height="15" fill="rgb(245,75,19)" fg:x="59290" fg:w="43"/><text x="59.8847%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (43 samples, 0.04%)</title><rect x="59.6347%" y="645" width="0.0432%" height="15" fill="rgb(250,191,31)" fg:x="59290" fg:w="43"/><text x="59.8847%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (11 samples, 0.01%)</title><rect x="59.6669%" y="629" width="0.0111%" height="15" fill="rgb(224,11,50)" fg:x="59322" fg:w="11"/><text x="59.9169%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.01%)</title><rect x="59.6669%" y="613" width="0.0111%" height="15" fill="rgb(231,171,7)" fg:x="59322" fg:w="11"/><text x="59.9169%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="59.6669%" y="597" width="0.0111%" height="15" fill="rgb(252,214,10)" fg:x="59322" fg:w="11"/><text x="59.9169%" y="607.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (1,197 samples, 1.20%)</title><rect x="58.4750%" y="805" width="1.2040%" height="15" fill="rgb(249,45,46)" fg:x="58137" fg:w="1197"/><text x="58.7250%" y="815.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_generic_instance (10 samples, 0.01%)</title><rect x="59.6870%" y="789" width="0.0101%" height="15" fill="rgb(240,173,7)" fg:x="59342" fg:w="10"/><text x="59.9370%" y="799.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (16 samples, 0.02%)</title><rect x="59.6840%" y="805" width="0.0161%" height="15" fill="rgb(235,214,13)" fg:x="59339" fg:w="16"/><text x="59.9340%" y="815.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_generic_instance (17 samples, 0.02%)</title><rect x="59.7011%" y="773" width="0.0171%" height="15" fill="rgb(245,156,8)" fg:x="59356" fg:w="17"/><text x="59.9511%" y="783.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code_units (36 samples, 0.04%)</title><rect x="59.7001%" y="805" width="0.0362%" height="15" fill="rgb(235,46,12)" fg:x="59355" fg:w="36"/><text x="59.9501%" y="815.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (35 samples, 0.04%)</title><rect x="59.7011%" y="789" width="0.0352%" height="15" fill="rgb(221,81,14)" fg:x="59356" fg:w="35"/><text x="59.9511%" y="799.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_signature (17 samples, 0.02%)</title><rect x="59.7192%" y="773" width="0.0171%" height="15" fill="rgb(238,207,9)" fg:x="59374" fg:w="17"/><text x="59.9692%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.06%)</title><rect x="59.7685%" y="757" width="0.0553%" height="15" fill="rgb(224,129,35)" fg:x="59423" fg:w="55"/><text x="60.0185%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="59.7916%" y="741" width="0.0322%" height="15" fill="rgb(243,218,34)" fg:x="59446" fg:w="32"/><text x="60.0416%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="59.8258%" y="741" width="0.0121%" height="15" fill="rgb(220,166,13)" fg:x="59480" fg:w="12"/><text x="60.0758%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (18 samples, 0.02%)</title><rect x="59.8238%" y="757" width="0.0181%" height="15" fill="rgb(227,167,49)" fg:x="59478" fg:w="18"/><text x="60.0738%" y="767.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_instantiation (12 samples, 0.01%)</title><rect x="59.8509%" y="757" width="0.0121%" height="15" fill="rgb(234,142,12)" fg:x="59505" fg:w="12"/><text x="60.1009%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.01%)</title><rect x="59.8741%" y="757" width="0.0121%" height="15" fill="rgb(207,100,48)" fg:x="59528" fg:w="12"/><text x="60.1241%" y="767.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module_impl (165 samples, 0.17%)</title><rect x="59.7403%" y="805" width="0.1660%" height="15" fill="rgb(210,25,14)" fg:x="59395" fg:w="165"/><text x="59.9903%" y="815.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code_units (165 samples, 0.17%)</title><rect x="59.7403%" y="789" width="0.1660%" height="15" fill="rgb(246,116,27)" fg:x="59395" fg:w="165"/><text x="59.9903%" y="799.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_code (165 samples, 0.17%)</title><rect x="59.7403%" y="773" width="0.1660%" height="15" fill="rgb(214,193,42)" fg:x="59395" fg:w="165"/><text x="59.9903%" y="783.50"></text></g><g><title>bytecode_verifier::struct_defs::RecursiveStructDefChecker::verify_module_impl (10 samples, 0.01%)</title><rect x="59.9153%" y="805" width="0.0101%" height="15" fill="rgb(214,122,8)" fg:x="59569" fg:w="10"/><text x="60.1653%" y="815.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::build (10 samples, 0.01%)</title><rect x="59.9153%" y="789" width="0.0101%" height="15" fill="rgb(244,173,18)" fg:x="59569" fg:w="10"/><text x="60.1653%" y="799.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_struct_defs (10 samples, 0.01%)</title><rect x="59.9153%" y="773" width="0.0101%" height="15" fill="rgb(232,68,19)" fg:x="59569" fg:w="10"/><text x="60.1653%" y="783.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (10 samples, 0.01%)</title><rect x="59.9153%" y="757" width="0.0101%" height="15" fill="rgb(236,224,1)" fg:x="59569" fg:w="10"/><text x="60.1653%" y="767.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (10 samples, 0.01%)</title><rect x="59.9153%" y="741" width="0.0101%" height="15" fill="rgb(240,11,8)" fg:x="59569" fg:w="10"/><text x="60.1653%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (16 samples, 0.02%)</title><rect x="60.0270%" y="789" width="0.0161%" height="15" fill="rgb(244,159,20)" fg:x="59680" fg:w="16"/><text x="60.2770%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="60.0270%" y="773" width="0.0161%" height="15" fill="rgb(240,223,54)" fg:x="59680" fg:w="16"/><text x="60.2770%" y="783.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="60.0632%" y="741" width="0.0151%" height="15" fill="rgb(237,146,5)" fg:x="59716" fg:w="15"/><text x="60.3132%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="60.0682%" y="725" width="0.0101%" height="15" fill="rgb(218,221,32)" fg:x="59721" fg:w="10"/><text x="60.3182%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.01%)</title><rect x="60.0682%" y="709" width="0.0101%" height="15" fill="rgb(244,96,26)" fg:x="59721" fg:w="10"/><text x="60.3182%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.01%)</title><rect x="60.0682%" y="693" width="0.0101%" height="15" fill="rgb(245,184,37)" fg:x="59721" fg:w="10"/><text x="60.3182%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.01%)</title><rect x="60.0682%" y="677" width="0.0101%" height="15" fill="rgb(248,91,47)" fg:x="59721" fg:w="10"/><text x="60.3182%" y="687.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.02%)</title><rect x="60.0632%" y="757" width="0.0161%" height="15" fill="rgb(243,199,8)" fg:x="59716" fg:w="16"/><text x="60.3132%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (21 samples, 0.02%)</title><rect x="60.0813%" y="741" width="0.0211%" height="15" fill="rgb(249,12,15)" fg:x="59734" fg:w="21"/><text x="60.3313%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (25 samples, 0.03%)</title><rect x="60.0803%" y="757" width="0.0251%" height="15" fill="rgb(245,97,12)" fg:x="59733" fg:w="25"/><text x="60.3303%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.06%)</title><rect x="60.0581%" y="773" width="0.0614%" height="15" fill="rgb(244,61,1)" fg:x="59711" fg:w="61"/><text x="60.3081%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (14 samples, 0.01%)</title><rect x="60.1054%" y="757" width="0.0141%" height="15" fill="rgb(222,194,10)" fg:x="59758" fg:w="14"/><text x="60.3554%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (11 samples, 0.01%)</title><rect x="60.1084%" y="741" width="0.0111%" height="15" fill="rgb(226,178,8)" fg:x="59761" fg:w="11"/><text x="60.3584%" y="751.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (77 samples, 0.08%)</title><rect x="60.0430%" y="789" width="0.0774%" height="15" fill="rgb(241,32,34)" fg:x="59696" fg:w="77"/><text x="60.2930%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (24 samples, 0.02%)</title><rect x="60.1225%" y="789" width="0.0241%" height="15" fill="rgb(254,26,6)" fg:x="59775" fg:w="24"/><text x="60.3725%" y="799.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="60.1356%" y="773" width="0.0111%" height="15" fill="rgb(249,71,11)" fg:x="59788" fg:w="11"/><text x="60.3856%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="60.1788%" y="693" width="0.0121%" height="15" fill="rgb(232,170,27)" fg:x="59831" fg:w="12"/><text x="60.4288%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="60.1788%" y="677" width="0.0121%" height="15" fill="rgb(214,223,17)" fg:x="59831" fg:w="12"/><text x="60.4288%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="60.1768%" y="709" width="0.0322%" height="15" fill="rgb(250,18,15)" fg:x="59829" fg:w="32"/><text x="60.4268%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="60.2090%" y="709" width="0.0161%" height="15" fill="rgb(212,153,51)" fg:x="59861" fg:w="16"/><text x="60.4590%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (67 samples, 0.07%)</title><rect x="60.1668%" y="773" width="0.0674%" height="15" fill="rgb(219,194,12)" fg:x="59819" fg:w="67"/><text x="60.4168%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (67 samples, 0.07%)</title><rect x="60.1668%" y="757" width="0.0674%" height="15" fill="rgb(212,58,17)" fg:x="59819" fg:w="67"/><text x="60.4168%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (66 samples, 0.07%)</title><rect x="60.1678%" y="741" width="0.0664%" height="15" fill="rgb(254,5,10)" fg:x="59820" fg:w="66"/><text x="60.4178%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.07%)</title><rect x="60.1678%" y="725" width="0.0664%" height="15" fill="rgb(246,91,7)" fg:x="59820" fg:w="66"/><text x="60.4178%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 0.09%)</title><rect x="60.1466%" y="789" width="0.0935%" height="15" fill="rgb(218,108,49)" fg:x="59799" fg:w="93"/><text x="60.3966%" y="799.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (25 samples, 0.03%)</title><rect x="60.2402%" y="789" width="0.0251%" height="15" fill="rgb(238,123,20)" fg:x="59892" fg:w="25"/><text x="60.4902%" y="799.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (24 samples, 0.02%)</title><rect x="60.2412%" y="773" width="0.0241%" height="15" fill="rgb(231,69,23)" fg:x="59893" fg:w="24"/><text x="60.4912%" y="783.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (15 samples, 0.02%)</title><rect x="60.2502%" y="757" width="0.0151%" height="15" fill="rgb(230,209,3)" fg:x="59902" fg:w="15"/><text x="60.5002%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="60.2804%" y="741" width="0.0131%" height="15" fill="rgb(231,19,0)" fg:x="59932" fg:w="13"/><text x="60.5304%" y="751.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::local_at (31 samples, 0.03%)</title><rect x="60.2653%" y="789" width="0.0312%" height="15" fill="rgb(226,192,25)" fg:x="59917" fg:w="31"/><text x="60.5153%" y="799.50"></text></g><g><title>bytecode_verifier::type_safety::Locals::local_at (30 samples, 0.03%)</title><rect x="60.2663%" y="773" width="0.0302%" height="15" fill="rgb(223,175,53)" fg:x="59918" fg:w="30"/><text x="60.5163%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (25 samples, 0.03%)</title><rect x="60.2714%" y="757" width="0.0251%" height="15" fill="rgb(248,35,51)" fg:x="59923" fg:w="25"/><text x="60.5214%" y="767.50"></text></g><g><title>bytecode_verifier::type_safety::instantiate (15 samples, 0.02%)</title><rect x="60.3186%" y="773" width="0.0151%" height="15" fill="rgb(230,37,26)" fg:x="59970" fg:w="15"/><text x="60.5686%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.01%)</title><rect x="60.3237%" y="757" width="0.0101%" height="15" fill="rgb(206,120,22)" fg:x="59975" fg:w="10"/><text x="60.5737%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="60.3237%" y="741" width="0.0101%" height="15" fill="rgb(207,165,28)" fg:x="59975" fg:w="10"/><text x="60.5737%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="60.3237%" y="725" width="0.0101%" height="15" fill="rgb(226,23,46)" fg:x="59975" fg:w="10"/><text x="60.5737%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="60.3237%" y="709" width="0.0101%" height="15" fill="rgb(208,130,44)" fg:x="59975" fg:w="10"/><text x="60.5737%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="60.3337%" y="757" width="0.0121%" height="15" fill="rgb(231,67,8)" fg:x="59985" fg:w="12"/><text x="60.5837%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="60.3337%" y="741" width="0.0121%" height="15" fill="rgb(205,183,22)" fg:x="59985" fg:w="12"/><text x="60.5837%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="60.3337%" y="725" width="0.0121%" height="15" fill="rgb(224,47,9)" fg:x="59985" fg:w="12"/><text x="60.5837%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="60.3337%" y="709" width="0.0121%" height="15" fill="rgb(250,183,49)" fg:x="59985" fg:w="12"/><text x="60.5837%" y="719.50"></text></g><g><title>bytecode_verifier::type_safety::materialize_type (13 samples, 0.01%)</title><rect x="60.3337%" y="773" width="0.0131%" height="15" fill="rgb(220,151,39)" fg:x="59985" fg:w="13"/><text x="60.5837%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (10 samples, 0.01%)</title><rect x="60.3468%" y="773" width="0.0101%" height="15" fill="rgb(220,118,20)" fg:x="59998" fg:w="10"/><text x="60.5968%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::field_handle_at (11 samples, 0.01%)</title><rect x="60.3589%" y="773" width="0.0111%" height="15" fill="rgb(231,65,51)" fg:x="60010" fg:w="11"/><text x="60.6089%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::field_handle_at (11 samples, 0.01%)</title><rect x="60.3589%" y="757" width="0.0111%" height="15" fill="rgb(253,125,37)" fg:x="60010" fg:w="11"/><text x="60.6089%" y="767.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_field (81 samples, 0.08%)</title><rect x="60.2965%" y="789" width="0.0815%" height="15" fill="rgb(232,102,6)" fg:x="59948" fg:w="81"/><text x="60.5465%" y="799.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (19 samples, 0.02%)</title><rect x="60.3790%" y="773" width="0.0191%" height="15" fill="rgb(251,105,13)" fg:x="60030" fg:w="19"/><text x="60.6290%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (19 samples, 0.02%)</title><rect x="60.3790%" y="757" width="0.0191%" height="15" fill="rgb(222,179,29)" fg:x="60030" fg:w="19"/><text x="60.6290%" y="767.50"></text></g><g><title>bytecode_verifier::type_safety::materialize_type (11 samples, 0.01%)</title><rect x="60.3981%" y="773" width="0.0111%" height="15" fill="rgb(229,180,53)" fg:x="60049" fg:w="11"/><text x="60.6481%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="60.3981%" y="757" width="0.0111%" height="15" fill="rgb(238,104,13)" fg:x="60049" fg:w="11"/><text x="60.6481%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="60.3981%" y="741" width="0.0111%" height="15" fill="rgb(210,130,5)" fg:x="60049" fg:w="11"/><text x="60.6481%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="60.3981%" y="725" width="0.0111%" height="15" fill="rgb(233,87,49)" fg:x="60049" fg:w="11"/><text x="60.6481%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="60.3981%" y="709" width="0.0111%" height="15" fill="rgb(243,34,9)" fg:x="60049" fg:w="11"/><text x="60.6481%" y="719.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_global (37 samples, 0.04%)</title><rect x="60.3780%" y="789" width="0.0372%" height="15" fill="rgb(235,225,10)" fg:x="60029" fg:w="37"/><text x="60.6280%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="60.4333%" y="773" width="0.0101%" height="15" fill="rgb(212,0,30)" fg:x="60084" fg:w="10"/><text x="60.6833%" y="783.50"></text></g><g><title>bytecode_verifier::type_safety::borrow_loc (32 samples, 0.03%)</title><rect x="60.4152%" y="789" width="0.0322%" height="15" fill="rgb(211,177,0)" fg:x="60066" fg:w="32"/><text x="60.6652%" y="799.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="60.4605%" y="773" width="0.0131%" height="15" fill="rgb(225,220,11)" fg:x="60111" fg:w="13"/><text x="60.7105%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="60.4806%" y="773" width="0.0231%" height="15" fill="rgb(215,10,13)" fg:x="60131" fg:w="23"/><text x="60.7306%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (21 samples, 0.02%)</title><rect x="60.4826%" y="757" width="0.0211%" height="15" fill="rgb(240,177,14)" fg:x="60133" fg:w="21"/><text x="60.7326%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::ne (15 samples, 0.02%)</title><rect x="60.5208%" y="757" width="0.0151%" height="15" fill="rgb(243,7,39)" fg:x="60171" fg:w="15"/><text x="60.7708%" y="767.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::cmp::PartialEq&gt;::ne (14 samples, 0.01%)</title><rect x="60.5218%" y="741" width="0.0141%" height="15" fill="rgb(212,99,0)" fg:x="60172" fg:w="14"/><text x="60.7718%" y="751.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::ne (11 samples, 0.01%)</title><rect x="60.5248%" y="725" width="0.0111%" height="15" fill="rgb(225,162,48)" fg:x="60175" fg:w="11"/><text x="60.7748%" y="735.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::cmp::PartialEq&gt;::ne (26 samples, 0.03%)</title><rect x="60.5118%" y="773" width="0.0262%" height="15" fill="rgb(246,16,25)" fg:x="60162" fg:w="26"/><text x="60.7618%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (17 samples, 0.02%)</title><rect x="60.5379%" y="773" width="0.0171%" height="15" fill="rgb(220,150,2)" fg:x="60188" fg:w="17"/><text x="60.7879%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="60.5822%" y="725" width="0.0161%" height="15" fill="rgb(237,113,11)" fg:x="60232" fg:w="16"/><text x="60.8322%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="60.5822%" y="709" width="0.0161%" height="15" fill="rgb(236,70,20)" fg:x="60232" fg:w="16"/><text x="60.8322%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="60.5791%" y="757" width="0.0231%" height="15" fill="rgb(234,94,7)" fg:x="60229" fg:w="23"/><text x="60.8291%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="60.5812%" y="741" width="0.0211%" height="15" fill="rgb(250,221,0)" fg:x="60231" fg:w="21"/><text x="60.8312%" y="751.50"></text></g><g><title>bytecode_verifier::type_safety::instantiate (22 samples, 0.02%)</title><rect x="60.6023%" y="757" width="0.0221%" height="15" fill="rgb(245,149,46)" fg:x="60252" fg:w="22"/><text x="60.8523%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="60.6133%" y="741" width="0.0111%" height="15" fill="rgb(215,37,27)" fg:x="60263" fg:w="11"/><text x="60.8633%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="60.6133%" y="725" width="0.0111%" height="15" fill="rgb(232,65,3)" fg:x="60263" fg:w="11"/><text x="60.8633%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="60.6144%" y="709" width="0.0101%" height="15" fill="rgb(214,2,16)" fg:x="60264" fg:w="10"/><text x="60.8644%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="60.6144%" y="693" width="0.0101%" height="15" fill="rgb(227,131,50)" fg:x="60264" fg:w="10"/><text x="60.8644%" y="703.50"></text></g><g><title>bytecode_verifier::type_safety::instantiate (77 samples, 0.08%)</title><rect x="60.5620%" y="773" width="0.0774%" height="15" fill="rgb(247,131,45)" fg:x="60212" fg:w="77"/><text x="60.8120%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.02%)</title><rect x="60.6244%" y="757" width="0.0151%" height="15" fill="rgb(215,97,47)" fg:x="60274" fg:w="15"/><text x="60.8744%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="60.6244%" y="741" width="0.0151%" height="15" fill="rgb(233,143,12)" fg:x="60274" fg:w="15"/><text x="60.8744%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="60.6264%" y="725" width="0.0131%" height="15" fill="rgb(222,57,17)" fg:x="60276" fg:w="13"/><text x="60.8764%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="60.6264%" y="709" width="0.0131%" height="15" fill="rgb(214,119,38)" fg:x="60276" fg:w="13"/><text x="60.8764%" y="719.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.02%)</title><rect x="60.6496%" y="741" width="0.0231%" height="15" fill="rgb(217,28,47)" fg:x="60299" fg:w="23"/><text x="60.8996%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (36 samples, 0.04%)</title><rect x="60.6496%" y="757" width="0.0362%" height="15" fill="rgb(231,14,52)" fg:x="60299" fg:w="36"/><text x="60.8996%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (13 samples, 0.01%)</title><rect x="60.6727%" y="741" width="0.0131%" height="15" fill="rgb(220,158,18)" fg:x="60322" fg:w="13"/><text x="60.9227%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (44 samples, 0.04%)</title><rect x="60.6425%" y="773" width="0.0443%" height="15" fill="rgb(222,143,46)" fg:x="60292" fg:w="44"/><text x="60.8925%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (10 samples, 0.01%)</title><rect x="60.6868%" y="773" width="0.0101%" height="15" fill="rgb(227,165,5)" fg:x="60336" fg:w="10"/><text x="60.9368%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="60.6868%" y="757" width="0.0101%" height="15" fill="rgb(216,222,49)" fg:x="60336" fg:w="10"/><text x="60.9368%" y="767.50"></text></g><g><title>bytecode_verifier::type_safety::call (269 samples, 0.27%)</title><rect x="60.4474%" y="789" width="0.2706%" height="15" fill="rgb(238,73,39)" fg:x="60098" fg:w="269"/><text x="60.6974%" y="799.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (21 samples, 0.02%)</title><rect x="60.6968%" y="773" width="0.0211%" height="15" fill="rgb(252,115,9)" fg:x="60346" fg:w="21"/><text x="60.9468%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (17 samples, 0.02%)</title><rect x="60.7009%" y="757" width="0.0171%" height="15" fill="rgb(238,202,4)" fg:x="60350" fg:w="17"/><text x="60.9509%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (14 samples, 0.01%)</title><rect x="60.7039%" y="741" width="0.0141%" height="15" fill="rgb(252,153,44)" fg:x="60353" fg:w="14"/><text x="60.9539%" y="751.50"></text></g><g><title>bytecode_verifier::type_safety::TypeSafetyChecker::abilities (26 samples, 0.03%)</title><rect x="60.7260%" y="773" width="0.0262%" height="15" fill="rgb(235,128,27)" fg:x="60375" fg:w="26"/><text x="60.9760%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (25 samples, 0.03%)</title><rect x="60.7270%" y="757" width="0.0251%" height="15" fill="rgb(221,121,47)" fg:x="60376" fg:w="25"/><text x="60.9770%" y="767.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (11 samples, 0.01%)</title><rect x="60.7411%" y="741" width="0.0111%" height="15" fill="rgb(247,211,47)" fg:x="60390" fg:w="11"/><text x="60.9911%" y="751.50"></text></g><g><title>bytecode_verifier::type_safety::exists (44 samples, 0.04%)</title><rect x="60.7179%" y="789" width="0.0443%" height="15" fill="rgb(252,47,49)" fg:x="60367" fg:w="44"/><text x="60.9679%" y="799.50"></text></g><g><title>bytecode_verifier::type_safety::type_fields_signature (17 samples, 0.02%)</title><rect x="60.7743%" y="773" width="0.0171%" height="15" fill="rgb(219,119,53)" fg:x="60423" fg:w="17"/><text x="61.0243%" y="783.50"></text></g><g><title>bytecode_verifier::type_safety::pack (36 samples, 0.04%)</title><rect x="60.7682%" y="789" width="0.0362%" height="15" fill="rgb(243,165,53)" fg:x="60417" fg:w="36"/><text x="61.0182%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="60.8205%" y="757" width="0.0141%" height="15" fill="rgb(230,12,35)" fg:x="60469" fg:w="14"/><text x="61.0705%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (16 samples, 0.02%)</title><rect x="60.8205%" y="789" width="0.0161%" height="15" fill="rgb(239,57,49)" fg:x="60469" fg:w="16"/><text x="61.0705%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (16 samples, 0.02%)</title><rect x="60.8205%" y="773" width="0.0161%" height="15" fill="rgb(231,154,7)" fg:x="60469" fg:w="16"/><text x="61.0705%" y="783.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.01%)</title><rect x="60.8397%" y="757" width="0.0101%" height="15" fill="rgb(248,81,34)" fg:x="60488" fg:w="10"/><text x="61.0897%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (11 samples, 0.01%)</title><rect x="60.8397%" y="773" width="0.0111%" height="15" fill="rgb(247,9,5)" fg:x="60488" fg:w="11"/><text x="61.0897%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureToken&gt; (18 samples, 0.02%)</title><rect x="60.8366%" y="789" width="0.0181%" height="15" fill="rgb(228,172,27)" fg:x="60485" fg:w="18"/><text x="61.0866%" y="799.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (18 samples, 0.02%)</title><rect x="60.8547%" y="789" width="0.0181%" height="15" fill="rgb(230,57,44)" fg:x="60503" fg:w="18"/><text x="61.1047%" y="799.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::constant_at (12 samples, 0.01%)</title><rect x="60.8728%" y="789" width="0.0121%" height="15" fill="rgb(249,35,22)" fg:x="60521" fg:w="12"/><text x="61.1228%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::constant_at (11 samples, 0.01%)</title><rect x="60.8739%" y="773" width="0.0111%" height="15" fill="rgb(250,137,27)" fg:x="60522" fg:w="11"/><text x="61.1239%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.01%)</title><rect x="60.8739%" y="757" width="0.0111%" height="15" fill="rgb(251,57,31)" fg:x="60522" fg:w="11"/><text x="61.1239%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="60.8739%" y="741" width="0.0111%" height="15" fill="rgb(238,60,0)" fg:x="60522" fg:w="11"/><text x="61.1239%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.01%)</title><rect x="60.8990%" y="757" width="0.0111%" height="15" fill="rgb(242,185,39)" fg:x="60547" fg:w="11"/><text x="61.1490%" y="767.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (23 samples, 0.02%)</title><rect x="60.8879%" y="789" width="0.0231%" height="15" fill="rgb(240,63,43)" fg:x="60536" fg:w="23"/><text x="61.1379%" y="799.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (22 samples, 0.02%)</title><rect x="60.8889%" y="773" width="0.0221%" height="15" fill="rgb(236,155,6)" fg:x="60537" fg:w="22"/><text x="61.1389%" y="783.50"></text></g><g><title>bytecode_verifier::type_safety::verify_instr (980 samples, 0.99%)</title><rect x="59.9465%" y="805" width="0.9857%" height="15" fill="rgb(215,11,29)" fg:x="59600" fg:w="980"/><text x="60.1965%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="60.9543%" y="725" width="0.0141%" height="15" fill="rgb(228,180,48)" fg:x="60602" fg:w="14"/><text x="61.2043%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="60.9543%" y="709" width="0.0141%" height="15" fill="rgb(241,102,12)" fg:x="60602" fg:w="14"/><text x="61.2043%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="60.9543%" y="693" width="0.0141%" height="15" fill="rgb(246,213,4)" fg:x="60602" fg:w="14"/><text x="61.2043%" y="703.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module (39 samples, 0.04%)</title><rect x="60.9322%" y="789" width="0.0392%" height="15" fill="rgb(218,134,35)" fg:x="60580" fg:w="39"/><text x="61.1822%" y="799.50"></text></g><g><title>bytecode_verifier::ability_field_requirements::verify_module_impl (39 samples, 0.04%)</title><rect x="60.9322%" y="773" width="0.0392%" height="15" fill="rgb(251,117,35)" fg:x="60580" fg:w="39"/><text x="61.1822%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::abilities (33 samples, 0.03%)</title><rect x="60.9382%" y="757" width="0.0332%" height="15" fill="rgb(206,156,45)" fg:x="60586" fg:w="33"/><text x="61.1882%" y="767.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (17 samples, 0.02%)</title><rect x="60.9543%" y="741" width="0.0171%" height="15" fill="rgb(218,52,27)" fg:x="60602" fg:w="17"/><text x="61.2043%" y="751.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_constants (32 samples, 0.03%)</title><rect x="60.9825%" y="757" width="0.0322%" height="15" fill="rgb(238,83,36)" fg:x="60630" fg:w="32"/><text x="61.2325%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (32 samples, 0.03%)</title><rect x="60.9825%" y="741" width="0.0322%" height="15" fill="rgb(218,53,43)" fg:x="60630" fg:w="32"/><text x="61.2325%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (24 samples, 0.02%)</title><rect x="60.9905%" y="725" width="0.0241%" height="15" fill="rgb(239,54,39)" fg:x="60638" fg:w="24"/><text x="61.2405%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (24 samples, 0.02%)</title><rect x="60.9905%" y="709" width="0.0241%" height="15" fill="rgb(212,198,13)" fg:x="60638" fg:w="24"/><text x="61.2405%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.02%)</title><rect x="60.9915%" y="693" width="0.0231%" height="15" fill="rgb(234,54,46)" fg:x="60639" fg:w="23"/><text x="61.2415%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (23 samples, 0.02%)</title><rect x="61.0197%" y="725" width="0.0231%" height="15" fill="rgb(217,120,7)" fg:x="60667" fg:w="23"/><text x="61.2697%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (22 samples, 0.02%)</title><rect x="61.0207%" y="709" width="0.0221%" height="15" fill="rgb(246,39,15)" fg:x="60668" fg:w="22"/><text x="61.2707%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.02%)</title><rect x="61.0207%" y="693" width="0.0221%" height="15" fill="rgb(242,143,31)" fg:x="60668" fg:w="22"/><text x="61.2707%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.01%)</title><rect x="61.0308%" y="677" width="0.0121%" height="15" fill="rgb(252,60,24)" fg:x="60678" fg:w="12"/><text x="61.2808%" y="687.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_field_handles (29 samples, 0.03%)</title><rect x="61.0147%" y="757" width="0.0292%" height="15" fill="rgb(249,220,7)" fg:x="60662" fg:w="29"/><text x="61.2647%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (29 samples, 0.03%)</title><rect x="61.0147%" y="741" width="0.0292%" height="15" fill="rgb(236,67,13)" fg:x="60662" fg:w="29"/><text x="61.2647%" y="751.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_defintions (18 samples, 0.02%)</title><rect x="61.0479%" y="757" width="0.0181%" height="15" fill="rgb(210,62,39)" fg:x="60695" fg:w="18"/><text x="61.2979%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="61.0690%" y="725" width="0.0151%" height="15" fill="rgb(219,122,53)" fg:x="60716" fg:w="15"/><text x="61.3190%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="61.0941%" y="661" width="0.0141%" height="15" fill="rgb(218,87,25)" fg:x="60741" fg:w="14"/><text x="61.3441%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="61.0941%" y="645" width="0.0141%" height="15" fill="rgb(234,179,48)" fg:x="60741" fg:w="14"/><text x="61.3441%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="61.0941%" y="629" width="0.0141%" height="15" fill="rgb(248,90,0)" fg:x="60741" fg:w="14"/><text x="61.3441%" y="639.50"></text></g><g><title>hashbrown::map::make_insert_hash (31 samples, 0.03%)</title><rect x="61.0931%" y="677" width="0.0312%" height="15" fill="rgb(207,228,37)" fg:x="60740" fg:w="31"/><text x="61.3431%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (13 samples, 0.01%)</title><rect x="61.1112%" y="661" width="0.0131%" height="15" fill="rgb(235,214,15)" fg:x="60758" fg:w="13"/><text x="61.3612%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="61.1243%" y="677" width="0.0111%" height="15" fill="rgb(210,144,39)" fg:x="60771" fg:w="11"/><text x="61.3743%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="61.1243%" y="661" width="0.0111%" height="15" fill="rgb(222,67,41)" fg:x="60771" fg:w="11"/><text x="61.3743%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (17 samples, 0.02%)</title><rect x="61.1515%" y="661" width="0.0171%" height="15" fill="rgb(205,35,37)" fg:x="60798" fg:w="17"/><text x="61.4015%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (87 samples, 0.09%)</title><rect x="61.0861%" y="725" width="0.0875%" height="15" fill="rgb(216,125,40)" fg:x="60733" fg:w="87"/><text x="61.3361%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (84 samples, 0.08%)</title><rect x="61.0891%" y="709" width="0.0845%" height="15" fill="rgb(228,227,20)" fg:x="60736" fg:w="84"/><text x="61.3391%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (84 samples, 0.08%)</title><rect x="61.0891%" y="693" width="0.0845%" height="15" fill="rgb(242,173,45)" fg:x="60736" fg:w="84"/><text x="61.3391%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (38 samples, 0.04%)</title><rect x="61.1354%" y="677" width="0.0382%" height="15" fill="rgb(215,79,24)" fg:x="60782" fg:w="38"/><text x="61.3854%" y="687.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_handles (108 samples, 0.11%)</title><rect x="61.0660%" y="757" width="0.1086%" height="15" fill="rgb(238,164,38)" fg:x="60713" fg:w="108"/><text x="61.3160%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (108 samples, 0.11%)</title><rect x="61.0660%" y="741" width="0.1086%" height="15" fill="rgb(245,196,38)" fg:x="60713" fg:w="108"/><text x="61.3160%" y="751.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.01%)</title><rect x="61.1857%" y="677" width="0.0121%" height="15" fill="rgb(231,217,29)" fg:x="60832" fg:w="12"/><text x="61.4357%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.01%)</title><rect x="61.1977%" y="677" width="0.0101%" height="15" fill="rgb(245,6,4)" fg:x="60844" fg:w="10"/><text x="61.4477%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="61.1977%" y="661" width="0.0101%" height="15" fill="rgb(214,76,49)" fg:x="60844" fg:w="10"/><text x="61.4477%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_function_instantiations (48 samples, 0.05%)</title><rect x="61.1746%" y="757" width="0.0483%" height="15" fill="rgb(205,96,12)" fg:x="60821" fg:w="48"/><text x="61.4246%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (48 samples, 0.05%)</title><rect x="61.1746%" y="741" width="0.0483%" height="15" fill="rgb(243,131,4)" fg:x="60821" fg:w="48"/><text x="61.4246%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (41 samples, 0.04%)</title><rect x="61.1816%" y="725" width="0.0412%" height="15" fill="rgb(214,114,4)" fg:x="60828" fg:w="41"/><text x="61.4316%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (41 samples, 0.04%)</title><rect x="61.1816%" y="709" width="0.0412%" height="15" fill="rgb(234,215,15)" fg:x="60828" fg:w="41"/><text x="61.4316%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.04%)</title><rect x="61.1836%" y="693" width="0.0392%" height="15" fill="rgb(250,216,45)" fg:x="60830" fg:w="39"/><text x="61.4336%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.02%)</title><rect x="61.2078%" y="677" width="0.0151%" height="15" fill="rgb(236,128,4)" fg:x="60854" fg:w="15"/><text x="61.4578%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="61.2249%" y="725" width="0.0121%" height="15" fill="rgb(234,50,33)" fg:x="60871" fg:w="12"/><text x="61.4749%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.03%)</title><rect x="61.2440%" y="661" width="0.0282%" height="15" fill="rgb(253,131,37)" fg:x="60890" fg:w="28"/><text x="61.4940%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28 samples, 0.03%)</title><rect x="61.2440%" y="645" width="0.0282%" height="15" fill="rgb(218,55,27)" fg:x="60890" fg:w="28"/><text x="61.4940%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.03%)</title><rect x="61.2450%" y="629" width="0.0272%" height="15" fill="rgb(241,220,28)" fg:x="60891" fg:w="27"/><text x="61.4950%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.02%)</title><rect x="61.2520%" y="613" width="0.0201%" height="15" fill="rgb(241,90,48)" fg:x="60898" fg:w="20"/><text x="61.5020%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="61.2772%" y="597" width="0.0211%" height="15" fill="rgb(216,43,37)" fg:x="60923" fg:w="21"/><text x="61.5272%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="61.2772%" y="581" width="0.0211%" height="15" fill="rgb(207,173,9)" fg:x="60923" fg:w="21"/><text x="61.5272%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="61.2772%" y="565" width="0.0211%" height="15" fill="rgb(240,126,30)" fg:x="60923" fg:w="21"/><text x="61.5272%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (13 samples, 0.01%)</title><rect x="61.2983%" y="597" width="0.0131%" height="15" fill="rgb(228,178,53)" fg:x="60944" fg:w="13"/><text x="61.5483%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="61.2983%" y="581" width="0.0131%" height="15" fill="rgb(217,33,4)" fg:x="60944" fg:w="13"/><text x="61.5483%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="61.2983%" y="565" width="0.0131%" height="15" fill="rgb(206,124,34)" fg:x="60944" fg:w="13"/><text x="61.5483%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="61.2983%" y="549" width="0.0131%" height="15" fill="rgb(208,122,53)" fg:x="60944" fg:w="13"/><text x="61.5483%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (68 samples, 0.07%)</title><rect x="61.2440%" y="677" width="0.0684%" height="15" fill="rgb(215,202,26)" fg:x="60890" fg:w="68"/><text x="61.4940%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (35 samples, 0.04%)</title><rect x="61.2772%" y="661" width="0.0352%" height="15" fill="rgb(232,198,31)" fg:x="60923" fg:w="35"/><text x="61.5272%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (35 samples, 0.04%)</title><rect x="61.2772%" y="645" width="0.0352%" height="15" fill="rgb(222,23,35)" fg:x="60923" fg:w="35"/><text x="61.5272%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (35 samples, 0.04%)</title><rect x="61.2772%" y="629" width="0.0352%" height="15" fill="rgb(242,27,53)" fg:x="60923" fg:w="35"/><text x="61.5272%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (35 samples, 0.04%)</title><rect x="61.2772%" y="613" width="0.0352%" height="15" fill="rgb(210,216,42)" fg:x="60923" fg:w="35"/><text x="61.5272%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (23 samples, 0.02%)</title><rect x="61.3124%" y="677" width="0.0231%" height="15" fill="rgb(234,39,38)" fg:x="60958" fg:w="23"/><text x="61.5624%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="61.3144%" y="661" width="0.0211%" height="15" fill="rgb(235,126,54)" fg:x="60960" fg:w="21"/><text x="61.5644%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.01%)</title><rect x="61.3365%" y="661" width="0.0101%" height="15" fill="rgb(235,150,33)" fg:x="60982" fg:w="10"/><text x="61.5865%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 0.02%)</title><rect x="61.3526%" y="661" width="0.0151%" height="15" fill="rgb(249,49,53)" fg:x="60998" fg:w="15"/><text x="61.6026%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_identifiers (156 samples, 0.16%)</title><rect x="61.2229%" y="757" width="0.1569%" height="15" fill="rgb(238,60,50)" fg:x="60869" fg:w="156"/><text x="61.4729%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (155 samples, 0.16%)</title><rect x="61.2239%" y="741" width="0.1559%" height="15" fill="rgb(210,5,2)" fg:x="60870" fg:w="155"/><text x="61.4739%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (142 samples, 0.14%)</title><rect x="61.2369%" y="725" width="0.1428%" height="15" fill="rgb(214,207,24)" fg:x="60883" fg:w="142"/><text x="61.4869%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (141 samples, 0.14%)</title><rect x="61.2380%" y="709" width="0.1418%" height="15" fill="rgb(228,173,2)" fg:x="60884" fg:w="141"/><text x="61.4880%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (140 samples, 0.14%)</title><rect x="61.2390%" y="693" width="0.1408%" height="15" fill="rgb(244,26,8)" fg:x="60885" fg:w="140"/><text x="61.4890%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (44 samples, 0.04%)</title><rect x="61.3355%" y="677" width="0.0443%" height="15" fill="rgb(249,153,35)" fg:x="60981" fg:w="44"/><text x="61.5855%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (12 samples, 0.01%)</title><rect x="61.3677%" y="661" width="0.0121%" height="15" fill="rgb(221,215,40)" fg:x="61013" fg:w="12"/><text x="61.6177%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (11 samples, 0.01%)</title><rect x="61.3687%" y="645" width="0.0111%" height="15" fill="rgb(238,106,35)" fg:x="61014" fg:w="11"/><text x="61.6187%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (10 samples, 0.01%)</title><rect x="61.3818%" y="677" width="0.0101%" height="15" fill="rgb(207,195,21)" fg:x="61027" fg:w="10"/><text x="61.6318%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (22 samples, 0.02%)</title><rect x="61.3818%" y="725" width="0.0221%" height="15" fill="rgb(205,43,29)" fg:x="61027" fg:w="22"/><text x="61.6318%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (22 samples, 0.02%)</title><rect x="61.3818%" y="709" width="0.0221%" height="15" fill="rgb(236,35,21)" fg:x="61027" fg:w="22"/><text x="61.6318%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.02%)</title><rect x="61.3818%" y="693" width="0.0221%" height="15" fill="rgb(244,74,8)" fg:x="61027" fg:w="22"/><text x="61.6318%" y="703.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_module_handles (26 samples, 0.03%)</title><rect x="61.3798%" y="757" width="0.0262%" height="15" fill="rgb(241,229,7)" fg:x="61025" fg:w="26"/><text x="61.6298%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (26 samples, 0.03%)</title><rect x="61.3798%" y="741" width="0.0262%" height="15" fill="rgb(212,223,25)" fg:x="61025" fg:w="26"/><text x="61.6298%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="61.4210%" y="661" width="0.0201%" height="15" fill="rgb(234,58,53)" fg:x="61066" fg:w="20"/><text x="61.6710%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="61.4210%" y="645" width="0.0201%" height="15" fill="rgb(244,36,1)" fg:x="61066" fg:w="20"/><text x="61.6710%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="61.4210%" y="629" width="0.0201%" height="15" fill="rgb(222,40,54)" fg:x="61066" fg:w="20"/><text x="61.6710%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="61.4270%" y="613" width="0.0141%" height="15" fill="rgb(210,207,39)" fg:x="61072" fg:w="14"/><text x="61.6770%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="61.4482%" y="581" width="0.0111%" height="15" fill="rgb(234,52,14)" fg:x="61093" fg:w="11"/><text x="61.6982%" y="591.50"></text></g><g><title>core::hash::Hash::hash_slice (22 samples, 0.02%)</title><rect x="61.4441%" y="597" width="0.0221%" height="15" fill="rgb(239,108,46)" fg:x="61089" fg:w="22"/><text x="61.6941%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (54 samples, 0.05%)</title><rect x="61.4200%" y="677" width="0.0543%" height="15" fill="rgb(252,223,5)" fg:x="61065" fg:w="54"/><text x="61.6700%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.03%)</title><rect x="61.4441%" y="661" width="0.0302%" height="15" fill="rgb(227,181,11)" fg:x="61089" fg:w="30"/><text x="61.6941%" y="671.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::hash::Hash&gt;::hash (30 samples, 0.03%)</title><rect x="61.4441%" y="645" width="0.0302%" height="15" fill="rgb(248,126,40)" fg:x="61089" fg:w="30"/><text x="61.6941%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (30 samples, 0.03%)</title><rect x="61.4441%" y="629" width="0.0302%" height="15" fill="rgb(243,1,18)" fg:x="61089" fg:w="30"/><text x="61.6941%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (30 samples, 0.03%)</title><rect x="61.4441%" y="613" width="0.0302%" height="15" fill="rgb(214,145,23)" fg:x="61089" fg:w="30"/><text x="61.6941%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="61.4743%" y="677" width="0.0111%" height="15" fill="rgb(241,218,11)" fg:x="61119" fg:w="11"/><text x="61.7243%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="61.4753%" y="661" width="0.0101%" height="15" fill="rgb(214,219,24)" fg:x="61120" fg:w="10"/><text x="61.7253%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (17 samples, 0.02%)</title><rect x="61.4954%" y="661" width="0.0171%" height="15" fill="rgb(235,32,7)" fg:x="61140" fg:w="17"/><text x="61.7454%" y="671.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_signatures (111 samples, 0.11%)</title><rect x="61.4059%" y="757" width="0.1116%" height="15" fill="rgb(227,121,28)" fg:x="61051" fg:w="111"/><text x="61.6559%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (111 samples, 0.11%)</title><rect x="61.4059%" y="741" width="0.1116%" height="15" fill="rgb(216,129,49)" fg:x="61051" fg:w="111"/><text x="61.6559%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (100 samples, 0.10%)</title><rect x="61.4170%" y="725" width="0.1006%" height="15" fill="rgb(207,194,50)" fg:x="61062" fg:w="100"/><text x="61.6670%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (99 samples, 0.10%)</title><rect x="61.4180%" y="709" width="0.0996%" height="15" fill="rgb(207,4,18)" fg:x="61063" fg:w="99"/><text x="61.6680%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (98 samples, 0.10%)</title><rect x="61.4190%" y="693" width="0.0986%" height="15" fill="rgb(213,50,30)" fg:x="61064" fg:w="98"/><text x="61.6690%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (32 samples, 0.03%)</title><rect x="61.4854%" y="677" width="0.0322%" height="15" fill="rgb(208,77,22)" fg:x="61130" fg:w="32"/><text x="61.7354%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.01%)</title><rect x="61.5266%" y="725" width="0.0131%" height="15" fill="rgb(244,204,34)" fg:x="61171" fg:w="13"/><text x="61.7766%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 0.01%)</title><rect x="61.5276%" y="709" width="0.0121%" height="15" fill="rgb(230,20,17)" fg:x="61172" fg:w="12"/><text x="61.7776%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.01%)</title><rect x="61.5276%" y="693" width="0.0121%" height="15" fill="rgb(237,83,15)" fg:x="61172" fg:w="12"/><text x="61.7776%" y="703.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::check_struct_handles (17 samples, 0.02%)</title><rect x="61.5236%" y="757" width="0.0171%" height="15" fill="rgb(221,109,25)" fg:x="61168" fg:w="17"/><text x="61.7736%" y="767.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::first_duplicate_element (17 samples, 0.02%)</title><rect x="61.5236%" y="741" width="0.0171%" height="15" fill="rgb(205,194,52)" fg:x="61168" fg:w="17"/><text x="61.7736%" y="751.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module (573 samples, 0.58%)</title><rect x="60.9714%" y="789" width="0.5763%" height="15" fill="rgb(244,173,54)" fg:x="60619" fg:w="573"/><text x="61.2214%" y="799.50"></text></g><g><title>bytecode_verifier::check_duplication::DuplicationChecker::verify_module_impl (573 samples, 0.58%)</title><rect x="60.9714%" y="773" width="0.5763%" height="15" fill="rgb(227,181,18)" fg:x="60619" fg:w="573"/><text x="61.2214%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (11 samples, 0.01%)</title><rect x="61.6071%" y="725" width="0.0111%" height="15" fill="rgb(238,36,30)" fg:x="61251" fg:w="11"/><text x="61.8571%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (10 samples, 0.01%)</title><rect x="61.6081%" y="709" width="0.0101%" height="15" fill="rgb(254,85,0)" fg:x="61252" fg:w="10"/><text x="61.8581%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.06%)</title><rect x="61.5900%" y="741" width="0.0634%" height="15" fill="rgb(247,63,33)" fg:x="61234" fg:w="63"/><text x="61.8400%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.04%)</title><rect x="61.6182%" y="725" width="0.0352%" height="15" fill="rgb(220,7,54)" fg:x="61262" fg:w="35"/><text x="61.8682%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="61.7097%" y="709" width="0.0161%" height="15" fill="rgb(238,227,21)" fg:x="61353" fg:w="16"/><text x="61.9597%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="61.7097%" y="725" width="0.0171%" height="15" fill="rgb(237,29,31)" fg:x="61353" fg:w="17"/><text x="61.9597%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (16 samples, 0.02%)</title><rect x="61.7298%" y="645" width="0.0161%" height="15" fill="rgb(211,21,50)" fg:x="61373" fg:w="16"/><text x="61.9798%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (17 samples, 0.02%)</title><rect x="61.7298%" y="661" width="0.0171%" height="15" fill="rgb(239,119,2)" fg:x="61373" fg:w="17"/><text x="61.9798%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (24 samples, 0.02%)</title><rect x="61.7268%" y="693" width="0.0241%" height="15" fill="rgb(250,2,39)" fg:x="61370" fg:w="24"/><text x="61.9768%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.02%)</title><rect x="61.7268%" y="677" width="0.0241%" height="15" fill="rgb(244,46,53)" fg:x="61370" fg:w="24"/><text x="61.9768%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="61.7268%" y="709" width="0.0262%" height="15" fill="rgb(209,21,19)" fg:x="61370" fg:w="26"/><text x="61.9768%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="61.7268%" y="725" width="0.0292%" height="15" fill="rgb(236,145,4)" fg:x="61370" fg:w="29"/><text x="61.9768%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="61.7559%" y="725" width="0.0111%" height="15" fill="rgb(220,133,36)" fg:x="61399" fg:w="11"/><text x="62.0059%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.06%)</title><rect x="61.7670%" y="725" width="0.0553%" height="15" fill="rgb(244,18,3)" fg:x="61410" fg:w="55"/><text x="62.0170%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="61.7851%" y="709" width="0.0372%" height="15" fill="rgb(232,171,48)" fg:x="61428" fg:w="37"/><text x="62.0351%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="61.8083%" y="693" width="0.0141%" height="15" fill="rgb(223,223,53)" fg:x="61451" fg:w="14"/><text x="62.0583%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="61.8254%" y="709" width="0.0111%" height="15" fill="rgb(246,92,13)" fg:x="61468" fg:w="11"/><text x="62.0754%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.02%)</title><rect x="61.8223%" y="725" width="0.0151%" height="15" fill="rgb(229,171,10)" fg:x="61465" fg:w="15"/><text x="62.0723%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.02%)</title><rect x="61.8575%" y="709" width="0.0151%" height="15" fill="rgb(213,131,26)" fg:x="61500" fg:w="15"/><text x="62.1075%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="61.8374%" y="725" width="0.0533%" height="15" fill="rgb(242,87,54)" fg:x="61480" fg:w="53"/><text x="62.0874%" y="735.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="61.8766%" y="709" width="0.0141%" height="15" fill="rgb(237,21,35)" fg:x="61519" fg:w="14"/><text x="62.1266%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (18 samples, 0.02%)</title><rect x="61.8927%" y="725" width="0.0181%" height="15" fill="rgb(253,13,47)" fg:x="61535" fg:w="18"/><text x="62.1427%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (18 samples, 0.02%)</title><rect x="61.8927%" y="709" width="0.0181%" height="15" fill="rgb(215,122,49)" fg:x="61535" fg:w="18"/><text x="62.1427%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.02%)</title><rect x="61.8927%" y="693" width="0.0181%" height="15" fill="rgb(209,179,30)" fg:x="61535" fg:w="18"/><text x="62.1427%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (15 samples, 0.02%)</title><rect x="61.8958%" y="677" width="0.0151%" height="15" fill="rgb(235,100,24)" fg:x="61538" fg:w="15"/><text x="62.1458%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="61.8968%" y="661" width="0.0141%" height="15" fill="rgb(209,67,24)" fg:x="61539" fg:w="14"/><text x="62.1468%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.01%)</title><rect x="61.8978%" y="645" width="0.0131%" height="15" fill="rgb(206,74,32)" fg:x="61540" fg:w="13"/><text x="62.1478%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (12 samples, 0.01%)</title><rect x="61.9370%" y="645" width="0.0121%" height="15" fill="rgb(212,45,25)" fg:x="61579" fg:w="12"/><text x="62.1870%" y="655.50"></text></g><g><title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="61.9340%" y="693" width="0.0161%" height="15" fill="rgb(239,26,3)" fg:x="61576" fg:w="16"/><text x="62.1840%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::iter (16 samples, 0.02%)</title><rect x="61.9340%" y="677" width="0.0161%" height="15" fill="rgb(218,36,15)" fg:x="61576" fg:w="16"/><text x="62.1840%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (15 samples, 0.02%)</title><rect x="61.9350%" y="661" width="0.0151%" height="15" fill="rgb(206,108,24)" fg:x="61577" fg:w="15"/><text x="62.1850%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (15 samples, 0.02%)</title><rect x="61.9581%" y="597" width="0.0151%" height="15" fill="rgb(234,204,42)" fg:x="61600" fg:w="15"/><text x="62.2081%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.02%)</title><rect x="61.9561%" y="629" width="0.0191%" height="15" fill="rgb(229,2,11)" fg:x="61598" fg:w="19"/><text x="62.2061%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (18 samples, 0.02%)</title><rect x="61.9571%" y="613" width="0.0181%" height="15" fill="rgb(221,20,48)" fg:x="61599" fg:w="18"/><text x="62.2071%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="61.9521%" y="661" width="0.0241%" height="15" fill="rgb(244,164,10)" fg:x="61594" fg:w="24"/><text x="62.2021%" y="671.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (21 samples, 0.02%)</title><rect x="61.9551%" y="645" width="0.0211%" height="15" fill="rgb(243,229,2)" fg:x="61597" fg:w="21"/><text x="62.2051%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="61.9501%" y="693" width="0.0302%" height="15" fill="rgb(232,131,37)" fg:x="61592" fg:w="30"/><text x="62.2001%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="61.9521%" y="677" width="0.0282%" height="15" fill="rgb(217,156,11)" fg:x="61594" fg:w="28"/><text x="62.2021%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="61.9883%" y="597" width="0.0111%" height="15" fill="rgb(239,99,48)" fg:x="61630" fg:w="11"/><text x="62.2383%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (11 samples, 0.01%)</title><rect x="61.9883%" y="581" width="0.0111%" height="15" fill="rgb(231,209,9)" fg:x="61630" fg:w="11"/><text x="62.2383%" y="591.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.01%)</title><rect x="61.9883%" y="565" width="0.0111%" height="15" fill="rgb(254,97,27)" fg:x="61630" fg:w="11"/><text x="62.2383%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="61.9893%" y="549" width="0.0101%" height="15" fill="rgb(223,151,38)" fg:x="61631" fg:w="10"/><text x="62.2393%" y="559.50"></text></g><g><title>alloc::collections::btree::merge_iter::MergeIterInner&lt;I&gt;::nexts (17 samples, 0.02%)</title><rect x="61.9863%" y="613" width="0.0171%" height="15" fill="rgb(219,206,35)" fg:x="61628" fg:w="17"/><text x="62.2363%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::append::MergeIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="61.9853%" y="629" width="0.0191%" height="15" fill="rgb(216,130,31)" fg:x="61627" fg:w="19"/><text x="62.2353%" y="639.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::append_from_sorted_iters (25 samples, 0.03%)</title><rect x="61.9853%" y="661" width="0.0251%" height="15" fill="rgb(251,97,34)" fg:x="61627" fg:w="25"/><text x="62.2353%" y="671.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (25 samples, 0.03%)</title><rect x="61.9853%" y="645" width="0.0251%" height="15" fill="rgb(246,159,47)" fg:x="61627" fg:w="25"/><text x="62.2353%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::append (34 samples, 0.03%)</title><rect x="61.9813%" y="693" width="0.0342%" height="15" fill="rgb(232,87,10)" fg:x="61623" fg:w="34"/><text x="62.2313%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (34 samples, 0.03%)</title><rect x="61.9813%" y="677" width="0.0342%" height="15" fill="rgb(249,1,37)" fg:x="61623" fg:w="34"/><text x="62.2313%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="62.0185%" y="645" width="0.0141%" height="15" fill="rgb(239,135,14)" fg:x="61660" fg:w="14"/><text x="62.2685%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="62.0215%" y="629" width="0.0111%" height="15" fill="rgb(253,116,46)" fg:x="61663" fg:w="11"/><text x="62.2715%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (11 samples, 0.01%)</title><rect x="62.0215%" y="613" width="0.0111%" height="15" fill="rgb(222,217,37)" fg:x="61663" fg:w="11"/><text x="62.2715%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (18 samples, 0.02%)</title><rect x="62.0154%" y="693" width="0.0181%" height="15" fill="rgb(252,96,8)" fg:x="61657" fg:w="18"/><text x="62.2654%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (18 samples, 0.02%)</title><rect x="62.0154%" y="677" width="0.0181%" height="15" fill="rgb(254,103,41)" fg:x="61657" fg:w="18"/><text x="62.2654%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (18 samples, 0.02%)</title><rect x="62.0154%" y="661" width="0.0181%" height="15" fill="rgb(218,213,19)" fg:x="61657" fg:w="18"/><text x="62.2654%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (20 samples, 0.02%)</title><rect x="62.0557%" y="485" width="0.0201%" height="15" fill="rgb(253,95,21)" fg:x="61697" fg:w="20"/><text x="62.3057%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (30 samples, 0.03%)</title><rect x="62.0547%" y="549" width="0.0302%" height="15" fill="rgb(229,26,28)" fg:x="61696" fg:w="30"/><text x="62.3047%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (29 samples, 0.03%)</title><rect x="62.0557%" y="533" width="0.0292%" height="15" fill="rgb(230,129,16)" fg:x="61697" fg:w="29"/><text x="62.3057%" y="543.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (29 samples, 0.03%)</title><rect x="62.0557%" y="517" width="0.0292%" height="15" fill="rgb(236,126,17)" fg:x="61697" fg:w="29"/><text x="62.3057%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (29 samples, 0.03%)</title><rect x="62.0557%" y="501" width="0.0292%" height="15" fill="rgb(209,33,33)" fg:x="61697" fg:w="29"/><text x="62.3057%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.04%)</title><rect x="62.0436%" y="677" width="0.0432%" height="15" fill="rgb(227,85,29)" fg:x="61685" fg:w="43"/><text x="62.2936%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (42 samples, 0.04%)</title><rect x="62.0446%" y="661" width="0.0422%" height="15" fill="rgb(241,53,46)" fg:x="61686" fg:w="42"/><text x="62.2946%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (41 samples, 0.04%)</title><rect x="62.0456%" y="645" width="0.0412%" height="15" fill="rgb(228,167,53)" fg:x="61687" fg:w="41"/><text x="62.2956%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (41 samples, 0.04%)</title><rect x="62.0456%" y="629" width="0.0412%" height="15" fill="rgb(238,195,45)" fg:x="61687" fg:w="41"/><text x="62.2956%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.04%)</title><rect x="62.0466%" y="613" width="0.0402%" height="15" fill="rgb(252,124,45)" fg:x="61688" fg:w="40"/><text x="62.2966%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.04%)</title><rect x="62.0476%" y="597" width="0.0392%" height="15" fill="rgb(251,38,35)" fg:x="61689" fg:w="39"/><text x="62.2976%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38 samples, 0.04%)</title><rect x="62.0486%" y="581" width="0.0382%" height="15" fill="rgb(227,33,2)" fg:x="61690" fg:w="38"/><text x="62.2986%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (33 samples, 0.03%)</title><rect x="62.0537%" y="565" width="0.0332%" height="15" fill="rgb(223,157,46)" fg:x="61695" fg:w="33"/><text x="62.3037%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.01%)</title><rect x="62.0899%" y="629" width="0.0111%" height="15" fill="rgb(222,78,41)" fg:x="61731" fg:w="11"/><text x="62.3399%" y="639.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::function_acquired_resources (93 samples, 0.09%)</title><rect x="62.0336%" y="693" width="0.0935%" height="15" fill="rgb(248,176,11)" fg:x="61675" fg:w="93"/><text x="62.2836%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (37 samples, 0.04%)</title><rect x="62.0899%" y="677" width="0.0372%" height="15" fill="rgb(241,221,18)" fg:x="61731" fg:w="37"/><text x="62.3399%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (37 samples, 0.04%)</title><rect x="62.0899%" y="661" width="0.0372%" height="15" fill="rgb(218,85,22)" fg:x="61731" fg:w="37"/><text x="62.3399%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.04%)</title><rect x="62.0899%" y="645" width="0.0372%" height="15" fill="rgb(222,223,7)" fg:x="61731" fg:w="37"/><text x="62.3399%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.03%)</title><rect x="62.1009%" y="629" width="0.0262%" height="15" fill="rgb(254,59,39)" fg:x="61742" fg:w="26"/><text x="62.3509%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (23 samples, 0.02%)</title><rect x="62.1040%" y="613" width="0.0231%" height="15" fill="rgb(247,100,27)" fg:x="61745" fg:w="23"/><text x="62.3540%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (12 samples, 0.01%)</title><rect x="62.1150%" y="597" width="0.0121%" height="15" fill="rgb(237,207,10)" fg:x="61756" fg:w="12"/><text x="62.3650%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (12 samples, 0.01%)</title><rect x="62.1150%" y="581" width="0.0121%" height="15" fill="rgb(220,121,28)" fg:x="61756" fg:w="12"/><text x="62.3650%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (12 samples, 0.01%)</title><rect x="62.1150%" y="565" width="0.0121%" height="15" fill="rgb(213,223,20)" fg:x="61756" fg:w="12"/><text x="62.3650%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="62.1432%" y="661" width="0.0111%" height="15" fill="rgb(205,121,27)" fg:x="61784" fg:w="11"/><text x="62.3932%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (20 samples, 0.02%)</title><rect x="62.1412%" y="677" width="0.0201%" height="15" fill="rgb(253,24,53)" fg:x="61782" fg:w="20"/><text x="62.3912%" y="687.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::call_acquire (241 samples, 0.24%)</title><rect x="61.9229%" y="709" width="0.2424%" height="15" fill="rgb(224,224,47)" fg:x="61565" fg:w="241"/><text x="62.1729%" y="719.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (30 samples, 0.03%)</title><rect x="62.1351%" y="693" width="0.0302%" height="15" fill="rgb(250,125,36)" fg:x="61776" fg:w="30"/><text x="62.3851%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (10 samples, 0.01%)</title><rect x="62.1653%" y="693" width="0.0101%" height="15" fill="rgb(240,144,38)" fg:x="61806" fg:w="10"/><text x="62.4153%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (10 samples, 0.01%)</title><rect x="62.1653%" y="677" width="0.0101%" height="15" fill="rgb(250,15,50)" fg:x="61806" fg:w="10"/><text x="62.4153%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (10 samples, 0.01%)</title><rect x="62.1653%" y="661" width="0.0101%" height="15" fill="rgb(210,24,26)" fg:x="61806" fg:w="10"/><text x="62.4153%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (13 samples, 0.01%)</title><rect x="62.1754%" y="661" width="0.0131%" height="15" fill="rgb(234,53,53)" fg:x="61816" fg:w="13"/><text x="62.4254%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (22 samples, 0.02%)</title><rect x="62.1754%" y="677" width="0.0221%" height="15" fill="rgb(208,108,28)" fg:x="61816" fg:w="22"/><text x="62.4254%" y="687.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::struct_acquire (33 samples, 0.03%)</title><rect x="62.1653%" y="709" width="0.0332%" height="15" fill="rgb(227,143,7)" fg:x="61806" fg:w="33"/><text x="62.4153%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (23 samples, 0.02%)</title><rect x="62.1754%" y="693" width="0.0231%" height="15" fill="rgb(238,189,38)" fg:x="61816" fg:w="23"/><text x="62.4254%" y="703.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_instantiation_at (12 samples, 0.01%)</title><rect x="62.1985%" y="709" width="0.0121%" height="15" fill="rgb(222,69,15)" fg:x="61839" fg:w="12"/><text x="62.4485%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.01%)</title><rect x="62.2005%" y="693" width="0.0101%" height="15" fill="rgb(213,169,7)" fg:x="61841" fg:w="10"/><text x="62.4505%" y="703.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify_instruction (299 samples, 0.30%)</title><rect x="61.9108%" y="725" width="0.3007%" height="15" fill="rgb(251,219,4)" fg:x="61553" fg:w="299"/><text x="62.1608%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="62.2337%" y="613" width="0.0111%" height="15" fill="rgb(241,55,40)" fg:x="61874" fg:w="11"/><text x="62.4837%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (14 samples, 0.01%)</title><rect x="62.2649%" y="421" width="0.0141%" height="15" fill="rgb(243,57,30)" fg:x="61905" fg:w="14"/><text x="62.5149%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.01%)</title><rect x="62.2649%" y="405" width="0.0141%" height="15" fill="rgb(234,50,30)" fg:x="61905" fg:w="14"/><text x="62.5149%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="62.2669%" y="389" width="0.0121%" height="15" fill="rgb(239,23,42)" fg:x="61907" fg:w="12"/><text x="62.5169%" y="399.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (22 samples, 0.02%)</title><rect x="62.2649%" y="437" width="0.0221%" height="15" fill="rgb(217,38,19)" fg:x="61905" fg:w="22"/><text x="62.5149%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (32 samples, 0.03%)</title><rect x="62.2558%" y="517" width="0.0322%" height="15" fill="rgb(215,179,16)" fg:x="61896" fg:w="32"/><text x="62.5058%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (29 samples, 0.03%)</title><rect x="62.2589%" y="501" width="0.0292%" height="15" fill="rgb(254,21,37)" fg:x="61899" fg:w="29"/><text x="62.5089%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.03%)</title><rect x="62.2629%" y="485" width="0.0251%" height="15" fill="rgb(219,207,48)" fg:x="61903" fg:w="25"/><text x="62.5129%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (24 samples, 0.02%)</title><rect x="62.2639%" y="469" width="0.0241%" height="15" fill="rgb(227,225,41)" fg:x="61904" fg:w="24"/><text x="62.5139%" y="479.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (24 samples, 0.02%)</title><rect x="62.2639%" y="453" width="0.0241%" height="15" fill="rgb(223,130,1)" fg:x="61904" fg:w="24"/><text x="62.5139%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="62.2971%" y="469" width="0.0101%" height="15" fill="rgb(249,54,42)" fg:x="61937" fg:w="10"/><text x="62.5471%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (65 samples, 0.07%)</title><rect x="62.2528%" y="533" width="0.0654%" height="15" fill="rgb(248,69,25)" fg:x="61893" fg:w="65"/><text x="62.5028%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (29 samples, 0.03%)</title><rect x="62.2890%" y="517" width="0.0292%" height="15" fill="rgb(234,21,32)" fg:x="61929" fg:w="29"/><text x="62.5390%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="62.2900%" y="501" width="0.0282%" height="15" fill="rgb(252,136,6)" fg:x="61930" fg:w="28"/><text x="62.5400%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (26 samples, 0.03%)</title><rect x="62.2920%" y="485" width="0.0262%" height="15" fill="rgb(245,87,12)" fg:x="61932" fg:w="26"/><text x="62.5420%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (14 samples, 0.01%)</title><rect x="62.3323%" y="469" width="0.0141%" height="15" fill="rgb(208,12,15)" fg:x="61972" fg:w="14"/><text x="62.5823%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (25 samples, 0.03%)</title><rect x="62.3262%" y="485" width="0.0251%" height="15" fill="rgb(250,98,2)" fg:x="61966" fg:w="25"/><text x="62.5762%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (104 samples, 0.10%)</title><rect x="62.2488%" y="549" width="0.1046%" height="15" fill="rgb(205,213,15)" fg:x="61889" fg:w="104"/><text x="62.4988%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (35 samples, 0.04%)</title><rect x="62.3182%" y="533" width="0.0352%" height="15" fill="rgb(248,192,44)" fg:x="61958" fg:w="35"/><text x="62.5682%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (32 samples, 0.03%)</title><rect x="62.3212%" y="517" width="0.0322%" height="15" fill="rgb(221,89,17)" fg:x="61961" fg:w="32"/><text x="62.5712%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (28 samples, 0.03%)</title><rect x="62.3252%" y="501" width="0.0282%" height="15" fill="rgb(209,55,3)" fg:x="61965" fg:w="28"/><text x="62.5752%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (107 samples, 0.11%)</title><rect x="62.2468%" y="597" width="0.1076%" height="15" fill="rgb(247,23,45)" fg:x="61887" fg:w="107"/><text x="62.4968%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (107 samples, 0.11%)</title><rect x="62.2468%" y="581" width="0.1076%" height="15" fill="rgb(235,152,23)" fg:x="61887" fg:w="107"/><text x="62.4968%" y="591.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (107 samples, 0.11%)</title><rect x="62.2468%" y="565" width="0.1076%" height="15" fill="rgb(244,63,13)" fg:x="61887" fg:w="107"/><text x="62.4968%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130 samples, 0.13%)</title><rect x="62.2247%" y="661" width="0.1308%" height="15" fill="rgb(227,30,37)" fg:x="61865" fg:w="130"/><text x="62.4747%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (128 samples, 0.13%)</title><rect x="62.2267%" y="645" width="0.1287%" height="15" fill="rgb(224,49,42)" fg:x="61867" fg:w="128"/><text x="62.4767%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (125 samples, 0.13%)</title><rect x="62.2297%" y="629" width="0.1257%" height="15" fill="rgb(218,129,5)" fg:x="61870" fg:w="125"/><text x="62.4797%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (110 samples, 0.11%)</title><rect x="62.2448%" y="613" width="0.1106%" height="15" fill="rgb(240,199,54)" fg:x="61885" fg:w="110"/><text x="62.4948%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (135 samples, 0.14%)</title><rect x="62.2206%" y="693" width="0.1358%" height="15" fill="rgb(234,31,13)" fg:x="61861" fg:w="135"/><text x="62.4706%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (134 samples, 0.13%)</title><rect x="62.2216%" y="677" width="0.1348%" height="15" fill="rgb(219,73,54)" fg:x="61862" fg:w="134"/><text x="62.4716%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (140 samples, 0.14%)</title><rect x="62.2166%" y="725" width="0.1408%" height="15" fill="rgb(251,162,10)" fg:x="61857" fg:w="140"/><text x="62.4666%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (139 samples, 0.14%)</title><rect x="62.2176%" y="709" width="0.1398%" height="15" fill="rgb(240,138,47)" fg:x="61858" fg:w="139"/><text x="62.4676%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (16 samples, 0.02%)</title><rect x="62.3745%" y="597" width="0.0161%" height="15" fill="rgb(216,138,26)" fg:x="62014" fg:w="16"/><text x="62.6245%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (15 samples, 0.02%)</title><rect x="62.3755%" y="581" width="0.0151%" height="15" fill="rgb(243,17,35)" fg:x="62015" fg:w="15"/><text x="62.6255%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (24 samples, 0.02%)</title><rect x="62.3685%" y="629" width="0.0241%" height="15" fill="rgb(241,60,18)" fg:x="62008" fg:w="24"/><text x="62.6185%" y="639.50"></text></g><g><title>alloc::collections::btree::mem::replace (22 samples, 0.02%)</title><rect x="62.3705%" y="613" width="0.0221%" height="15" fill="rgb(234,2,44)" fg:x="62010" fg:w="22"/><text x="62.6205%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (33 samples, 0.03%)</title><rect x="62.3614%" y="645" width="0.0332%" height="15" fill="rgb(225,225,33)" fg:x="62001" fg:w="33"/><text x="62.6114%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (36 samples, 0.04%)</title><rect x="62.3594%" y="725" width="0.0362%" height="15" fill="rgb(234,50,31)" fg:x="61999" fg:w="36"/><text x="62.6094%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (36 samples, 0.04%)</title><rect x="62.3594%" y="709" width="0.0362%" height="15" fill="rgb(249,6,25)" fg:x="61999" fg:w="36"/><text x="62.6094%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="62.3594%" y="693" width="0.0362%" height="15" fill="rgb(241,5,17)" fg:x="61999" fg:w="36"/><text x="62.6094%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (36 samples, 0.04%)</title><rect x="62.3594%" y="677" width="0.0362%" height="15" fill="rgb(207,116,10)" fg:x="61999" fg:w="36"/><text x="62.6094%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="62.3594%" y="661" width="0.0362%" height="15" fill="rgb(222,128,18)" fg:x="61999" fg:w="36"/><text x="62.6094%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (10 samples, 0.01%)</title><rect x="62.4047%" y="629" width="0.0101%" height="15" fill="rgb(229,109,25)" fg:x="62044" fg:w="10"/><text x="62.6547%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;move_binary_format::file_format::StructDefinitionIndex&gt;&gt; (20 samples, 0.02%)</title><rect x="62.3956%" y="725" width="0.0201%" height="15" fill="rgb(222,102,25)" fg:x="62035" fg:w="20"/><text x="62.6456%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (20 samples, 0.02%)</title><rect x="62.3956%" y="709" width="0.0201%" height="15" fill="rgb(239,211,5)" fg:x="62035" fg:w="20"/><text x="62.6456%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="62.3956%" y="693" width="0.0201%" height="15" fill="rgb(223,136,26)" fg:x="62035" fg:w="20"/><text x="62.6456%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (12 samples, 0.01%)</title><rect x="62.4037%" y="677" width="0.0121%" height="15" fill="rgb(227,30,15)" fg:x="62043" fg:w="12"/><text x="62.6537%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="62.4037%" y="661" width="0.0121%" height="15" fill="rgb(247,76,4)" fg:x="62043" fg:w="12"/><text x="62.6537%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (11 samples, 0.01%)</title><rect x="62.4047%" y="645" width="0.0111%" height="15" fill="rgb(245,38,48)" fg:x="62044" fg:w="11"/><text x="62.6547%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.01%)</title><rect x="62.4168%" y="629" width="0.0101%" height="15" fill="rgb(210,220,14)" fg:x="62056" fg:w="10"/><text x="62.6668%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (17 samples, 0.02%)</title><rect x="62.4168%" y="645" width="0.0171%" height="15" fill="rgb(224,60,51)" fg:x="62056" fg:w="17"/><text x="62.6668%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (20 samples, 0.02%)</title><rect x="62.4168%" y="661" width="0.0201%" height="15" fill="rgb(212,133,49)" fg:x="62056" fg:w="20"/><text x="62.6668%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition&gt;&gt; (22 samples, 0.02%)</title><rect x="62.4158%" y="725" width="0.0221%" height="15" fill="rgb(231,39,22)" fg:x="62055" fg:w="22"/><text x="62.6658%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition,std::collections::hash::map::RandomState&gt;&gt; (22 samples, 0.02%)</title><rect x="62.4158%" y="709" width="0.0221%" height="15" fill="rgb(236,173,22)" fg:x="62055" fg:w="22"/><text x="62.6658%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_binary_format::file_format::FunctionHandleIndex,&amp;move_binary_format::file_format::FunctionDefinition)&gt;&gt; (22 samples, 0.02%)</title><rect x="62.4158%" y="693" width="0.0221%" height="15" fill="rgb(210,70,0)" fg:x="62055" fg:w="22"/><text x="62.6658%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="62.4158%" y="677" width="0.0221%" height="15" fill="rgb(215,170,11)" fg:x="62055" fg:w="22"/><text x="62.6658%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (14 samples, 0.01%)</title><rect x="62.4409%" y="725" width="0.0141%" height="15" fill="rgb(220,154,28)" fg:x="62080" fg:w="14"/><text x="62.6909%" y="735.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="62.4449%" y="709" width="0.0101%" height="15" fill="rgb(240,160,41)" fg:x="62084" fg:w="10"/><text x="62.6949%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="62.5636%" y="565" width="0.0111%" height="15" fill="rgb(243,215,41)" fg:x="62202" fg:w="11"/><text x="62.8136%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (38 samples, 0.04%)</title><rect x="62.5465%" y="581" width="0.0382%" height="15" fill="rgb(214,208,31)" fg:x="62185" fg:w="38"/><text x="62.7965%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (56 samples, 0.06%)</title><rect x="62.5294%" y="629" width="0.0563%" height="15" fill="rgb(247,57,22)" fg:x="62168" fg:w="56"/><text x="62.7794%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (54 samples, 0.05%)</title><rect x="62.5314%" y="613" width="0.0543%" height="15" fill="rgb(228,73,52)" fg:x="62170" fg:w="54"/><text x="62.7814%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 samples, 0.05%)</title><rect x="62.5314%" y="597" width="0.0543%" height="15" fill="rgb(252,60,9)" fg:x="62170" fg:w="54"/><text x="62.7814%" y="607.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (67 samples, 0.07%)</title><rect x="62.5214%" y="677" width="0.0674%" height="15" fill="rgb(233,9,51)" fg:x="62160" fg:w="67"/><text x="62.7714%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (66 samples, 0.07%)</title><rect x="62.5224%" y="661" width="0.0664%" height="15" fill="rgb(223,67,14)" fg:x="62161" fg:w="66"/><text x="62.7724%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u16 (66 samples, 0.07%)</title><rect x="62.5224%" y="645" width="0.0664%" height="15" fill="rgb(222,86,2)" fg:x="62161" fg:w="66"/><text x="62.7724%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.02%)</title><rect x="62.6451%" y="613" width="0.0221%" height="15" fill="rgb(243,58,54)" fg:x="62283" fg:w="22"/><text x="62.8951%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (61 samples, 0.06%)</title><rect x="62.6079%" y="629" width="0.0614%" height="15" fill="rgb(210,200,39)" fg:x="62246" fg:w="61"/><text x="62.8579%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (76 samples, 0.08%)</title><rect x="62.7738%" y="613" width="0.0764%" height="15" fill="rgb(238,135,9)" fg:x="62411" fg:w="76"/><text x="63.0238%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (274 samples, 0.28%)</title><rect x="62.5888%" y="677" width="0.2756%" height="15" fill="rgb(232,179,7)" fg:x="62227" fg:w="274"/><text x="62.8388%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (272 samples, 0.27%)</title><rect x="62.5908%" y="661" width="0.2736%" height="15" fill="rgb(245,65,41)" fg:x="62229" fg:w="272"/><text x="62.8408%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (270 samples, 0.27%)</title><rect x="62.5928%" y="645" width="0.2716%" height="15" fill="rgb(227,43,8)" fg:x="62231" fg:w="270"/><text x="62.8428%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (194 samples, 0.20%)</title><rect x="62.6692%" y="629" width="0.1951%" height="15" fill="rgb(235,91,14)" fg:x="62307" fg:w="194"/><text x="62.9192%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.01%)</title><rect x="62.8503%" y="613" width="0.0141%" height="15" fill="rgb(235,219,31)" fg:x="62487" fg:w="14"/><text x="63.1003%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="62.8674%" y="661" width="0.0111%" height="15" fill="rgb(227,121,25)" fg:x="62504" fg:w="11"/><text x="63.1174%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (27 samples, 0.03%)</title><rect x="62.8935%" y="645" width="0.0272%" height="15" fill="rgb(254,129,24)" fg:x="62530" fg:w="27"/><text x="63.1435%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (44 samples, 0.04%)</title><rect x="62.8784%" y="661" width="0.0443%" height="15" fill="rgb(226,144,49)" fg:x="62515" fg:w="44"/><text x="63.1284%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (410 samples, 0.41%)</title><rect x="62.5133%" y="693" width="0.4124%" height="15" fill="rgb(214,187,32)" fg:x="62152" fg:w="410"/><text x="62.7633%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (61 samples, 0.06%)</title><rect x="62.8644%" y="677" width="0.0614%" height="15" fill="rgb(243,129,46)" fg:x="62501" fg:w="61"/><text x="63.1144%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (11 samples, 0.01%)</title><rect x="63.0142%" y="613" width="0.0111%" height="15" fill="rgb(221,185,35)" fg:x="62650" fg:w="11"/><text x="63.2642%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="63.0032%" y="629" width="0.0292%" height="15" fill="rgb(205,0,32)" fg:x="62639" fg:w="29"/><text x="63.2532%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (10 samples, 0.01%)</title><rect x="63.0353%" y="629" width="0.0101%" height="15" fill="rgb(229,179,12)" fg:x="62671" fg:w="10"/><text x="63.2853%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (34 samples, 0.03%)</title><rect x="63.0796%" y="597" width="0.0342%" height="15" fill="rgb(252,107,19)" fg:x="62715" fg:w="34"/><text x="63.3296%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (22 samples, 0.02%)</title><rect x="63.0917%" y="581" width="0.0221%" height="15" fill="rgb(220,95,27)" fg:x="62727" fg:w="22"/><text x="63.3417%" y="591.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (12 samples, 0.01%)</title><rect x="63.1017%" y="565" width="0.0121%" height="15" fill="rgb(240,113,40)" fg:x="62737" fg:w="12"/><text x="63.3517%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (42 samples, 0.04%)</title><rect x="63.1138%" y="597" width="0.0422%" height="15" fill="rgb(208,4,43)" fg:x="62749" fg:w="42"/><text x="63.3638%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (21 samples, 0.02%)</title><rect x="63.1349%" y="581" width="0.0211%" height="15" fill="rgb(247,189,30)" fg:x="62770" fg:w="21"/><text x="63.3849%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (230 samples, 0.23%)</title><rect x="62.9760%" y="645" width="0.2313%" height="15" fill="rgb(231,157,17)" fg:x="62612" fg:w="230"/><text x="63.2260%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (158 samples, 0.16%)</title><rect x="63.0484%" y="629" width="0.1589%" height="15" fill="rgb(224,139,6)" fg:x="62684" fg:w="158"/><text x="63.2984%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (153 samples, 0.15%)</title><rect x="63.0534%" y="613" width="0.1539%" height="15" fill="rgb(223,83,16)" fg:x="62689" fg:w="153"/><text x="63.3034%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (51 samples, 0.05%)</title><rect x="63.1560%" y="597" width="0.0513%" height="15" fill="rgb(232,211,20)" fg:x="62791" fg:w="51"/><text x="63.4060%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (46 samples, 0.05%)</title><rect x="63.1611%" y="581" width="0.0463%" height="15" fill="rgb(225,203,35)" fg:x="62796" fg:w="46"/><text x="63.4111%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (24 samples, 0.02%)</title><rect x="63.1832%" y="565" width="0.0241%" height="15" fill="rgb(215,211,44)" fg:x="62818" fg:w="24"/><text x="63.4332%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (243 samples, 0.24%)</title><rect x="62.9669%" y="661" width="0.2444%" height="15" fill="rgb(248,213,26)" fg:x="62603" fg:w="243"/><text x="63.2169%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="63.2285%" y="629" width="0.0101%" height="15" fill="rgb(214,23,52)" fg:x="62863" fg:w="10"/><text x="63.4785%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="63.2677%" y="613" width="0.0111%" height="15" fill="rgb(225,173,50)" fg:x="62902" fg:w="11"/><text x="63.5177%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.01%)</title><rect x="63.2878%" y="613" width="0.0111%" height="15" fill="rgb(206,150,22)" fg:x="62922" fg:w="11"/><text x="63.5378%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (36 samples, 0.04%)</title><rect x="63.2989%" y="613" width="0.0362%" height="15" fill="rgb(239,64,23)" fg:x="62933" fg:w="36"/><text x="63.5489%" y="623.50"></text></g><g><title>core::cmp::Ord::min (30 samples, 0.03%)</title><rect x="63.3049%" y="597" width="0.0302%" height="15" fill="rgb(242,50,38)" fg:x="62939" fg:w="30"/><text x="63.5549%" y="607.50"></text></g><g><title>core::cmp::min_by (25 samples, 0.03%)</title><rect x="63.3099%" y="581" width="0.0251%" height="15" fill="rgb(217,91,15)" fg:x="62944" fg:w="25"/><text x="63.5599%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (30 samples, 0.03%)</title><rect x="63.3351%" y="613" width="0.0302%" height="15" fill="rgb(230,172,6)" fg:x="62969" fg:w="30"/><text x="63.5851%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (24 samples, 0.02%)</title><rect x="63.3411%" y="597" width="0.0241%" height="15" fill="rgb(221,98,26)" fg:x="62975" fg:w="24"/><text x="63.5911%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="63.3522%" y="581" width="0.0131%" height="15" fill="rgb(227,210,45)" fg:x="62986" fg:w="13"/><text x="63.6022%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (38 samples, 0.04%)</title><rect x="63.3854%" y="597" width="0.0382%" height="15" fill="rgb(206,8,30)" fg:x="63019" fg:w="38"/><text x="63.6354%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (22 samples, 0.02%)</title><rect x="63.4015%" y="581" width="0.0221%" height="15" fill="rgb(241,219,17)" fg:x="63035" fg:w="22"/><text x="63.6515%" y="591.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (12 samples, 0.01%)</title><rect x="63.4115%" y="565" width="0.0121%" height="15" fill="rgb(247,121,29)" fg:x="63045" fg:w="12"/><text x="63.6615%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (43 samples, 0.04%)</title><rect x="63.4236%" y="597" width="0.0432%" height="15" fill="rgb(219,169,49)" fg:x="63057" fg:w="43"/><text x="63.6736%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (22 samples, 0.02%)</title><rect x="63.4447%" y="581" width="0.0221%" height="15" fill="rgb(253,49,49)" fg:x="63078" fg:w="22"/><text x="63.6947%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (276 samples, 0.28%)</title><rect x="63.2385%" y="629" width="0.2776%" height="15" fill="rgb(217,178,3)" fg:x="62873" fg:w="276"/><text x="63.4885%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (150 samples, 0.15%)</title><rect x="63.3653%" y="613" width="0.1509%" height="15" fill="rgb(234,73,37)" fg:x="62999" fg:w="150"/><text x="63.6153%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (49 samples, 0.05%)</title><rect x="63.4668%" y="597" width="0.0493%" height="15" fill="rgb(250,98,22)" fg:x="63100" fg:w="49"/><text x="63.7168%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (34 samples, 0.03%)</title><rect x="63.4819%" y="581" width="0.0342%" height="15" fill="rgb(220,108,37)" fg:x="63115" fg:w="34"/><text x="63.7319%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (13 samples, 0.01%)</title><rect x="63.5030%" y="565" width="0.0131%" height="15" fill="rgb(225,168,10)" fg:x="63136" fg:w="13"/><text x="63.7530%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (589 samples, 0.59%)</title><rect x="62.9257%" y="693" width="0.5924%" height="15" fill="rgb(247,215,21)" fg:x="62562" fg:w="589"/><text x="63.1757%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (583 samples, 0.59%)</title><rect x="62.9317%" y="677" width="0.5864%" height="15" fill="rgb(253,189,31)" fg:x="62568" fg:w="583"/><text x="63.1817%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (300 samples, 0.30%)</title><rect x="63.2164%" y="661" width="0.3017%" height="15" fill="rgb(241,54,22)" fg:x="62851" fg:w="300"/><text x="63.4664%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (297 samples, 0.30%)</title><rect x="63.2194%" y="645" width="0.2987%" height="15" fill="rgb(211,87,4)" fg:x="62854" fg:w="297"/><text x="63.4694%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (35 samples, 0.04%)</title><rect x="63.5594%" y="677" width="0.0352%" height="15" fill="rgb(245,112,24)" fg:x="63192" fg:w="35"/><text x="63.8094%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.02%)</title><rect x="63.5785%" y="661" width="0.0161%" height="15" fill="rgb(235,190,41)" fg:x="63211" fg:w="16"/><text x="63.8285%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (14 samples, 0.01%)</title><rect x="63.6167%" y="613" width="0.0141%" height="15" fill="rgb(214,89,8)" fg:x="63249" fg:w="14"/><text x="63.8667%" y="623.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (16 samples, 0.02%)</title><rect x="63.6157%" y="629" width="0.0161%" height="15" fill="rgb(249,155,35)" fg:x="63248" fg:w="16"/><text x="63.8657%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (21 samples, 0.02%)</title><rect x="63.6117%" y="645" width="0.0211%" height="15" fill="rgb(249,88,26)" fg:x="63244" fg:w="21"/><text x="63.8617%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (33 samples, 0.03%)</title><rect x="63.6026%" y="661" width="0.0332%" height="15" fill="rgb(232,56,8)" fg:x="63235" fg:w="33"/><text x="63.8526%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (49 samples, 0.05%)</title><rect x="63.5946%" y="677" width="0.0493%" height="15" fill="rgb(240,95,3)" fg:x="63227" fg:w="49"/><text x="63.8446%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (14 samples, 0.01%)</title><rect x="63.7646%" y="565" width="0.0141%" height="15" fill="rgb(222,44,28)" fg:x="63396" fg:w="14"/><text x="64.0146%" y="575.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (12 samples, 0.01%)</title><rect x="63.7666%" y="549" width="0.0121%" height="15" fill="rgb(234,16,30)" fg:x="63398" fg:w="12"/><text x="64.0166%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (27 samples, 0.03%)</title><rect x="63.7555%" y="581" width="0.0272%" height="15" fill="rgb(223,26,17)" fg:x="63387" fg:w="27"/><text x="64.0055%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (42 samples, 0.04%)</title><rect x="63.7475%" y="597" width="0.0422%" height="15" fill="rgb(239,187,47)" fg:x="63379" fg:w="42"/><text x="63.9975%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (22 samples, 0.02%)</title><rect x="63.7897%" y="597" width="0.0221%" height="15" fill="rgb(247,102,50)" fg:x="63421" fg:w="22"/><text x="64.0397%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (11 samples, 0.01%)</title><rect x="63.8008%" y="581" width="0.0111%" height="15" fill="rgb(231,216,22)" fg:x="63432" fg:w="11"/><text x="64.0508%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 0.11%)</title><rect x="63.7082%" y="629" width="0.1137%" height="15" fill="rgb(216,201,26)" fg:x="63340" fg:w="113"/><text x="63.9582%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.10%)</title><rect x="63.7223%" y="613" width="0.0996%" height="15" fill="rgb(214,186,23)" fg:x="63354" fg:w="99"/><text x="63.9723%" y="623.50"></text></g><g><title>core::mem::swap (20 samples, 0.02%)</title><rect x="63.8269%" y="629" width="0.0201%" height="15" fill="rgb(235,184,4)" fg:x="63458" fg:w="20"/><text x="64.0769%" y="639.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (20 samples, 0.02%)</title><rect x="63.8269%" y="613" width="0.0201%" height="15" fill="rgb(244,46,17)" fg:x="63458" fg:w="20"/><text x="64.0769%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping (17 samples, 0.02%)</title><rect x="63.8299%" y="597" width="0.0171%" height="15" fill="rgb(248,74,46)" fg:x="63461" fg:w="17"/><text x="64.0799%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (15 samples, 0.02%)</title><rect x="63.8319%" y="581" width="0.0151%" height="15" fill="rgb(243,79,5)" fg:x="63463" fg:w="15"/><text x="64.0819%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="63.8511%" y="565" width="0.0131%" height="15" fill="rgb(213,148,1)" fg:x="63482" fg:w="13"/><text x="64.1011%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="63.8521%" y="549" width="0.0121%" height="15" fill="rgb(221,30,0)" fg:x="63483" fg:w="12"/><text x="64.1021%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="63.8470%" y="629" width="0.0392%" height="15" fill="rgb(207,85,29)" fg:x="63478" fg:w="39"/><text x="64.0970%" y="639.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="63.8470%" y="613" width="0.0392%" height="15" fill="rgb(239,31,46)" fg:x="63478" fg:w="39"/><text x="64.0970%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (39 samples, 0.04%)</title><rect x="63.8470%" y="597" width="0.0392%" height="15" fill="rgb(219,6,1)" fg:x="63478" fg:w="39"/><text x="64.0970%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (37 samples, 0.04%)</title><rect x="63.8490%" y="581" width="0.0372%" height="15" fill="rgb(229,90,29)" fg:x="63480" fg:w="37"/><text x="64.0990%" y="591.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (19 samples, 0.02%)</title><rect x="63.8672%" y="565" width="0.0191%" height="15" fill="rgb(242,201,42)" fg:x="63498" fg:w="19"/><text x="64.1172%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="63.9506%" y="485" width="0.0171%" height="15" fill="rgb(243,80,54)" fg:x="63581" fg:w="17"/><text x="64.2006%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (48 samples, 0.05%)</title><rect x="63.9255%" y="501" width="0.0483%" height="15" fill="rgb(223,166,15)" fg:x="63556" fg:w="48"/><text x="64.1755%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (67 samples, 0.07%)</title><rect x="63.9084%" y="549" width="0.0674%" height="15" fill="rgb(238,78,27)" fg:x="63539" fg:w="67"/><text x="64.1584%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64 samples, 0.06%)</title><rect x="63.9114%" y="533" width="0.0644%" height="15" fill="rgb(235,28,43)" fg:x="63542" fg:w="64"/><text x="64.1614%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (63 samples, 0.06%)</title><rect x="63.9124%" y="517" width="0.0634%" height="15" fill="rgb(240,210,28)" fg:x="63543" fg:w="63"/><text x="64.1624%" y="527.50"></text></g><g><title>&lt;move_binary_format::file_format::FunctionHandleIndex as core::hash::Hash&gt;::hash (71 samples, 0.07%)</title><rect x="63.9054%" y="597" width="0.0714%" height="15" fill="rgb(253,6,46)" fg:x="63536" fg:w="71"/><text x="64.1554%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (71 samples, 0.07%)</title><rect x="63.9054%" y="581" width="0.0714%" height="15" fill="rgb(250,159,47)" fg:x="63536" fg:w="71"/><text x="64.1554%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u16 (71 samples, 0.07%)</title><rect x="63.9054%" y="565" width="0.0714%" height="15" fill="rgb(216,139,2)" fg:x="63536" fg:w="71"/><text x="64.1554%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (31 samples, 0.03%)</title><rect x="64.0371%" y="533" width="0.0312%" height="15" fill="rgb(221,124,44)" fg:x="63667" fg:w="31"/><text x="64.2871%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (73 samples, 0.07%)</title><rect x="63.9999%" y="549" width="0.0734%" height="15" fill="rgb(205,37,22)" fg:x="63630" fg:w="73"/><text x="64.2499%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (85 samples, 0.09%)</title><rect x="64.1820%" y="533" width="0.0855%" height="15" fill="rgb(250,55,8)" fg:x="63811" fg:w="85"/><text x="64.4320%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (308 samples, 0.31%)</title><rect x="63.9768%" y="597" width="0.3098%" height="15" fill="rgb(215,83,48)" fg:x="63607" fg:w="308"/><text x="64.2268%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (305 samples, 0.31%)</title><rect x="63.9798%" y="581" width="0.3068%" height="15" fill="rgb(253,2,32)" fg:x="63610" fg:w="305"/><text x="64.2298%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (301 samples, 0.30%)</title><rect x="63.9838%" y="565" width="0.3027%" height="15" fill="rgb(236,67,28)" fg:x="63614" fg:w="301"/><text x="64.2338%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (212 samples, 0.21%)</title><rect x="64.0733%" y="549" width="0.2132%" height="15" fill="rgb(252,55,15)" fg:x="63703" fg:w="212"/><text x="64.3233%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (19 samples, 0.02%)</title><rect x="64.2675%" y="533" width="0.0191%" height="15" fill="rgb(243,173,17)" fg:x="63896" fg:w="19"/><text x="64.5175%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="64.2916%" y="581" width="0.0141%" height="15" fill="rgb(215,212,13)" fg:x="63920" fg:w="14"/><text x="64.5416%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="64.3117%" y="565" width="0.0121%" height="15" fill="rgb(253,176,6)" fg:x="63940" fg:w="12"/><text x="64.5617%" y="575.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (453 samples, 0.46%)</title><rect x="63.8863%" y="629" width="0.4556%" height="15" fill="rgb(236,105,26)" fg:x="63517" fg:w="453"/><text x="64.1363%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (447 samples, 0.45%)</title><rect x="63.8923%" y="613" width="0.4496%" height="15" fill="rgb(239,226,32)" fg:x="63523" fg:w="447"/><text x="64.1423%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (55 samples, 0.06%)</title><rect x="64.2866%" y="597" width="0.0553%" height="15" fill="rgb(236,104,51)" fg:x="63915" fg:w="55"/><text x="64.5366%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (36 samples, 0.04%)</title><rect x="64.3057%" y="581" width="0.0362%" height="15" fill="rgb(220,172,33)" fg:x="63934" fg:w="36"/><text x="64.5557%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (18 samples, 0.02%)</title><rect x="64.3238%" y="565" width="0.0181%" height="15" fill="rgb(224,182,25)" fg:x="63952" fg:w="18"/><text x="64.5738%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (20 samples, 0.02%)</title><rect x="64.3489%" y="597" width="0.0201%" height="15" fill="rgb(236,184,24)" fg:x="63977" fg:w="20"/><text x="64.5989%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (33 samples, 0.03%)</title><rect x="64.3419%" y="629" width="0.0332%" height="15" fill="rgb(241,221,14)" fg:x="63970" fg:w="33"/><text x="64.5919%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (31 samples, 0.03%)</title><rect x="64.3439%" y="613" width="0.0312%" height="15" fill="rgb(227,146,5)" fg:x="63972" fg:w="31"/><text x="64.5939%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (15 samples, 0.02%)</title><rect x="64.3801%" y="613" width="0.0151%" height="15" fill="rgb(214,15,23)" fg:x="64008" fg:w="15"/><text x="64.6301%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="64.3841%" y="597" width="0.0111%" height="15" fill="rgb(233,157,31)" fg:x="64012" fg:w="11"/><text x="64.6341%" y="607.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (12 samples, 0.01%)</title><rect x="64.4214%" y="565" width="0.0121%" height="15" fill="rgb(211,27,52)" fg:x="64049" fg:w="12"/><text x="64.6714%" y="575.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (13 samples, 0.01%)</title><rect x="64.4214%" y="581" width="0.0131%" height="15" fill="rgb(212,223,15)" fg:x="64049" fg:w="13"/><text x="64.6714%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (33 samples, 0.03%)</title><rect x="64.4093%" y="597" width="0.0332%" height="15" fill="rgb(254,211,0)" fg:x="64037" fg:w="33"/><text x="64.6593%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (68 samples, 0.07%)</title><rect x="64.3751%" y="629" width="0.0684%" height="15" fill="rgb(205,43,38)" fg:x="64003" fg:w="68"/><text x="64.6251%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (48 samples, 0.05%)</title><rect x="64.3952%" y="613" width="0.0483%" height="15" fill="rgb(242,206,46)" fg:x="64023" fg:w="48"/><text x="64.6452%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (13 samples, 0.01%)</title><rect x="64.4495%" y="613" width="0.0131%" height="15" fill="rgb(220,221,12)" fg:x="64077" fg:w="13"/><text x="64.6995%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="64.4626%" y="613" width="0.0111%" height="15" fill="rgb(217,156,35)" fg:x="64090" fg:w="11"/><text x="64.7126%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (31 samples, 0.03%)</title><rect x="64.4435%" y="629" width="0.0312%" height="15" fill="rgb(207,181,49)" fg:x="64071" fg:w="31"/><text x="64.6935%" y="639.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (10 samples, 0.01%)</title><rect x="64.4928%" y="581" width="0.0101%" height="15" fill="rgb(235,103,47)" fg:x="64120" fg:w="10"/><text x="64.7428%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (23 samples, 0.02%)</title><rect x="64.4847%" y="597" width="0.0231%" height="15" fill="rgb(222,63,28)" fg:x="64112" fg:w="23"/><text x="64.7347%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (31 samples, 0.03%)</title><rect x="64.4797%" y="613" width="0.0312%" height="15" fill="rgb(244,137,21)" fg:x="64107" fg:w="31"/><text x="64.7297%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (42 samples, 0.04%)</title><rect x="64.4747%" y="629" width="0.0422%" height="15" fill="rgb(228,35,27)" fg:x="64102" fg:w="42"/><text x="64.7247%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (13 samples, 0.01%)</title><rect x="64.5300%" y="613" width="0.0131%" height="15" fill="rgb(226,191,41)" fg:x="64157" fg:w="13"/><text x="64.7800%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (28 samples, 0.03%)</title><rect x="64.5863%" y="597" width="0.0282%" height="15" fill="rgb(210,154,3)" fg:x="64213" fg:w="28"/><text x="64.8363%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.02%)</title><rect x="64.5964%" y="581" width="0.0181%" height="15" fill="rgb(216,60,49)" fg:x="64223" fg:w="18"/><text x="64.8464%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="64.6034%" y="565" width="0.0111%" height="15" fill="rgb(226,17,20)" fg:x="64230" fg:w="11"/><text x="64.8534%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (12 samples, 0.01%)</title><rect x="64.6145%" y="597" width="0.0121%" height="15" fill="rgb(206,115,35)" fg:x="64241" fg:w="12"/><text x="64.8645%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (35 samples, 0.04%)</title><rect x="64.6265%" y="597" width="0.0352%" height="15" fill="rgb(227,88,1)" fg:x="64253" fg:w="35"/><text x="64.8765%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (15 samples, 0.02%)</title><rect x="64.6467%" y="581" width="0.0151%" height="15" fill="rgb(230,222,24)" fg:x="64273" fg:w="15"/><text x="64.8967%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (32 samples, 0.03%)</title><rect x="64.6668%" y="597" width="0.0322%" height="15" fill="rgb(214,124,32)" fg:x="64293" fg:w="32"/><text x="64.9168%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (28 samples, 0.03%)</title><rect x="64.6708%" y="581" width="0.0282%" height="15" fill="rgb(240,41,36)" fg:x="64297" fg:w="28"/><text x="64.9208%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="64.6859%" y="565" width="0.0131%" height="15" fill="rgb(221,17,52)" fg:x="64312" fg:w="13"/><text x="64.9359%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (201 samples, 0.20%)</title><rect x="64.5431%" y="613" width="0.2022%" height="15" fill="rgb(252,70,16)" fg:x="64170" fg:w="201"/><text x="64.7931%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (46 samples, 0.05%)</title><rect x="64.6990%" y="597" width="0.0463%" height="15" fill="rgb(250,177,4)" fg:x="64325" fg:w="46"/><text x="64.9490%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (37 samples, 0.04%)</title><rect x="64.7080%" y="581" width="0.0372%" height="15" fill="rgb(240,188,47)" fg:x="64334" fg:w="37"/><text x="64.9580%" y="591.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (14 samples, 0.01%)</title><rect x="64.7311%" y="565" width="0.0141%" height="15" fill="rgb(215,92,12)" fg:x="64357" fg:w="14"/><text x="64.9811%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.02%)</title><rect x="64.7704%" y="565" width="0.0181%" height="15" fill="rgb(242,110,29)" fg:x="64396" fg:w="18"/><text x="65.0204%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (39 samples, 0.04%)</title><rect x="64.7503%" y="597" width="0.0392%" height="15" fill="rgb(208,211,26)" fg:x="64376" fg:w="39"/><text x="65.0003%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (26 samples, 0.03%)</title><rect x="64.7633%" y="581" width="0.0262%" height="15" fill="rgb(244,147,6)" fg:x="64389" fg:w="26"/><text x="65.0133%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (306 samples, 0.31%)</title><rect x="64.5169%" y="629" width="0.3078%" height="15" fill="rgb(211,130,42)" fg:x="64144" fg:w="306"/><text x="64.7669%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (79 samples, 0.08%)</title><rect x="64.7452%" y="613" width="0.0795%" height="15" fill="rgb(220,63,1)" fg:x="64371" fg:w="79"/><text x="64.9952%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (35 samples, 0.04%)</title><rect x="64.7895%" y="597" width="0.0352%" height="15" fill="rgb(241,212,30)" fg:x="64415" fg:w="35"/><text x="65.0395%" y="607.50"></text></g><g><title>core::cmp::Ord::min (28 samples, 0.03%)</title><rect x="64.7965%" y="581" width="0.0282%" height="15" fill="rgb(233,153,17)" fg:x="64422" fg:w="28"/><text x="65.0465%" y="591.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.02%)</title><rect x="64.8016%" y="565" width="0.0231%" height="15" fill="rgb(236,3,10)" fg:x="64427" fg:w="23"/><text x="65.0516%" y="575.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (20 samples, 0.02%)</title><rect x="64.8679%" y="581" width="0.0201%" height="15" fill="rgb(232,41,21)" fg:x="64493" fg:w="20"/><text x="65.1179%" y="591.50"></text></g><g><title>malloc_consolidate (10 samples, 0.01%)</title><rect x="64.9202%" y="485" width="0.0101%" height="15" fill="rgb(206,63,51)" fg:x="64545" fg:w="10"/><text x="65.1702%" y="495.50"></text></g><g><title>__GI___libc_malloc (33 samples, 0.03%)</title><rect x="64.9001%" y="517" width="0.0332%" height="15" fill="rgb(250,214,3)" fg:x="64525" fg:w="33"/><text x="65.1501%" y="527.50"></text></g><g><title>_int_malloc (24 samples, 0.02%)</title><rect x="64.9092%" y="501" width="0.0241%" height="15" fill="rgb(254,89,27)" fg:x="64534" fg:w="24"/><text x="65.1592%" y="511.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.04%)</title><rect x="64.8981%" y="533" width="0.0362%" height="15" fill="rgb(249,41,14)" fg:x="64523" fg:w="36"/><text x="65.1481%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.05%)</title><rect x="64.8901%" y="565" width="0.0513%" height="15" fill="rgb(221,196,51)" fg:x="64515" fg:w="51"/><text x="65.1401%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.05%)</title><rect x="64.8921%" y="549" width="0.0493%" height="15" fill="rgb(214,116,26)" fg:x="64517" fg:w="49"/><text x="65.1421%" y="559.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (61 samples, 0.06%)</title><rect x="64.8881%" y="581" width="0.0614%" height="15" fill="rgb(236,67,7)" fg:x="64513" fg:w="61"/><text x="65.1381%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (93 samples, 0.09%)</title><rect x="64.8569%" y="597" width="0.0935%" height="15" fill="rgb(253,179,32)" fg:x="64482" fg:w="93"/><text x="65.1069%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (126 samples, 0.13%)</title><rect x="64.8337%" y="613" width="0.1267%" height="15" fill="rgb(218,33,15)" fg:x="64459" fg:w="126"/><text x="65.0837%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (136 samples, 0.14%)</title><rect x="64.8247%" y="629" width="0.1368%" height="15" fill="rgb(217,202,41)" fg:x="64450" fg:w="136"/><text x="65.0747%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1,295 samples, 1.30%)</title><rect x="63.6660%" y="645" width="1.3025%" height="15" fill="rgb(234,133,5)" fg:x="63298" fg:w="1295"/><text x="63.9160%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,318 samples, 1.33%)</title><rect x="63.6439%" y="677" width="1.3257%" height="15" fill="rgb(240,47,40)" fg:x="63276" fg:w="1318"/><text x="63.8939%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,312 samples, 1.32%)</title><rect x="63.6499%" y="661" width="1.3196%" height="15" fill="rgb(234,166,26)" fg:x="63282" fg:w="1312"/><text x="63.8999%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (11 samples, 0.01%)</title><rect x="64.9695%" y="677" width="0.0111%" height="15" fill="rgb(244,125,51)" fg:x="64594" fg:w="11"/><text x="65.2195%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (22 samples, 0.02%)</title><rect x="65.0359%" y="645" width="0.0221%" height="15" fill="rgb(229,171,11)" fg:x="64660" fg:w="22"/><text x="65.2859%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="65.0419%" y="629" width="0.0161%" height="15" fill="rgb(224,38,45)" fg:x="64666" fg:w="16"/><text x="65.2919%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (44 samples, 0.04%)</title><rect x="65.0178%" y="661" width="0.0443%" height="15" fill="rgb(237,27,7)" fg:x="64642" fg:w="44"/><text x="65.2678%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.01%)</title><rect x="65.0621%" y="661" width="0.0111%" height="15" fill="rgb(216,52,7)" fg:x="64686" fg:w="11"/><text x="65.3121%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (39 samples, 0.04%)</title><rect x="65.0731%" y="661" width="0.0392%" height="15" fill="rgb(243,11,11)" fg:x="64697" fg:w="39"/><text x="65.3231%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (14 samples, 0.01%)</title><rect x="65.0983%" y="645" width="0.0141%" height="15" fill="rgb(253,167,20)" fg:x="64722" fg:w="14"/><text x="65.3483%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (29 samples, 0.03%)</title><rect x="65.1164%" y="661" width="0.0292%" height="15" fill="rgb(215,207,5)" fg:x="64740" fg:w="29"/><text x="65.3664%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (23 samples, 0.02%)</title><rect x="65.1224%" y="645" width="0.0231%" height="15" fill="rgb(252,127,31)" fg:x="64746" fg:w="23"/><text x="65.3724%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (217 samples, 0.22%)</title><rect x="64.9806%" y="677" width="0.2183%" height="15" fill="rgb(209,106,27)" fg:x="64605" fg:w="217"/><text x="65.2306%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (52 samples, 0.05%)</title><rect x="65.1465%" y="661" width="0.0523%" height="15" fill="rgb(214,220,18)" fg:x="64770" fg:w="52"/><text x="65.3965%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (34 samples, 0.03%)</title><rect x="65.1647%" y="645" width="0.0342%" height="15" fill="rgb(237,89,12)" fg:x="64788" fg:w="34"/><text x="65.4147%" y="655.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (15 samples, 0.02%)</title><rect x="65.1838%" y="629" width="0.0151%" height="15" fill="rgb(209,167,36)" fg:x="64807" fg:w="15"/><text x="65.4338%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="65.2401%" y="613" width="0.0121%" height="15" fill="rgb(243,45,22)" fg:x="64863" fg:w="12"/><text x="65.4901%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (43 samples, 0.04%)</title><rect x="65.2099%" y="645" width="0.0432%" height="15" fill="rgb(239,2,46)" fg:x="64833" fg:w="43"/><text x="65.4599%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (20 samples, 0.02%)</title><rect x="65.2330%" y="629" width="0.0201%" height="15" fill="rgb(241,101,0)" fg:x="64856" fg:w="20"/><text x="65.4830%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (77 samples, 0.08%)</title><rect x="65.2039%" y="661" width="0.0774%" height="15" fill="rgb(244,34,31)" fg:x="64827" fg:w="77"/><text x="65.4539%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (28 samples, 0.03%)</title><rect x="65.2532%" y="645" width="0.0282%" height="15" fill="rgb(248,23,22)" fg:x="64876" fg:w="28"/><text x="65.5032%" y="655.50"></text></g><g><title>core::cmp::Ord::min (19 samples, 0.02%)</title><rect x="65.2622%" y="629" width="0.0191%" height="15" fill="rgb(218,27,48)" fg:x="64885" fg:w="19"/><text x="65.5122%" y="639.50"></text></g><g><title>core::cmp::min_by (13 samples, 0.01%)</title><rect x="65.2683%" y="613" width="0.0131%" height="15" fill="rgb(232,78,1)" fg:x="64891" fg:w="13"/><text x="65.5183%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (83 samples, 0.08%)</title><rect x="65.1988%" y="677" width="0.0835%" height="15" fill="rgb(233,169,12)" fg:x="64822" fg:w="83"/><text x="65.4488%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,792 samples, 2.81%)</title><rect x="62.4751%" y="725" width="2.8082%" height="15" fill="rgb(225,222,54)" fg:x="62114" fg:w="2792"/><text x="62.7251%" y="735.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,788 samples, 2.80%)</title><rect x="62.4791%" y="709" width="2.8042%" height="15" fill="rgb(245,126,29)" fg:x="62118" fg:w="2788"/><text x="62.7291%" y="719.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,755 samples, 1.77%)</title><rect x="63.5181%" y="693" width="1.7652%" height="15" fill="rgb(241,63,48)" fg:x="63151" fg:w="1755"/><text x="63.7681%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="65.2833%" y="693" width="0.0121%" height="15" fill="rgb(235,126,38)" fg:x="64906" fg:w="12"/><text x="65.5333%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (12 samples, 0.01%)</title><rect x="65.2833%" y="677" width="0.0121%" height="15" fill="rgb(232,96,49)" fg:x="64906" fg:w="12"/><text x="65.5333%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.01%)</title><rect x="65.2833%" y="661" width="0.0121%" height="15" fill="rgb(211,146,40)" fg:x="64906" fg:w="12"/><text x="65.5333%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.01%)</title><rect x="65.2853%" y="645" width="0.0101%" height="15" fill="rgb(247,93,44)" fg:x="64908" fg:w="10"/><text x="65.5353%" y="655.50"></text></g><g><title>bytecode_verifier::acquires_list_verifier::AcquiresVerifier::verify (3,620 samples, 3.64%)</title><rect x="61.6584%" y="741" width="3.6410%" height="15" fill="rgb(251,41,49)" fg:x="61302" fg:w="3620"/><text x="61.9084%" y="751.50">byte..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (16 samples, 0.02%)</title><rect x="65.2833%" y="725" width="0.0161%" height="15" fill="rgb(218,155,12)" fg:x="64906" fg:w="16"/><text x="65.5333%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (16 samples, 0.02%)</title><rect x="65.2833%" y="709" width="0.0161%" height="15" fill="rgb(221,161,30)" fg:x="64906" fg:w="16"/><text x="65.5333%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="65.3276%" y="693" width="0.0111%" height="15" fill="rgb(221,179,11)" fg:x="64950" fg:w="11"/><text x="65.5776%" y="703.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (11 samples, 0.01%)</title><rect x="65.4262%" y="581" width="0.0111%" height="15" fill="rgb(224,170,48)" fg:x="65048" fg:w="11"/><text x="65.6762%" y="591.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (27 samples, 0.03%)</title><rect x="65.4141%" y="597" width="0.0272%" height="15" fill="rgb(223,117,5)" fg:x="65036" fg:w="27"/><text x="65.6641%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="65.4724%" y="501" width="0.0101%" height="15" fill="rgb(209,52,20)" fg:x="65094" fg:w="10"/><text x="65.7224%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (80 samples, 0.08%)</title><rect x="65.4030%" y="613" width="0.0805%" height="15" fill="rgb(209,19,41)" fg:x="65025" fg:w="80"/><text x="65.6530%" y="623.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (42 samples, 0.04%)</title><rect x="65.4413%" y="597" width="0.0422%" height="15" fill="rgb(210,177,12)" fg:x="65063" fg:w="42"/><text x="65.6913%" y="607.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (38 samples, 0.04%)</title><rect x="65.4453%" y="581" width="0.0382%" height="15" fill="rgb(211,159,37)" fg:x="65067" fg:w="38"/><text x="65.6953%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (30 samples, 0.03%)</title><rect x="65.4533%" y="565" width="0.0302%" height="15" fill="rgb(209,20,2)" fg:x="65075" fg:w="30"/><text x="65.7033%" y="575.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (17 samples, 0.02%)</title><rect x="65.4664%" y="549" width="0.0171%" height="15" fill="rgb(244,3,46)" fg:x="65088" fg:w="17"/><text x="65.7164%" y="559.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (13 samples, 0.01%)</title><rect x="65.4704%" y="533" width="0.0131%" height="15" fill="rgb(220,94,38)" fg:x="65092" fg:w="13"/><text x="65.7204%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (12 samples, 0.01%)</title><rect x="65.4714%" y="517" width="0.0121%" height="15" fill="rgb(253,14,31)" fg:x="65093" fg:w="12"/><text x="65.7214%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.12%)</title><rect x="65.3829%" y="645" width="0.1167%" height="15" fill="rgb(234,176,13)" fg:x="65005" fg:w="116"/><text x="65.6329%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (113 samples, 0.11%)</title><rect x="65.3859%" y="629" width="0.1137%" height="15" fill="rgb(218,62,25)" fg:x="65008" fg:w="113"/><text x="65.6359%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (16 samples, 0.02%)</title><rect x="65.4835%" y="613" width="0.0161%" height="15" fill="rgb(216,124,40)" fg:x="65105" fg:w="16"/><text x="65.7335%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (141 samples, 0.14%)</title><rect x="65.3789%" y="661" width="0.1418%" height="15" fill="rgb(228,170,12)" fg:x="65001" fg:w="141"/><text x="65.6289%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="65.4996%" y="645" width="0.0211%" height="15" fill="rgb(231,226,5)" fg:x="65121" fg:w="21"/><text x="65.7496%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (11 samples, 0.01%)</title><rect x="65.5207%" y="661" width="0.0111%" height="15" fill="rgb(237,122,22)" fg:x="65142" fg:w="11"/><text x="65.7707%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::labeled_code (13 samples, 0.01%)</title><rect x="65.5318%" y="661" width="0.0131%" height="15" fill="rgb(209,185,25)" fg:x="65153" fg:w="13"/><text x="65.7818%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::check_breaks::_{{closure}} (13 samples, 0.01%)</title><rect x="65.5448%" y="661" width="0.0131%" height="15" fill="rgb(228,200,32)" fg:x="65166" fg:w="13"/><text x="65.7948%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::check_breaks (219 samples, 0.22%)</title><rect x="65.3397%" y="693" width="0.2203%" height="15" fill="rgb(217,140,10)" fg:x="64962" fg:w="219"/><text x="65.5897%" y="703.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (219 samples, 0.22%)</title><rect x="65.3397%" y="677" width="0.2203%" height="15" fill="rgb(253,17,24)" fg:x="64962" fg:w="219"/><text x="65.5897%" y="687.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (19 samples, 0.02%)</title><rect x="65.6495%" y="597" width="0.0191%" height="15" fill="rgb(212,61,6)" fg:x="65270" fg:w="19"/><text x="65.8995%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (67 samples, 0.07%)</title><rect x="65.6313%" y="613" width="0.0674%" height="15" fill="rgb(205,14,25)" fg:x="65252" fg:w="67"/><text x="65.8813%" y="623.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (30 samples, 0.03%)</title><rect x="65.6686%" y="597" width="0.0302%" height="15" fill="rgb(232,69,41)" fg:x="65289" fg:w="30"/><text x="65.9186%" y="607.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (28 samples, 0.03%)</title><rect x="65.6706%" y="581" width="0.0282%" height="15" fill="rgb(241,106,47)" fg:x="65291" fg:w="28"/><text x="65.9206%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (25 samples, 0.03%)</title><rect x="65.6736%" y="565" width="0.0251%" height="15" fill="rgb(210,213,53)" fg:x="65294" fg:w="25"/><text x="65.9236%" y="575.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (11 samples, 0.01%)</title><rect x="65.6877%" y="549" width="0.0111%" height="15" fill="rgb(253,175,27)" fg:x="65308" fg:w="11"/><text x="65.9377%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.09%)</title><rect x="65.6173%" y="645" width="0.0885%" height="15" fill="rgb(211,171,24)" fg:x="65238" fg:w="88"/><text x="65.8673%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (87 samples, 0.09%)</title><rect x="65.6183%" y="629" width="0.0875%" height="15" fill="rgb(229,80,7)" fg:x="65239" fg:w="87"/><text x="65.8683%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.12%)</title><rect x="65.6072%" y="661" width="0.1167%" height="15" fill="rgb(212,46,39)" fg:x="65228" fg:w="116"/><text x="65.8572%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="65.7058%" y="645" width="0.0181%" height="15" fill="rgb(240,80,45)" fg:x="65326" fg:w="18"/><text x="65.9558%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.02%)</title><rect x="65.7239%" y="661" width="0.0151%" height="15" fill="rgb(253,177,40)" fg:x="65344" fg:w="15"/><text x="65.9739%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="65.7269%" y="645" width="0.0121%" height="15" fill="rgb(249,200,15)" fg:x="65347" fg:w="12"/><text x="65.9769%" y="655.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::labeled_code (25 samples, 0.03%)</title><rect x="65.7450%" y="661" width="0.0251%" height="15" fill="rgb(217,78,26)" fg:x="65365" fg:w="25"/><text x="65.9950%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (15 samples, 0.02%)</title><rect x="65.7551%" y="645" width="0.0151%" height="15" fill="rgb(254,151,32)" fg:x="65375" fg:w="15"/><text x="66.0051%" y="655.50"></text></g><g><title>bytecode_verifier::control_flow::check_continues::_{{closure}} (16 samples, 0.02%)</title><rect x="65.7702%" y="661" width="0.0161%" height="15" fill="rgb(226,165,27)" fg:x="65390" fg:w="16"/><text x="66.0202%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::check_continues (233 samples, 0.23%)</title><rect x="65.5599%" y="693" width="0.2344%" height="15" fill="rgb(250,206,4)" fg:x="65181" fg:w="233"/><text x="65.8099%" y="703.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (232 samples, 0.23%)</title><rect x="65.5609%" y="677" width="0.2333%" height="15" fill="rgb(231,229,27)" fg:x="65182" fg:w="232"/><text x="65.8109%" y="687.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (19 samples, 0.02%)</title><rect x="65.8456%" y="597" width="0.0191%" height="15" fill="rgb(239,217,8)" fg:x="65465" fg:w="19"/><text x="66.0956%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (56 samples, 0.06%)</title><rect x="65.8365%" y="613" width="0.0563%" height="15" fill="rgb(225,204,27)" fg:x="65456" fg:w="56"/><text x="66.0865%" y="623.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (28 samples, 0.03%)</title><rect x="65.8647%" y="597" width="0.0282%" height="15" fill="rgb(230,56,32)" fg:x="65484" fg:w="28"/><text x="66.1147%" y="607.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (23 samples, 0.02%)</title><rect x="65.8697%" y="581" width="0.0231%" height="15" fill="rgb(222,56,27)" fg:x="65489" fg:w="23"/><text x="66.1197%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (21 samples, 0.02%)</title><rect x="65.8717%" y="565" width="0.0211%" height="15" fill="rgb(253,108,27)" fg:x="65491" fg:w="21"/><text x="66.1217%" y="575.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (13 samples, 0.01%)</title><rect x="65.8798%" y="549" width="0.0131%" height="15" fill="rgb(212,87,36)" fg:x="65499" fg:w="13"/><text x="66.1298%" y="559.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (11 samples, 0.01%)</title><rect x="65.8818%" y="533" width="0.0111%" height="15" fill="rgb(247,82,36)" fg:x="65501" fg:w="11"/><text x="66.1318%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.08%)</title><rect x="65.8275%" y="645" width="0.0785%" height="15" fill="rgb(222,143,9)" fg:x="65447" fg:w="78"/><text x="66.0775%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (78 samples, 0.08%)</title><rect x="65.8275%" y="629" width="0.0785%" height="15" fill="rgb(238,162,48)" fg:x="65447" fg:w="78"/><text x="66.0775%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (13 samples, 0.01%)</title><rect x="65.8929%" y="613" width="0.0131%" height="15" fill="rgb(221,59,43)" fg:x="65512" fg:w="13"/><text x="66.1429%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.11%)</title><rect x="65.8204%" y="661" width="0.1076%" height="15" fill="rgb(205,166,41)" fg:x="65440" fg:w="107"/><text x="66.0704%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="65.9059%" y="645" width="0.0221%" height="15" fill="rgb(241,186,40)" fg:x="65525" fg:w="22"/><text x="66.1559%" y="655.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::labeled_code (16 samples, 0.02%)</title><rect x="65.9391%" y="661" width="0.0161%" height="15" fill="rgb(216,119,35)" fg:x="65558" fg:w="16"/><text x="66.1891%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (11 samples, 0.01%)</title><rect x="65.9442%" y="645" width="0.0111%" height="15" fill="rgb(208,68,38)" fg:x="65563" fg:w="11"/><text x="66.1942%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.01%)</title><rect x="65.9663%" y="645" width="0.0131%" height="15" fill="rgb(217,113,1)" fg:x="65585" fg:w="13"/><text x="66.2163%" y="655.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits::_{{closure}} (30 samples, 0.03%)</title><rect x="65.9552%" y="661" width="0.0302%" height="15" fill="rgb(242,153,3)" fg:x="65574" fg:w="30"/><text x="66.2052%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::check_code (197 samples, 0.20%)</title><rect x="65.7943%" y="677" width="0.1981%" height="15" fill="rgb(229,76,35)" fg:x="65414" fg:w="197"/><text x="66.0443%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (14 samples, 0.01%)</title><rect x="66.0357%" y="645" width="0.0141%" height="15" fill="rgb(229,125,34)" fg:x="65654" fg:w="14"/><text x="66.2857%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (11 samples, 0.01%)</title><rect x="66.0387%" y="629" width="0.0111%" height="15" fill="rgb(238,179,36)" fg:x="65657" fg:w="11"/><text x="66.2887%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="66.0216%" y="661" width="0.0543%" height="15" fill="rgb(244,183,19)" fg:x="65640" fg:w="54"/><text x="66.2716%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="66.0498%" y="645" width="0.0262%" height="15" fill="rgb(216,85,49)" fg:x="65668" fg:w="26"/><text x="66.2998%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="66.1333%" y="565" width="0.0191%" height="15" fill="rgb(208,161,47)" fg:x="65751" fg:w="19"/><text x="66.3833%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="66.1333%" y="549" width="0.0191%" height="15" fill="rgb(233,210,18)" fg:x="65751" fg:w="19"/><text x="66.3833%" y="559.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.02%)</title><rect x="66.1564%" y="517" width="0.0151%" height="15" fill="rgb(205,104,42)" fg:x="65774" fg:w="15"/><text x="66.4064%" y="527.50"></text></g><g><title>_int_realloc (11 samples, 0.01%)</title><rect x="66.1604%" y="501" width="0.0111%" height="15" fill="rgb(248,90,43)" fg:x="65778" fg:w="11"/><text x="66.4104%" y="511.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.02%)</title><rect x="66.1554%" y="533" width="0.0191%" height="15" fill="rgb(206,198,11)" fg:x="65773" fg:w="19"/><text x="66.4054%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.03%)</title><rect x="66.1524%" y="565" width="0.0262%" height="15" fill="rgb(239,165,27)" fg:x="65770" fg:w="26"/><text x="66.4024%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.03%)</title><rect x="66.1524%" y="549" width="0.0262%" height="15" fill="rgb(246,44,32)" fg:x="65770" fg:w="26"/><text x="66.4024%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 0.06%)</title><rect x="66.1282%" y="581" width="0.0583%" height="15" fill="rgb(252,65,42)" fg:x="65746" fg:w="58"/><text x="66.3782%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (10 samples, 0.01%)</title><rect x="66.1976%" y="549" width="0.0101%" height="15" fill="rgb(246,197,18)" fg:x="65815" fg:w="10"/><text x="66.4476%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (16 samples, 0.02%)</title><rect x="66.1966%" y="565" width="0.0161%" height="15" fill="rgb(216,192,4)" fg:x="65814" fg:w="16"/><text x="66.4466%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array (44 samples, 0.04%)</title><rect x="66.1866%" y="581" width="0.0443%" height="15" fill="rgb(208,117,10)" fg:x="65804" fg:w="44"/><text x="66.4366%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::repeat (18 samples, 0.02%)</title><rect x="66.2127%" y="565" width="0.0181%" height="15" fill="rgb(240,61,47)" fg:x="65830" fg:w="18"/><text x="66.4627%" y="575.50"></text></g><g><title>core::cmp::max (11 samples, 0.01%)</title><rect x="66.2308%" y="581" width="0.0111%" height="15" fill="rgb(228,178,21)" fg:x="65848" fg:w="11"/><text x="66.4808%" y="591.50"></text></g><g><title>core::cmp::Ord::max (10 samples, 0.01%)</title><rect x="66.2318%" y="565" width="0.0101%" height="15" fill="rgb(219,96,54)" fg:x="65849" fg:w="10"/><text x="66.4818%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (142 samples, 0.14%)</title><rect x="66.1071%" y="597" width="0.1428%" height="15" fill="rgb(250,177,24)" fg:x="65725" fg:w="142"/><text x="66.3571%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (149 samples, 0.15%)</title><rect x="66.1041%" y="645" width="0.1499%" height="15" fill="rgb(242,154,46)" fg:x="65722" fg:w="149"/><text x="66.3541%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (149 samples, 0.15%)</title><rect x="66.1041%" y="629" width="0.1499%" height="15" fill="rgb(226,176,29)" fg:x="65722" fg:w="149"/><text x="66.3541%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (149 samples, 0.15%)</title><rect x="66.1041%" y="613" width="0.1499%" height="15" fill="rgb(226,29,2)" fg:x="65722" fg:w="149"/><text x="66.3541%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (186 samples, 0.19%)</title><rect x="66.0759%" y="661" width="0.1871%" height="15" fill="rgb(237,104,14)" fg:x="65694" fg:w="186"/><text x="66.3259%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (10 samples, 0.01%)</title><rect x="66.2640%" y="629" width="0.0101%" height="15" fill="rgb(245,207,31)" fg:x="65881" fg:w="10"/><text x="66.5140%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new (10 samples, 0.01%)</title><rect x="66.2640%" y="613" width="0.0101%" height="15" fill="rgb(229,211,45)" fg:x="65881" fg:w="10"/><text x="66.5140%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.01%)</title><rect x="66.2640%" y="597" width="0.0101%" height="15" fill="rgb(229,113,15)" fg:x="65881" fg:w="10"/><text x="66.5140%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.03%)</title><rect x="66.2992%" y="517" width="0.0251%" height="15" fill="rgb(237,147,15)" fg:x="65916" fg:w="25"/><text x="66.5492%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (64 samples, 0.06%)</title><rect x="66.2791%" y="581" width="0.0644%" height="15" fill="rgb(244,120,12)" fg:x="65896" fg:w="64"/><text x="66.5291%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 0.06%)</title><rect x="66.2811%" y="565" width="0.0624%" height="15" fill="rgb(205,120,12)" fg:x="65898" fg:w="62"/><text x="66.5311%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 0.06%)</title><rect x="66.2811%" y="549" width="0.0624%" height="15" fill="rgb(231,26,45)" fg:x="65898" fg:w="62"/><text x="66.5311%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (60 samples, 0.06%)</title><rect x="66.2831%" y="533" width="0.0603%" height="15" fill="rgb(246,98,1)" fg:x="65900" fg:w="60"/><text x="66.5331%" y="543.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (19 samples, 0.02%)</title><rect x="66.3244%" y="517" width="0.0191%" height="15" fill="rgb(207,68,45)" fg:x="65941" fg:w="19"/><text x="66.5744%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (75 samples, 0.08%)</title><rect x="66.2741%" y="597" width="0.0754%" height="15" fill="rgb(231,27,38)" fg:x="65891" fg:w="75"/><text x="66.5241%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 0.08%)</title><rect x="66.2741%" y="629" width="0.0774%" height="15" fill="rgb(214,223,3)" fg:x="65891" fg:w="77"/><text x="66.5241%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (77 samples, 0.08%)</title><rect x="66.2741%" y="613" width="0.0774%" height="15" fill="rgb(228,195,46)" fg:x="65891" fg:w="77"/><text x="66.5241%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (91 samples, 0.09%)</title><rect x="66.2640%" y="661" width="0.0915%" height="15" fill="rgb(231,100,42)" fg:x="65881" fg:w="91"/><text x="66.5140%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (91 samples, 0.09%)</title><rect x="66.2640%" y="645" width="0.0915%" height="15" fill="rgb(236,53,4)" fg:x="65881" fg:w="91"/><text x="66.5140%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (10 samples, 0.01%)</title><rect x="66.3726%" y="613" width="0.0101%" height="15" fill="rgb(230,152,12)" fg:x="65989" fg:w="10"/><text x="66.6226%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.02%)</title><rect x="66.4410%" y="517" width="0.0221%" height="15" fill="rgb(226,101,19)" fg:x="66057" fg:w="22"/><text x="66.6910%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (55 samples, 0.06%)</title><rect x="66.4119%" y="533" width="0.0553%" height="15" fill="rgb(250,149,32)" fg:x="66028" fg:w="55"/><text x="66.6619%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (64 samples, 0.06%)</title><rect x="66.5275%" y="517" width="0.0644%" height="15" fill="rgb(232,178,12)" fg:x="66143" fg:w="64"/><text x="66.7775%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (217 samples, 0.22%)</title><rect x="66.3948%" y="581" width="0.2183%" height="15" fill="rgb(246,151,17)" fg:x="66011" fg:w="217"/><text x="66.6448%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (216 samples, 0.22%)</title><rect x="66.3958%" y="565" width="0.2173%" height="15" fill="rgb(252,17,51)" fg:x="66012" fg:w="216"/><text x="66.6458%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (211 samples, 0.21%)</title><rect x="66.4008%" y="549" width="0.2122%" height="15" fill="rgb(250,207,23)" fg:x="66017" fg:w="211"/><text x="66.6508%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (145 samples, 0.15%)</title><rect x="66.4672%" y="533" width="0.1458%" height="15" fill="rgb(205,27,5)" fg:x="66083" fg:w="145"/><text x="66.7172%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21 samples, 0.02%)</title><rect x="66.5919%" y="517" width="0.0211%" height="15" fill="rgb(224,32,19)" fg:x="66207" fg:w="21"/><text x="66.8419%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="66.6160%" y="565" width="0.0121%" height="15" fill="rgb(247,214,40)" fg:x="66231" fg:w="12"/><text x="66.8660%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="66.6352%" y="549" width="0.0141%" height="15" fill="rgb(239,199,17)" fg:x="66250" fg:w="14"/><text x="66.8852%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (15 samples, 0.02%)</title><rect x="66.6492%" y="549" width="0.0151%" height="15" fill="rgb(251,159,9)" fg:x="66264" fg:w="15"/><text x="66.8992%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (52 samples, 0.05%)</title><rect x="66.6130%" y="581" width="0.0523%" height="15" fill="rgb(225,78,32)" fg:x="66228" fg:w="52"/><text x="66.8630%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (37 samples, 0.04%)</title><rect x="66.6281%" y="565" width="0.0372%" height="15" fill="rgb(206,97,47)" fg:x="66243" fg:w="37"/><text x="66.8781%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="66.7176%" y="485" width="0.0101%" height="15" fill="rgb(227,107,4)" fg:x="66332" fg:w="10"/><text x="66.9676%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (60 samples, 0.06%)</title><rect x="66.6764%" y="549" width="0.0603%" height="15" fill="rgb(241,146,50)" fg:x="66291" fg:w="60"/><text x="66.9264%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (59 samples, 0.06%)</title><rect x="66.6774%" y="533" width="0.0593%" height="15" fill="rgb(232,92,30)" fg:x="66292" fg:w="59"/><text x="66.9274%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.06%)</title><rect x="66.6804%" y="517" width="0.0563%" height="15" fill="rgb(222,0,40)" fg:x="66295" fg:w="56"/><text x="66.9304%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (35 samples, 0.04%)</title><rect x="66.7015%" y="501" width="0.0352%" height="15" fill="rgb(219,54,33)" fg:x="66316" fg:w="35"/><text x="66.9515%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (351 samples, 0.35%)</title><rect x="66.3857%" y="597" width="0.3530%" height="15" fill="rgb(226,209,28)" fg:x="66002" fg:w="351"/><text x="66.6357%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (73 samples, 0.07%)</title><rect x="66.6653%" y="581" width="0.0734%" height="15" fill="rgb(254,205,35)" fg:x="66280" fg:w="73"/><text x="66.9153%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u16 (70 samples, 0.07%)</title><rect x="66.6683%" y="565" width="0.0704%" height="15" fill="rgb(230,159,3)" fg:x="66283" fg:w="70"/><text x="66.9183%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="66.7880%" y="517" width="0.0101%" height="15" fill="rgb(232,190,24)" fg:x="66402" fg:w="10"/><text x="67.0380%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="66.7840%" y="533" width="0.0191%" height="15" fill="rgb(217,227,44)" fg:x="66398" fg:w="19"/><text x="67.0340%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (11 samples, 0.01%)</title><rect x="66.8031%" y="533" width="0.0111%" height="15" fill="rgb(236,211,1)" fg:x="66417" fg:w="11"/><text x="67.0531%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (26 samples, 0.03%)</title><rect x="66.8273%" y="501" width="0.0262%" height="15" fill="rgb(250,127,46)" fg:x="66441" fg:w="26"/><text x="67.0773%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (29 samples, 0.03%)</title><rect x="66.8534%" y="501" width="0.0292%" height="15" fill="rgb(229,213,6)" fg:x="66467" fg:w="29"/><text x="67.1034%" y="511.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (19 samples, 0.02%)</title><rect x="66.8635%" y="485" width="0.0191%" height="15" fill="rgb(237,15,36)" fg:x="66477" fg:w="19"/><text x="67.1135%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (159 samples, 0.16%)</title><rect x="66.7629%" y="565" width="0.1599%" height="15" fill="rgb(213,131,41)" fg:x="66377" fg:w="159"/><text x="67.0129%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.15%)</title><rect x="66.7689%" y="549" width="0.1539%" height="15" fill="rgb(225,82,44)" fg:x="66383" fg:w="153"/><text x="67.0189%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (108 samples, 0.11%)</title><rect x="66.8142%" y="533" width="0.1086%" height="15" fill="rgb(249,42,11)" fg:x="66428" fg:w="108"/><text x="67.0642%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (103 samples, 0.10%)</title><rect x="66.8192%" y="517" width="0.1036%" height="15" fill="rgb(253,11,29)" fg:x="66433" fg:w="103"/><text x="67.0692%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (40 samples, 0.04%)</title><rect x="66.8826%" y="501" width="0.0402%" height="15" fill="rgb(206,8,54)" fg:x="66496" fg:w="40"/><text x="67.1326%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (39 samples, 0.04%)</title><rect x="66.8836%" y="485" width="0.0392%" height="15" fill="rgb(222,186,2)" fg:x="66497" fg:w="39"/><text x="67.1336%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (20 samples, 0.02%)</title><rect x="66.9027%" y="469" width="0.0201%" height="15" fill="rgb(221,206,53)" fg:x="66516" fg:w="20"/><text x="67.1527%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (11 samples, 0.01%)</title><rect x="66.9751%" y="517" width="0.0111%" height="15" fill="rgb(230,150,21)" fg:x="66588" fg:w="11"/><text x="67.2251%" y="527.50"></text></g><g><title>hashbrown::raw::h2 (32 samples, 0.03%)</title><rect x="66.9892%" y="517" width="0.0322%" height="15" fill="rgb(253,202,10)" fg:x="66602" fg:w="32"/><text x="67.2392%" y="527.50"></text></g><g><title>core::cmp::Ord::min (25 samples, 0.03%)</title><rect x="66.9962%" y="501" width="0.0251%" height="15" fill="rgb(238,109,40)" fg:x="66609" fg:w="25"/><text x="67.2462%" y="511.50"></text></g><g><title>core::cmp::min_by (24 samples, 0.02%)</title><rect x="66.9972%" y="485" width="0.0241%" height="15" fill="rgb(247,120,22)" fg:x="66610" fg:w="24"/><text x="67.2472%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="67.0083%" y="469" width="0.0131%" height="15" fill="rgb(207,43,30)" fg:x="66621" fg:w="13"/><text x="67.2583%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (10 samples, 0.01%)</title><rect x="67.0113%" y="453" width="0.0101%" height="15" fill="rgb(213,211,24)" fg:x="66624" fg:w="10"/><text x="67.2613%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (32 samples, 0.03%)</title><rect x="67.0214%" y="517" width="0.0322%" height="15" fill="rgb(239,73,39)" fg:x="66634" fg:w="32"/><text x="67.2714%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.03%)</title><rect x="67.0274%" y="501" width="0.0262%" height="15" fill="rgb(245,182,19)" fg:x="66640" fg:w="26"/><text x="67.2774%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="67.0435%" y="485" width="0.0101%" height="15" fill="rgb(247,143,26)" fg:x="66656" fg:w="10"/><text x="67.2935%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (30 samples, 0.03%)</title><rect x="67.0707%" y="501" width="0.0302%" height="15" fill="rgb(228,191,23)" fg:x="66683" fg:w="30"/><text x="67.3207%" y="511.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (11 samples, 0.01%)</title><rect x="67.0898%" y="485" width="0.0111%" height="15" fill="rgb(253,165,31)" fg:x="66702" fg:w="11"/><text x="67.3398%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (26 samples, 0.03%)</title><rect x="67.1008%" y="501" width="0.0262%" height="15" fill="rgb(234,138,20)" fg:x="66713" fg:w="26"/><text x="67.3508%" y="511.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (11 samples, 0.01%)</title><rect x="67.1159%" y="485" width="0.0111%" height="15" fill="rgb(218,191,29)" fg:x="66728" fg:w="11"/><text x="67.3659%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (219 samples, 0.22%)</title><rect x="66.9470%" y="533" width="0.2203%" height="15" fill="rgb(221,157,19)" fg:x="66560" fg:w="219"/><text x="67.1970%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (113 samples, 0.11%)</title><rect x="67.0536%" y="517" width="0.1137%" height="15" fill="rgb(237,26,42)" fg:x="66666" fg:w="113"/><text x="67.3036%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (40 samples, 0.04%)</title><rect x="67.1270%" y="501" width="0.0402%" height="15" fill="rgb(220,163,24)" fg:x="66739" fg:w="40"/><text x="67.3770%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (23 samples, 0.02%)</title><rect x="67.1441%" y="485" width="0.0231%" height="15" fill="rgb(242,115,20)" fg:x="66756" fg:w="23"/><text x="67.3941%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (12 samples, 0.01%)</title><rect x="67.1552%" y="469" width="0.0121%" height="15" fill="rgb(210,206,9)" fg:x="66767" fg:w="12"/><text x="67.4052%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (237 samples, 0.24%)</title><rect x="66.9319%" y="565" width="0.2384%" height="15" fill="rgb(208,71,17)" fg:x="66545" fg:w="237"/><text x="67.1819%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (234 samples, 0.24%)</title><rect x="66.9349%" y="549" width="0.2354%" height="15" fill="rgb(233,7,5)" fg:x="66548" fg:w="234"/><text x="67.1849%" y="559.50"></text></g><g><title>bytecode_verifier::control_flow::count_loop_depth (1,172 samples, 1.18%)</title><rect x="65.9924%" y="677" width="1.1788%" height="15" fill="rgb(207,92,33)" fg:x="65611" fg:w="1172"/><text x="66.2424%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (801 samples, 0.81%)</title><rect x="66.3656%" y="661" width="0.8057%" height="15" fill="rgb(218,87,9)" fg:x="65982" fg:w="801"/><text x="66.6156%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (800 samples, 0.80%)</title><rect x="66.3666%" y="645" width="0.8047%" height="15" fill="rgb(219,47,37)" fg:x="65983" fg:w="800"/><text x="66.6166%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (799 samples, 0.80%)</title><rect x="66.3676%" y="629" width="0.8036%" height="15" fill="rgb(221,152,34)" fg:x="65984" fg:w="799"/><text x="66.6176%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (784 samples, 0.79%)</title><rect x="66.3827%" y="613" width="0.7886%" height="15" fill="rgb(235,176,21)" fg:x="65999" fg:w="784"/><text x="66.6327%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (430 samples, 0.43%)</title><rect x="66.7387%" y="597" width="0.4325%" height="15" fill="rgb(232,212,21)" fg:x="66353" fg:w="430"/><text x="66.9887%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (427 samples, 0.43%)</title><rect x="66.7418%" y="581" width="0.4295%" height="15" fill="rgb(245,82,39)" fg:x="66356" fg:w="427"/><text x="66.9918%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="67.1753%" y="629" width="0.0151%" height="15" fill="rgb(241,52,51)" fg:x="66787" fg:w="15"/><text x="67.4253%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="67.1773%" y="613" width="0.0131%" height="15" fill="rgb(219,91,24)" fg:x="66789" fg:w="13"/><text x="67.4273%" y="623.50"></text></g><g><title>bytecode_verifier::control_flow::check_no_loop_splits (1,390 samples, 1.40%)</title><rect x="65.7943%" y="693" width="1.3981%" height="15" fill="rgb(241,142,12)" fg:x="65414" fg:w="1390"/><text x="66.0443%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (21 samples, 0.02%)</title><rect x="67.1712%" y="677" width="0.0211%" height="15" fill="rgb(230,27,9)" fg:x="66783" fg:w="21"/><text x="67.4212%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (18 samples, 0.02%)</title><rect x="67.1743%" y="661" width="0.0181%" height="15" fill="rgb(249,181,32)" fg:x="66786" fg:w="18"/><text x="67.4243%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="67.1743%" y="645" width="0.0181%" height="15" fill="rgb(230,107,3)" fg:x="66786" fg:w="18"/><text x="67.4243%" y="655.50"></text></g><g><title>bytecode_verifier::control_flow::check_jumps (1,866 samples, 1.88%)</title><rect x="65.3256%" y="709" width="1.8768%" height="15" fill="rgb(246,204,14)" fg:x="64948" fg:w="1866"/><text x="65.5756%" y="719.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::control_flow::Label&gt;&gt; (10 samples, 0.01%)</title><rect x="67.1924%" y="693" width="0.0101%" height="15" fill="rgb(213,192,47)" fg:x="66804" fg:w="10"/><text x="67.4424%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.01%)</title><rect x="67.2819%" y="645" width="0.0111%" height="15" fill="rgb(240,44,36)" fg:x="66893" fg:w="11"/><text x="67.5319%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.06%)</title><rect x="67.2417%" y="677" width="0.0624%" height="15" fill="rgb(244,209,38)" fg:x="66853" fg:w="62"/><text x="67.4917%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="67.2678%" y="661" width="0.0362%" height="15" fill="rgb(219,34,37)" fg:x="66879" fg:w="36"/><text x="67.5178%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.11%)</title><rect x="67.2366%" y="693" width="0.1127%" height="15" fill="rgb(210,28,6)" fg:x="66848" fg:w="112"/><text x="67.4866%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.05%)</title><rect x="67.3040%" y="677" width="0.0453%" height="15" fill="rgb(244,110,52)" fg:x="66915" fg:w="45"/><text x="67.5540%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26 samples, 0.03%)</title><rect x="67.3231%" y="661" width="0.0262%" height="15" fill="rgb(254,124,47)" fg:x="66934" fg:w="26"/><text x="67.5731%" y="671.50"></text></g><g><title>bytecode_verifier::control_flow::ControlFlowVerifier::code::_{{closure}} (16 samples, 0.02%)</title><rect x="67.3332%" y="645" width="0.0161%" height="15" fill="rgb(254,110,13)" fg:x="66944" fg:w="16"/><text x="67.5832%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (42 samples, 0.04%)</title><rect x="67.3805%" y="565" width="0.0422%" height="15" fill="rgb(252,57,21)" fg:x="66991" fg:w="42"/><text x="67.6305%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (22 samples, 0.02%)</title><rect x="67.4006%" y="549" width="0.0221%" height="15" fill="rgb(242,60,45)" fg:x="67011" fg:w="22"/><text x="67.6506%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (12 samples, 0.01%)</title><rect x="67.4106%" y="533" width="0.0121%" height="15" fill="rgb(234,49,30)" fg:x="67021" fg:w="12"/><text x="67.6606%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (94 samples, 0.09%)</title><rect x="67.3644%" y="629" width="0.0945%" height="15" fill="rgb(218,98,6)" fg:x="66975" fg:w="94"/><text x="67.6144%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (90 samples, 0.09%)</title><rect x="67.3684%" y="613" width="0.0905%" height="15" fill="rgb(220,174,29)" fg:x="66979" fg:w="90"/><text x="67.6184%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89 samples, 0.09%)</title><rect x="67.3694%" y="597" width="0.0895%" height="15" fill="rgb(236,163,23)" fg:x="66980" fg:w="89"/><text x="67.6194%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (87 samples, 0.09%)</title><rect x="67.3714%" y="581" width="0.0875%" height="15" fill="rgb(242,114,45)" fg:x="66982" fg:w="87"/><text x="67.6214%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36 samples, 0.04%)</title><rect x="67.4227%" y="565" width="0.0362%" height="15" fill="rgb(232,10,53)" fg:x="67033" fg:w="36"/><text x="67.6727%" y="575.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="67.4388%" y="549" width="0.0201%" height="15" fill="rgb(245,108,29)" fg:x="67049" fg:w="20"/><text x="67.6888%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (20 samples, 0.02%)</title><rect x="67.4810%" y="565" width="0.0201%" height="15" fill="rgb(240,89,53)" fg:x="67091" fg:w="20"/><text x="67.7310%" y="575.50"></text></g><g><title>bytecode_verifier::control_flow::instruction_labels (302 samples, 0.30%)</title><rect x="67.2024%" y="709" width="0.3038%" height="15" fill="rgb(226,60,45)" fg:x="66814" fg:w="302"/><text x="67.4524%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (149 samples, 0.15%)</title><rect x="67.3563%" y="693" width="0.1499%" height="15" fill="rgb(230,41,44)" fg:x="66967" fg:w="149"/><text x="67.6063%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (147 samples, 0.15%)</title><rect x="67.3583%" y="677" width="0.1479%" height="15" fill="rgb(230,26,20)" fg:x="66969" fg:w="147"/><text x="67.6083%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (143 samples, 0.14%)</title><rect x="67.3624%" y="661" width="0.1438%" height="15" fill="rgb(237,170,32)" fg:x="66973" fg:w="143"/><text x="67.6124%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (143 samples, 0.14%)</title><rect x="67.3624%" y="645" width="0.1438%" height="15" fill="rgb(212,35,42)" fg:x="66973" fg:w="143"/><text x="67.6124%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 0.04%)</title><rect x="67.4670%" y="629" width="0.0392%" height="15" fill="rgb(227,31,34)" fg:x="67077" fg:w="39"/><text x="67.7170%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (39 samples, 0.04%)</title><rect x="67.4670%" y="613" width="0.0392%" height="15" fill="rgb(216,19,18)" fg:x="67077" fg:w="39"/><text x="67.7170%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="67.4680%" y="597" width="0.0382%" height="15" fill="rgb(211,133,42)" fg:x="67078" fg:w="38"/><text x="67.7180%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.04%)</title><rect x="67.4680%" y="581" width="0.0382%" height="15" fill="rgb(244,66,13)" fg:x="67078" fg:w="38"/><text x="67.7180%" y="591.50"></text></g><g><title>bytecode_verifier::control_flow::verify (2,178 samples, 2.19%)</title><rect x="65.3175%" y="725" width="2.1907%" height="15" fill="rgb(218,185,50)" fg:x="64940" fg:w="2178"/><text x="65.5675%" y="735.50">b..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (15 samples, 0.02%)</title><rect x="67.5263%" y="645" width="0.0151%" height="15" fill="rgb(219,149,13)" fg:x="67136" fg:w="15"/><text x="67.7763%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (20 samples, 0.02%)</title><rect x="67.5223%" y="661" width="0.0201%" height="15" fill="rgb(221,125,0)" fg:x="67132" fg:w="20"/><text x="67.7723%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (29 samples, 0.03%)</title><rect x="67.5223%" y="677" width="0.0292%" height="15" fill="rgb(247,126,27)" fg:x="67132" fg:w="29"/><text x="67.7723%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="67.5213%" y="693" width="0.0312%" height="15" fill="rgb(250,138,30)" fg:x="67131" fg:w="31"/><text x="67.7713%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.04%)</title><rect x="67.5213%" y="709" width="0.0352%" height="15" fill="rgb(230,151,9)" fg:x="67131" fg:w="35"/><text x="67.7713%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (11 samples, 0.01%)</title><rect x="67.5746%" y="645" width="0.0111%" height="15" fill="rgb(233,80,38)" fg:x="67184" fg:w="11"/><text x="67.8246%" y="655.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="67.5746%" y="629" width="0.0111%" height="15" fill="rgb(232,68,43)" fg:x="67184" fg:w="11"/><text x="67.8246%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="67.5565%" y="709" width="0.0342%" height="15" fill="rgb(254,5,50)" fg:x="67166" fg:w="34"/><text x="67.8065%" y="719.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="67.5565%" y="693" width="0.0342%" height="15" fill="rgb(225,45,5)" fg:x="67166" fg:w="34"/><text x="67.8065%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="67.5575%" y="677" width="0.0332%" height="15" fill="rgb(239,22,3)" fg:x="67167" fg:w="33"/><text x="67.8075%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (16 samples, 0.02%)</title><rect x="67.5746%" y="661" width="0.0161%" height="15" fill="rgb(243,129,0)" fg:x="67184" fg:w="16"/><text x="67.8246%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="67.5907%" y="709" width="0.0131%" height="15" fill="rgb(223,164,0)" fg:x="67200" fg:w="13"/><text x="67.8407%" y="719.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (26 samples, 0.03%)</title><rect x="67.6037%" y="709" width="0.0262%" height="15" fill="rgb(221,46,29)" fg:x="67213" fg:w="26"/><text x="67.8537%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.01%)</title><rect x="67.6601%" y="613" width="0.0131%" height="15" fill="rgb(205,97,47)" fg:x="67269" fg:w="13"/><text x="67.9101%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="67.6540%" y="629" width="0.0231%" height="15" fill="rgb(249,14,8)" fg:x="67263" fg:w="23"/><text x="67.9040%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.04%)</title><rect x="67.6500%" y="677" width="0.0352%" height="15" fill="rgb(216,77,3)" fg:x="67259" fg:w="35"/><text x="67.9000%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="67.6540%" y="661" width="0.0312%" height="15" fill="rgb(206,168,54)" fg:x="67263" fg:w="31"/><text x="67.9040%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="67.6540%" y="645" width="0.0312%" height="15" fill="rgb(236,3,41)" fg:x="67263" fg:w="31"/><text x="67.9040%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 0.05%)</title><rect x="67.6470%" y="693" width="0.0493%" height="15" fill="rgb(231,132,24)" fg:x="67256" fg:w="49"/><text x="67.8970%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="67.6852%" y="677" width="0.0111%" height="15" fill="rgb(227,221,40)" fg:x="67294" fg:w="11"/><text x="67.9352%" y="687.50"></text></g><g><title>bytecode_verifier::locals_safety::abstract_state::AbstractState::new (77 samples, 0.08%)</title><rect x="67.6299%" y="709" width="0.0774%" height="15" fill="rgb(233,151,11)" fg:x="67239" fg:w="77"/><text x="67.8799%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="67.7084%" y="677" width="0.0101%" height="15" fill="rgb(247,81,35)" fg:x="67317" fg:w="10"/><text x="67.9584%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (23 samples, 0.02%)</title><rect x="67.7084%" y="693" width="0.0231%" height="15" fill="rgb(243,128,48)" fg:x="67317" fg:w="23"/><text x="67.9584%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::locals_safety::abstract_state::LocalState&gt;&gt; (13 samples, 0.01%)</title><rect x="67.7184%" y="677" width="0.0131%" height="15" fill="rgb(253,16,10)" fg:x="67327" fg:w="13"/><text x="67.9684%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="67.7184%" y="661" width="0.0131%" height="15" fill="rgb(228,67,27)" fg:x="67327" fg:w="13"/><text x="67.9684%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::locals_safety::abstract_state::AbstractState&gt; (45 samples, 0.05%)</title><rect x="67.7073%" y="709" width="0.0453%" height="15" fill="rgb(231,105,25)" fg:x="67316" fg:w="45"/><text x="67.9573%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (21 samples, 0.02%)</title><rect x="67.7315%" y="693" width="0.0211%" height="15" fill="rgb(213,166,47)" fg:x="67340" fg:w="21"/><text x="67.9815%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::file_format::AbilitySet&gt;&gt; (17 samples, 0.02%)</title><rect x="67.7355%" y="677" width="0.0171%" height="15" fill="rgb(209,27,10)" fg:x="67344" fg:w="17"/><text x="67.9855%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="67.7355%" y="661" width="0.0171%" height="15" fill="rgb(241,44,30)" fg:x="67344" fg:w="17"/><text x="67.9855%" y="671.50"></text></g><g><title>bytecode_verifier::locals_safety::verify (246 samples, 0.25%)</title><rect x="67.5082%" y="725" width="0.2474%" height="15" fill="rgb(223,216,15)" fg:x="67118" fg:w="246"/><text x="67.7582%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (31 samples, 0.03%)</title><rect x="67.7717%" y="661" width="0.0312%" height="15" fill="rgb(227,14,7)" fg:x="67380" fg:w="31"/><text x="68.0217%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (26 samples, 0.03%)</title><rect x="67.7767%" y="645" width="0.0262%" height="15" fill="rgb(237,14,5)" fg:x="67385" fg:w="26"/><text x="68.0267%" y="655.50"></text></g><g><title>hashbrown::raw::calculate_layout (13 samples, 0.01%)</title><rect x="67.7898%" y="629" width="0.0131%" height="15" fill="rgb(232,14,36)" fg:x="67398" fg:w="13"/><text x="68.0398%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (50 samples, 0.05%)</title><rect x="67.7707%" y="677" width="0.0503%" height="15" fill="rgb(234,0,38)" fg:x="67379" fg:w="50"/><text x="68.0207%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (18 samples, 0.02%)</title><rect x="67.8029%" y="661" width="0.0181%" height="15" fill="rgb(207,170,14)" fg:x="67411" fg:w="18"/><text x="68.0529%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="67.8089%" y="645" width="0.0121%" height="15" fill="rgb(252,45,13)" fg:x="67417" fg:w="12"/><text x="68.0589%" y="655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (51 samples, 0.05%)</title><rect x="67.7707%" y="693" width="0.0513%" height="15" fill="rgb(213,142,7)" fg:x="67379" fg:w="51"/><text x="68.0207%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (54 samples, 0.05%)</title><rect x="67.7707%" y="709" width="0.0543%" height="15" fill="rgb(216,157,23)" fg:x="67379" fg:w="54"/><text x="68.0207%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="67.8351%" y="661" width="0.0191%" height="15" fill="rgb(212,145,33)" fg:x="67443" fg:w="19"/><text x="68.0851%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="67.8391%" y="645" width="0.0151%" height="15" fill="rgb(233,26,13)" fg:x="67447" fg:w="15"/><text x="68.0891%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="67.8622%" y="613" width="0.0111%" height="15" fill="rgb(219,196,19)" fg:x="67470" fg:w="11"/><text x="68.1122%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="67.8632%" y="597" width="0.0101%" height="15" fill="rgb(246,56,21)" fg:x="67471" fg:w="10"/><text x="68.1132%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (30 samples, 0.03%)</title><rect x="67.8562%" y="645" width="0.0302%" height="15" fill="rgb(222,28,53)" fg:x="67464" fg:w="30"/><text x="68.1062%" y="655.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="67.8562%" y="629" width="0.0302%" height="15" fill="rgb(224,5,27)" fg:x="67464" fg:w="30"/><text x="68.1062%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (13 samples, 0.01%)</title><rect x="67.8733%" y="613" width="0.0131%" height="15" fill="rgb(220,153,33)" fg:x="67481" fg:w="13"/><text x="68.1233%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.07%)</title><rect x="67.8250%" y="709" width="0.0694%" height="15" fill="rgb(226,58,19)" fg:x="67433" fg:w="69"/><text x="68.0750%" y="719.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.07%)</title><rect x="67.8250%" y="693" width="0.0694%" height="15" fill="rgb(239,112,23)" fg:x="67433" fg:w="69"/><text x="68.0750%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.07%)</title><rect x="67.8270%" y="677" width="0.0674%" height="15" fill="rgb(251,213,20)" fg:x="67435" fg:w="67"/><text x="68.0770%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (39 samples, 0.04%)</title><rect x="67.8552%" y="661" width="0.0392%" height="15" fill="rgb(215,181,21)" fg:x="67463" fg:w="39"/><text x="68.1052%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="67.8944%" y="709" width="0.0131%" height="15" fill="rgb(240,8,35)" fg:x="67502" fg:w="13"/><text x="68.1444%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (18 samples, 0.02%)</title><rect x="67.9719%" y="645" width="0.0181%" height="15" fill="rgb(232,203,3)" fg:x="67579" fg:w="18"/><text x="68.2219%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (25 samples, 0.03%)</title><rect x="67.9709%" y="661" width="0.0251%" height="15" fill="rgb(214,202,43)" fg:x="67578" fg:w="25"/><text x="68.2209%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="67.9689%" y="677" width="0.0422%" height="15" fill="rgb(254,35,11)" fg:x="67576" fg:w="42"/><text x="68.2189%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts (15 samples, 0.02%)</title><rect x="67.9960%" y="661" width="0.0151%" height="15" fill="rgb(239,173,13)" fg:x="67603" fg:w="15"/><text x="68.2460%" y="671.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (49 samples, 0.05%)</title><rect x="67.9679%" y="693" width="0.0493%" height="15" fill="rgb(220,141,0)" fg:x="67575" fg:w="49"/><text x="68.2179%" y="703.50"></text></g><g><title>&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="68.0202%" y="693" width="0.0131%" height="15" fill="rgb(210,98,12)" fg:x="67627" fg:w="13"/><text x="68.2702%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="68.0332%" y="693" width="0.0151%" height="15" fill="rgb(254,153,22)" fg:x="67640" fg:w="15"/><text x="68.2832%" y="703.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::successors (14 samples, 0.01%)</title><rect x="68.0483%" y="693" width="0.0141%" height="15" fill="rgb(247,223,17)" fg:x="67655" fg:w="14"/><text x="68.2983%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (12 samples, 0.01%)</title><rect x="68.0503%" y="677" width="0.0121%" height="15" fill="rgb(246,56,7)" fg:x="67657" fg:w="12"/><text x="68.3003%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (25 samples, 0.03%)</title><rect x="68.0664%" y="693" width="0.0251%" height="15" fill="rgb(240,226,12)" fg:x="67673" fg:w="25"/><text x="68.3164%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="68.0916%" y="693" width="0.0241%" height="15" fill="rgb(205,87,46)" fg:x="67698" fg:w="24"/><text x="68.3416%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (10 samples, 0.01%)</title><rect x="68.1157%" y="693" width="0.0101%" height="15" fill="rgb(245,214,51)" fg:x="67722" fg:w="10"/><text x="68.3657%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (11 samples, 0.01%)</title><rect x="68.1348%" y="693" width="0.0111%" height="15" fill="rgb(223,172,33)" fg:x="67741" fg:w="11"/><text x="68.3848%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (22 samples, 0.02%)</title><rect x="68.1489%" y="693" width="0.0221%" height="15" fill="rgb(227,203,34)" fg:x="67755" fg:w="22"/><text x="68.3989%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (18 samples, 0.02%)</title><rect x="68.1529%" y="677" width="0.0181%" height="15" fill="rgb(248,143,44)" fg:x="67759" fg:w="18"/><text x="68.4029%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (16 samples, 0.02%)</title><rect x="68.1549%" y="661" width="0.0161%" height="15" fill="rgb(226,162,5)" fg:x="67761" fg:w="16"/><text x="68.4049%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.01%)</title><rect x="68.1710%" y="693" width="0.0101%" height="15" fill="rgb(211,143,1)" fg:x="67777" fg:w="10"/><text x="68.4210%" y="703.50"></text></g><g><title>bytecode_verifier::absint::AbstractInterpreter::analyze_function (276 samples, 0.28%)</title><rect x="67.9075%" y="709" width="0.2776%" height="15" fill="rgb(224,96,15)" fg:x="67515" fg:w="276"/><text x="68.1575%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="68.2163%" y="693" width="0.0131%" height="15" fill="rgb(222,4,38)" fg:x="67822" fg:w="13"/><text x="68.4663%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.01%)</title><rect x="68.2404%" y="533" width="0.0111%" height="15" fill="rgb(253,228,15)" fg:x="67846" fg:w="11"/><text x="68.4904%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (14 samples, 0.01%)</title><rect x="68.2394%" y="565" width="0.0141%" height="15" fill="rgb(242,194,12)" fg:x="67845" fg:w="14"/><text x="68.4894%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.01%)</title><rect x="68.2394%" y="549" width="0.0141%" height="15" fill="rgb(214,177,31)" fg:x="67845" fg:w="14"/><text x="68.4894%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (12 samples, 0.01%)</title><rect x="68.2535%" y="565" width="0.0121%" height="15" fill="rgb(226,58,51)" fg:x="67859" fg:w="12"/><text x="68.5035%" y="575.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (28 samples, 0.03%)</title><rect x="68.2384%" y="581" width="0.0282%" height="15" fill="rgb(250,119,16)" fg:x="67844" fg:w="28"/><text x="68.4884%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (34 samples, 0.03%)</title><rect x="68.2364%" y="661" width="0.0342%" height="15" fill="rgb(223,128,53)" fg:x="67842" fg:w="34"/><text x="68.4864%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (34 samples, 0.03%)</title><rect x="68.2364%" y="645" width="0.0342%" height="15" fill="rgb(251,199,15)" fg:x="67842" fg:w="34"/><text x="68.4864%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (33 samples, 0.03%)</title><rect x="68.2374%" y="629" width="0.0332%" height="15" fill="rgb(235,168,42)" fg:x="67843" fg:w="33"/><text x="68.4874%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (33 samples, 0.03%)</title><rect x="68.2374%" y="613" width="0.0332%" height="15" fill="rgb(250,210,17)" fg:x="67843" fg:w="33"/><text x="68.4874%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (32 samples, 0.03%)</title><rect x="68.2384%" y="597" width="0.0322%" height="15" fill="rgb(226,36,41)" fg:x="67844" fg:w="32"/><text x="68.4884%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="68.2847%" y="613" width="0.0151%" height="15" fill="rgb(225,87,10)" fg:x="67890" fg:w="15"/><text x="68.5347%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="68.2897%" y="597" width="0.0101%" height="15" fill="rgb(228,83,9)" fg:x="67895" fg:w="10"/><text x="68.5397%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.01%)</title><rect x="68.2998%" y="613" width="0.0131%" height="15" fill="rgb(225,16,36)" fg:x="67905" fg:w="13"/><text x="68.5498%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (51 samples, 0.05%)</title><rect x="68.2736%" y="661" width="0.0513%" height="15" fill="rgb(242,198,13)" fg:x="67879" fg:w="51"/><text x="68.5236%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (48 samples, 0.05%)</title><rect x="68.2766%" y="645" width="0.0483%" height="15" fill="rgb(239,25,51)" fg:x="67882" fg:w="48"/><text x="68.5266%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (46 samples, 0.05%)</title><rect x="68.2787%" y="629" width="0.0463%" height="15" fill="rgb(239,28,37)" fg:x="67884" fg:w="46"/><text x="68.5287%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (94 samples, 0.09%)</title><rect x="68.2314%" y="677" width="0.0945%" height="15" fill="rgb(234,70,17)" fg:x="67837" fg:w="94"/><text x="68.4814%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (109 samples, 0.11%)</title><rect x="68.2294%" y="693" width="0.1096%" height="15" fill="rgb(231,215,53)" fg:x="67835" fg:w="109"/><text x="68.4794%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (12 samples, 0.01%)</title><rect x="68.3269%" y="677" width="0.0121%" height="15" fill="rgb(218,140,42)" fg:x="67932" fg:w="12"/><text x="68.5769%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (10 samples, 0.01%)</title><rect x="68.3289%" y="661" width="0.0101%" height="15" fill="rgb(233,227,45)" fg:x="67934" fg:w="10"/><text x="68.5789%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (10 samples, 0.01%)</title><rect x="68.3752%" y="517" width="0.0101%" height="15" fill="rgb(225,189,21)" fg:x="67980" fg:w="10"/><text x="68.6252%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (16 samples, 0.02%)</title><rect x="68.3702%" y="549" width="0.0161%" height="15" fill="rgb(237,176,54)" fg:x="67975" fg:w="16"/><text x="68.6202%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (15 samples, 0.02%)</title><rect x="68.3712%" y="533" width="0.0151%" height="15" fill="rgb(215,131,46)" fg:x="67976" fg:w="15"/><text x="68.6212%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (28 samples, 0.03%)</title><rect x="68.3692%" y="565" width="0.0282%" height="15" fill="rgb(218,95,20)" fg:x="67974" fg:w="28"/><text x="68.6192%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (39 samples, 0.04%)</title><rect x="68.3611%" y="645" width="0.0392%" height="15" fill="rgb(208,198,12)" fg:x="67966" fg:w="39"/><text x="68.6111%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (38 samples, 0.04%)</title><rect x="68.3621%" y="629" width="0.0382%" height="15" fill="rgb(239,107,50)" fg:x="67967" fg:w="38"/><text x="68.6121%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.04%)</title><rect x="68.3652%" y="613" width="0.0352%" height="15" fill="rgb(240,217,37)" fg:x="67970" fg:w="35"/><text x="68.6152%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (34 samples, 0.03%)</title><rect x="68.3662%" y="597" width="0.0342%" height="15" fill="rgb(242,197,49)" fg:x="67971" fg:w="34"/><text x="68.6162%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (31 samples, 0.03%)</title><rect x="68.3692%" y="581" width="0.0312%" height="15" fill="rgb(219,171,17)" fg:x="67974" fg:w="31"/><text x="68.6192%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (63 samples, 0.06%)</title><rect x="68.3511%" y="661" width="0.0634%" height="15" fill="rgb(209,81,40)" fg:x="67956" fg:w="63"/><text x="68.6011%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 0.01%)</title><rect x="68.4004%" y="645" width="0.0141%" height="15" fill="rgb(237,156,30)" fg:x="68005" fg:w="14"/><text x="68.6504%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.01%)</title><rect x="68.4044%" y="629" width="0.0101%" height="15" fill="rgb(212,127,16)" fg:x="68009" fg:w="10"/><text x="68.6544%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.01%)</title><rect x="68.4044%" y="613" width="0.0101%" height="15" fill="rgb(226,66,32)" fg:x="68009" fg:w="10"/><text x="68.6544%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (70 samples, 0.07%)</title><rect x="68.3470%" y="677" width="0.0704%" height="15" fill="rgb(245,22,46)" fg:x="67952" fg:w="70"/><text x="68.5970%" y="687.50"></text></g><g><title>borrow_graph::graph::BorrowGraph&lt;Loc,Lbl&gt;::new_ref (85 samples, 0.09%)</title><rect x="68.3410%" y="693" width="0.0855%" height="15" fill="rgb(210,112,21)" fg:x="67946" fg:w="85"/><text x="68.5910%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (17 samples, 0.02%)</title><rect x="68.4708%" y="565" width="0.0171%" height="15" fill="rgb(207,118,39)" fg:x="68075" fg:w="17"/><text x="68.7208%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="68.4758%" y="549" width="0.0121%" height="15" fill="rgb(205,206,35)" fg:x="68080" fg:w="12"/><text x="68.7258%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="68.4758%" y="533" width="0.0121%" height="15" fill="rgb(222,120,2)" fg:x="68080" fg:w="12"/><text x="68.7258%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (40 samples, 0.04%)</title><rect x="68.4517%" y="581" width="0.0402%" height="15" fill="rgb(205,38,18)" fg:x="68056" fg:w="40"/><text x="68.7017%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (55 samples, 0.06%)</title><rect x="68.4486%" y="613" width="0.0553%" height="15" fill="rgb(226,61,2)" fg:x="68053" fg:w="55"/><text x="68.6986%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (54 samples, 0.05%)</title><rect x="68.4496%" y="597" width="0.0543%" height="15" fill="rgb(242,161,23)" fg:x="68054" fg:w="54"/><text x="68.6996%" y="607.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="68.4919%" y="581" width="0.0121%" height="15" fill="rgb(213,13,52)" fg:x="68096" fg:w="12"/><text x="68.7419%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.06%)</title><rect x="68.4476%" y="645" width="0.0573%" height="15" fill="rgb(246,209,47)" fg:x="68052" fg:w="57"/><text x="68.6976%" y="655.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (56 samples, 0.06%)</title><rect x="68.4486%" y="629" width="0.0563%" height="15" fill="rgb(214,41,3)" fg:x="68053" fg:w="56"/><text x="68.6986%" y="639.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::is_canonical (91 samples, 0.09%)</title><rect x="68.4265%" y="693" width="0.0915%" height="15" fill="rgb(236,119,38)" fg:x="68031" fg:w="91"/><text x="68.6765%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (81 samples, 0.08%)</title><rect x="68.4366%" y="677" width="0.0815%" height="15" fill="rgb(218,50,11)" fg:x="68041" fg:w="81"/><text x="68.6866%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 0.08%)</title><rect x="68.4406%" y="661" width="0.0774%" height="15" fill="rgb(228,38,11)" fg:x="68045" fg:w="77"/><text x="68.6906%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.01%)</title><rect x="68.5060%" y="645" width="0.0121%" height="15" fill="rgb(212,13,9)" fg:x="68110" fg:w="12"/><text x="68.7560%" y="655.50"></text></g><g><title>bytecode_verifier::reference_safety::abstract_state::AbstractState::new (334 samples, 0.34%)</title><rect x="68.1942%" y="709" width="0.3359%" height="15" fill="rgb(208,211,9)" fg:x="67800" fg:w="334"/><text x="68.4442%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::ReferenceSafetyAnalysis&gt; (13 samples, 0.01%)</title><rect x="68.5301%" y="709" width="0.0131%" height="15" fill="rgb(239,39,32)" fg:x="68134" fg:w="13"/><text x="68.7801%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (13 samples, 0.01%)</title><rect x="68.5301%" y="693" width="0.0131%" height="15" fill="rgb(254,179,26)" fg:x="68134" fg:w="13"/><text x="68.7801%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (10 samples, 0.01%)</title><rect x="68.5331%" y="677" width="0.0101%" height="15" fill="rgb(249,165,28)" fg:x="68137" fg:w="10"/><text x="68.7831%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="68.5331%" y="661" width="0.0101%" height="15" fill="rgb(225,59,50)" fg:x="68137" fg:w="10"/><text x="68.7831%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (11 samples, 0.01%)</title><rect x="68.5472%" y="661" width="0.0111%" height="15" fill="rgb(209,122,5)" fg:x="68151" fg:w="11"/><text x="68.7972%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.01%)</title><rect x="68.5583%" y="661" width="0.0101%" height="15" fill="rgb(214,65,34)" fg:x="68162" fg:w="10"/><text x="68.8083%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="68.5804%" y="581" width="0.0151%" height="15" fill="rgb(249,183,32)" fg:x="68184" fg:w="15"/><text x="68.8304%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.02%)</title><rect x="68.5804%" y="565" width="0.0151%" height="15" fill="rgb(218,122,24)" fg:x="68184" fg:w="15"/><text x="68.8304%" y="575.50"></text></g><g><title>_int_free (13 samples, 0.01%)</title><rect x="68.5824%" y="549" width="0.0131%" height="15" fill="rgb(224,109,18)" fg:x="68186" fg:w="13"/><text x="68.8324%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (30 samples, 0.03%)</title><rect x="68.5764%" y="613" width="0.0302%" height="15" fill="rgb(210,68,50)" fg:x="68180" fg:w="30"/><text x="68.8264%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (28 samples, 0.03%)</title><rect x="68.5784%" y="597" width="0.0282%" height="15" fill="rgb(212,184,34)" fg:x="68182" fg:w="28"/><text x="68.8284%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (23 samples, 0.02%)</title><rect x="68.6669%" y="549" width="0.0231%" height="15" fill="rgb(238,105,48)" fg:x="68270" fg:w="23"/><text x="68.9169%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (13 samples, 0.01%)</title><rect x="68.6770%" y="533" width="0.0131%" height="15" fill="rgb(222,134,54)" fg:x="68280" fg:w="13"/><text x="68.9270%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (22 samples, 0.02%)</title><rect x="68.6981%" y="549" width="0.0221%" height="15" fill="rgb(246,24,43)" fg:x="68301" fg:w="22"/><text x="68.9481%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (10 samples, 0.01%)</title><rect x="68.7101%" y="533" width="0.0101%" height="15" fill="rgb(227,169,22)" fg:x="68313" fg:w="10"/><text x="68.9601%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::forget_node_type (10 samples, 0.01%)</title><rect x="68.7202%" y="549" width="0.0101%" height="15" fill="rgb(253,152,4)" fg:x="68323" fg:w="10"/><text x="68.9702%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (20 samples, 0.02%)</title><rect x="68.7846%" y="501" width="0.0201%" height="15" fill="rgb(219,158,36)" fg:x="68387" fg:w="20"/><text x="69.0346%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="68.7926%" y="485" width="0.0121%" height="15" fill="rgb(251,128,40)" fg:x="68395" fg:w="12"/><text x="69.0426%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (76 samples, 0.08%)</title><rect x="68.7303%" y="549" width="0.0764%" height="15" fill="rgb(254,101,39)" fg:x="68333" fg:w="76"/><text x="68.9803%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (59 samples, 0.06%)</title><rect x="68.7474%" y="533" width="0.0593%" height="15" fill="rgb(221,168,40)" fg:x="68350" fg:w="59"/><text x="68.9974%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (45 samples, 0.05%)</title><rect x="68.7614%" y="517" width="0.0453%" height="15" fill="rgb(221,14,27)" fg:x="68364" fg:w="45"/><text x="69.0114%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="68.8198%" y="517" width="0.0141%" height="15" fill="rgb(207,36,43)" fg:x="68422" fg:w="14"/><text x="69.0698%" y="527.50"></text></g><g><title>core::ptr::read (26 samples, 0.03%)</title><rect x="68.8097%" y="549" width="0.0262%" height="15" fill="rgb(240,172,53)" fg:x="68412" fg:w="26"/><text x="69.0597%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="68.8168%" y="533" width="0.0191%" height="15" fill="rgb(241,138,43)" fg:x="68419" fg:w="19"/><text x="69.0668%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (205 samples, 0.21%)</title><rect x="68.6307%" y="565" width="0.2062%" height="15" fill="rgb(227,78,19)" fg:x="68234" fg:w="205"/><text x="68.8807%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (225 samples, 0.23%)</title><rect x="68.6236%" y="581" width="0.2263%" height="15" fill="rgb(215,127,44)" fg:x="68227" fg:w="225"/><text x="68.8736%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (13 samples, 0.01%)</title><rect x="68.8369%" y="565" width="0.0131%" height="15" fill="rgb(227,13,10)" fg:x="68439" fg:w="13"/><text x="69.0869%" y="575.50"></text></g><g><title>core::ptr::read (10 samples, 0.01%)</title><rect x="68.8500%" y="581" width="0.0101%" height="15" fill="rgb(249,177,6)" fg:x="68452" fg:w="10"/><text x="69.1000%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (255 samples, 0.26%)</title><rect x="68.6065%" y="613" width="0.2565%" height="15" fill="rgb(215,154,26)" fg:x="68210" fg:w="255"/><text x="68.8565%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (251 samples, 0.25%)</title><rect x="68.6106%" y="597" width="0.2525%" height="15" fill="rgb(250,168,20)" fg:x="68214" fg:w="251"/><text x="68.8606%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (291 samples, 0.29%)</title><rect x="68.5723%" y="629" width="0.2927%" height="15" fill="rgb(222,53,38)" fg:x="68176" fg:w="291"/><text x="68.8223%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (320 samples, 0.32%)</title><rect x="68.5442%" y="693" width="0.3219%" height="15" fill="rgb(245,154,5)" fg:x="68148" fg:w="320"/><text x="68.7942%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (320 samples, 0.32%)</title><rect x="68.5442%" y="677" width="0.3219%" height="15" fill="rgb(214,89,50)" fg:x="68148" fg:w="320"/><text x="68.7942%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (296 samples, 0.30%)</title><rect x="68.5683%" y="661" width="0.2977%" height="15" fill="rgb(232,73,14)" fg:x="68172" fg:w="296"/><text x="68.8183%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (296 samples, 0.30%)</title><rect x="68.5683%" y="645" width="0.2977%" height="15" fill="rgb(230,101,20)" fg:x="68172" fg:w="296"/><text x="68.8183%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (14 samples, 0.01%)</title><rect x="68.8962%" y="565" width="0.0141%" height="15" fill="rgb(208,56,28)" fg:x="68498" fg:w="14"/><text x="69.1462%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (27 samples, 0.03%)</title><rect x="68.8872%" y="597" width="0.0272%" height="15" fill="rgb(247,205,22)" fg:x="68489" fg:w="27"/><text x="69.1372%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (26 samples, 0.03%)</title><rect x="68.8882%" y="581" width="0.0262%" height="15" fill="rgb(252,109,51)" fg:x="68490" fg:w="26"/><text x="69.1382%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (11 samples, 0.01%)</title><rect x="68.9405%" y="533" width="0.0111%" height="15" fill="rgb(220,40,24)" fg:x="68542" fg:w="11"/><text x="69.1905%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (21 samples, 0.02%)</title><rect x="68.9606%" y="533" width="0.0211%" height="15" fill="rgb(251,108,7)" fg:x="68562" fg:w="21"/><text x="69.2106%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="68.9686%" y="517" width="0.0131%" height="15" fill="rgb(238,102,51)" fg:x="68570" fg:w="13"/><text x="69.2186%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="68.9707%" y="501" width="0.0111%" height="15" fill="rgb(219,149,34)" fg:x="68572" fg:w="11"/><text x="69.2207%" y="511.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="68.9817%" y="533" width="0.0171%" height="15" fill="rgb(239,70,0)" fg:x="68583" fg:w="17"/><text x="69.2317%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (75 samples, 0.08%)</title><rect x="68.9254%" y="549" width="0.0754%" height="15" fill="rgb(246,214,23)" fg:x="68527" fg:w="75"/><text x="69.1754%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (79 samples, 0.08%)</title><rect x="68.9234%" y="565" width="0.0795%" height="15" fill="rgb(239,221,51)" fg:x="68525" fg:w="79"/><text x="69.1734%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (95 samples, 0.10%)</title><rect x="68.9143%" y="597" width="0.0956%" height="15" fill="rgb(254,62,14)" fg:x="68516" fg:w="95"/><text x="69.1643%" y="607.50"></text></g><g><title>alloc::collections::btree::mem::replace (95 samples, 0.10%)</title><rect x="68.9143%" y="581" width="0.0956%" height="15" fill="rgb(253,57,33)" fg:x="68516" fg:w="95"/><text x="69.1643%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (131 samples, 0.13%)</title><rect x="68.8801%" y="613" width="0.1318%" height="15" fill="rgb(229,34,6)" fg:x="68482" fg:w="131"/><text x="69.1301%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="69.0119%" y="517" width="0.0111%" height="15" fill="rgb(235,191,23)" fg:x="68613" fg:w="11"/><text x="69.2619%" y="527.50"></text></g><g><title>core::mem::take (11 samples, 0.01%)</title><rect x="69.0119%" y="501" width="0.0111%" height="15" fill="rgb(217,207,27)" fg:x="68613" fg:w="11"/><text x="69.2619%" y="511.50"></text></g><g><title>core::mem::replace (10 samples, 0.01%)</title><rect x="69.0129%" y="485" width="0.0101%" height="15" fill="rgb(232,41,44)" fg:x="68614" fg:w="10"/><text x="69.2629%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (10 samples, 0.01%)</title><rect x="69.0270%" y="437" width="0.0101%" height="15" fill="rgb(221,188,19)" fg:x="68628" fg:w="10"/><text x="69.2770%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (10 samples, 0.01%)</title><rect x="69.0270%" y="421" width="0.0101%" height="15" fill="rgb(245,180,45)" fg:x="68628" fg:w="10"/><text x="69.2770%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (11 samples, 0.01%)</title><rect x="69.0270%" y="469" width="0.0111%" height="15" fill="rgb(250,220,42)" fg:x="68628" fg:w="11"/><text x="69.2770%" y="479.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.01%)</title><rect x="69.0270%" y="453" width="0.0111%" height="15" fill="rgb(234,16,34)" fg:x="68628" fg:w="11"/><text x="69.2770%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (27 samples, 0.03%)</title><rect x="69.0119%" y="565" width="0.0272%" height="15" fill="rgb(233,217,23)" fg:x="68613" fg:w="27"/><text x="69.2619%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (27 samples, 0.03%)</title><rect x="69.0119%" y="549" width="0.0272%" height="15" fill="rgb(209,22,46)" fg:x="68613" fg:w="27"/><text x="69.2619%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="69.0119%" y="533" width="0.0272%" height="15" fill="rgb(213,101,18)" fg:x="68613" fg:w="27"/><text x="69.2619%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,()&gt;&gt; (16 samples, 0.02%)</title><rect x="69.0230%" y="517" width="0.0161%" height="15" fill="rgb(215,179,52)" fg:x="68624" fg:w="16"/><text x="69.2730%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="69.0230%" y="501" width="0.0161%" height="15" fill="rgb(223,50,25)" fg:x="68624" fg:w="16"/><text x="69.2730%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (16 samples, 0.02%)</title><rect x="69.0230%" y="485" width="0.0161%" height="15" fill="rgb(224,51,44)" fg:x="68624" fg:w="16"/><text x="69.2730%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.01%)</title><rect x="69.0401%" y="517" width="0.0101%" height="15" fill="rgb(224,13,54)" fg:x="68641" fg:w="10"/><text x="69.2901%" y="527.50"></text></g><g><title>core::mem::take (10 samples, 0.01%)</title><rect x="69.0401%" y="501" width="0.0101%" height="15" fill="rgb(219,58,47)" fg:x="68641" fg:w="10"/><text x="69.2901%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (15 samples, 0.02%)</title><rect x="69.0511%" y="485" width="0.0151%" height="15" fill="rgb(246,124,34)" fg:x="68652" fg:w="15"/><text x="69.3011%" y="495.50"></text></g><g><title>core::mem::drop (64 samples, 0.06%)</title><rect x="69.0119%" y="613" width="0.0644%" height="15" fill="rgb(245,109,25)" fg:x="68613" fg:w="64"/><text x="69.2619%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (64 samples, 0.06%)</title><rect x="69.0119%" y="597" width="0.0644%" height="15" fill="rgb(235,48,23)" fg:x="68613" fg:w="64"/><text x="69.2619%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (64 samples, 0.06%)</title><rect x="69.0119%" y="581" width="0.0644%" height="15" fill="rgb(229,203,36)" fg:x="68613" fg:w="64"/><text x="69.2619%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (37 samples, 0.04%)</title><rect x="69.0390%" y="565" width="0.0372%" height="15" fill="rgb(234,180,9)" fg:x="68640" fg:w="37"/><text x="69.2890%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (37 samples, 0.04%)</title><rect x="69.0390%" y="549" width="0.0372%" height="15" fill="rgb(228,98,45)" fg:x="68640" fg:w="37"/><text x="69.2890%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="69.0390%" y="533" width="0.0372%" height="15" fill="rgb(240,24,36)" fg:x="68640" fg:w="37"/><text x="69.2890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="69.0501%" y="517" width="0.0262%" height="15" fill="rgb(227,154,19)" fg:x="68651" fg:w="26"/><text x="69.3001%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="69.0501%" y="501" width="0.0262%" height="15" fill="rgb(231,2,48)" fg:x="68651" fg:w="26"/><text x="69.3001%" y="511.50"></text></g><g><title>core::mem::drop (10 samples, 0.01%)</title><rect x="69.0662%" y="485" width="0.0101%" height="15" fill="rgb(219,216,0)" fg:x="68667" fg:w="10"/><text x="69.3162%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;)&gt; (10 samples, 0.01%)</title><rect x="69.0662%" y="469" width="0.0101%" height="15" fill="rgb(251,88,0)" fg:x="68667" fg:w="10"/><text x="69.3162%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="69.0662%" y="453" width="0.0101%" height="15" fill="rgb(242,45,45)" fg:x="68667" fg:w="10"/><text x="69.3162%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (10 samples, 0.01%)</title><rect x="69.0662%" y="437" width="0.0101%" height="15" fill="rgb(218,149,45)" fg:x="68667" fg:w="10"/><text x="69.3162%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="69.0662%" y="421" width="0.0101%" height="15" fill="rgb(247,194,10)" fg:x="68667" fg:w="10"/><text x="69.3162%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (531 samples, 0.53%)</title><rect x="68.5432%" y="709" width="0.5341%" height="15" fill="rgb(234,33,37)" fg:x="68147" fg:w="531"/><text x="68.7932%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (210 samples, 0.21%)</title><rect x="68.8660%" y="693" width="0.2112%" height="15" fill="rgb(218,61,13)" fg:x="68468" fg:w="210"/><text x="69.1160%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (210 samples, 0.21%)</title><rect x="68.8660%" y="677" width="0.2112%" height="15" fill="rgb(210,80,52)" fg:x="68468" fg:w="210"/><text x="69.1160%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.21%)</title><rect x="68.8660%" y="661" width="0.2112%" height="15" fill="rgb(218,203,27)" fg:x="68468" fg:w="210"/><text x="69.1160%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (203 samples, 0.20%)</title><rect x="68.8731%" y="645" width="0.2042%" height="15" fill="rgb(209,126,33)" fg:x="68475" fg:w="203"/><text x="69.1231%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (203 samples, 0.20%)</title><rect x="68.8731%" y="629" width="0.2042%" height="15" fill="rgb(234,173,41)" fg:x="68475" fg:w="203"/><text x="69.1231%" y="639.50"></text></g><g><title>bytecode_verifier::reference_safety::verify (1,327 samples, 1.33%)</title><rect x="67.7556%" y="725" width="1.3347%" height="15" fill="rgb(228,166,9)" fg:x="67364" fg:w="1327"/><text x="68.0056%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;u16,bytecode_verifier::absint::BlockInvariant&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="69.0773%" y="709" width="0.0131%" height="15" fill="rgb(208,124,43)" fg:x="68678" fg:w="13"/><text x="69.3273%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;u16,bytecode_verifier::absint::BlockInvariant&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="69.0773%" y="693" width="0.0131%" height="15" fill="rgb(212,154,38)" fg:x="68678" fg:w="13"/><text x="69.3273%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(u16,bytecode_verifier::absint::BlockInvariant&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState,move_binary_format::errors::PartialVMError&gt;)&gt;&gt; (13 samples, 0.01%)</title><rect x="69.0773%" y="677" width="0.0131%" height="15" fill="rgb(246,179,35)" fg:x="68678" fg:w="13"/><text x="69.3273%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="69.0773%" y="661" width="0.0131%" height="15" fill="rgb(251,3,50)" fg:x="68678" fg:w="13"/><text x="69.3273%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="69.1004%" y="709" width="0.0101%" height="15" fill="rgb(219,96,8)" fg:x="68701" fg:w="10"/><text x="69.3504%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (20 samples, 0.02%)</title><rect x="69.1165%" y="693" width="0.0201%" height="15" fill="rgb(251,216,33)" fg:x="68717" fg:w="20"/><text x="69.3665%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (20 samples, 0.02%)</title><rect x="69.1165%" y="677" width="0.0201%" height="15" fill="rgb(243,145,29)" fg:x="68717" fg:w="20"/><text x="69.3665%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (15 samples, 0.02%)</title><rect x="69.1215%" y="661" width="0.0151%" height="15" fill="rgb(210,75,20)" fg:x="68722" fg:w="15"/><text x="69.3715%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (15 samples, 0.02%)</title><rect x="69.1215%" y="645" width="0.0151%" height="15" fill="rgb(235,56,8)" fg:x="68722" fg:w="15"/><text x="69.3715%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (24 samples, 0.02%)</title><rect x="69.1648%" y="501" width="0.0241%" height="15" fill="rgb(226,175,49)" fg:x="68765" fg:w="24"/><text x="69.4148%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="69.1567%" y="565" width="0.0342%" height="15" fill="rgb(242,204,23)" fg:x="68757" fg:w="34"/><text x="69.4067%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="69.1587%" y="549" width="0.0322%" height="15" fill="rgb(225,104,24)" fg:x="68759" fg:w="32"/><text x="69.4087%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="69.1587%" y="533" width="0.0322%" height="15" fill="rgb(253,34,1)" fg:x="68759" fg:w="32"/><text x="69.4087%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (32 samples, 0.03%)</title><rect x="69.1587%" y="517" width="0.0322%" height="15" fill="rgb(233,199,23)" fg:x="68759" fg:w="32"/><text x="69.4087%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="69.1567%" y="581" width="0.0362%" height="15" fill="rgb(247,7,51)" fg:x="68757" fg:w="36"/><text x="69.4067%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="69.1567%" y="597" width="0.0422%" height="15" fill="rgb(214,146,12)" fg:x="68757" fg:w="42"/><text x="69.4067%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (52 samples, 0.05%)</title><rect x="69.1497%" y="613" width="0.0523%" height="15" fill="rgb(234,181,43)" fg:x="68750" fg:w="52"/><text x="69.3997%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (55 samples, 0.06%)</title><rect x="69.1477%" y="629" width="0.0553%" height="15" fill="rgb(239,148,6)" fg:x="68748" fg:w="55"/><text x="69.3977%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (23 samples, 0.02%)</title><rect x="69.2060%" y="533" width="0.0231%" height="15" fill="rgb(206,151,17)" fg:x="68806" fg:w="23"/><text x="69.4560%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="69.2060%" y="565" width="0.0241%" height="15" fill="rgb(213,215,10)" fg:x="68806" fg:w="24"/><text x="69.4560%" y="575.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.02%)</title><rect x="69.2060%" y="549" width="0.0241%" height="15" fill="rgb(215,220,44)" fg:x="68806" fg:w="24"/><text x="69.4560%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="69.2040%" y="597" width="0.0272%" height="15" fill="rgb(245,205,37)" fg:x="68804" fg:w="27"/><text x="69.4540%" y="607.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (27 samples, 0.03%)</title><rect x="69.2040%" y="581" width="0.0272%" height="15" fill="rgb(245,130,43)" fg:x="68804" fg:w="27"/><text x="69.4540%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="69.2040%" y="613" width="0.0282%" height="15" fill="rgb(231,227,38)" fg:x="68804" fg:w="28"/><text x="69.4540%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="69.2030%" y="629" width="0.0322%" height="15" fill="rgb(233,185,4)" fg:x="68803" fg:w="32"/><text x="69.4530%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="69.2432%" y="565" width="0.0131%" height="15" fill="rgb(224,154,43)" fg:x="68843" fg:w="13"/><text x="69.4932%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="69.2432%" y="549" width="0.0131%" height="15" fill="rgb(235,156,15)" fg:x="68843" fg:w="13"/><text x="69.4932%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (21 samples, 0.02%)</title><rect x="69.2563%" y="565" width="0.0211%" height="15" fill="rgb(211,55,43)" fg:x="68856" fg:w="21"/><text x="69.5063%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::repeat (10 samples, 0.01%)</title><rect x="69.2674%" y="549" width="0.0101%" height="15" fill="rgb(247,149,40)" fg:x="68867" fg:w="10"/><text x="69.5174%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (136 samples, 0.14%)</title><rect x="69.1437%" y="645" width="0.1368%" height="15" fill="rgb(232,171,16)" fg:x="68744" fg:w="136"/><text x="69.3937%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (42 samples, 0.04%)</title><rect x="69.2382%" y="629" width="0.0422%" height="15" fill="rgb(215,117,49)" fg:x="68838" fg:w="42"/><text x="69.4882%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="69.2382%" y="613" width="0.0422%" height="15" fill="rgb(246,194,11)" fg:x="68838" fg:w="42"/><text x="69.4882%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="69.2382%" y="597" width="0.0422%" height="15" fill="rgb(242,101,44)" fg:x="68838" fg:w="42"/><text x="69.4882%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 0.04%)</title><rect x="69.2392%" y="581" width="0.0412%" height="15" fill="rgb(226,174,6)" fg:x="68839" fg:w="41"/><text x="69.4892%" y="591.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::blocks (166 samples, 0.17%)</title><rect x="69.1145%" y="709" width="0.1670%" height="15" fill="rgb(213,150,20)" fg:x="68715" fg:w="166"/><text x="69.3645%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (140 samples, 0.14%)</title><rect x="69.1406%" y="693" width="0.1408%" height="15" fill="rgb(222,124,42)" fg:x="68741" fg:w="140"/><text x="69.3906%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (139 samples, 0.14%)</title><rect x="69.1416%" y="677" width="0.1398%" height="15" fill="rgb(250,19,47)" fg:x="68742" fg:w="139"/><text x="69.3916%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (137 samples, 0.14%)</title><rect x="69.1437%" y="661" width="0.1378%" height="15" fill="rgb(241,217,19)" fg:x="68744" fg:w="137"/><text x="69.3937%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="69.3167%" y="661" width="0.0131%" height="15" fill="rgb(207,210,34)" fg:x="68916" fg:w="13"/><text x="69.5667%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="69.3136%" y="677" width="0.0231%" height="15" fill="rgb(244,45,4)" fg:x="68913" fg:w="23"/><text x="69.5636%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (39 samples, 0.04%)</title><rect x="69.3076%" y="693" width="0.0392%" height="15" fill="rgb(252,134,50)" fg:x="68907" fg:w="39"/><text x="69.5576%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="69.3368%" y="677" width="0.0101%" height="15" fill="rgb(238,74,2)" fg:x="68936" fg:w="10"/><text x="69.5868%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="69.3468%" y="693" width="0.0101%" height="15" fill="rgb(226,58,46)" fg:x="68946" fg:w="10"/><text x="69.5968%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="69.3639%" y="645" width="0.0101%" height="15" fill="rgb(232,83,35)" fg:x="68963" fg:w="10"/><text x="69.6139%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="69.3961%" y="597" width="0.0231%" height="15" fill="rgb(212,148,47)" fg:x="68995" fg:w="23"/><text x="69.6461%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="69.4052%" y="581" width="0.0141%" height="15" fill="rgb(235,29,1)" fg:x="69004" fg:w="14"/><text x="69.6552%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (20 samples, 0.02%)</title><rect x="69.4192%" y="597" width="0.0201%" height="15" fill="rgb(247,55,37)" fg:x="69018" fg:w="20"/><text x="69.6692%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="69.4253%" y="581" width="0.0141%" height="15" fill="rgb(222,48,3)" fg:x="69024" fg:w="14"/><text x="69.6753%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="69.4273%" y="565" width="0.0121%" height="15" fill="rgb(234,21,33)" fg:x="69026" fg:w="12"/><text x="69.6773%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="69.4293%" y="549" width="0.0101%" height="15" fill="rgb(247,178,53)" fg:x="69028" fg:w="10"/><text x="69.6793%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (81 samples, 0.08%)</title><rect x="69.3619%" y="661" width="0.0815%" height="15" fill="rgb(225,75,7)" fg:x="68961" fg:w="81"/><text x="69.6119%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (68 samples, 0.07%)</title><rect x="69.3750%" y="645" width="0.0684%" height="15" fill="rgb(219,199,7)" fg:x="68974" fg:w="68"/><text x="69.6250%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (60 samples, 0.06%)</title><rect x="69.3830%" y="629" width="0.0603%" height="15" fill="rgb(209,93,42)" fg:x="68982" fg:w="60"/><text x="69.6330%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (56 samples, 0.06%)</title><rect x="69.3871%" y="613" width="0.0563%" height="15" fill="rgb(240,175,17)" fg:x="68986" fg:w="56"/><text x="69.6371%" y="623.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (88 samples, 0.09%)</title><rect x="69.3569%" y="693" width="0.0885%" height="15" fill="rgb(232,106,7)" fg:x="68956" fg:w="88"/><text x="69.6069%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (86 samples, 0.09%)</title><rect x="69.3589%" y="677" width="0.0865%" height="15" fill="rgb(242,106,43)" fg:x="68958" fg:w="86"/><text x="69.6089%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="69.4524%" y="645" width="0.0111%" height="15" fill="rgb(242,61,37)" fg:x="69051" fg:w="11"/><text x="69.7024%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="69.4826%" y="597" width="0.0493%" height="15" fill="rgb(205,72,10)" fg:x="69081" fg:w="49"/><text x="69.7326%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="69.4987%" y="581" width="0.0332%" height="15" fill="rgb(214,184,36)" fg:x="69097" fg:w="33"/><text x="69.7487%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (20 samples, 0.02%)</title><rect x="69.5339%" y="597" width="0.0201%" height="15" fill="rgb(206,107,18)" fg:x="69132" fg:w="20"/><text x="69.7839%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="69.5399%" y="581" width="0.0141%" height="15" fill="rgb(210,75,5)" fg:x="69138" fg:w="14"/><text x="69.7899%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="69.5430%" y="565" width="0.0111%" height="15" fill="rgb(205,3,19)" fg:x="69141" fg:w="11"/><text x="69.7930%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (106 samples, 0.11%)</title><rect x="69.4635%" y="645" width="0.1066%" height="15" fill="rgb(207,181,42)" fg:x="69062" fg:w="106"/><text x="69.7135%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (99 samples, 0.10%)</title><rect x="69.4705%" y="629" width="0.0996%" height="15" fill="rgb(229,179,43)" fg:x="69069" fg:w="99"/><text x="69.7205%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (99 samples, 0.10%)</title><rect x="69.4705%" y="613" width="0.0996%" height="15" fill="rgb(246,95,30)" fg:x="69069" fg:w="99"/><text x="69.7205%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="69.5591%" y="597" width="0.0111%" height="15" fill="rgb(234,144,45)" fg:x="69157" fg:w="11"/><text x="69.8091%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="69.5601%" y="581" width="0.0101%" height="15" fill="rgb(250,54,25)" fg:x="69158" fg:w="10"/><text x="69.8101%" y="591.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (126 samples, 0.13%)</title><rect x="69.4454%" y="693" width="0.1267%" height="15" fill="rgb(215,195,40)" fg:x="69044" fg:w="126"/><text x="69.6954%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (125 samples, 0.13%)</title><rect x="69.4464%" y="677" width="0.1257%" height="15" fill="rgb(233,188,42)" fg:x="69045" fg:w="125"/><text x="69.6964%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (124 samples, 0.12%)</title><rect x="69.4474%" y="661" width="0.1247%" height="15" fill="rgb(247,227,35)" fg:x="69046" fg:w="124"/><text x="69.6974%" y="671.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="69.6013%" y="677" width="0.0171%" height="15" fill="rgb(249,124,27)" fg:x="69199" fg:w="17"/><text x="69.8513%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (63 samples, 0.06%)</title><rect x="69.5721%" y="693" width="0.0634%" height="15" fill="rgb(219,207,25)" fg:x="69170" fg:w="63"/><text x="69.8221%" y="703.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (17 samples, 0.02%)</title><rect x="69.6184%" y="677" width="0.0171%" height="15" fill="rgb(241,216,47)" fg:x="69216" fg:w="17"/><text x="69.8684%" y="687.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify_block (353 samples, 0.36%)</title><rect x="69.2814%" y="709" width="0.3551%" height="15" fill="rgb(233,82,50)" fg:x="68881" fg:w="353"/><text x="69.5314%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u16&gt;&gt; (21 samples, 0.02%)</title><rect x="69.6365%" y="709" width="0.0211%" height="15" fill="rgb(232,63,2)" fg:x="69234" fg:w="21"/><text x="69.8865%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="69.6365%" y="693" width="0.0211%" height="15" fill="rgb(236,184,28)" fg:x="69234" fg:w="21"/><text x="69.8865%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u16,alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="69.6456%" y="677" width="0.0121%" height="15" fill="rgb(254,63,27)" fg:x="69243" fg:w="12"/><text x="69.8956%" y="687.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="69.6456%" y="661" width="0.0121%" height="15" fill="rgb(253,106,28)" fg:x="69243" fg:w="12"/><text x="69.8956%" y="671.50"></text></g><g><title>bytecode_verifier::stack_usage_verifier::StackUsageVerifier::verify (565 samples, 0.57%)</title><rect x="69.0903%" y="725" width="0.5683%" height="15" fill="rgb(225,141,39)" fg:x="68691" fg:w="565"/><text x="69.3403%" y="735.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="69.7200%" y="677" width="0.0201%" height="15" fill="rgb(222,157,20)" fg:x="69317" fg:w="20"/><text x="69.9700%" y="687.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="69.7270%" y="661" width="0.0131%" height="15" fill="rgb(210,190,9)" fg:x="69324" fg:w="13"/><text x="69.9770%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.07%)</title><rect x="69.6838%" y="709" width="0.0664%" height="15" fill="rgb(242,167,7)" fg:x="69281" fg:w="66"/><text x="69.9338%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (58 samples, 0.06%)</title><rect x="69.6918%" y="693" width="0.0583%" height="15" fill="rgb(227,82,41)" fg:x="69289" fg:w="58"/><text x="69.9418%" y="703.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (10 samples, 0.01%)</title><rect x="69.7401%" y="677" width="0.0101%" height="15" fill="rgb(222,131,13)" fg:x="69337" fg:w="10"/><text x="69.9901%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.02%)</title><rect x="69.7763%" y="677" width="0.0161%" height="15" fill="rgb(221,98,26)" fg:x="69373" fg:w="16"/><text x="70.0263%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.01%)</title><rect x="69.7813%" y="661" width="0.0111%" height="15" fill="rgb(251,63,52)" fg:x="69378" fg:w="11"/><text x="70.0313%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.03%)</title><rect x="69.7723%" y="693" width="0.0312%" height="15" fill="rgb(246,25,43)" fg:x="69369" fg:w="31"/><text x="70.0223%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (11 samples, 0.01%)</title><rect x="69.7924%" y="677" width="0.0111%" height="15" fill="rgb(247,167,15)" fg:x="69389" fg:w="11"/><text x="70.0424%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (52 samples, 0.05%)</title><rect x="69.7592%" y="709" width="0.0523%" height="15" fill="rgb(240,104,42)" fg:x="69356" fg:w="52"/><text x="70.0092%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="69.8196%" y="693" width="0.0121%" height="15" fill="rgb(224,54,6)" fg:x="69416" fg:w="12"/><text x="70.0696%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.02%)</title><rect x="69.8186%" y="709" width="0.0151%" height="15" fill="rgb(244,108,35)" fg:x="69415" fg:w="15"/><text x="70.0686%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (10 samples, 0.01%)</title><rect x="69.8336%" y="693" width="0.0101%" height="15" fill="rgb(216,154,2)" fg:x="69430" fg:w="10"/><text x="70.0836%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::_{{closure}} (24 samples, 0.02%)</title><rect x="69.8558%" y="501" width="0.0241%" height="15" fill="rgb(222,8,47)" fg:x="69452" fg:w="24"/><text x="70.1058%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="69.8517%" y="565" width="0.0322%" height="15" fill="rgb(252,93,1)" fg:x="69448" fg:w="32"/><text x="70.1017%" y="575.50"></text></g><g><title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="69.8517%" y="549" width="0.0322%" height="15" fill="rgb(223,226,51)" fg:x="69448" fg:w="32"/><text x="70.1017%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (32 samples, 0.03%)</title><rect x="69.8517%" y="533" width="0.0322%" height="15" fill="rgb(206,147,9)" fg:x="69448" fg:w="32"/><text x="70.1017%" y="543.50"></text></g><g><title>alloc::collections::btree::mem::replace (32 samples, 0.03%)</title><rect x="69.8517%" y="517" width="0.0322%" height="15" fill="rgb(248,180,41)" fg:x="69448" fg:w="32"/><text x="70.1017%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="69.8517%" y="581" width="0.0342%" height="15" fill="rgb(209,47,50)" fg:x="69448" fg:w="34"/><text x="70.1017%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (42 samples, 0.04%)</title><rect x="69.8457%" y="629" width="0.0422%" height="15" fill="rgb(243,65,31)" fg:x="69442" fg:w="42"/><text x="70.0957%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (41 samples, 0.04%)</title><rect x="69.8467%" y="613" width="0.0412%" height="15" fill="rgb(228,128,1)" fg:x="69443" fg:w="41"/><text x="70.0967%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="69.8507%" y="597" width="0.0372%" height="15" fill="rgb(231,192,16)" fg:x="69447" fg:w="37"/><text x="70.1007%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="69.9091%" y="565" width="0.0111%" height="15" fill="rgb(224,26,40)" fg:x="69505" fg:w="11"/><text x="70.1591%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (75 samples, 0.08%)</title><rect x="69.8457%" y="677" width="0.0754%" height="15" fill="rgb(214,192,17)" fg:x="69442" fg:w="75"/><text x="70.0957%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 0.08%)</title><rect x="69.8457%" y="661" width="0.0754%" height="15" fill="rgb(225,147,18)" fg:x="69442" fg:w="75"/><text x="70.0957%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (75 samples, 0.08%)</title><rect x="69.8457%" y="645" width="0.0754%" height="15" fill="rgb(205,35,11)" fg:x="69442" fg:w="75"/><text x="70.0957%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.02%)</title><rect x="69.8980%" y="629" width="0.0231%" height="15" fill="rgb(242,40,42)" fg:x="69494" fg:w="23"/><text x="70.1480%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="69.8990%" y="613" width="0.0221%" height="15" fill="rgb(250,170,13)" fg:x="69495" fg:w="22"/><text x="70.1490%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="69.8990%" y="597" width="0.0221%" height="15" fill="rgb(240,161,28)" fg:x="69495" fg:w="22"/><text x="70.1490%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="69.8990%" y="581" width="0.0221%" height="15" fill="rgb(245,179,12)" fg:x="69495" fg:w="22"/><text x="70.1490%" y="591.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::blocks (89 samples, 0.09%)</title><rect x="69.8336%" y="709" width="0.0895%" height="15" fill="rgb(250,92,32)" fg:x="69430" fg:w="89"/><text x="70.0836%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (79 samples, 0.08%)</title><rect x="69.8437%" y="693" width="0.0795%" height="15" fill="rgb(233,10,40)" fg:x="69440" fg:w="79"/><text x="70.0937%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="69.9574%" y="597" width="0.0282%" height="15" fill="rgb(217,98,1)" fg:x="69553" fg:w="28"/><text x="70.2074%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="69.9684%" y="581" width="0.0171%" height="15" fill="rgb(238,202,7)" fg:x="69564" fg:w="17"/><text x="70.2184%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.01%)</title><rect x="69.9865%" y="597" width="0.0131%" height="15" fill="rgb(222,91,3)" fg:x="69582" fg:w="13"/><text x="70.2365%" y="607.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_end (79 samples, 0.08%)</title><rect x="69.9262%" y="693" width="0.0795%" height="15" fill="rgb(211,170,49)" fg:x="69522" fg:w="79"/><text x="70.1762%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (79 samples, 0.08%)</title><rect x="69.9262%" y="677" width="0.0795%" height="15" fill="rgb(253,139,18)" fg:x="69522" fg:w="79"/><text x="70.1762%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (79 samples, 0.08%)</title><rect x="69.9262%" y="661" width="0.0795%" height="15" fill="rgb(222,4,43)" fg:x="69522" fg:w="79"/><text x="70.1762%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (67 samples, 0.07%)</title><rect x="69.9382%" y="645" width="0.0674%" height="15" fill="rgb(207,205,12)" fg:x="69534" fg:w="67"/><text x="70.1882%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (59 samples, 0.06%)</title><rect x="69.9463%" y="629" width="0.0593%" height="15" fill="rgb(216,159,46)" fg:x="69542" fg:w="59"/><text x="70.1963%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (56 samples, 0.06%)</title><rect x="69.9493%" y="613" width="0.0563%" height="15" fill="rgb(236,115,1)" fg:x="69545" fg:w="56"/><text x="70.1993%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (10 samples, 0.01%)</title><rect x="70.0157%" y="645" width="0.0101%" height="15" fill="rgb(251,35,33)" fg:x="69611" fg:w="10"/><text x="70.2657%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="70.0539%" y="597" width="0.0272%" height="15" fill="rgb(248,62,51)" fg:x="69649" fg:w="27"/><text x="70.3039%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="70.0620%" y="581" width="0.0191%" height="15" fill="rgb(254,180,19)" fg:x="69657" fg:w="19"/><text x="70.3120%" y="591.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.02%)</title><rect x="70.0851%" y="597" width="0.0161%" height="15" fill="rgb(217,100,32)" fg:x="69680" fg:w="16"/><text x="70.3351%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="70.0881%" y="581" width="0.0131%" height="15" fill="rgb(224,71,22)" fg:x="69683" fg:w="13"/><text x="70.3381%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="70.0901%" y="565" width="0.0111%" height="15" fill="rgb(251,185,33)" fg:x="69685" fg:w="11"/><text x="70.3401%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (85 samples, 0.09%)</title><rect x="70.0268%" y="645" width="0.0855%" height="15" fill="rgb(209,75,48)" fg:x="69622" fg:w="85"/><text x="70.2768%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (78 samples, 0.08%)</title><rect x="70.0338%" y="629" width="0.0785%" height="15" fill="rgb(253,190,16)" fg:x="69629" fg:w="78"/><text x="70.2838%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (72 samples, 0.07%)</title><rect x="70.0398%" y="613" width="0.0724%" height="15" fill="rgb(226,140,1)" fg:x="69635" fg:w="72"/><text x="70.2898%" y="623.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::block_start (107 samples, 0.11%)</title><rect x="70.0056%" y="693" width="0.1076%" height="15" fill="rgb(206,75,30)" fg:x="69601" fg:w="107"/><text x="70.2556%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (105 samples, 0.11%)</title><rect x="70.0076%" y="677" width="0.1056%" height="15" fill="rgb(231,208,37)" fg:x="69603" fg:w="105"/><text x="70.2576%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (104 samples, 0.10%)</title><rect x="70.0086%" y="661" width="0.1046%" height="15" fill="rgb(238,136,40)" fg:x="69604" fg:w="104"/><text x="70.2586%" y="671.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="70.1213%" y="629" width="0.0111%" height="15" fill="rgb(247,137,17)" fg:x="69716" fg:w="11"/><text x="70.3713%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.03%)</title><rect x="70.1183%" y="661" width="0.0251%" height="15" fill="rgb(240,60,40)" fg:x="69713" fg:w="25"/><text x="70.3683%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="70.1193%" y="645" width="0.0241%" height="15" fill="rgb(236,68,50)" fg:x="69714" fg:w="24"/><text x="70.3693%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.04%)</title><rect x="70.1133%" y="693" width="0.0372%" height="15" fill="rgb(230,42,12)" fg:x="69708" fg:w="37"/><text x="70.3633%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (35 samples, 0.04%)</title><rect x="70.1153%" y="677" width="0.0352%" height="15" fill="rgb(219,16,16)" fg:x="69710" fg:w="35"/><text x="70.3653%" y="687.50"></text></g><g><title>&lt;move_binary_format::control_flow_graph::VMControlFlowGraph as move_binary_format::control_flow_graph::ControlFlowGraph&gt;::instr_indexes (228 samples, 0.23%)</title><rect x="69.9232%" y="709" width="0.2293%" height="15" fill="rgb(220,38,35)" fg:x="69519" fg:w="228"/><text x="70.1732%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="70.1736%" y="677" width="0.0121%" height="15" fill="rgb(228,33,1)" fg:x="69768" fg:w="12"/><text x="70.4236%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="70.1756%" y="661" width="0.0101%" height="15" fill="rgb(241,46,31)" fg:x="69770" fg:w="10"/><text x="70.4256%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (34 samples, 0.03%)</title><rect x="70.1575%" y="709" width="0.0342%" height="15" fill="rgb(232,58,20)" fg:x="69752" fg:w="34"/><text x="70.4075%" y="719.50"></text></g><g><title>alloc::alloc::box_free (30 samples, 0.03%)</title><rect x="70.1615%" y="693" width="0.0302%" height="15" fill="rgb(206,228,53)" fg:x="69756" fg:w="30"/><text x="70.4115%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u16&gt;&gt; (16 samples, 0.02%)</title><rect x="70.1917%" y="709" width="0.0161%" height="15" fill="rgb(206,88,33)" fg:x="69786" fg:w="16"/><text x="70.4417%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="70.1917%" y="693" width="0.0161%" height="15" fill="rgb(238,69,7)" fg:x="69786" fg:w="16"/><text x="70.4417%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u16,alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="70.1957%" y="677" width="0.0121%" height="15" fill="rgb(250,21,46)" fg:x="69790" fg:w="12"/><text x="70.4457%" y="687.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="70.1957%" y="661" width="0.0121%" height="15" fill="rgb(215,212,21)" fg:x="69790" fg:w="12"/><text x="70.4457%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (10 samples, 0.01%)</title><rect x="70.1977%" y="645" width="0.0101%" height="15" fill="rgb(211,35,12)" fg:x="69792" fg:w="10"/><text x="70.4477%" y="655.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (4,891 samples, 4.92%)</title><rect x="65.2994%" y="741" width="4.9194%" height="15" fill="rgb(231,184,16)" fg:x="64922" fg:w="4891"/><text x="65.5494%" y="751.50">byteco..</text></g><g><title>bytecode_verifier::type_safety::verify (557 samples, 0.56%)</title><rect x="69.6586%" y="725" width="0.5602%" height="15" fill="rgb(242,140,15)" fg:x="69256" fg:w="557"/><text x="69.9086%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="70.2239%" y="661" width="0.0111%" height="15" fill="rgb(220,37,14)" fg:x="69818" fg:w="11"/><text x="70.4739%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (13 samples, 0.01%)</title><rect x="70.2611%" y="581" width="0.0131%" height="15" fill="rgb(223,146,22)" fg:x="69855" fg:w="13"/><text x="70.5111%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (30 samples, 0.03%)</title><rect x="70.2480%" y="613" width="0.0302%" height="15" fill="rgb(216,132,15)" fg:x="69842" fg:w="30"/><text x="70.4980%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (23 samples, 0.02%)</title><rect x="70.2551%" y="597" width="0.0231%" height="15" fill="rgb(248,83,5)" fg:x="69849" fg:w="23"/><text x="70.5051%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (23 samples, 0.02%)</title><rect x="70.3154%" y="549" width="0.0231%" height="15" fill="rgb(231,206,48)" fg:x="69909" fg:w="23"/><text x="70.5654%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="70.3215%" y="533" width="0.0171%" height="15" fill="rgb(253,185,37)" fg:x="69915" fg:w="17"/><text x="70.5715%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.02%)</title><rect x="70.3215%" y="517" width="0.0171%" height="15" fill="rgb(208,21,44)" fg:x="69915" fg:w="17"/><text x="70.5715%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="70.3406%" y="533" width="0.0101%" height="15" fill="rgb(236,125,4)" fg:x="69934" fg:w="10"/><text x="70.5906%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (62 samples, 0.06%)</title><rect x="70.2893%" y="565" width="0.0624%" height="15" fill="rgb(226,134,25)" fg:x="69883" fg:w="62"/><text x="70.5393%" y="575.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="70.3386%" y="549" width="0.0131%" height="15" fill="rgb(250,201,12)" fg:x="69932" fg:w="13"/><text x="70.5886%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (71 samples, 0.07%)</title><rect x="70.2852%" y="581" width="0.0714%" height="15" fill="rgb(225,92,18)" fg:x="69879" fg:w="71"/><text x="70.5352%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (81 samples, 0.08%)</title><rect x="70.2782%" y="613" width="0.0815%" height="15" fill="rgb(227,35,22)" fg:x="69872" fg:w="81"/><text x="70.5282%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (81 samples, 0.08%)</title><rect x="70.2782%" y="597" width="0.0815%" height="15" fill="rgb(214,180,52)" fg:x="69872" fg:w="81"/><text x="70.5282%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (119 samples, 0.12%)</title><rect x="70.2420%" y="629" width="0.1197%" height="15" fill="rgb(233,55,38)" fg:x="69836" fg:w="119"/><text x="70.4920%" y="639.50"></text></g><g><title>core::mem::drop (15 samples, 0.02%)</title><rect x="70.3617%" y="629" width="0.0151%" height="15" fill="rgb(249,171,43)" fg:x="69955" fg:w="15"/><text x="70.6117%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,move_binary_format::control_flow_graph::BasicBlock)&gt; (15 samples, 0.02%)</title><rect x="70.3617%" y="613" width="0.0151%" height="15" fill="rgb(239,87,2)" fg:x="69955" fg:w="15"/><text x="70.6117%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::control_flow_graph::BasicBlock&gt; (14 samples, 0.01%)</title><rect x="70.3627%" y="597" width="0.0141%" height="15" fill="rgb(248,141,5)" fg:x="69956" fg:w="14"/><text x="70.6127%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (14 samples, 0.01%)</title><rect x="70.3627%" y="581" width="0.0141%" height="15" fill="rgb(238,33,42)" fg:x="69956" fg:w="14"/><text x="70.6127%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u16&gt;&gt; (11 samples, 0.01%)</title><rect x="70.3657%" y="565" width="0.0111%" height="15" fill="rgb(231,57,19)" fg:x="69959" fg:w="11"/><text x="70.6157%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="70.3657%" y="549" width="0.0111%" height="15" fill="rgb(214,78,53)" fg:x="69959" fg:w="11"/><text x="70.6157%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::binary_views::FunctionView&gt; (165 samples, 0.17%)</title><rect x="70.2189%" y="725" width="0.1660%" height="15" fill="rgb(206,132,29)" fg:x="69813" fg:w="165"/><text x="70.4689%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::control_flow_graph::VMControlFlowGraph&gt; (165 samples, 0.17%)</title><rect x="70.2189%" y="709" width="0.1660%" height="15" fill="rgb(248,174,31)" fg:x="69813" fg:w="165"/><text x="70.4689%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,move_binary_format::control_flow_graph::BasicBlock&gt;&gt; (165 samples, 0.17%)</title><rect x="70.2189%" y="693" width="0.1660%" height="15" fill="rgb(221,87,13)" fg:x="69813" fg:w="165"/><text x="70.4689%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.17%)</title><rect x="70.2189%" y="677" width="0.1660%" height="15" fill="rgb(223,197,17)" fg:x="69813" fg:w="165"/><text x="70.4689%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u16,move_binary_format::control_flow_graph::BasicBlock&gt;&gt; (149 samples, 0.15%)</title><rect x="70.2350%" y="661" width="0.1499%" height="15" fill="rgb(220,144,50)" fg:x="69829" fg:w="149"/><text x="70.4850%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.15%)</title><rect x="70.2350%" y="645" width="0.1499%" height="15" fill="rgb(244,201,11)" fg:x="69829" fg:w="149"/><text x="70.4850%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::code_unit_verifier::CodeUnitVerifier&gt; (181 samples, 0.18%)</title><rect x="70.2189%" y="741" width="0.1821%" height="15" fill="rgb(249,81,34)" fg:x="69813" fg:w="181"/><text x="70.4689%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex&gt;&gt; (16 samples, 0.02%)</title><rect x="70.3848%" y="725" width="0.0161%" height="15" fill="rgb(205,161,12)" fg:x="69978" fg:w="16"/><text x="70.6348%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex,std::collections::hash::map::RandomState&gt;&gt; (16 samples, 0.02%)</title><rect x="70.3848%" y="709" width="0.0161%" height="15" fill="rgb(252,139,50)" fg:x="69978" fg:w="16"/><text x="70.6348%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(move_binary_format::file_format::IdentifierIndex,move_binary_format::file_format::FunctionDefinitionIndex)&gt;&gt; (16 samples, 0.02%)</title><rect x="70.3848%" y="693" width="0.0161%" height="15" fill="rgb(205,169,14)" fg:x="69978" fg:w="16"/><text x="70.6348%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="70.3848%" y="677" width="0.0161%" height="15" fill="rgb(248,198,33)" fg:x="69978" fg:w="16"/><text x="70.6348%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (14 samples, 0.01%)</title><rect x="70.3868%" y="661" width="0.0141%" height="15" fill="rgb(236,23,21)" fg:x="69980" fg:w="14"/><text x="70.6368%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="70.4512%" y="693" width="0.0141%" height="15" fill="rgb(231,13,38)" fg:x="70044" fg:w="14"/><text x="70.7012%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="70.4552%" y="677" width="0.0101%" height="15" fill="rgb(239,139,21)" fg:x="70048" fg:w="10"/><text x="70.7052%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.03%)</title><rect x="70.4492%" y="709" width="0.0302%" height="15" fill="rgb(222,164,45)" fg:x="70042" fg:w="30"/><text x="70.6992%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts (14 samples, 0.01%)</title><rect x="70.4653%" y="693" width="0.0141%" height="15" fill="rgb(230,52,27)" fg:x="70058" fg:w="14"/><text x="70.7153%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (52 samples, 0.05%)</title><rect x="70.4381%" y="725" width="0.0523%" height="15" fill="rgb(227,143,42)" fg:x="70031" fg:w="52"/><text x="70.6881%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.01%)</title><rect x="70.4794%" y="709" width="0.0111%" height="15" fill="rgb(249,127,1)" fg:x="70072" fg:w="11"/><text x="70.7294%" y="719.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (92 samples, 0.09%)</title><rect x="70.4059%" y="741" width="0.0925%" height="15" fill="rgb(243,107,26)" fg:x="69999" fg:w="92"/><text x="70.6559%" y="751.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (12 samples, 0.01%)</title><rect x="70.5075%" y="725" width="0.0121%" height="15" fill="rgb(225,7,45)" fg:x="70100" fg:w="12"/><text x="70.7575%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.01%)</title><rect x="70.5085%" y="709" width="0.0111%" height="15" fill="rgb(241,88,38)" fg:x="70101" fg:w="11"/><text x="70.7585%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.01%)</title><rect x="70.5830%" y="533" width="0.0101%" height="15" fill="rgb(226,121,9)" fg:x="70175" fg:w="10"/><text x="70.8330%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (14 samples, 0.01%)</title><rect x="70.5810%" y="549" width="0.0141%" height="15" fill="rgb(253,60,29)" fg:x="70173" fg:w="14"/><text x="70.8310%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (17 samples, 0.02%)</title><rect x="70.5810%" y="581" width="0.0171%" height="15" fill="rgb(244,181,39)" fg:x="70173" fg:w="17"/><text x="70.8310%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (17 samples, 0.02%)</title><rect x="70.5810%" y="565" width="0.0171%" height="15" fill="rgb(252,203,31)" fg:x="70173" fg:w="17"/><text x="70.8310%" y="575.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (26 samples, 0.03%)</title><rect x="70.5810%" y="597" width="0.0262%" height="15" fill="rgb(224,120,8)" fg:x="70173" fg:w="26"/><text x="70.8310%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (37 samples, 0.04%)</title><rect x="70.5729%" y="677" width="0.0372%" height="15" fill="rgb(205,171,54)" fg:x="70165" fg:w="37"/><text x="70.8229%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (37 samples, 0.04%)</title><rect x="70.5729%" y="661" width="0.0372%" height="15" fill="rgb(235,89,11)" fg:x="70165" fg:w="37"/><text x="70.8229%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (32 samples, 0.03%)</title><rect x="70.5779%" y="645" width="0.0322%" height="15" fill="rgb(212,180,28)" fg:x="70170" fg:w="32"/><text x="70.8279%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (32 samples, 0.03%)</title><rect x="70.5779%" y="629" width="0.0322%" height="15" fill="rgb(247,84,49)" fg:x="70170" fg:w="32"/><text x="70.8279%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (31 samples, 0.03%)</title><rect x="70.5789%" y="613" width="0.0312%" height="15" fill="rgb(236,187,52)" fg:x="70171" fg:w="31"/><text x="70.8289%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="70.6373%" y="629" width="0.0372%" height="15" fill="rgb(227,24,15)" fg:x="70229" fg:w="37"/><text x="70.8873%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="70.6534%" y="613" width="0.0211%" height="15" fill="rgb(227,211,13)" fg:x="70245" fg:w="21"/><text x="70.9034%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (133 samples, 0.13%)</title><rect x="70.5548%" y="693" width="0.1338%" height="15" fill="rgb(245,52,14)" fg:x="70147" fg:w="133"/><text x="70.8048%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (77 samples, 0.08%)</title><rect x="70.6111%" y="677" width="0.0774%" height="15" fill="rgb(225,185,13)" fg:x="70203" fg:w="77"/><text x="70.8611%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (68 samples, 0.07%)</title><rect x="70.6202%" y="661" width="0.0684%" height="15" fill="rgb(217,160,29)" fg:x="70212" fg:w="68"/><text x="70.8702%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (66 samples, 0.07%)</title><rect x="70.6222%" y="645" width="0.0664%" height="15" fill="rgb(216,115,53)" fg:x="70214" fg:w="66"/><text x="70.8722%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (11 samples, 0.01%)</title><rect x="70.7228%" y="629" width="0.0111%" height="15" fill="rgb(236,99,5)" fg:x="70314" fg:w="11"/><text x="70.9728%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (10 samples, 0.01%)</title><rect x="70.7399%" y="597" width="0.0101%" height="15" fill="rgb(222,60,38)" fg:x="70331" fg:w="10"/><text x="70.9899%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (18 samples, 0.02%)</title><rect x="70.7338%" y="629" width="0.0181%" height="15" fill="rgb(212,82,22)" fg:x="70325" fg:w="18"/><text x="70.9838%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (14 samples, 0.01%)</title><rect x="70.7379%" y="613" width="0.0141%" height="15" fill="rgb(214,48,28)" fg:x="70329" fg:w="14"/><text x="70.9879%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (49 samples, 0.05%)</title><rect x="70.7147%" y="645" width="0.0493%" height="15" fill="rgb(245,196,50)" fg:x="70306" fg:w="49"/><text x="70.9647%" y="655.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (12 samples, 0.01%)</title><rect x="70.7519%" y="629" width="0.0121%" height="15" fill="rgb(225,159,46)" fg:x="70343" fg:w="12"/><text x="71.0019%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (70 samples, 0.07%)</title><rect x="70.7047%" y="661" width="0.0704%" height="15" fill="rgb(207,195,48)" fg:x="70296" fg:w="70"/><text x="70.9547%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (86 samples, 0.09%)</title><rect x="70.6916%" y="677" width="0.0865%" height="15" fill="rgb(240,73,3)" fg:x="70283" fg:w="86"/><text x="70.9416%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (234 samples, 0.24%)</title><rect x="70.5488%" y="709" width="0.2354%" height="15" fill="rgb(245,57,23)" fg:x="70141" fg:w="234"/><text x="70.7988%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (95 samples, 0.10%)</title><rect x="70.6886%" y="693" width="0.0956%" height="15" fill="rgb(240,75,18)" fg:x="70280" fg:w="95"/><text x="70.9386%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="70.8012%" y="517" width="0.0131%" height="15" fill="rgb(238,168,12)" fg:x="70392" fg:w="13"/><text x="71.0512%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="70.8012%" y="501" width="0.0131%" height="15" fill="rgb(226,20,40)" fg:x="70392" fg:w="13"/><text x="71.0512%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (16 samples, 0.02%)</title><rect x="70.7992%" y="533" width="0.0161%" height="15" fill="rgb(224,130,35)" fg:x="70390" fg:w="16"/><text x="71.0492%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (18 samples, 0.02%)</title><rect x="70.7992%" y="565" width="0.0181%" height="15" fill="rgb(225,63,41)" fg:x="70390" fg:w="18"/><text x="71.0492%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.02%)</title><rect x="70.7992%" y="549" width="0.0181%" height="15" fill="rgb(219,3,3)" fg:x="70390" fg:w="18"/><text x="71.0492%" y="559.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (26 samples, 0.03%)</title><rect x="70.7982%" y="581" width="0.0262%" height="15" fill="rgb(218,157,4)" fg:x="70389" fg:w="26"/><text x="71.0482%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (35 samples, 0.04%)</title><rect x="70.7932%" y="661" width="0.0352%" height="15" fill="rgb(232,76,36)" fg:x="70384" fg:w="35"/><text x="71.0432%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (33 samples, 0.03%)</title><rect x="70.7952%" y="645" width="0.0332%" height="15" fill="rgb(247,36,0)" fg:x="70386" fg:w="33"/><text x="71.0452%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.03%)</title><rect x="70.7982%" y="629" width="0.0302%" height="15" fill="rgb(205,2,34)" fg:x="70389" fg:w="30"/><text x="71.0482%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (30 samples, 0.03%)</title><rect x="70.7982%" y="613" width="0.0302%" height="15" fill="rgb(239,136,13)" fg:x="70389" fg:w="30"/><text x="71.0482%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (30 samples, 0.03%)</title><rect x="70.7982%" y="597" width="0.0302%" height="15" fill="rgb(253,122,12)" fg:x="70389" fg:w="30"/><text x="71.0482%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (75 samples, 0.08%)</title><rect x="70.7861%" y="677" width="0.0754%" height="15" fill="rgb(222,174,7)" fg:x="70377" fg:w="75"/><text x="71.0361%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31 samples, 0.03%)</title><rect x="70.8304%" y="661" width="0.0312%" height="15" fill="rgb(208,191,42)" fg:x="70421" fg:w="31"/><text x="71.0804%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="70.8334%" y="645" width="0.0282%" height="15" fill="rgb(237,212,15)" fg:x="70424" fg:w="28"/><text x="71.0834%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.02%)</title><rect x="70.8374%" y="629" width="0.0241%" height="15" fill="rgb(215,65,20)" fg:x="70428" fg:w="24"/><text x="71.0874%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (30 samples, 0.03%)</title><rect x="70.8736%" y="629" width="0.0302%" height="15" fill="rgb(232,103,11)" fg:x="70464" fg:w="30"/><text x="71.1236%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (121 samples, 0.12%)</title><rect x="70.7841%" y="693" width="0.1217%" height="15" fill="rgb(235,148,18)" fg:x="70375" fg:w="121"/><text x="71.0341%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (44 samples, 0.04%)</title><rect x="70.8616%" y="677" width="0.0443%" height="15" fill="rgb(240,173,7)" fg:x="70452" fg:w="44"/><text x="71.1116%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (39 samples, 0.04%)</title><rect x="70.8666%" y="661" width="0.0392%" height="15" fill="rgb(228,182,25)" fg:x="70457" fg:w="39"/><text x="71.1166%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (35 samples, 0.04%)</title><rect x="70.8706%" y="645" width="0.0352%" height="15" fill="rgb(247,3,52)" fg:x="70461" fg:w="35"/><text x="71.1206%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (123 samples, 0.12%)</title><rect x="70.7841%" y="709" width="0.1237%" height="15" fill="rgb(226,155,8)" fg:x="70375" fg:w="123"/><text x="71.0341%" y="719.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12 samples, 0.01%)</title><rect x="70.9270%" y="693" width="0.0121%" height="15" fill="rgb(243,195,38)" fg:x="70517" fg:w="12"/><text x="71.1770%" y="703.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="70.9622%" y="677" width="0.0111%" height="15" fill="rgb(254,181,33)" fg:x="70552" fg:w="11"/><text x="71.2122%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (67 samples, 0.07%)</title><rect x="70.9089%" y="709" width="0.0674%" height="15" fill="rgb(232,98,23)" fg:x="70499" fg:w="67"/><text x="71.1589%" y="719.50"></text></g><g><title>core::mem::replace (30 samples, 0.03%)</title><rect x="70.9461%" y="693" width="0.0302%" height="15" fill="rgb(205,23,10)" fg:x="70536" fg:w="30"/><text x="71.1961%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="70.9913%" y="613" width="0.0231%" height="15" fill="rgb(212,124,38)" fg:x="70581" fg:w="23"/><text x="71.2413%" y="623.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (21 samples, 0.02%)</title><rect x="70.9933%" y="597" width="0.0211%" height="15" fill="rgb(228,207,2)" fg:x="70583" fg:w="21"/><text x="71.2433%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (19 samples, 0.02%)</title><rect x="71.0477%" y="549" width="0.0191%" height="15" fill="rgb(215,120,22)" fg:x="70637" fg:w="19"/><text x="71.2977%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (15 samples, 0.02%)</title><rect x="71.0517%" y="533" width="0.0151%" height="15" fill="rgb(251,172,33)" fg:x="70641" fg:w="15"/><text x="71.3017%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="71.0537%" y="517" width="0.0131%" height="15" fill="rgb(250,83,2)" fg:x="70643" fg:w="13"/><text x="71.3037%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (50 samples, 0.05%)</title><rect x="71.0225%" y="565" width="0.0503%" height="15" fill="rgb(210,132,53)" fg:x="70612" fg:w="50"/><text x="71.2725%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (60 samples, 0.06%)</title><rect x="71.0145%" y="613" width="0.0603%" height="15" fill="rgb(221,208,36)" fg:x="70604" fg:w="60"/><text x="71.2645%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (58 samples, 0.06%)</title><rect x="71.0165%" y="597" width="0.0583%" height="15" fill="rgb(205,192,46)" fg:x="70606" fg:w="58"/><text x="71.2665%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (55 samples, 0.06%)</title><rect x="71.0195%" y="581" width="0.0553%" height="15" fill="rgb(223,163,14)" fg:x="70609" fg:w="55"/><text x="71.2695%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (89 samples, 0.09%)</title><rect x="70.9873%" y="629" width="0.0895%" height="15" fill="rgb(218,41,28)" fg:x="70577" fg:w="89"/><text x="71.2373%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;u16&gt;&gt; (101 samples, 0.10%)</title><rect x="70.9762%" y="709" width="0.1016%" height="15" fill="rgb(235,104,10)" fg:x="70566" fg:w="101"/><text x="71.2262%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,()&gt;&gt; (101 samples, 0.10%)</title><rect x="70.9762%" y="693" width="0.1016%" height="15" fill="rgb(246,17,4)" fg:x="70566" fg:w="101"/><text x="71.2262%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.10%)</title><rect x="70.9762%" y="677" width="0.1016%" height="15" fill="rgb(240,7,16)" fg:x="70566" fg:w="101"/><text x="71.2262%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;u16,()&gt;&gt; (94 samples, 0.09%)</title><rect x="70.9833%" y="661" width="0.0945%" height="15" fill="rgb(213,160,23)" fg:x="70573" fg:w="94"/><text x="71.2333%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.09%)</title><rect x="70.9833%" y="645" width="0.0945%" height="15" fill="rgb(251,179,49)" fg:x="70573" fg:w="94"/><text x="71.2333%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.02%)</title><rect x="71.1120%" y="645" width="0.0151%" height="15" fill="rgb(247,198,10)" fg:x="70701" fg:w="15"/><text x="71.3620%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (12 samples, 0.01%)</title><rect x="71.1150%" y="629" width="0.0121%" height="15" fill="rgb(220,65,29)" fg:x="70704" fg:w="12"/><text x="71.3650%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (11 samples, 0.01%)</title><rect x="71.1271%" y="645" width="0.0111%" height="15" fill="rgb(237,171,28)" fg:x="70716" fg:w="11"/><text x="71.3771%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (15 samples, 0.02%)</title><rect x="71.1764%" y="629" width="0.0151%" height="15" fill="rgb(228,44,26)" fg:x="70765" fg:w="15"/><text x="71.4264%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (13 samples, 0.01%)</title><rect x="71.1915%" y="629" width="0.0131%" height="15" fill="rgb(216,210,27)" fg:x="70780" fg:w="13"/><text x="71.4415%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (18 samples, 0.02%)</title><rect x="71.3574%" y="581" width="0.0181%" height="15" fill="rgb(252,10,17)" fg:x="70945" fg:w="18"/><text x="71.6074%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (16 samples, 0.02%)</title><rect x="71.3595%" y="565" width="0.0161%" height="15" fill="rgb(214,172,30)" fg:x="70947" fg:w="16"/><text x="71.6095%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (22 samples, 0.02%)</title><rect x="71.4037%" y="565" width="0.0221%" height="15" fill="rgb(253,130,48)" fg:x="70991" fg:w="22"/><text x="71.6537%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (32 samples, 0.03%)</title><rect x="71.4258%" y="565" width="0.0322%" height="15" fill="rgb(226,99,43)" fg:x="71013" fg:w="32"/><text x="71.6758%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (20 samples, 0.02%)</title><rect x="71.4379%" y="549" width="0.0201%" height="15" fill="rgb(239,111,26)" fg:x="71025" fg:w="20"/><text x="71.6879%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 0.20%)</title><rect x="71.2800%" y="597" width="0.2012%" height="15" fill="rgb(240,27,53)" fg:x="70868" fg:w="200"/><text x="71.5300%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.11%)</title><rect x="71.3756%" y="581" width="0.1056%" height="15" fill="rgb(254,163,12)" fg:x="70963" fg:w="105"/><text x="71.6256%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (18 samples, 0.02%)</title><rect x="71.4631%" y="565" width="0.0181%" height="15" fill="rgb(225,51,48)" fg:x="71050" fg:w="18"/><text x="71.7131%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (59 samples, 0.06%)</title><rect x="71.4862%" y="597" width="0.0593%" height="15" fill="rgb(205,19,32)" fg:x="71073" fg:w="59"/><text x="71.7362%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (46 samples, 0.05%)</title><rect x="71.4993%" y="581" width="0.0463%" height="15" fill="rgb(218,119,26)" fg:x="71086" fg:w="46"/><text x="71.7493%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="71.5113%" y="565" width="0.0342%" height="15" fill="rgb(231,173,33)" fg:x="71098" fg:w="34"/><text x="71.7613%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (25 samples, 0.03%)</title><rect x="71.5204%" y="549" width="0.0251%" height="15" fill="rgb(241,100,29)" fg:x="71107" fg:w="25"/><text x="71.7704%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.01%)</title><rect x="71.5757%" y="565" width="0.0111%" height="15" fill="rgb(250,194,34)" fg:x="71162" fg:w="11"/><text x="71.8257%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (34 samples, 0.03%)</title><rect x="71.5546%" y="597" width="0.0342%" height="15" fill="rgb(215,23,50)" fg:x="71141" fg:w="34"/><text x="71.8046%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (29 samples, 0.03%)</title><rect x="71.5596%" y="581" width="0.0292%" height="15" fill="rgb(206,49,37)" fg:x="71146" fg:w="29"/><text x="71.8096%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (446 samples, 0.45%)</title><rect x="71.1412%" y="645" width="0.4486%" height="15" fill="rgb(247,39,21)" fg:x="70730" fg:w="446"/><text x="71.3912%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (383 samples, 0.39%)</title><rect x="71.2046%" y="629" width="0.3852%" height="15" fill="rgb(209,220,15)" fg:x="70793" fg:w="383"/><text x="71.4546%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (362 samples, 0.36%)</title><rect x="71.2257%" y="613" width="0.3641%" height="15" fill="rgb(206,41,33)" fg:x="70814" fg:w="362"/><text x="71.4757%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (493 samples, 0.50%)</title><rect x="71.1020%" y="661" width="0.4959%" height="15" fill="rgb(221,225,45)" fg:x="70691" fg:w="493"/><text x="71.3520%" y="671.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::contains (512 samples, 0.51%)</title><rect x="71.0929%" y="693" width="0.5150%" height="15" fill="rgb(216,27,18)" fg:x="70682" fg:w="512"/><text x="71.3429%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (506 samples, 0.51%)</title><rect x="71.0990%" y="677" width="0.5089%" height="15" fill="rgb(250,193,34)" fg:x="70688" fg:w="506"/><text x="71.3490%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (10 samples, 0.01%)</title><rect x="71.5978%" y="661" width="0.0101%" height="15" fill="rgb(227,215,20)" fg:x="71184" fg:w="10"/><text x="71.8478%" y="671.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::is_end_of_block (532 samples, 0.54%)</title><rect x="71.0778%" y="709" width="0.5351%" height="15" fill="rgb(242,211,27)" fg:x="70667" fg:w="532"/><text x="71.3278%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.06%)</title><rect x="71.6823%" y="597" width="0.0553%" height="15" fill="rgb(229,190,30)" fg:x="71268" fg:w="55"/><text x="71.9323%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="71.7045%" y="581" width="0.0332%" height="15" fill="rgb(253,31,29)" fg:x="71290" fg:w="33"/><text x="71.9545%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.01%)</title><rect x="71.7266%" y="565" width="0.0111%" height="15" fill="rgb(229,177,52)" fg:x="71312" fg:w="11"/><text x="71.9766%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (12 samples, 0.01%)</title><rect x="71.7386%" y="597" width="0.0121%" height="15" fill="rgb(226,88,8)" fg:x="71324" fg:w="12"/><text x="71.9886%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (127 samples, 0.13%)</title><rect x="71.6340%" y="661" width="0.1277%" height="15" fill="rgb(214,55,27)" fg:x="71220" fg:w="127"/><text x="71.8840%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (112 samples, 0.11%)</title><rect x="71.6491%" y="645" width="0.1127%" height="15" fill="rgb(233,202,5)" fg:x="71235" fg:w="112"/><text x="71.8991%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (103 samples, 0.10%)</title><rect x="71.6582%" y="629" width="0.1036%" height="15" fill="rgb(251,49,30)" fg:x="71244" fg:w="103"/><text x="71.9082%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (97 samples, 0.10%)</title><rect x="71.6642%" y="613" width="0.0976%" height="15" fill="rgb(235,18,52)" fg:x="71250" fg:w="97"/><text x="71.9142%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::get_mut (12 samples, 0.01%)</title><rect x="71.7618%" y="645" width="0.0121%" height="15" fill="rgb(250,111,51)" fg:x="71347" fg:w="12"/><text x="72.0118%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::kv_mut (11 samples, 0.01%)</title><rect x="71.7628%" y="629" width="0.0111%" height="15" fill="rgb(218,13,25)" fg:x="71348" fg:w="11"/><text x="72.0128%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::insert (13 samples, 0.01%)</title><rect x="71.7618%" y="661" width="0.0131%" height="15" fill="rgb(248,96,7)" fg:x="71347" fg:w="13"/><text x="72.0118%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (25 samples, 0.03%)</title><rect x="71.7910%" y="613" width="0.0251%" height="15" fill="rgb(217,31,15)" fg:x="71376" fg:w="25"/><text x="72.0410%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (45 samples, 0.05%)</title><rect x="71.7789%" y="645" width="0.0453%" height="15" fill="rgb(228,59,49)" fg:x="71364" fg:w="45"/><text x="72.0289%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (39 samples, 0.04%)</title><rect x="71.7849%" y="629" width="0.0392%" height="15" fill="rgb(210,152,38)" fg:x="71370" fg:w="39"/><text x="72.0349%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (199 samples, 0.20%)</title><rect x="71.6290%" y="677" width="0.2002%" height="15" fill="rgb(206,71,11)" fg:x="71215" fg:w="199"/><text x="71.8790%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (54 samples, 0.05%)</title><rect x="71.7749%" y="661" width="0.0543%" height="15" fill="rgb(244,199,5)" fg:x="71360" fg:w="54"/><text x="72.0249%" y="671.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (203 samples, 0.20%)</title><rect x="71.6290%" y="693" width="0.2042%" height="15" fill="rgb(253,49,1)" fg:x="71215" fg:w="203"/><text x="71.8790%" y="703.50"></text></g><g><title>move_binary_format::file_format::Bytecode::is_branch (12 samples, 0.01%)</title><rect x="71.8342%" y="693" width="0.0121%" height="15" fill="rgb(225,206,40)" fg:x="71419" fg:w="12"/><text x="72.0842%" y="703.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::record_block_ids (240 samples, 0.24%)</title><rect x="71.6129%" y="709" width="0.2414%" height="15" fill="rgb(243,116,47)" fg:x="71199" fg:w="240"/><text x="71.8629%" y="719.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="71.8976%" y="565" width="0.0111%" height="15" fill="rgb(219,225,16)" fg:x="71482" fg:w="11"/><text x="72.1476%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="71.8915%" y="597" width="0.0221%" height="15" fill="rgb(233,29,47)" fg:x="71476" fg:w="22"/><text x="72.1415%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="71.8925%" y="581" width="0.0211%" height="15" fill="rgb(250,179,18)" fg:x="71477" fg:w="21"/><text x="72.1425%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="71.8865%" y="613" width="0.0322%" height="15" fill="rgb(215,176,6)" fg:x="71471" fg:w="32"/><text x="72.1365%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (10 samples, 0.01%)</title><rect x="71.9247%" y="597" width="0.0101%" height="15" fill="rgb(214,117,39)" fg:x="71509" fg:w="10"/><text x="72.1747%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::array (26 samples, 0.03%)</title><rect x="71.9187%" y="613" width="0.0262%" height="15" fill="rgb(247,183,36)" fg:x="71503" fg:w="26"/><text x="72.1687%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::repeat (10 samples, 0.01%)</title><rect x="71.9348%" y="597" width="0.0101%" height="15" fill="rgb(237,200,3)" fg:x="71519" fg:w="10"/><text x="72.1848%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (79 samples, 0.08%)</title><rect x="71.8775%" y="629" width="0.0795%" height="15" fill="rgb(212,220,24)" fg:x="71462" fg:w="79"/><text x="72.1275%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (82 samples, 0.08%)</title><rect x="71.8775%" y="677" width="0.0825%" height="15" fill="rgb(245,216,20)" fg:x="71462" fg:w="82"/><text x="72.1275%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (82 samples, 0.08%)</title><rect x="71.8775%" y="661" width="0.0825%" height="15" fill="rgb(219,124,7)" fg:x="71462" fg:w="82"/><text x="72.1275%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (82 samples, 0.08%)</title><rect x="71.8775%" y="645" width="0.0825%" height="15" fill="rgb(227,167,8)" fg:x="71462" fg:w="82"/><text x="72.1275%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (87 samples, 0.09%)</title><rect x="71.8734%" y="693" width="0.0875%" height="15" fill="rgb(241,37,2)" fg:x="71458" fg:w="87"/><text x="72.1234%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (14 samples, 0.01%)</title><rect x="71.9650%" y="693" width="0.0141%" height="15" fill="rgb(238,134,33)" fg:x="71549" fg:w="14"/><text x="72.2150%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (14 samples, 0.01%)</title><rect x="71.9650%" y="677" width="0.0141%" height="15" fill="rgb(248,48,27)" fg:x="71549" fg:w="14"/><text x="72.2150%" y="687.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (1,484 samples, 1.49%)</title><rect x="70.4985%" y="741" width="1.4926%" height="15" fill="rgb(212,14,16)" fg:x="70091" fg:w="1484"/><text x="70.7485%" y="751.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (1,463 samples, 1.47%)</title><rect x="70.5196%" y="725" width="1.4715%" height="15" fill="rgb(217,205,37)" fg:x="70112" fg:w="1463"/><text x="70.7696%" y="735.50"></text></g><g><title>move_binary_format::file_format::Bytecode::get_successors (136 samples, 0.14%)</title><rect x="71.8543%" y="709" width="0.1368%" height="15" fill="rgb(233,185,47)" fg:x="71439" fg:w="136"/><text x="72.1043%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="72.0947%" y="581" width="0.0181%" height="15" fill="rgb(244,88,8)" fg:x="71678" fg:w="18"/><text x="72.3447%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (71 samples, 0.07%)</title><rect x="72.0545%" y="645" width="0.0714%" height="15" fill="rgb(213,0,20)" fg:x="71638" fg:w="71"/><text x="72.3045%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (69 samples, 0.07%)</title><rect x="72.0565%" y="629" width="0.0694%" height="15" fill="rgb(238,159,36)" fg:x="71640" fg:w="69"/><text x="72.3065%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.07%)</title><rect x="72.0565%" y="613" width="0.0694%" height="15" fill="rgb(253,173,17)" fg:x="71640" fg:w="69"/><text x="72.3065%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (52 samples, 0.05%)</title><rect x="72.0736%" y="597" width="0.0523%" height="15" fill="rgb(221,23,28)" fg:x="71657" fg:w="52"/><text x="72.3236%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="72.1128%" y="581" width="0.0131%" height="15" fill="rgb(218,113,15)" fg:x="71696" fg:w="13"/><text x="72.3628%" y="591.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (83 samples, 0.08%)</title><rect x="72.0444%" y="693" width="0.0835%" height="15" fill="rgb(233,58,3)" fg:x="71628" fg:w="83"/><text x="72.2944%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (80 samples, 0.08%)</title><rect x="72.0474%" y="677" width="0.0805%" height="15" fill="rgb(250,46,35)" fg:x="71631" fg:w="80"/><text x="72.2974%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u16 (80 samples, 0.08%)</title><rect x="72.0474%" y="661" width="0.0805%" height="15" fill="rgb(210,169,11)" fg:x="71631" fg:w="80"/><text x="72.2974%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (32 samples, 0.03%)</title><rect x="72.1822%" y="629" width="0.0322%" height="15" fill="rgb(246,88,19)" fg:x="71765" fg:w="32"/><text x="72.4322%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (74 samples, 0.07%)</title><rect x="72.1430%" y="645" width="0.0744%" height="15" fill="rgb(206,81,49)" fg:x="71726" fg:w="74"/><text x="72.3930%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (93 samples, 0.09%)</title><rect x="72.3069%" y="629" width="0.0935%" height="15" fill="rgb(232,144,18)" fg:x="71889" fg:w="93"/><text x="72.5569%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (286 samples, 0.29%)</title><rect x="72.1279%" y="693" width="0.2877%" height="15" fill="rgb(235,2,27)" fg:x="71711" fg:w="286"/><text x="72.3779%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (286 samples, 0.29%)</title><rect x="72.1279%" y="677" width="0.2877%" height="15" fill="rgb(239,157,39)" fg:x="71711" fg:w="286"/><text x="72.3779%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (285 samples, 0.29%)</title><rect x="72.1289%" y="661" width="0.2867%" height="15" fill="rgb(220,11,17)" fg:x="71712" fg:w="285"/><text x="72.3789%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (197 samples, 0.20%)</title><rect x="72.2174%" y="645" width="0.1981%" height="15" fill="rgb(243,94,50)" fg:x="71800" fg:w="197"/><text x="72.4674%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.02%)</title><rect x="72.4005%" y="629" width="0.0151%" height="15" fill="rgb(218,22,0)" fg:x="71982" fg:w="15"/><text x="72.6505%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="72.4186%" y="677" width="0.0121%" height="15" fill="rgb(249,70,21)" fg:x="72000" fg:w="12"/><text x="72.6686%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="72.4377%" y="661" width="0.0121%" height="15" fill="rgb(245,111,46)" fg:x="72019" fg:w="12"/><text x="72.6877%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (435 samples, 0.44%)</title><rect x="72.0364%" y="709" width="0.4375%" height="15" fill="rgb(244,183,12)" fg:x="71620" fg:w="435"/><text x="72.2864%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (58 samples, 0.06%)</title><rect x="72.4156%" y="693" width="0.0583%" height="15" fill="rgb(207,117,0)" fg:x="71997" fg:w="58"/><text x="72.6656%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (43 samples, 0.04%)</title><rect x="72.4306%" y="677" width="0.0432%" height="15" fill="rgb(206,20,43)" fg:x="72012" fg:w="43"/><text x="72.6806%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.02%)</title><rect x="72.4498%" y="661" width="0.0241%" height="15" fill="rgb(221,104,11)" fg:x="72031" fg:w="24"/><text x="72.6998%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (11 samples, 0.01%)</title><rect x="72.4628%" y="645" width="0.0111%" height="15" fill="rgb(254,36,50)" fg:x="72044" fg:w="11"/><text x="72.7128%" y="655.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="72.4930%" y="677" width="0.0111%" height="15" fill="rgb(252,17,15)" fg:x="72074" fg:w="11"/><text x="72.7430%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="72.5564%" y="629" width="0.0101%" height="15" fill="rgb(219,129,43)" fg:x="72137" fg:w="10"/><text x="72.8064%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="72.5453%" y="645" width="0.0241%" height="15" fill="rgb(205,34,45)" fg:x="72126" fg:w="24"/><text x="72.7953%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (36 samples, 0.04%)</title><rect x="72.6057%" y="613" width="0.0362%" height="15" fill="rgb(251,201,32)" fg:x="72186" fg:w="36"/><text x="72.8557%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (17 samples, 0.02%)</title><rect x="72.6248%" y="597" width="0.0171%" height="15" fill="rgb(205,56,0)" fg:x="72205" fg:w="17"/><text x="72.8748%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (37 samples, 0.04%)</title><rect x="72.6419%" y="613" width="0.0372%" height="15" fill="rgb(211,193,27)" fg:x="72222" fg:w="37"/><text x="72.8919%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (15 samples, 0.02%)</title><rect x="72.6640%" y="597" width="0.0151%" height="15" fill="rgb(231,100,42)" fg:x="72244" fg:w="15"/><text x="72.9140%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (209 samples, 0.21%)</title><rect x="72.5151%" y="661" width="0.2102%" height="15" fill="rgb(245,85,27)" fg:x="72096" fg:w="209"/><text x="72.7651%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (149 samples, 0.15%)</title><rect x="72.5755%" y="645" width="0.1499%" height="15" fill="rgb(241,76,24)" fg:x="72156" fg:w="149"/><text x="72.8255%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (143 samples, 0.14%)</title><rect x="72.5815%" y="629" width="0.1438%" height="15" fill="rgb(249,157,15)" fg:x="72162" fg:w="143"/><text x="72.8315%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (46 samples, 0.05%)</title><rect x="72.6791%" y="613" width="0.0463%" height="15" fill="rgb(222,218,25)" fg:x="72259" fg:w="46"/><text x="72.9291%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (39 samples, 0.04%)</title><rect x="72.6861%" y="597" width="0.0392%" height="15" fill="rgb(252,156,52)" fg:x="72266" fg:w="39"/><text x="72.9361%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (25 samples, 0.03%)</title><rect x="72.7002%" y="581" width="0.0251%" height="15" fill="rgb(211,185,7)" fg:x="72280" fg:w="25"/><text x="72.9502%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 0.23%)</title><rect x="72.5041%" y="677" width="0.2253%" height="15" fill="rgb(234,108,24)" fg:x="72085" fg:w="224"/><text x="72.7541%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="72.7475%" y="645" width="0.0121%" height="15" fill="rgb(227,218,2)" fg:x="72327" fg:w="12"/><text x="72.9975%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (31 samples, 0.03%)</title><rect x="72.8129%" y="629" width="0.0312%" height="15" fill="rgb(224,0,36)" fg:x="72392" fg:w="31"/><text x="73.0629%" y="639.50"></text></g><g><title>core::cmp::Ord::min (25 samples, 0.03%)</title><rect x="72.8189%" y="613" width="0.0251%" height="15" fill="rgb(233,201,10)" fg:x="72398" fg:w="25"/><text x="73.0689%" y="623.50"></text></g><g><title>core::cmp::min_by (18 samples, 0.02%)</title><rect x="72.8259%" y="597" width="0.0181%" height="15" fill="rgb(252,209,14)" fg:x="72405" fg:w="18"/><text x="73.0759%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (28 samples, 0.03%)</title><rect x="72.8440%" y="629" width="0.0282%" height="15" fill="rgb(205,93,49)" fg:x="72423" fg:w="28"/><text x="73.0940%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.02%)</title><rect x="72.8531%" y="613" width="0.0191%" height="15" fill="rgb(234,116,45)" fg:x="72432" fg:w="19"/><text x="73.1031%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (40 samples, 0.04%)</title><rect x="72.8913%" y="613" width="0.0402%" height="15" fill="rgb(248,89,35)" fg:x="72470" fg:w="40"/><text x="73.1413%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (21 samples, 0.02%)</title><rect x="72.9104%" y="597" width="0.0211%" height="15" fill="rgb(233,167,45)" fg:x="72489" fg:w="21"/><text x="73.1604%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32 samples, 0.03%)</title><rect x="72.9315%" y="613" width="0.0322%" height="15" fill="rgb(248,228,14)" fg:x="72510" fg:w="32"/><text x="73.1815%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (14 samples, 0.01%)</title><rect x="72.9496%" y="597" width="0.0141%" height="15" fill="rgb(246,91,14)" fg:x="72528" fg:w="14"/><text x="73.1996%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (258 samples, 0.26%)</title><rect x="72.7596%" y="645" width="0.2595%" height="15" fill="rgb(227,142,5)" fg:x="72339" fg:w="258"/><text x="73.0096%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (146 samples, 0.15%)</title><rect x="72.8722%" y="629" width="0.1468%" height="15" fill="rgb(221,63,33)" fg:x="72451" fg:w="146"/><text x="73.1222%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (55 samples, 0.06%)</title><rect x="72.9637%" y="613" width="0.0553%" height="15" fill="rgb(233,49,0)" fg:x="72542" fg:w="55"/><text x="73.2137%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (41 samples, 0.04%)</title><rect x="72.9778%" y="597" width="0.0412%" height="15" fill="rgb(251,115,38)" fg:x="72556" fg:w="41"/><text x="73.2278%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (18 samples, 0.02%)</title><rect x="73.0009%" y="581" width="0.0181%" height="15" fill="rgb(231,214,32)" fg:x="72579" fg:w="18"/><text x="73.2509%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (278 samples, 0.28%)</title><rect x="72.7404%" y="677" width="0.2796%" height="15" fill="rgb(248,73,46)" fg:x="72320" fg:w="278"/><text x="72.9904%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (277 samples, 0.28%)</title><rect x="72.7414%" y="661" width="0.2786%" height="15" fill="rgb(237,156,4)" fg:x="72321" fg:w="277"/><text x="72.9914%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (544 samples, 0.55%)</title><rect x="72.4739%" y="709" width="0.5472%" height="15" fill="rgb(227,132,2)" fg:x="72055" fg:w="544"/><text x="72.7239%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (542 samples, 0.55%)</title><rect x="72.4759%" y="693" width="0.5452%" height="15" fill="rgb(248,161,9)" fg:x="72057" fg:w="542"/><text x="72.7259%" y="703.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (12 samples, 0.01%)</title><rect x="73.0905%" y="645" width="0.0121%" height="15" fill="rgb(238,77,38)" fg:x="72668" fg:w="12"/><text x="73.3405%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17 samples, 0.02%)</title><rect x="73.0874%" y="661" width="0.0171%" height="15" fill="rgb(222,166,40)" fg:x="72665" fg:w="17"/><text x="73.3374%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (45 samples, 0.05%)</title><rect x="73.0603%" y="693" width="0.0453%" height="15" fill="rgb(214,168,45)" fg:x="72638" fg:w="45"/><text x="73.3103%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (30 samples, 0.03%)</title><rect x="73.0754%" y="677" width="0.0302%" height="15" fill="rgb(226,64,37)" fg:x="72653" fg:w="30"/><text x="73.3254%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (14 samples, 0.01%)</title><rect x="73.1277%" y="645" width="0.0141%" height="15" fill="rgb(232,210,43)" fg:x="72705" fg:w="14"/><text x="73.3777%" y="655.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (11 samples, 0.01%)</title><rect x="73.1307%" y="629" width="0.0111%" height="15" fill="rgb(214,76,33)" fg:x="72708" fg:w="11"/><text x="73.3807%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (24 samples, 0.02%)</title><rect x="73.1226%" y="661" width="0.0241%" height="15" fill="rgb(210,78,5)" fg:x="72700" fg:w="24"/><text x="73.3726%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (40 samples, 0.04%)</title><rect x="73.1086%" y="677" width="0.0402%" height="15" fill="rgb(211,107,37)" fg:x="72686" fg:w="40"/><text x="73.3586%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (53 samples, 0.05%)</title><rect x="73.1056%" y="693" width="0.0533%" height="15" fill="rgb(249,67,16)" fg:x="72683" fg:w="53"/><text x="73.3556%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (10 samples, 0.01%)</title><rect x="73.1488%" y="677" width="0.0101%" height="15" fill="rgb(222,114,31)" fg:x="72726" fg:w="10"/><text x="73.3988%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (14 samples, 0.01%)</title><rect x="73.2836%" y="581" width="0.0141%" height="15" fill="rgb(242,118,19)" fg:x="72860" fg:w="14"/><text x="73.5336%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (24 samples, 0.02%)</title><rect x="73.2765%" y="597" width="0.0241%" height="15" fill="rgb(223,115,1)" fg:x="72853" fg:w="24"/><text x="73.5265%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (43 samples, 0.04%)</title><rect x="73.2625%" y="613" width="0.0432%" height="15" fill="rgb(241,182,54)" fg:x="72839" fg:w="43"/><text x="73.5125%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (10 samples, 0.01%)</title><rect x="73.3138%" y="613" width="0.0101%" height="15" fill="rgb(244,166,36)" fg:x="72890" fg:w="10"/><text x="73.5638%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.10%)</title><rect x="73.2252%" y="645" width="0.0996%" height="15" fill="rgb(241,52,43)" fg:x="72802" fg:w="99"/><text x="73.4752%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.08%)</title><rect x="73.2444%" y="629" width="0.0805%" height="15" fill="rgb(236,82,9)" fg:x="72821" fg:w="80"/><text x="73.4944%" y="639.50"></text></g><g><title>core::mem::swap (10 samples, 0.01%)</title><rect x="73.3288%" y="645" width="0.0101%" height="15" fill="rgb(241,119,0)" fg:x="72905" fg:w="10"/><text x="73.5788%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.01%)</title><rect x="73.3288%" y="629" width="0.0101%" height="15" fill="rgb(221,19,22)" fg:x="72905" fg:w="10"/><text x="73.5788%" y="639.50"></text></g><g><title>core::ptr::swap_nonoverlapping (10 samples, 0.01%)</title><rect x="73.3288%" y="613" width="0.0101%" height="15" fill="rgb(254,144,35)" fg:x="72905" fg:w="10"/><text x="73.5788%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (10 samples, 0.01%)</title><rect x="73.3288%" y="597" width="0.0101%" height="15" fill="rgb(246,132,30)" fg:x="72905" fg:w="10"/><text x="73.5788%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="73.3389%" y="645" width="0.0302%" height="15" fill="rgb(234,69,28)" fg:x="72915" fg:w="30"/><text x="73.5889%" y="655.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="73.3389%" y="629" width="0.0302%" height="15" fill="rgb(219,106,47)" fg:x="72915" fg:w="30"/><text x="73.5889%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (30 samples, 0.03%)</title><rect x="73.3389%" y="613" width="0.0302%" height="15" fill="rgb(218,79,24)" fg:x="72915" fg:w="30"/><text x="73.5889%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (27 samples, 0.03%)</title><rect x="73.3419%" y="597" width="0.0272%" height="15" fill="rgb(225,26,21)" fg:x="72918" fg:w="27"/><text x="73.5919%" y="607.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (22 samples, 0.02%)</title><rect x="73.3469%" y="581" width="0.0221%" height="15" fill="rgb(217,68,49)" fg:x="72923" fg:w="22"/><text x="73.5969%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="73.4294%" y="485" width="0.0131%" height="15" fill="rgb(220,204,28)" fg:x="73005" fg:w="13"/><text x="73.6794%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="73.4264%" y="501" width="0.0181%" height="15" fill="rgb(237,208,43)" fg:x="73002" fg:w="18"/><text x="73.6764%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (74 samples, 0.07%)</title><rect x="73.3842%" y="565" width="0.0744%" height="15" fill="rgb(213,97,42)" fg:x="72960" fg:w="74"/><text x="73.6342%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.07%)</title><rect x="73.3872%" y="549" width="0.0714%" height="15" fill="rgb(238,96,52)" fg:x="72963" fg:w="71"/><text x="73.6372%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.07%)</title><rect x="73.3902%" y="533" width="0.0684%" height="15" fill="rgb(228,14,13)" fg:x="72966" fg:w="68"/><text x="73.6402%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (56 samples, 0.06%)</title><rect x="73.4023%" y="517" width="0.0563%" height="15" fill="rgb(219,123,13)" fg:x="72978" fg:w="56"/><text x="73.6523%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="73.4455%" y="501" width="0.0131%" height="15" fill="rgb(216,144,17)" fg:x="73021" fg:w="13"/><text x="73.6955%" y="511.50"></text></g><g><title>&lt;move_binary_format::file_format::IdentifierIndex as core::hash::Hash&gt;::hash (85 samples, 0.09%)</title><rect x="73.3761%" y="613" width="0.0855%" height="15" fill="rgb(230,228,29)" fg:x="72952" fg:w="85"/><text x="73.6261%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (85 samples, 0.09%)</title><rect x="73.3761%" y="597" width="0.0855%" height="15" fill="rgb(233,18,5)" fg:x="72952" fg:w="85"/><text x="73.6261%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u16 (84 samples, 0.08%)</title><rect x="73.3771%" y="581" width="0.0845%" height="15" fill="rgb(233,197,12)" fg:x="72953" fg:w="84"/><text x="73.6271%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.02%)</title><rect x="73.5320%" y="549" width="0.0201%" height="15" fill="rgb(234,140,29)" fg:x="73107" fg:w="20"/><text x="73.7820%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (69 samples, 0.07%)</title><rect x="73.4847%" y="565" width="0.0694%" height="15" fill="rgb(233,113,19)" fg:x="73060" fg:w="69"/><text x="73.7347%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (101 samples, 0.10%)</title><rect x="73.6628%" y="549" width="0.1016%" height="15" fill="rgb(246,209,13)" fg:x="73237" fg:w="101"/><text x="73.9128%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (324 samples, 0.33%)</title><rect x="73.4616%" y="613" width="0.3259%" height="15" fill="rgb(242,79,54)" fg:x="73037" fg:w="324"/><text x="73.7116%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (323 samples, 0.32%)</title><rect x="73.4626%" y="597" width="0.3249%" height="15" fill="rgb(219,73,16)" fg:x="73038" fg:w="323"/><text x="73.7126%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (322 samples, 0.32%)</title><rect x="73.4636%" y="581" width="0.3239%" height="15" fill="rgb(224,52,10)" fg:x="73039" fg:w="322"/><text x="73.7136%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (232 samples, 0.23%)</title><rect x="73.5541%" y="565" width="0.2333%" height="15" fill="rgb(237,179,5)" fg:x="73129" fg:w="232"/><text x="73.8041%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (23 samples, 0.02%)</title><rect x="73.7644%" y="549" width="0.0231%" height="15" fill="rgb(231,20,6)" fg:x="73338" fg:w="23"/><text x="74.0144%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="73.7925%" y="597" width="0.0161%" height="15" fill="rgb(253,171,45)" fg:x="73366" fg:w="16"/><text x="74.0425%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="73.8157%" y="581" width="0.0121%" height="15" fill="rgb(230,75,49)" fg:x="73389" fg:w="12"/><text x="74.0657%" y="591.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (470 samples, 0.47%)</title><rect x="73.3691%" y="645" width="0.4727%" height="15" fill="rgb(216,83,46)" fg:x="72945" fg:w="470"/><text x="73.6191%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (467 samples, 0.47%)</title><rect x="73.3721%" y="629" width="0.4697%" height="15" fill="rgb(236,56,9)" fg:x="72948" fg:w="467"/><text x="73.6221%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (54 samples, 0.05%)</title><rect x="73.7875%" y="613" width="0.0543%" height="15" fill="rgb(215,28,34)" fg:x="73361" fg:w="54"/><text x="74.0375%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (33 samples, 0.03%)</title><rect x="73.8086%" y="597" width="0.0332%" height="15" fill="rgb(230,222,20)" fg:x="73382" fg:w="33"/><text x="74.0586%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (14 samples, 0.01%)</title><rect x="73.8277%" y="581" width="0.0141%" height="15" fill="rgb(235,209,51)" fg:x="73401" fg:w="14"/><text x="74.0777%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.01%)</title><rect x="73.8519%" y="613" width="0.0141%" height="15" fill="rgb(235,167,1)" fg:x="73425" fg:w="14"/><text x="74.1019%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (31 samples, 0.03%)</title><rect x="73.8418%" y="645" width="0.0312%" height="15" fill="rgb(248,220,0)" fg:x="73415" fg:w="31"/><text x="74.0918%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (28 samples, 0.03%)</title><rect x="73.8448%" y="629" width="0.0282%" height="15" fill="rgb(239,0,18)" fg:x="73418" fg:w="28"/><text x="74.0948%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (12 samples, 0.01%)</title><rect x="73.8810%" y="629" width="0.0121%" height="15" fill="rgb(229,179,11)" fg:x="73454" fg:w="12"/><text x="74.1310%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="73.8830%" y="613" width="0.0101%" height="15" fill="rgb(226,116,53)" fg:x="73456" fg:w="10"/><text x="74.1330%" y="623.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (21 samples, 0.02%)</title><rect x="73.9132%" y="581" width="0.0211%" height="15" fill="rgb(218,1,49)" fg:x="73486" fg:w="21"/><text x="74.1632%" y="591.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (25 samples, 0.03%)</title><rect x="73.9112%" y="597" width="0.0251%" height="15" fill="rgb(208,184,47)" fg:x="73484" fg:w="25"/><text x="74.1612%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (69 samples, 0.07%)</title><rect x="73.8730%" y="645" width="0.0694%" height="15" fill="rgb(238,174,3)" fg:x="73446" fg:w="69"/><text x="74.1230%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (49 samples, 0.05%)</title><rect x="73.8931%" y="629" width="0.0493%" height="15" fill="rgb(247,188,6)" fg:x="73466" fg:w="49"/><text x="74.1431%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (41 samples, 0.04%)</title><rect x="73.9011%" y="613" width="0.0412%" height="15" fill="rgb(211,165,46)" fg:x="73474" fg:w="41"/><text x="74.1511%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.01%)</title><rect x="73.9444%" y="629" width="0.0121%" height="15" fill="rgb(222,190,10)" fg:x="73517" fg:w="12"/><text x="74.1944%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.01%)</title><rect x="73.9464%" y="613" width="0.0101%" height="15" fill="rgb(206,185,3)" fg:x="73519" fg:w="10"/><text x="74.1964%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (10 samples, 0.01%)</title><rect x="73.9565%" y="629" width="0.0101%" height="15" fill="rgb(244,125,37)" fg:x="73529" fg:w="10"/><text x="74.2065%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (25 samples, 0.03%)</title><rect x="73.9424%" y="645" width="0.0251%" height="15" fill="rgb(211,43,7)" fg:x="73515" fg:w="25"/><text x="74.1924%" y="655.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (11 samples, 0.01%)</title><rect x="73.9957%" y="597" width="0.0111%" height="15" fill="rgb(250,41,42)" fg:x="73568" fg:w="11"/><text x="74.2457%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (25 samples, 0.03%)</title><rect x="73.9866%" y="613" width="0.0251%" height="15" fill="rgb(254,54,42)" fg:x="73559" fg:w="25"/><text x="74.2366%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (41 samples, 0.04%)</title><rect x="73.9746%" y="629" width="0.0412%" height="15" fill="rgb(213,71,43)" fg:x="73547" fg:w="41"/><text x="74.2246%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (53 samples, 0.05%)</title><rect x="73.9675%" y="645" width="0.0533%" height="15" fill="rgb(249,3,44)" fg:x="73540" fg:w="53"/><text x="74.2175%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (15 samples, 0.02%)</title><rect x="74.1023%" y="597" width="0.0151%" height="15" fill="rgb(229,80,41)" fg:x="73674" fg:w="15"/><text x="74.3523%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (27 samples, 0.03%)</title><rect x="74.0933%" y="613" width="0.0272%" height="15" fill="rgb(231,25,28)" fg:x="73665" fg:w="27"/><text x="74.3433%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.01%)</title><rect x="74.1204%" y="613" width="0.0111%" height="15" fill="rgb(208,79,48)" fg:x="73692" fg:w="11"/><text x="74.3704%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (31 samples, 0.03%)</title><rect x="74.1315%" y="613" width="0.0312%" height="15" fill="rgb(207,196,38)" fg:x="73703" fg:w="31"/><text x="74.3815%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (14 samples, 0.01%)</title><rect x="74.1486%" y="597" width="0.0141%" height="15" fill="rgb(228,105,49)" fg:x="73720" fg:w="14"/><text x="74.3986%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (10 samples, 0.01%)</title><rect x="74.1818%" y="581" width="0.0101%" height="15" fill="rgb(237,99,15)" fg:x="73753" fg:w="10"/><text x="74.4318%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (39 samples, 0.04%)</title><rect x="74.1667%" y="613" width="0.0392%" height="15" fill="rgb(224,207,46)" fg:x="73738" fg:w="39"/><text x="74.4167%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (32 samples, 0.03%)</title><rect x="74.1737%" y="597" width="0.0322%" height="15" fill="rgb(249,117,50)" fg:x="73745" fg:w="32"/><text x="74.4237%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="74.1918%" y="581" width="0.0141%" height="15" fill="rgb(248,17,13)" fg:x="73763" fg:w="14"/><text x="74.4418%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (207 samples, 0.21%)</title><rect x="74.0420%" y="629" width="0.2082%" height="15" fill="rgb(228,187,36)" fg:x="73614" fg:w="207"/><text x="74.2920%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (44 samples, 0.04%)</title><rect x="74.2059%" y="613" width="0.0443%" height="15" fill="rgb(234,132,20)" fg:x="73777" fg:w="44"/><text x="74.4559%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (37 samples, 0.04%)</title><rect x="74.2130%" y="597" width="0.0372%" height="15" fill="rgb(209,170,46)" fg:x="73784" fg:w="37"/><text x="74.4630%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (17 samples, 0.02%)</title><rect x="74.2331%" y="581" width="0.0171%" height="15" fill="rgb(237,23,19)" fg:x="73804" fg:w="17"/><text x="74.4831%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="74.2763%" y="581" width="0.0101%" height="15" fill="rgb(227,21,26)" fg:x="73847" fg:w="10"/><text x="74.5263%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (37 samples, 0.04%)</title><rect x="74.2552%" y="613" width="0.0372%" height="15" fill="rgb(222,220,48)" fg:x="73826" fg:w="37"/><text x="74.5052%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (24 samples, 0.02%)</title><rect x="74.2683%" y="597" width="0.0241%" height="15" fill="rgb(214,9,16)" fg:x="73839" fg:w="24"/><text x="74.5183%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (289 samples, 0.29%)</title><rect x="74.0208%" y="645" width="0.2907%" height="15" fill="rgb(209,73,30)" fg:x="73593" fg:w="289"/><text x="74.2708%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (61 samples, 0.06%)</title><rect x="74.2502%" y="629" width="0.0614%" height="15" fill="rgb(207,20,33)" fg:x="73821" fg:w="61"/><text x="74.5002%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (19 samples, 0.02%)</title><rect x="74.2924%" y="613" width="0.0191%" height="15" fill="rgb(219,153,12)" fg:x="73863" fg:w="19"/><text x="74.5424%" y="623.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.02%)</title><rect x="74.2954%" y="597" width="0.0161%" height="15" fill="rgb(235,97,25)" fg:x="73866" fg:w="16"/><text x="74.5454%" y="607.50"></text></g><g><title>core::cmp::min_by (13 samples, 0.01%)</title><rect x="74.2984%" y="581" width="0.0131%" height="15" fill="rgb(244,30,34)" fg:x="73869" fg:w="13"/><text x="74.5484%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (11 samples, 0.01%)</title><rect x="74.3598%" y="581" width="0.0111%" height="15" fill="rgb(214,106,45)" fg:x="73930" fg:w="11"/><text x="74.6098%" y="591.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (34 samples, 0.03%)</title><rect x="74.3518%" y="597" width="0.0342%" height="15" fill="rgb(226,41,9)" fg:x="73922" fg:w="34"/><text x="74.6018%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="74.3880%" y="581" width="0.0191%" height="15" fill="rgb(253,139,29)" fg:x="73958" fg:w="19"/><text x="74.6380%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="74.3880%" y="565" width="0.0191%" height="15" fill="rgb(213,205,39)" fg:x="73958" fg:w="19"/><text x="74.6380%" y="575.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (31 samples, 0.03%)</title><rect x="74.3860%" y="597" width="0.0312%" height="15" fill="rgb(209,27,10)" fg:x="73956" fg:w="31"/><text x="74.6360%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (76 samples, 0.08%)</title><rect x="74.3417%" y="613" width="0.0764%" height="15" fill="rgb(249,142,16)" fg:x="73912" fg:w="76"/><text x="74.5917%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (98 samples, 0.10%)</title><rect x="74.3286%" y="629" width="0.0986%" height="15" fill="rgb(242,65,12)" fg:x="73899" fg:w="98"/><text x="74.5786%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (116 samples, 0.12%)</title><rect x="74.3115%" y="645" width="0.1167%" height="15" fill="rgb(232,48,10)" fg:x="73882" fg:w="116"/><text x="74.5615%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1,259 samples, 1.27%)</title><rect x="73.1760%" y="661" width="1.2663%" height="15" fill="rgb(253,67,19)" fg:x="72753" fg:w="1259"/><text x="73.4260%" y="671.50"></text></g><g><title>hashbrown::raw::TableLayout::new (14 samples, 0.01%)</title><rect x="74.4282%" y="645" width="0.0141%" height="15" fill="rgb(227,93,29)" fg:x="73998" fg:w="14"/><text x="74.6782%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,278 samples, 1.29%)</title><rect x="73.1589%" y="693" width="1.2854%" height="15" fill="rgb(226,189,53)" fg:x="72736" fg:w="1278"/><text x="73.4089%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,271 samples, 1.28%)</title><rect x="73.1659%" y="677" width="1.2784%" height="15" fill="rgb(223,224,1)" fg:x="72743" fg:w="1271"/><text x="73.4159%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (14 samples, 0.01%)</title><rect x="74.4443%" y="693" width="0.0141%" height="15" fill="rgb(221,84,32)" fg:x="74014" fg:w="14"/><text x="74.6943%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (22 samples, 0.02%)</title><rect x="74.5147%" y="661" width="0.0221%" height="15" fill="rgb(214,189,28)" fg:x="74084" fg:w="22"/><text x="74.7647%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="74.5258%" y="645" width="0.0111%" height="15" fill="rgb(234,7,52)" fg:x="74095" fg:w="11"/><text x="74.7758%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (36 samples, 0.04%)</title><rect x="74.5026%" y="677" width="0.0362%" height="15" fill="rgb(249,73,31)" fg:x="74072" fg:w="36"/><text x="74.7526%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (10 samples, 0.01%)</title><rect x="74.5388%" y="677" width="0.0101%" height="15" fill="rgb(253,153,41)" fg:x="74108" fg:w="10"/><text x="74.7888%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (38 samples, 0.04%)</title><rect x="74.5489%" y="677" width="0.0382%" height="15" fill="rgb(249,52,34)" fg:x="74118" fg:w="38"/><text x="74.7989%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (14 samples, 0.01%)</title><rect x="74.6163%" y="645" width="0.0141%" height="15" fill="rgb(236,177,47)" fg:x="74185" fg:w="14"/><text x="74.8663%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (45 samples, 0.05%)</title><rect x="74.5931%" y="677" width="0.0453%" height="15" fill="rgb(252,185,45)" fg:x="74162" fg:w="45"/><text x="74.8431%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (31 samples, 0.03%)</title><rect x="74.6072%" y="661" width="0.0312%" height="15" fill="rgb(251,15,30)" fg:x="74176" fg:w="31"/><text x="74.8572%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (217 samples, 0.22%)</title><rect x="74.4584%" y="693" width="0.2183%" height="15" fill="rgb(233,31,4)" fg:x="74028" fg:w="217"/><text x="74.7084%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (37 samples, 0.04%)</title><rect x="74.6394%" y="677" width="0.0372%" height="15" fill="rgb(254,44,24)" fg:x="74208" fg:w="37"/><text x="74.8894%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (29 samples, 0.03%)</title><rect x="74.6475%" y="661" width="0.0292%" height="15" fill="rgb(218,54,1)" fg:x="74216" fg:w="29"/><text x="74.8975%" y="671.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (13 samples, 0.01%)</title><rect x="74.6636%" y="645" width="0.0131%" height="15" fill="rgb(243,209,39)" fg:x="74232" fg:w="13"/><text x="74.9136%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.01%)</title><rect x="74.7098%" y="629" width="0.0101%" height="15" fill="rgb(206,75,33)" fg:x="74278" fg:w="10"/><text x="74.9598%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (33 samples, 0.03%)</title><rect x="74.6887%" y="661" width="0.0332%" height="15" fill="rgb(223,108,18)" fg:x="74257" fg:w="33"/><text x="74.9387%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (19 samples, 0.02%)</title><rect x="74.7028%" y="645" width="0.0191%" height="15" fill="rgb(244,89,31)" fg:x="74271" fg:w="19"/><text x="74.9528%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (61 samples, 0.06%)</title><rect x="74.6867%" y="677" width="0.0614%" height="15" fill="rgb(222,167,27)" fg:x="74255" fg:w="61"/><text x="74.9367%" y="687.50"></text></g><g><title>hashbrown::raw::h2 (26 samples, 0.03%)</title><rect x="74.7219%" y="661" width="0.0262%" height="15" fill="rgb(247,41,16)" fg:x="74290" fg:w="26"/><text x="74.9719%" y="671.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.01%)</title><rect x="74.7340%" y="645" width="0.0141%" height="15" fill="rgb(233,168,40)" fg:x="74302" fg:w="14"/><text x="74.9840%" y="655.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.01%)</title><rect x="74.7380%" y="629" width="0.0101%" height="15" fill="rgb(205,211,8)" fg:x="74306" fg:w="10"/><text x="74.9880%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (73 samples, 0.07%)</title><rect x="74.6766%" y="693" width="0.0734%" height="15" fill="rgb(238,105,11)" fg:x="74245" fg:w="73"/><text x="74.9266%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,744 samples, 2.76%)</title><rect x="71.9911%" y="741" width="2.7600%" height="15" fill="rgb(223,142,52)" fg:x="71575" fg:w="2744"/><text x="72.2411%" y="751.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,732 samples, 2.75%)</title><rect x="72.0032%" y="725" width="2.7479%" height="15" fill="rgb(238,51,33)" fg:x="71587" fg:w="2732"/><text x="72.2532%" y="735.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,720 samples, 1.73%)</title><rect x="73.0211%" y="709" width="1.7300%" height="15" fill="rgb(231,188,43)" fg:x="72599" fg:w="1720"/><text x="73.2711%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="74.7511%" y="709" width="0.0131%" height="15" fill="rgb(216,92,17)" fg:x="74319" fg:w="13"/><text x="75.0011%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new (12 samples, 0.01%)</title><rect x="74.7521%" y="693" width="0.0121%" height="15" fill="rgb(228,2,40)" fg:x="74320" fg:w="12"/><text x="75.0021%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.01%)</title><rect x="74.7521%" y="677" width="0.0121%" height="15" fill="rgb(226,73,15)" fg:x="74320" fg:w="12"/><text x="75.0021%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="74.7521%" y="661" width="0.0121%" height="15" fill="rgb(227,66,46)" fg:x="74320" fg:w="12"/><text x="75.0021%" y="671.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (13,145 samples, 13.22%)</title><rect x="61.5477%" y="789" width="13.2214%" height="15" fill="rgb(209,71,6)" fg:x="61192" fg:w="13145"/><text x="61.7977%" y="799.50">bytecode_verifier::c..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (13,145 samples, 13.22%)</title><rect x="61.5477%" y="773" width="13.2214%" height="15" fill="rgb(246,100,25)" fg:x="61192" fg:w="13145"/><text x="61.7977%" y="783.50">bytecode_verifier::c..</text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (13,145 samples, 13.22%)</title><rect x="61.5477%" y="757" width="13.2214%" height="15" fill="rgb(248,185,27)" fg:x="61192" fg:w="13145"/><text x="61.7977%" y="767.50">bytecode_verifier::c..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (18 samples, 0.02%)</title><rect x="74.7511%" y="741" width="0.0181%" height="15" fill="rgb(225,118,47)" fg:x="74319" fg:w="18"/><text x="75.0011%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (18 samples, 0.02%)</title><rect x="74.7511%" y="725" width="0.0181%" height="15" fill="rgb(220,185,44)" fg:x="74319" fg:w="18"/><text x="75.0011%" y="735.50"></text></g><g><title>bcs::de::Deserializer::next (18 samples, 0.02%)</title><rect x="74.7903%" y="597" width="0.0181%" height="15" fill="rgb(227,95,24)" fg:x="74358" fg:w="18"/><text x="75.0403%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="74.7983%" y="581" width="0.0101%" height="15" fill="rgb(252,84,24)" fg:x="74366" fg:w="10"/><text x="75.0483%" y="591.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (27 samples, 0.03%)</title><rect x="74.7832%" y="613" width="0.0272%" height="15" fill="rgb(240,34,44)" fg:x="74351" fg:w="27"/><text x="75.0332%" y="623.50"></text></g><g><title>&lt;&amp;move_core_types::value::MoveTypeLayout as serde::de::DeserializeSeed&gt;::deserialize (38 samples, 0.04%)</title><rect x="74.7732%" y="677" width="0.0382%" height="15" fill="rgb(209,72,54)" fg:x="74341" fg:w="38"/><text x="75.0232%" y="687.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (30 samples, 0.03%)</title><rect x="74.7812%" y="661" width="0.0302%" height="15" fill="rgb(226,19,45)" fg:x="74349" fg:w="30"/><text x="75.0312%" y="671.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (30 samples, 0.03%)</title><rect x="74.7812%" y="645" width="0.0302%" height="15" fill="rgb(246,7,45)" fg:x="74349" fg:w="30"/><text x="75.0312%" y="655.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (30 samples, 0.03%)</title><rect x="74.7812%" y="629" width="0.0302%" height="15" fill="rgb(225,45,2)" fg:x="74349" fg:w="30"/><text x="75.0312%" y="639.50"></text></g><g><title>bytecode_verifier::constants::verify_module (45 samples, 0.05%)</title><rect x="74.7692%" y="789" width="0.0453%" height="15" fill="rgb(221,80,29)" fg:x="74337" fg:w="45"/><text x="75.0192%" y="799.50"></text></g><g><title>bytecode_verifier::constants::verify_module_impl (45 samples, 0.05%)</title><rect x="74.7692%" y="773" width="0.0453%" height="15" fill="rgb(228,11,19)" fg:x="74337" fg:w="45"/><text x="75.0192%" y="783.50"></text></g><g><title>bytecode_verifier::constants::verify_constant (45 samples, 0.05%)</title><rect x="74.7692%" y="757" width="0.0453%" height="15" fill="rgb(243,17,21)" fg:x="74337" fg:w="45"/><text x="75.0192%" y="767.50"></text></g><g><title>bytecode_verifier::constants::verify_constant_data (45 samples, 0.05%)</title><rect x="74.7692%" y="741" width="0.0453%" height="15" fill="rgb(243,88,8)" fg:x="74337" fg:w="45"/><text x="75.0192%" y="751.50"></text></g><g><title>move_binary_format::constant::&lt;impl move_binary_format::file_format::Constant&gt;::deserialize_constant (45 samples, 0.05%)</title><rect x="74.7692%" y="725" width="0.0453%" height="15" fill="rgb(214,17,9)" fg:x="74337" fg:w="45"/><text x="75.0192%" y="735.50"></text></g><g><title>move_core_types::value::MoveValue::simple_deserialize (43 samples, 0.04%)</title><rect x="74.7712%" y="709" width="0.0432%" height="15" fill="rgb(232,169,15)" fg:x="74339" fg:w="43"/><text x="75.0212%" y="719.50"></text></g><g><title>bcs::de::from_bytes_seed (42 samples, 0.04%)</title><rect x="74.7722%" y="693" width="0.0422%" height="15" fill="rgb(232,86,53)" fg:x="74340" fg:w="42"/><text x="75.0222%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (14 samples, 0.01%)</title><rect x="74.8335%" y="645" width="0.0141%" height="15" fill="rgb(222,100,4)" fg:x="74401" fg:w="14"/><text x="75.0835%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="74.8335%" y="629" width="0.0141%" height="15" fill="rgb(253,151,38)" fg:x="74401" fg:w="14"/><text x="75.0835%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.01%)</title><rect x="74.8335%" y="613" width="0.0141%" height="15" fill="rgb(238,215,29)" fg:x="74401" fg:w="14"/><text x="75.0835%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (14 samples, 0.01%)</title><rect x="74.8335%" y="597" width="0.0141%" height="15" fill="rgb(205,128,53)" fg:x="74401" fg:w="14"/><text x="75.0835%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.02%)</title><rect x="74.8476%" y="645" width="0.0151%" height="15" fill="rgb(248,183,14)" fg:x="74415" fg:w="15"/><text x="75.0976%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (43 samples, 0.04%)</title><rect x="74.8335%" y="677" width="0.0432%" height="15" fill="rgb(244,172,35)" fg:x="74401" fg:w="43"/><text x="75.0835%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (43 samples, 0.04%)</title><rect x="74.8335%" y="661" width="0.0432%" height="15" fill="rgb(234,93,19)" fg:x="74401" fg:w="43"/><text x="75.0835%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="74.8627%" y="645" width="0.0141%" height="15" fill="rgb(227,109,7)" fg:x="74430" fg:w="14"/><text x="75.1127%" y="655.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::get_or_add_node (52 samples, 0.05%)</title><rect x="74.8295%" y="693" width="0.0523%" height="15" fill="rgb(233,136,54)" fg:x="74397" fg:w="52"/><text x="75.0795%" y="703.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::add_edge (57 samples, 0.06%)</title><rect x="74.8295%" y="709" width="0.0573%" height="15" fill="rgb(233,19,40)" fg:x="74397" fg:w="57"/><text x="75.0795%" y="719.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_call (69 samples, 0.07%)</title><rect x="74.8185%" y="725" width="0.0694%" height="15" fill="rgb(247,41,18)" fg:x="74386" fg:w="69"/><text x="75.0685%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="74.8909%" y="677" width="0.0181%" height="15" fill="rgb(220,34,34)" fg:x="74458" fg:w="18"/><text x="75.1409%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="74.8949%" y="661" width="0.0141%" height="15" fill="rgb(222,135,32)" fg:x="74462" fg:w="14"/><text x="75.1449%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="74.8949%" y="645" width="0.0141%" height="15" fill="rgb(214,80,19)" fg:x="74462" fg:w="14"/><text x="75.1449%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="74.8949%" y="629" width="0.0141%" height="15" fill="rgb(234,54,46)" fg:x="74462" fg:w="14"/><text x="75.1449%" y="639.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph (114 samples, 0.11%)</title><rect x="74.8144%" y="757" width="0.1147%" height="15" fill="rgb(251,48,23)" fg:x="74382" fg:w="114"/><text x="75.0644%" y="767.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_function_def (112 samples, 0.11%)</title><rect x="74.8164%" y="741" width="0.1127%" height="15" fill="rgb(254,109,52)" fg:x="74384" fg:w="112"/><text x="75.0664%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (38 samples, 0.04%)</title><rect x="74.8909%" y="725" width="0.0382%" height="15" fill="rgb(240,186,19)" fg:x="74458" fg:w="38"/><text x="75.1409%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (38 samples, 0.04%)</title><rect x="74.8909%" y="709" width="0.0382%" height="15" fill="rgb(246,187,17)" fg:x="74458" fg:w="38"/><text x="75.1409%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.04%)</title><rect x="74.8909%" y="693" width="0.0382%" height="15" fill="rgb(212,21,5)" fg:x="74458" fg:w="38"/><text x="75.1409%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.02%)</title><rect x="74.9090%" y="677" width="0.0201%" height="15" fill="rgb(225,185,18)" fg:x="74476" fg:w="20"/><text x="75.1590%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="74.9110%" y="661" width="0.0181%" height="15" fill="rgb(245,114,17)" fg:x="74478" fg:w="18"/><text x="75.1610%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="74.9402%" y="485" width="0.0171%" height="15" fill="rgb(223,164,24)" fg:x="74507" fg:w="17"/><text x="75.1902%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (17 samples, 0.02%)</title><rect x="74.9402%" y="469" width="0.0171%" height="15" fill="rgb(211,228,3)" fg:x="74507" fg:w="17"/><text x="75.1902%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.02%)</title><rect x="74.9402%" y="453" width="0.0171%" height="15" fill="rgb(223,16,38)" fg:x="74507" fg:w="17"/><text x="75.1902%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (14 samples, 0.01%)</title><rect x="74.9432%" y="437" width="0.0141%" height="15" fill="rgb(207,31,54)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="74.9432%" y="421" width="0.0141%" height="15" fill="rgb(220,39,11)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="431.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components::_{{closure}}::_{{closure}}::_{{closure}} (14 samples, 0.01%)</title><rect x="74.9432%" y="405" width="0.0141%" height="15" fill="rgb(235,185,0)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (14 samples, 0.01%)</title><rect x="74.9432%" y="389" width="0.0141%" height="15" fill="rgb(249,39,18)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (14 samples, 0.01%)</title><rect x="74.9432%" y="373" width="0.0141%" height="15" fill="rgb(240,110,33)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.01%)</title><rect x="74.9432%" y="357" width="0.0141%" height="15" fill="rgb(210,92,42)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.01%)</title><rect x="74.9432%" y="341" width="0.0141%" height="15" fill="rgb(218,215,28)" fg:x="74510" fg:w="14"/><text x="75.1932%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="74.9391%" y="565" width="0.0241%" height="15" fill="rgb(238,215,36)" fg:x="74506" fg:w="24"/><text x="75.1891%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="74.9391%" y="549" width="0.0241%" height="15" fill="rgb(220,31,10)" fg:x="74506" fg:w="24"/><text x="75.1891%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="74.9391%" y="533" width="0.0241%" height="15" fill="rgb(212,93,14)" fg:x="74506" fg:w="24"/><text x="75.1891%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="74.9402%" y="517" width="0.0231%" height="15" fill="rgb(254,207,2)" fg:x="74507" fg:w="23"/><text x="75.1902%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="74.9402%" y="501" width="0.0231%" height="15" fill="rgb(205,57,44)" fg:x="74507" fg:w="23"/><text x="75.1902%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.02%)</title><rect x="74.9663%" y="501" width="0.0221%" height="15" fill="rgb(226,151,19)" fg:x="74533" fg:w="22"/><text x="75.2163%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.02%)</title><rect x="74.9663%" y="485" width="0.0221%" height="15" fill="rgb(230,72,30)" fg:x="74533" fg:w="22"/><text x="75.2163%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.02%)</title><rect x="74.9663%" y="469" width="0.0221%" height="15" fill="rgb(244,0,8)" fg:x="74533" fg:w="22"/><text x="75.2163%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.02%)</title><rect x="74.9673%" y="453" width="0.0211%" height="15" fill="rgb(230,192,6)" fg:x="74534" fg:w="21"/><text x="75.2173%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.02%)</title><rect x="74.9673%" y="437" width="0.0211%" height="15" fill="rgb(233,207,13)" fg:x="74534" fg:w="21"/><text x="75.2173%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (20 samples, 0.02%)</title><rect x="74.9683%" y="421" width="0.0201%" height="15" fill="rgb(206,227,7)" fg:x="74535" fg:w="20"/><text x="75.2183%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (20 samples, 0.02%)</title><rect x="74.9683%" y="405" width="0.0201%" height="15" fill="rgb(213,217,25)" fg:x="74535" fg:w="20"/><text x="75.2183%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (20 samples, 0.02%)</title><rect x="74.9683%" y="389" width="0.0201%" height="15" fill="rgb(249,75,4)" fg:x="74535" fg:w="20"/><text x="75.2183%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (20 samples, 0.02%)</title><rect x="74.9683%" y="373" width="0.0201%" height="15" fill="rgb(225,114,18)" fg:x="74535" fg:w="20"/><text x="75.2183%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="74.9683%" y="357" width="0.0201%" height="15" fill="rgb(211,162,40)" fg:x="74535" fg:w="20"/><text x="75.2183%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.06%)</title><rect x="74.9391%" y="581" width="0.0624%" height="15" fill="rgb(206,49,29)" fg:x="74506" fg:w="62"/><text x="75.1891%" y="591.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="74.9633%" y="565" width="0.0382%" height="15" fill="rgb(244,8,6)" fg:x="74530" fg:w="38"/><text x="75.2133%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (35 samples, 0.04%)</title><rect x="74.9663%" y="549" width="0.0352%" height="15" fill="rgb(231,194,28)" fg:x="74533" fg:w="35"/><text x="75.2163%" y="559.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (35 samples, 0.04%)</title><rect x="74.9663%" y="533" width="0.0352%" height="15" fill="rgb(210,69,5)" fg:x="74533" fg:w="35"/><text x="75.2163%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (35 samples, 0.04%)</title><rect x="74.9663%" y="517" width="0.0352%" height="15" fill="rgb(216,186,12)" fg:x="74533" fg:w="35"/><text x="75.2163%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (12 samples, 0.01%)</title><rect x="74.9894%" y="501" width="0.0121%" height="15" fill="rgb(238,61,15)" fg:x="74556" fg:w="12"/><text x="75.2394%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="74.9894%" y="485" width="0.0121%" height="15" fill="rgb(226,104,1)" fg:x="74556" fg:w="12"/><text x="75.2394%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.01%)</title><rect x="74.9894%" y="469" width="0.0121%" height="15" fill="rgb(229,128,15)" fg:x="74556" fg:w="12"/><text x="75.2394%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (11 samples, 0.01%)</title><rect x="74.9904%" y="453" width="0.0111%" height="15" fill="rgb(247,110,15)" fg:x="74557" fg:w="11"/><text x="75.2404%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.09%)</title><rect x="74.9291%" y="677" width="0.0895%" height="15" fill="rgb(210,74,48)" fg:x="74496" fg:w="89"/><text x="75.1791%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (89 samples, 0.09%)</title><rect x="74.9291%" y="661" width="0.0895%" height="15" fill="rgb(246,121,10)" fg:x="74496" fg:w="89"/><text x="75.1791%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89 samples, 0.09%)</title><rect x="74.9291%" y="645" width="0.0895%" height="15" fill="rgb(214,156,37)" fg:x="74496" fg:w="89"/><text x="75.1791%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (87 samples, 0.09%)</title><rect x="74.9311%" y="629" width="0.0875%" height="15" fill="rgb(214,210,34)" fg:x="74498" fg:w="87"/><text x="75.1811%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (85 samples, 0.09%)</title><rect x="74.9331%" y="613" width="0.0855%" height="15" fill="rgb(237,93,35)" fg:x="74500" fg:w="85"/><text x="75.1831%" y="623.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components::_{{closure}} (85 samples, 0.09%)</title><rect x="74.9331%" y="597" width="0.0855%" height="15" fill="rgb(206,36,8)" fg:x="74500" fg:w="85"/><text x="75.1831%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (91 samples, 0.09%)</title><rect x="74.9291%" y="741" width="0.0915%" height="15" fill="rgb(208,151,12)" fg:x="74496" fg:w="91"/><text x="75.1791%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (91 samples, 0.09%)</title><rect x="74.9291%" y="725" width="0.0915%" height="15" fill="rgb(225,133,52)" fg:x="74496" fg:w="91"/><text x="75.1791%" y="735.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (91 samples, 0.09%)</title><rect x="74.9291%" y="709" width="0.0915%" height="15" fill="rgb(231,71,53)" fg:x="74496" fg:w="91"/><text x="75.1791%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (91 samples, 0.09%)</title><rect x="74.9291%" y="693" width="0.0915%" height="15" fill="rgb(243,76,21)" fg:x="74496" fg:w="91"/><text x="75.1791%" y="703.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::find_non_trivial_components (127 samples, 0.13%)</title><rect x="74.9291%" y="757" width="0.1277%" height="15" fill="rgb(252,144,3)" fg:x="74496" fg:w="127"/><text x="75.1791%" y="767.50"></text></g><g><title>petgraph::algo::tarjan_scc (36 samples, 0.04%)</title><rect x="75.0206%" y="741" width="0.0362%" height="15" fill="rgb(231,199,10)" fg:x="74587" fg:w="36"/><text x="75.2706%" y="751.50"></text></g><g><title>petgraph::algo::tarjan_scc::scc_visit (29 samples, 0.03%)</title><rect x="75.0277%" y="725" width="0.0292%" height="15" fill="rgb(215,18,11)" fg:x="74594" fg:w="29"/><text x="75.2777%" y="735.50"></text></g><g><title>petgraph::algo::tarjan_scc::scc_visit (12 samples, 0.01%)</title><rect x="75.0448%" y="709" width="0.0121%" height="15" fill="rgb(241,65,24)" fg:x="74611" fg:w="12"/><text x="75.2948%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="75.0609%" y="517" width="0.0101%" height="15" fill="rgb(251,192,38)" fg:x="74627" fg:w="10"/><text x="75.3109%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="75.0609%" y="501" width="0.0101%" height="15" fill="rgb(205,9,35)" fg:x="74627" fg:w="10"/><text x="75.3109%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.01%)</title><rect x="75.0609%" y="485" width="0.0101%" height="15" fill="rgb(229,225,49)" fg:x="74627" fg:w="10"/><text x="75.3109%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.01%)</title><rect x="75.0598%" y="533" width="0.0131%" height="15" fill="rgb(207,125,39)" fg:x="74626" fg:w="13"/><text x="75.3098%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (18 samples, 0.02%)</title><rect x="75.0729%" y="533" width="0.0181%" height="15" fill="rgb(222,78,19)" fg:x="74639" fg:w="18"/><text x="75.3229%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.02%)</title><rect x="75.0729%" y="517" width="0.0181%" height="15" fill="rgb(248,207,20)" fg:x="74639" fg:w="18"/><text x="75.3229%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.01%)</title><rect x="75.0810%" y="501" width="0.0101%" height="15" fill="rgb(205,103,49)" fg:x="74647" fg:w="10"/><text x="75.3310%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (47 samples, 0.05%)</title><rect x="75.0588%" y="613" width="0.0473%" height="15" fill="rgb(216,42,28)" fg:x="74625" fg:w="47"/><text x="75.3088%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (47 samples, 0.05%)</title><rect x="75.0588%" y="597" width="0.0473%" height="15" fill="rgb(213,205,53)" fg:x="74625" fg:w="47"/><text x="75.3088%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (46 samples, 0.05%)</title><rect x="75.0598%" y="581" width="0.0463%" height="15" fill="rgb(239,140,53)" fg:x="74626" fg:w="46"/><text x="75.3098%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (46 samples, 0.05%)</title><rect x="75.0598%" y="565" width="0.0463%" height="15" fill="rgb(248,95,9)" fg:x="74626" fg:w="46"/><text x="75.3098%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.05%)</title><rect x="75.0598%" y="549" width="0.0463%" height="15" fill="rgb(254,58,47)" fg:x="74626" fg:w="46"/><text x="75.3098%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.02%)</title><rect x="75.0910%" y="533" width="0.0151%" height="15" fill="rgb(234,227,14)" fg:x="74657" fg:w="15"/><text x="75.3410%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (49 samples, 0.05%)</title><rect x="75.0588%" y="677" width="0.0493%" height="15" fill="rgb(205,192,45)" fg:x="74625" fg:w="49"/><text x="75.3088%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.05%)</title><rect x="75.0588%" y="661" width="0.0493%" height="15" fill="rgb(253,187,31)" fg:x="74625" fg:w="49"/><text x="75.3088%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.05%)</title><rect x="75.0588%" y="645" width="0.0493%" height="15" fill="rgb(222,6,32)" fg:x="74625" fg:w="49"/><text x="75.3088%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (49 samples, 0.05%)</title><rect x="75.0588%" y="629" width="0.0493%" height="15" fill="rgb(249,190,19)" fg:x="74625" fg:w="49"/><text x="75.3088%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 0.06%)</title><rect x="75.0568%" y="741" width="0.0614%" height="15" fill="rgb(251,28,20)" fg:x="74623" fg:w="61"/><text x="75.3068%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (61 samples, 0.06%)</title><rect x="75.0568%" y="725" width="0.0614%" height="15" fill="rgb(210,223,40)" fg:x="74623" fg:w="61"/><text x="75.3068%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (61 samples, 0.06%)</title><rect x="75.0568%" y="709" width="0.0614%" height="15" fill="rgb(216,137,22)" fg:x="74623" fg:w="61"/><text x="75.3068%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (61 samples, 0.06%)</title><rect x="75.0568%" y="693" width="0.0614%" height="15" fill="rgb(247,39,34)" fg:x="74623" fg:w="61"/><text x="75.3068%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (10 samples, 0.01%)</title><rect x="75.1081%" y="677" width="0.0101%" height="15" fill="rgb(239,43,50)" fg:x="74674" fg:w="10"/><text x="75.3581%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="75.1081%" y="661" width="0.0101%" height="15" fill="rgb(241,212,9)" fg:x="74674" fg:w="10"/><text x="75.3581%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.01%)</title><rect x="75.1081%" y="645" width="0.0101%" height="15" fill="rgb(205,8,2)" fg:x="74674" fg:w="10"/><text x="75.3581%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (10 samples, 0.01%)</title><rect x="75.1081%" y="629" width="0.0101%" height="15" fill="rgb(217,173,54)" fg:x="74674" fg:w="10"/><text x="75.3581%" y="639.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module (303 samples, 0.30%)</title><rect x="74.8144%" y="789" width="0.3048%" height="15" fill="rgb(208,149,52)" fg:x="74382" fg:w="303"/><text x="75.0644%" y="799.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module_impl (303 samples, 0.30%)</title><rect x="74.8144%" y="773" width="0.3048%" height="15" fill="rgb(239,99,40)" fg:x="74382" fg:w="303"/><text x="75.0644%" y="783.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::new (62 samples, 0.06%)</title><rect x="75.0568%" y="757" width="0.0624%" height="15" fill="rgb(233,214,26)" fg:x="74623" fg:w="62"/><text x="75.3068%" y="767.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_fields (26 samples, 0.03%)</title><rect x="75.1282%" y="757" width="0.0262%" height="15" fill="rgb(231,225,37)" fg:x="74694" fg:w="26"/><text x="75.3782%" y="767.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.01%)</title><rect x="75.1745%" y="725" width="0.0101%" height="15" fill="rgb(252,55,35)" fg:x="74740" fg:w="10"/><text x="75.4245%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="75.1846%" y="725" width="0.0131%" height="15" fill="rgb(239,43,18)" fg:x="74750" fg:w="13"/><text x="75.4346%" y="735.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_type_instantiation (11 samples, 0.01%)</title><rect x="75.1976%" y="725" width="0.0111%" height="15" fill="rgb(251,125,49)" fg:x="74763" fg:w="11"/><text x="75.4476%" y="735.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_instantiation (45 samples, 0.05%)</title><rect x="75.1735%" y="741" width="0.0453%" height="15" fill="rgb(212,83,54)" fg:x="74739" fg:w="45"/><text x="75.4235%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (10 samples, 0.01%)</title><rect x="75.2087%" y="725" width="0.0101%" height="15" fill="rgb(250,75,6)" fg:x="74774" fg:w="10"/><text x="75.4587%" y="735.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.01%)</title><rect x="75.2258%" y="725" width="0.0101%" height="15" fill="rgb(252,36,40)" fg:x="74791" fg:w="10"/><text x="75.4758%" y="735.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_signature (44 samples, 0.04%)</title><rect x="75.2188%" y="741" width="0.0443%" height="15" fill="rgb(230,91,51)" fg:x="74784" fg:w="44"/><text x="75.4688%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (12 samples, 0.01%)</title><rect x="75.2510%" y="725" width="0.0121%" height="15" fill="rgb(212,92,28)" fg:x="74816" fg:w="12"/><text x="75.5010%" y="735.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signature_at (11 samples, 0.01%)</title><rect x="75.2520%" y="709" width="0.0111%" height="15" fill="rgb(227,13,22)" fg:x="74817" fg:w="11"/><text x="75.5020%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.01%)</title><rect x="75.2530%" y="693" width="0.0101%" height="15" fill="rgb(239,204,32)" fg:x="74818" fg:w="10"/><text x="75.5030%" y="703.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_function_signatures (114 samples, 0.11%)</title><rect x="75.1544%" y="757" width="0.1147%" height="15" fill="rgb(228,49,41)" fg:x="74720" fg:w="114"/><text x="75.4044%" y="767.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::check_signature (29 samples, 0.03%)</title><rect x="75.2711%" y="741" width="0.0292%" height="15" fill="rgb(206,95,6)" fg:x="74836" fg:w="29"/><text x="75.5211%" y="751.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_signature_pool (34 samples, 0.03%)</title><rect x="75.2691%" y="757" width="0.0342%" height="15" fill="rgb(251,20,14)" fg:x="74834" fg:w="34"/><text x="75.5191%" y="767.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module (184 samples, 0.19%)</title><rect x="75.1192%" y="789" width="0.1851%" height="15" fill="rgb(214,99,28)" fg:x="74685" fg:w="184"/><text x="75.3692%" y="799.50"></text></g><g><title>bytecode_verifier::signature::SignatureChecker::verify_module_impl (184 samples, 0.19%)</title><rect x="75.1192%" y="773" width="0.1851%" height="15" fill="rgb(239,122,54)" fg:x="74685" fg:w="184"/><text x="75.3692%" y="783.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (16 samples, 0.02%)</title><rect x="75.3113%" y="725" width="0.0161%" height="15" fill="rgb(218,217,46)" fg:x="74876" fg:w="16"/><text x="75.5613%" y="735.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_signature_token (10 samples, 0.01%)</title><rect x="75.3173%" y="709" width="0.0101%" height="15" fill="rgb(249,106,28)" fg:x="74882" fg:w="10"/><text x="75.5673%" y="719.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::add_struct_defs (23 samples, 0.02%)</title><rect x="75.3063%" y="741" width="0.0231%" height="15" fill="rgb(250,158,18)" fg:x="74871" fg:w="23"/><text x="75.5563%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="75.3385%" y="693" width="0.0111%" height="15" fill="rgb(226,137,29)" fg:x="74903" fg:w="11"/><text x="75.5885%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="75.3385%" y="677" width="0.0111%" height="15" fill="rgb(210,188,1)" fg:x="74903" fg:w="11"/><text x="75.5885%" y="687.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (16 samples, 0.02%)</title><rect x="75.3586%" y="677" width="0.0161%" height="15" fill="rgb(227,84,42)" fg:x="74923" fg:w="16"/><text x="75.6086%" y="687.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (16 samples, 0.02%)</title><rect x="75.3586%" y="661" width="0.0161%" height="15" fill="rgb(222,147,48)" fg:x="74923" fg:w="16"/><text x="75.6086%" y="671.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (12 samples, 0.01%)</title><rect x="75.3626%" y="645" width="0.0121%" height="15" fill="rgb(241,150,43)" fg:x="74927" fg:w="12"/><text x="75.6126%" y="655.50"></text></g><g><title>&lt;petgraph::graphmap::GraphMap&lt;N,E,Ty&gt; as core::iter::traits::collect::Extend&lt;Item&gt;&gt;::extend (49 samples, 0.05%)</title><rect x="75.3385%" y="709" width="0.0493%" height="15" fill="rgb(206,139,52)" fg:x="74903" fg:w="49"/><text x="75.5885%" y="719.50"></text></g><g><title>petgraph::graphmap::GraphMap&lt;N,E,Ty&gt;::add_edge (36 samples, 0.04%)</title><rect x="75.3515%" y="693" width="0.0362%" height="15" fill="rgb(230,63,14)" fg:x="74916" fg:w="36"/><text x="75.6015%" y="703.50"></text></g><g><title>indexmap::map::core::Entry&lt;K,V&gt;::or_insert_with (13 samples, 0.01%)</title><rect x="75.3747%" y="677" width="0.0131%" height="15" fill="rgb(247,8,20)" fg:x="74939" fg:w="13"/><text x="75.6247%" y="687.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::build (85 samples, 0.09%)</title><rect x="75.3043%" y="757" width="0.0855%" height="15" fill="rgb(213,115,4)" fg:x="74869" fg:w="85"/><text x="75.5543%" y="767.50"></text></g><g><title>petgraph::graphmap::GraphMap&lt;N,E,Ty&gt;::from_edges (51 samples, 0.05%)</title><rect x="75.3385%" y="741" width="0.0513%" height="15" fill="rgb(241,79,49)" fg:x="74903" fg:w="51"/><text x="75.5885%" y="751.50"></text></g><g><title>&lt;petgraph::graphmap::GraphMap&lt;N,E,Ty&gt; as core::iter::traits::collect::FromIterator&lt;Item&gt;&gt;::from_iter (51 samples, 0.05%)</title><rect x="75.3385%" y="725" width="0.0513%" height="15" fill="rgb(222,42,35)" fg:x="74903" fg:w="51"/><text x="75.5885%" y="735.50"></text></g><g><title>bytecode_verifier::struct_defs::StructDefGraphBuilder::new (12 samples, 0.01%)</title><rect x="75.3898%" y="757" width="0.0121%" height="15" fill="rgb(247,59,23)" fg:x="74954" fg:w="12"/><text x="75.6398%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (12 samples, 0.01%)</title><rect x="75.3898%" y="741" width="0.0121%" height="15" fill="rgb(247,93,18)" fg:x="74954" fg:w="12"/><text x="75.6398%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;N,S&gt; as petgraph::visit::VisitMap&lt;N&gt;&gt;::is_visited (12 samples, 0.01%)</title><rect x="75.4179%" y="709" width="0.0121%" height="15" fill="rgb(249,107,47)" fg:x="74982" fg:w="12"/><text x="75.6679%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (12 samples, 0.01%)</title><rect x="75.4179%" y="693" width="0.0121%" height="15" fill="rgb(219,27,1)" fg:x="74982" fg:w="12"/><text x="75.6679%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (12 samples, 0.01%)</title><rect x="75.4179%" y="677" width="0.0121%" height="15" fill="rgb(217,82,32)" fg:x="74982" fg:w="12"/><text x="75.6679%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (12 samples, 0.01%)</title><rect x="75.4179%" y="661" width="0.0121%" height="15" fill="rgb(250,129,47)" fg:x="74982" fg:w="12"/><text x="75.6679%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.01%)</title><rect x="75.4179%" y="645" width="0.0121%" height="15" fill="rgb(253,88,35)" fg:x="74982" fg:w="12"/><text x="75.6679%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.01%)</title><rect x="75.4380%" y="645" width="0.0101%" height="15" fill="rgb(245,221,14)" fg:x="75002" fg:w="10"/><text x="75.6880%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.01%)</title><rect x="75.4380%" y="629" width="0.0101%" height="15" fill="rgb(217,119,54)" fg:x="75002" fg:w="10"/><text x="75.6880%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;N,S&gt; as petgraph::visit::VisitMap&lt;N&gt;&gt;::visit (25 samples, 0.03%)</title><rect x="75.4300%" y="709" width="0.0251%" height="15" fill="rgb(247,128,31)" fg:x="74994" fg:w="25"/><text x="75.6800%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (25 samples, 0.03%)</title><rect x="75.4300%" y="693" width="0.0251%" height="15" fill="rgb(211,99,22)" fg:x="74994" fg:w="25"/><text x="75.6800%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (25 samples, 0.03%)</title><rect x="75.4300%" y="677" width="0.0251%" height="15" fill="rgb(212,20,17)" fg:x="74994" fg:w="25"/><text x="75.6800%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.03%)</title><rect x="75.4300%" y="661" width="0.0251%" height="15" fill="rgb(209,159,29)" fg:x="74994" fg:w="25"/><text x="75.6800%" y="671.50"></text></g><g><title>petgraph::visit::traversal::Dfs&lt;N,VM&gt;::next (23 samples, 0.02%)</title><rect x="75.4592%" y="709" width="0.0231%" height="15" fill="rgb(222,177,53)" fg:x="75023" fg:w="23"/><text x="75.7092%" y="719.50"></text></g><g><title>petgraph::algo::toposort::_{{closure}} (78 samples, 0.08%)</title><rect x="75.4048%" y="725" width="0.0785%" height="15" fill="rgb(234,46,43)" fg:x="74969" fg:w="78"/><text x="75.6548%" y="735.50"></text></g><g><title>bytecode_verifier::verifier::verify_module (14,469 samples, 14.55%)</title><rect x="60.9322%" y="805" width="14.5531%" height="15" fill="rgb(208,108,14)" fg:x="60580" fg:w="14469"/><text x="61.1822%" y="815.50">bytecode_verifier::ver..</text></g><g><title>bytecode_verifier::struct_defs::RecursiveStructDefChecker::verify_module (180 samples, 0.18%)</title><rect x="75.3043%" y="789" width="0.1810%" height="15" fill="rgb(226,78,53)" fg:x="74869" fg:w="180"/><text x="75.5543%" y="799.50"></text></g><g><title>bytecode_verifier::struct_defs::RecursiveStructDefChecker::verify_module_impl (180 samples, 0.18%)</title><rect x="75.3043%" y="773" width="0.1810%" height="15" fill="rgb(230,20,41)" fg:x="74869" fg:w="180"/><text x="75.5543%" y="783.50"></text></g><g><title>petgraph::algo::toposort (82 samples, 0.08%)</title><rect x="75.4028%" y="757" width="0.0825%" height="15" fill="rgb(213,195,35)" fg:x="74967" fg:w="82"/><text x="75.6528%" y="767.50"></text></g><g><title>petgraph::algo::with_dfs (82 samples, 0.08%)</title><rect x="75.4028%" y="741" width="0.0825%" height="15" fill="rgb(242,62,36)" fg:x="74967" fg:w="82"/><text x="75.6528%" y="751.50"></text></g><g><title>bytecode_verifier::verifier::verify_script (10 samples, 0.01%)</title><rect x="75.4853%" y="805" width="0.0101%" height="15" fill="rgb(222,210,37)" fg:x="75049" fg:w="10"/><text x="75.7353%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::align (41 samples, 0.04%)</title><rect x="75.4954%" y="805" width="0.0412%" height="15" fill="rgb(232,107,19)" fg:x="75059" fg:w="41"/><text x="75.7454%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::array (33 samples, 0.03%)</title><rect x="75.5366%" y="805" width="0.0332%" height="15" fill="rgb(235,85,17)" fg:x="75100" fg:w="33"/><text x="75.7866%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (56 samples, 0.06%)</title><rect x="75.5748%" y="805" width="0.0563%" height="15" fill="rgb(219,195,31)" fg:x="75138" fg:w="56"/><text x="75.8248%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::new (213 samples, 0.21%)</title><rect x="75.6311%" y="805" width="0.2142%" height="15" fill="rgb(231,183,30)" fg:x="75194" fg:w="213"/><text x="75.8811%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::padding_needed_for (19 samples, 0.02%)</title><rect x="75.8464%" y="805" width="0.0191%" height="15" fill="rgb(212,0,11)" fg:x="75408" fg:w="19"/><text x="76.0964%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::repeat (10 samples, 0.01%)</title><rect x="75.8655%" y="805" width="0.0101%" height="15" fill="rgb(249,53,54)" fg:x="75427" fg:w="10"/><text x="76.1155%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::size (86 samples, 0.09%)</title><rect x="75.8756%" y="805" width="0.0865%" height="15" fill="rgb(211,118,13)" fg:x="75437" fg:w="86"/><text x="76.1256%" y="815.50"></text></g><g><title>core::alloc::layout::size_align (93 samples, 0.09%)</title><rect x="75.9621%" y="805" width="0.0935%" height="15" fill="rgb(237,42,9)" fg:x="75523" fg:w="93"/><text x="76.2121%" y="815.50"></text></g><g><title>core::array::_&lt;impl [T: N]&gt;::as_mut_slice (21 samples, 0.02%)</title><rect x="76.0556%" y="805" width="0.0211%" height="15" fill="rgb(227,68,32)" fg:x="75616" fg:w="21"/><text x="76.3056%" y="815.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (10 samples, 0.01%)</title><rect x="76.0807%" y="805" width="0.0101%" height="15" fill="rgb(238,10,7)" fg:x="75641" fg:w="10"/><text x="76.3307%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (38 samples, 0.04%)</title><rect x="76.0918%" y="805" width="0.0382%" height="15" fill="rgb(224,42,12)" fg:x="75652" fg:w="38"/><text x="76.3418%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.02%)</title><rect x="76.1320%" y="805" width="0.0161%" height="15" fill="rgb(252,190,5)" fg:x="75692" fg:w="16"/><text x="76.3820%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.01%)</title><rect x="76.1481%" y="805" width="0.0101%" height="15" fill="rgb(220,214,39)" fg:x="75708" fg:w="10"/><text x="76.3981%" y="815.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (45 samples, 0.05%)</title><rect x="76.1612%" y="805" width="0.0453%" height="15" fill="rgb(247,98,4)" fg:x="75721" fg:w="45"/><text x="76.4112%" y="815.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u16&gt;::clone (12 samples, 0.01%)</title><rect x="76.2125%" y="805" width="0.0121%" height="15" fill="rgb(211,60,12)" fg:x="75772" fg:w="12"/><text x="76.4625%" y="815.50"></text></g><g><title>core::cmp::Ord::max (35 samples, 0.04%)</title><rect x="76.2366%" y="805" width="0.0352%" height="15" fill="rgb(224,42,10)" fg:x="75796" fg:w="35"/><text x="76.4866%" y="815.50"></text></g><g><title>core::cmp::Ord::min (21 samples, 0.02%)</title><rect x="76.2719%" y="805" width="0.0211%" height="15" fill="rgb(217,167,4)" fg:x="75831" fg:w="21"/><text x="76.5219%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u16&gt;::cmp (19 samples, 0.02%)</title><rect x="76.2970%" y="805" width="0.0191%" height="15" fill="rgb(253,18,17)" fg:x="75856" fg:w="19"/><text x="76.5470%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u8&gt;::cmp (22 samples, 0.02%)</title><rect x="76.3161%" y="805" width="0.0221%" height="15" fill="rgb(249,186,44)" fg:x="75875" fg:w="22"/><text x="76.5661%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (41 samples, 0.04%)</title><rect x="76.3382%" y="805" width="0.0412%" height="15" fill="rgb(254,124,54)" fg:x="75897" fg:w="41"/><text x="76.5882%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (10 samples, 0.01%)</title><rect x="76.3915%" y="805" width="0.0101%" height="15" fill="rgb(220,124,39)" fg:x="75950" fg:w="10"/><text x="76.6415%" y="815.50"></text></g><g><title>core::cmp::max (11 samples, 0.01%)</title><rect x="76.4187%" y="805" width="0.0111%" height="15" fill="rgb(225,96,46)" fg:x="75977" fg:w="11"/><text x="76.6687%" y="815.50"></text></g><g><title>core::cmp::min (11 samples, 0.01%)</title><rect x="76.4368%" y="805" width="0.0111%" height="15" fill="rgb(221,106,12)" fg:x="75995" fg:w="11"/><text x="76.6868%" y="815.50"></text></g><g><title>core::cmp::min_by (37 samples, 0.04%)</title><rect x="76.4479%" y="805" width="0.0372%" height="15" fill="rgb(227,133,23)" fg:x="76006" fg:w="37"/><text x="76.6979%" y="815.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (69 samples, 0.07%)</title><rect x="76.4921%" y="805" width="0.0694%" height="15" fill="rgb(216,44,52)" fg:x="76050" fg:w="69"/><text x="76.7421%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (44 samples, 0.04%)</title><rect x="76.5666%" y="805" width="0.0443%" height="15" fill="rgb(239,149,7)" fg:x="76124" fg:w="44"/><text x="76.8166%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (32 samples, 0.03%)</title><rect x="76.6158%" y="805" width="0.0322%" height="15" fill="rgb(211,157,31)" fg:x="76173" fg:w="32"/><text x="76.8658%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.01%)</title><rect x="76.6480%" y="805" width="0.0141%" height="15" fill="rgb(206,215,22)" fg:x="76205" fg:w="14"/><text x="76.8980%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u16 (15 samples, 0.02%)</title><rect x="76.6702%" y="805" width="0.0151%" height="15" fill="rgb(208,113,15)" fg:x="76227" fg:w="15"/><text x="76.9202%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="76.7013%" y="805" width="0.0101%" height="15" fill="rgb(207,189,15)" fg:x="76258" fg:w="10"/><text x="76.9513%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (57 samples, 0.06%)</title><rect x="76.7134%" y="805" width="0.0573%" height="15" fill="rgb(231,115,4)" fg:x="76270" fg:w="57"/><text x="76.9634%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.02%)</title><rect x="76.7778%" y="805" width="0.0241%" height="15" fill="rgb(253,117,2)" fg:x="76334" fg:w="24"/><text x="77.0278%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (10 samples, 0.01%)</title><rect x="76.8019%" y="805" width="0.0101%" height="15" fill="rgb(248,48,24)" fg:x="76358" fg:w="10"/><text x="77.0519%" y="815.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.02%)</title><rect x="76.8120%" y="805" width="0.0161%" height="15" fill="rgb(241,28,46)" fg:x="76368" fg:w="16"/><text x="77.0620%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (20 samples, 0.02%)</title><rect x="76.8281%" y="805" width="0.0201%" height="15" fill="rgb(216,165,52)" fg:x="76384" fg:w="20"/><text x="77.0781%" y="815.50"></text></g><g><title>core::intrinsics::copy (25 samples, 0.03%)</title><rect x="76.8482%" y="805" width="0.0251%" height="15" fill="rgb(220,222,34)" fg:x="76404" fg:w="25"/><text x="77.0982%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (431 samples, 0.43%)</title><rect x="76.8733%" y="805" width="0.4335%" height="15" fill="rgb(247,222,49)" fg:x="76429" fg:w="431"/><text x="77.1233%" y="815.50"></text></g><g><title>core::iter::adapters::cloned::Cloned&lt;I&gt;::new (10 samples, 0.01%)</title><rect x="77.3139%" y="805" width="0.0101%" height="15" fill="rgb(240,10,31)" fg:x="76867" fg:w="10"/><text x="77.5639%" y="815.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (10 samples, 0.01%)</title><rect x="77.3239%" y="805" width="0.0101%" height="15" fill="rgb(221,199,35)" fg:x="76877" fg:w="10"/><text x="77.5739%" y="815.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (29 samples, 0.03%)</title><rect x="77.3380%" y="581" width="0.0292%" height="15" fill="rgb(230,223,11)" fg:x="76891" fg:w="29"/><text x="77.5880%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.03%)</title><rect x="77.3380%" y="565" width="0.0292%" height="15" fill="rgb(218,82,45)" fg:x="76891" fg:w="29"/><text x="77.5880%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.03%)</title><rect x="77.3380%" y="549" width="0.0292%" height="15" fill="rgb(233,213,33)" fg:x="76891" fg:w="29"/><text x="77.5880%" y="559.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::as_ref (24 samples, 0.02%)</title><rect x="77.3672%" y="581" width="0.0241%" height="15" fill="rgb(210,143,52)" fg:x="76920" fg:w="24"/><text x="77.6172%" y="591.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (24 samples, 0.02%)</title><rect x="77.3672%" y="565" width="0.0241%" height="15" fill="rgb(206,95,4)" fg:x="76920" fg:w="24"/><text x="77.6172%" y="575.50"></text></g><g><title>crossbeam_epoch::atomic::low_bits (24 samples, 0.02%)</title><rect x="77.3672%" y="549" width="0.0241%" height="15" fill="rgb(246,164,46)" fg:x="76920" fg:w="24"/><text x="77.6172%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (89 samples, 0.09%)</title><rect x="77.3380%" y="805" width="0.0895%" height="15" fill="rgb(213,210,47)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (89 samples, 0.09%)</title><rect x="77.3380%" y="789" width="0.0895%" height="15" fill="rgb(210,12,38)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="799.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (89 samples, 0.09%)</title><rect x="77.3380%" y="773" width="0.0895%" height="15" fill="rgb(252,192,54)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="783.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (89 samples, 0.09%)</title><rect x="77.3380%" y="757" width="0.0895%" height="15" fill="rgb(242,92,6)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="767.50"></text></g><g><title>crossbeam_epoch::default::pin (89 samples, 0.09%)</title><rect x="77.3380%" y="741" width="0.0895%" height="15" fill="rgb(253,154,15)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="751.50"></text></g><g><title>crossbeam_epoch::default::with_handle (89 samples, 0.09%)</title><rect x="77.3380%" y="725" width="0.0895%" height="15" fill="rgb(209,20,43)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (89 samples, 0.09%)</title><rect x="77.3380%" y="709" width="0.0895%" height="15" fill="rgb(232,28,49)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (89 samples, 0.09%)</title><rect x="77.3380%" y="693" width="0.0895%" height="15" fill="rgb(248,131,53)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="703.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (89 samples, 0.09%)</title><rect x="77.3380%" y="677" width="0.0895%" height="15" fill="rgb(214,16,30)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="687.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (89 samples, 0.09%)</title><rect x="77.3380%" y="661" width="0.0895%" height="15" fill="rgb(245,16,0)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="671.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (89 samples, 0.09%)</title><rect x="77.3380%" y="645" width="0.0895%" height="15" fill="rgb(245,17,35)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="655.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (89 samples, 0.09%)</title><rect x="77.3380%" y="629" width="0.0895%" height="15" fill="rgb(249,27,53)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (89 samples, 0.09%)</title><rect x="77.3380%" y="613" width="0.0895%" height="15" fill="rgb(214,73,24)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="623.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.09%)</title><rect x="77.3380%" y="597" width="0.0895%" height="15" fill="rgb(223,84,37)" fg:x="76891" fg:w="89"/><text x="77.5880%" y="607.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (36 samples, 0.04%)</title><rect x="77.3913%" y="581" width="0.0362%" height="15" fill="rgb(210,109,28)" fg:x="76944" fg:w="36"/><text x="77.6413%" y="591.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (36 samples, 0.04%)</title><rect x="77.3913%" y="565" width="0.0362%" height="15" fill="rgb(208,186,6)" fg:x="76944" fg:w="36"/><text x="77.6413%" y="575.50"></text></g><g><title>crossbeam_epoch::atomic::low_bits (36 samples, 0.04%)</title><rect x="77.3913%" y="549" width="0.0362%" height="15" fill="rgb(235,201,30)" fg:x="76944" fg:w="36"/><text x="77.6413%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::trailing_zeros (10 samples, 0.01%)</title><rect x="77.4175%" y="533" width="0.0101%" height="15" fill="rgb(216,198,48)" fg:x="76970" fg:w="10"/><text x="77.6675%" y="543.50"></text></g><g><title>core::iter::adapters::filter_map::FilterMap&lt;I,F&gt;::new (13 samples, 0.01%)</title><rect x="77.4275%" y="805" width="0.0131%" height="15" fill="rgb(254,186,25)" fg:x="76980" fg:w="13"/><text x="77.6775%" y="815.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (35 samples, 0.04%)</title><rect x="77.4436%" y="805" width="0.0352%" height="15" fill="rgb(227,87,5)" fg:x="76996" fg:w="35"/><text x="77.6936%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold (11 samples, 0.01%)</title><rect x="77.4788%" y="805" width="0.0111%" height="15" fill="rgb(236,205,25)" fg:x="77031" fg:w="11"/><text x="77.7288%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (13 samples, 0.01%)</title><rect x="77.4899%" y="805" width="0.0131%" height="15" fill="rgb(229,99,32)" fg:x="77042" fg:w="13"/><text x="77.7399%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (15 samples, 0.02%)</title><rect x="77.5070%" y="805" width="0.0151%" height="15" fill="rgb(231,177,31)" fg:x="77059" fg:w="15"/><text x="77.7570%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_dependencies_expect_no_missing_dependencies::_{{closure}} (14 samples, 0.01%)</title><rect x="77.5080%" y="789" width="0.0141%" height="15" fill="rgb(246,15,2)" fg:x="77060" fg:w="14"/><text x="77.7580%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_expect_not_missing (14 samples, 0.01%)</title><rect x="77.5080%" y="773" width="0.0141%" height="15" fill="rgb(207,39,15)" fg:x="77060" fg:w="14"/><text x="77.7580%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (14 samples, 0.01%)</title><rect x="77.5080%" y="757" width="0.0141%" height="15" fill="rgb(207,44,9)" fg:x="77060" fg:w="14"/><text x="77.7580%" y="767.50"></text></g><g><title>core::iter::adapters::rev::Rev&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="77.5261%" y="805" width="0.0121%" height="15" fill="rgb(225,224,33)" fg:x="77078" fg:w="12"/><text x="77.7761%" y="815.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccess::size (21 samples, 0.02%)</title><rect x="77.5402%" y="805" width="0.0211%" height="15" fill="rgb(252,151,3)" fg:x="77092" fg:w="21"/><text x="77.7902%" y="815.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (14 samples, 0.01%)</title><rect x="77.5613%" y="805" width="0.0141%" height="15" fill="rgb(211,140,13)" fg:x="77113" fg:w="14"/><text x="77.8113%" y="815.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.01%)</title><rect x="77.5794%" y="805" width="0.0111%" height="15" fill="rgb(239,225,17)" fg:x="77131" fg:w="11"/><text x="77.8294%" y="815.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (39 samples, 0.04%)</title><rect x="77.5915%" y="805" width="0.0392%" height="15" fill="rgb(223,170,52)" fg:x="77143" fg:w="39"/><text x="77.8415%" y="815.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (34 samples, 0.03%)</title><rect x="77.6317%" y="805" width="0.0342%" height="15" fill="rgb(212,64,21)" fg:x="77183" fg:w="34"/><text x="77.8817%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (203 samples, 0.20%)</title><rect x="77.6659%" y="805" width="0.2042%" height="15" fill="rgb(236,126,48)" fg:x="77217" fg:w="203"/><text x="77.9159%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check (64 samples, 0.06%)</title><rect x="77.8701%" y="805" width="0.0644%" height="15" fill="rgb(209,135,11)" fg:x="77420" fg:w="64"/><text x="78.1201%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (84 samples, 0.08%)</title><rect x="77.9345%" y="805" width="0.0845%" height="15" fill="rgb(228,126,40)" fg:x="77484" fg:w="84"/><text x="78.1845%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check (11 samples, 0.01%)</title><rect x="78.0280%" y="805" width="0.0111%" height="15" fill="rgb(205,196,36)" fg:x="77577" fg:w="11"/><text x="78.2780%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (70 samples, 0.07%)</title><rect x="78.0401%" y="805" width="0.0704%" height="15" fill="rgb(243,160,33)" fg:x="77589" fg:w="70"/><text x="78.2901%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (100 samples, 0.10%)</title><rect x="78.1105%" y="805" width="0.1006%" height="15" fill="rgb(210,84,20)" fg:x="77659" fg:w="100"/><text x="78.3605%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter_map (12 samples, 0.01%)</title><rect x="78.2141%" y="805" width="0.0121%" height="15" fill="rgb(228,213,30)" fg:x="77762" fg:w="12"/><text x="78.4641%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.02%)</title><rect x="78.2432%" y="805" width="0.0191%" height="15" fill="rgb(252,33,45)" fg:x="77791" fg:w="19"/><text x="78.4932%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (27 samples, 0.03%)</title><rect x="78.2754%" y="805" width="0.0272%" height="15" fill="rgb(254,227,20)" fg:x="77823" fg:w="27"/><text x="78.5254%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (50 samples, 0.05%)</title><rect x="78.3066%" y="805" width="0.0503%" height="15" fill="rgb(228,192,2)" fg:x="77854" fg:w="50"/><text x="78.5566%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="78.5108%" y="581" width="0.0262%" height="15" fill="rgb(233,32,8)" fg:x="78057" fg:w="26"/><text x="78.7608%" y="591.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (28 samples, 0.03%)</title><rect x="78.5108%" y="789" width="0.0282%" height="15" fill="rgb(220,146,47)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (28 samples, 0.03%)</title><rect x="78.5108%" y="773" width="0.0282%" height="15" fill="rgb(246,194,1)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (28 samples, 0.03%)</title><rect x="78.5108%" y="757" width="0.0282%" height="15" fill="rgb(218,203,9)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="767.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (28 samples, 0.03%)</title><rect x="78.5108%" y="741" width="0.0282%" height="15" fill="rgb(237,97,14)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="751.50"></text></g><g><title>crossbeam_epoch::default::pin (28 samples, 0.03%)</title><rect x="78.5108%" y="725" width="0.0282%" height="15" fill="rgb(239,76,15)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="735.50"></text></g><g><title>crossbeam_epoch::default::with_handle (28 samples, 0.03%)</title><rect x="78.5108%" y="709" width="0.0282%" height="15" fill="rgb(222,53,45)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.03%)</title><rect x="78.5108%" y="693" width="0.0282%" height="15" fill="rgb(237,88,5)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="703.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (28 samples, 0.03%)</title><rect x="78.5108%" y="677" width="0.0282%" height="15" fill="rgb(218,223,35)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="687.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (28 samples, 0.03%)</title><rect x="78.5108%" y="661" width="0.0282%" height="15" fill="rgb(243,229,38)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="671.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (28 samples, 0.03%)</title><rect x="78.5108%" y="645" width="0.0282%" height="15" fill="rgb(240,75,41)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="655.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (28 samples, 0.03%)</title><rect x="78.5108%" y="629" width="0.0282%" height="15" fill="rgb(209,110,37)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (28 samples, 0.03%)</title><rect x="78.5108%" y="613" width="0.0282%" height="15" fill="rgb(221,130,46)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (28 samples, 0.03%)</title><rect x="78.5108%" y="597" width="0.0282%" height="15" fill="rgb(237,160,20)" fg:x="78057" fg:w="28"/><text x="78.7608%" y="607.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="78.5470%" y="565" width="0.0131%" height="15" fill="rgb(234,126,24)" fg:x="78093" fg:w="13"/><text x="78.7970%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (199 samples, 0.20%)</title><rect x="78.3670%" y="805" width="0.2002%" height="15" fill="rgb(207,177,9)" fg:x="77914" fg:w="199"/><text x="78.6170%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="78.5460%" y="789" width="0.0211%" height="15" fill="rgb(231,191,33)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="799.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (21 samples, 0.02%)</title><rect x="78.5460%" y="773" width="0.0211%" height="15" fill="rgb(207,42,1)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (21 samples, 0.02%)</title><rect x="78.5460%" y="757" width="0.0211%" height="15" fill="rgb(218,34,50)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="767.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (21 samples, 0.02%)</title><rect x="78.5460%" y="741" width="0.0211%" height="15" fill="rgb(254,126,39)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="751.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (21 samples, 0.02%)</title><rect x="78.5460%" y="725" width="0.0211%" height="15" fill="rgb(251,17,26)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="735.50"></text></g><g><title>crossbeam_epoch::default::pin (21 samples, 0.02%)</title><rect x="78.5460%" y="709" width="0.0211%" height="15" fill="rgb(252,215,34)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (21 samples, 0.02%)</title><rect x="78.5460%" y="693" width="0.0211%" height="15" fill="rgb(217,120,44)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.02%)</title><rect x="78.5460%" y="677" width="0.0211%" height="15" fill="rgb(211,31,11)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="687.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (21 samples, 0.02%)</title><rect x="78.5460%" y="661" width="0.0211%" height="15" fill="rgb(222,69,51)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="671.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (21 samples, 0.02%)</title><rect x="78.5460%" y="645" width="0.0211%" height="15" fill="rgb(215,229,42)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="655.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (21 samples, 0.02%)</title><rect x="78.5460%" y="629" width="0.0211%" height="15" fill="rgb(212,102,15)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (21 samples, 0.02%)</title><rect x="78.5460%" y="613" width="0.0211%" height="15" fill="rgb(205,179,41)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (21 samples, 0.02%)</title><rect x="78.5460%" y="597" width="0.0211%" height="15" fill="rgb(219,148,46)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="607.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (21 samples, 0.02%)</title><rect x="78.5460%" y="581" width="0.0211%" height="15" fill="rgb(243,40,19)" fg:x="78092" fg:w="21"/><text x="78.7960%" y="591.50"></text></g><g><title>core::mem::drop (39 samples, 0.04%)</title><rect x="78.5711%" y="805" width="0.0392%" height="15" fill="rgb(208,206,34)" fg:x="78117" fg:w="39"/><text x="78.8211%" y="815.50"></text></g><g><title>core::mem::forget (77 samples, 0.08%)</title><rect x="78.6104%" y="805" width="0.0774%" height="15" fill="rgb(244,184,38)" fg:x="78156" fg:w="77"/><text x="78.8604%" y="815.50"></text></g><g><title>core::mem::replace (108 samples, 0.11%)</title><rect x="78.6888%" y="805" width="0.1086%" height="15" fill="rgb(244,151,47)" fg:x="78234" fg:w="108"/><text x="78.9388%" y="815.50"></text></g><g><title>core::mem::swap (20 samples, 0.02%)</title><rect x="78.7995%" y="805" width="0.0201%" height="15" fill="rgb(236,134,42)" fg:x="78344" fg:w="20"/><text x="79.0495%" y="815.50"></text></g><g><title>core::mem::take (151 samples, 0.15%)</title><rect x="78.8196%" y="805" width="0.1519%" height="15" fill="rgb(233,93,22)" fg:x="78364" fg:w="151"/><text x="79.0696%" y="815.50"></text></g><g><title>core::num::&lt;impl isize&gt;::overflowing_neg (12 samples, 0.01%)</title><rect x="78.9715%" y="805" width="0.0121%" height="15" fill="rgb(211,202,10)" fg:x="78515" fg:w="12"/><text x="79.2215%" y="815.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (70 samples, 0.07%)</title><rect x="78.9835%" y="805" width="0.0704%" height="15" fill="rgb(240,63,8)" fg:x="78527" fg:w="70"/><text x="79.2335%" y="815.50"></text></g><g><title>core::num::&lt;impl u16&gt;::unchecked_add (14 samples, 0.01%)</title><rect x="79.0590%" y="805" width="0.0141%" height="15" fill="rgb(214,9,4)" fg:x="78602" fg:w="14"/><text x="79.3090%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.03%)</title><rect x="79.0751%" y="805" width="0.0302%" height="15" fill="rgb(243,66,45)" fg:x="78618" fg:w="30"/><text x="79.3251%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (79 samples, 0.08%)</title><rect x="79.1133%" y="805" width="0.0795%" height="15" fill="rgb(220,50,42)" fg:x="78656" fg:w="79"/><text x="79.3633%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (22 samples, 0.02%)</title><rect x="79.1927%" y="805" width="0.0221%" height="15" fill="rgb(220,134,27)" fg:x="78735" fg:w="22"/><text x="79.4427%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.02%)</title><rect x="79.2149%" y="805" width="0.0161%" height="15" fill="rgb(246,151,50)" fg:x="78757" fg:w="16"/><text x="79.4649%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (12 samples, 0.01%)</title><rect x="79.2531%" y="805" width="0.0121%" height="15" fill="rgb(238,216,27)" fg:x="78795" fg:w="12"/><text x="79.5031%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (16 samples, 0.02%)</title><rect x="79.2652%" y="805" width="0.0161%" height="15" fill="rgb(250,92,11)" fg:x="78807" fg:w="16"/><text x="79.5152%" y="815.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (25 samples, 0.03%)</title><rect x="79.2812%" y="805" width="0.0251%" height="15" fill="rgb(248,183,6)" fg:x="78823" fg:w="25"/><text x="79.5312%" y="815.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (27 samples, 0.03%)</title><rect x="79.3064%" y="805" width="0.0272%" height="15" fill="rgb(211,204,50)" fg:x="78848" fg:w="27"/><text x="79.5564%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (72 samples, 0.07%)</title><rect x="79.3366%" y="805" width="0.0724%" height="15" fill="rgb(252,55,47)" fg:x="78878" fg:w="72"/><text x="79.5866%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19 samples, 0.02%)</title><rect x="79.4110%" y="805" width="0.0191%" height="15" fill="rgb(240,198,32)" fg:x="78952" fg:w="19"/><text x="79.6610%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.01%)</title><rect x="79.4301%" y="805" width="0.0101%" height="15" fill="rgb(224,203,19)" fg:x="78971" fg:w="10"/><text x="79.6801%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (70 samples, 0.07%)</title><rect x="79.4512%" y="805" width="0.0704%" height="15" fill="rgb(205,27,16)" fg:x="78992" fg:w="70"/><text x="79.7012%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (53 samples, 0.05%)</title><rect x="79.5216%" y="805" width="0.0533%" height="15" fill="rgb(224,226,17)" fg:x="79062" fg:w="53"/><text x="79.7716%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (12 samples, 0.01%)</title><rect x="79.5749%" y="805" width="0.0121%" height="15" fill="rgb(205,216,54)" fg:x="79115" fg:w="12"/><text x="79.8249%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (51 samples, 0.05%)</title><rect x="79.5870%" y="805" width="0.0513%" height="15" fill="rgb(248,168,46)" fg:x="79127" fg:w="51"/><text x="79.8370%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (19 samples, 0.02%)</title><rect x="79.6383%" y="805" width="0.0191%" height="15" fill="rgb(226,111,45)" fg:x="79178" fg:w="19"/><text x="79.8883%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (34 samples, 0.03%)</title><rect x="79.6574%" y="805" width="0.0342%" height="15" fill="rgb(231,15,9)" fg:x="79197" fg:w="34"/><text x="79.9074%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (242 samples, 0.24%)</title><rect x="79.6916%" y="805" width="0.2434%" height="15" fill="rgb(243,168,3)" fg:x="79231" fg:w="242"/><text x="79.9416%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (217 samples, 0.22%)</title><rect x="79.9360%" y="805" width="0.2183%" height="15" fill="rgb(221,220,54)" fg:x="79474" fg:w="217"/><text x="80.1860%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (138 samples, 0.14%)</title><rect x="80.1593%" y="805" width="0.1388%" height="15" fill="rgb(232,174,38)" fg:x="79696" fg:w="138"/><text x="80.4093%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (89 samples, 0.09%)</title><rect x="80.2981%" y="805" width="0.0895%" height="15" fill="rgb(205,14,38)" fg:x="79834" fg:w="89"/><text x="80.5481%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_unchecked (116 samples, 0.12%)</title><rect x="80.3907%" y="805" width="0.1167%" height="15" fill="rgb(234,89,19)" fg:x="79926" fg:w="116"/><text x="80.6407%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (326 samples, 0.33%)</title><rect x="80.5073%" y="805" width="0.3279%" height="15" fill="rgb(216,68,51)" fg:x="80042" fg:w="326"/><text x="80.7573%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (186 samples, 0.19%)</title><rect x="80.8372%" y="805" width="0.1871%" height="15" fill="rgb(213,49,2)" fg:x="80370" fg:w="186"/><text x="81.0872%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (104 samples, 0.10%)</title><rect x="81.0253%" y="805" width="0.1046%" height="15" fill="rgb(242,146,30)" fg:x="80557" fg:w="104"/><text x="81.2753%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (174 samples, 0.18%)</title><rect x="81.1299%" y="805" width="0.1750%" height="15" fill="rgb(224,188,11)" fg:x="80661" fg:w="174"/><text x="81.3799%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (160 samples, 0.16%)</title><rect x="81.3049%" y="805" width="0.1609%" height="15" fill="rgb(213,159,11)" fg:x="80835" fg:w="160"/><text x="81.5549%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.01%)</title><rect x="81.4659%" y="805" width="0.0111%" height="15" fill="rgb(229,13,31)" fg:x="80995" fg:w="11"/><text x="81.7159%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (76 samples, 0.08%)</title><rect x="81.4769%" y="805" width="0.0764%" height="15" fill="rgb(209,103,11)" fg:x="81006" fg:w="76"/><text x="81.7269%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (78 samples, 0.08%)</title><rect x="81.5534%" y="805" width="0.0785%" height="15" fill="rgb(206,3,4)" fg:x="81082" fg:w="78"/><text x="81.8034%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="81.6318%" y="805" width="0.0121%" height="15" fill="rgb(252,10,49)" fg:x="81160" fg:w="12"/><text x="81.8818%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;)&gt; (15 samples, 0.02%)</title><rect x="81.6620%" y="805" width="0.0151%" height="15" fill="rgb(217,160,32)" fg:x="81190" fg:w="15"/><text x="81.9120%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = u16&gt;&gt; (10 samples, 0.01%)</title><rect x="81.7505%" y="805" width="0.0101%" height="15" fill="rgb(249,196,0)" fg:x="81278" fg:w="10"/><text x="82.0005%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt; (28 samples, 0.03%)</title><rect x="81.7726%" y="805" width="0.0282%" height="15" fill="rgb(213,17,48)" fg:x="81300" fg:w="28"/><text x="82.0226%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="81.8008%" y="805" width="0.0181%" height="15" fill="rgb(206,42,46)" fg:x="81328" fg:w="18"/><text x="82.0508%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="81.8199%" y="805" width="0.0201%" height="15" fill="rgb(212,105,24)" fg:x="81347" fg:w="20"/><text x="82.0699%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;bytecode_verifier::reference_safety::abstract_state::Label,alloc::collections::btree::map::BTreeMap&lt;borrow_graph::references::RefID,()&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="81.8451%" y="805" width="0.0141%" height="15" fill="rgb(243,216,30)" fg:x="81372" fg:w="14"/><text x="82.0951%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_binary_format::file_format::StructDefinitionIndex,()&gt;&gt; (13 samples, 0.01%)</title><rect x="81.8591%" y="805" width="0.0131%" height="15" fill="rgb(207,121,3)" fg:x="81386" fg:w="13"/><text x="82.1091%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u8,bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (22 samples, 0.02%)</title><rect x="81.8833%" y="805" width="0.0221%" height="15" fill="rgb(249,78,0)" fg:x="81410" fg:w="22"/><text x="82.1333%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;borrow_graph::references::RefID,borrow_graph::references::Ref&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="81.9235%" y="805" width="0.0111%" height="15" fill="rgb(244,151,32)" fg:x="81450" fg:w="11"/><text x="82.1735%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;,()&gt;&gt; (10 samples, 0.01%)</title><rect x="81.9688%" y="805" width="0.0101%" height="15" fill="rgb(228,63,25)" fg:x="81495" fg:w="10"/><text x="82.2188%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;borrow_graph::references::RefID,()&gt;&gt; (14 samples, 0.01%)</title><rect x="81.9788%" y="805" width="0.0141%" height="15" fill="rgb(231,158,23)" fg:x="81505" fg:w="14"/><text x="82.2288%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;borrow_graph::references::RefID&gt;&gt; (12 samples, 0.01%)</title><rect x="82.0020%" y="805" width="0.0121%" height="15" fill="rgb(248,107,23)" fg:x="81528" fg:w="12"/><text x="82.2520%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;&amp;borrow_graph::references::RefID&gt;&gt; (12 samples, 0.01%)</title><rect x="82.0251%" y="805" width="0.0121%" height="15" fill="rgb(215,168,21)" fg:x="81551" fg:w="12"/><text x="82.2751%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::IntoIter&lt;borrow_graph::references::RefID&gt;&gt; (11 samples, 0.01%)</title><rect x="82.0462%" y="805" width="0.0111%" height="15" fill="rgb(227,83,22)" fg:x="81572" fg:w="11"/><text x="82.2962%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (13 samples, 0.01%)</title><rect x="82.0824%" y="805" width="0.0131%" height="15" fill="rgb(217,118,43)" fg:x="81608" fg:w="13"/><text x="82.3324%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u16&gt;&gt; (14 samples, 0.01%)</title><rect x="82.1589%" y="805" width="0.0141%" height="15" fill="rgb(229,220,41)" fg:x="81684" fg:w="14"/><text x="82.4089%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt;&gt; (17 samples, 0.02%)</title><rect x="82.1840%" y="805" width="0.0171%" height="15" fill="rgb(254,146,46)" fg:x="81709" fg:w="17"/><text x="82.4340%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (20 samples, 0.02%)</title><rect x="82.2102%" y="805" width="0.0201%" height="15" fill="rgb(233,208,31)" fg:x="81735" fg:w="20"/><text x="82.4602%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::graph::BorrowGraph&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (17 samples, 0.02%)</title><rect x="82.2313%" y="805" width="0.0171%" height="15" fill="rgb(222,162,7)" fg:x="81756" fg:w="17"/><text x="82.4813%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdge&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (18 samples, 0.02%)</title><rect x="82.2484%" y="805" width="0.0181%" height="15" fill="rgb(230,117,45)" fg:x="81773" fg:w="18"/><text x="82.4984%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;borrow_graph::references::BorrowEdges&lt;(),bytecode_verifier::reference_safety::abstract_state::Label&gt;&gt; (13 samples, 0.01%)</title><rect x="82.2665%" y="805" width="0.0131%" height="15" fill="rgb(239,163,6)" fg:x="81791" fg:w="13"/><text x="82.5165%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::reference_safety::abstract_state::AbstractState&gt; (23 samples, 0.02%)</title><rect x="82.2927%" y="805" width="0.0231%" height="15" fill="rgb(246,130,17)" fg:x="81817" fg:w="23"/><text x="82.5427%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt; as alloc::vec::spec_extend::SpecExtend&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;move_binary_format::file_format::SignatureToken&gt;,bytecode_verifier::reference_safety::abstract_state::AbstractState::call::{{closure}}&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="82.3460%" y="805" width="0.0161%" height="15" fill="rgb(216,84,5)" fg:x="81870" fg:w="16"/><text x="82.5960%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,&lt;alloc::vec::Vec&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue&gt; as alloc::vec::spec_extend::SpecExtend&lt;bytecode_verifier::reference_safety::abstract_state::AbstractValue,core::iter::adapters::rev::Rev&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;move_binary_format::file_format::SignatureToken&gt;,bytecode_verifier::reference_safety::call::{{closure}}&gt;&gt;&gt;&gt;::spec_extend::{{closure}}&gt;::{{closure}}&gt; (19 samples, 0.02%)</title><rect x="82.3621%" y="805" width="0.0191%" height="15" fill="rgb(230,200,21)" fg:x="81886" fg:w="19"/><text x="82.6121%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::ops::range::RangeInclusive&lt;u16&gt;&gt; (11 samples, 0.01%)</title><rect x="82.3882%" y="805" width="0.0111%" height="15" fill="rgb(224,2,8)" fg:x="81912" fg:w="11"/><text x="82.6382%" y="815.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (96 samples, 0.10%)</title><rect x="82.5441%" y="805" width="0.0966%" height="15" fill="rgb(238,178,10)" fg:x="82067" fg:w="96"/><text x="82.7941%" y="815.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (70 samples, 0.07%)</title><rect x="82.6407%" y="805" width="0.0704%" height="15" fill="rgb(242,153,24)" fg:x="82163" fg:w="70"/><text x="82.8907%" y="815.50"></text></g><g><title>core::ptr::metadata::metadata (10 samples, 0.01%)</title><rect x="82.7111%" y="805" width="0.0101%" height="15" fill="rgb(242,32,48)" fg:x="82233" fg:w="10"/><text x="82.9611%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (241 samples, 0.24%)</title><rect x="82.7211%" y="805" width="0.2424%" height="15" fill="rgb(227,36,0)" fg:x="82243" fg:w="241"/><text x="82.9711%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (133 samples, 0.13%)</title><rect x="82.9635%" y="805" width="0.1338%" height="15" fill="rgb(251,33,35)" fg:x="82484" fg:w="133"/><text x="83.2135%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (21 samples, 0.02%)</title><rect x="83.0973%" y="805" width="0.0211%" height="15" fill="rgb(232,168,51)" fg:x="82617" fg:w="21"/><text x="83.3473%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (80 samples, 0.08%)</title><rect x="83.1194%" y="805" width="0.0805%" height="15" fill="rgb(228,56,10)" fg:x="82639" fg:w="80"/><text x="83.3694%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (253 samples, 0.25%)</title><rect x="83.1999%" y="805" width="0.2545%" height="15" fill="rgb(231,10,26)" fg:x="82719" fg:w="253"/><text x="83.4499%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (55 samples, 0.06%)</title><rect x="83.4544%" y="805" width="0.0553%" height="15" fill="rgb(226,202,12)" fg:x="82972" fg:w="55"/><text x="83.7044%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (40 samples, 0.04%)</title><rect x="83.5127%" y="805" width="0.0402%" height="15" fill="rgb(251,49,21)" fg:x="83030" fg:w="40"/><text x="83.7627%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (150 samples, 0.15%)</title><rect x="83.5529%" y="805" width="0.1509%" height="15" fill="rgb(206,228,28)" fg:x="83070" fg:w="150"/><text x="83.8029%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (80 samples, 0.08%)</title><rect x="83.7058%" y="805" width="0.0805%" height="15" fill="rgb(205,198,31)" fg:x="83222" fg:w="80"/><text x="83.9558%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (671 samples, 0.67%)</title><rect x="83.7893%" y="805" width="0.6749%" height="15" fill="rgb(213,69,1)" fg:x="83305" fg:w="671"/><text x="84.0393%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.01%)</title><rect x="84.4642%" y="805" width="0.0101%" height="15" fill="rgb(209,177,9)" fg:x="83976" fg:w="10"/><text x="84.7142%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (139 samples, 0.14%)</title><rect x="84.4743%" y="805" width="0.1398%" height="15" fill="rgb(227,119,30)" fg:x="83986" fg:w="139"/><text x="84.7243%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (47 samples, 0.05%)</title><rect x="84.6141%" y="805" width="0.0473%" height="15" fill="rgb(234,106,41)" fg:x="84125" fg:w="47"/><text x="84.8641%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (216 samples, 0.22%)</title><rect x="84.6613%" y="805" width="0.2173%" height="15" fill="rgb(244,103,47)" fg:x="84172" fg:w="216"/><text x="84.9113%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::as_non_null_ptr (12 samples, 0.01%)</title><rect x="84.8856%" y="805" width="0.0121%" height="15" fill="rgb(212,211,25)" fg:x="84395" fg:w="12"/><text x="85.1356%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::len (12 samples, 0.01%)</title><rect x="84.8977%" y="805" width="0.0121%" height="15" fill="rgb(208,63,53)" fg:x="84407" fg:w="12"/><text x="85.1477%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (36 samples, 0.04%)</title><rect x="84.9098%" y="805" width="0.0362%" height="15" fill="rgb(213,176,21)" fg:x="84419" fg:w="36"/><text x="85.1598%" y="815.50"></text></g><g><title>core::ptr::read (674 samples, 0.68%)</title><rect x="84.9460%" y="805" width="0.6779%" height="15" fill="rgb(243,124,12)" fg:x="84455" fg:w="674"/><text x="85.1960%" y="815.50"></text></g><g><title>core::ptr::slice_from_raw_parts (202 samples, 0.20%)</title><rect x="85.6239%" y="805" width="0.2032%" height="15" fill="rgb(239,2,35)" fg:x="85129" fg:w="202"/><text x="85.8739%" y="815.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (191 samples, 0.19%)</title><rect x="85.8271%" y="805" width="0.1921%" height="15" fill="rgb(253,169,22)" fg:x="85331" fg:w="191"/><text x="86.0771%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (210 samples, 0.21%)</title><rect x="86.0313%" y="805" width="0.2112%" height="15" fill="rgb(254,51,12)" fg:x="85534" fg:w="210"/><text x="86.2813%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ref (27 samples, 0.03%)</title><rect x="86.2425%" y="805" width="0.0272%" height="15" fill="rgb(244,17,47)" fg:x="85744" fg:w="27"/><text x="86.4925%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (27 samples, 0.03%)</title><rect x="86.2696%" y="805" width="0.0272%" height="15" fill="rgb(251,45,46)" fg:x="85771" fg:w="27"/><text x="86.5196%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (52 samples, 0.05%)</title><rect x="86.2968%" y="805" width="0.0523%" height="15" fill="rgb(223,87,43)" fg:x="85798" fg:w="52"/><text x="86.5468%" y="815.50"></text></g><g><title>core::ptr::write (220 samples, 0.22%)</title><rect x="86.3491%" y="805" width="0.2213%" height="15" fill="rgb(230,132,31)" fg:x="85850" fg:w="220"/><text x="86.5991%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (15 samples, 0.02%)</title><rect x="86.5744%" y="805" width="0.0151%" height="15" fill="rgb(206,99,1)" fg:x="86074" fg:w="15"/><text x="86.8244%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (16 samples, 0.02%)</title><rect x="86.5965%" y="805" width="0.0161%" height="15" fill="rgb(227,110,25)" fg:x="86096" fg:w="16"/><text x="86.8465%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (97 samples, 0.10%)</title><rect x="86.6126%" y="805" width="0.0976%" height="15" fill="rgb(217,182,7)" fg:x="86112" fg:w="97"/><text x="86.8626%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (65 samples, 0.07%)</title><rect x="86.7223%" y="805" width="0.0654%" height="15" fill="rgb(250,176,4)" fg:x="86221" fg:w="65"/><text x="86.9723%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (83 samples, 0.08%)</title><rect x="86.7876%" y="805" width="0.0835%" height="15" fill="rgb(244,98,30)" fg:x="86286" fg:w="83"/><text x="87.0376%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (238 samples, 0.24%)</title><rect x="86.8751%" y="805" width="0.2394%" height="15" fill="rgb(228,150,42)" fg:x="86373" fg:w="238"/><text x="87.1251%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (228 samples, 0.23%)</title><rect x="87.1145%" y="805" width="0.2293%" height="15" fill="rgb(231,91,46)" fg:x="86611" fg:w="228"/><text x="87.3645%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (83 samples, 0.08%)</title><rect x="87.3438%" y="805" width="0.0835%" height="15" fill="rgb(252,161,32)" fg:x="86839" fg:w="83"/><text x="87.5938%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (107 samples, 0.11%)</title><rect x="87.4283%" y="805" width="0.1076%" height="15" fill="rgb(236,69,41)" fg:x="86923" fg:w="107"/><text x="87.6783%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (10 samples, 0.01%)</title><rect x="87.5360%" y="805" width="0.0101%" height="15" fill="rgb(212,160,3)" fg:x="87030" fg:w="10"/><text x="87.7860%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (12 samples, 0.01%)</title><rect x="87.5470%" y="805" width="0.0121%" height="15" fill="rgb(216,5,50)" fg:x="87041" fg:w="12"/><text x="87.7970%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (56 samples, 0.06%)</title><rect x="87.5722%" y="805" width="0.0563%" height="15" fill="rgb(241,138,25)" fg:x="87066" fg:w="56"/><text x="87.8222%" y="815.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (218 samples, 0.22%)</title><rect x="87.6355%" y="805" width="0.2193%" height="15" fill="rgb(239,42,18)" fg:x="87129" fg:w="218"/><text x="87.8855%" y="815.50"></text></g><g><title>core::slice::raw::from_raw_parts (129 samples, 0.13%)</title><rect x="87.8548%" y="805" width="0.1297%" height="15" fill="rgb(239,40,7)" fg:x="87347" fg:w="129"/><text x="88.1048%" y="815.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (15 samples, 0.02%)</title><rect x="88.0278%" y="805" width="0.0151%" height="15" fill="rgb(239,11,31)" fg:x="87519" fg:w="15"/><text x="88.2778%" y="815.50"></text></g><g><title>crossbeam_epoch::default::with_handle (14 samples, 0.01%)</title><rect x="88.0731%" y="805" width="0.0141%" height="15" fill="rgb(224,77,40)" fg:x="87564" fg:w="14"/><text x="88.3231%" y="815.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (15 samples, 0.02%)</title><rect x="88.0992%" y="805" width="0.0151%" height="15" fill="rgb(226,15,5)" fg:x="87590" fg:w="15"/><text x="88.3492%" y="815.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (19 samples, 0.02%)</title><rect x="88.1274%" y="805" width="0.0191%" height="15" fill="rgb(254,188,5)" fg:x="87618" fg:w="19"/><text x="88.3774%" y="815.50"></text></g><g><title>diem_vm::diem_transaction_validator::validate_signature_checked_transaction (10 samples, 0.01%)</title><rect x="88.1837%" y="789" width="0.0101%" height="15" fill="rgb(241,148,52)" fg:x="87674" fg:w="10"/><text x="88.4337%" y="799.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_user_transaction (12 samples, 0.01%)</title><rect x="88.1827%" y="805" width="0.0121%" height="15" fill="rgb(251,48,36)" fg:x="87673" fg:w="12"/><text x="88.4327%" y="815.50"></text></g><g><title>diem_vm::diem_vm::DiemVMImpl::new (10 samples, 0.01%)</title><rect x="88.2099%" y="805" width="0.0101%" height="15" fill="rgb(243,83,13)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="815.50"></text></g><g><title>diem_vm::diem_vm::DiemVMImpl::load_configs_impl (10 samples, 0.01%)</title><rect x="88.2099%" y="789" width="0.0101%" height="15" fill="rgb(210,105,0)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="799.50"></text></g><g><title>diem_types::on_chain_config::OnChainConfig::fetch_config (10 samples, 0.01%)</title><rect x="88.2099%" y="773" width="0.0101%" height="15" fill="rgb(239,60,36)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.01%)</title><rect x="88.2099%" y="757" width="0.0101%" height="15" fill="rgb(210,20,0)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="767.50"></text></g><g><title>diem_types::on_chain_config::OnChainConfig::fetch_config::_{{closure}} (10 samples, 0.01%)</title><rect x="88.2099%" y="741" width="0.0101%" height="15" fill="rgb(244,26,53)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="751.50"></text></g><g><title>&lt;diem_types::on_chain_config::vm_config::VMConfig as diem_types::on_chain_config::OnChainConfig&gt;::deserialize_into_config (10 samples, 0.01%)</title><rect x="88.2099%" y="725" width="0.0101%" height="15" fill="rgb(240,100,49)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="735.50"></text></g><g><title>diem_types::on_chain_config::vm_config::CostTableInner::as_cost_table (10 samples, 0.01%)</title><rect x="88.2099%" y="709" width="0.0101%" height="15" fill="rgb(250,46,45)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="719.50"></text></g><g><title>bcs::de::from_bytes (10 samples, 0.01%)</title><rect x="88.2099%" y="693" width="0.0101%" height="15" fill="rgb(220,181,29)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="677" width="0.0101%" height="15" fill="rgb(213,137,33)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="687.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (10 samples, 0.01%)</title><rect x="88.2099%" y="661" width="0.0101%" height="15" fill="rgb(213,27,48)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="671.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="88.2099%" y="645" width="0.0101%" height="15" fill="rgb(245,180,39)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="655.50"></text></g><g><title>serde::de::SeqAccess::next_element (10 samples, 0.01%)</title><rect x="88.2099%" y="629" width="0.0101%" height="15" fill="rgb(212,158,42)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="639.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (10 samples, 0.01%)</title><rect x="88.2099%" y="613" width="0.0101%" height="15" fill="rgb(228,193,18)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="597" width="0.0101%" height="15" fill="rgb(245,172,29)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="607.50"></text></g><g><title>move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::GasCost&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="581" width="0.0101%" height="15" fill="rgb(207,98,24)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (10 samples, 0.01%)</title><rect x="88.2099%" y="565" width="0.0101%" height="15" fill="rgb(249,92,26)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="575.50"></text></g><g><title>&lt;move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::GasCost&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (10 samples, 0.01%)</title><rect x="88.2099%" y="549" width="0.0101%" height="15" fill="rgb(217,176,26)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (10 samples, 0.01%)</title><rect x="88.2099%" y="533" width="0.0101%" height="15" fill="rgb(221,8,39)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="543.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (10 samples, 0.01%)</title><rect x="88.2099%" y="517" width="0.0101%" height="15" fill="rgb(208,90,18)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="501" width="0.0101%" height="15" fill="rgb(207,202,30)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="511.50"></text></g><g><title>move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::InternalGasUnits&lt;GasCarrier&gt;&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="485" width="0.0101%" height="15" fill="rgb(231,124,22)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="495.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (10 samples, 0.01%)</title><rect x="88.2099%" y="469" width="0.0101%" height="15" fill="rgb(206,15,5)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="479.50"></text></g><g><title>&lt;move_core_types::gas_schedule::_::&lt;impl serde::de::Deserialize for move_core_types::gas_schedule::InternalGasUnits&lt;GasCarrier&gt;&gt;::deserialize::__Visitor&lt;GasCarrier&gt; as serde::de::Visitor&gt;::visit_newtype_struct (10 samples, 0.01%)</title><rect x="88.2099%" y="453" width="0.0101%" height="15" fill="rgb(239,16,52)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (10 samples, 0.01%)</title><rect x="88.2099%" y="437" width="0.0101%" height="15" fill="rgb(245,213,29)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (10 samples, 0.01%)</title><rect x="88.2099%" y="421" width="0.0101%" height="15" fill="rgb(213,203,36)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="431.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (10 samples, 0.01%)</title><rect x="88.2099%" y="405" width="0.0101%" height="15" fill="rgb(209,55,18)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="415.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (10 samples, 0.01%)</title><rect x="88.2099%" y="389" width="0.0101%" height="15" fill="rgb(207,133,49)" fg:x="87700" fg:w="10"/><text x="88.4599%" y="399.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::curve_models::CompletedPoint::to_projective (16 samples, 0.02%)</title><rect x="88.2229%" y="757" width="0.0161%" height="15" fill="rgb(240,33,46)" fg:x="87713" fg:w="16"/><text x="88.4729%" y="767.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::backend::serial::fiat::field::FieldElement51&gt;&gt;::mul (16 samples, 0.02%)</title><rect x="88.2229%" y="741" width="0.0161%" height="15" fill="rgb(212,35,2)" fg:x="87713" fg:w="16"/><text x="88.4729%" y="751.50"></text></g><g><title>fiat_crypto::curve25519_64::fiat_25519_carry_mul (16 samples, 0.02%)</title><rect x="88.2229%" y="725" width="0.0161%" height="15" fill="rgb(231,119,28)" fg:x="87713" fg:w="16"/><text x="88.4729%" y="735.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::verify_strict (29 samples, 0.03%)</title><rect x="88.2209%" y="805" width="0.0292%" height="15" fill="rgb(252,178,7)" fg:x="87711" fg:w="29"/><text x="88.4709%" y="815.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (29 samples, 0.03%)</title><rect x="88.2209%" y="789" width="0.0292%" height="15" fill="rgb(251,91,4)" fg:x="87711" fg:w="29"/><text x="88.4709%" y="799.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::scalar_mul::vartime_double_base::mul (29 samples, 0.03%)</title><rect x="88.2209%" y="773" width="0.0292%" height="15" fill="rgb(233,122,19)" fg:x="87711" fg:w="29"/><text x="88.4709%" y="783.50"></text></g><g><title>curve25519_dalek_fiat::backend::serial::curve_models::ProjectivePoint::double (11 samples, 0.01%)</title><rect x="88.2390%" y="757" width="0.0111%" height="15" fill="rgb(231,208,46)" fg:x="87729" fg:w="11"/><text x="88.4890%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.01%)</title><rect x="88.2561%" y="805" width="0.0141%" height="15" fill="rgb(243,15,41)" fg:x="87746" fg:w="14"/><text x="88.5061%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.02%)</title><rect x="88.2702%" y="805" width="0.0231%" height="15" fill="rgb(210,32,43)" fg:x="87760" fg:w="23"/><text x="88.5202%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (21 samples, 0.02%)</title><rect x="88.2933%" y="805" width="0.0211%" height="15" fill="rgb(222,177,15)" fg:x="87783" fg:w="21"/><text x="88.5433%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (21 samples, 0.02%)</title><rect x="88.3145%" y="805" width="0.0211%" height="15" fill="rgb(244,121,34)" fg:x="87804" fg:w="21"/><text x="88.5645%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="88.3356%" y="805" width="0.0201%" height="15" fill="rgb(234,138,4)" fg:x="87825" fg:w="20"/><text x="88.5856%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key (10 samples, 0.01%)</title><rect x="88.3637%" y="805" width="0.0101%" height="15" fill="rgb(240,97,48)" fg:x="87853" fg:w="10"/><text x="88.6137%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (11 samples, 0.01%)</title><rect x="88.3738%" y="805" width="0.0111%" height="15" fill="rgb(237,65,54)" fg:x="87863" fg:w="11"/><text x="88.6238%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (31 samples, 0.03%)</title><rect x="88.3849%" y="805" width="0.0312%" height="15" fill="rgb(214,25,24)" fg:x="87874" fg:w="31"/><text x="88.6349%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (10 samples, 0.01%)</title><rect x="88.4321%" y="805" width="0.0101%" height="15" fill="rgb(213,5,3)" fg:x="87921" fg:w="10"/><text x="88.6821%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (46 samples, 0.05%)</title><rect x="88.4422%" y="805" width="0.0463%" height="15" fill="rgb(219,81,29)" fg:x="87931" fg:w="46"/><text x="88.6922%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (20 samples, 0.02%)</title><rect x="88.4885%" y="805" width="0.0201%" height="15" fill="rgb(220,43,48)" fg:x="87977" fg:w="20"/><text x="88.7385%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (15 samples, 0.02%)</title><rect x="88.5086%" y="805" width="0.0151%" height="15" fill="rgb(239,157,2)" fg:x="87997" fg:w="15"/><text x="88.7586%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (16 samples, 0.02%)</title><rect x="88.5237%" y="805" width="0.0161%" height="15" fill="rgb(213,104,43)" fg:x="88012" fg:w="16"/><text x="88.7737%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="88.5518%" y="805" width="0.0111%" height="15" fill="rgb(237,84,9)" fg:x="88040" fg:w="11"/><text x="88.8018%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (37 samples, 0.04%)</title><rect x="88.5740%" y="805" width="0.0372%" height="15" fill="rgb(252,6,33)" fg:x="88062" fg:w="37"/><text x="88.8240%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (20 samples, 0.02%)</title><rect x="88.6172%" y="805" width="0.0201%" height="15" fill="rgb(251,172,22)" fg:x="88105" fg:w="20"/><text x="88.8672%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.01%)</title><rect x="88.6494%" y="805" width="0.0141%" height="15" fill="rgb(244,91,53)" fg:x="88137" fg:w="14"/><text x="88.8994%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.01%)</title><rect x="88.6635%" y="805" width="0.0101%" height="15" fill="rgb(219,29,30)" fg:x="88151" fg:w="10"/><text x="88.9135%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.01%)</title><rect x="88.6735%" y="805" width="0.0131%" height="15" fill="rgb(213,3,15)" fg:x="88161" fg:w="13"/><text x="88.9235%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (19 samples, 0.02%)</title><rect x="88.6886%" y="805" width="0.0191%" height="15" fill="rgb(208,25,28)" fg:x="88176" fg:w="19"/><text x="88.9386%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.01%)</title><rect x="88.7178%" y="805" width="0.0101%" height="15" fill="rgb(252,144,25)" fg:x="88205" fg:w="10"/><text x="88.9678%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (45 samples, 0.05%)</title><rect x="88.7570%" y="805" width="0.0453%" height="15" fill="rgb(226,220,25)" fg:x="88244" fg:w="45"/><text x="89.0070%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::data_end (17 samples, 0.02%)</title><rect x="88.8023%" y="805" width="0.0171%" height="15" fill="rgb(212,131,28)" fg:x="88289" fg:w="17"/><text x="89.0523%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (26 samples, 0.03%)</title><rect x="88.8244%" y="805" width="0.0262%" height="15" fill="rgb(219,143,52)" fg:x="88311" fg:w="26"/><text x="89.0744%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (21 samples, 0.02%)</title><rect x="88.8646%" y="805" width="0.0211%" height="15" fill="rgb(215,56,7)" fg:x="88351" fg:w="21"/><text x="89.1146%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (13 samples, 0.01%)</title><rect x="88.8878%" y="805" width="0.0131%" height="15" fill="rgb(239,59,51)" fg:x="88374" fg:w="13"/><text x="89.1378%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (22 samples, 0.02%)</title><rect x="88.9129%" y="805" width="0.0221%" height="15" fill="rgb(209,215,4)" fg:x="88399" fg:w="22"/><text x="89.1629%" y="815.50"></text></g><g><title>hashbrown::raw::TableLayout::new (11 samples, 0.01%)</title><rect x="88.9501%" y="805" width="0.0111%" height="15" fill="rgb(221,118,39)" fg:x="88436" fg:w="11"/><text x="89.2001%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.02%)</title><rect x="88.9612%" y="805" width="0.0181%" height="15" fill="rgb(236,6,44)" fg:x="88447" fg:w="18"/><text x="89.2112%" y="815.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (11 samples, 0.01%)</title><rect x="88.9793%" y="805" width="0.0111%" height="15" fill="rgb(216,122,9)" fg:x="88465" fg:w="11"/><text x="89.2293%" y="815.50"></text></g><g><title>hashbrown::raw::h1 (15 samples, 0.02%)</title><rect x="88.9994%" y="805" width="0.0151%" height="15" fill="rgb(244,134,42)" fg:x="88485" fg:w="15"/><text x="89.2494%" y="815.50"></text></g><g><title>hashbrown::raw::h2 (45 samples, 0.05%)</title><rect x="89.0145%" y="805" width="0.0453%" height="15" fill="rgb(209,189,35)" fg:x="88500" fg:w="45"/><text x="89.2645%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.01%)</title><rect x="89.0648%" y="805" width="0.0121%" height="15" fill="rgb(250,47,36)" fg:x="88550" fg:w="12"/><text x="89.3148%" y="815.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (10 samples, 0.01%)</title><rect x="89.0970%" y="661" width="0.0101%" height="15" fill="rgb(252,112,4)" fg:x="88582" fg:w="10"/><text x="89.3470%" y="671.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (10 samples, 0.01%)</title><rect x="89.0970%" y="645" width="0.0101%" height="15" fill="rgb(221,79,51)" fg:x="88582" fg:w="10"/><text x="89.3470%" y="655.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (10 samples, 0.01%)</title><rect x="89.0970%" y="629" width="0.0101%" height="15" fill="rgb(232,65,53)" fg:x="88582" fg:w="10"/><text x="89.3470%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="89.0970%" y="741" width="0.0111%" height="15" fill="rgb(211,37,7)" fg:x="88582" fg:w="11"/><text x="89.3470%" y="751.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (11 samples, 0.01%)</title><rect x="89.0970%" y="725" width="0.0111%" height="15" fill="rgb(234,221,18)" fg:x="88582" fg:w="11"/><text x="89.3470%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="89.0970%" y="709" width="0.0111%" height="15" fill="rgb(220,158,26)" fg:x="88582" fg:w="11"/><text x="89.3470%" y="719.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (11 samples, 0.01%)</title><rect x="89.0970%" y="693" width="0.0111%" height="15" fill="rgb(220,70,6)" fg:x="88582" fg:w="11"/><text x="89.3470%" y="703.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (11 samples, 0.01%)</title><rect x="89.0970%" y="677" width="0.0111%" height="15" fill="rgb(250,39,48)" fg:x="88582" fg:w="11"/><text x="89.3470%" y="687.50"></text></g><g><title>language_e2e_tests::account::TransactionBuilder::sign (23 samples, 0.02%)</title><rect x="89.0970%" y="805" width="0.0231%" height="15" fill="rgb(206,40,27)" fg:x="88582" fg:w="23"/><text x="89.3470%" y="815.50"></text></g><g><title>diem_types::transaction::RawTransaction::sign (23 samples, 0.02%)</title><rect x="89.0970%" y="789" width="0.0231%" height="15" fill="rgb(247,80,36)" fg:x="88582" fg:w="23"/><text x="89.3470%" y="799.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PrivateKey as diem_crypto::traits::SigningKey&gt;::sign (23 samples, 0.02%)</title><rect x="89.0970%" y="773" width="0.0231%" height="15" fill="rgb(222,9,20)" fg:x="88582" fg:w="23"/><text x="89.3470%" y="783.50"></text></g><g><title>diem_crypto::ed25519::Ed25519PrivateKey::sign_arbitrary_message (23 samples, 0.02%)</title><rect x="89.0970%" y="757" width="0.0231%" height="15" fill="rgb(217,26,45)" fg:x="88582" fg:w="23"/><text x="89.3470%" y="767.50"></text></g><g><title>ed25519_dalek_fiat::secret::ExpandedSecretKey::sign (12 samples, 0.01%)</title><rect x="89.1080%" y="741" width="0.0121%" height="15" fill="rgb(221,67,14)" fg:x="88593" fg:w="12"/><text x="89.3580%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="89.1201%" y="725" width="0.0101%" height="15" fill="rgb(248,100,24)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="735.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PublicKey as core::convert::From&lt;&amp;diem_crypto::ed25519::Ed25519PrivateKey&gt;&gt;::from (10 samples, 0.01%)</title><rect x="89.1201%" y="709" width="0.0101%" height="15" fill="rgb(230,187,16)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="89.1201%" y="693" width="0.0101%" height="15" fill="rgb(205,108,13)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="703.50"></text></g><g><title>&lt;ed25519_dalek_fiat::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek_fiat::secret::SecretKey&gt;&gt;::from (10 samples, 0.01%)</title><rect x="89.1201%" y="677" width="0.0101%" height="15" fill="rgb(235,71,51)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="687.50"></text></g><g><title>ed25519_dalek_fiat::public::PublicKey::mangle_scalar_bits_and_multiply_by_basepoint_to_produce_public_key (10 samples, 0.01%)</title><rect x="89.1201%" y="661" width="0.0101%" height="15" fill="rgb(251,172,48)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="671.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (10 samples, 0.01%)</title><rect x="89.1201%" y="645" width="0.0101%" height="15" fill="rgb(240,96,49)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="655.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (10 samples, 0.01%)</title><rect x="89.1201%" y="629" width="0.0101%" height="15" fill="rgb(235,46,36)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="639.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (10 samples, 0.01%)</title><rect x="89.1201%" y="613" width="0.0101%" height="15" fill="rgb(244,3,49)" fg:x="88605" fg:w="10"/><text x="89.3701%" y="623.50"></text></g><g><title>curve25519_dalek_fiat::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek_fiat::scalar::Scalar&gt;::mul (11 samples, 0.01%)</title><rect x="89.1312%" y="709" width="0.0111%" height="15" fill="rgb(206,78,54)" fg:x="88616" fg:w="11"/><text x="89.3812%" y="719.50"></text></g><g><title>&lt;&amp;curve25519_dalek_fiat::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek_fiat::scalar::Scalar&gt;&gt;::mul (11 samples, 0.01%)</title><rect x="89.1312%" y="693" width="0.0111%" height="15" fill="rgb(208,85,42)" fg:x="88616" fg:w="11"/><text x="89.3812%" y="703.50"></text></g><g><title>curve25519_dalek_fiat::edwards::EdwardsBasepointTable::basepoint_mul (11 samples, 0.01%)</title><rect x="89.1312%" y="677" width="0.0111%" height="15" fill="rgb(219,196,21)" fg:x="88616" fg:w="11"/><text x="89.3812%" y="687.50"></text></g><g><title>language_e2e_tests::common_transactions::create_account_txn (23 samples, 0.02%)</title><rect x="89.1201%" y="805" width="0.0231%" height="15" fill="rgb(238,19,9)" fg:x="88605" fg:w="23"/><text x="89.3701%" y="815.50"></text></g><g><title>language_e2e_tests::account::TransactionBuilder::sign (23 samples, 0.02%)</title><rect x="89.1201%" y="789" width="0.0231%" height="15" fill="rgb(206,86,13)" fg:x="88605" fg:w="23"/><text x="89.3701%" y="799.50"></text></g><g><title>diem_types::transaction::RawTransaction::sign (23 samples, 0.02%)</title><rect x="89.1201%" y="773" width="0.0231%" height="15" fill="rgb(214,123,40)" fg:x="88605" fg:w="23"/><text x="89.3701%" y="783.50"></text></g><g><title>&lt;diem_crypto::ed25519::Ed25519PrivateKey as diem_crypto::traits::SigningKey&gt;::sign (23 samples, 0.02%)</title><rect x="89.1201%" y="757" width="0.0231%" height="15" fill="rgb(243,53,5)" fg:x="88605" fg:w="23"/><text x="89.3701%" y="767.50"></text></g><g><title>diem_crypto::ed25519::Ed25519PrivateKey::sign_arbitrary_message (23 samples, 0.02%)</title><rect x="89.1201%" y="741" width="0.0231%" height="15" fill="rgb(254,186,31)" fg:x="88605" fg:w="23"/><text x="89.3701%" y="751.50"></text></g><g><title>ed25519_dalek_fiat::secret::ExpandedSecretKey::sign (13 samples, 0.01%)</title><rect x="89.1302%" y="725" width="0.0131%" height="15" fill="rgb(221,216,25)" fg:x="88615" fg:w="13"/><text x="89.3802%" y="735.50"></text></g><g><title>difference::lcs::lcs (19 samples, 0.02%)</title><rect x="89.1563%" y="629" width="0.0191%" height="15" fill="rgb(248,107,42)" fg:x="88641" fg:w="19"/><text x="89.4063%" y="639.50"></text></g><g><title>difference::lcs::strsplit (17 samples, 0.02%)</title><rect x="89.1583%" y="613" width="0.0171%" height="15" fill="rgb(221,85,43)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="89.1583%" y="597" width="0.0171%" height="15" fill="rgb(225,34,24)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="89.1583%" y="581" width="0.0171%" height="15" fill="rgb(211,119,1)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="89.1583%" y="565" width="0.0171%" height="15" fill="rgb(254,216,46)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="89.1583%" y="549" width="0.0171%" height="15" fill="rgb(238,11,38)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="559.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="89.1583%" y="533" width="0.0171%" height="15" fill="rgb(233,50,15)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="543.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (17 samples, 0.02%)</title><rect x="89.1583%" y="517" width="0.0171%" height="15" fill="rgb(217,181,29)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="527.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (17 samples, 0.02%)</title><rect x="89.1583%" y="501" width="0.0171%" height="15" fill="rgb(214,56,3)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (17 samples, 0.02%)</title><rect x="89.1583%" y="485" width="0.0171%" height="15" fill="rgb(230,69,45)" fg:x="88643" fg:w="17"/><text x="89.4083%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::executor::FakeExecutor&gt; (30 samples, 0.03%)</title><rect x="89.1563%" y="789" width="0.0302%" height="15" fill="rgb(224,201,50)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt;&gt; (30 samples, 0.03%)</title><rect x="89.1563%" y="773" width="0.0302%" height="15" fill="rgb(217,228,18)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt; (30 samples, 0.03%)</title><rect x="89.1563%" y="757" width="0.0302%" height="15" fill="rgb(239,33,44)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;goldenfile::mint::Mint&gt; (30 samples, 0.03%)</title><rect x="89.1563%" y="741" width="0.0302%" height="15" fill="rgb(248,210,23)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="751.50"></text></g><g><title>&lt;goldenfile::mint::Mint as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="89.1563%" y="725" width="0.0302%" height="15" fill="rgb(253,135,8)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="735.50"></text></g><g><title>goldenfile::mint::Mint::check_goldenfiles (30 samples, 0.03%)</title><rect x="89.1563%" y="709" width="0.0302%" height="15" fill="rgb(217,98,21)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (30 samples, 0.03%)</title><rect x="89.1563%" y="693" width="0.0302%" height="15" fill="rgb(253,130,21)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (30 samples, 0.03%)</title><rect x="89.1563%" y="677" width="0.0302%" height="15" fill="rgb(207,81,54)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="687.50"></text></g><g><title>goldenfile::differs::text_diff (30 samples, 0.03%)</title><rect x="89.1563%" y="661" width="0.0302%" height="15" fill="rgb(232,48,33)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="671.50"></text></g><g><title>difference::Changeset::new (30 samples, 0.03%)</title><rect x="89.1563%" y="645" width="0.0302%" height="15" fill="rgb(211,9,35)" fg:x="88641" fg:w="30"/><text x="89.4063%" y="655.50"></text></g><g><title>difference::merge::merge (11 samples, 0.01%)</title><rect x="89.1754%" y="629" width="0.0111%" height="15" fill="rgb(205,152,21)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="639.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (11 samples, 0.01%)</title><rect x="89.1754%" y="613" width="0.0111%" height="15" fill="rgb(249,21,27)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (11 samples, 0.01%)</title><rect x="89.1754%" y="597" width="0.0111%" height="15" fill="rgb(252,29,24)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="607.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (11 samples, 0.01%)</title><rect x="89.1754%" y="581" width="0.0111%" height="15" fill="rgb(230,130,50)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="89.1754%" y="565" width="0.0111%" height="15" fill="rgb(239,144,14)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="575.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (11 samples, 0.01%)</title><rect x="89.1754%" y="549" width="0.0111%" height="15" fill="rgb(227,111,50)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="559.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (11 samples, 0.01%)</title><rect x="89.1754%" y="533" width="0.0111%" height="15" fill="rgb(254,84,20)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (11 samples, 0.01%)</title><rect x="89.1754%" y="517" width="0.0111%" height="15" fill="rgb(232,90,48)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (11 samples, 0.01%)</title><rect x="89.1754%" y="501" width="0.0111%" height="15" fill="rgb(253,63,47)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.01%)</title><rect x="89.1754%" y="485" width="0.0111%" height="15" fill="rgb(251,146,35)" fg:x="88660" fg:w="11"/><text x="89.4254%" y="495.50"></text></g><g><title>&lt;diem_vm::diem_transaction_executor::DiemVM as diem_vm::VMExecutor&gt;::execute_block (15 samples, 0.02%)</title><rect x="89.1925%" y="741" width="0.0151%" height="15" fill="rgb(229,192,35)" fg:x="88677" fg:w="15"/><text x="89.4425%" y="751.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_and_keep_vm_status (15 samples, 0.02%)</title><rect x="89.1925%" y="725" width="0.0151%" height="15" fill="rgb(225,68,9)" fg:x="88677" fg:w="15"/><text x="89.4425%" y="735.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::fmt::Debug&gt;::fmt (10 samples, 0.01%)</title><rect x="89.2086%" y="37" width="0.0101%" height="15" fill="rgb(214,97,34)" fg:x="88693" fg:w="10"/><text x="89.4586%" y="47.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction (38 samples, 0.04%)</title><rect x="89.1925%" y="789" width="0.0382%" height="15" fill="rgb(253,31,26)" fg:x="88677" fg:w="38"/><text x="89.4425%" y="799.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_block (38 samples, 0.04%)</title><rect x="89.1925%" y="773" width="0.0382%" height="15" fill="rgb(225,151,47)" fg:x="88677" fg:w="38"/><text x="89.4425%" y="783.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction_block (38 samples, 0.04%)</title><rect x="89.1925%" y="757" width="0.0382%" height="15" fill="rgb(206,185,9)" fg:x="88677" fg:w="38"/><text x="89.4425%" y="767.50"></text></g><g><title>alloc::fmt::format (23 samples, 0.02%)</title><rect x="89.2076%" y="741" width="0.0231%" height="15" fill="rgb(249,65,17)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="725" width="0.0231%" height="15" fill="rgb(220,110,10)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="735.50"></text></g><g><title>core::fmt::write (23 samples, 0.02%)</title><rect x="89.2076%" y="709" width="0.0231%" height="15" fill="rgb(222,198,49)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="693" width="0.0231%" height="15" fill="rgb(239,81,13)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="703.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (23 samples, 0.02%)</title><rect x="89.2076%" y="677" width="0.0231%" height="15" fill="rgb(216,128,11)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (23 samples, 0.02%)</title><rect x="89.2076%" y="661" width="0.0231%" height="15" fill="rgb(247,156,8)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="671.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (23 samples, 0.02%)</title><rect x="89.2076%" y="645" width="0.0231%" height="15" fill="rgb(219,173,1)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="629" width="0.0231%" height="15" fill="rgb(227,42,24)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="613" width="0.0231%" height="15" fill="rgb(253,219,50)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="623.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="597" width="0.0231%" height="15" fill="rgb(215,191,54)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="607.50"></text></g><g><title>core::fmt::builders::DebugList::entries (23 samples, 0.02%)</title><rect x="89.2076%" y="581" width="0.0231%" height="15" fill="rgb(238,83,12)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="591.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (23 samples, 0.02%)</title><rect x="89.2076%" y="565" width="0.0231%" height="15" fill="rgb(205,124,9)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="575.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (23 samples, 0.02%)</title><rect x="89.2076%" y="549" width="0.0231%" height="15" fill="rgb(253,174,7)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (23 samples, 0.02%)</title><rect x="89.2076%" y="533" width="0.0231%" height="15" fill="rgb(206,134,49)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="543.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::_{{closure}} (23 samples, 0.02%)</title><rect x="89.2076%" y="517" width="0.0231%" height="15" fill="rgb(221,89,20)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="501" width="0.0231%" height="15" fill="rgb(240,205,13)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="511.50"></text></g><g><title>&lt;diem_types::transaction::TransactionOutput as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="485" width="0.0231%" height="15" fill="rgb(237,174,32)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (23 samples, 0.02%)</title><rect x="89.2076%" y="469" width="0.0231%" height="15" fill="rgb(226,12,15)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (23 samples, 0.02%)</title><rect x="89.2076%" y="453" width="0.0231%" height="15" fill="rgb(245,160,52)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (23 samples, 0.02%)</title><rect x="89.2076%" y="437" width="0.0231%" height="15" fill="rgb(253,80,21)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (23 samples, 0.02%)</title><rect x="89.2076%" y="421" width="0.0231%" height="15" fill="rgb(231,225,22)" fg:x="88692" fg:w="23"/><text x="89.4576%" y="431.50"></text></g><g><title>&lt;diem_types::write_set::WriteSet as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="405" width="0.0221%" height="15" fill="rgb(253,185,12)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (22 samples, 0.02%)</title><rect x="89.2086%" y="389" width="0.0221%" height="15" fill="rgb(234,197,21)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.02%)</title><rect x="89.2086%" y="373" width="0.0221%" height="15" fill="rgb(210,47,30)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (22 samples, 0.02%)</title><rect x="89.2086%" y="357" width="0.0221%" height="15" fill="rgb(246,139,27)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="341" width="0.0221%" height="15" fill="rgb(226,130,16)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="351.50"></text></g><g><title>&lt;diem_types::write_set::WriteSetMut as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="325" width="0.0221%" height="15" fill="rgb(237,208,20)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (22 samples, 0.02%)</title><rect x="89.2086%" y="309" width="0.0221%" height="15" fill="rgb(245,186,28)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.02%)</title><rect x="89.2086%" y="293" width="0.0221%" height="15" fill="rgb(238,105,39)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (22 samples, 0.02%)</title><rect x="89.2086%" y="277" width="0.0221%" height="15" fill="rgb(253,228,11)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="261" width="0.0221%" height="15" fill="rgb(224,136,38)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="245" width="0.0221%" height="15" fill="rgb(211,3,25)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="255.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="229" width="0.0221%" height="15" fill="rgb(238,66,34)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="239.50"></text></g><g><title>core::fmt::builders::DebugList::entries (22 samples, 0.02%)</title><rect x="89.2086%" y="213" width="0.0221%" height="15" fill="rgb(223,188,11)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="223.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (22 samples, 0.02%)</title><rect x="89.2086%" y="197" width="0.0221%" height="15" fill="rgb(221,10,35)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="207.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (22 samples, 0.02%)</title><rect x="89.2086%" y="181" width="0.0221%" height="15" fill="rgb(223,18,44)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.02%)</title><rect x="89.2086%" y="165" width="0.0221%" height="15" fill="rgb(220,97,41)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="175.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::_{{closure}} (22 samples, 0.02%)</title><rect x="89.2086%" y="149" width="0.0221%" height="15" fill="rgb(206,95,45)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="159.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="133" width="0.0221%" height="15" fill="rgb(209,96,13)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="143.50"></text></g><g><title>&lt;(T10,T11) as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="117" width="0.0221%" height="15" fill="rgb(237,39,34)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="127.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (22 samples, 0.02%)</title><rect x="89.2086%" y="101" width="0.0221%" height="15" fill="rgb(213,49,47)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="111.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.02%)</title><rect x="89.2086%" y="85" width="0.0221%" height="15" fill="rgb(205,107,27)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="95.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (22 samples, 0.02%)</title><rect x="89.2086%" y="69" width="0.0221%" height="15" fill="rgb(212,142,9)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="89.2086%" y="53" width="0.0221%" height="15" fill="rgb(226,182,0)" fg:x="88693" fg:w="22"/><text x="89.4586%" y="63.50"></text></g><g><title>&lt;diem_types::write_set::WriteOp as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="89.2187%" y="37" width="0.0121%" height="15" fill="rgb(231,3,53)" fg:x="88703" fg:w="12"/><text x="89.4687%" y="47.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (79 samples, 0.08%)</title><rect x="89.1563%" y="805" width="0.0795%" height="15" fill="rgb(246,111,28)" fg:x="88641" fg:w="79"/><text x="89.4063%" y="815.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_defs (11 samples, 0.01%)</title><rect x="89.2569%" y="805" width="0.0111%" height="15" fill="rgb(254,183,7)" fg:x="88741" fg:w="11"/><text x="89.5069%" y="815.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (30 samples, 0.03%)</title><rect x="89.2680%" y="805" width="0.0302%" height="15" fill="rgb(247,177,28)" fg:x="88752" fg:w="30"/><text x="89.5180%" y="815.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_handle_at (15 samples, 0.02%)</title><rect x="89.3565%" y="805" width="0.0151%" height="15" fill="rgb(244,43,1)" fg:x="88840" fg:w="15"/><text x="89.6065%" y="815.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signature_at (16 samples, 0.02%)</title><rect x="89.3826%" y="805" width="0.0161%" height="15" fill="rgb(207,2,35)" fg:x="88866" fg:w="16"/><text x="89.6326%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (16 samples, 0.02%)</title><rect x="89.4299%" y="757" width="0.0161%" height="15" fill="rgb(213,83,22)" fg:x="88913" fg:w="16"/><text x="89.6799%" y="767.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="89.4198%" y="773" width="0.0282%" height="15" fill="rgb(246,212,13)" fg:x="88903" fg:w="28"/><text x="89.6698%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.02%)</title><rect x="89.4571%" y="709" width="0.0151%" height="15" fill="rgb(213,127,46)" fg:x="88940" fg:w="15"/><text x="89.7071%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="89.4581%" y="693" width="0.0141%" height="15" fill="rgb(219,215,39)" fg:x="88941" fg:w="14"/><text x="89.7081%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (32 samples, 0.03%)</title><rect x="89.4480%" y="773" width="0.0322%" height="15" fill="rgb(227,99,17)" fg:x="88931" fg:w="32"/><text x="89.6980%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (32 samples, 0.03%)</title><rect x="89.4480%" y="757" width="0.0322%" height="15" fill="rgb(208,155,18)" fg:x="88931" fg:w="32"/><text x="89.6980%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (28 samples, 0.03%)</title><rect x="89.4520%" y="741" width="0.0282%" height="15" fill="rgb(223,204,38)" fg:x="88935" fg:w="28"/><text x="89.7020%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="89.4520%" y="725" width="0.0282%" height="15" fill="rgb(212,114,21)" fg:x="88935" fg:w="28"/><text x="89.7020%" y="735.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="89.5013%" y="709" width="0.0101%" height="15" fill="rgb(250,74,13)" fg:x="88984" fg:w="10"/><text x="89.7513%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.04%)</title><rect x="89.4872%" y="741" width="0.0352%" height="15" fill="rgb(234,7,1)" fg:x="88970" fg:w="35"/><text x="89.7372%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.03%)</title><rect x="89.4903%" y="725" width="0.0322%" height="15" fill="rgb(207,138,31)" fg:x="88973" fg:w="32"/><text x="89.7403%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (50 samples, 0.05%)</title><rect x="89.4802%" y="757" width="0.0503%" height="15" fill="rgb(215,186,42)" fg:x="88963" fg:w="50"/><text x="89.7302%" y="767.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (132 samples, 0.13%)</title><rect x="89.4198%" y="789" width="0.1328%" height="15" fill="rgb(229,205,49)" fg:x="88903" fg:w="132"/><text x="89.6698%" y="799.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (72 samples, 0.07%)</title><rect x="89.4802%" y="773" width="0.0724%" height="15" fill="rgb(216,156,32)" fg:x="88963" fg:w="72"/><text x="89.7302%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (22 samples, 0.02%)</title><rect x="89.5305%" y="757" width="0.0221%" height="15" fill="rgb(238,7,21)" fg:x="89013" fg:w="22"/><text x="89.7805%" y="767.50"></text></g><g><title>alloc::slice::hack::into_vec (22 samples, 0.02%)</title><rect x="89.5305%" y="741" width="0.0221%" height="15" fill="rgb(249,190,22)" fg:x="89013" fg:w="22"/><text x="89.7805%" y="751.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_code (138 samples, 0.14%)</title><rect x="89.4178%" y="805" width="0.1388%" height="15" fill="rgb(253,51,31)" fg:x="88901" fg:w="138"/><text x="89.6678%" y="815.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="89.6150%" y="773" width="0.0141%" height="15" fill="rgb(237,90,54)" fg:x="89097" fg:w="14"/><text x="89.8650%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.01%)</title><rect x="89.6482%" y="757" width="0.0101%" height="15" fill="rgb(250,214,33)" fg:x="89130" fg:w="10"/><text x="89.8982%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.01%)</title><rect x="89.6894%" y="741" width="0.0111%" height="15" fill="rgb(237,10,49)" fg:x="89171" fg:w="11"/><text x="89.9394%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (21 samples, 0.02%)</title><rect x="89.7005%" y="741" width="0.0211%" height="15" fill="rgb(241,56,36)" fg:x="89182" fg:w="21"/><text x="89.9505%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.01%)</title><rect x="89.7075%" y="725" width="0.0141%" height="15" fill="rgb(227,164,12)" fg:x="89189" fg:w="14"/><text x="89.9575%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.11%)</title><rect x="89.6311%" y="773" width="0.1076%" height="15" fill="rgb(249,149,35)" fg:x="89113" fg:w="107"/><text x="89.8811%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.08%)</title><rect x="89.6582%" y="757" width="0.0805%" height="15" fill="rgb(238,227,50)" fg:x="89140" fg:w="80"/><text x="89.9082%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (10 samples, 0.01%)</title><rect x="89.7286%" y="741" width="0.0101%" height="15" fill="rgb(235,102,45)" fg:x="89210" fg:w="10"/><text x="89.9786%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="89.7447%" y="773" width="0.0131%" height="15" fill="rgb(211,10,38)" fg:x="89226" fg:w="13"/><text x="89.9947%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::function_instantiations (12 samples, 0.01%)</title><rect x="89.7930%" y="773" width="0.0121%" height="15" fill="rgb(219,77,48)" fg:x="89274" fg:w="12"/><text x="90.0430%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (14 samples, 0.01%)</title><rect x="89.8302%" y="773" width="0.0141%" height="15" fill="rgb(246,6,15)" fg:x="89311" fg:w="14"/><text x="90.0802%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_def (289 samples, 0.29%)</title><rect x="89.5586%" y="805" width="0.2907%" height="15" fill="rgb(207,220,2)" fg:x="89041" fg:w="289"/><text x="89.8086%" y="815.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_code (287 samples, 0.29%)</title><rect x="89.5607%" y="789" width="0.2887%" height="15" fill="rgb(242,48,14)" fg:x="89043" fg:w="287"/><text x="89.8107%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="89.8634%" y="789" width="0.0101%" height="15" fill="rgb(218,19,27)" fg:x="89344" fg:w="10"/><text x="90.1134%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="89.8634%" y="773" width="0.0101%" height="15" fill="rgb(228,0,35)" fg:x="89344" fg:w="10"/><text x="90.1134%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_constant (22 samples, 0.02%)</title><rect x="89.8785%" y="789" width="0.0221%" height="15" fill="rgb(244,142,54)" fg:x="89359" fg:w="22"/><text x="90.1285%" y="799.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (22 samples, 0.02%)</title><rect x="89.8785%" y="773" width="0.0221%" height="15" fill="rgb(243,217,40)" fg:x="89359" fg:w="22"/><text x="90.1285%" y="783.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (15 samples, 0.02%)</title><rect x="89.8855%" y="757" width="0.0151%" height="15" fill="rgb(207,114,16)" fg:x="89366" fg:w="15"/><text x="90.1355%" y="767.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_def (39 samples, 0.04%)</title><rect x="89.9087%" y="789" width="0.0392%" height="15" fill="rgb(224,33,25)" fg:x="89389" fg:w="39"/><text x="90.1587%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.02%)</title><rect x="89.9620%" y="741" width="0.0151%" height="15" fill="rgb(230,93,54)" fg:x="89442" fg:w="15"/><text x="90.2120%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="89.9670%" y="725" width="0.0101%" height="15" fill="rgb(224,56,24)" fg:x="89447" fg:w="10"/><text x="90.2170%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="89.9610%" y="757" width="0.0211%" height="15" fill="rgb(235,189,50)" fg:x="89441" fg:w="21"/><text x="90.2110%" y="767.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (39 samples, 0.04%)</title><rect x="89.9590%" y="773" width="0.0392%" height="15" fill="rgb(242,173,8)" fg:x="89439" fg:w="39"/><text x="90.2090%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (16 samples, 0.02%)</title><rect x="89.9821%" y="757" width="0.0161%" height="15" fill="rgb(209,206,10)" fg:x="89462" fg:w="16"/><text x="90.2321%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (15 samples, 0.02%)</title><rect x="89.9831%" y="741" width="0.0151%" height="15" fill="rgb(213,182,44)" fg:x="89463" fg:w="15"/><text x="90.2331%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="90.0052%" y="773" width="0.0201%" height="15" fill="rgb(243,51,15)" fg:x="89485" fg:w="20"/><text x="90.2552%" y="783.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_handles (13 samples, 0.01%)</title><rect x="90.0394%" y="773" width="0.0131%" height="15" fill="rgb(241,13,14)" fg:x="89519" fg:w="13"/><text x="90.2894%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_handles (11 samples, 0.01%)</title><rect x="90.0414%" y="757" width="0.0111%" height="15" fill="rgb(239,147,24)" fg:x="89521" fg:w="11"/><text x="90.2914%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="90.0414%" y="741" width="0.0111%" height="15" fill="rgb(223,129,16)" fg:x="89521" fg:w="11"/><text x="90.2914%" y="751.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::signatures (28 samples, 0.03%)</title><rect x="90.0525%" y="773" width="0.0282%" height="15" fill="rgb(209,169,13)" fg:x="89532" fg:w="28"/><text x="90.3025%" y="783.50"></text></g><g><title>move_binary_format::access::ModuleAccess::signatures (23 samples, 0.02%)</title><rect x="90.0575%" y="757" width="0.0231%" height="15" fill="rgb(235,159,41)" fg:x="89537" fg:w="23"/><text x="90.3075%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="90.0585%" y="741" width="0.0221%" height="15" fill="rgb(223,219,48)" fg:x="89538" fg:w="22"/><text x="90.3085%" y="751.50"></text></g><g><title>core::slice::raw::from_raw_parts (14 samples, 0.01%)</title><rect x="90.0666%" y="725" width="0.0141%" height="15" fill="rgb(236,80,13)" fg:x="89546" fg:w="14"/><text x="90.3166%" y="735.50"></text></g><g><title>core::ptr::slice_from_raw_parts (13 samples, 0.01%)</title><rect x="90.0676%" y="709" width="0.0131%" height="15" fill="rgb(213,5,6)" fg:x="89547" fg:w="13"/><text x="90.3176%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (26 samples, 0.03%)</title><rect x="90.1078%" y="741" width="0.0262%" height="15" fill="rgb(205,59,21)" fg:x="89587" fg:w="26"/><text x="90.3578%" y="751.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="90.0937%" y="757" width="0.0463%" height="15" fill="rgb(247,137,35)" fg:x="89573" fg:w="46"/><text x="90.3437%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.01%)</title><rect x="90.1521%" y="677" width="0.0101%" height="15" fill="rgb(242,208,28)" fg:x="89631" fg:w="10"/><text x="90.4021%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="90.1501%" y="693" width="0.0141%" height="15" fill="rgb(245,62,25)" fg:x="89629" fg:w="14"/><text x="90.4001%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (39 samples, 0.04%)</title><rect x="90.1400%" y="757" width="0.0392%" height="15" fill="rgb(233,99,54)" fg:x="89619" fg:w="39"/><text x="90.3900%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (39 samples, 0.04%)</title><rect x="90.1400%" y="741" width="0.0392%" height="15" fill="rgb(213,10,37)" fg:x="89619" fg:w="39"/><text x="90.3900%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (30 samples, 0.03%)</title><rect x="90.1491%" y="725" width="0.0302%" height="15" fill="rgb(235,143,30)" fg:x="89628" fg:w="30"/><text x="90.3991%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="90.1491%" y="709" width="0.0302%" height="15" fill="rgb(250,146,33)" fg:x="89628" fg:w="30"/><text x="90.3991%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.02%)</title><rect x="90.1641%" y="693" width="0.0151%" height="15" fill="rgb(226,198,42)" fg:x="89643" fg:w="15"/><text x="90.4141%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="90.2014%" y="693" width="0.0121%" height="15" fill="rgb(222,55,6)" fg:x="89680" fg:w="12"/><text x="90.4514%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.03%)</title><rect x="90.1843%" y="725" width="0.0342%" height="15" fill="rgb(213,224,31)" fg:x="89663" fg:w="34"/><text x="90.4343%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.03%)</title><rect x="90.1843%" y="709" width="0.0342%" height="15" fill="rgb(226,103,35)" fg:x="89663" fg:w="34"/><text x="90.4343%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (46 samples, 0.05%)</title><rect x="90.1802%" y="741" width="0.0463%" height="15" fill="rgb(205,66,45)" fg:x="89659" fg:w="46"/><text x="90.4302%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (18 samples, 0.02%)</title><rect x="90.2305%" y="709" width="0.0181%" height="15" fill="rgb(226,51,42)" fg:x="89709" fg:w="18"/><text x="90.4805%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (15 samples, 0.02%)</title><rect x="90.2335%" y="693" width="0.0151%" height="15" fill="rgb(206,69,1)" fg:x="89712" fg:w="15"/><text x="90.4835%" y="703.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (174 samples, 0.18%)</title><rect x="90.0807%" y="773" width="0.1750%" height="15" fill="rgb(213,228,47)" fg:x="89560" fg:w="174"/><text x="90.3307%" y="783.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (76 samples, 0.08%)</title><rect x="90.1792%" y="757" width="0.0764%" height="15" fill="rgb(224,204,18)" fg:x="89658" fg:w="76"/><text x="90.4292%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (29 samples, 0.03%)</title><rect x="90.2265%" y="741" width="0.0292%" height="15" fill="rgb(253,187,47)" fg:x="89705" fg:w="29"/><text x="90.4765%" y="751.50"></text></g><g><title>alloc::slice::hack::into_vec (28 samples, 0.03%)</title><rect x="90.2275%" y="725" width="0.0282%" height="15" fill="rgb(232,61,2)" fg:x="89706" fg:w="28"/><text x="90.4775%" y="735.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_handle (312 samples, 0.31%)</title><rect x="89.9479%" y="789" width="0.3138%" height="15" fill="rgb(213,132,35)" fg:x="89428" fg:w="312"/><text x="90.1979%" y="799.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_function_instantiation (12 samples, 0.01%)</title><rect x="90.2617%" y="789" width="0.0121%" height="15" fill="rgb(247,33,21)" fg:x="89740" fg:w="12"/><text x="90.5117%" y="799.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="90.2848%" y="773" width="0.0121%" height="15" fill="rgb(233,71,46)" fg:x="89763" fg:w="12"/><text x="90.5348%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="90.2989%" y="773" width="0.0131%" height="15" fill="rgb(222,173,43)" fg:x="89777" fg:w="13"/><text x="90.5489%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.02%)</title><rect x="90.3512%" y="741" width="0.0211%" height="15" fill="rgb(249,218,47)" fg:x="89829" fg:w="21"/><text x="90.6012%" y="751.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="90.3281%" y="757" width="0.0543%" height="15" fill="rgb(254,185,48)" fg:x="89806" fg:w="54"/><text x="90.5781%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="90.3905%" y="693" width="0.0131%" height="15" fill="rgb(252,165,50)" fg:x="89868" fg:w="13"/><text x="90.6405%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::SignatureTokenPreorderTraversalIter&gt; (40 samples, 0.04%)</title><rect x="90.3834%" y="757" width="0.0402%" height="15" fill="rgb(206,219,6)" fg:x="89861" fg:w="40"/><text x="90.6334%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (40 samples, 0.04%)</title><rect x="90.3834%" y="741" width="0.0402%" height="15" fill="rgb(212,212,45)" fg:x="89861" fg:w="40"/><text x="90.6334%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_binary_format::file_format::SignatureToken&gt;&gt; (34 samples, 0.03%)</title><rect x="90.3895%" y="725" width="0.0342%" height="15" fill="rgb(221,31,9)" fg:x="89867" fg:w="34"/><text x="90.6395%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="90.3895%" y="709" width="0.0342%" height="15" fill="rgb(234,198,39)" fg:x="89867" fg:w="34"/><text x="90.6395%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.02%)</title><rect x="90.4035%" y="693" width="0.0201%" height="15" fill="rgb(252,145,46)" fg:x="89881" fg:w="20"/><text x="90.6535%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="90.4367%" y="725" width="0.0302%" height="15" fill="rgb(237,149,0)" fg:x="89914" fg:w="30"/><text x="90.6867%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="90.4377%" y="709" width="0.0292%" height="15" fill="rgb(229,65,5)" fg:x="89915" fg:w="29"/><text x="90.6877%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (44 samples, 0.04%)</title><rect x="90.4327%" y="741" width="0.0443%" height="15" fill="rgb(235,60,36)" fg:x="89910" fg:w="44"/><text x="90.6827%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (10 samples, 0.01%)</title><rect x="90.4840%" y="693" width="0.0101%" height="15" fill="rgb(222,47,18)" fg:x="89961" fg:w="10"/><text x="90.7340%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (13 samples, 0.01%)</title><rect x="90.4830%" y="709" width="0.0131%" height="15" fill="rgb(235,114,22)" fg:x="89960" fg:w="13"/><text x="90.7330%" y="719.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_signature (226 samples, 0.23%)</title><rect x="90.2778%" y="789" width="0.2273%" height="15" fill="rgb(209,167,11)" fg:x="89756" fg:w="226"/><text x="90.5278%" y="799.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (192 samples, 0.19%)</title><rect x="90.3120%" y="773" width="0.1931%" height="15" fill="rgb(251,73,18)" fg:x="89790" fg:w="192"/><text x="90.5620%" y="783.50"></text></g><g><title>move_binary_format::file_format::SignatureToken::preorder_traversal (75 samples, 0.08%)</title><rect x="90.4297%" y="757" width="0.0754%" height="15" fill="rgb(217,60,17)" fg:x="89907" fg:w="75"/><text x="90.6797%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (28 samples, 0.03%)</title><rect x="90.4770%" y="741" width="0.0282%" height="15" fill="rgb(224,36,37)" fg:x="89954" fg:w="28"/><text x="90.7270%" y="751.50"></text></g><g><title>alloc::slice::hack::into_vec (28 samples, 0.03%)</title><rect x="90.4770%" y="725" width="0.0282%" height="15" fill="rgb(211,21,32)" fg:x="89954" fg:w="28"/><text x="90.7270%" y="735.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type (17 samples, 0.02%)</title><rect x="90.5112%" y="773" width="0.0171%" height="15" fill="rgb(231,55,48)" fg:x="89988" fg:w="17"/><text x="90.7612%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_type_parameter (13 samples, 0.01%)</title><rect x="90.5283%" y="773" width="0.0131%" height="15" fill="rgb(227,42,18)" fg:x="90005" fg:w="13"/><text x="90.7783%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::check_struct_def (37 samples, 0.04%)</title><rect x="90.5051%" y="789" width="0.0372%" height="15" fill="rgb(217,2,27)" fg:x="89982" fg:w="37"/><text x="90.7551%" y="799.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_impl (684 samples, 0.69%)</title><rect x="89.8564%" y="805" width="0.6880%" height="15" fill="rgb(251,138,23)" fg:x="89337" fg:w="684"/><text x="90.1064%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="90.5695%" y="773" width="0.0272%" height="15" fill="rgb(226,184,11)" fg:x="90046" fg:w="27"/><text x="90.8195%" y="783.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_module (71 samples, 0.07%)</title><rect x="90.5443%" y="805" width="0.0714%" height="15" fill="rgb(242,142,12)" fg:x="90021" fg:w="71"/><text x="90.7943%" y="815.50"></text></g><g><title>move_binary_format::check_bounds::BoundsChecker::verify_impl (71 samples, 0.07%)</title><rect x="90.5443%" y="789" width="0.0714%" height="15" fill="rgb(234,187,18)" fg:x="90021" fg:w="71"/><text x="90.7943%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (10 samples, 0.01%)</title><rect x="90.6469%" y="693" width="0.0101%" height="15" fill="rgb(237,44,42)" fg:x="90123" fg:w="10"/><text x="90.8969%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (13 samples, 0.01%)</title><rect x="90.6570%" y="693" width="0.0131%" height="15" fill="rgb(211,90,23)" fg:x="90133" fg:w="13"/><text x="90.9070%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.01%)</title><rect x="90.6570%" y="677" width="0.0131%" height="15" fill="rgb(207,81,18)" fg:x="90133" fg:w="13"/><text x="90.9070%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="90.6721%" y="677" width="0.0282%" height="15" fill="rgb(222,107,28)" fg:x="90148" fg:w="28"/><text x="90.9221%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.03%)</title><rect x="90.6721%" y="661" width="0.0282%" height="15" fill="rgb(237,83,52)" fg:x="90148" fg:w="28"/><text x="90.9221%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (27 samples, 0.03%)</title><rect x="90.6731%" y="645" width="0.0272%" height="15" fill="rgb(208,67,11)" fg:x="90149" fg:w="27"/><text x="90.9231%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (63 samples, 0.06%)</title><rect x="90.6449%" y="741" width="0.0634%" height="15" fill="rgb(249,157,49)" fg:x="90121" fg:w="63"/><text x="90.8949%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (63 samples, 0.06%)</title><rect x="90.6449%" y="725" width="0.0634%" height="15" fill="rgb(243,200,1)" fg:x="90121" fg:w="63"/><text x="90.8949%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.06%)</title><rect x="90.6449%" y="709" width="0.0634%" height="15" fill="rgb(225,162,37)" fg:x="90121" fg:w="63"/><text x="90.8949%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (38 samples, 0.04%)</title><rect x="90.6701%" y="693" width="0.0382%" height="15" fill="rgb(242,92,13)" fg:x="90146" fg:w="38"/><text x="90.9201%" y="703.50"></text></g><g><title>move_binary_format::deserializer::check_tables (73 samples, 0.07%)</title><rect x="90.6359%" y="757" width="0.0734%" height="15" fill="rgb(220,43,36)" fg:x="90112" fg:w="73"/><text x="90.8859%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_tables (14 samples, 0.01%)</title><rect x="90.7153%" y="757" width="0.0141%" height="15" fill="rgb(213,165,48)" fg:x="90191" fg:w="14"/><text x="90.9653%" y="767.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize (101 samples, 0.10%)</title><rect x="90.6359%" y="805" width="0.1016%" height="15" fill="rgb(227,200,9)" fg:x="90112" fg:w="101"/><text x="90.8859%" y="815.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_no_check_bounds (101 samples, 0.10%)</title><rect x="90.6359%" y="789" width="0.1016%" height="15" fill="rgb(221,222,28)" fg:x="90112" fg:w="101"/><text x="90.8859%" y="799.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (101 samples, 0.10%)</title><rect x="90.6359%" y="773" width="0.1016%" height="15" fill="rgb(223,142,26)" fg:x="90112" fg:w="101"/><text x="90.8859%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_constant_size (14 samples, 0.01%)</title><rect x="90.7455%" y="757" width="0.0141%" height="15" fill="rgb(243,46,9)" fg:x="90221" fg:w="14"/><text x="90.9955%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (14 samples, 0.01%)</title><rect x="90.7455%" y="741" width="0.0141%" height="15" fill="rgb(250,56,11)" fg:x="90221" fg:w="14"/><text x="90.9955%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (14 samples, 0.01%)</title><rect x="90.7455%" y="725" width="0.0141%" height="15" fill="rgb(229,113,5)" fg:x="90221" fg:w="14"/><text x="90.9955%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (14 samples, 0.01%)</title><rect x="90.7455%" y="709" width="0.0141%" height="15" fill="rgb(244,108,28)" fg:x="90221" fg:w="14"/><text x="90.9955%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (10 samples, 0.01%)</title><rect x="90.7495%" y="693" width="0.0101%" height="15" fill="rgb(242,119,50)" fg:x="90225" fg:w="10"/><text x="90.9995%" y="703.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool (21 samples, 0.02%)</title><rect x="90.7445%" y="789" width="0.0211%" height="15" fill="rgb(224,164,23)" fg:x="90220" fg:w="21"/><text x="90.9945%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_constant (21 samples, 0.02%)</title><rect x="90.7445%" y="773" width="0.0211%" height="15" fill="rgb(214,227,44)" fg:x="90220" fg:w="21"/><text x="90.9945%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="90.7707%" y="757" width="0.0221%" height="15" fill="rgb(238,202,4)" fg:x="90246" fg:w="22"/><text x="91.0207%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="90.7747%" y="741" width="0.0181%" height="15" fill="rgb(213,190,30)" fg:x="90250" fg:w="18"/><text x="91.0247%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="90.7757%" y="725" width="0.0171%" height="15" fill="rgb(239,15,2)" fg:x="90251" fg:w="17"/><text x="91.0257%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (17 samples, 0.02%)</title><rect x="90.7757%" y="709" width="0.0171%" height="15" fill="rgb(249,229,4)" fg:x="90251" fg:w="17"/><text x="91.0257%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.02%)</title><rect x="90.7757%" y="693" width="0.0171%" height="15" fill="rgb(239,75,44)" fg:x="90251" fg:w="17"/><text x="91.0257%" y="703.50"></text></g><g><title>move_binary_format::deserializer::load_ability_set (10 samples, 0.01%)</title><rect x="90.7948%" y="757" width="0.0101%" height="15" fill="rgb(251,206,23)" fg:x="90270" fg:w="10"/><text x="91.0448%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (10 samples, 0.01%)</title><rect x="90.7948%" y="741" width="0.0101%" height="15" fill="rgb(215,208,0)" fg:x="90270" fg:w="10"/><text x="91.0448%" y="751.50"></text></g><g><title>move_binary_format::deserializer::load_ability_sets (74 samples, 0.07%)</title><rect x="90.7696%" y="773" width="0.0744%" height="15" fill="rgb(230,75,50)" fg:x="90245" fg:w="74"/><text x="91.0196%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_type_parameter_count (39 samples, 0.04%)</title><rect x="90.8049%" y="757" width="0.0392%" height="15" fill="rgb(246,180,39)" fg:x="90280" fg:w="39"/><text x="91.0549%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (39 samples, 0.04%)</title><rect x="90.8049%" y="741" width="0.0392%" height="15" fill="rgb(249,175,24)" fg:x="90280" fg:w="39"/><text x="91.0549%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (35 samples, 0.04%)</title><rect x="90.8089%" y="725" width="0.0352%" height="15" fill="rgb(247,176,22)" fg:x="90284" fg:w="35"/><text x="91.0589%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (35 samples, 0.04%)</title><rect x="90.8089%" y="709" width="0.0352%" height="15" fill="rgb(241,100,24)" fg:x="90284" fg:w="35"/><text x="91.0589%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (30 samples, 0.03%)</title><rect x="90.8139%" y="693" width="0.0302%" height="15" fill="rgb(233,4,35)" fg:x="90289" fg:w="30"/><text x="91.0639%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (29 samples, 0.03%)</title><rect x="90.8149%" y="677" width="0.0292%" height="15" fill="rgb(211,164,46)" fg:x="90290" fg:w="29"/><text x="91.0649%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (15 samples, 0.02%)</title><rect x="90.8290%" y="661" width="0.0151%" height="15" fill="rgb(242,99,53)" fg:x="90304" fg:w="15"/><text x="91.0790%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (12 samples, 0.01%)</title><rect x="90.8320%" y="645" width="0.0121%" height="15" fill="rgb(243,45,33)" fg:x="90307" fg:w="12"/><text x="91.0820%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (10 samples, 0.01%)</title><rect x="90.8340%" y="629" width="0.0101%" height="15" fill="rgb(217,55,21)" fg:x="90309" fg:w="10"/><text x="91.0840%" y="639.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_index (47 samples, 0.05%)</title><rect x="90.8441%" y="773" width="0.0473%" height="15" fill="rgb(245,145,46)" fg:x="90319" fg:w="47"/><text x="91.0941%" y="783.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (47 samples, 0.05%)</title><rect x="90.8441%" y="757" width="0.0473%" height="15" fill="rgb(215,112,45)" fg:x="90319" fg:w="47"/><text x="91.0941%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (36 samples, 0.04%)</title><rect x="90.8551%" y="741" width="0.0362%" height="15" fill="rgb(228,104,16)" fg:x="90330" fg:w="36"/><text x="91.1051%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (36 samples, 0.04%)</title><rect x="90.8551%" y="725" width="0.0362%" height="15" fill="rgb(239,186,38)" fg:x="90330" fg:w="36"/><text x="91.1051%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (30 samples, 0.03%)</title><rect x="90.8612%" y="709" width="0.0302%" height="15" fill="rgb(228,38,35)" fg:x="90336" fg:w="30"/><text x="91.1112%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (24 samples, 0.02%)</title><rect x="90.8672%" y="693" width="0.0241%" height="15" fill="rgb(251,42,40)" fg:x="90342" fg:w="24"/><text x="91.1172%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (16 samples, 0.02%)</title><rect x="90.8753%" y="677" width="0.0161%" height="15" fill="rgb(210,51,19)" fg:x="90350" fg:w="16"/><text x="91.1253%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (10 samples, 0.01%)</title><rect x="90.8813%" y="661" width="0.0101%" height="15" fill="rgb(236,94,42)" fg:x="90356" fg:w="10"/><text x="91.1313%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (10 samples, 0.01%)</title><rect x="90.8813%" y="645" width="0.0101%" height="15" fill="rgb(239,167,16)" fg:x="90356" fg:w="10"/><text x="91.1313%" y="655.50"></text></g><g><title>move_binary_format::deserializer::load_module_handle_index (39 samples, 0.04%)</title><rect x="90.8914%" y="773" width="0.0392%" height="15" fill="rgb(252,175,31)" fg:x="90366" fg:w="39"/><text x="91.1414%" y="783.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (39 samples, 0.04%)</title><rect x="90.8914%" y="757" width="0.0392%" height="15" fill="rgb(206,166,30)" fg:x="90366" fg:w="39"/><text x="91.1414%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (34 samples, 0.03%)</title><rect x="90.8964%" y="741" width="0.0342%" height="15" fill="rgb(206,209,37)" fg:x="90371" fg:w="34"/><text x="91.1464%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (34 samples, 0.03%)</title><rect x="90.8964%" y="725" width="0.0342%" height="15" fill="rgb(226,91,4)" fg:x="90371" fg:w="34"/><text x="91.1464%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (31 samples, 0.03%)</title><rect x="90.8994%" y="709" width="0.0312%" height="15" fill="rgb(222,167,0)" fg:x="90374" fg:w="31"/><text x="91.1494%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (26 samples, 0.03%)</title><rect x="90.9044%" y="693" width="0.0262%" height="15" fill="rgb(211,70,14)" fg:x="90379" fg:w="26"/><text x="91.1544%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (14 samples, 0.01%)</title><rect x="90.9165%" y="677" width="0.0141%" height="15" fill="rgb(214,84,42)" fg:x="90391" fg:w="14"/><text x="91.1665%" y="687.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (15 samples, 0.02%)</title><rect x="90.9688%" y="677" width="0.0151%" height="15" fill="rgb(235,157,37)" fg:x="90443" fg:w="15"/><text x="91.2188%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_function_handles (245 samples, 0.25%)</title><rect x="90.7656%" y="789" width="0.2464%" height="15" fill="rgb(225,13,6)" fg:x="90241" fg:w="245"/><text x="91.0156%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_signature_index (81 samples, 0.08%)</title><rect x="90.9306%" y="773" width="0.0815%" height="15" fill="rgb(205,202,1)" fg:x="90405" fg:w="81"/><text x="91.1806%" y="783.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (81 samples, 0.08%)</title><rect x="90.9306%" y="757" width="0.0815%" height="15" fill="rgb(232,195,26)" fg:x="90405" fg:w="81"/><text x="91.1806%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (72 samples, 0.07%)</title><rect x="90.9396%" y="741" width="0.0724%" height="15" fill="rgb(208,102,26)" fg:x="90414" fg:w="72"/><text x="91.1896%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (72 samples, 0.07%)</title><rect x="90.9396%" y="725" width="0.0724%" height="15" fill="rgb(215,41,39)" fg:x="90414" fg:w="72"/><text x="91.1896%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (59 samples, 0.06%)</title><rect x="90.9527%" y="709" width="0.0593%" height="15" fill="rgb(247,139,11)" fg:x="90427" fg:w="59"/><text x="91.2027%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (50 samples, 0.05%)</title><rect x="90.9618%" y="693" width="0.0503%" height="15" fill="rgb(243,99,6)" fg:x="90436" fg:w="50"/><text x="91.2118%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (28 samples, 0.03%)</title><rect x="90.9839%" y="677" width="0.0282%" height="15" fill="rgb(230,168,48)" fg:x="90458" fg:w="28"/><text x="91.2339%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (17 samples, 0.02%)</title><rect x="90.9950%" y="661" width="0.0171%" height="15" fill="rgb(238,227,13)" fg:x="90469" fg:w="17"/><text x="91.2450%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (17 samples, 0.02%)</title><rect x="90.9950%" y="645" width="0.0171%" height="15" fill="rgb(209,109,13)" fg:x="90469" fg:w="17"/><text x="91.2450%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="90.9980%" y="629" width="0.0141%" height="15" fill="rgb(228,195,1)" fg:x="90472" fg:w="14"/><text x="91.2480%" y="639.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (12 samples, 0.01%)</title><rect x="91.0171%" y="789" width="0.0121%" height="15" fill="rgb(230,218,0)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_size (12 samples, 0.01%)</title><rect x="91.0171%" y="773" width="0.0121%" height="15" fill="rgb(206,1,45)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="783.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (12 samples, 0.01%)</title><rect x="91.0171%" y="757" width="0.0121%" height="15" fill="rgb(209,124,26)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="91.0171%" y="741" width="0.0121%" height="15" fill="rgb(220,59,8)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="91.0171%" y="725" width="0.0121%" height="15" fill="rgb(251,41,37)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (12 samples, 0.01%)</title><rect x="91.0171%" y="709" width="0.0121%" height="15" fill="rgb(239,152,21)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (12 samples, 0.01%)</title><rect x="91.0171%" y="693" width="0.0121%" height="15" fill="rgb(226,32,1)" fg:x="90491" fg:w="12"/><text x="91.2671%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (10 samples, 0.01%)</title><rect x="91.0191%" y="677" width="0.0101%" height="15" fill="rgb(230,154,36)" fg:x="90493" fg:w="10"/><text x="91.2691%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (10 samples, 0.01%)</title><rect x="91.0191%" y="661" width="0.0101%" height="15" fill="rgb(208,228,43)" fg:x="90493" fg:w="10"/><text x="91.2691%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (10 samples, 0.01%)</title><rect x="91.0191%" y="645" width="0.0101%" height="15" fill="rgb(214,203,3)" fg:x="90493" fg:w="10"/><text x="91.2691%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="91.0191%" y="629" width="0.0101%" height="15" fill="rgb(207,149,29)" fg:x="90493" fg:w="10"/><text x="91.2691%" y="639.50"></text></g><g><title>move_binary_format::deserializer::load_signature_size (11 samples, 0.01%)</title><rect x="91.0392%" y="757" width="0.0111%" height="15" fill="rgb(250,105,7)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (11 samples, 0.01%)</title><rect x="91.0392%" y="741" width="0.0111%" height="15" fill="rgb(232,222,16)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="91.0392%" y="725" width="0.0111%" height="15" fill="rgb(209,32,24)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="91.0392%" y="709" width="0.0111%" height="15" fill="rgb(225,13,6)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (11 samples, 0.01%)</title><rect x="91.0392%" y="693" width="0.0111%" height="15" fill="rgb(245,226,26)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (11 samples, 0.01%)</title><rect x="91.0392%" y="677" width="0.0111%" height="15" fill="rgb(229,178,27)" fg:x="90513" fg:w="11"/><text x="91.2892%" y="687.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="91.0825%" y="693" width="0.0101%" height="15" fill="rgb(205,227,28)" fg:x="90556" fg:w="10"/><text x="91.3325%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="91.0815%" y="725" width="0.0171%" height="15" fill="rgb(210,191,45)" fg:x="90555" fg:w="17"/><text x="91.3315%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="91.0815%" y="709" width="0.0171%" height="15" fill="rgb(206,124,16)" fg:x="90555" fg:w="17"/><text x="91.3315%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="91.0804%" y="741" width="0.0211%" height="15" fill="rgb(210,162,0)" fg:x="90554" fg:w="21"/><text x="91.3304%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.01%)</title><rect x="91.1036%" y="741" width="0.0121%" height="15" fill="rgb(211,54,38)" fg:x="90577" fg:w="12"/><text x="91.3536%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.02%)</title><rect x="91.1297%" y="645" width="0.0201%" height="15" fill="rgb(248,192,3)" fg:x="90603" fg:w="20"/><text x="91.3797%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.02%)</title><rect x="91.1307%" y="629" width="0.0191%" height="15" fill="rgb(233,187,18)" fg:x="90604" fg:w="19"/><text x="91.3807%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.03%)</title><rect x="91.1267%" y="661" width="0.0272%" height="15" fill="rgb(237,208,14)" fg:x="90600" fg:w="27"/><text x="91.3767%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.04%)</title><rect x="91.1217%" y="677" width="0.0432%" height="15" fill="rgb(212,77,1)" fg:x="90595" fg:w="43"/><text x="91.3717%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (51 samples, 0.05%)</title><rect x="91.1156%" y="741" width="0.0513%" height="15" fill="rgb(210,163,22)" fg:x="90589" fg:w="51"/><text x="91.3656%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (46 samples, 0.05%)</title><rect x="91.1207%" y="725" width="0.0463%" height="15" fill="rgb(250,58,28)" fg:x="90594" fg:w="46"/><text x="91.3707%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.05%)</title><rect x="91.1207%" y="709" width="0.0463%" height="15" fill="rgb(254,28,41)" fg:x="90594" fg:w="46"/><text x="91.3707%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (46 samples, 0.05%)</title><rect x="91.1207%" y="693" width="0.0463%" height="15" fill="rgb(237,162,36)" fg:x="90594" fg:w="46"/><text x="91.3707%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::deserializer::load_signature_token::TypeBuilder&gt;&gt; (13 samples, 0.01%)</title><rect x="91.1700%" y="741" width="0.0131%" height="15" fill="rgb(232,56,6)" fg:x="90643" fg:w="13"/><text x="91.4200%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_binary_format::deserializer::load_signature_token::TypeBuilder&gt;&gt; (10 samples, 0.01%)</title><rect x="91.1730%" y="725" width="0.0101%" height="15" fill="rgb(216,127,42)" fg:x="90646" fg:w="10"/><text x="91.4230%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="91.1730%" y="709" width="0.0101%" height="15" fill="rgb(241,69,15)" fg:x="90646" fg:w="10"/><text x="91.4230%" y="719.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="91.1901%" y="661" width="0.0101%" height="15" fill="rgb(227,180,19)" fg:x="90663" fg:w="10"/><text x="91.4401%" y="671.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="91.1901%" y="645" width="0.0101%" height="15" fill="rgb(231,188,29)" fg:x="90663" fg:w="10"/><text x="91.4401%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="91.1891%" y="693" width="0.0171%" height="15" fill="rgb(224,176,27)" fg:x="90662" fg:w="17"/><text x="91.4391%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="91.1901%" y="677" width="0.0161%" height="15" fill="rgb(249,214,19)" fg:x="90663" fg:w="16"/><text x="91.4401%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="91.1881%" y="725" width="0.0201%" height="15" fill="rgb(240,0,4)" fg:x="90661" fg:w="20"/><text x="91.4381%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.02%)</title><rect x="91.1881%" y="709" width="0.0201%" height="15" fill="rgb(233,28,41)" fg:x="90661" fg:w="20"/><text x="91.4381%" y="719.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::TypeBuilder::apply (31 samples, 0.03%)</title><rect x="91.1861%" y="741" width="0.0312%" height="15" fill="rgb(220,90,51)" fg:x="90659" fg:w="31"/><text x="91.4361%" y="751.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (14 samples, 0.01%)</title><rect x="91.2746%" y="677" width="0.0141%" height="15" fill="rgb(250,52,22)" fg:x="90747" fg:w="14"/><text x="91.5246%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (258 samples, 0.26%)</title><rect x="91.0372%" y="789" width="0.2595%" height="15" fill="rgb(231,152,36)" fg:x="90511" fg:w="258"/><text x="91.2872%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (258 samples, 0.26%)</title><rect x="91.0372%" y="773" width="0.2595%" height="15" fill="rgb(250,218,4)" fg:x="90511" fg:w="258"/><text x="91.2872%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (245 samples, 0.25%)</title><rect x="91.0503%" y="757" width="0.2464%" height="15" fill="rgb(210,38,21)" fg:x="90524" fg:w="245"/><text x="91.3003%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (76 samples, 0.08%)</title><rect x="91.2203%" y="741" width="0.0764%" height="15" fill="rgb(230,75,13)" fg:x="90693" fg:w="76"/><text x="91.4703%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (53 samples, 0.05%)</title><rect x="91.2434%" y="725" width="0.0533%" height="15" fill="rgb(250,68,53)" fg:x="90716" fg:w="53"/><text x="91.4934%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (52 samples, 0.05%)</title><rect x="91.2444%" y="709" width="0.0523%" height="15" fill="rgb(250,210,16)" fg:x="90717" fg:w="52"/><text x="91.4944%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (35 samples, 0.04%)</title><rect x="91.2615%" y="693" width="0.0352%" height="15" fill="rgb(240,132,5)" fg:x="90734" fg:w="35"/><text x="91.5115%" y="703.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (580 samples, 0.58%)</title><rect x="90.7445%" y="805" width="0.5834%" height="15" fill="rgb(222,148,48)" fg:x="90220" fg:w="580"/><text x="90.9945%" y="815.50"></text></g><g><title>move_binary_format::deserializer::load_struct_handles (31 samples, 0.03%)</title><rect x="91.2967%" y="789" width="0.0312%" height="15" fill="rgb(247,181,24)" fg:x="90769" fg:w="31"/><text x="91.5467%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_struct_type_parameters (10 samples, 0.01%)</title><rect x="91.3178%" y="773" width="0.0101%" height="15" fill="rgb(239,5,31)" fg:x="90790" fg:w="10"/><text x="91.5678%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool (22 samples, 0.02%)</title><rect x="91.3289%" y="773" width="0.0221%" height="15" fill="rgb(241,152,38)" fg:x="90801" fg:w="22"/><text x="91.5789%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_constant (21 samples, 0.02%)</title><rect x="91.3299%" y="757" width="0.0211%" height="15" fill="rgb(246,200,37)" fg:x="90802" fg:w="21"/><text x="91.5799%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_function_handles (14 samples, 0.01%)</title><rect x="91.3510%" y="773" width="0.0141%" height="15" fill="rgb(243,210,26)" fg:x="90823" fg:w="14"/><text x="91.6010%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_function_instantiations (16 samples, 0.02%)</title><rect x="91.3651%" y="773" width="0.0161%" height="15" fill="rgb(222,22,22)" fg:x="90837" fg:w="16"/><text x="91.6151%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_signature_index (13 samples, 0.01%)</title><rect x="91.3681%" y="757" width="0.0131%" height="15" fill="rgb(208,129,28)" fg:x="90840" fg:w="13"/><text x="91.6181%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="91.3681%" y="741" width="0.0131%" height="15" fill="rgb(254,169,28)" fg:x="90840" fg:w="13"/><text x="91.6181%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="91.3681%" y="725" width="0.0131%" height="15" fill="rgb(225,45,17)" fg:x="90840" fg:w="13"/><text x="91.6181%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="91.3681%" y="709" width="0.0131%" height="15" fill="rgb(232,199,2)" fg:x="90840" fg:w="13"/><text x="91.6181%" y="719.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (39 samples, 0.04%)</title><rect x="91.3812%" y="773" width="0.0392%" height="15" fill="rgb(235,33,40)" fg:x="90853" fg:w="39"/><text x="91.6312%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_identifier_size (25 samples, 0.03%)</title><rect x="91.3953%" y="757" width="0.0251%" height="15" fill="rgb(237,89,50)" fg:x="90867" fg:w="25"/><text x="91.6453%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (25 samples, 0.03%)</title><rect x="91.3953%" y="741" width="0.0251%" height="15" fill="rgb(238,126,5)" fg:x="90867" fg:w="25"/><text x="91.6453%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (25 samples, 0.03%)</title><rect x="91.3953%" y="725" width="0.0251%" height="15" fill="rgb(247,214,42)" fg:x="90867" fg:w="25"/><text x="91.6453%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (25 samples, 0.03%)</title><rect x="91.3953%" y="709" width="0.0251%" height="15" fill="rgb(238,60,45)" fg:x="90867" fg:w="25"/><text x="91.6453%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (18 samples, 0.02%)</title><rect x="91.4023%" y="693" width="0.0181%" height="15" fill="rgb(225,69,44)" fg:x="90874" fg:w="18"/><text x="91.6523%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (13 samples, 0.01%)</title><rect x="91.4073%" y="677" width="0.0131%" height="15" fill="rgb(241,13,44)" fg:x="90879" fg:w="13"/><text x="91.6573%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_module_handles (11 samples, 0.01%)</title><rect x="91.4204%" y="773" width="0.0111%" height="15" fill="rgb(227,121,22)" fg:x="90892" fg:w="11"/><text x="91.6704%" y="783.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="91.4425%" y="613" width="0.0101%" height="15" fill="rgb(231,160,23)" fg:x="90914" fg:w="10"/><text x="91.6925%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.02%)</title><rect x="91.4405%" y="645" width="0.0151%" height="15" fill="rgb(250,179,43)" fg:x="90912" fg:w="15"/><text x="91.6905%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="91.4415%" y="629" width="0.0141%" height="15" fill="rgb(233,54,46)" fg:x="90913" fg:w="14"/><text x="91.6915%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.03%)</title><rect x="91.4385%" y="661" width="0.0251%" height="15" fill="rgb(247,120,42)" fg:x="90910" fg:w="25"/><text x="91.6885%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="91.4637%" y="661" width="0.0131%" height="15" fill="rgb(221,219,12)" fg:x="90935" fg:w="13"/><text x="91.7137%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.05%)</title><rect x="91.4315%" y="741" width="0.0503%" height="15" fill="rgb(211,126,8)" fg:x="90903" fg:w="50"/><text x="91.6815%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.05%)</title><rect x="91.4315%" y="725" width="0.0503%" height="15" fill="rgb(218,154,33)" fg:x="90903" fg:w="50"/><text x="91.6815%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.05%)</title><rect x="91.4315%" y="709" width="0.0503%" height="15" fill="rgb(212,199,16)" fg:x="90903" fg:w="50"/><text x="91.6815%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (50 samples, 0.05%)</title><rect x="91.4315%" y="693" width="0.0503%" height="15" fill="rgb(236,215,46)" fg:x="90903" fg:w="50"/><text x="91.6815%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.05%)</title><rect x="91.4315%" y="677" width="0.0503%" height="15" fill="rgb(232,32,22)" fg:x="90903" fg:w="50"/><text x="91.6815%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (63 samples, 0.06%)</title><rect x="91.4315%" y="773" width="0.0634%" height="15" fill="rgb(234,79,15)" fg:x="90903" fg:w="63"/><text x="91.6815%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (63 samples, 0.06%)</title><rect x="91.4315%" y="757" width="0.0634%" height="15" fill="rgb(235,187,47)" fg:x="90903" fg:w="63"/><text x="91.6815%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_signature_size (13 samples, 0.01%)</title><rect x="91.4818%" y="741" width="0.0131%" height="15" fill="rgb(244,69,37)" fg:x="90953" fg:w="13"/><text x="91.7318%" y="751.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="91.4818%" y="725" width="0.0131%" height="15" fill="rgb(249,140,25)" fg:x="90953" fg:w="13"/><text x="91.7318%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="91.4838%" y="709" width="0.0111%" height="15" fill="rgb(213,69,8)" fg:x="90955" fg:w="11"/><text x="91.7338%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="91.4838%" y="693" width="0.0111%" height="15" fill="rgb(220,136,2)" fg:x="90955" fg:w="11"/><text x="91.7338%" y="703.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (173 samples, 0.17%)</title><rect x="91.3289%" y="789" width="0.1740%" height="15" fill="rgb(237,50,36)" fg:x="90801" fg:w="173"/><text x="91.5789%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (15 samples, 0.02%)</title><rect x="91.5039%" y="773" width="0.0151%" height="15" fill="rgb(226,18,11)" fg:x="90975" fg:w="15"/><text x="91.7539%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (15 samples, 0.02%)</title><rect x="91.5039%" y="757" width="0.0151%" height="15" fill="rgb(243,156,2)" fg:x="90975" fg:w="15"/><text x="91.7539%" y="767.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (198 samples, 0.20%)</title><rect x="91.3279%" y="805" width="0.1992%" height="15" fill="rgb(218,8,34)" fg:x="90800" fg:w="198"/><text x="91.5779%" y="815.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (24 samples, 0.02%)</title><rect x="91.5029%" y="789" width="0.0241%" height="15" fill="rgb(250,94,35)" fg:x="90974" fg:w="24"/><text x="91.7529%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_function_handle_index (14 samples, 0.01%)</title><rect x="91.5310%" y="757" width="0.0141%" height="15" fill="rgb(229,127,21)" fg:x="91002" fg:w="14"/><text x="91.7810%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="91.5321%" y="741" width="0.0131%" height="15" fill="rgb(234,49,5)" fg:x="91003" fg:w="13"/><text x="91.7821%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="91.5351%" y="725" width="0.0101%" height="15" fill="rgb(248,12,16)" fg:x="91006" fg:w="10"/><text x="91.7851%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="91.5351%" y="709" width="0.0101%" height="15" fill="rgb(208,220,31)" fg:x="91006" fg:w="10"/><text x="91.7851%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (10 samples, 0.01%)</title><rect x="91.5351%" y="693" width="0.0101%" height="15" fill="rgb(243,184,0)" fg:x="91006" fg:w="10"/><text x="91.7851%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="91.5481%" y="725" width="0.0131%" height="15" fill="rgb(217,38,21)" fg:x="91019" fg:w="13"/><text x="91.7981%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="91.5481%" y="709" width="0.0131%" height="15" fill="rgb(239,120,45)" fg:x="91019" fg:w="13"/><text x="91.7981%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (13 samples, 0.01%)</title><rect x="91.5481%" y="693" width="0.0131%" height="15" fill="rgb(235,33,2)" fg:x="91019" fg:w="13"/><text x="91.7981%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="91.5481%" y="677" width="0.0131%" height="15" fill="rgb(249,161,5)" fg:x="91019" fg:w="13"/><text x="91.7981%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.02%)</title><rect x="91.5471%" y="741" width="0.0151%" height="15" fill="rgb(250,165,48)" fg:x="91018" fg:w="15"/><text x="91.7971%" y="751.50"></text></g><g><title>move_binary_format::deserializer::load_acquires_count (13 samples, 0.01%)</title><rect x="91.5622%" y="741" width="0.0131%" height="15" fill="rgb(221,23,45)" fg:x="91033" fg:w="13"/><text x="91.8122%" y="751.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="91.5622%" y="725" width="0.0131%" height="15" fill="rgb(217,108,46)" fg:x="91033" fg:w="13"/><text x="91.8122%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="91.5622%" y="709" width="0.0131%" height="15" fill="rgb(254,26,35)" fg:x="91033" fg:w="13"/><text x="91.8122%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="91.5622%" y="693" width="0.0131%" height="15" fill="rgb(218,223,28)" fg:x="91033" fg:w="13"/><text x="91.8122%" y="703.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (10 samples, 0.01%)</title><rect x="91.5652%" y="677" width="0.0101%" height="15" fill="rgb(242,27,47)" fg:x="91036" fg:w="10"/><text x="91.8152%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_struct_definition_indices (45 samples, 0.05%)</title><rect x="91.5451%" y="757" width="0.0453%" height="15" fill="rgb(218,39,35)" fg:x="91016" fg:w="45"/><text x="91.7951%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_struct_def_index (15 samples, 0.02%)</title><rect x="91.5753%" y="741" width="0.0151%" height="15" fill="rgb(232,127,16)" fg:x="91046" fg:w="15"/><text x="91.8253%" y="751.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (12 samples, 0.01%)</title><rect x="91.5783%" y="725" width="0.0121%" height="15" fill="rgb(231,219,51)" fg:x="91049" fg:w="12"/><text x="91.8283%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (17 samples, 0.02%)</title><rect x="91.5954%" y="709" width="0.0171%" height="15" fill="rgb(217,220,46)" fg:x="91066" fg:w="17"/><text x="91.8454%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.01%)</title><rect x="91.6005%" y="693" width="0.0121%" height="15" fill="rgb(230,75,1)" fg:x="91071" fg:w="12"/><text x="91.8505%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.01%)</title><rect x="91.6015%" y="677" width="0.0111%" height="15" fill="rgb(218,2,8)" fg:x="91072" fg:w="11"/><text x="91.8515%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (92 samples, 0.09%)</title><rect x="91.5270%" y="789" width="0.0925%" height="15" fill="rgb(206,111,30)" fg:x="90998" fg:w="92"/><text x="91.7770%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (92 samples, 0.09%)</title><rect x="91.5270%" y="773" width="0.0925%" height="15" fill="rgb(209,135,6)" fg:x="90998" fg:w="92"/><text x="91.7770%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (29 samples, 0.03%)</title><rect x="91.5904%" y="757" width="0.0292%" height="15" fill="rgb(205,169,10)" fg:x="91061" fg:w="29"/><text x="91.8404%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (29 samples, 0.03%)</title><rect x="91.5904%" y="741" width="0.0292%" height="15" fill="rgb(212,204,38)" fg:x="91061" fg:w="29"/><text x="91.8404%" y="751.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (29 samples, 0.03%)</title><rect x="91.5904%" y="725" width="0.0292%" height="15" fill="rgb(205,199,14)" fg:x="91061" fg:w="29"/><text x="91.8404%" y="735.50"></text></g><g><title>move_binary_format::deserializer::load_field_defs (38 samples, 0.04%)</title><rect x="91.6196%" y="773" width="0.0382%" height="15" fill="rgb(212,4,6)" fg:x="91090" fg:w="38"/><text x="91.8696%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_field_def (31 samples, 0.03%)</title><rect x="91.6266%" y="757" width="0.0312%" height="15" fill="rgb(250,15,10)" fg:x="91097" fg:w="31"/><text x="91.8766%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (22 samples, 0.02%)</title><rect x="91.6357%" y="741" width="0.0221%" height="15" fill="rgb(212,49,51)" fg:x="91106" fg:w="22"/><text x="91.8857%" y="751.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (132 samples, 0.13%)</title><rect x="91.5270%" y="805" width="0.1328%" height="15" fill="rgb(235,21,9)" fg:x="90998" fg:w="132"/><text x="91.7770%" y="815.50"></text></g><g><title>move_binary_format::deserializer::load_struct_defs (40 samples, 0.04%)</title><rect x="91.6196%" y="789" width="0.0402%" height="15" fill="rgb(251,31,32)" fg:x="91090" fg:w="40"/><text x="91.8696%" y="799.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (12 samples, 0.01%)</title><rect x="91.7010%" y="709" width="0.0121%" height="15" fill="rgb(246,23,9)" fg:x="91171" fg:w="12"/><text x="91.9510%" y="719.50"></text></g><g><title>&lt;move_binary_format::file_format_common::versioned_data::VersionedCursor as std::io::Read&gt;::read (32 samples, 0.03%)</title><rect x="91.6990%" y="741" width="0.0322%" height="15" fill="rgb(225,216,14)" fg:x="91169" fg:w="32"/><text x="91.9490%" y="751.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (32 samples, 0.03%)</title><rect x="91.6990%" y="725" width="0.0322%" height="15" fill="rgb(215,200,26)" fg:x="91169" fg:w="32"/><text x="91.9490%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (18 samples, 0.02%)</title><rect x="91.7131%" y="709" width="0.0181%" height="15" fill="rgb(237,130,47)" fg:x="91183" fg:w="18"/><text x="91.9631%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.01%)</title><rect x="91.7312%" y="741" width="0.0101%" height="15" fill="rgb(247,74,14)" fg:x="91201" fg:w="10"/><text x="91.9812%" y="751.50"></text></g><g><title>__calloc (17 samples, 0.02%)</title><rect x="91.7453%" y="629" width="0.0171%" height="15" fill="rgb(254,97,46)" fg:x="91215" fg:w="17"/><text x="91.9953%" y="639.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="91.7493%" y="613" width="0.0131%" height="15" fill="rgb(234,191,1)" fg:x="91219" fg:w="13"/><text x="91.9993%" y="623.50"></text></g><g><title>alloc::alloc::alloc_zeroed (20 samples, 0.02%)</title><rect x="91.7443%" y="645" width="0.0201%" height="15" fill="rgb(215,165,14)" fg:x="91214" fg:w="20"/><text x="91.9943%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (31 samples, 0.03%)</title><rect x="91.7413%" y="677" width="0.0312%" height="15" fill="rgb(230,182,6)" fg:x="91211" fg:w="31"/><text x="91.9913%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="91.7423%" y="661" width="0.0302%" height="15" fill="rgb(210,127,39)" fg:x="91212" fg:w="30"/><text x="91.9923%" y="671.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (10 samples, 0.01%)</title><rect x="91.7795%" y="661" width="0.0101%" height="15" fill="rgb(223,212,51)" fg:x="91249" fg:w="10"/><text x="92.0295%" y="671.50"></text></g><g><title>alloc::vec::from_elem (56 samples, 0.06%)</title><rect x="91.7413%" y="741" width="0.0563%" height="15" fill="rgb(226,176,43)" fg:x="91211" fg:w="56"/><text x="91.9913%" y="751.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (56 samples, 0.06%)</title><rect x="91.7413%" y="725" width="0.0563%" height="15" fill="rgb(222,155,4)" fg:x="91211" fg:w="56"/><text x="91.9913%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (56 samples, 0.06%)</title><rect x="91.7413%" y="709" width="0.0563%" height="15" fill="rgb(215,149,7)" fg:x="91211" fg:w="56"/><text x="91.9913%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.06%)</title><rect x="91.7413%" y="693" width="0.0563%" height="15" fill="rgb(252,199,23)" fg:x="91211" fg:w="56"/><text x="91.9913%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (23 samples, 0.02%)</title><rect x="91.7745%" y="677" width="0.0231%" height="15" fill="rgb(245,52,29)" fg:x="91244" fg:w="23"/><text x="92.0245%" y="687.50"></text></g><g><title>alloc::string::String::from_utf8 (16 samples, 0.02%)</title><rect x="91.8177%" y="725" width="0.0161%" height="15" fill="rgb(221,228,19)" fg:x="91287" fg:w="16"/><text x="92.0677%" y="735.50"></text></g><g><title>move_binary_format::deserializer::load_identifiers (173 samples, 0.17%)</title><rect x="91.6849%" y="757" width="0.1740%" height="15" fill="rgb(253,101,6)" fg:x="91155" fg:w="173"/><text x="91.9349%" y="767.50"></text></g><g><title>move_core_types::identifier::Identifier::from_utf8 (49 samples, 0.05%)</title><rect x="91.8097%" y="741" width="0.0493%" height="15" fill="rgb(211,130,8)" fg:x="91279" fg:w="49"/><text x="92.0597%" y="751.50"></text></g><g><title>move_core_types::identifier::Identifier::new (25 samples, 0.03%)</title><rect x="91.8338%" y="725" width="0.0251%" height="15" fill="rgb(238,37,53)" fg:x="91303" fg:w="25"/><text x="92.0838%" y="735.50"></text></g><g><title>move_core_types::identifier::Identifier::is_valid (22 samples, 0.02%)</title><rect x="91.8368%" y="709" width="0.0221%" height="15" fill="rgb(235,145,5)" fg:x="91306" fg:w="22"/><text x="92.0868%" y="719.50"></text></g><g><title>move_core_types::identifier::is_valid (20 samples, 0.02%)</title><rect x="91.8388%" y="693" width="0.0201%" height="15" fill="rgb(244,12,43)" fg:x="91308" fg:w="20"/><text x="92.0888%" y="703.50"></text></g><g><title>move_core_types::identifier::all_bytes_valid (18 samples, 0.02%)</title><rect x="91.8408%" y="677" width="0.0181%" height="15" fill="rgb(246,195,24)" fg:x="91310" fg:w="18"/><text x="92.0908%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="91.8680%" y="741" width="0.0111%" height="15" fill="rgb(235,163,6)" fg:x="91337" fg:w="11"/><text x="92.1180%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="91.8952%" y="725" width="0.0111%" height="15" fill="rgb(236,218,17)" fg:x="91364" fg:w="11"/><text x="92.1452%" y="735.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (43 samples, 0.04%)</title><rect x="91.8791%" y="741" width="0.0432%" height="15" fill="rgb(235,12,38)" fg:x="91348" fg:w="43"/><text x="92.1291%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="91.9062%" y="725" width="0.0161%" height="15" fill="rgb(225,195,33)" fg:x="91375" fg:w="16"/><text x="92.1562%" y="735.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (57 samples, 0.06%)</title><rect x="91.8660%" y="757" width="0.0573%" height="15" fill="rgb(238,54,35)" fg:x="91335" fg:w="57"/><text x="92.1160%" y="767.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (267 samples, 0.27%)</title><rect x="91.6598%" y="773" width="0.2686%" height="15" fill="rgb(238,33,7)" fg:x="91130" fg:w="267"/><text x="91.9098%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_field_handles (16 samples, 0.02%)</title><rect x="91.9314%" y="757" width="0.0161%" height="15" fill="rgb(245,5,14)" fg:x="91400" fg:w="16"/><text x="92.1814%" y="767.50"></text></g><g><title>move_binary_format::deserializer::load_struct_defs (10 samples, 0.01%)</title><rect x="91.9585%" y="757" width="0.0101%" height="15" fill="rgb(251,95,31)" fg:x="91427" fg:w="10"/><text x="92.2085%" y="767.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (310 samples, 0.31%)</title><rect x="91.6598%" y="789" width="0.3118%" height="15" fill="rgb(222,15,46)" fg:x="91130" fg:w="310"/><text x="91.9098%" y="799.50"></text></g><g><title>move_binary_format::deserializer::build_module_tables (43 samples, 0.04%)</title><rect x="91.9283%" y="773" width="0.0432%" height="15" fill="rgb(226,182,24)" fg:x="91397" fg:w="43"/><text x="92.1783%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_table_offset (26 samples, 0.03%)</title><rect x="91.9766%" y="757" width="0.0262%" height="15" fill="rgb(229,105,41)" fg:x="91445" fg:w="26"/><text x="92.2266%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (26 samples, 0.03%)</title><rect x="91.9766%" y="741" width="0.0262%" height="15" fill="rgb(216,99,53)" fg:x="91445" fg:w="26"/><text x="92.2266%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (24 samples, 0.02%)</title><rect x="91.9786%" y="725" width="0.0241%" height="15" fill="rgb(253,26,20)" fg:x="91447" fg:w="24"/><text x="92.2286%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (23 samples, 0.02%)</title><rect x="91.9796%" y="709" width="0.0231%" height="15" fill="rgb(249,155,28)" fg:x="91448" fg:w="23"/><text x="92.2296%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (22 samples, 0.02%)</title><rect x="91.9806%" y="693" width="0.0221%" height="15" fill="rgb(241,221,2)" fg:x="91449" fg:w="22"/><text x="92.2306%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (21 samples, 0.02%)</title><rect x="91.9817%" y="677" width="0.0211%" height="15" fill="rgb(219,124,6)" fg:x="91450" fg:w="21"/><text x="92.2317%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_table_size (11 samples, 0.01%)</title><rect x="92.0028%" y="757" width="0.0111%" height="15" fill="rgb(233,37,6)" fg:x="91471" fg:w="11"/><text x="92.2528%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (11 samples, 0.01%)</title><rect x="92.0028%" y="741" width="0.0111%" height="15" fill="rgb(238,20,14)" fg:x="91471" fg:w="11"/><text x="92.2528%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="92.0038%" y="725" width="0.0101%" height="15" fill="rgb(232,106,27)" fg:x="91472" fg:w="10"/><text x="92.2538%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="92.0038%" y="709" width="0.0101%" height="15" fill="rgb(246,157,24)" fg:x="91472" fg:w="10"/><text x="92.2538%" y="719.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (359 samples, 0.36%)</title><rect x="91.6598%" y="805" width="0.3611%" height="15" fill="rgb(214,153,10)" fg:x="91130" fg:w="359"/><text x="91.9098%" y="815.50"></text></g><g><title>move_binary_format::deserializer::read_tables (44 samples, 0.04%)</title><rect x="91.9766%" y="789" width="0.0443%" height="15" fill="rgb(212,94,6)" fg:x="91445" fg:w="44"/><text x="92.2266%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_table (44 samples, 0.04%)</title><rect x="91.9766%" y="773" width="0.0443%" height="15" fill="rgb(254,25,27)" fg:x="91445" fg:w="44"/><text x="92.2266%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="92.0853%" y="773" width="0.0422%" height="15" fill="rgb(250,43,52)" fg:x="91553" fg:w="42"/><text x="92.3353%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (46 samples, 0.05%)</title><rect x="92.0822%" y="789" width="0.0463%" height="15" fill="rgb(221,226,40)" fg:x="91550" fg:w="46"/><text x="92.3322%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.01%)</title><rect x="92.1416%" y="773" width="0.0111%" height="15" fill="rgb(235,162,34)" fg:x="91609" fg:w="11"/><text x="92.3916%" y="783.50"></text></g><g><title>_int_malloc (12 samples, 0.01%)</title><rect x="92.1838%" y="613" width="0.0121%" height="15" fill="rgb(239,24,26)" fg:x="91651" fg:w="12"/><text x="92.4338%" y="623.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.02%)</title><rect x="92.1748%" y="645" width="0.0221%" height="15" fill="rgb(244,226,11)" fg:x="91642" fg:w="22"/><text x="92.4248%" y="655.50"></text></g><g><title>_int_realloc (18 samples, 0.02%)</title><rect x="92.1788%" y="629" width="0.0181%" height="15" fill="rgb(225,23,10)" fg:x="91646" fg:w="18"/><text x="92.4288%" y="639.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 0.02%)</title><rect x="92.1748%" y="661" width="0.0231%" height="15" fill="rgb(249,125,6)" fg:x="91642" fg:w="23"/><text x="92.4248%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.03%)</title><rect x="92.1728%" y="693" width="0.0302%" height="15" fill="rgb(246,212,12)" fg:x="91640" fg:w="30"/><text x="92.4228%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.03%)</title><rect x="92.1728%" y="677" width="0.0302%" height="15" fill="rgb(230,43,32)" fg:x="91640" fg:w="30"/><text x="92.4228%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.04%)</title><rect x="92.1667%" y="709" width="0.0402%" height="15" fill="rgb(210,95,23)" fg:x="91634" fg:w="40"/><text x="92.4167%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (17 samples, 0.02%)</title><rect x="92.2070%" y="709" width="0.0171%" height="15" fill="rgb(229,103,33)" fg:x="91674" fg:w="17"/><text x="92.4570%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (80 samples, 0.08%)</title><rect x="92.1526%" y="773" width="0.0805%" height="15" fill="rgb(222,104,27)" fg:x="91620" fg:w="80"/><text x="92.4026%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (79 samples, 0.08%)</title><rect x="92.1536%" y="757" width="0.0795%" height="15" fill="rgb(239,221,23)" fg:x="91621" fg:w="79"/><text x="92.4036%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (79 samples, 0.08%)</title><rect x="92.1536%" y="741" width="0.0795%" height="15" fill="rgb(222,98,21)" fg:x="91621" fg:w="79"/><text x="92.4036%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (79 samples, 0.08%)</title><rect x="92.1536%" y="725" width="0.0795%" height="15" fill="rgb(231,101,20)" fg:x="91621" fg:w="79"/><text x="92.4036%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (108 samples, 0.11%)</title><rect x="92.1295%" y="789" width="0.1086%" height="15" fill="rgb(215,150,22)" fg:x="91597" fg:w="108"/><text x="92.3795%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (21 samples, 0.02%)</title><rect x="92.2381%" y="789" width="0.0211%" height="15" fill="rgb(248,3,34)" fg:x="91705" fg:w="21"/><text x="92.4881%" y="799.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format_common::Opcodes&gt;::from_u8 (14 samples, 0.01%)</title><rect x="92.2593%" y="789" width="0.0141%" height="15" fill="rgb(220,141,21)" fg:x="91726" fg:w="14"/><text x="92.5093%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_bytecode_count (13 samples, 0.01%)</title><rect x="92.2733%" y="789" width="0.0131%" height="15" fill="rgb(223,41,48)" fg:x="91740" fg:w="13"/><text x="92.5233%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="92.2733%" y="773" width="0.0131%" height="15" fill="rgb(247,12,5)" fg:x="91740" fg:w="13"/><text x="92.5233%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="92.2743%" y="757" width="0.0121%" height="15" fill="rgb(206,173,10)" fg:x="91741" fg:w="12"/><text x="92.5243%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="92.2743%" y="741" width="0.0121%" height="15" fill="rgb(233,214,37)" fg:x="91741" fg:w="12"/><text x="92.5243%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (12 samples, 0.01%)</title><rect x="92.2743%" y="725" width="0.0121%" height="15" fill="rgb(238,86,43)" fg:x="91741" fg:w="12"/><text x="92.5243%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (11 samples, 0.01%)</title><rect x="92.2754%" y="709" width="0.0111%" height="15" fill="rgb(212,182,8)" fg:x="91742" fg:w="11"/><text x="92.5254%" y="719.50"></text></g><g><title>move_binary_format::deserializer::load_bytecode_index (29 samples, 0.03%)</title><rect x="92.2864%" y="789" width="0.0292%" height="15" fill="rgb(240,91,47)" fg:x="91753" fg:w="29"/><text x="92.5364%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (28 samples, 0.03%)</title><rect x="92.2874%" y="773" width="0.0282%" height="15" fill="rgb(209,138,26)" fg:x="91754" fg:w="28"/><text x="92.5374%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (27 samples, 0.03%)</title><rect x="92.2884%" y="757" width="0.0272%" height="15" fill="rgb(231,163,20)" fg:x="91755" fg:w="27"/><text x="92.5384%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (27 samples, 0.03%)</title><rect x="92.2884%" y="741" width="0.0272%" height="15" fill="rgb(214,91,54)" fg:x="91755" fg:w="27"/><text x="92.5384%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (23 samples, 0.02%)</title><rect x="92.2925%" y="725" width="0.0231%" height="15" fill="rgb(230,32,17)" fg:x="91759" fg:w="23"/><text x="92.5425%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (20 samples, 0.02%)</title><rect x="92.2955%" y="709" width="0.0201%" height="15" fill="rgb(231,34,34)" fg:x="91762" fg:w="20"/><text x="92.5455%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (11 samples, 0.01%)</title><rect x="92.3045%" y="693" width="0.0111%" height="15" fill="rgb(224,228,27)" fg:x="91771" fg:w="11"/><text x="92.5545%" y="703.50"></text></g><g><title>move_binary_format::deserializer::load_constant_pool_index (25 samples, 0.03%)</title><rect x="92.3156%" y="789" width="0.0251%" height="15" fill="rgb(219,35,40)" fg:x="91782" fg:w="25"/><text x="92.5656%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (24 samples, 0.02%)</title><rect x="92.3166%" y="773" width="0.0241%" height="15" fill="rgb(234,42,8)" fg:x="91783" fg:w="24"/><text x="92.5666%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (20 samples, 0.02%)</title><rect x="92.3206%" y="757" width="0.0201%" height="15" fill="rgb(226,75,22)" fg:x="91787" fg:w="20"/><text x="92.5706%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (19 samples, 0.02%)</title><rect x="92.3216%" y="741" width="0.0191%" height="15" fill="rgb(242,203,28)" fg:x="91788" fg:w="19"/><text x="92.5716%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (18 samples, 0.02%)</title><rect x="92.3226%" y="725" width="0.0181%" height="15" fill="rgb(221,3,9)" fg:x="91789" fg:w="18"/><text x="92.5726%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (16 samples, 0.02%)</title><rect x="92.3246%" y="709" width="0.0161%" height="15" fill="rgb(214,34,31)" fg:x="91791" fg:w="16"/><text x="92.5746%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (10 samples, 0.01%)</title><rect x="92.3307%" y="693" width="0.0101%" height="15" fill="rgb(252,119,15)" fg:x="91797" fg:w="10"/><text x="92.5807%" y="703.50"></text></g><g><title>move_binary_format::deserializer::load_field_handle_index (15 samples, 0.02%)</title><rect x="92.3407%" y="789" width="0.0151%" height="15" fill="rgb(244,224,31)" fg:x="91807" fg:w="15"/><text x="92.5907%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (13 samples, 0.01%)</title><rect x="92.3427%" y="773" width="0.0131%" height="15" fill="rgb(215,8,51)" fg:x="91809" fg:w="13"/><text x="92.5927%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="92.3437%" y="757" width="0.0121%" height="15" fill="rgb(207,24,1)" fg:x="91810" fg:w="12"/><text x="92.5937%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (12 samples, 0.01%)</title><rect x="92.3437%" y="741" width="0.0121%" height="15" fill="rgb(245,90,0)" fg:x="91810" fg:w="12"/><text x="92.5937%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (12 samples, 0.01%)</title><rect x="92.3437%" y="725" width="0.0121%" height="15" fill="rgb(246,43,48)" fg:x="91810" fg:w="12"/><text x="92.5937%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (10 samples, 0.01%)</title><rect x="92.3458%" y="709" width="0.0101%" height="15" fill="rgb(252,218,10)" fg:x="91812" fg:w="10"/><text x="92.5958%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (10 samples, 0.01%)</title><rect x="92.3830%" y="693" width="0.0101%" height="15" fill="rgb(231,24,35)" fg:x="91849" fg:w="10"/><text x="92.6330%" y="703.50"></text></g><g><title>move_binary_format::deserializer::load_function_handle_index (49 samples, 0.05%)</title><rect x="92.3588%" y="789" width="0.0493%" height="15" fill="rgb(225,66,19)" fg:x="91825" fg:w="49"/><text x="92.6088%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (49 samples, 0.05%)</title><rect x="92.3588%" y="773" width="0.0493%" height="15" fill="rgb(214,96,51)" fg:x="91825" fg:w="49"/><text x="92.6088%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (42 samples, 0.04%)</title><rect x="92.3659%" y="757" width="0.0422%" height="15" fill="rgb(251,151,47)" fg:x="91832" fg:w="42"/><text x="92.6159%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (42 samples, 0.04%)</title><rect x="92.3659%" y="741" width="0.0422%" height="15" fill="rgb(236,79,14)" fg:x="91832" fg:w="42"/><text x="92.6159%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (36 samples, 0.04%)</title><rect x="92.3719%" y="725" width="0.0362%" height="15" fill="rgb(210,205,11)" fg:x="91838" fg:w="36"/><text x="92.6219%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (30 samples, 0.03%)</title><rect x="92.3779%" y="709" width="0.0302%" height="15" fill="rgb(233,142,53)" fg:x="91844" fg:w="30"/><text x="92.6279%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (15 samples, 0.02%)</title><rect x="92.3930%" y="693" width="0.0151%" height="15" fill="rgb(212,116,48)" fg:x="91859" fg:w="15"/><text x="92.6430%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (13 samples, 0.01%)</title><rect x="92.3950%" y="677" width="0.0131%" height="15" fill="rgb(234,55,33)" fg:x="91861" fg:w="13"/><text x="92.6450%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (13 samples, 0.01%)</title><rect x="92.3950%" y="661" width="0.0131%" height="15" fill="rgb(253,92,27)" fg:x="91861" fg:w="13"/><text x="92.6450%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="92.3971%" y="645" width="0.0111%" height="15" fill="rgb(220,7,35)" fg:x="91863" fg:w="11"/><text x="92.6471%" y="655.50"></text></g><g><title>move_binary_format::deserializer::load_function_inst_index (24 samples, 0.02%)</title><rect x="92.4081%" y="789" width="0.0241%" height="15" fill="rgb(246,124,6)" fg:x="91874" fg:w="24"/><text x="92.6581%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (24 samples, 0.02%)</title><rect x="92.4081%" y="773" width="0.0241%" height="15" fill="rgb(212,111,51)" fg:x="91874" fg:w="24"/><text x="92.6581%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (22 samples, 0.02%)</title><rect x="92.4101%" y="757" width="0.0221%" height="15" fill="rgb(253,116,7)" fg:x="91876" fg:w="22"/><text x="92.6601%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (22 samples, 0.02%)</title><rect x="92.4101%" y="741" width="0.0221%" height="15" fill="rgb(213,145,18)" fg:x="91876" fg:w="22"/><text x="92.6601%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (15 samples, 0.02%)</title><rect x="92.4172%" y="725" width="0.0151%" height="15" fill="rgb(219,149,7)" fg:x="91883" fg:w="15"/><text x="92.6672%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (12 samples, 0.01%)</title><rect x="92.4202%" y="709" width="0.0121%" height="15" fill="rgb(225,156,20)" fg:x="91886" fg:w="12"/><text x="92.6702%" y="719.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (36 samples, 0.04%)</title><rect x="92.5389%" y="693" width="0.0362%" height="15" fill="rgb(211,98,19)" fg:x="92004" fg:w="36"/><text x="92.7889%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.02%)</title><rect x="92.5600%" y="677" width="0.0151%" height="15" fill="rgb(231,192,31)" fg:x="92025" fg:w="15"/><text x="92.8100%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (14 samples, 0.01%)</title><rect x="92.5610%" y="661" width="0.0141%" height="15" fill="rgb(249,95,19)" fg:x="92026" fg:w="14"/><text x="92.8110%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="92.5640%" y="645" width="0.0111%" height="15" fill="rgb(247,101,36)" fg:x="92029" fg:w="11"/><text x="92.8140%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="92.6063%" y="629" width="0.0161%" height="15" fill="rgb(221,45,43)" fg:x="92071" fg:w="16"/><text x="92.8563%" y="639.50"></text></g><g><title>move_binary_format::deserializer::load_local_index (205 samples, 0.21%)</title><rect x="92.4323%" y="789" width="0.2062%" height="15" fill="rgb(220,42,1)" fg:x="91898" fg:w="205"/><text x="92.6823%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (203 samples, 0.20%)</title><rect x="92.4343%" y="773" width="0.2042%" height="15" fill="rgb(236,19,24)" fg:x="91900" fg:w="203"/><text x="92.6843%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (181 samples, 0.18%)</title><rect x="92.4564%" y="757" width="0.1821%" height="15" fill="rgb(225,192,6)" fg:x="91922" fg:w="181"/><text x="92.7064%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (180 samples, 0.18%)</title><rect x="92.4574%" y="741" width="0.1810%" height="15" fill="rgb(242,30,19)" fg:x="91923" fg:w="180"/><text x="92.7074%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (145 samples, 0.15%)</title><rect x="92.4926%" y="725" width="0.1458%" height="15" fill="rgb(240,36,6)" fg:x="91958" fg:w="145"/><text x="92.7426%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (124 samples, 0.12%)</title><rect x="92.5137%" y="709" width="0.1247%" height="15" fill="rgb(246,40,28)" fg:x="91979" fg:w="124"/><text x="92.7637%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (61 samples, 0.06%)</title><rect x="92.5771%" y="693" width="0.0614%" height="15" fill="rgb(225,155,33)" fg:x="92042" fg:w="61"/><text x="92.8271%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (44 samples, 0.04%)</title><rect x="92.5942%" y="677" width="0.0443%" height="15" fill="rgb(240,65,18)" fg:x="92059" fg:w="44"/><text x="92.8442%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (38 samples, 0.04%)</title><rect x="92.6002%" y="661" width="0.0382%" height="15" fill="rgb(217,0,48)" fg:x="92065" fg:w="38"/><text x="92.8502%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (35 samples, 0.04%)</title><rect x="92.6032%" y="645" width="0.0352%" height="15" fill="rgb(217,80,15)" fg:x="92068" fg:w="35"/><text x="92.8532%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (16 samples, 0.02%)</title><rect x="92.6224%" y="629" width="0.0161%" height="15" fill="rgb(253,43,51)" fg:x="92087" fg:w="16"/><text x="92.8724%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14 samples, 0.01%)</title><rect x="92.6244%" y="613" width="0.0141%" height="15" fill="rgb(246,60,4)" fg:x="92089" fg:w="14"/><text x="92.8744%" y="623.50"></text></g><g><title>move_binary_format::deserializer::load_struct_def_index (15 samples, 0.02%)</title><rect x="92.6385%" y="789" width="0.0151%" height="15" fill="rgb(230,40,54)" fg:x="92103" fg:w="15"/><text x="92.8885%" y="799.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (15 samples, 0.02%)</title><rect x="92.6385%" y="773" width="0.0151%" height="15" fill="rgb(208,20,44)" fg:x="92103" fg:w="15"/><text x="92.8885%" y="783.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="92.6405%" y="757" width="0.0131%" height="15" fill="rgb(230,22,22)" fg:x="92105" fg:w="13"/><text x="92.8905%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (13 samples, 0.01%)</title><rect x="92.6405%" y="741" width="0.0131%" height="15" fill="rgb(207,57,4)" fg:x="92105" fg:w="13"/><text x="92.8905%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (13 samples, 0.01%)</title><rect x="92.6405%" y="725" width="0.0131%" height="15" fill="rgb(242,130,33)" fg:x="92105" fg:w="13"/><text x="92.8905%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (12 samples, 0.01%)</title><rect x="92.6415%" y="709" width="0.0121%" height="15" fill="rgb(218,66,43)" fg:x="92106" fg:w="12"/><text x="92.8915%" y="719.50"></text></g><g><title>core::cmp::min (26 samples, 0.03%)</title><rect x="92.7773%" y="725" width="0.0262%" height="15" fill="rgb(236,105,16)" fg:x="92241" fg:w="26"/><text x="93.0273%" y="735.50"></text></g><g><title>core::cmp::Ord::min (23 samples, 0.02%)</title><rect x="92.7803%" y="709" width="0.0231%" height="15" fill="rgb(230,46,15)" fg:x="92244" fg:w="23"/><text x="93.0303%" y="719.50"></text></g><g><title>core::cmp::min_by (20 samples, 0.02%)</title><rect x="92.7833%" y="693" width="0.0201%" height="15" fill="rgb(251,172,40)" fg:x="92247" fg:w="20"/><text x="93.0333%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="92.8285%" y="677" width="0.0191%" height="15" fill="rgb(225,217,32)" fg:x="92292" fg:w="19"/><text x="93.0785%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (39 samples, 0.04%)</title><rect x="92.8155%" y="693" width="0.0392%" height="15" fill="rgb(243,10,29)" fg:x="92279" fg:w="39"/><text x="93.0655%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (101 samples, 0.10%)</title><rect x="92.7541%" y="741" width="0.1016%" height="15" fill="rgb(207,102,10)" fg:x="92218" fg:w="101"/><text x="93.0041%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (49 samples, 0.05%)</title><rect x="92.8064%" y="725" width="0.0493%" height="15" fill="rgb(241,125,5)" fg:x="92270" fg:w="49"/><text x="93.0564%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (46 samples, 0.05%)</title><rect x="92.8094%" y="709" width="0.0463%" height="15" fill="rgb(230,125,29)" fg:x="92273" fg:w="46"/><text x="93.0594%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (19 samples, 0.02%)</title><rect x="92.9161%" y="661" width="0.0191%" height="15" fill="rgb(223,65,44)" fg:x="92379" fg:w="19"/><text x="93.1661%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (38 samples, 0.04%)</title><rect x="92.9030%" y="677" width="0.0382%" height="15" fill="rgb(224,188,28)" fg:x="92366" fg:w="38"/><text x="93.1530%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_code (941 samples, 0.95%)</title><rect x="92.0229%" y="805" width="0.9465%" height="15" fill="rgb(254,197,27)" fg:x="91491" fg:w="941"/><text x="92.2729%" y="815.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (301 samples, 0.30%)</title><rect x="92.6666%" y="789" width="0.3027%" height="15" fill="rgb(220,200,25)" fg:x="92131" fg:w="301"/><text x="92.9166%" y="799.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (297 samples, 0.30%)</title><rect x="92.6706%" y="773" width="0.2987%" height="15" fill="rgb(239,225,54)" fg:x="92135" fg:w="297"/><text x="92.9206%" y="783.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (256 samples, 0.26%)</title><rect x="92.7119%" y="757" width="0.2575%" height="15" fill="rgb(211,59,40)" fg:x="92176" fg:w="256"/><text x="92.9619%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (112 samples, 0.11%)</title><rect x="92.8567%" y="741" width="0.1127%" height="15" fill="rgb(213,176,46)" fg:x="92320" fg:w="112"/><text x="93.1067%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (88 samples, 0.09%)</title><rect x="92.8809%" y="725" width="0.0885%" height="15" fill="rgb(226,99,4)" fg:x="92344" fg:w="88"/><text x="93.1309%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (83 samples, 0.08%)</title><rect x="92.8859%" y="709" width="0.0835%" height="15" fill="rgb(239,203,43)" fg:x="92349" fg:w="83"/><text x="93.1359%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (75 samples, 0.08%)</title><rect x="92.8939%" y="693" width="0.0754%" height="15" fill="rgb(246,1,45)" fg:x="92357" fg:w="75"/><text x="93.1439%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (28 samples, 0.03%)</title><rect x="92.9412%" y="677" width="0.0282%" height="15" fill="rgb(231,42,52)" fg:x="92404" fg:w="28"/><text x="93.1912%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (24 samples, 0.02%)</title><rect x="92.9452%" y="661" width="0.0241%" height="15" fill="rgb(240,13,50)" fg:x="92408" fg:w="24"/><text x="93.1952%" y="671.50"></text></g><g><title>move_binary_format::deserializer::load_code_unit (11 samples, 0.01%)</title><rect x="92.9885%" y="773" width="0.0111%" height="15" fill="rgb(225,81,14)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_signature_index (11 samples, 0.01%)</title><rect x="92.9885%" y="757" width="0.0111%" height="15" fill="rgb(216,182,23)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (11 samples, 0.01%)</title><rect x="92.9885%" y="741" width="0.0111%" height="15" fill="rgb(233,137,19)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="92.9885%" y="725" width="0.0111%" height="15" fill="rgb(242,61,46)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (11 samples, 0.01%)</title><rect x="92.9885%" y="709" width="0.0111%" height="15" fill="rgb(221,168,51)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (11 samples, 0.01%)</title><rect x="92.9885%" y="693" width="0.0111%" height="15" fill="rgb(238,48,15)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (11 samples, 0.01%)</title><rect x="92.9885%" y="677" width="0.0111%" height="15" fill="rgb(216,13,16)" fg:x="92451" fg:w="11"/><text x="93.2385%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_function_defs (19 samples, 0.02%)</title><rect x="92.9885%" y="805" width="0.0191%" height="15" fill="rgb(223,185,34)" fg:x="92451" fg:w="19"/><text x="93.2385%" y="815.50"></text></g><g><title>move_binary_format::deserializer::load_function_def (19 samples, 0.02%)</title><rect x="92.9885%" y="789" width="0.0191%" height="15" fill="rgb(228,94,42)" fg:x="92451" fg:w="19"/><text x="93.2385%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_struct_handle_index (14 samples, 0.01%)</title><rect x="93.0237%" y="757" width="0.0141%" height="15" fill="rgb(218,166,43)" fg:x="92486" fg:w="14"/><text x="93.2737%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (14 samples, 0.01%)</title><rect x="93.0237%" y="741" width="0.0141%" height="15" fill="rgb(232,30,50)" fg:x="92486" fg:w="14"/><text x="93.2737%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (14 samples, 0.01%)</title><rect x="93.0237%" y="725" width="0.0141%" height="15" fill="rgb(245,206,45)" fg:x="92486" fg:w="14"/><text x="93.2737%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (14 samples, 0.01%)</title><rect x="93.0237%" y="709" width="0.0141%" height="15" fill="rgb(220,56,22)" fg:x="92486" fg:w="14"/><text x="93.2737%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (11 samples, 0.01%)</title><rect x="93.0267%" y="693" width="0.0111%" height="15" fill="rgb(239,129,38)" fg:x="92489" fg:w="11"/><text x="93.2767%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (10 samples, 0.01%)</title><rect x="93.0277%" y="677" width="0.0101%" height="15" fill="rgb(207,68,41)" fg:x="92490" fg:w="10"/><text x="93.2777%" y="687.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (27 samples, 0.03%)</title><rect x="93.0237%" y="805" width="0.0272%" height="15" fill="rgb(221,21,7)" fg:x="92486" fg:w="27"/><text x="93.2737%" y="815.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (27 samples, 0.03%)</title><rect x="93.0237%" y="789" width="0.0272%" height="15" fill="rgb(240,33,25)" fg:x="92486" fg:w="27"/><text x="93.2737%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (27 samples, 0.03%)</title><rect x="93.0237%" y="773" width="0.0272%" height="15" fill="rgb(242,119,10)" fg:x="92486" fg:w="27"/><text x="93.2737%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_type_parameter_index (10 samples, 0.01%)</title><rect x="93.0408%" y="757" width="0.0101%" height="15" fill="rgb(214,149,40)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="767.50"></text></g><g><title>move_binary_format::deserializer::read_uleb_internal (10 samples, 0.01%)</title><rect x="93.0408%" y="741" width="0.0101%" height="15" fill="rgb(228,25,36)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="93.0408%" y="725" width="0.0101%" height="15" fill="rgb(222,59,15)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="735.50"></text></g><g><title>move_binary_format::file_format_common::read_uleb128_as_u64 (10 samples, 0.01%)</title><rect x="93.0408%" y="709" width="0.0101%" height="15" fill="rgb(218,170,0)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="719.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (10 samples, 0.01%)</title><rect x="93.0408%" y="693" width="0.0101%" height="15" fill="rgb(232,173,23)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="703.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (10 samples, 0.01%)</title><rect x="93.0408%" y="677" width="0.0101%" height="15" fill="rgb(218,116,1)" fg:x="92503" fg:w="10"/><text x="93.2908%" y="687.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (16 samples, 0.02%)</title><rect x="93.0579%" y="693" width="0.0161%" height="15" fill="rgb(207,34,4)" fg:x="92520" fg:w="16"/><text x="93.3079%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.01%)</title><rect x="93.0619%" y="677" width="0.0121%" height="15" fill="rgb(229,54,52)" fg:x="92524" fg:w="12"/><text x="93.3119%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.01%)</title><rect x="93.0619%" y="661" width="0.0121%" height="15" fill="rgb(211,86,23)" fg:x="92524" fg:w="12"/><text x="93.3119%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.01%)</title><rect x="93.0619%" y="645" width="0.0121%" height="15" fill="rgb(254,153,34)" fg:x="92524" fg:w="12"/><text x="93.3119%" y="655.50"></text></g><g><title>move_binary_format::deserializer::load_signatures (52 samples, 0.05%)</title><rect x="93.0508%" y="805" width="0.0523%" height="15" fill="rgb(219,220,14)" fg:x="92513" fg:w="52"/><text x="93.3008%" y="815.50"></text></g><g><title>move_binary_format::deserializer::load_signature_tokens (52 samples, 0.05%)</title><rect x="93.0508%" y="789" width="0.0523%" height="15" fill="rgb(247,8,26)" fg:x="92513" fg:w="52"/><text x="93.3008%" y="799.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token (52 samples, 0.05%)</title><rect x="93.0508%" y="773" width="0.0523%" height="15" fill="rgb(213,129,42)" fg:x="92513" fg:w="52"/><text x="93.3008%" y="783.50"></text></g><g><title>move_binary_format::deserializer::load_signature_token::_{{closure}} (52 samples, 0.05%)</title><rect x="93.0508%" y="757" width="0.0523%" height="15" fill="rgb(225,95,41)" fg:x="92513" fg:w="52"/><text x="93.3008%" y="767.50"></text></g><g><title>move_binary_format::file_format_common::versioned_data::VersionedCursor::read_u8 (45 samples, 0.05%)</title><rect x="93.0579%" y="741" width="0.0453%" height="15" fill="rgb(215,134,24)" fg:x="92520" fg:w="45"/><text x="93.3079%" y="751.50"></text></g><g><title>move_binary_format::file_format_common::read_u8 (45 samples, 0.05%)</title><rect x="93.0579%" y="725" width="0.0453%" height="15" fill="rgb(235,23,54)" fg:x="92520" fg:w="45"/><text x="93.3079%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (45 samples, 0.05%)</title><rect x="93.0579%" y="709" width="0.0453%" height="15" fill="rgb(229,96,31)" fg:x="92520" fg:w="45"/><text x="93.3079%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (29 samples, 0.03%)</title><rect x="93.0740%" y="693" width="0.0292%" height="15" fill="rgb(206,111,12)" fg:x="92536" fg:w="29"/><text x="93.3240%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (28 samples, 0.03%)</title><rect x="93.0750%" y="677" width="0.0282%" height="15" fill="rgb(222,177,8)" fg:x="92537" fg:w="28"/><text x="93.3250%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (27 samples, 0.03%)</title><rect x="93.0760%" y="661" width="0.0272%" height="15" fill="rgb(251,36,52)" fg:x="92538" fg:w="27"/><text x="93.3260%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (25 samples, 0.03%)</title><rect x="93.0780%" y="645" width="0.0251%" height="15" fill="rgb(216,182,29)" fg:x="92540" fg:w="25"/><text x="93.3280%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.01%)</title><rect x="93.0901%" y="629" width="0.0131%" height="15" fill="rgb(241,145,50)" fg:x="92552" fg:w="13"/><text x="93.3401%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (10 samples, 0.01%)</title><rect x="93.0931%" y="613" width="0.0101%" height="15" fill="rgb(231,71,35)" fg:x="92555" fg:w="10"/><text x="93.3431%" y="623.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (13 samples, 0.01%)</title><rect x="93.1675%" y="805" width="0.0131%" height="15" fill="rgb(218,22,17)" fg:x="92629" fg:w="13"/><text x="93.4175%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="93.2138%" y="773" width="0.0121%" height="15" fill="rgb(225,227,6)" fg:x="92675" fg:w="12"/><text x="93.4638%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (13 samples, 0.01%)</title><rect x="93.2138%" y="789" width="0.0131%" height="15" fill="rgb(224,204,17)" fg:x="92675" fg:w="13"/><text x="93.4638%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="93.2269%" y="789" width="0.0111%" height="15" fill="rgb(227,61,28)" fg:x="92688" fg:w="11"/><text x="93.4769%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.01%)</title><rect x="93.2389%" y="789" width="0.0141%" height="15" fill="rgb(242,148,23)" fg:x="92700" fg:w="14"/><text x="93.4889%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.01%)</title><rect x="93.2409%" y="773" width="0.0121%" height="15" fill="rgb(237,105,33)" fg:x="92702" fg:w="12"/><text x="93.4909%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (11 samples, 0.01%)</title><rect x="93.2600%" y="789" width="0.0111%" height="15" fill="rgb(238,218,40)" fg:x="92721" fg:w="11"/><text x="93.5100%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (11 samples, 0.01%)</title><rect x="93.2600%" y="773" width="0.0111%" height="15" fill="rgb(209,126,11)" fg:x="92721" fg:w="11"/><text x="93.5100%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (12 samples, 0.01%)</title><rect x="93.2902%" y="789" width="0.0121%" height="15" fill="rgb(245,90,11)" fg:x="92751" fg:w="12"/><text x="93.5402%" y="799.50"></text></g><g><title>move_vm_runtime::tracing::trace (31 samples, 0.03%)</title><rect x="93.3123%" y="789" width="0.0312%" height="15" fill="rgb(211,195,10)" fg:x="92773" fg:w="31"/><text x="93.5623%" y="799.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.03%)</title><rect x="93.3134%" y="773" width="0.0302%" height="15" fill="rgb(231,45,45)" fg:x="92774" fg:w="30"/><text x="93.5634%" y="783.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (29 samples, 0.03%)</title><rect x="93.3144%" y="757" width="0.0292%" height="15" fill="rgb(246,100,43)" fg:x="92775" fg:w="29"/><text x="93.5644%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (27 samples, 0.03%)</title><rect x="93.3164%" y="741" width="0.0272%" height="15" fill="rgb(241,193,8)" fg:x="92777" fg:w="27"/><text x="93.5664%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (26 samples, 0.03%)</title><rect x="93.3174%" y="725" width="0.0262%" height="15" fill="rgb(208,76,19)" fg:x="92778" fg:w="26"/><text x="93.5674%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="93.3224%" y="709" width="0.0211%" height="15" fill="rgb(223,69,40)" fg:x="92783" fg:w="21"/><text x="93.5724%" y="719.50"></text></g><g><title>move_core_types::gas_schedule::CostTable::instruction_cost (10 samples, 0.01%)</title><rect x="93.3445%" y="773" width="0.0101%" height="15" fill="rgb(207,120,39)" fg:x="92805" fg:w="10"/><text x="93.5945%" y="783.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr (16 samples, 0.02%)</title><rect x="93.3435%" y="789" width="0.0161%" height="15" fill="rgb(212,209,28)" fg:x="92804" fg:w="16"/><text x="93.5935%" y="799.50"></text></g><g><title>move_core_types::gas_schedule::GasAlgebra::map (10 samples, 0.01%)</title><rect x="93.3667%" y="773" width="0.0101%" height="15" fill="rgb(246,82,29)" fg:x="92827" fg:w="10"/><text x="93.6167%" y="783.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr_with_size (26 samples, 0.03%)</title><rect x="93.3596%" y="789" width="0.0262%" height="15" fill="rgb(239,6,40)" fg:x="92820" fg:w="26"/><text x="93.6096%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (18 samples, 0.02%)</title><rect x="93.3908%" y="789" width="0.0181%" height="15" fill="rgb(228,181,35)" fg:x="92851" fg:w="18"/><text x="93.6408%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (16 samples, 0.02%)</title><rect x="93.4089%" y="789" width="0.0161%" height="15" fill="rgb(238,151,2)" fg:x="92869" fg:w="16"/><text x="93.6589%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (10 samples, 0.01%)</title><rect x="93.4149%" y="773" width="0.0101%" height="15" fill="rgb(236,94,18)" fg:x="92875" fg:w="10"/><text x="93.6649%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (11 samples, 0.01%)</title><rect x="93.4471%" y="725" width="0.0111%" height="15" fill="rgb(208,38,14)" fg:x="92907" fg:w="11"/><text x="93.6971%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (11 samples, 0.01%)</title><rect x="93.4471%" y="709" width="0.0111%" height="15" fill="rgb(234,215,27)" fg:x="92907" fg:w="11"/><text x="93.6971%" y="719.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (11 samples, 0.01%)</title><rect x="93.4471%" y="693" width="0.0111%" height="15" fill="rgb(254,211,53)" fg:x="92907" fg:w="11"/><text x="93.6971%" y="703.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (11 samples, 0.01%)</title><rect x="93.4471%" y="677" width="0.0111%" height="15" fill="rgb(216,175,11)" fg:x="92907" fg:w="11"/><text x="93.6971%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (20 samples, 0.02%)</title><rect x="93.4391%" y="789" width="0.0201%" height="15" fill="rgb(246,179,26)" fg:x="92899" fg:w="20"/><text x="93.6891%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (17 samples, 0.02%)</title><rect x="93.4421%" y="773" width="0.0171%" height="15" fill="rgb(249,19,52)" fg:x="92902" fg:w="17"/><text x="93.6921%" y="783.50"></text></g><g><title>bcs::de::from_bytes_seed (17 samples, 0.02%)</title><rect x="93.4421%" y="757" width="0.0171%" height="15" fill="rgb(230,42,52)" fg:x="92902" fg:w="17"/><text x="93.6921%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 0.01%)</title><rect x="93.4451%" y="741" width="0.0141%" height="15" fill="rgb(221,171,0)" fg:x="92905" fg:w="14"/><text x="93.6951%" y="751.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (284 samples, 0.29%)</title><rect x="93.1806%" y="805" width="0.2857%" height="15" fill="rgb(222,177,40)" fg:x="92642" fg:w="284"/><text x="93.4306%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (11 samples, 0.01%)</title><rect x="93.4783%" y="805" width="0.0111%" height="15" fill="rgb(247,34,16)" fg:x="92938" fg:w="11"/><text x="93.7283%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (17 samples, 0.02%)</title><rect x="93.5105%" y="789" width="0.0171%" height="15" fill="rgb(213,217,37)" fg:x="92970" fg:w="17"/><text x="93.7605%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (14 samples, 0.01%)</title><rect x="93.5135%" y="773" width="0.0141%" height="15" fill="rgb(231,189,24)" fg:x="92973" fg:w="14"/><text x="93.7635%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="93.5135%" y="757" width="0.0141%" height="15" fill="rgb(214,22,9)" fg:x="92973" fg:w="14"/><text x="93.7635%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="93.5135%" y="741" width="0.0141%" height="15" fill="rgb(212,70,22)" fg:x="92973" fg:w="14"/><text x="93.7635%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11 samples, 0.01%)</title><rect x="93.5628%" y="725" width="0.0111%" height="15" fill="rgb(249,64,51)" fg:x="93022" fg:w="11"/><text x="93.8128%" y="735.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get::_{{closure}} (10 samples, 0.01%)</title><rect x="93.5638%" y="709" width="0.0101%" height="15" fill="rgb(249,148,20)" fg:x="93023" fg:w="10"/><text x="93.8138%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="93.5799%" y="581" width="0.0161%" height="15" fill="rgb(246,46,48)" fg:x="93039" fg:w="16"/><text x="93.8299%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="93.5809%" y="565" width="0.0151%" height="15" fill="rgb(217,34,48)" fg:x="93040" fg:w="15"/><text x="93.8309%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.02%)</title><rect x="93.5809%" y="549" width="0.0151%" height="15" fill="rgb(222,45,26)" fg:x="93040" fg:w="15"/><text x="93.8309%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.02%)</title><rect x="93.5769%" y="597" width="0.0231%" height="15" fill="rgb(230,201,36)" fg:x="93036" fg:w="23"/><text x="93.8269%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6000%" y="565" width="0.0131%" height="15" fill="rgb(217,30,43)" fg:x="93059" fg:w="13"/><text x="93.8500%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6000%" y="549" width="0.0131%" height="15" fill="rgb(230,197,40)" fg:x="93059" fg:w="13"/><text x="93.8500%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6000%" y="533" width="0.0131%" height="15" fill="rgb(239,181,18)" fg:x="93059" fg:w="13"/><text x="93.8500%" y="543.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="93.5759%" y="645" width="0.0382%" height="15" fill="rgb(222,60,39)" fg:x="93035" fg:w="38"/><text x="93.8259%" y="655.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (38 samples, 0.04%)</title><rect x="93.5759%" y="629" width="0.0382%" height="15" fill="rgb(210,60,22)" fg:x="93035" fg:w="38"/><text x="93.8259%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (37 samples, 0.04%)</title><rect x="93.5769%" y="613" width="0.0372%" height="15" fill="rgb(239,213,48)" fg:x="93036" fg:w="37"/><text x="93.8269%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14 samples, 0.01%)</title><rect x="93.6000%" y="597" width="0.0141%" height="15" fill="rgb(253,214,23)" fg:x="93059" fg:w="14"/><text x="93.8500%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.01%)</title><rect x="93.6000%" y="581" width="0.0141%" height="15" fill="rgb(211,98,45)" fg:x="93059" fg:w="14"/><text x="93.8500%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6141%" y="597" width="0.0131%" height="15" fill="rgb(239,130,44)" fg:x="93073" fg:w="13"/><text x="93.8641%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6141%" y="581" width="0.0131%" height="15" fill="rgb(222,181,35)" fg:x="93073" fg:w="13"/><text x="93.8641%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6141%" y="565" width="0.0131%" height="15" fill="rgb(219,219,49)" fg:x="93073" fg:w="13"/><text x="93.8641%" y="575.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (66 samples, 0.07%)</title><rect x="93.5749%" y="661" width="0.0664%" height="15" fill="rgb(227,161,51)" fg:x="93034" fg:w="66"/><text x="93.8249%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (27 samples, 0.03%)</title><rect x="93.6141%" y="645" width="0.0272%" height="15" fill="rgb(239,112,27)" fg:x="93073" fg:w="27"/><text x="93.8641%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (27 samples, 0.03%)</title><rect x="93.6141%" y="629" width="0.0272%" height="15" fill="rgb(248,122,18)" fg:x="93073" fg:w="27"/><text x="93.8641%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (27 samples, 0.03%)</title><rect x="93.6141%" y="613" width="0.0272%" height="15" fill="rgb(245,130,23)" fg:x="93073" fg:w="27"/><text x="93.8641%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (14 samples, 0.01%)</title><rect x="93.6272%" y="597" width="0.0141%" height="15" fill="rgb(211,225,28)" fg:x="93086" fg:w="14"/><text x="93.8772%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.01%)</title><rect x="93.6272%" y="581" width="0.0141%" height="15" fill="rgb(242,105,44)" fg:x="93086" fg:w="14"/><text x="93.8772%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6282%" y="565" width="0.0131%" height="15" fill="rgb(216,183,46)" fg:x="93087" fg:w="13"/><text x="93.8782%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.6282%" y="549" width="0.0131%" height="15" fill="rgb(227,112,9)" fg:x="93087" fg:w="13"/><text x="93.8782%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="93.6412%" y="661" width="0.0201%" height="15" fill="rgb(244,21,0)" fg:x="93100" fg:w="20"/><text x="93.8912%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="93.6412%" y="645" width="0.0201%" height="15" fill="rgb(236,185,14)" fg:x="93100" fg:w="20"/><text x="93.8912%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="93.6412%" y="629" width="0.0201%" height="15" fill="rgb(236,170,30)" fg:x="93100" fg:w="20"/><text x="93.8912%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.02%)</title><rect x="93.6453%" y="613" width="0.0161%" height="15" fill="rgb(209,198,51)" fg:x="93104" fg:w="16"/><text x="93.8953%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (92 samples, 0.09%)</title><rect x="93.5749%" y="677" width="0.0925%" height="15" fill="rgb(205,171,26)" fg:x="93034" fg:w="92"/><text x="93.8249%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (17 samples, 0.02%)</title><rect x="93.6795%" y="645" width="0.0171%" height="15" fill="rgb(246,41,49)" fg:x="93138" fg:w="17"/><text x="93.9295%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="93.6805%" y="629" width="0.0161%" height="15" fill="rgb(240,229,12)" fg:x="93139" fg:w="16"/><text x="93.9305%" y="639.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (163 samples, 0.16%)</title><rect x="93.5497%" y="757" width="0.1639%" height="15" fill="rgb(212,8,54)" fg:x="93009" fg:w="163"/><text x="93.7997%" y="767.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (150 samples, 0.15%)</title><rect x="93.5628%" y="741" width="0.1509%" height="15" fill="rgb(230,114,13)" fg:x="93022" fg:w="150"/><text x="93.8128%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (139 samples, 0.14%)</title><rect x="93.5739%" y="725" width="0.1398%" height="15" fill="rgb(229,130,28)" fg:x="93033" fg:w="139"/><text x="93.8239%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (138 samples, 0.14%)</title><rect x="93.5749%" y="709" width="0.1388%" height="15" fill="rgb(206,139,15)" fg:x="93034" fg:w="138"/><text x="93.8249%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (138 samples, 0.14%)</title><rect x="93.5749%" y="693" width="0.1388%" height="15" fill="rgb(241,188,35)" fg:x="93034" fg:w="138"/><text x="93.8249%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (46 samples, 0.05%)</title><rect x="93.6674%" y="677" width="0.0463%" height="15" fill="rgb(208,224,26)" fg:x="93126" fg:w="46"/><text x="93.9174%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.05%)</title><rect x="93.6684%" y="661" width="0.0453%" height="15" fill="rgb(251,131,28)" fg:x="93127" fg:w="45"/><text x="93.9184%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.02%)</title><rect x="93.6976%" y="645" width="0.0161%" height="15" fill="rgb(208,153,1)" fg:x="93156" fg:w="16"/><text x="93.9476%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.02%)</title><rect x="93.6976%" y="629" width="0.0161%" height="15" fill="rgb(234,33,36)" fg:x="93156" fg:w="16"/><text x="93.9476%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.02%)</title><rect x="93.6976%" y="613" width="0.0161%" height="15" fill="rgb(246,42,29)" fg:x="93156" fg:w="16"/><text x="93.9476%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.01%)</title><rect x="93.7036%" y="597" width="0.0101%" height="15" fill="rgb(251,114,16)" fg:x="93162" fg:w="10"/><text x="93.9536%" y="607.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (169 samples, 0.17%)</title><rect x="93.5447%" y="789" width="0.1700%" height="15" fill="rgb(233,13,38)" fg:x="93004" fg:w="169"/><text x="93.7947%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (167 samples, 0.17%)</title><rect x="93.5467%" y="773" width="0.1680%" height="15" fill="rgb(247,120,19)" fg:x="93006" fg:w="167"/><text x="93.7967%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="93.7328%" y="725" width="0.0121%" height="15" fill="rgb(205,11,16)" fg:x="93191" fg:w="12"/><text x="93.9828%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="93.7328%" y="709" width="0.0121%" height="15" fill="rgb(228,185,19)" fg:x="93191" fg:w="12"/><text x="93.9828%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="93.7328%" y="693" width="0.0121%" height="15" fill="rgb(239,88,52)" fg:x="93191" fg:w="12"/><text x="93.9828%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="93.7318%" y="757" width="0.0141%" height="15" fill="rgb(219,23,1)" fg:x="93190" fg:w="14"/><text x="93.9818%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="93.7318%" y="741" width="0.0141%" height="15" fill="rgb(253,177,16)" fg:x="93190" fg:w="14"/><text x="93.9818%" y="751.50"></text></g><g><title>move_stdlib::natives::vector::native_length (10 samples, 0.01%)</title><rect x="93.7599%" y="757" width="0.0101%" height="15" fill="rgb(225,150,40)" fg:x="93218" fg:w="10"/><text x="94.0099%" y="767.50"></text></g><g><title>move_stdlib::natives::vector::native_pop (17 samples, 0.02%)</title><rect x="93.7700%" y="757" width="0.0171%" height="15" fill="rgb(208,108,30)" fg:x="93228" fg:w="17"/><text x="94.0200%" y="767.50"></text></g><g><title>move_stdlib::natives::vector::native_push_back (12 samples, 0.01%)</title><rect x="93.7871%" y="757" width="0.0121%" height="15" fill="rgb(214,122,4)" fg:x="93245" fg:w="12"/><text x="94.0371%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (93 samples, 0.09%)</title><rect x="93.7167%" y="789" width="0.0935%" height="15" fill="rgb(229,74,37)" fg:x="93175" fg:w="93"/><text x="93.9667%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (92 samples, 0.09%)</title><rect x="93.7177%" y="773" width="0.0925%" height="15" fill="rgb(233,61,41)" fg:x="93176" fg:w="92"/><text x="93.9677%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (29 samples, 0.03%)</title><rect x="93.8313%" y="773" width="0.0292%" height="15" fill="rgb(238,191,5)" fg:x="93289" fg:w="29"/><text x="94.0813%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.02%)</title><rect x="93.8394%" y="757" width="0.0211%" height="15" fill="rgb(233,78,24)" fg:x="93297" fg:w="21"/><text x="94.0894%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.02%)</title><rect x="93.8394%" y="741" width="0.0211%" height="15" fill="rgb(211,142,8)" fg:x="93297" fg:w="21"/><text x="94.0894%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="93.8404%" y="725" width="0.0201%" height="15" fill="rgb(253,38,53)" fg:x="93298" fg:w="20"/><text x="94.0904%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="93.8404%" y="709" width="0.0201%" height="15" fill="rgb(234,63,51)" fg:x="93298" fg:w="20"/><text x="94.0904%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (58 samples, 0.06%)</title><rect x="93.8102%" y="789" width="0.0583%" height="15" fill="rgb(205,23,31)" fg:x="93268" fg:w="58"/><text x="94.0602%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="93.9018%" y="693" width="0.0111%" height="15" fill="rgb(210,184,50)" fg:x="93359" fg:w="11"/><text x="94.1518%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.03%)</title><rect x="93.8987%" y="709" width="0.0251%" height="15" fill="rgb(222,112,26)" fg:x="93356" fg:w="25"/><text x="94.1487%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.03%)</title><rect x="93.8957%" y="773" width="0.0292%" height="15" fill="rgb(250,98,18)" fg:x="93353" fg:w="29"/><text x="94.1457%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="93.8977%" y="757" width="0.0272%" height="15" fill="rgb(250,34,12)" fg:x="93355" fg:w="27"/><text x="94.1477%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="93.8977%" y="741" width="0.0272%" height="15" fill="rgb(236,141,30)" fg:x="93355" fg:w="27"/><text x="94.1477%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (27 samples, 0.03%)</title><rect x="93.8977%" y="725" width="0.0272%" height="15" fill="rgb(246,134,38)" fg:x="93355" fg:w="27"/><text x="94.1477%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (43 samples, 0.04%)</title><rect x="93.8867%" y="789" width="0.0432%" height="15" fill="rgb(240,114,4)" fg:x="93344" fg:w="43"/><text x="94.1367%" y="799.50"></text></g><g><title>move_core_types::gas_schedule::CostTable::instruction_cost (10 samples, 0.01%)</title><rect x="93.9339%" y="773" width="0.0101%" height="15" fill="rgb(243,113,39)" fg:x="93391" fg:w="10"/><text x="94.1839%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (462 samples, 0.46%)</title><rect x="93.4894%" y="805" width="0.4647%" height="15" fill="rgb(239,215,4)" fg:x="92949" fg:w="462"/><text x="93.7394%" y="815.50"></text></g><g><title>move_vm_types::gas_schedule::GasStatus::charge_instr_with_size (22 samples, 0.02%)</title><rect x="93.9319%" y="789" width="0.0221%" height="15" fill="rgb(236,229,45)" fg:x="93389" fg:w="22"/><text x="94.1819%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (14 samples, 0.01%)</title><rect x="93.9541%" y="805" width="0.0141%" height="15" fill="rgb(242,2,6)" fg:x="93411" fg:w="14"/><text x="94.2041%" y="815.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (14 samples, 0.01%)</title><rect x="93.9541%" y="789" width="0.0141%" height="15" fill="rgb(239,108,21)" fg:x="93411" fg:w="14"/><text x="94.2041%" y="799.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (14 samples, 0.01%)</title><rect x="93.9541%" y="773" width="0.0141%" height="15" fill="rgb(215,168,34)" fg:x="93411" fg:w="14"/><text x="94.2041%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (14 samples, 0.01%)</title><rect x="93.9681%" y="805" width="0.0141%" height="15" fill="rgb(238,31,17)" fg:x="93425" fg:w="14"/><text x="94.2181%" y="815.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (14 samples, 0.01%)</title><rect x="93.9681%" y="789" width="0.0141%" height="15" fill="rgb(220,133,11)" fg:x="93425" fg:w="14"/><text x="94.2181%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.02%)</title><rect x="94.0154%" y="677" width="0.0151%" height="15" fill="rgb(212,158,23)" fg:x="93472" fg:w="15"/><text x="94.2654%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (12 samples, 0.01%)</title><rect x="94.0184%" y="661" width="0.0121%" height="15" fill="rgb(223,172,7)" fg:x="93475" fg:w="12"/><text x="94.2684%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (21 samples, 0.02%)</title><rect x="94.0365%" y="613" width="0.0211%" height="15" fill="rgb(244,3,52)" fg:x="93493" fg:w="21"/><text x="94.2865%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.02%)</title><rect x="94.0365%" y="597" width="0.0211%" height="15" fill="rgb(207,69,27)" fg:x="93493" fg:w="21"/><text x="94.2865%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (16 samples, 0.02%)</title><rect x="94.0416%" y="581" width="0.0161%" height="15" fill="rgb(213,136,45)" fg:x="93498" fg:w="16"/><text x="94.2916%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (25 samples, 0.03%)</title><rect x="94.0345%" y="661" width="0.0251%" height="15" fill="rgb(218,79,17)" fg:x="93491" fg:w="25"/><text x="94.2845%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (25 samples, 0.03%)</title><rect x="94.0345%" y="645" width="0.0251%" height="15" fill="rgb(216,106,36)" fg:x="93491" fg:w="25"/><text x="94.2845%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (25 samples, 0.03%)</title><rect x="94.0345%" y="629" width="0.0251%" height="15" fill="rgb(251,27,45)" fg:x="93491" fg:w="25"/><text x="94.2845%" y="639.50"></text></g><g><title>bytecode_verifier::dependencies::Context::script (57 samples, 0.06%)</title><rect x="94.0043%" y="741" width="0.0573%" height="15" fill="rgb(232,21,34)" fg:x="93461" fg:w="57"/><text x="94.2543%" y="751.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (57 samples, 0.06%)</title><rect x="94.0043%" y="725" width="0.0573%" height="15" fill="rgb(249,191,16)" fg:x="93461" fg:w="57"/><text x="94.2543%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (46 samples, 0.05%)</title><rect x="94.0154%" y="709" width="0.0463%" height="15" fill="rgb(224,88,20)" fg:x="93472" fg:w="46"/><text x="94.2654%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.05%)</title><rect x="94.0154%" y="693" width="0.0463%" height="15" fill="rgb(237,93,27)" fg:x="93472" fg:w="46"/><text x="94.2654%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (28 samples, 0.03%)</title><rect x="94.0335%" y="677" width="0.0282%" height="15" fill="rgb(226,198,48)" fg:x="93490" fg:w="28"/><text x="94.2835%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::deserialize_and_verify_script (65 samples, 0.07%)</title><rect x="94.0013%" y="805" width="0.0654%" height="15" fill="rgb(207,162,53)" fg:x="93458" fg:w="65"/><text x="94.2513%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_script_dependencies (62 samples, 0.06%)</title><rect x="94.0043%" y="789" width="0.0624%" height="15" fill="rgb(207,169,9)" fg:x="93461" fg:w="62"/><text x="94.2543%" y="799.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script (62 samples, 0.06%)</title><rect x="94.0043%" y="773" width="0.0624%" height="15" fill="rgb(224,166,46)" fg:x="93461" fg:w="62"/><text x="94.2543%" y="783.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_impl (62 samples, 0.06%)</title><rect x="94.0043%" y="757" width="0.0624%" height="15" fill="rgb(233,26,6)" fg:x="93461" fg:w="62"/><text x="94.2543%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="94.1230%" y="693" width="0.0141%" height="15" fill="rgb(218,106,45)" fg:x="93579" fg:w="14"/><text x="94.3730%" y="703.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (85 samples, 0.09%)</title><rect x="94.0868%" y="725" width="0.0855%" height="15" fill="rgb(240,217,4)" fg:x="93543" fg:w="85"/><text x="94.3368%" y="735.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (85 samples, 0.09%)</title><rect x="94.0868%" y="709" width="0.0855%" height="15" fill="rgb(246,171,10)" fg:x="93543" fg:w="85"/><text x="94.3368%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.06%)</title><rect x="94.1965%" y="693" width="0.0644%" height="15" fill="rgb(223,197,30)" fg:x="93652" fg:w="64"/><text x="94.4465%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="94.2296%" y="677" width="0.0312%" height="15" fill="rgb(207,92,16)" fg:x="93685" fg:w="31"/><text x="94.4796%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="94.2729%" y="613" width="0.0201%" height="15" fill="rgb(211,6,44)" fg:x="93728" fg:w="20"/><text x="94.5229%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="94.2729%" y="597" width="0.0201%" height="15" fill="rgb(219,139,2)" fg:x="93728" fg:w="20"/><text x="94.5229%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.02%)</title><rect x="94.2729%" y="581" width="0.0201%" height="15" fill="rgb(224,103,21)" fg:x="93728" fg:w="20"/><text x="94.5229%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.01%)</title><rect x="94.2789%" y="565" width="0.0141%" height="15" fill="rgb(254,110,48)" fg:x="93734" fg:w="14"/><text x="94.5289%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.04%)</title><rect x="94.2659%" y="629" width="0.0412%" height="15" fill="rgb(212,88,19)" fg:x="93721" fg:w="41"/><text x="94.5159%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.01%)</title><rect x="94.2930%" y="613" width="0.0141%" height="15" fill="rgb(248,103,6)" fg:x="93748" fg:w="14"/><text x="94.5430%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (10 samples, 0.01%)</title><rect x="94.2970%" y="597" width="0.0101%" height="15" fill="rgb(214,53,46)" fg:x="93752" fg:w="10"/><text x="94.5470%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (82 samples, 0.08%)</title><rect x="94.2608%" y="693" width="0.0825%" height="15" fill="rgb(236,190,24)" fg:x="93716" fg:w="82"/><text x="94.5108%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (79 samples, 0.08%)</title><rect x="94.2638%" y="677" width="0.0795%" height="15" fill="rgb(254,58,28)" fg:x="93719" fg:w="79"/><text x="94.5138%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (79 samples, 0.08%)</title><rect x="94.2638%" y="661" width="0.0795%" height="15" fill="rgb(243,63,27)" fg:x="93719" fg:w="79"/><text x="94.5138%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (78 samples, 0.08%)</title><rect x="94.2649%" y="645" width="0.0785%" height="15" fill="rgb(206,81,20)" fg:x="93720" fg:w="78"/><text x="94.5149%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.04%)</title><rect x="94.3071%" y="629" width="0.0362%" height="15" fill="rgb(252,69,51)" fg:x="93762" fg:w="36"/><text x="94.5571%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.03%)</title><rect x="94.3101%" y="613" width="0.0332%" height="15" fill="rgb(222,213,4)" fg:x="93765" fg:w="33"/><text x="94.5601%" y="623.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_visibility_usage (170 samples, 0.17%)</title><rect x="94.1784%" y="709" width="0.1710%" height="15" fill="rgb(226,198,12)" fg:x="93634" fg:w="170"/><text x="94.4284%" y="719.50"></text></g><g><title>bytecode_verifier::dependencies::verify_all_script_visibility_usage (177 samples, 0.18%)</title><rect x="94.1723%" y="725" width="0.1780%" height="15" fill="rgb(248,115,11)" fg:x="93628" fg:w="177"/><text x="94.4223%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (26 samples, 0.03%)</title><rect x="94.3644%" y="629" width="0.0262%" height="15" fill="rgb(221,148,54)" fg:x="93819" fg:w="26"/><text x="94.6144%" y="639.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="94.3775%" y="613" width="0.0131%" height="15" fill="rgb(214,209,51)" fg:x="93832" fg:w="13"/><text x="94.6275%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (12 samples, 0.01%)</title><rect x="94.3785%" y="597" width="0.0121%" height="15" fill="rgb(249,116,53)" fg:x="93833" fg:w="12"/><text x="94.6285%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (11 samples, 0.01%)</title><rect x="94.3795%" y="581" width="0.0111%" height="15" fill="rgb(248,170,1)" fg:x="93834" fg:w="11"/><text x="94.6295%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (10 samples, 0.01%)</title><rect x="94.3805%" y="565" width="0.0101%" height="15" fill="rgb(244,105,10)" fg:x="93835" fg:w="10"/><text x="94.6305%" y="575.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.01%)</title><rect x="94.3805%" y="549" width="0.0101%" height="15" fill="rgb(229,100,5)" fg:x="93835" fg:w="10"/><text x="94.6305%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::contains_key (38 samples, 0.04%)</title><rect x="94.3544%" y="709" width="0.0382%" height="15" fill="rgb(233,221,39)" fg:x="93809" fg:w="38"/><text x="94.6044%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (38 samples, 0.04%)</title><rect x="94.3544%" y="693" width="0.0382%" height="15" fill="rgb(233,88,21)" fg:x="93809" fg:w="38"/><text x="94.6044%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (36 samples, 0.04%)</title><rect x="94.3564%" y="677" width="0.0362%" height="15" fill="rgb(206,13,0)" fg:x="93811" fg:w="36"/><text x="94.6064%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (35 samples, 0.04%)</title><rect x="94.3574%" y="661" width="0.0352%" height="15" fill="rgb(242,15,35)" fg:x="93812" fg:w="35"/><text x="94.6074%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (34 samples, 0.03%)</title><rect x="94.3584%" y="645" width="0.0342%" height="15" fill="rgb(247,142,41)" fg:x="93813" fg:w="34"/><text x="94.6084%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="94.3996%" y="645" width="0.0101%" height="15" fill="rgb(245,51,29)" fg:x="93854" fg:w="10"/><text x="94.6496%" y="655.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (13 samples, 0.01%)</title><rect x="94.3976%" y="693" width="0.0131%" height="15" fill="rgb(228,209,43)" fg:x="93852" fg:w="13"/><text x="94.6476%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="94.3976%" y="677" width="0.0131%" height="15" fill="rgb(233,185,9)" fg:x="93852" fg:w="13"/><text x="94.6476%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.01%)</title><rect x="94.3986%" y="661" width="0.0121%" height="15" fill="rgb(226,93,0)" fg:x="93853" fg:w="12"/><text x="94.6486%" y="671.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_modules (64 samples, 0.06%)</title><rect x="94.3503%" y="725" width="0.0644%" height="15" fill="rgb(245,194,43)" fg:x="93805" fg:w="64"/><text x="94.6003%" y="735.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (18 samples, 0.02%)</title><rect x="94.3966%" y="709" width="0.0181%" height="15" fill="rgb(211,145,34)" fg:x="93851" fg:w="18"/><text x="94.6466%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.01%)</title><rect x="94.4157%" y="693" width="0.0131%" height="15" fill="rgb(231,228,28)" fg:x="93870" fg:w="13"/><text x="94.6657%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (12 samples, 0.01%)</title><rect x="94.4167%" y="677" width="0.0121%" height="15" fill="rgb(236,149,4)" fg:x="93871" fg:w="12"/><text x="94.6667%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (12 samples, 0.01%)</title><rect x="94.4167%" y="661" width="0.0121%" height="15" fill="rgb(234,114,38)" fg:x="93871" fg:w="12"/><text x="94.6667%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="94.4157%" y="709" width="0.0141%" height="15" fill="rgb(246,132,51)" fg:x="93870" fg:w="14"/><text x="94.6657%" y="719.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_structs (27 samples, 0.03%)</title><rect x="94.4147%" y="725" width="0.0272%" height="15" fill="rgb(251,137,22)" fg:x="93869" fg:w="27"/><text x="94.6647%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.01%)</title><rect x="94.4318%" y="709" width="0.0101%" height="15" fill="rgb(243,59,52)" fg:x="93886" fg:w="10"/><text x="94.6818%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.01%)</title><rect x="94.4318%" y="693" width="0.0101%" height="15" fill="rgb(239,56,28)" fg:x="93886" fg:w="10"/><text x="94.6818%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.01%)</title><rect x="94.4318%" y="677" width="0.0101%" height="15" fill="rgb(218,168,27)" fg:x="93886" fg:w="10"/><text x="94.6818%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,&amp;move_binary_format::file_format::CompiledModule&gt;&gt; (10 samples, 0.01%)</title><rect x="94.4419%" y="709" width="0.0101%" height="15" fill="rgb(232,165,11)" fg:x="93896" fg:w="10"/><text x="94.6919%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="94.4419%" y="693" width="0.0101%" height="15" fill="rgb(253,55,41)" fg:x="93896" fg:w="10"/><text x="94.6919%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,&amp;move_binary_format::file_format::CompiledModule&gt;&gt; (10 samples, 0.01%)</title><rect x="94.4419%" y="677" width="0.0101%" height="15" fill="rgb(233,206,24)" fg:x="93896" fg:w="10"/><text x="94.6919%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="94.4419%" y="661" width="0.0101%" height="15" fill="rgb(220,199,8)" fg:x="93896" fg:w="10"/><text x="94.6919%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="94.4539%" y="629" width="0.0191%" height="15" fill="rgb(254,65,26)" fg:x="93908" fg:w="19"/><text x="94.7039%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="94.4590%" y="613" width="0.0141%" height="15" fill="rgb(253,102,23)" fg:x="93913" fg:w="14"/><text x="94.7090%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (16 samples, 0.02%)</title><rect x="94.4741%" y="565" width="0.0161%" height="15" fill="rgb(231,103,35)" fg:x="93928" fg:w="16"/><text x="94.7241%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (16 samples, 0.02%)</title><rect x="94.4741%" y="549" width="0.0161%" height="15" fill="rgb(238,26,10)" fg:x="93928" fg:w="16"/><text x="94.7241%" y="559.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.02%)</title><rect x="94.4741%" y="533" width="0.0161%" height="15" fill="rgb(234,191,34)" fg:x="93928" fg:w="16"/><text x="94.7241%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="94.4962%" y="501" width="0.0111%" height="15" fill="rgb(206,210,9)" fg:x="93950" fg:w="11"/><text x="94.7462%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="94.4962%" y="485" width="0.0111%" height="15" fill="rgb(219,155,3)" fg:x="93950" fg:w="11"/><text x="94.7462%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (37 samples, 0.04%)</title><rect x="94.4741%" y="613" width="0.0372%" height="15" fill="rgb(221,62,52)" fg:x="93928" fg:w="37"/><text x="94.7241%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex)&gt; (37 samples, 0.04%)</title><rect x="94.4741%" y="597" width="0.0372%" height="15" fill="rgb(215,197,36)" fg:x="93928" fg:w="37"/><text x="94.7241%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (37 samples, 0.04%)</title><rect x="94.4741%" y="581" width="0.0372%" height="15" fill="rgb(226,222,6)" fg:x="93928" fg:w="37"/><text x="94.7241%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (21 samples, 0.02%)</title><rect x="94.4902%" y="565" width="0.0211%" height="15" fill="rgb(215,58,28)" fg:x="93944" fg:w="21"/><text x="94.7402%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (21 samples, 0.02%)</title><rect x="94.4902%" y="549" width="0.0211%" height="15" fill="rgb(212,148,2)" fg:x="93944" fg:w="21"/><text x="94.7402%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (21 samples, 0.02%)</title><rect x="94.4902%" y="533" width="0.0211%" height="15" fill="rgb(208,21,42)" fg:x="93944" fg:w="21"/><text x="94.7402%" y="543.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.02%)</title><rect x="94.4902%" y="517" width="0.0211%" height="15" fill="rgb(209,107,26)" fg:x="93944" fg:w="21"/><text x="94.7402%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (61 samples, 0.06%)</title><rect x="94.4519%" y="645" width="0.0614%" height="15" fill="rgb(254,60,47)" fg:x="93906" fg:w="61"/><text x="94.7019%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (40 samples, 0.04%)</title><rect x="94.4731%" y="629" width="0.0402%" height="15" fill="rgb(207,226,45)" fg:x="93927" fg:w="40"/><text x="94.7231%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex&gt;&gt; (64 samples, 0.06%)</title><rect x="94.4519%" y="709" width="0.0644%" height="15" fill="rgb(223,124,22)" fg:x="93906" fg:w="64"/><text x="94.7019%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex,std::collections::hash::map::RandomState&gt;&gt; (64 samples, 0.06%)</title><rect x="94.4519%" y="693" width="0.0644%" height="15" fill="rgb(240,162,13)" fg:x="93906" fg:w="64"/><text x="94.7019%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::FunctionHandleIndex)&gt;&gt; (64 samples, 0.06%)</title><rect x="94.4519%" y="677" width="0.0644%" height="15" fill="rgb(244,199,31)" fg:x="93906" fg:w="64"/><text x="94.7019%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="94.4519%" y="661" width="0.0644%" height="15" fill="rgb(207,92,16)" fg:x="93906" fg:w="64"/><text x="94.7019%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex&gt;&gt; (10 samples, 0.01%)</title><rect x="94.5163%" y="709" width="0.0101%" height="15" fill="rgb(215,31,19)" fg:x="93970" fg:w="10"/><text x="94.7663%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex,std::collections::hash::map::RandomState&gt;&gt; (10 samples, 0.01%)</title><rect x="94.5163%" y="693" width="0.0101%" height="15" fill="rgb(245,118,14)" fg:x="93970" fg:w="10"/><text x="94.7663%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::StructHandleIndex)&gt;&gt; (10 samples, 0.01%)</title><rect x="94.5163%" y="677" width="0.0101%" height="15" fill="rgb(248,12,46)" fg:x="93970" fg:w="10"/><text x="94.7663%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="94.5163%" y="661" width="0.0101%" height="15" fill="rgb(209,119,0)" fg:x="93970" fg:w="10"/><text x="94.7663%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (10 samples, 0.01%)</title><rect x="94.5163%" y="645" width="0.0101%" height="15" fill="rgb(254,51,44)" fg:x="93970" fg:w="10"/><text x="94.7663%" y="655.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (439 samples, 0.44%)</title><rect x="94.0858%" y="757" width="0.4416%" height="15" fill="rgb(253,182,35)" fg:x="93542" fg:w="439"/><text x="94.3358%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (439 samples, 0.44%)</title><rect x="94.0858%" y="741" width="0.4416%" height="15" fill="rgb(205,198,39)" fg:x="93542" fg:w="439"/><text x="94.3358%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytecode_verifier::dependencies::Context&gt; (85 samples, 0.09%)</title><rect x="94.4419%" y="725" width="0.0855%" height="15" fill="rgb(251,175,48)" fg:x="93896" fg:w="85"/><text x="94.6919%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="94.5274%" y="645" width="0.0141%" height="15" fill="rgb(239,38,17)" fg:x="93981" fg:w="14"/><text x="94.7774%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="94.5304%" y="629" width="0.0111%" height="15" fill="rgb(212,101,8)" fg:x="93984" fg:w="11"/><text x="94.7804%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="94.5304%" y="613" width="0.0111%" height="15" fill="rgb(228,35,17)" fg:x="93984" fg:w="11"/><text x="94.7804%" y="623.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (11 samples, 0.01%)</title><rect x="94.5304%" y="597" width="0.0111%" height="15" fill="rgb(214,95,8)" fg:x="93984" fg:w="11"/><text x="94.7804%" y="607.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (11 samples, 0.01%)</title><rect x="94.5304%" y="581" width="0.0111%" height="15" fill="rgb(210,176,35)" fg:x="93984" fg:w="11"/><text x="94.7804%" y="591.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (10 samples, 0.01%)</title><rect x="94.5314%" y="565" width="0.0101%" height="15" fill="rgb(226,4,3)" fg:x="93985" fg:w="10"/><text x="94.7814%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.02%)</title><rect x="94.5274%" y="677" width="0.0241%" height="15" fill="rgb(232,133,14)" fg:x="93981" fg:w="24"/><text x="94.7774%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.02%)</title><rect x="94.5274%" y="661" width="0.0241%" height="15" fill="rgb(250,191,8)" fg:x="93981" fg:w="24"/><text x="94.7774%" y="671.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (38 samples, 0.04%)</title><rect x="94.5274%" y="757" width="0.0382%" height="15" fill="rgb(213,12,45)" fg:x="93981" fg:w="38"/><text x="94.7774%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.04%)</title><rect x="94.5274%" y="741" width="0.0382%" height="15" fill="rgb(233,78,26)" fg:x="93981" fg:w="38"/><text x="94.7774%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="94.5274%" y="725" width="0.0382%" height="15" fill="rgb(245,222,11)" fg:x="93981" fg:w="38"/><text x="94.7774%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="94.5274%" y="709" width="0.0382%" height="15" fill="rgb(216,174,12)" fg:x="93981" fg:w="38"/><text x="94.7774%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="94.5274%" y="693" width="0.0382%" height="15" fill="rgb(213,15,9)" fg:x="93981" fg:w="38"/><text x="94.7774%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::check_natives (12 samples, 0.01%)</title><rect x="94.5656%" y="757" width="0.0121%" height="15" fill="rgb(238,103,32)" fg:x="94019" fg:w="12"/><text x="94.8156%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::check_natives::check_natives_impl (12 samples, 0.01%)</title><rect x="94.5656%" y="741" width="0.0121%" height="15" fill="rgb(245,85,15)" fg:x="94019" fg:w="12"/><text x="94.8156%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="94.5797%" y="613" width="0.0201%" height="15" fill="rgb(254,204,5)" fg:x="94033" fg:w="20"/><text x="94.8297%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (20 samples, 0.02%)</title><rect x="94.5797%" y="597" width="0.0201%" height="15" fill="rgb(231,178,15)" fg:x="94033" fg:w="20"/><text x="94.8297%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module::deserialize_and_verify_module (529 samples, 0.53%)</title><rect x="94.0707%" y="805" width="0.5321%" height="15" fill="rgb(248,151,3)" fg:x="93527" fg:w="529"/><text x="94.3207%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_expect_no_missing_dependencies (521 samples, 0.52%)</title><rect x="94.0788%" y="789" width="0.5240%" height="15" fill="rgb(250,139,13)" fg:x="93535" fg:w="521"/><text x="94.3288%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (521 samples, 0.52%)</title><rect x="94.0788%" y="773" width="0.5240%" height="15" fill="rgb(243,107,53)" fg:x="93535" fg:w="521"/><text x="94.3288%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_dependencies_expect_no_missing_dependencies (25 samples, 0.03%)</title><rect x="94.5777%" y="757" width="0.0251%" height="15" fill="rgb(232,81,15)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.03%)</title><rect x="94.5777%" y="741" width="0.0251%" height="15" fill="rgb(225,187,48)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="94.5777%" y="725" width="0.0251%" height="15" fill="rgb(205,116,12)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="735.50"></text></g><g><title>core::iter::adapters::process_results (25 samples, 0.03%)</title><rect x="94.5777%" y="709" width="0.0251%" height="15" fill="rgb(220,222,31)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (25 samples, 0.03%)</title><rect x="94.5777%" y="693" width="0.0251%" height="15" fill="rgb(233,187,49)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.03%)</title><rect x="94.5777%" y="677" width="0.0251%" height="15" fill="rgb(211,168,53)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="94.5777%" y="661" width="0.0251%" height="15" fill="rgb(206,160,16)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="94.5777%" y="645" width="0.0251%" height="15" fill="rgb(254,164,13)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="94.5777%" y="629" width="0.0251%" height="15" fill="rgb(229,45,30)" fg:x="94031" fg:w="25"/><text x="94.8277%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="94.6119%" y="485" width="0.0111%" height="15" fill="rgb(237,32,10)" fg:x="94065" fg:w="11"/><text x="94.8619%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="94.6119%" y="469" width="0.0111%" height="15" fill="rgb(251,20,47)" fg:x="94065" fg:w="11"/><text x="94.8619%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (11 samples, 0.01%)</title><rect x="94.6119%" y="453" width="0.0111%" height="15" fill="rgb(251,116,12)" fg:x="94065" fg:w="11"/><text x="94.8619%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="94.6129%" y="437" width="0.0101%" height="15" fill="rgb(214,227,27)" fg:x="94066" fg:w="10"/><text x="94.8629%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="94.6088%" y="501" width="0.0151%" height="15" fill="rgb(248,10,53)" fg:x="94062" fg:w="15"/><text x="94.8588%" y="511.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (19 samples, 0.02%)</title><rect x="94.6068%" y="597" width="0.0191%" height="15" fill="rgb(221,176,25)" fg:x="94060" fg:w="19"/><text x="94.8568%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (19 samples, 0.02%)</title><rect x="94.6068%" y="581" width="0.0191%" height="15" fill="rgb(205,70,46)" fg:x="94060" fg:w="19"/><text x="94.8568%" y="591.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (19 samples, 0.02%)</title><rect x="94.6068%" y="565" width="0.0191%" height="15" fill="rgb(217,45,38)" fg:x="94060" fg:w="19"/><text x="94.8568%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (17 samples, 0.02%)</title><rect x="94.6088%" y="549" width="0.0171%" height="15" fill="rgb(243,6,54)" fg:x="94062" fg:w="17"/><text x="94.8588%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.02%)</title><rect x="94.6088%" y="533" width="0.0171%" height="15" fill="rgb(242,76,23)" fg:x="94062" fg:w="17"/><text x="94.8588%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="94.6088%" y="517" width="0.0171%" height="15" fill="rgb(239,166,0)" fg:x="94062" fg:w="17"/><text x="94.8588%" y="527.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (20 samples, 0.02%)</title><rect x="94.6068%" y="645" width="0.0201%" height="15" fill="rgb(238,174,32)" fg:x="94060" fg:w="20"/><text x="94.8568%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 0.02%)</title><rect x="94.6068%" y="629" width="0.0201%" height="15" fill="rgb(238,124,44)" fg:x="94060" fg:w="20"/><text x="94.8568%" y="639.50"></text></g><g><title>serde::ser::impls::_&lt;impl serde::ser::Serialize for [T: 16]&gt;::serialize (20 samples, 0.02%)</title><rect x="94.6068%" y="613" width="0.0201%" height="15" fill="rgb(206,185,9)" fg:x="94060" fg:w="20"/><text x="94.8568%" y="623.50"></text></g><g><title>&lt;diem_types::access_path::AccessPath as core::convert::From&lt;&amp;move_core_types::language_storage::ModuleId&gt;&gt;::from (25 samples, 0.03%)</title><rect x="94.6028%" y="741" width="0.0251%" height="15" fill="rgb(215,157,17)" fg:x="94056" fg:w="25"/><text x="94.8528%" y="751.50"></text></g><g><title>move_core_types::language_storage::ModuleId::access_vector (25 samples, 0.03%)</title><rect x="94.6028%" y="725" width="0.0251%" height="15" fill="rgb(251,17,29)" fg:x="94056" fg:w="25"/><text x="94.8528%" y="735.50"></text></g><g><title>bcs::ser::to_bytes (21 samples, 0.02%)</title><rect x="94.6068%" y="709" width="0.0211%" height="15" fill="rgb(227,113,27)" fg:x="94060" fg:w="21"/><text x="94.8568%" y="719.50"></text></g><g><title>bcs::ser::serialize_into (21 samples, 0.02%)</title><rect x="94.6068%" y="693" width="0.0211%" height="15" fill="rgb(217,226,24)" fg:x="94060" fg:w="21"/><text x="94.8568%" y="703.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::ModuleId&gt;::serialize (21 samples, 0.02%)</title><rect x="94.6068%" y="677" width="0.0211%" height="15" fill="rgb(251,99,38)" fg:x="94060" fg:w="21"/><text x="94.8568%" y="687.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.02%)</title><rect x="94.6068%" y="661" width="0.0211%" height="15" fill="rgb(231,147,19)" fg:x="94060" fg:w="21"/><text x="94.8568%" y="671.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (37 samples, 0.04%)</title><rect x="94.6028%" y="789" width="0.0372%" height="15" fill="rgb(230,86,8)" fg:x="94056" fg:w="37"/><text x="94.8528%" y="799.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as move_vm_runtime::data_cache::MoveStorage&gt;::get_module (37 samples, 0.04%)</title><rect x="94.6028%" y="773" width="0.0372%" height="15" fill="rgb(237,159,39)" fg:x="94056" fg:w="37"/><text x="94.8528%" y="783.50"></text></g><g><title>&lt;diem_vm::data_cache::RemoteStorage&lt;S&gt; as move_vm_runtime::data_cache::MoveStorage&gt;::get_module (37 samples, 0.04%)</title><rect x="94.6028%" y="757" width="0.0372%" height="15" fill="rgb(247,179,47)" fg:x="94056" fg:w="37"/><text x="94.8528%" y="767.50"></text></g><g><title>diem_vm::data_cache::RemoteStorage&lt;S&gt;::get (10 samples, 0.01%)</title><rect x="94.6300%" y="741" width="0.0101%" height="15" fill="rgb(253,152,26)" fg:x="94083" fg:w="10"/><text x="94.8800%" y="751.50"></text></g><g><title>&lt;diem_vm::data_cache::StateViewCache as diem_state_view::StateView&gt;::get (10 samples, 0.01%)</title><rect x="94.6300%" y="725" width="0.0101%" height="15" fill="rgb(222,211,15)" fg:x="94083" fg:w="10"/><text x="94.8800%" y="735.50"></text></g><g><title>&lt;language_e2e_tests::data_store::FakeDataStore as diem_state_view::StateView&gt;::get (10 samples, 0.01%)</title><rect x="94.6300%" y="709" width="0.0101%" height="15" fill="rgb(236,193,6)" fg:x="94083" fg:w="10"/><text x="94.8800%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module::deserialize_and_verify_module (25 samples, 0.03%)</title><rect x="94.6491%" y="789" width="0.0251%" height="15" fill="rgb(226,206,10)" fg:x="94102" fg:w="25"/><text x="94.8991%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_expect_no_missing_dependencies (21 samples, 0.02%)</title><rect x="94.6531%" y="773" width="0.0211%" height="15" fill="rgb(213,125,22)" fg:x="94106" fg:w="21"/><text x="94.9031%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (21 samples, 0.02%)</title><rect x="94.6531%" y="757" width="0.0211%" height="15" fill="rgb(221,66,28)" fg:x="94106" fg:w="21"/><text x="94.9031%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (17 samples, 0.02%)</title><rect x="94.6974%" y="613" width="0.0171%" height="15" fill="rgb(222,84,53)" fg:x="94150" fg:w="17"/><text x="94.9474%" y="623.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="94.7044%" y="597" width="0.0101%" height="15" fill="rgb(243,50,15)" fg:x="94157" fg:w="10"/><text x="94.9544%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="94.7044%" y="581" width="0.0101%" height="15" fill="rgb(208,184,23)" fg:x="94157" fg:w="10"/><text x="94.9544%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (10 samples, 0.01%)</title><rect x="94.7044%" y="565" width="0.0101%" height="15" fill="rgb(221,83,2)" fg:x="94157" fg:w="10"/><text x="94.9544%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (10 samples, 0.01%)</title><rect x="94.7044%" y="549" width="0.0101%" height="15" fill="rgb(236,53,24)" fg:x="94157" fg:w="10"/><text x="94.9544%" y="559.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (10 samples, 0.01%)</title><rect x="94.7044%" y="533" width="0.0101%" height="15" fill="rgb(244,171,29)" fg:x="94157" fg:w="10"/><text x="94.9544%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (34 samples, 0.03%)</title><rect x="94.6853%" y="677" width="0.0342%" height="15" fill="rgb(205,19,11)" fg:x="94138" fg:w="34"/><text x="94.9353%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31 samples, 0.03%)</title><rect x="94.6883%" y="661" width="0.0312%" height="15" fill="rgb(207,108,29)" fg:x="94141" fg:w="31"/><text x="94.9383%" y="671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.03%)</title><rect x="94.6913%" y="645" width="0.0282%" height="15" fill="rgb(236,215,43)" fg:x="94144" fg:w="28"/><text x="94.9413%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.03%)</title><rect x="94.6913%" y="629" width="0.0282%" height="15" fill="rgb(213,58,35)" fg:x="94144" fg:w="28"/><text x="94.9413%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (41 samples, 0.04%)</title><rect x="94.6853%" y="709" width="0.0412%" height="15" fill="rgb(220,211,46)" fg:x="94138" fg:w="41"/><text x="94.9353%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (41 samples, 0.04%)</title><rect x="94.6853%" y="693" width="0.0412%" height="15" fill="rgb(212,134,16)" fg:x="94138" fg:w="41"/><text x="94.9353%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="94.7497%" y="597" width="0.0111%" height="15" fill="rgb(232,90,44)" fg:x="94202" fg:w="11"/><text x="94.9997%" y="607.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (25 samples, 0.03%)</title><rect x="94.7637%" y="581" width="0.0251%" height="15" fill="rgb(212,18,36)" fg:x="94216" fg:w="25"/><text x="95.0137%" y="591.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (25 samples, 0.03%)</title><rect x="94.7637%" y="565" width="0.0251%" height="15" fill="rgb(206,112,24)" fg:x="94216" fg:w="25"/><text x="95.0137%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (14 samples, 0.01%)</title><rect x="94.7748%" y="549" width="0.0141%" height="15" fill="rgb(238,223,40)" fg:x="94227" fg:w="14"/><text x="95.0248%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (11 samples, 0.01%)</title><rect x="94.7778%" y="533" width="0.0111%" height="15" fill="rgb(226,169,20)" fg:x="94230" fg:w="11"/><text x="95.0278%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (11 samples, 0.01%)</title><rect x="94.7778%" y="517" width="0.0111%" height="15" fill="rgb(241,64,52)" fg:x="94230" fg:w="11"/><text x="95.0278%" y="527.50"></text></g><g><title>core::cmp::min (10 samples, 0.01%)</title><rect x="94.7979%" y="501" width="0.0101%" height="15" fill="rgb(228,120,25)" fg:x="94250" fg:w="10"/><text x="95.0479%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (17 samples, 0.02%)</title><rect x="94.7919%" y="533" width="0.0171%" height="15" fill="rgb(234,108,19)" fg:x="94244" fg:w="17"/><text x="95.0419%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (17 samples, 0.02%)</title><rect x="94.7919%" y="517" width="0.0171%" height="15" fill="rgb(236,133,29)" fg:x="94244" fg:w="17"/><text x="95.0419%" y="527.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (51 samples, 0.05%)</title><rect x="94.7607%" y="597" width="0.0513%" height="15" fill="rgb(246,174,53)" fg:x="94213" fg:w="51"/><text x="95.0107%" y="607.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (23 samples, 0.02%)</title><rect x="94.7889%" y="581" width="0.0231%" height="15" fill="rgb(210,105,35)" fg:x="94241" fg:w="23"/><text x="95.0389%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (22 samples, 0.02%)</title><rect x="94.7899%" y="565" width="0.0221%" height="15" fill="rgb(225,27,26)" fg:x="94242" fg:w="22"/><text x="95.0399%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (22 samples, 0.02%)</title><rect x="94.7899%" y="549" width="0.0221%" height="15" fill="rgb(233,2,39)" fg:x="94242" fg:w="22"/><text x="95.0399%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (11 samples, 0.01%)</title><rect x="94.8120%" y="597" width="0.0111%" height="15" fill="rgb(219,164,26)" fg:x="94264" fg:w="11"/><text x="95.0620%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (86 samples, 0.09%)</title><rect x="94.7396%" y="645" width="0.0865%" height="15" fill="rgb(236,211,5)" fg:x="94192" fg:w="86"/><text x="94.9896%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (82 samples, 0.08%)</title><rect x="94.7436%" y="629" width="0.0825%" height="15" fill="rgb(244,227,23)" fg:x="94196" fg:w="82"/><text x="94.9936%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (82 samples, 0.08%)</title><rect x="94.7436%" y="613" width="0.0825%" height="15" fill="rgb(230,184,8)" fg:x="94196" fg:w="82"/><text x="94.9936%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (94 samples, 0.09%)</title><rect x="94.7376%" y="661" width="0.0945%" height="15" fill="rgb(217,125,48)" fg:x="94190" fg:w="94"/><text x="94.9876%" y="671.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (107 samples, 0.11%)</title><rect x="94.7376%" y="693" width="0.1076%" height="15" fill="rgb(223,192,47)" fg:x="94190" fg:w="107"/><text x="94.9876%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (107 samples, 0.11%)</title><rect x="94.7376%" y="677" width="0.1076%" height="15" fill="rgb(226,119,10)" fg:x="94190" fg:w="107"/><text x="94.9876%" y="687.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (26 samples, 0.03%)</title><rect x="94.8452%" y="693" width="0.0262%" height="15" fill="rgb(221,49,29)" fg:x="94297" fg:w="26"/><text x="95.0952%" y="703.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (10 samples, 0.01%)</title><rect x="94.8935%" y="437" width="0.0101%" height="15" fill="rgb(217,205,19)" fg:x="94345" fg:w="10"/><text x="95.1435%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="94.8935%" y="421" width="0.0101%" height="15" fill="rgb(242,104,7)" fg:x="94345" fg:w="10"/><text x="95.1435%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.01%)</title><rect x="94.8935%" y="405" width="0.0101%" height="15" fill="rgb(209,154,48)" fg:x="94345" fg:w="10"/><text x="95.1435%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="94.8874%" y="533" width="0.0231%" height="15" fill="rgb(219,213,46)" fg:x="94339" fg:w="23"/><text x="95.1374%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="94.8915%" y="517" width="0.0191%" height="15" fill="rgb(229,105,38)" fg:x="94343" fg:w="19"/><text x="95.1415%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 0.02%)</title><rect x="94.8925%" y="501" width="0.0181%" height="15" fill="rgb(205,151,5)" fg:x="94344" fg:w="18"/><text x="95.1425%" y="511.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (18 samples, 0.02%)</title><rect x="94.8925%" y="485" width="0.0181%" height="15" fill="rgb(248,115,40)" fg:x="94344" fg:w="18"/><text x="95.1425%" y="495.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (17 samples, 0.02%)</title><rect x="94.8935%" y="469" width="0.0171%" height="15" fill="rgb(206,179,2)" fg:x="94345" fg:w="17"/><text x="95.1435%" y="479.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (17 samples, 0.02%)</title><rect x="94.8935%" y="453" width="0.0171%" height="15" fill="rgb(230,103,24)" fg:x="94345" fg:w="17"/><text x="95.1435%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (33 samples, 0.03%)</title><rect x="94.8874%" y="565" width="0.0332%" height="15" fill="rgb(218,152,4)" fg:x="94339" fg:w="33"/><text x="95.1374%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (33 samples, 0.03%)</title><rect x="94.8874%" y="549" width="0.0332%" height="15" fill="rgb(236,161,54)" fg:x="94339" fg:w="33"/><text x="95.1374%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (42 samples, 0.04%)</title><rect x="94.8854%" y="629" width="0.0422%" height="15" fill="rgb(226,65,17)" fg:x="94337" fg:w="42"/><text x="95.1354%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (42 samples, 0.04%)</title><rect x="94.8854%" y="613" width="0.0422%" height="15" fill="rgb(221,134,44)" fg:x="94337" fg:w="42"/><text x="95.1354%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.04%)</title><rect x="94.8864%" y="597" width="0.0412%" height="15" fill="rgb(251,129,4)" fg:x="94338" fg:w="41"/><text x="95.1364%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41 samples, 0.04%)</title><rect x="94.8864%" y="581" width="0.0412%" height="15" fill="rgb(244,32,34)" fg:x="94338" fg:w="41"/><text x="95.1364%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.05%)</title><rect x="94.8854%" y="677" width="0.0453%" height="15" fill="rgb(251,224,37)" fg:x="94337" fg:w="45"/><text x="95.1354%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (45 samples, 0.05%)</title><rect x="94.8854%" y="661" width="0.0453%" height="15" fill="rgb(248,117,31)" fg:x="94337" fg:w="45"/><text x="95.1354%" y="671.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (45 samples, 0.05%)</title><rect x="94.8854%" y="645" width="0.0453%" height="15" fill="rgb(222,208,37)" fg:x="94337" fg:w="45"/><text x="95.1354%" y="655.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (219 samples, 0.22%)</title><rect x="94.7265%" y="709" width="0.2203%" height="15" fill="rgb(234,211,25)" fg:x="94179" fg:w="219"/><text x="94.9765%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (61 samples, 0.06%)</title><rect x="94.8854%" y="693" width="0.0614%" height="15" fill="rgb(211,72,6)" fg:x="94337" fg:w="61"/><text x="95.1354%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (16 samples, 0.02%)</title><rect x="94.9307%" y="677" width="0.0161%" height="15" fill="rgb(249,198,38)" fg:x="94382" fg:w="16"/><text x="95.1807%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (15 samples, 0.02%)</title><rect x="94.9317%" y="661" width="0.0151%" height="15" fill="rgb(221,86,51)" fg:x="94383" fg:w="15"/><text x="95.1817%" y="671.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (14 samples, 0.01%)</title><rect x="94.9327%" y="645" width="0.0141%" height="15" fill="rgb(226,178,43)" fg:x="94384" fg:w="14"/><text x="95.1827%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="94.9347%" y="629" width="0.0121%" height="15" fill="rgb(215,145,7)" fg:x="94386" fg:w="12"/><text x="95.1847%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.01%)</title><rect x="94.9347%" y="613" width="0.0121%" height="15" fill="rgb(250,202,36)" fg:x="94386" fg:w="12"/><text x="95.1847%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.01%)</title><rect x="94.9347%" y="597" width="0.0121%" height="15" fill="rgb(215,86,13)" fg:x="94386" fg:w="12"/><text x="95.1847%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="94.9719%" y="389" width="0.0111%" height="15" fill="rgb(221,134,12)" fg:x="94423" fg:w="11"/><text x="95.2219%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="94.9719%" y="373" width="0.0111%" height="15" fill="rgb(213,82,10)" fg:x="94423" fg:w="11"/><text x="95.2219%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="94.9719%" y="357" width="0.0111%" height="15" fill="rgb(214,142,0)" fg:x="94423" fg:w="11"/><text x="95.2219%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (14 samples, 0.01%)</title><rect x="94.9699%" y="405" width="0.0141%" height="15" fill="rgb(205,145,9)" fg:x="94421" fg:w="14"/><text x="95.2199%" y="415.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (15 samples, 0.02%)</title><rect x="94.9699%" y="453" width="0.0151%" height="15" fill="rgb(244,214,8)" fg:x="94421" fg:w="15"/><text x="95.2199%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.02%)</title><rect x="94.9699%" y="437" width="0.0151%" height="15" fill="rgb(224,72,51)" fg:x="94421" fg:w="15"/><text x="95.2199%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (15 samples, 0.02%)</title><rect x="94.9699%" y="421" width="0.0151%" height="15" fill="rgb(233,137,37)" fg:x="94421" fg:w="15"/><text x="95.2199%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="94.9669%" y="549" width="0.0231%" height="15" fill="rgb(208,71,28)" fg:x="94418" fg:w="23"/><text x="95.2169%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="94.9699%" y="533" width="0.0201%" height="15" fill="rgb(226,31,7)" fg:x="94421" fg:w="20"/><text x="95.2199%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 0.02%)</title><rect x="94.9699%" y="517" width="0.0201%" height="15" fill="rgb(229,62,18)" fg:x="94421" fg:w="20"/><text x="95.2199%" y="527.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (20 samples, 0.02%)</title><rect x="94.9699%" y="501" width="0.0201%" height="15" fill="rgb(226,74,28)" fg:x="94421" fg:w="20"/><text x="95.2199%" y="511.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (20 samples, 0.02%)</title><rect x="94.9699%" y="485" width="0.0201%" height="15" fill="rgb(214,170,18)" fg:x="94421" fg:w="20"/><text x="95.2199%" y="495.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (20 samples, 0.02%)</title><rect x="94.9699%" y="469" width="0.0201%" height="15" fill="rgb(227,229,35)" fg:x="94421" fg:w="20"/><text x="95.2199%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.04%)</title><rect x="94.9659%" y="581" width="0.0382%" height="15" fill="rgb(225,181,39)" fg:x="94417" fg:w="38"/><text x="95.2159%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (38 samples, 0.04%)</title><rect x="94.9659%" y="565" width="0.0382%" height="15" fill="rgb(253,124,44)" fg:x="94417" fg:w="38"/><text x="95.2159%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="94.9931%" y="549" width="0.0111%" height="15" fill="rgb(220,75,18)" fg:x="94444" fg:w="11"/><text x="95.2431%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="94.9931%" y="533" width="0.0111%" height="15" fill="rgb(239,175,43)" fg:x="94444" fg:w="11"/><text x="95.2431%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (11 samples, 0.01%)</title><rect x="94.9931%" y="517" width="0.0111%" height="15" fill="rgb(228,112,50)" fg:x="94444" fg:w="11"/><text x="95.2431%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="94.9931%" y="501" width="0.0111%" height="15" fill="rgb(232,105,36)" fg:x="94444" fg:w="11"/><text x="95.2431%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="95.0041%" y="581" width="0.0141%" height="15" fill="rgb(227,137,47)" fg:x="94455" fg:w="14"/><text x="95.2541%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="95.0061%" y="565" width="0.0121%" height="15" fill="rgb(217,51,9)" fg:x="94457" fg:w="12"/><text x="95.2561%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="95.0061%" y="549" width="0.0121%" height="15" fill="rgb(245,117,0)" fg:x="94457" fg:w="12"/><text x="95.2561%" y="559.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (12 samples, 0.01%)</title><rect x="95.0061%" y="533" width="0.0121%" height="15" fill="rgb(252,52,30)" fg:x="94457" fg:w="12"/><text x="95.2561%" y="543.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (12 samples, 0.01%)</title><rect x="95.0061%" y="517" width="0.0121%" height="15" fill="rgb(227,85,33)" fg:x="94457" fg:w="12"/><text x="95.2561%" y="527.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (12 samples, 0.01%)</title><rect x="95.0061%" y="501" width="0.0121%" height="15" fill="rgb(220,157,20)" fg:x="94457" fg:w="12"/><text x="95.2561%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (58 samples, 0.06%)</title><rect x="94.9639%" y="645" width="0.0583%" height="15" fill="rgb(254,14,34)" fg:x="94415" fg:w="58"/><text x="95.2139%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (58 samples, 0.06%)</title><rect x="94.9639%" y="629" width="0.0583%" height="15" fill="rgb(216,103,41)" fg:x="94415" fg:w="58"/><text x="95.2139%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (58 samples, 0.06%)</title><rect x="94.9639%" y="613" width="0.0583%" height="15" fill="rgb(245,221,9)" fg:x="94415" fg:w="58"/><text x="95.2139%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (57 samples, 0.06%)</title><rect x="94.9649%" y="597" width="0.0573%" height="15" fill="rgb(254,136,47)" fg:x="94416" fg:w="57"/><text x="95.2149%" y="607.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (63 samples, 0.06%)</title><rect x="94.9629%" y="661" width="0.0634%" height="15" fill="rgb(235,71,46)" fg:x="94414" fg:w="63"/><text x="95.2129%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.07%)</title><rect x="94.9619%" y="693" width="0.0654%" height="15" fill="rgb(242,154,29)" fg:x="94413" fg:w="65"/><text x="95.2119%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (64 samples, 0.06%)</title><rect x="94.9629%" y="677" width="0.0644%" height="15" fill="rgb(210,65,31)" fg:x="94414" fg:w="64"/><text x="95.2129%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="95.0323%" y="597" width="0.0141%" height="15" fill="rgb(244,9,50)" fg:x="94483" fg:w="14"/><text x="95.2823%" y="607.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (374 samples, 0.38%)</title><rect x="94.6782%" y="741" width="0.3762%" height="15" fill="rgb(215,141,38)" fg:x="94131" fg:w="374"/><text x="94.9282%" y="751.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (372 samples, 0.37%)</title><rect x="94.6803%" y="725" width="0.3742%" height="15" fill="rgb(241,129,6)" fg:x="94133" fg:w="372"/><text x="94.9303%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}} (95 samples, 0.10%)</title><rect x="94.9589%" y="709" width="0.0956%" height="15" fill="rgb(253,169,4)" fg:x="94410" fg:w="95"/><text x="95.2089%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (26 samples, 0.03%)</title><rect x="95.0283%" y="693" width="0.0262%" height="15" fill="rgb(237,82,36)" fg:x="94479" fg:w="26"/><text x="95.2783%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations::_{{closure}}::_{{closure}} (26 samples, 0.03%)</title><rect x="95.0283%" y="677" width="0.0262%" height="15" fill="rgb(209,171,11)" fg:x="94479" fg:w="26"/><text x="95.2783%" y="687.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (25 samples, 0.03%)</title><rect x="95.0293%" y="661" width="0.0251%" height="15" fill="rgb(242,19,22)" fg:x="94480" fg:w="25"/><text x="95.2793%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.02%)</title><rect x="95.0323%" y="645" width="0.0221%" height="15" fill="rgb(251,122,24)" fg:x="94483" fg:w="22"/><text x="95.2823%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.02%)</title><rect x="95.0323%" y="629" width="0.0221%" height="15" fill="rgb(226,166,42)" fg:x="94483" fg:w="22"/><text x="95.2823%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.02%)</title><rect x="95.0323%" y="613" width="0.0221%" height="15" fill="rgb(244,101,48)" fg:x="94483" fg:w="22"/><text x="95.2823%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop::next_or_end (12 samples, 0.01%)</title><rect x="95.0584%" y="661" width="0.0121%" height="15" fill="rgb(227,125,1)" fg:x="94509" fg:w="12"/><text x="95.3084%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (10 samples, 0.01%)</title><rect x="95.0604%" y="645" width="0.0101%" height="15" fill="rgb(206,79,43)" fg:x="94511" fg:w="10"/><text x="95.3104%" y="655.50"></text></g><g><title>alloc::collections::btree::mem::replace (10 samples, 0.01%)</title><rect x="95.0604%" y="629" width="0.0101%" height="15" fill="rgb(241,109,41)" fg:x="94511" fg:w="10"/><text x="95.3104%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::set::BTreeSet&lt;move_core_types::language_storage::ModuleId&gt;&gt; (17 samples, 0.02%)</title><rect x="95.0544%" y="741" width="0.0171%" height="15" fill="rgb(219,73,4)" fg:x="94505" fg:w="17"/><text x="95.3044%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (17 samples, 0.02%)</title><rect x="95.0544%" y="725" width="0.0171%" height="15" fill="rgb(239,25,41)" fg:x="94505" fg:w="17"/><text x="95.3044%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="95.0544%" y="709" width="0.0171%" height="15" fill="rgb(208,88,46)" fg:x="94505" fg:w="17"/><text x="95.3044%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::Dropper&lt;move_core_types::language_storage::ModuleId,()&gt;&gt; (13 samples, 0.01%)</title><rect x="95.0584%" y="693" width="0.0131%" height="15" fill="rgb(239,184,9)" fg:x="94509" fg:w="13"/><text x="95.3084%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Dropper&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="95.0584%" y="677" width="0.0131%" height="15" fill="rgb(223,114,13)" fg:x="94509" fg:w="13"/><text x="95.3084%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="95.0856%" y="485" width="0.0101%" height="15" fill="rgb(214,28,42)" fg:x="94536" fg:w="10"/><text x="95.3356%" y="495.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 0.01%)</title><rect x="95.0856%" y="533" width="0.0111%" height="15" fill="rgb(252,32,44)" fg:x="94536" fg:w="11"/><text x="95.3356%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="95.0856%" y="517" width="0.0111%" height="15" fill="rgb(231,159,4)" fg:x="94536" fg:w="11"/><text x="95.3356%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (11 samples, 0.01%)</title><rect x="95.0856%" y="501" width="0.0111%" height="15" fill="rgb(210,35,26)" fg:x="94536" fg:w="11"/><text x="95.3356%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="95.0816%" y="629" width="0.0181%" height="15" fill="rgb(208,190,37)" fg:x="94532" fg:w="18"/><text x="95.3316%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="95.0826%" y="613" width="0.0171%" height="15" fill="rgb(226,148,22)" fg:x="94533" fg:w="17"/><text x="95.3326%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.02%)</title><rect x="95.0836%" y="597" width="0.0161%" height="15" fill="rgb(242,153,24)" fg:x="94534" fg:w="16"/><text x="95.3336%" y="607.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies::_{{closure}} (16 samples, 0.02%)</title><rect x="95.0836%" y="581" width="0.0161%" height="15" fill="rgb(213,133,7)" fg:x="94534" fg:w="16"/><text x="95.3336%" y="591.50"></text></g><g><title>move_binary_format::access::ModuleAccess::module_id_for_handle (16 samples, 0.02%)</title><rect x="95.0836%" y="565" width="0.0161%" height="15" fill="rgb(248,206,18)" fg:x="94534" fg:w="16"/><text x="95.3336%" y="575.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (14 samples, 0.01%)</title><rect x="95.0856%" y="549" width="0.0141%" height="15" fill="rgb(233,157,4)" fg:x="94536" fg:w="14"/><text x="95.3356%" y="559.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.02%)</title><rect x="95.1017%" y="517" width="0.0221%" height="15" fill="rgb(249,179,32)" fg:x="94552" fg:w="22"/><text x="95.3517%" y="527.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.02%)</title><rect x="95.1017%" y="501" width="0.0221%" height="15" fill="rgb(248,69,35)" fg:x="94552" fg:w="22"/><text x="95.3517%" y="511.50"></text></g><g><title>_int_realloc (22 samples, 0.02%)</title><rect x="95.1017%" y="485" width="0.0221%" height="15" fill="rgb(249,158,38)" fg:x="94552" fg:w="22"/><text x="95.3517%" y="495.50"></text></g><g><title>_int_malloc (22 samples, 0.02%)</title><rect x="95.1017%" y="469" width="0.0221%" height="15" fill="rgb(223,18,43)" fg:x="94552" fg:w="22"/><text x="95.3517%" y="479.50"></text></g><g><title>malloc_consolidate (17 samples, 0.02%)</title><rect x="95.1067%" y="453" width="0.0171%" height="15" fill="rgb(238,42,45)" fg:x="94557" fg:w="17"/><text x="95.3567%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="95.1007%" y="565" width="0.0241%" height="15" fill="rgb(219,65,47)" fg:x="94551" fg:w="24"/><text x="95.3507%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 0.02%)</title><rect x="95.1017%" y="549" width="0.0231%" height="15" fill="rgb(248,153,12)" fg:x="94552" fg:w="23"/><text x="95.3517%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 0.02%)</title><rect x="95.1017%" y="533" width="0.0231%" height="15" fill="rgb(240,118,4)" fg:x="94552" fg:w="23"/><text x="95.3517%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (45 samples, 0.05%)</title><rect x="95.0806%" y="661" width="0.0453%" height="15" fill="rgb(250,96,34)" fg:x="94531" fg:w="45"/><text x="95.3306%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (45 samples, 0.05%)</title><rect x="95.0806%" y="645" width="0.0453%" height="15" fill="rgb(221,15,4)" fg:x="94531" fg:w="45"/><text x="95.3306%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.03%)</title><rect x="95.1007%" y="629" width="0.0251%" height="15" fill="rgb(217,149,33)" fg:x="94551" fg:w="25"/><text x="95.3507%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.03%)</title><rect x="95.1007%" y="613" width="0.0251%" height="15" fill="rgb(213,58,29)" fg:x="94551" fg:w="25"/><text x="95.3507%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (25 samples, 0.03%)</title><rect x="95.1007%" y="597" width="0.0251%" height="15" fill="rgb(236,218,9)" fg:x="94551" fg:w="25"/><text x="95.3507%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.03%)</title><rect x="95.1007%" y="581" width="0.0251%" height="15" fill="rgb(248,40,19)" fg:x="94551" fg:w="25"/><text x="95.3507%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.05%)</title><rect x="95.0786%" y="725" width="0.0503%" height="15" fill="rgb(212,17,6)" fg:x="94529" fg:w="50"/><text x="95.3286%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (50 samples, 0.05%)</title><rect x="95.0786%" y="709" width="0.0503%" height="15" fill="rgb(206,212,20)" fg:x="94529" fg:w="50"/><text x="95.3286%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="95.0796%" y="693" width="0.0493%" height="15" fill="rgb(229,80,37)" fg:x="94530" fg:w="49"/><text x="95.3296%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="95.0796%" y="677" width="0.0493%" height="15" fill="rgb(253,8,37)" fg:x="94530" fg:w="49"/><text x="95.3296%" y="687.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_dependencies (52 samples, 0.05%)</title><rect x="95.0786%" y="741" width="0.0523%" height="15" fill="rgb(215,16,43)" fg:x="94529" fg:w="52"/><text x="95.3286%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations (461 samples, 0.46%)</title><rect x="94.6742%" y="789" width="0.4637%" height="15" fill="rgb(236,219,16)" fg:x="94127" fg:w="461"/><text x="94.9242%" y="799.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module (461 samples, 0.46%)</title><rect x="94.6742%" y="773" width="0.4637%" height="15" fill="rgb(251,0,3)" fg:x="94127" fg:w="461"/><text x="94.9242%" y="783.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (461 samples, 0.46%)</title><rect x="94.6742%" y="757" width="0.4637%" height="15" fill="rgb(207,133,37)" fg:x="94127" fg:w="461"/><text x="94.9242%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::FunctionDefinition&gt;&gt; (10 samples, 0.01%)</title><rect x="95.1419%" y="757" width="0.0101%" height="15" fill="rgb(250,143,20)" fg:x="94592" fg:w="10"/><text x="95.3919%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (11 samples, 0.01%)</title><rect x="95.1560%" y="757" width="0.0111%" height="15" fill="rgb(242,19,50)" fg:x="94606" fg:w="11"/><text x="95.4060%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="95.1560%" y="741" width="0.0111%" height="15" fill="rgb(206,124,43)" fg:x="94606" fg:w="11"/><text x="95.4060%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (11 samples, 0.01%)</title><rect x="95.1560%" y="725" width="0.0111%" height="15" fill="rgb(229,4,38)" fg:x="94606" fg:w="11"/><text x="95.4060%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (11 samples, 0.01%)</title><rect x="95.1560%" y="709" width="0.0111%" height="15" fill="rgb(247,220,45)" fg:x="94606" fg:w="11"/><text x="95.4060%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (11 samples, 0.01%)</title><rect x="95.1560%" y="693" width="0.0111%" height="15" fill="rgb(247,195,0)" fg:x="94606" fg:w="11"/><text x="95.4060%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (48 samples, 0.05%)</title><rect x="95.1379%" y="773" width="0.0483%" height="15" fill="rgb(252,12,19)" fg:x="94588" fg:w="48"/><text x="95.3879%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::identifier::Identifier&gt;&gt; (10 samples, 0.01%)</title><rect x="95.1761%" y="757" width="0.0101%" height="15" fill="rgb(222,49,50)" fg:x="94626" fg:w="10"/><text x="95.4261%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="95.1761%" y="741" width="0.0101%" height="15" fill="rgb(209,157,28)" fg:x="94626" fg:w="10"/><text x="95.4261%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::identifier::Identifier]&gt; (10 samples, 0.01%)</title><rect x="95.1761%" y="725" width="0.0101%" height="15" fill="rgb(238,174,24)" fg:x="94626" fg:w="10"/><text x="95.4261%" y="735.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::insert (10 samples, 0.01%)</title><rect x="95.1862%" y="773" width="0.0101%" height="15" fill="rgb(224,17,28)" fg:x="94636" fg:w="10"/><text x="95.4362%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="95.2234%" y="677" width="0.0292%" height="15" fill="rgb(249,7,29)" fg:x="94673" fg:w="29"/><text x="95.4734%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="95.2244%" y="661" width="0.0282%" height="15" fill="rgb(243,178,4)" fg:x="94674" fg:w="28"/><text x="95.4744%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="95.2375%" y="645" width="0.0151%" height="15" fill="rgb(246,138,35)" fg:x="94687" fg:w="15"/><text x="95.4875%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55 samples, 0.06%)</title><rect x="95.2133%" y="741" width="0.0553%" height="15" fill="rgb(251,85,18)" fg:x="94663" fg:w="55"/><text x="95.4633%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.05%)</title><rect x="95.2153%" y="725" width="0.0533%" height="15" fill="rgb(254,55,9)" fg:x="94665" fg:w="53"/><text x="95.4653%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.05%)</title><rect x="95.2153%" y="709" width="0.0533%" height="15" fill="rgb(248,4,50)" fg:x="94665" fg:w="53"/><text x="95.4653%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.05%)</title><rect x="95.2153%" y="693" width="0.0533%" height="15" fill="rgb(215,208,14)" fg:x="94665" fg:w="53"/><text x="95.4653%" y="703.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="95.2687%" y="741" width="0.0101%" height="15" fill="rgb(218,37,18)" fg:x="94718" fg:w="10"/><text x="95.5187%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="95.2687%" y="725" width="0.0101%" height="15" fill="rgb(206,104,13)" fg:x="94718" fg:w="10"/><text x="95.5187%" y="735.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (13 samples, 0.01%)</title><rect x="95.2787%" y="741" width="0.0131%" height="15" fill="rgb(248,94,22)" fg:x="94728" fg:w="13"/><text x="95.5287%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="95.2787%" y="725" width="0.0131%" height="15" fill="rgb(235,42,46)" fg:x="94728" fg:w="13"/><text x="95.5287%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="95.2787%" y="709" width="0.0131%" height="15" fill="rgb(220,228,48)" fg:x="94728" fg:w="13"/><text x="95.5287%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="95.2948%" y="741" width="0.0121%" height="15" fill="rgb(216,58,12)" fg:x="94744" fg:w="12"/><text x="95.5448%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="95.2948%" y="725" width="0.0121%" height="15" fill="rgb(223,97,52)" fg:x="94744" fg:w="12"/><text x="95.5448%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="95.2948%" y="709" width="0.0121%" height="15" fill="rgb(208,159,17)" fg:x="94744" fg:w="12"/><text x="95.5448%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="95.2948%" y="693" width="0.0121%" height="15" fill="rgb(215,172,9)" fg:x="94744" fg:w="12"/><text x="95.5448%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Function::new (109 samples, 0.11%)</title><rect x="95.2133%" y="757" width="0.1096%" height="15" fill="rgb(252,175,30)" fg:x="94663" fg:w="109"/><text x="95.4633%" y="767.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (131 samples, 0.13%)</title><rect x="95.2013%" y="773" width="0.1318%" height="15" fill="rgb(209,159,10)" fg:x="94651" fg:w="131"/><text x="95.4513%" y="783.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_struct_type (10 samples, 0.01%)</title><rect x="95.3230%" y="757" width="0.0101%" height="15" fill="rgb(229,73,51)" fg:x="94772" fg:w="10"/><text x="95.5730%" y="767.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (204 samples, 0.21%)</title><rect x="95.1379%" y="789" width="0.2052%" height="15" fill="rgb(208,212,43)" fg:x="94588" fg:w="204"/><text x="95.3879%" y="799.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (10 samples, 0.01%)</title><rect x="95.3330%" y="773" width="0.0101%" height="15" fill="rgb(254,123,53)" fg:x="94782" fg:w="10"/><text x="95.5830%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="95.3431%" y="693" width="0.0141%" height="15" fill="rgb(254,128,49)" fg:x="94792" fg:w="14"/><text x="95.5931%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="95.3431%" y="709" width="0.0171%" height="15" fill="rgb(246,16,16)" fg:x="94792" fg:w="17"/><text x="95.5931%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (767 samples, 0.77%)</title><rect x="94.6028%" y="805" width="0.7715%" height="15" fill="rgb(209,200,1)" fg:x="94056" fg:w="767"/><text x="94.8528%" y="815.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (31 samples, 0.03%)</title><rect x="95.3431%" y="789" width="0.0312%" height="15" fill="rgb(235,9,3)" fg:x="94792" fg:w="31"/><text x="95.5931%" y="799.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (31 samples, 0.03%)</title><rect x="95.3431%" y="773" width="0.0312%" height="15" fill="rgb(233,121,54)" fg:x="94792" fg:w="31"/><text x="95.5931%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.03%)</title><rect x="95.3431%" y="757" width="0.0312%" height="15" fill="rgb(236,80,25)" fg:x="94792" fg:w="31"/><text x="95.5931%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.03%)</title><rect x="95.3431%" y="741" width="0.0312%" height="15" fill="rgb(220,44,24)" fg:x="94792" fg:w="31"/><text x="95.5931%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.03%)</title><rect x="95.3431%" y="725" width="0.0312%" height="15" fill="rgb(236,225,16)" fg:x="94792" fg:w="31"/><text x="95.5931%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.01%)</title><rect x="95.3602%" y="709" width="0.0141%" height="15" fill="rgb(237,140,0)" fg:x="94809" fg:w="14"/><text x="95.6102%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="95.3602%" y="693" width="0.0141%" height="15" fill="rgb(243,225,53)" fg:x="94809" fg:w="14"/><text x="95.6102%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;[core::mem::maybe_uninit::MaybeUninit&lt;T&gt;],A&gt;::assume_init (23 samples, 0.02%)</title><rect x="95.4266%" y="661" width="0.0231%" height="15" fill="rgb(240,140,30)" fg:x="94875" fg:w="23"/><text x="95.6766%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (19 samples, 0.02%)</title><rect x="95.4306%" y="645" width="0.0191%" height="15" fill="rgb(217,51,16)" fg:x="94879" fg:w="19"/><text x="95.6806%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (16 samples, 0.02%)</title><rect x="95.4336%" y="629" width="0.0161%" height="15" fill="rgb(245,75,50)" fg:x="94882" fg:w="16"/><text x="95.6836%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::into_box (27 samples, 0.03%)</title><rect x="95.4497%" y="661" width="0.0272%" height="15" fill="rgb(208,174,22)" fg:x="94898" fg:w="27"/><text x="95.6997%" y="671.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.03%)</title><rect x="95.5100%" y="565" width="0.0282%" height="15" fill="rgb(219,98,50)" fg:x="94958" fg:w="28"/><text x="95.7600%" y="575.50"></text></g><g><title>_int_malloc (22 samples, 0.02%)</title><rect x="95.5161%" y="549" width="0.0221%" height="15" fill="rgb(243,138,3)" fg:x="94964" fg:w="22"/><text x="95.7661%" y="559.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="95.5090%" y="581" width="0.0302%" height="15" fill="rgb(243,132,26)" fg:x="94957" fg:w="30"/><text x="95.7590%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.07%)</title><rect x="95.4970%" y="613" width="0.0654%" height="15" fill="rgb(250,201,8)" fg:x="94945" fg:w="65"/><text x="95.7470%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.07%)</title><rect x="95.4970%" y="597" width="0.0654%" height="15" fill="rgb(213,91,26)" fg:x="94945" fg:w="65"/><text x="95.7470%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::new (10 samples, 0.01%)</title><rect x="95.5825%" y="597" width="0.0101%" height="15" fill="rgb(229,117,1)" fg:x="95030" fg:w="10"/><text x="95.8325%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (11 samples, 0.01%)</title><rect x="95.6016%" y="581" width="0.0111%" height="15" fill="rgb(229,24,6)" fg:x="95049" fg:w="11"/><text x="95.8516%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (30 samples, 0.03%)</title><rect x="95.5925%" y="597" width="0.0302%" height="15" fill="rgb(206,69,11)" fg:x="95040" fg:w="30"/><text x="95.8425%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (10 samples, 0.01%)</title><rect x="95.6519%" y="581" width="0.0101%" height="15" fill="rgb(234,111,34)" fg:x="95099" fg:w="10"/><text x="95.9019%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::array (98 samples, 0.10%)</title><rect x="95.5664%" y="613" width="0.0986%" height="15" fill="rgb(213,187,51)" fg:x="95014" fg:w="98"/><text x="95.8164%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::repeat (42 samples, 0.04%)</title><rect x="95.6227%" y="597" width="0.0422%" height="15" fill="rgb(207,45,11)" fg:x="95070" fg:w="42"/><text x="95.8727%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (198 samples, 0.20%)</title><rect x="95.4789%" y="661" width="0.1992%" height="15" fill="rgb(225,151,47)" fg:x="94927" fg:w="198"/><text x="95.7289%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (197 samples, 0.20%)</title><rect x="95.4799%" y="645" width="0.1981%" height="15" fill="rgb(211,226,5)" fg:x="94928" fg:w="197"/><text x="95.7299%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (196 samples, 0.20%)</title><rect x="95.4809%" y="629" width="0.1971%" height="15" fill="rgb(214,83,52)" fg:x="94929" fg:w="196"/><text x="95.7309%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (266 samples, 0.27%)</title><rect x="95.4165%" y="677" width="0.2675%" height="15" fill="rgb(229,49,53)" fg:x="94865" fg:w="266"/><text x="95.6665%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw (23 samples, 0.02%)</title><rect x="95.6851%" y="661" width="0.0231%" height="15" fill="rgb(246,8,28)" fg:x="95132" fg:w="23"/><text x="95.9351%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (23 samples, 0.02%)</title><rect x="95.6851%" y="645" width="0.0231%" height="15" fill="rgb(207,28,41)" fg:x="95132" fg:w="23"/><text x="95.9351%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_unique (19 samples, 0.02%)</title><rect x="95.6891%" y="629" width="0.0191%" height="15" fill="rgb(254,22,25)" fg:x="95136" fg:w="19"/><text x="95.9391%" y="639.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (294 samples, 0.30%)</title><rect x="95.4165%" y="725" width="0.2957%" height="15" fill="rgb(209,120,42)" fg:x="94865" fg:w="294"/><text x="95.6665%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (294 samples, 0.30%)</title><rect x="95.4165%" y="709" width="0.2957%" height="15" fill="rgb(216,194,18)" fg:x="94865" fg:w="294"/><text x="95.6665%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (294 samples, 0.30%)</title><rect x="95.4165%" y="693" width="0.2957%" height="15" fill="rgb(213,70,17)" fg:x="94865" fg:w="294"/><text x="95.6665%" y="703.50"></text></g><g><title>alloc::str::from_boxed_utf8_unchecked (28 samples, 0.03%)</title><rect x="95.6841%" y="677" width="0.0282%" height="15" fill="rgb(228,66,19)" fg:x="95131" fg:w="28"/><text x="95.9341%" y="687.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="95.7122%" y="725" width="0.0201%" height="15" fill="rgb(236,221,54)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="735.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="95.7122%" y="709" width="0.0201%" height="15" fill="rgb(207,175,15)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="95.7122%" y="693" width="0.0201%" height="15" fill="rgb(234,76,8)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="95.7122%" y="677" width="0.0201%" height="15" fill="rgb(243,106,0)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.02%)</title><rect x="95.7122%" y="661" width="0.0201%" height="15" fill="rgb(208,48,19)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (20 samples, 0.02%)</title><rect x="95.7122%" y="645" width="0.0201%" height="15" fill="rgb(251,50,29)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="95.7122%" y="629" width="0.0201%" height="15" fill="rgb(222,31,49)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="95.7122%" y="613" width="0.0201%" height="15" fill="rgb(232,33,18)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="95.7122%" y="597" width="0.0201%" height="15" fill="rgb(209,1,44)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="95.7122%" y="581" width="0.0201%" height="15" fill="rgb(211,7,1)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="591.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="95.7122%" y="565" width="0.0201%" height="15" fill="rgb(224,111,27)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="575.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.02%)</title><rect x="95.7122%" y="549" width="0.0201%" height="15" fill="rgb(252,195,39)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="559.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="95.7122%" y="533" width="0.0201%" height="15" fill="rgb(237,198,5)" fg:x="95159" fg:w="20"/><text x="95.9622%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="95.7454%" y="437" width="0.0101%" height="15" fill="rgb(232,148,1)" fg:x="95192" fg:w="10"/><text x="95.9954%" y="447.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (12 samples, 0.01%)</title><rect x="95.7454%" y="485" width="0.0121%" height="15" fill="rgb(249,41,3)" fg:x="95192" fg:w="12"/><text x="95.9954%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="95.7454%" y="469" width="0.0121%" height="15" fill="rgb(215,14,33)" fg:x="95192" fg:w="12"/><text x="95.9954%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.01%)</title><rect x="95.7454%" y="453" width="0.0121%" height="15" fill="rgb(209,146,24)" fg:x="95192" fg:w="12"/><text x="95.9954%" y="463.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new::_{{closure}} (23 samples, 0.02%)</title><rect x="95.7384%" y="533" width="0.0231%" height="15" fill="rgb(219,51,47)" fg:x="95185" fg:w="23"/><text x="95.9884%" y="543.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (20 samples, 0.02%)</title><rect x="95.7414%" y="517" width="0.0201%" height="15" fill="rgb(234,217,40)" fg:x="95188" fg:w="20"/><text x="95.9914%" y="527.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (16 samples, 0.02%)</title><rect x="95.7454%" y="501" width="0.0161%" height="15" fill="rgb(228,34,26)" fg:x="95192" fg:w="16"/><text x="95.9954%" y="511.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 0.01%)</title><rect x="95.7625%" y="469" width="0.0111%" height="15" fill="rgb(224,50,29)" fg:x="95209" fg:w="11"/><text x="96.0125%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="95.7635%" y="453" width="0.0101%" height="15" fill="rgb(205,79,51)" fg:x="95210" fg:w="10"/><text x="96.0135%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.01%)</title><rect x="95.7635%" y="437" width="0.0101%" height="15" fill="rgb(218,136,28)" fg:x="95210" fg:w="10"/><text x="96.0135%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="95.7635%" y="421" width="0.0101%" height="15" fill="rgb(220,150,10)" fg:x="95210" fg:w="10"/><text x="96.0135%" y="431.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new::_{{closure}} (14 samples, 0.01%)</title><rect x="95.7615%" y="517" width="0.0141%" height="15" fill="rgb(242,158,47)" fg:x="95208" fg:w="14"/><text x="96.0115%" y="527.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (14 samples, 0.01%)</title><rect x="95.7615%" y="501" width="0.0141%" height="15" fill="rgb(209,68,0)" fg:x="95208" fg:w="14"/><text x="96.0115%" y="511.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (13 samples, 0.01%)</title><rect x="95.7625%" y="485" width="0.0131%" height="15" fill="rgb(208,13,41)" fg:x="95209" fg:w="13"/><text x="96.0125%" y="495.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (10 samples, 0.01%)</title><rect x="95.7917%" y="405" width="0.0101%" height="15" fill="rgb(226,201,7)" fg:x="95238" fg:w="10"/><text x="96.0417%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (31 samples, 0.03%)</title><rect x="95.7776%" y="469" width="0.0312%" height="15" fill="rgb(236,103,26)" fg:x="95224" fg:w="31"/><text x="96.0276%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (27 samples, 0.03%)</title><rect x="95.7816%" y="453" width="0.0272%" height="15" fill="rgb(243,162,8)" fg:x="95228" fg:w="27"/><text x="96.0316%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.03%)</title><rect x="95.7836%" y="437" width="0.0251%" height="15" fill="rgb(237,225,11)" fg:x="95230" fg:w="25"/><text x="96.0336%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.03%)</title><rect x="95.7836%" y="421" width="0.0251%" height="15" fill="rgb(247,186,32)" fg:x="95230" fg:w="25"/><text x="96.0336%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 0.08%)</title><rect x="95.7323%" y="613" width="0.0774%" height="15" fill="rgb(215,26,28)" fg:x="95179" fg:w="77"/><text x="95.9823%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (76 samples, 0.08%)</title><rect x="95.7333%" y="597" width="0.0764%" height="15" fill="rgb(208,121,6)" fg:x="95180" fg:w="76"/><text x="95.9833%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (74 samples, 0.07%)</title><rect x="95.7354%" y="581" width="0.0744%" height="15" fill="rgb(225,91,3)" fg:x="95182" fg:w="74"/><text x="95.9854%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72 samples, 0.07%)</title><rect x="95.7374%" y="565" width="0.0724%" height="15" fill="rgb(246,119,36)" fg:x="95184" fg:w="72"/><text x="95.9874%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (72 samples, 0.07%)</title><rect x="95.7374%" y="549" width="0.0724%" height="15" fill="rgb(254,173,2)" fg:x="95184" fg:w="72"/><text x="95.9874%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (48 samples, 0.05%)</title><rect x="95.7615%" y="533" width="0.0483%" height="15" fill="rgb(209,87,54)" fg:x="95208" fg:w="48"/><text x="96.0115%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (34 samples, 0.03%)</title><rect x="95.7756%" y="517" width="0.0342%" height="15" fill="rgb(223,216,20)" fg:x="95222" fg:w="34"/><text x="96.0256%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (34 samples, 0.03%)</title><rect x="95.7756%" y="501" width="0.0342%" height="15" fill="rgb(220,31,8)" fg:x="95222" fg:w="34"/><text x="96.0256%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (33 samples, 0.03%)</title><rect x="95.7766%" y="485" width="0.0332%" height="15" fill="rgb(220,185,15)" fg:x="95223" fg:w="33"/><text x="96.0266%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (80 samples, 0.08%)</title><rect x="95.7323%" y="709" width="0.0805%" height="15" fill="rgb(247,190,50)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (80 samples, 0.08%)</title><rect x="95.7323%" y="693" width="0.0805%" height="15" fill="rgb(239,173,47)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (80 samples, 0.08%)</title><rect x="95.7323%" y="677" width="0.0805%" height="15" fill="rgb(218,190,42)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.08%)</title><rect x="95.7323%" y="661" width="0.0805%" height="15" fill="rgb(251,207,16)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.08%)</title><rect x="95.7323%" y="645" width="0.0805%" height="15" fill="rgb(222,199,47)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.08%)</title><rect x="95.7323%" y="629" width="0.0805%" height="15" fill="rgb(245,190,7)" fg:x="95179" fg:w="80"/><text x="95.9823%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (11 samples, 0.01%)</title><rect x="95.8148%" y="581" width="0.0111%" height="15" fill="rgb(239,85,38)" fg:x="95261" fg:w="11"/><text x="96.0648%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.02%)</title><rect x="95.8148%" y="645" width="0.0151%" height="15" fill="rgb(229,69,51)" fg:x="95261" fg:w="15"/><text x="96.0648%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (15 samples, 0.02%)</title><rect x="95.8148%" y="629" width="0.0151%" height="15" fill="rgb(231,104,51)" fg:x="95261" fg:w="15"/><text x="96.0648%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T&gt;::insert (15 samples, 0.02%)</title><rect x="95.8148%" y="613" width="0.0151%" height="15" fill="rgb(235,49,4)" fg:x="95261" fg:w="15"/><text x="96.0648%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.02%)</title><rect x="95.8148%" y="597" width="0.0151%" height="15" fill="rgb(246,166,20)" fg:x="95261" fg:w="15"/><text x="96.0648%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 0.02%)</title><rect x="95.8128%" y="661" width="0.0221%" height="15" fill="rgb(230,119,37)" fg:x="95259" fg:w="22"/><text x="96.0628%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (103 samples, 0.10%)</title><rect x="95.7323%" y="725" width="0.1036%" height="15" fill="rgb(234,77,34)" fg:x="95179" fg:w="103"/><text x="95.9823%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="95.8128%" y="709" width="0.0231%" height="15" fill="rgb(211,222,33)" fg:x="95259" fg:w="23"/><text x="96.0628%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::BTreeSet&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (23 samples, 0.02%)</title><rect x="95.8128%" y="693" width="0.0231%" height="15" fill="rgb(226,45,42)" fg:x="95259" fg:w="23"/><text x="96.0628%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.02%)</title><rect x="95.8128%" y="677" width="0.0231%" height="15" fill="rgb(215,174,28)" fg:x="95259" fg:w="23"/><text x="96.0628%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (11 samples, 0.01%)</title><rect x="95.8440%" y="725" width="0.0111%" height="15" fill="rgb(254,173,49)" fg:x="95290" fg:w="11"/><text x="96.0940%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="95.8651%" y="645" width="0.0171%" height="15" fill="rgb(229,191,6)" fg:x="95311" fg:w="17"/><text x="96.1151%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="95.8681%" y="629" width="0.0141%" height="15" fill="rgb(212,145,22)" fg:x="95314" fg:w="14"/><text x="96.1181%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (15 samples, 0.02%)</title><rect x="95.8832%" y="581" width="0.0151%" height="15" fill="rgb(226,6,51)" fg:x="95329" fg:w="15"/><text x="96.1332%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (14 samples, 0.01%)</title><rect x="95.8842%" y="565" width="0.0141%" height="15" fill="rgb(227,128,8)" fg:x="95330" fg:w="14"/><text x="96.1342%" y="575.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="95.8862%" y="549" width="0.0121%" height="15" fill="rgb(205,24,10)" fg:x="95332" fg:w="12"/><text x="96.1362%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (32 samples, 0.03%)</title><rect x="95.8832%" y="629" width="0.0322%" height="15" fill="rgb(217,147,27)" fg:x="95329" fg:w="32"/><text x="96.1332%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility)&gt; (32 samples, 0.03%)</title><rect x="95.8832%" y="613" width="0.0322%" height="15" fill="rgb(250,82,42)" fg:x="95329" fg:w="32"/><text x="96.1332%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier)&gt; (32 samples, 0.03%)</title><rect x="95.8832%" y="597" width="0.0322%" height="15" fill="rgb(248,93,17)" fg:x="95329" fg:w="32"/><text x="96.1332%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::ModuleId&gt; (17 samples, 0.02%)</title><rect x="95.8983%" y="581" width="0.0171%" height="15" fill="rgb(254,212,40)" fg:x="95344" fg:w="17"/><text x="96.1483%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (17 samples, 0.02%)</title><rect x="95.8983%" y="565" width="0.0171%" height="15" fill="rgb(229,209,2)" fg:x="95344" fg:w="17"/><text x="96.1483%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (17 samples, 0.02%)</title><rect x="95.8983%" y="549" width="0.0171%" height="15" fill="rgb(211,50,43)" fg:x="95344" fg:w="17"/><text x="96.1483%" y="559.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="95.9013%" y="533" width="0.0141%" height="15" fill="rgb(245,196,29)" fg:x="95347" fg:w="14"/><text x="96.1513%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (39 samples, 0.04%)</title><rect x="95.8832%" y="645" width="0.0392%" height="15" fill="rgb(216,132,13)" fg:x="95329" fg:w="39"/><text x="96.1332%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (60 samples, 0.06%)</title><rect x="95.8641%" y="661" width="0.0603%" height="15" fill="rgb(251,108,21)" fg:x="95310" fg:w="60"/><text x="96.1141%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility&gt;&gt; (64 samples, 0.06%)</title><rect x="95.8641%" y="725" width="0.0644%" height="15" fill="rgb(229,174,54)" fg:x="95310" fg:w="64"/><text x="96.1141%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility,std::collections::hash::map::RandomState&gt;&gt; (64 samples, 0.06%)</title><rect x="95.8641%" y="709" width="0.0644%" height="15" fill="rgb(211,175,47)" fg:x="95310" fg:w="64"/><text x="96.1141%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((move_core_types::language_storage::ModuleId,move_core_types::identifier::Identifier),move_binary_format::file_format::Visibility)&gt;&gt; (64 samples, 0.06%)</title><rect x="95.8641%" y="693" width="0.0644%" height="15" fill="rgb(234,5,37)" fg:x="95310" fg:w="64"/><text x="96.1141%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="95.8641%" y="677" width="0.0644%" height="15" fill="rgb(244,150,43)" fg:x="95310" fg:w="64"/><text x="96.1141%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="95.9345%" y="693" width="0.0111%" height="15" fill="rgb(242,172,38)" fg:x="95380" fg:w="11"/><text x="96.1845%" y="703.50"></text></g><g><title>move_binary_format::access::ModuleAccess::function_handle_at (15 samples, 0.02%)</title><rect x="95.9345%" y="725" width="0.0151%" height="15" fill="rgb(205,27,8)" fg:x="95380" fg:w="15"/><text x="96.1845%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.02%)</title><rect x="95.9345%" y="709" width="0.0151%" height="15" fill="rgb(217,57,3)" fg:x="95380" fg:w="15"/><text x="96.1845%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.01%)</title><rect x="95.9586%" y="629" width="0.0101%" height="15" fill="rgb(242,21,38)" fg:x="95404" fg:w="10"/><text x="96.2086%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="95.9566%" y="645" width="0.0131%" height="15" fill="rgb(209,64,43)" fg:x="95402" fg:w="13"/><text x="96.2066%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="95.9566%" y="709" width="0.0191%" height="15" fill="rgb(222,2,46)" fg:x="95402" fg:w="19"/><text x="96.2066%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="95.9566%" y="693" width="0.0191%" height="15" fill="rgb(218,19,44)" fg:x="95402" fg:w="19"/><text x="96.2066%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="95.9566%" y="677" width="0.0191%" height="15" fill="rgb(240,203,42)" fg:x="95402" fg:w="19"/><text x="96.2066%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="95.9566%" y="661" width="0.0191%" height="15" fill="rgb(229,23,45)" fg:x="95402" fg:w="19"/><text x="96.2066%" y="671.50"></text></g><g><title>move_binary_format::access::ModuleAccess::immediate_friends (23 samples, 0.02%)</title><rect x="95.9566%" y="725" width="0.0231%" height="15" fill="rgb(205,228,51)" fg:x="95402" fg:w="23"/><text x="96.2066%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (27 samples, 0.03%)</title><rect x="95.9959%" y="645" width="0.0272%" height="15" fill="rgb(239,36,20)" fg:x="95441" fg:w="27"/><text x="96.2459%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="95.9959%" y="629" width="0.0272%" height="15" fill="rgb(248,172,27)" fg:x="95441" fg:w="27"/><text x="96.2459%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.03%)</title><rect x="95.9969%" y="613" width="0.0262%" height="15" fill="rgb(244,55,32)" fg:x="95442" fg:w="26"/><text x="96.2469%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="96.0069%" y="597" width="0.0161%" height="15" fill="rgb(215,97,16)" fg:x="95452" fg:w="16"/><text x="96.2569%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (33 samples, 0.03%)</title><rect x="95.9908%" y="661" width="0.0332%" height="15" fill="rgb(224,80,29)" fg:x="95436" fg:w="33"/><text x="96.2408%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (34 samples, 0.03%)</title><rect x="95.9908%" y="709" width="0.0342%" height="15" fill="rgb(216,93,47)" fg:x="95436" fg:w="34"/><text x="96.2408%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (34 samples, 0.03%)</title><rect x="95.9908%" y="693" width="0.0342%" height="15" fill="rgb(238,159,10)" fg:x="95436" fg:w="34"/><text x="96.2408%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (34 samples, 0.03%)</title><rect x="95.9908%" y="677" width="0.0342%" height="15" fill="rgb(223,98,29)" fg:x="95436" fg:w="34"/><text x="96.2408%" y="687.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (43 samples, 0.04%)</title><rect x="95.9908%" y="725" width="0.0432%" height="15" fill="rgb(210,176,23)" fg:x="95436" fg:w="43"/><text x="96.2408%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="96.0371%" y="661" width="0.0161%" height="15" fill="rgb(242,162,27)" fg:x="95482" fg:w="16"/><text x="96.2871%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="96.0371%" y="645" width="0.0161%" height="15" fill="rgb(245,109,32)" fg:x="95482" fg:w="16"/><text x="96.2871%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.02%)</title><rect x="96.0371%" y="629" width="0.0161%" height="15" fill="rgb(248,87,8)" fg:x="95482" fg:w="16"/><text x="96.2871%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.01%)</title><rect x="96.0421%" y="613" width="0.0111%" height="15" fill="rgb(250,160,50)" fg:x="95487" fg:w="11"/><text x="96.2921%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="96.0552%" y="597" width="0.0111%" height="15" fill="rgb(246,165,25)" fg:x="95500" fg:w="11"/><text x="96.3052%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="96.0552%" y="581" width="0.0111%" height="15" fill="rgb(249,219,3)" fg:x="95500" fg:w="11"/><text x="96.3052%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="96.0552%" y="565" width="0.0111%" height="15" fill="rgb(226,66,5)" fg:x="95500" fg:w="11"/><text x="96.3052%" y="575.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="96.0532%" y="645" width="0.0211%" height="15" fill="rgb(250,220,43)" fg:x="95498" fg:w="21"/><text x="96.3032%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="96.0532%" y="629" width="0.0211%" height="15" fill="rgb(225,111,31)" fg:x="95498" fg:w="21"/><text x="96.3032%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.02%)</title><rect x="96.0532%" y="613" width="0.0211%" height="15" fill="rgb(248,106,18)" fg:x="95498" fg:w="21"/><text x="96.3032%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="96.0763%" y="565" width="0.0101%" height="15" fill="rgb(220,226,45)" fg:x="95521" fg:w="10"/><text x="96.3263%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="96.0763%" y="549" width="0.0101%" height="15" fill="rgb(208,58,53)" fg:x="95521" fg:w="10"/><text x="96.3263%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="96.0763%" y="533" width="0.0101%" height="15" fill="rgb(209,133,1)" fg:x="95521" fg:w="10"/><text x="96.3263%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.01%)</title><rect x="96.0753%" y="581" width="0.0141%" height="15" fill="rgb(228,216,27)" fg:x="95520" fg:w="14"/><text x="96.3253%" y="591.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="96.0743%" y="629" width="0.0221%" height="15" fill="rgb(238,155,2)" fg:x="95519" fg:w="22"/><text x="96.3243%" y="639.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (22 samples, 0.02%)</title><rect x="96.0743%" y="613" width="0.0221%" height="15" fill="rgb(244,99,37)" fg:x="95519" fg:w="22"/><text x="96.3243%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (21 samples, 0.02%)</title><rect x="96.0753%" y="597" width="0.0211%" height="15" fill="rgb(254,32,3)" fg:x="95520" fg:w="21"/><text x="96.3253%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="96.0964%" y="581" width="0.0131%" height="15" fill="rgb(234,46,50)" fg:x="95541" fg:w="13"/><text x="96.3464%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="96.0964%" y="565" width="0.0131%" height="15" fill="rgb(232,118,51)" fg:x="95541" fg:w="13"/><text x="96.3464%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="96.0964%" y="549" width="0.0131%" height="15" fill="rgb(207,24,32)" fg:x="95541" fg:w="13"/><text x="96.3464%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (76 samples, 0.08%)</title><rect x="96.0371%" y="677" width="0.0764%" height="15" fill="rgb(208,107,43)" fg:x="95482" fg:w="76"/><text x="96.2871%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (60 samples, 0.06%)</title><rect x="96.0532%" y="661" width="0.0603%" height="15" fill="rgb(231,28,9)" fg:x="95498" fg:w="60"/><text x="96.3032%" y="671.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (39 samples, 0.04%)</title><rect x="96.0743%" y="645" width="0.0392%" height="15" fill="rgb(241,204,15)" fg:x="95519" fg:w="39"/><text x="96.3243%" y="655.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="96.0964%" y="629" width="0.0171%" height="15" fill="rgb(214,54,15)" fg:x="95541" fg:w="17"/><text x="96.3464%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="96.0964%" y="613" width="0.0171%" height="15" fill="rgb(230,12,28)" fg:x="95541" fg:w="17"/><text x="96.3464%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.02%)</title><rect x="96.0964%" y="597" width="0.0171%" height="15" fill="rgb(221,171,5)" fg:x="95541" fg:w="17"/><text x="96.3464%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (23 samples, 0.02%)</title><rect x="96.1186%" y="645" width="0.0231%" height="15" fill="rgb(207,72,25)" fg:x="95563" fg:w="23"/><text x="96.3686%" y="655.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (21 samples, 0.02%)</title><rect x="96.1206%" y="629" width="0.0211%" height="15" fill="rgb(249,79,37)" fg:x="95565" fg:w="21"/><text x="96.3706%" y="639.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="96.1266%" y="613" width="0.0151%" height="15" fill="rgb(209,98,49)" fg:x="95571" fg:w="15"/><text x="96.3766%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (121 samples, 0.12%)</title><rect x="96.0371%" y="725" width="0.1217%" height="15" fill="rgb(221,62,13)" fg:x="95482" fg:w="121"/><text x="96.2871%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (121 samples, 0.12%)</title><rect x="96.0371%" y="709" width="0.1217%" height="15" fill="rgb(223,39,6)" fg:x="95482" fg:w="121"/><text x="96.2871%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (121 samples, 0.12%)</title><rect x="96.0371%" y="693" width="0.1217%" height="15" fill="rgb(246,163,20)" fg:x="95482" fg:w="121"/><text x="96.2871%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (45 samples, 0.05%)</title><rect x="96.1135%" y="677" width="0.0453%" height="15" fill="rgb(211,111,29)" fg:x="95558" fg:w="45"/><text x="96.3635%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.05%)</title><rect x="96.1135%" y="661" width="0.0453%" height="15" fill="rgb(243,118,5)" fg:x="95558" fg:w="45"/><text x="96.3635%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.02%)</title><rect x="96.1427%" y="645" width="0.0161%" height="15" fill="rgb(240,144,52)" fg:x="95587" fg:w="16"/><text x="96.3927%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.02%)</title><rect x="96.1427%" y="629" width="0.0161%" height="15" fill="rgb(244,158,36)" fg:x="95587" fg:w="16"/><text x="96.3927%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (15 samples, 0.02%)</title><rect x="96.1437%" y="613" width="0.0151%" height="15" fill="rgb(241,109,37)" fg:x="95588" fg:w="15"/><text x="96.3937%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.02%)</title><rect x="96.1950%" y="613" width="0.0161%" height="15" fill="rgb(213,95,32)" fg:x="95639" fg:w="16"/><text x="96.4450%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.03%)</title><rect x="96.1870%" y="629" width="0.0262%" height="15" fill="rgb(252,193,9)" fg:x="95631" fg:w="26"/><text x="96.4370%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.03%)</title><rect x="96.2634%" y="613" width="0.0272%" height="15" fill="rgb(225,213,21)" fg:x="95707" fg:w="27"/><text x="96.5134%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (121 samples, 0.12%)</title><rect x="96.1769%" y="677" width="0.1217%" height="15" fill="rgb(220,172,46)" fg:x="95621" fg:w="121"/><text x="96.4269%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (119 samples, 0.12%)</title><rect x="96.1789%" y="661" width="0.1197%" height="15" fill="rgb(235,75,41)" fg:x="95623" fg:w="119"/><text x="96.4289%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (118 samples, 0.12%)</title><rect x="96.1799%" y="645" width="0.1187%" height="15" fill="rgb(213,86,9)" fg:x="95624" fg:w="118"/><text x="96.4299%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (85 samples, 0.09%)</title><rect x="96.2131%" y="629" width="0.0855%" height="15" fill="rgb(238,127,51)" fg:x="95657" fg:w="85"/><text x="96.4631%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.02%)</title><rect x="96.2986%" y="677" width="0.0171%" height="15" fill="rgb(215,2,54)" fg:x="95742" fg:w="17"/><text x="96.5486%" y="687.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.01%)</title><rect x="96.3046%" y="661" width="0.0111%" height="15" fill="rgb(245,80,6)" fg:x="95748" fg:w="11"/><text x="96.5546%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.02%)</title><rect x="96.3670%" y="549" width="0.0181%" height="15" fill="rgb(233,106,42)" fg:x="95810" fg:w="18"/><text x="96.6170%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.05%)</title><rect x="96.3439%" y="565" width="0.0463%" height="15" fill="rgb(244,86,38)" fg:x="95787" fg:w="46"/><text x="96.5939%" y="575.50"></text></g><g><title>core::cmp::min (11 samples, 0.01%)</title><rect x="96.3901%" y="565" width="0.0111%" height="15" fill="rgb(242,167,7)" fg:x="95833" fg:w="11"/><text x="96.6401%" y="575.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.01%)</title><rect x="96.3901%" y="549" width="0.0111%" height="15" fill="rgb(218,216,3)" fg:x="95833" fg:w="11"/><text x="96.6401%" y="559.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.01%)</title><rect x="96.3901%" y="533" width="0.0111%" height="15" fill="rgb(206,136,36)" fg:x="95833" fg:w="11"/><text x="96.6401%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (29 samples, 0.03%)</title><rect x="96.4012%" y="565" width="0.0292%" height="15" fill="rgb(206,206,15)" fg:x="95844" fg:w="29"/><text x="96.6512%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (114 samples, 0.11%)</title><rect x="96.3197%" y="613" width="0.1147%" height="15" fill="rgb(207,163,34)" fg:x="95763" fg:w="114"/><text x="96.5697%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (114 samples, 0.11%)</title><rect x="96.3197%" y="597" width="0.1147%" height="15" fill="rgb(240,127,22)" fg:x="95763" fg:w="114"/><text x="96.5697%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (113 samples, 0.11%)</title><rect x="96.3207%" y="581" width="0.1137%" height="15" fill="rgb(227,49,5)" fg:x="95764" fg:w="113"/><text x="96.5707%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.01%)</title><rect x="96.4525%" y="549" width="0.0111%" height="15" fill="rgb(231,8,6)" fg:x="95895" fg:w="11"/><text x="96.7025%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (30 samples, 0.03%)</title><rect x="96.4344%" y="613" width="0.0302%" height="15" fill="rgb(223,21,24)" fg:x="95877" fg:w="30"/><text x="96.6844%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.03%)</title><rect x="96.4344%" y="597" width="0.0302%" height="15" fill="rgb(244,44,52)" fg:x="95877" fg:w="30"/><text x="96.6844%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.03%)</title><rect x="96.4344%" y="581" width="0.0302%" height="15" fill="rgb(207,73,28)" fg:x="95877" fg:w="30"/><text x="96.6844%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.03%)</title><rect x="96.4354%" y="565" width="0.0292%" height="15" fill="rgb(234,215,10)" fg:x="95878" fg:w="29"/><text x="96.6854%" y="575.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (146 samples, 0.15%)</title><rect x="96.3187%" y="661" width="0.1468%" height="15" fill="rgb(236,85,3)" fg:x="95762" fg:w="146"/><text x="96.5687%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (146 samples, 0.15%)</title><rect x="96.3187%" y="645" width="0.1468%" height="15" fill="rgb(236,102,39)" fg:x="95762" fg:w="146"/><text x="96.5687%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (146 samples, 0.15%)</title><rect x="96.3187%" y="629" width="0.1468%" height="15" fill="rgb(243,50,8)" fg:x="95762" fg:w="146"/><text x="96.5687%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.02%)</title><rect x="96.5159%" y="517" width="0.0191%" height="15" fill="rgb(207,111,4)" fg:x="95958" fg:w="19"/><text x="96.7659%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (54 samples, 0.05%)</title><rect x="96.4887%" y="533" width="0.0543%" height="15" fill="rgb(230,52,42)" fg:x="95931" fg:w="54"/><text x="96.7387%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (75 samples, 0.08%)</title><rect x="96.4776%" y="581" width="0.0754%" height="15" fill="rgb(252,178,50)" fg:x="95920" fg:w="75"/><text x="96.7276%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (75 samples, 0.08%)</title><rect x="96.4776%" y="565" width="0.0754%" height="15" fill="rgb(234,46,35)" fg:x="95920" fg:w="75"/><text x="96.7276%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.08%)</title><rect x="96.4776%" y="549" width="0.0754%" height="15" fill="rgb(228,69,37)" fg:x="95920" fg:w="75"/><text x="96.7276%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (82 samples, 0.08%)</title><rect x="96.4746%" y="597" width="0.0825%" height="15" fill="rgb(221,21,11)" fg:x="95917" fg:w="82"/><text x="96.7246%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.02%)</title><rect x="96.5772%" y="517" width="0.0241%" height="15" fill="rgb(223,56,9)" fg:x="96019" fg:w="24"/><text x="96.8272%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.01%)</title><rect x="96.5913%" y="501" width="0.0101%" height="15" fill="rgb(234,30,19)" fg:x="96033" fg:w="10"/><text x="96.8413%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.05%)</title><rect x="96.5611%" y="565" width="0.0483%" height="15" fill="rgb(211,64,54)" fg:x="96003" fg:w="48"/><text x="96.8111%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.05%)</title><rect x="96.5611%" y="549" width="0.0483%" height="15" fill="rgb(250,189,5)" fg:x="96003" fg:w="48"/><text x="96.8111%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.05%)</title><rect x="96.5621%" y="533" width="0.0473%" height="15" fill="rgb(214,180,13)" fg:x="96004" fg:w="47"/><text x="96.8121%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (54 samples, 0.05%)</title><rect x="96.5571%" y="597" width="0.0543%" height="15" fill="rgb(238,40,40)" fg:x="95999" fg:w="54"/><text x="96.8071%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (53 samples, 0.05%)</title><rect x="96.5581%" y="581" width="0.0533%" height="15" fill="rgb(214,101,38)" fg:x="96000" fg:w="53"/><text x="96.8081%" y="591.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (145 samples, 0.15%)</title><rect x="96.4676%" y="645" width="0.1458%" height="15" fill="rgb(242,65,53)" fg:x="95910" fg:w="145"/><text x="96.7176%" y="655.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (145 samples, 0.15%)</title><rect x="96.4676%" y="629" width="0.1458%" height="15" fill="rgb(230,22,45)" fg:x="95910" fg:w="145"/><text x="96.7176%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (140 samples, 0.14%)</title><rect x="96.4726%" y="613" width="0.1408%" height="15" fill="rgb(223,77,1)" fg:x="95915" fg:w="140"/><text x="96.7226%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (19 samples, 0.02%)</title><rect x="96.6315%" y="549" width="0.0191%" height="15" fill="rgb(227,33,37)" fg:x="96073" fg:w="19"/><text x="96.8815%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="96.6164%" y="597" width="0.0362%" height="15" fill="rgb(224,148,39)" fg:x="96058" fg:w="36"/><text x="96.8664%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="96.6164%" y="581" width="0.0362%" height="15" fill="rgb(232,212,39)" fg:x="96058" fg:w="36"/><text x="96.8664%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="96.6164%" y="565" width="0.0362%" height="15" fill="rgb(251,172,7)" fg:x="96058" fg:w="36"/><text x="96.8664%" y="575.50"></text></g><g><title>core::cmp::min (10 samples, 0.01%)</title><rect x="96.6677%" y="533" width="0.0101%" height="15" fill="rgb(219,39,9)" fg:x="96109" fg:w="10"/><text x="96.9177%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.01%)</title><rect x="96.6778%" y="533" width="0.0101%" height="15" fill="rgb(228,118,14)" fg:x="96119" fg:w="10"/><text x="96.9278%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (513 samples, 0.52%)</title><rect x="96.1729%" y="693" width="0.5160%" height="15" fill="rgb(207,140,10)" fg:x="95617" fg:w="513"/><text x="96.4229%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (371 samples, 0.37%)</title><rect x="96.3157%" y="677" width="0.3732%" height="15" fill="rgb(227,111,53)" fg:x="95759" fg:w="371"/><text x="96.5657%" y="687.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (222 samples, 0.22%)</title><rect x="96.4656%" y="661" width="0.2233%" height="15" fill="rgb(216,165,16)" fg:x="95908" fg:w="222"/><text x="96.7156%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (75 samples, 0.08%)</title><rect x="96.6134%" y="645" width="0.0754%" height="15" fill="rgb(226,111,18)" fg:x="96055" fg:w="75"/><text x="96.8634%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (75 samples, 0.08%)</title><rect x="96.6134%" y="629" width="0.0754%" height="15" fill="rgb(251,27,17)" fg:x="96055" fg:w="75"/><text x="96.8634%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (74 samples, 0.07%)</title><rect x="96.6144%" y="613" width="0.0744%" height="15" fill="rgb(254,69,9)" fg:x="96056" fg:w="74"/><text x="96.8644%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (36 samples, 0.04%)</title><rect x="96.6527%" y="597" width="0.0362%" height="15" fill="rgb(234,140,37)" fg:x="96094" fg:w="36"/><text x="96.9027%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="96.6527%" y="581" width="0.0362%" height="15" fill="rgb(220,93,8)" fg:x="96094" fg:w="36"/><text x="96.9027%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="96.6527%" y="565" width="0.0362%" height="15" fill="rgb(236,113,3)" fg:x="96094" fg:w="36"/><text x="96.9027%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 0.03%)</title><rect x="96.6547%" y="549" width="0.0342%" height="15" fill="rgb(234,108,23)" fg:x="96096" fg:w="34"/><text x="96.9047%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="96.7291%" y="629" width="0.0131%" height="15" fill="rgb(205,114,34)" fg:x="96170" fg:w="13"/><text x="96.9791%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (14 samples, 0.01%)</title><rect x="96.7573%" y="597" width="0.0141%" height="15" fill="rgb(236,200,45)" fg:x="96198" fg:w="14"/><text x="97.0073%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.01%)</title><rect x="96.7713%" y="597" width="0.0141%" height="15" fill="rgb(227,194,29)" fg:x="96212" fg:w="14"/><text x="97.0213%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.09%)</title><rect x="96.7100%" y="645" width="0.0905%" height="15" fill="rgb(250,76,42)" fg:x="96151" fg:w="90"/><text x="96.9600%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (52 samples, 0.05%)</title><rect x="96.7482%" y="629" width="0.0523%" height="15" fill="rgb(208,128,8)" fg:x="96189" fg:w="52"/><text x="96.9982%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (50 samples, 0.05%)</title><rect x="96.7502%" y="613" width="0.0503%" height="15" fill="rgb(229,209,35)" fg:x="96191" fg:w="50"/><text x="97.0002%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (15 samples, 0.02%)</title><rect x="96.7854%" y="597" width="0.0151%" height="15" fill="rgb(215,39,53)" fg:x="96226" fg:w="15"/><text x="97.0354%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.01%)</title><rect x="96.7884%" y="581" width="0.0121%" height="15" fill="rgb(219,123,41)" fg:x="96229" fg:w="12"/><text x="97.0384%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.10%)</title><rect x="96.7060%" y="661" width="0.0966%" height="15" fill="rgb(212,158,18)" fg:x="96147" fg:w="96"/><text x="96.9560%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="96.8045%" y="613" width="0.0111%" height="15" fill="rgb(234,196,53)" fg:x="96245" fg:w="11"/><text x="97.0545%" y="623.50"></text></g><g><title>core::array::_&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (10 samples, 0.01%)</title><rect x="96.8055%" y="597" width="0.0101%" height="15" fill="rgb(210,139,12)" fg:x="96246" fg:w="10"/><text x="97.0555%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.01%)</title><rect x="96.8045%" y="661" width="0.0141%" height="15" fill="rgb(220,116,54)" fg:x="96245" fg:w="14"/><text x="97.0545%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (14 samples, 0.01%)</title><rect x="96.8045%" y="645" width="0.0141%" height="15" fill="rgb(247,103,28)" fg:x="96245" fg:w="14"/><text x="97.0545%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="96.8045%" y="629" width="0.0141%" height="15" fill="rgb(253,156,45)" fg:x="96245" fg:w="14"/><text x="97.0545%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.01%)</title><rect x="96.8548%" y="613" width="0.0131%" height="15" fill="rgb(237,157,52)" fg:x="96295" fg:w="13"/><text x="97.1048%" y="623.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.01%)</title><rect x="96.8568%" y="597" width="0.0111%" height="15" fill="rgb(253,112,16)" fg:x="96297" fg:w="11"/><text x="97.1068%" y="607.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.01%)</title><rect x="96.8578%" y="581" width="0.0101%" height="15" fill="rgb(234,70,18)" fg:x="96298" fg:w="10"/><text x="97.1078%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.02%)</title><rect x="96.8679%" y="613" width="0.0161%" height="15" fill="rgb(247,138,19)" fg:x="96308" fg:w="16"/><text x="97.1179%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (15 samples, 0.02%)</title><rect x="96.8910%" y="597" width="0.0151%" height="15" fill="rgb(207,171,1)" fg:x="96331" fg:w="15"/><text x="97.1410%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.01%)</title><rect x="96.9061%" y="597" width="0.0141%" height="15" fill="rgb(239,213,3)" fg:x="96346" fg:w="14"/><text x="97.1561%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (120 samples, 0.12%)</title><rect x="96.8196%" y="661" width="0.1207%" height="15" fill="rgb(226,112,4)" fg:x="96260" fg:w="120"/><text x="97.0696%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (119 samples, 0.12%)</title><rect x="96.8206%" y="645" width="0.1197%" height="15" fill="rgb(252,170,12)" fg:x="96261" fg:w="119"/><text x="97.0706%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (110 samples, 0.11%)</title><rect x="96.8297%" y="629" width="0.1106%" height="15" fill="rgb(241,106,13)" fg:x="96270" fg:w="110"/><text x="97.0797%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (56 samples, 0.06%)</title><rect x="96.8840%" y="613" width="0.0563%" height="15" fill="rgb(225,73,23)" fg:x="96324" fg:w="56"/><text x="97.1340%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (20 samples, 0.02%)</title><rect x="96.9202%" y="597" width="0.0201%" height="15" fill="rgb(251,227,29)" fg:x="96360" fg:w="20"/><text x="97.1702%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (16 samples, 0.02%)</title><rect x="96.9242%" y="581" width="0.0161%" height="15" fill="rgb(237,144,13)" fg:x="96364" fg:w="16"/><text x="97.1742%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (251 samples, 0.25%)</title><rect x="96.6889%" y="693" width="0.2525%" height="15" fill="rgb(232,106,46)" fg:x="96130" fg:w="251"/><text x="96.9389%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (248 samples, 0.25%)</title><rect x="96.6919%" y="677" width="0.2494%" height="15" fill="rgb(245,154,53)" fg:x="96133" fg:w="248"/><text x="96.9419%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (17 samples, 0.02%)</title><rect x="96.9524%" y="677" width="0.0171%" height="15" fill="rgb(212,119,47)" fg:x="96392" fg:w="17"/><text x="97.2024%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.01%)</title><rect x="96.9795%" y="645" width="0.0121%" height="15" fill="rgb(253,135,25)" fg:x="96419" fg:w="12"/><text x="97.2295%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (25 samples, 0.03%)</title><rect x="96.9705%" y="661" width="0.0251%" height="15" fill="rgb(253,208,39)" fg:x="96410" fg:w="25"/><text x="97.2205%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (31 samples, 0.03%)</title><rect x="96.9695%" y="677" width="0.0312%" height="15" fill="rgb(226,64,12)" fg:x="96409" fg:w="31"/><text x="97.2195%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.02%)</title><rect x="97.0741%" y="581" width="0.0151%" height="15" fill="rgb(214,162,37)" fg:x="96513" fg:w="15"/><text x="97.3241%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (23 samples, 0.02%)</title><rect x="97.0670%" y="597" width="0.0231%" height="15" fill="rgb(250,104,5)" fg:x="96506" fg:w="23"/><text x="97.3170%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.06%)</title><rect x="97.0419%" y="629" width="0.0624%" height="15" fill="rgb(220,202,50)" fg:x="96481" fg:w="62"/><text x="97.2919%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="97.0550%" y="613" width="0.0493%" height="15" fill="rgb(248,67,38)" fg:x="96494" fg:w="49"/><text x="97.3050%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="97.1083%" y="629" width="0.0121%" height="15" fill="rgb(242,94,35)" fg:x="96547" fg:w="12"/><text x="97.3583%" y="639.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="97.1083%" y="613" width="0.0121%" height="15" fill="rgb(209,78,37)" fg:x="96547" fg:w="12"/><text x="97.3583%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (12 samples, 0.01%)</title><rect x="97.1083%" y="597" width="0.0121%" height="15" fill="rgb(230,126,47)" fg:x="96547" fg:w="12"/><text x="97.3583%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (12 samples, 0.01%)</title><rect x="97.1083%" y="581" width="0.0121%" height="15" fill="rgb(222,110,35)" fg:x="96547" fg:w="12"/><text x="97.3583%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.02%)</title><rect x="97.1586%" y="533" width="0.0151%" height="15" fill="rgb(233,154,20)" fg:x="96597" fg:w="15"/><text x="97.4086%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.04%)</title><rect x="97.1385%" y="549" width="0.0372%" height="15" fill="rgb(223,53,50)" fg:x="96577" fg:w="37"/><text x="97.3885%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (46 samples, 0.05%)</title><rect x="97.2240%" y="533" width="0.0463%" height="15" fill="rgb(251,27,26)" fg:x="96662" fg:w="46"/><text x="97.4740%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (104 samples, 0.10%)</title><rect x="97.1757%" y="549" width="0.1046%" height="15" fill="rgb(223,189,16)" fg:x="96614" fg:w="104"/><text x="97.4257%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.01%)</title><rect x="97.2702%" y="533" width="0.0101%" height="15" fill="rgb(207,5,54)" fg:x="96708" fg:w="10"/><text x="97.5202%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (153 samples, 0.15%)</title><rect x="97.1274%" y="597" width="0.1539%" height="15" fill="rgb(254,124,50)" fg:x="96566" fg:w="153"/><text x="97.3774%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (153 samples, 0.15%)</title><rect x="97.1274%" y="581" width="0.1539%" height="15" fill="rgb(253,193,24)" fg:x="96566" fg:w="153"/><text x="97.3774%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (151 samples, 0.15%)</title><rect x="97.1294%" y="565" width="0.1519%" height="15" fill="rgb(235,170,24)" fg:x="96568" fg:w="151"/><text x="97.3794%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (16 samples, 0.02%)</title><rect x="97.2974%" y="565" width="0.0161%" height="15" fill="rgb(222,212,52)" fg:x="96735" fg:w="16"/><text x="97.5474%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (26 samples, 0.03%)</title><rect x="97.2883%" y="581" width="0.0262%" height="15" fill="rgb(223,17,45)" fg:x="96726" fg:w="26"/><text x="97.5383%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (36 samples, 0.04%)</title><rect x="97.2813%" y="597" width="0.0362%" height="15" fill="rgb(227,103,26)" fg:x="96719" fg:w="36"/><text x="97.5313%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.03%)</title><rect x="97.3819%" y="469" width="0.0251%" height="15" fill="rgb(251,151,25)" fg:x="96819" fg:w="25"/><text x="97.6319%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (56 samples, 0.06%)</title><rect x="97.3547%" y="485" width="0.0563%" height="15" fill="rgb(248,144,29)" fg:x="96792" fg:w="56"/><text x="97.6047%" y="495.50"></text></g><g><title>core::cmp::min (17 samples, 0.02%)</title><rect x="97.4110%" y="485" width="0.0171%" height="15" fill="rgb(245,97,16)" fg:x="96848" fg:w="17"/><text x="97.6610%" y="495.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.02%)</title><rect x="97.4110%" y="469" width="0.0171%" height="15" fill="rgb(220,200,29)" fg:x="96848" fg:w="17"/><text x="97.6610%" y="479.50"></text></g><g><title>core::cmp::min_by (17 samples, 0.02%)</title><rect x="97.4110%" y="453" width="0.0171%" height="15" fill="rgb(206,38,29)" fg:x="96848" fg:w="17"/><text x="97.6610%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="97.4593%" y="469" width="0.0101%" height="15" fill="rgb(245,19,52)" fg:x="96896" fg:w="10"/><text x="97.7093%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (55 samples, 0.06%)</title><rect x="97.4281%" y="485" width="0.0553%" height="15" fill="rgb(205,67,43)" fg:x="96865" fg:w="55"/><text x="97.6781%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (173 samples, 0.17%)</title><rect x="97.3195%" y="533" width="0.1740%" height="15" fill="rgb(217,128,23)" fg:x="96757" fg:w="173"/><text x="97.5695%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (172 samples, 0.17%)</title><rect x="97.3205%" y="517" width="0.1730%" height="15" fill="rgb(210,109,28)" fg:x="96758" fg:w="172"/><text x="97.5705%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (171 samples, 0.17%)</title><rect x="97.3215%" y="501" width="0.1720%" height="15" fill="rgb(233,181,7)" fg:x="96759" fg:w="171"/><text x="97.5715%" y="511.50"></text></g><g><title>core::cmp::min (12 samples, 0.01%)</title><rect x="97.5126%" y="469" width="0.0121%" height="15" fill="rgb(244,11,22)" fg:x="96949" fg:w="12"/><text x="97.7626%" y="479.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.01%)</title><rect x="97.5126%" y="453" width="0.0121%" height="15" fill="rgb(205,124,54)" fg:x="96949" fg:w="12"/><text x="97.7626%" y="463.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.01%)</title><rect x="97.5136%" y="437" width="0.0111%" height="15" fill="rgb(218,21,27)" fg:x="96950" fg:w="11"/><text x="97.7636%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.02%)</title><rect x="97.5247%" y="469" width="0.0161%" height="15" fill="rgb(224,153,33)" fg:x="96961" fg:w="16"/><text x="97.7747%" y="479.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (222 samples, 0.22%)</title><rect x="97.3195%" y="581" width="0.2233%" height="15" fill="rgb(240,219,28)" fg:x="96757" fg:w="222"/><text x="97.5695%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (222 samples, 0.22%)</title><rect x="97.3195%" y="565" width="0.2233%" height="15" fill="rgb(214,80,29)" fg:x="96757" fg:w="222"/><text x="97.5695%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (222 samples, 0.22%)</title><rect x="97.3195%" y="549" width="0.2233%" height="15" fill="rgb(247,148,44)" fg:x="96757" fg:w="222"/><text x="97.5695%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (49 samples, 0.05%)</title><rect x="97.4935%" y="533" width="0.0493%" height="15" fill="rgb(243,110,30)" fg:x="96930" fg:w="49"/><text x="97.7435%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49 samples, 0.05%)</title><rect x="97.4935%" y="517" width="0.0493%" height="15" fill="rgb(243,173,41)" fg:x="96930" fg:w="49"/><text x="97.7435%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.05%)</title><rect x="97.4945%" y="501" width="0.0483%" height="15" fill="rgb(225,160,47)" fg:x="96931" fg:w="48"/><text x="97.7445%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (47 samples, 0.05%)</title><rect x="97.4955%" y="485" width="0.0473%" height="15" fill="rgb(215,44,21)" fg:x="96932" fg:w="47"/><text x="97.7455%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (34 samples, 0.03%)</title><rect x="97.6122%" y="437" width="0.0342%" height="15" fill="rgb(248,90,3)" fg:x="97048" fg:w="34"/><text x="97.8622%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (76 samples, 0.08%)</title><rect x="97.5750%" y="453" width="0.0764%" height="15" fill="rgb(220,196,49)" fg:x="97011" fg:w="76"/><text x="97.8250%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (107 samples, 0.11%)</title><rect x="97.5569%" y="501" width="0.1076%" height="15" fill="rgb(217,138,14)" fg:x="96993" fg:w="107"/><text x="97.8069%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (107 samples, 0.11%)</title><rect x="97.5569%" y="485" width="0.1076%" height="15" fill="rgb(219,111,20)" fg:x="96993" fg:w="107"/><text x="97.8069%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (107 samples, 0.11%)</title><rect x="97.5569%" y="469" width="0.1076%" height="15" fill="rgb(218,114,4)" fg:x="96993" fg:w="107"/><text x="97.8069%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (113 samples, 0.11%)</title><rect x="97.5539%" y="517" width="0.1137%" height="15" fill="rgb(238,133,3)" fg:x="96990" fg:w="113"/><text x="97.8039%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.01%)</title><rect x="97.7057%" y="421" width="0.0131%" height="15" fill="rgb(224,95,0)" fg:x="97141" fg:w="13"/><text x="97.9557%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (29 samples, 0.03%)</title><rect x="97.6927%" y="437" width="0.0292%" height="15" fill="rgb(220,169,35)" fg:x="97128" fg:w="29"/><text x="97.9427%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 0.06%)</title><rect x="97.6705%" y="485" width="0.0644%" height="15" fill="rgb(242,116,47)" fg:x="97106" fg:w="64"/><text x="97.9205%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (63 samples, 0.06%)</title><rect x="97.6715%" y="469" width="0.0634%" height="15" fill="rgb(251,42,20)" fg:x="97107" fg:w="63"/><text x="97.9215%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.06%)</title><rect x="97.6725%" y="453" width="0.0624%" height="15" fill="rgb(234,7,34)" fg:x="97108" fg:w="62"/><text x="97.9225%" y="463.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (190 samples, 0.19%)</title><rect x="97.5448%" y="565" width="0.1911%" height="15" fill="rgb(243,208,13)" fg:x="96981" fg:w="190"/><text x="97.7948%" y="575.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (189 samples, 0.19%)</title><rect x="97.5458%" y="549" width="0.1901%" height="15" fill="rgb(227,33,28)" fg:x="96982" fg:w="189"/><text x="97.7958%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (183 samples, 0.18%)</title><rect x="97.5518%" y="533" width="0.1841%" height="15" fill="rgb(250,47,37)" fg:x="96988" fg:w="183"/><text x="97.8018%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (68 samples, 0.07%)</title><rect x="97.6675%" y="517" width="0.0684%" height="15" fill="rgb(235,111,52)" fg:x="97103" fg:w="68"/><text x="97.9175%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (68 samples, 0.07%)</title><rect x="97.6675%" y="501" width="0.0684%" height="15" fill="rgb(223,64,28)" fg:x="97103" fg:w="68"/><text x="97.9175%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.01%)</title><rect x="97.7681%" y="453" width="0.0111%" height="15" fill="rgb(236,67,22)" fg:x="97203" fg:w="11"/><text x="98.0181%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.03%)</title><rect x="97.7550%" y="469" width="0.0262%" height="15" fill="rgb(243,79,24)" fg:x="97190" fg:w="26"/><text x="98.0050%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (33 samples, 0.03%)</title><rect x="97.7812%" y="469" width="0.0332%" height="15" fill="rgb(241,225,22)" fg:x="97216" fg:w="33"/><text x="98.0312%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (80 samples, 0.08%)</title><rect x="97.7399%" y="517" width="0.0805%" height="15" fill="rgb(228,214,26)" fg:x="97175" fg:w="80"/><text x="97.9899%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (80 samples, 0.08%)</title><rect x="97.7399%" y="501" width="0.0805%" height="15" fill="rgb(219,84,52)" fg:x="97175" fg:w="80"/><text x="97.9899%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (80 samples, 0.08%)</title><rect x="97.7399%" y="485" width="0.0805%" height="15" fill="rgb(220,12,22)" fg:x="97175" fg:w="80"/><text x="97.9899%" y="495.50"></text></g><g><title>core::cmp::min (10 samples, 0.01%)</title><rect x="97.8455%" y="453" width="0.0101%" height="15" fill="rgb(219,9,49)" fg:x="97280" fg:w="10"/><text x="98.0955%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (57 samples, 0.06%)</title><rect x="97.8204%" y="517" width="0.0573%" height="15" fill="rgb(237,40,43)" fg:x="97255" fg:w="57"/><text x="98.0704%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (56 samples, 0.06%)</title><rect x="97.8214%" y="501" width="0.0563%" height="15" fill="rgb(212,189,32)" fg:x="97256" fg:w="56"/><text x="98.0714%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (54 samples, 0.05%)</title><rect x="97.8234%" y="485" width="0.0543%" height="15" fill="rgb(247,48,9)" fg:x="97258" fg:w="54"/><text x="98.0734%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="97.8244%" y="469" width="0.0533%" height="15" fill="rgb(247,112,3)" fg:x="97259" fg:w="53"/><text x="98.0744%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (22 samples, 0.02%)</title><rect x="97.8556%" y="453" width="0.0221%" height="15" fill="rgb(243,110,18)" fg:x="97290" fg:w="22"/><text x="98.1056%" y="463.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (754 samples, 0.76%)</title><rect x="97.1204%" y="629" width="0.7584%" height="15" fill="rgb(233,223,44)" fg:x="96559" fg:w="754"/><text x="97.3704%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (751 samples, 0.76%)</title><rect x="97.1234%" y="613" width="0.7554%" height="15" fill="rgb(245,160,20)" fg:x="96562" fg:w="751"/><text x="97.3734%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (558 samples, 0.56%)</title><rect x="97.3175%" y="597" width="0.5612%" height="15" fill="rgb(225,37,1)" fg:x="96755" fg:w="558"/><text x="97.5675%" y="607.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (334 samples, 0.34%)</title><rect x="97.5428%" y="581" width="0.3359%" height="15" fill="rgb(253,227,39)" fg:x="96979" fg:w="334"/><text x="97.7928%" y="591.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (142 samples, 0.14%)</title><rect x="97.7359%" y="565" width="0.1428%" height="15" fill="rgb(240,179,26)" fg:x="97171" fg:w="142"/><text x="97.9859%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (142 samples, 0.14%)</title><rect x="97.7359%" y="549" width="0.1428%" height="15" fill="rgb(237,212,23)" fg:x="97171" fg:w="142"/><text x="97.9859%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (141 samples, 0.14%)</title><rect x="97.7369%" y="533" width="0.1418%" height="15" fill="rgb(221,38,11)" fg:x="97172" fg:w="141"/><text x="97.9869%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.01%)</title><rect x="97.8828%" y="597" width="0.0131%" height="15" fill="rgb(215,85,6)" fg:x="97317" fg:w="13"/><text x="98.1328%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (19 samples, 0.02%)</title><rect x="97.8787%" y="629" width="0.0191%" height="15" fill="rgb(239,64,14)" fg:x="97313" fg:w="19"/><text x="98.1287%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (18 samples, 0.02%)</title><rect x="97.8797%" y="613" width="0.0181%" height="15" fill="rgb(215,150,32)" fg:x="97314" fg:w="18"/><text x="98.1297%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.02%)</title><rect x="97.9099%" y="597" width="0.0151%" height="15" fill="rgb(238,15,13)" fg:x="97344" fg:w="15"/><text x="98.1599%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (28 samples, 0.03%)</title><rect x="97.8978%" y="629" width="0.0282%" height="15" fill="rgb(251,87,8)" fg:x="97332" fg:w="28"/><text x="98.1478%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (21 samples, 0.02%)</title><rect x="97.9049%" y="613" width="0.0211%" height="15" fill="rgb(206,86,1)" fg:x="97339" fg:w="21"/><text x="98.1549%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (21 samples, 0.02%)</title><rect x="97.9351%" y="613" width="0.0211%" height="15" fill="rgb(208,151,45)" fg:x="97369" fg:w="21"/><text x="98.1851%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (27 samples, 0.03%)</title><rect x="97.9331%" y="629" width="0.0272%" height="15" fill="rgb(231,181,24)" fg:x="97367" fg:w="27"/><text x="98.1831%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="97.9934%" y="581" width="0.0111%" height="15" fill="rgb(240,106,29)" fg:x="97427" fg:w="11"/><text x="98.2434%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (21 samples, 0.02%)</title><rect x="97.9864%" y="597" width="0.0211%" height="15" fill="rgb(227,166,11)" fg:x="97420" fg:w="21"/><text x="98.2364%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (14 samples, 0.01%)</title><rect x="98.0105%" y="597" width="0.0141%" height="15" fill="rgb(254,14,34)" fg:x="97444" fg:w="14"/><text x="98.2605%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (17 samples, 0.02%)</title><rect x="98.0306%" y="597" width="0.0171%" height="15" fill="rgb(223,222,6)" fg:x="97464" fg:w="17"/><text x="98.2806%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.01%)</title><rect x="98.0367%" y="581" width="0.0111%" height="15" fill="rgb(245,69,24)" fg:x="97470" fg:w="11"/><text x="98.2867%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (103 samples, 0.10%)</title><rect x="97.9652%" y="613" width="0.1036%" height="15" fill="rgb(213,193,7)" fg:x="97399" fg:w="103"/><text x="98.2152%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.02%)</title><rect x="98.0477%" y="597" width="0.0211%" height="15" fill="rgb(237,92,51)" fg:x="97481" fg:w="21"/><text x="98.2977%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.02%)</title><rect x="98.0527%" y="581" width="0.0161%" height="15" fill="rgb(225,194,6)" fg:x="97486" fg:w="16"/><text x="98.3027%" y="591.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (10 samples, 0.01%)</title><rect x="98.0588%" y="565" width="0.0101%" height="15" fill="rgb(205,159,49)" fg:x="97492" fg:w="10"/><text x="98.3088%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (25 samples, 0.03%)</title><rect x="98.0719%" y="597" width="0.0251%" height="15" fill="rgb(219,69,2)" fg:x="97505" fg:w="25"/><text x="98.3219%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (14 samples, 0.01%)</title><rect x="98.0829%" y="581" width="0.0141%" height="15" fill="rgb(215,107,24)" fg:x="97516" fg:w="14"/><text x="98.3329%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (152 samples, 0.15%)</title><rect x="97.9602%" y="629" width="0.1529%" height="15" fill="rgb(249,208,29)" fg:x="97394" fg:w="152"/><text x="98.2102%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (44 samples, 0.04%)</title><rect x="98.0688%" y="613" width="0.0443%" height="15" fill="rgb(213,147,10)" fg:x="97502" fg:w="44"/><text x="98.3188%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (16 samples, 0.02%)</title><rect x="98.0970%" y="597" width="0.0161%" height="15" fill="rgb(254,140,42)" fg:x="97530" fg:w="16"/><text x="98.3470%" y="607.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.01%)</title><rect x="98.1010%" y="581" width="0.0121%" height="15" fill="rgb(249,9,15)" fg:x="97534" fg:w="12"/><text x="98.3510%" y="591.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.01%)</title><rect x="98.1020%" y="565" width="0.0111%" height="15" fill="rgb(210,19,33)" fg:x="97535" fg:w="11"/><text x="98.3520%" y="575.50"></text></g><g><title>malloc_consolidate (10 samples, 0.01%)</title><rect x="98.1322%" y="485" width="0.0101%" height="15" fill="rgb(241,121,22)" fg:x="97565" fg:w="10"/><text x="98.3822%" y="495.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="98.1252%" y="533" width="0.0181%" height="15" fill="rgb(244,69,52)" fg:x="97558" fg:w="18"/><text x="98.3752%" y="543.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="98.1252%" y="517" width="0.0181%" height="15" fill="rgb(244,191,54)" fg:x="97558" fg:w="18"/><text x="98.3752%" y="527.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="98.1302%" y="501" width="0.0131%" height="15" fill="rgb(250,3,53)" fg:x="97563" fg:w="13"/><text x="98.3802%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="98.1252%" y="565" width="0.0191%" height="15" fill="rgb(205,77,3)" fg:x="97558" fg:w="19"/><text x="98.3752%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="98.1252%" y="549" width="0.0191%" height="15" fill="rgb(207,155,3)" fg:x="97558" fg:w="19"/><text x="98.3752%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (30 samples, 0.03%)</title><rect x="98.1171%" y="597" width="0.0302%" height="15" fill="rgb(224,79,2)" fg:x="97550" fg:w="30"/><text x="98.3671%" y="607.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (23 samples, 0.02%)</title><rect x="98.1242%" y="581" width="0.0231%" height="15" fill="rgb(243,172,5)" fg:x="97557" fg:w="23"/><text x="98.3742%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (38 samples, 0.04%)</title><rect x="98.1131%" y="629" width="0.0382%" height="15" fill="rgb(217,23,43)" fg:x="97546" fg:w="38"/><text x="98.3631%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (37 samples, 0.04%)</title><rect x="98.1141%" y="613" width="0.0372%" height="15" fill="rgb(223,109,20)" fg:x="97547" fg:w="37"/><text x="98.3641%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,147 samples, 1.15%)</title><rect x="97.0007%" y="677" width="1.1537%" height="15" fill="rgb(232,159,21)" fg:x="96440" fg:w="1147"/><text x="97.2507%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,147 samples, 1.15%)</title><rect x="97.0007%" y="661" width="1.1537%" height="15" fill="rgb(219,58,2)" fg:x="96440" fg:w="1147"/><text x="97.2507%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1,141 samples, 1.15%)</title><rect x="97.0067%" y="645" width="1.1476%" height="15" fill="rgb(241,56,8)" fg:x="96446" fg:w="1141"/><text x="97.2567%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (14 samples, 0.01%)</title><rect x="98.1815%" y="661" width="0.0141%" height="15" fill="rgb(249,10,27)" fg:x="97614" fg:w="14"/><text x="98.4315%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.01%)</title><rect x="98.1966%" y="661" width="0.0101%" height="15" fill="rgb(248,177,5)" fg:x="97629" fg:w="10"/><text x="98.4466%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.02%)</title><rect x="98.2157%" y="645" width="0.0191%" height="15" fill="rgb(239,12,30)" fg:x="97648" fg:w="19"/><text x="98.4657%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (27 samples, 0.03%)</title><rect x="98.2086%" y="661" width="0.0272%" height="15" fill="rgb(229,164,25)" fg:x="97641" fg:w="27"/><text x="98.4586%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (90 samples, 0.09%)</title><rect x="98.1614%" y="677" width="0.0905%" height="15" fill="rgb(231,217,50)" fg:x="97594" fg:w="90"/><text x="98.4114%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.02%)</title><rect x="98.2358%" y="661" width="0.0161%" height="15" fill="rgb(247,99,32)" fg:x="97668" fg:w="16"/><text x="98.4858%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.01%)</title><rect x="98.2398%" y="645" width="0.0121%" height="15" fill="rgb(240,74,50)" fg:x="97672" fg:w="12"/><text x="98.4898%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (10 samples, 0.01%)</title><rect x="98.2569%" y="645" width="0.0101%" height="15" fill="rgb(218,54,8)" fg:x="97689" fg:w="10"/><text x="98.5069%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (25 samples, 0.03%)</title><rect x="98.2559%" y="661" width="0.0251%" height="15" fill="rgb(227,132,20)" fg:x="97688" fg:w="25"/><text x="98.5059%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.01%)</title><rect x="98.2670%" y="645" width="0.0141%" height="15" fill="rgb(232,134,12)" fg:x="97699" fg:w="14"/><text x="98.5170%" y="655.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.01%)</title><rect x="98.2700%" y="629" width="0.0111%" height="15" fill="rgb(250,129,18)" fg:x="97702" fg:w="11"/><text x="98.5200%" y="639.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.01%)</title><rect x="98.2710%" y="613" width="0.0101%" height="15" fill="rgb(232,129,47)" fg:x="97703" fg:w="10"/><text x="98.5210%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2,111 samples, 2.12%)</title><rect x="96.1588%" y="725" width="2.1233%" height="15" fill="rgb(230,31,40)" fg:x="95603" fg:w="2111"/><text x="96.4088%" y="735.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,111 samples, 2.12%)</title><rect x="96.1588%" y="709" width="2.1233%" height="15" fill="rgb(232,126,10)" fg:x="95603" fg:w="2111"/><text x="96.4088%" y="719.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,333 samples, 1.34%)</title><rect x="96.9413%" y="693" width="1.3407%" height="15" fill="rgb(205,46,31)" fg:x="96381" fg:w="1333"/><text x="97.1913%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (30 samples, 0.03%)</title><rect x="98.2519%" y="677" width="0.0302%" height="15" fill="rgb(232,37,37)" fg:x="97684" fg:w="30"/><text x="98.5019%" y="687.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (2,867 samples, 2.88%)</title><rect x="95.4004%" y="757" width="2.8837%" height="15" fill="rgb(240,91,16)" fg:x="94849" fg:w="2867"/><text x="95.6504%" y="767.50">by..</text></g><g><title>bytecode_verifier::dependencies::Context::new (2,867 samples, 2.88%)</title><rect x="95.4004%" y="741" width="2.8837%" height="15" fill="rgb(224,160,9)" fg:x="94849" fg:w="2867"/><text x="95.6504%" y="751.50">by..</text></g><g><title>bytecode_verifier::dependencies::verify_all_script_visibility_usage (22 samples, 0.02%)</title><rect x="98.2841%" y="757" width="0.0221%" height="15" fill="rgb(215,116,14)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_visibility_usage (22 samples, 0.02%)</title><rect x="98.2841%" y="741" width="0.0221%" height="15" fill="rgb(235,46,36)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (22 samples, 0.02%)</title><rect x="98.2841%" y="725" width="0.0221%" height="15" fill="rgb(238,39,28)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.02%)</title><rect x="98.2841%" y="709" width="0.0221%" height="15" fill="rgb(242,125,29)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.02%)</title><rect x="98.2841%" y="693" width="0.0221%" height="15" fill="rgb(238,211,30)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.02%)</title><rect x="98.2841%" y="677" width="0.0221%" height="15" fill="rgb(227,201,28)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.02%)</title><rect x="98.2841%" y="661" width="0.0221%" height="15" fill="rgb(238,77,29)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.02%)</title><rect x="98.2841%" y="645" width="0.0221%" height="15" fill="rgb(213,221,40)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (22 samples, 0.02%)</title><rect x="98.2841%" y="629" width="0.0221%" height="15" fill="rgb(226,220,44)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (22 samples, 0.02%)</title><rect x="98.2841%" y="613" width="0.0221%" height="15" fill="rgb(228,90,23)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (22 samples, 0.02%)</title><rect x="98.2841%" y="597" width="0.0221%" height="15" fill="rgb(235,72,29)" fg:x="97716" fg:w="22"/><text x="98.5341%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.02%)</title><rect x="98.2901%" y="581" width="0.0161%" height="15" fill="rgb(248,117,39)" fg:x="97722" fg:w="16"/><text x="98.5401%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.02%)</title><rect x="98.3203%" y="693" width="0.0181%" height="15" fill="rgb(225,43,28)" fg:x="97752" fg:w="18"/><text x="98.5703%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="98.3243%" y="677" width="0.0141%" height="15" fill="rgb(240,93,4)" fg:x="97756" fg:w="14"/><text x="98.5743%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="98.3243%" y="661" width="0.0141%" height="15" fill="rgb(234,178,27)" fg:x="97756" fg:w="14"/><text x="98.5743%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="98.3243%" y="645" width="0.0141%" height="15" fill="rgb(254,88,22)" fg:x="97756" fg:w="14"/><text x="98.5743%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="98.3283%" y="629" width="0.0101%" height="15" fill="rgb(240,206,50)" fg:x="97760" fg:w="10"/><text x="98.5783%" y="639.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (21 samples, 0.02%)</title><rect x="98.3183%" y="741" width="0.0211%" height="15" fill="rgb(249,103,8)" fg:x="97750" fg:w="21"/><text x="98.5683%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="98.3183%" y="725" width="0.0211%" height="15" fill="rgb(241,178,36)" fg:x="97750" fg:w="21"/><text x="98.5683%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (20 samples, 0.02%)</title><rect x="98.3193%" y="709" width="0.0201%" height="15" fill="rgb(246,110,15)" fg:x="97751" fg:w="20"/><text x="98.5693%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="98.4350%" y="645" width="0.0101%" height="15" fill="rgb(207,14,43)" fg:x="97866" fg:w="10"/><text x="98.6850%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.06%)</title><rect x="98.3937%" y="677" width="0.0614%" height="15" fill="rgb(253,219,19)" fg:x="97825" fg:w="61"/><text x="98.6437%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="98.4179%" y="661" width="0.0372%" height="15" fill="rgb(216,126,5)" fg:x="97849" fg:w="37"/><text x="98.6679%" y="671.50"></text></g><g><title>core::cmp::min (17 samples, 0.02%)</title><rect x="98.5134%" y="581" width="0.0171%" height="15" fill="rgb(218,78,42)" fg:x="97944" fg:w="17"/><text x="98.7634%" y="591.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.02%)</title><rect x="98.5144%" y="565" width="0.0161%" height="15" fill="rgb(215,154,40)" fg:x="97945" fg:w="16"/><text x="98.7644%" y="575.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.01%)</title><rect x="98.5184%" y="549" width="0.0121%" height="15" fill="rgb(235,129,32)" fg:x="97949" fg:w="12"/><text x="98.7684%" y="559.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::Ord&gt;::cmp (65 samples, 0.07%)</title><rect x="98.4712%" y="661" width="0.0654%" height="15" fill="rgb(218,51,8)" fg:x="97902" fg:w="65"/><text x="98.7212%" y="671.50"></text></g><g><title>core::array::_&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (63 samples, 0.06%)</title><rect x="98.4732%" y="645" width="0.0634%" height="15" fill="rgb(245,48,4)" fg:x="97904" fg:w="63"/><text x="98.7232%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (48 samples, 0.05%)</title><rect x="98.4883%" y="629" width="0.0483%" height="15" fill="rgb(250,175,12)" fg:x="97919" fg:w="48"/><text x="98.7383%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (46 samples, 0.05%)</title><rect x="98.4903%" y="613" width="0.0463%" height="15" fill="rgb(237,95,40)" fg:x="97921" fg:w="46"/><text x="98.7403%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (45 samples, 0.05%)</title><rect x="98.4913%" y="597" width="0.0453%" height="15" fill="rgb(244,120,0)" fg:x="97922" fg:w="45"/><text x="98.7413%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.01%)</title><rect x="98.5717%" y="581" width="0.0111%" height="15" fill="rgb(241,19,42)" fg:x="98002" fg:w="11"/><text x="98.8217%" y="591.50"></text></g><g><title>core::cmp::min (25 samples, 0.03%)</title><rect x="98.5848%" y="581" width="0.0251%" height="15" fill="rgb(217,174,48)" fg:x="98015" fg:w="25"/><text x="98.8348%" y="591.50"></text></g><g><title>core::cmp::Ord::min (21 samples, 0.02%)</title><rect x="98.5888%" y="565" width="0.0211%" height="15" fill="rgb(239,36,38)" fg:x="98019" fg:w="21"/><text x="98.8388%" y="575.50"></text></g><g><title>core::cmp::min_by (21 samples, 0.02%)</title><rect x="98.5888%" y="549" width="0.0211%" height="15" fill="rgb(220,63,49)" fg:x="98019" fg:w="21"/><text x="98.8388%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="98.5969%" y="533" width="0.0131%" height="15" fill="rgb(240,101,13)" fg:x="98027" fg:w="13"/><text x="98.8469%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (58 samples, 0.06%)</title><rect x="98.5546%" y="613" width="0.0583%" height="15" fill="rgb(209,184,51)" fg:x="97985" fg:w="58"/><text x="98.8046%" y="623.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (52 samples, 0.05%)</title><rect x="98.5607%" y="597" width="0.0523%" height="15" fill="rgb(206,136,39)" fg:x="97991" fg:w="52"/><text x="98.8107%" y="607.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::Ord&gt;::cmp (160 samples, 0.16%)</title><rect x="98.4551%" y="677" width="0.1609%" height="15" fill="rgb(254,47,45)" fg:x="97886" fg:w="160"/><text x="98.7051%" y="687.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::cmp::Ord&gt;::cmp (79 samples, 0.08%)</title><rect x="98.5365%" y="661" width="0.0795%" height="15" fill="rgb(252,103,20)" fg:x="97967" fg:w="79"/><text x="98.7865%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (73 samples, 0.07%)</title><rect x="98.5426%" y="645" width="0.0734%" height="15" fill="rgb(230,69,12)" fg:x="97973" fg:w="73"/><text x="98.7926%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (70 samples, 0.07%)</title><rect x="98.5456%" y="629" width="0.0704%" height="15" fill="rgb(219,2,28)" fg:x="97976" fg:w="70"/><text x="98.7956%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (19 samples, 0.02%)</title><rect x="98.6160%" y="677" width="0.0191%" height="15" fill="rgb(210,9,12)" fg:x="98046" fg:w="19"/><text x="98.8660%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (301 samples, 0.30%)</title><rect x="98.3404%" y="741" width="0.3027%" height="15" fill="rgb(235,99,33)" fg:x="97772" fg:w="301"/><text x="98.5904%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (283 samples, 0.28%)</title><rect x="98.3585%" y="725" width="0.2846%" height="15" fill="rgb(230,11,38)" fg:x="97790" fg:w="283"/><text x="98.6085%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (272 samples, 0.27%)</title><rect x="98.3696%" y="709" width="0.2736%" height="15" fill="rgb(217,129,0)" fg:x="97801" fg:w="272"/><text x="98.6196%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (267 samples, 0.27%)</title><rect x="98.3746%" y="693" width="0.2686%" height="15" fill="rgb(222,198,4)" fg:x="97806" fg:w="267"/><text x="98.6246%" y="703.50"></text></g><g><title>bytecode_verifier::dependencies::compare_structs (11 samples, 0.01%)</title><rect x="98.6613%" y="709" width="0.0111%" height="15" fill="rgb(246,170,27)" fg:x="98091" fg:w="11"/><text x="98.9113%" y="719.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (30 samples, 0.03%)</title><rect x="98.6532%" y="725" width="0.0302%" height="15" fill="rgb(229,17,28)" fg:x="98083" fg:w="30"/><text x="98.9032%" y="735.50"></text></g><g><title>bytecode_verifier::dependencies::compare_types (11 samples, 0.01%)</title><rect x="98.6723%" y="709" width="0.0111%" height="15" fill="rgb(233,198,48)" fg:x="98102" fg:w="11"/><text x="98.9223%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (11 samples, 0.01%)</title><rect x="98.6834%" y="725" width="0.0111%" height="15" fill="rgb(238,103,23)" fg:x="98113" fg:w="11"/><text x="98.9334%" y="735.50"></text></g><g><title>bytecode_verifier::dependencies::compare_cross_module_signatures (56 samples, 0.06%)</title><rect x="98.6432%" y="741" width="0.0563%" height="15" fill="rgb(206,91,41)" fg:x="98073" fg:w="56"/><text x="98.8932%" y="751.50"></text></g><g><title>bytecode_verifier::dependencies::compatible_fun_type_parameters (13 samples, 0.01%)</title><rect x="98.6995%" y="741" width="0.0131%" height="15" fill="rgb(227,34,25)" fg:x="98129" fg:w="13"/><text x="98.9495%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array (10 samples, 0.01%)</title><rect x="98.7699%" y="613" width="0.0101%" height="15" fill="rgb(210,110,44)" fg:x="98199" fg:w="10"/><text x="99.0199%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (21 samples, 0.02%)</title><rect x="98.7598%" y="661" width="0.0211%" height="15" fill="rgb(216,189,8)" fg:x="98189" fg:w="21"/><text x="99.0098%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="98.7598%" y="645" width="0.0211%" height="15" fill="rgb(234,9,46)" fg:x="98189" fg:w="21"/><text x="99.0098%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="98.7598%" y="629" width="0.0211%" height="15" fill="rgb(251,200,5)" fg:x="98189" fg:w="21"/><text x="99.0098%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (36 samples, 0.04%)</title><rect x="98.7468%" y="677" width="0.0362%" height="15" fill="rgb(238,165,37)" fg:x="98176" fg:w="36"/><text x="98.9968%" y="687.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (42 samples, 0.04%)</title><rect x="98.7458%" y="725" width="0.0422%" height="15" fill="rgb(232,77,38)" fg:x="98175" fg:w="42"/><text x="98.9958%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (42 samples, 0.04%)</title><rect x="98.7458%" y="709" width="0.0422%" height="15" fill="rgb(253,179,33)" fg:x="98175" fg:w="42"/><text x="98.9958%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (42 samples, 0.04%)</title><rect x="98.7458%" y="693" width="0.0422%" height="15" fill="rgb(240,13,35)" fg:x="98175" fg:w="42"/><text x="98.9958%" y="703.50"></text></g><g><title>move_binary_format::binary_views::BinaryIndexedView::module_id_for_handle (53 samples, 0.05%)</title><rect x="98.7458%" y="741" width="0.0533%" height="15" fill="rgb(242,150,49)" fg:x="98175" fg:w="53"/><text x="98.9958%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="98.8111%" y="677" width="0.0121%" height="15" fill="rgb(237,176,28)" fg:x="98240" fg:w="12"/><text x="99.0611%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="98.8111%" y="661" width="0.0121%" height="15" fill="rgb(214,176,33)" fg:x="98240" fg:w="12"/><text x="99.0611%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.01%)</title><rect x="98.8111%" y="645" width="0.0121%" height="15" fill="rgb(214,25,12)" fg:x="98240" fg:w="12"/><text x="99.0611%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.01%)</title><rect x="98.8131%" y="629" width="0.0101%" height="15" fill="rgb(238,190,20)" fg:x="98242" fg:w="10"/><text x="99.0631%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="98.8302%" y="613" width="0.0111%" height="15" fill="rgb(208,11,19)" fg:x="98259" fg:w="11"/><text x="99.0802%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="98.8302%" y="597" width="0.0111%" height="15" fill="rgb(239,90,4)" fg:x="98259" fg:w="11"/><text x="99.0802%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="98.8302%" y="581" width="0.0111%" height="15" fill="rgb(248,110,3)" fg:x="98259" fg:w="11"/><text x="99.0802%" y="591.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="98.8302%" y="661" width="0.0221%" height="15" fill="rgb(210,41,30)" fg:x="98259" fg:w="22"/><text x="99.0802%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="98.8302%" y="645" width="0.0221%" height="15" fill="rgb(239,36,8)" fg:x="98259" fg:w="22"/><text x="99.0802%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (22 samples, 0.02%)</title><rect x="98.8302%" y="629" width="0.0221%" height="15" fill="rgb(237,201,47)" fg:x="98259" fg:w="22"/><text x="99.0802%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u8 (11 samples, 0.01%)</title><rect x="98.8413%" y="613" width="0.0111%" height="15" fill="rgb(224,140,29)" fg:x="98270" fg:w="11"/><text x="99.0913%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="98.8413%" y="597" width="0.0111%" height="15" fill="rgb(231,209,17)" fg:x="98270" fg:w="11"/><text x="99.0913%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="98.8413%" y="581" width="0.0111%" height="15" fill="rgb(249,196,1)" fg:x="98270" fg:w="11"/><text x="99.0913%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="98.8423%" y="565" width="0.0101%" height="15" fill="rgb(223,207,51)" fg:x="98271" fg:w="10"/><text x="99.0923%" y="575.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="98.8524%" y="645" width="0.0101%" height="15" fill="rgb(210,14,40)" fg:x="98281" fg:w="10"/><text x="99.1024%" y="655.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (10 samples, 0.01%)</title><rect x="98.8524%" y="629" width="0.0101%" height="15" fill="rgb(250,20,52)" fg:x="98281" fg:w="10"/><text x="99.1024%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="98.8524%" y="613" width="0.0101%" height="15" fill="rgb(241,46,11)" fg:x="98281" fg:w="10"/><text x="99.1024%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (63 samples, 0.06%)</title><rect x="98.8091%" y="693" width="0.0634%" height="15" fill="rgb(219,105,5)" fg:x="98238" fg:w="63"/><text x="99.0591%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (44 samples, 0.04%)</title><rect x="98.8282%" y="677" width="0.0443%" height="15" fill="rgb(252,77,35)" fg:x="98257" fg:w="44"/><text x="99.0782%" y="687.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="98.8524%" y="661" width="0.0201%" height="15" fill="rgb(243,119,2)" fg:x="98281" fg:w="20"/><text x="99.1024%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="98.8624%" y="645" width="0.0101%" height="15" fill="rgb(206,82,28)" fg:x="98291" fg:w="10"/><text x="99.1124%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.01%)</title><rect x="98.8624%" y="629" width="0.0101%" height="15" fill="rgb(227,120,12)" fg:x="98291" fg:w="10"/><text x="99.1124%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.01%)</title><rect x="98.8624%" y="613" width="0.0101%" height="15" fill="rgb(229,134,41)" fg:x="98291" fg:w="10"/><text x="99.1124%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="98.8765%" y="661" width="0.0101%" height="15" fill="rgb(239,96,32)" fg:x="98305" fg:w="10"/><text x="99.1265%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (19 samples, 0.02%)</title><rect x="98.8876%" y="661" width="0.0191%" height="15" fill="rgb(225,46,27)" fg:x="98316" fg:w="19"/><text x="99.1376%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (16 samples, 0.02%)</title><rect x="98.8906%" y="645" width="0.0161%" height="15" fill="rgb(215,168,2)" fg:x="98319" fg:w="16"/><text x="99.1406%" y="655.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="98.8956%" y="629" width="0.0111%" height="15" fill="rgb(207,170,52)" fg:x="98324" fg:w="11"/><text x="99.1456%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.02%)</title><rect x="98.9067%" y="661" width="0.0161%" height="15" fill="rgb(237,198,36)" fg:x="98335" fg:w="16"/><text x="99.1567%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.02%)</title><rect x="98.9067%" y="645" width="0.0161%" height="15" fill="rgb(213,27,14)" fg:x="98335" fg:w="16"/><text x="99.1567%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.01%)</title><rect x="98.9087%" y="629" width="0.0141%" height="15" fill="rgb(218,77,5)" fg:x="98337" fg:w="14"/><text x="99.1587%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.01%)</title><rect x="98.9107%" y="613" width="0.0121%" height="15" fill="rgb(230,219,39)" fg:x="98339" fg:w="12"/><text x="99.1607%" y="623.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (3,503 samples, 3.52%)</title><rect x="95.4004%" y="789" width="3.5234%" height="15" fill="rgb(245,177,7)" fg:x="94849" fg:w="3503"/><text x="95.6504%" y="799.50">byt..</text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (3,503 samples, 3.52%)</title><rect x="95.4004%" y="773" width="3.5234%" height="15" fill="rgb(246,44,46)" fg:x="94849" fg:w="3503"/><text x="95.6504%" y="783.50">byt..</text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (614 samples, 0.62%)</title><rect x="98.3062%" y="757" width="0.6176%" height="15" fill="rgb(207,173,15)" fg:x="97738" fg:w="614"/><text x="98.5562%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (115 samples, 0.12%)</title><rect x="98.8081%" y="741" width="0.1157%" height="15" fill="rgb(245,170,50)" fg:x="98237" fg:w="115"/><text x="99.0581%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (115 samples, 0.12%)</title><rect x="98.8081%" y="725" width="0.1157%" height="15" fill="rgb(233,156,21)" fg:x="98237" fg:w="115"/><text x="99.0581%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (115 samples, 0.12%)</title><rect x="98.8081%" y="709" width="0.1157%" height="15" fill="rgb(253,146,27)" fg:x="98237" fg:w="115"/><text x="99.0581%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (51 samples, 0.05%)</title><rect x="98.8725%" y="693" width="0.0513%" height="15" fill="rgb(247,66,29)" fg:x="98301" fg:w="51"/><text x="99.1225%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (49 samples, 0.05%)</title><rect x="98.8745%" y="677" width="0.0493%" height="15" fill="rgb(218,207,26)" fg:x="98303" fg:w="49"/><text x="99.1245%" y="687.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (12 samples, 0.01%)</title><rect x="98.9348%" y="773" width="0.0121%" height="15" fill="rgb(234,93,26)" fg:x="98363" fg:w="12"/><text x="99.1848%" y="783.50"></text></g><g><title>bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (12 samples, 0.01%)</title><rect x="98.9348%" y="757" width="0.0121%" height="15" fill="rgb(214,75,48)" fg:x="98363" fg:w="12"/><text x="99.1848%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.01%)</title><rect x="98.9831%" y="693" width="0.0101%" height="15" fill="rgb(229,119,22)" fg:x="98411" fg:w="10"/><text x="99.2331%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="98.9690%" y="709" width="0.0372%" height="15" fill="rgb(226,153,19)" fg:x="98397" fg:w="37"/><text x="99.2190%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (13 samples, 0.01%)</title><rect x="98.9932%" y="693" width="0.0131%" height="15" fill="rgb(220,204,36)" fg:x="98421" fg:w="13"/><text x="99.2432%" y="703.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph (57 samples, 0.06%)</title><rect x="98.9529%" y="741" width="0.0573%" height="15" fill="rgb(253,181,43)" fg:x="98381" fg:w="57"/><text x="99.2029%" y="751.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::build_graph_function_def (49 samples, 0.05%)</title><rect x="98.9610%" y="725" width="0.0493%" height="15" fill="rgb(211,41,51)" fg:x="98389" fg:w="49"/><text x="99.2110%" y="735.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module (66 samples, 0.07%)</title><rect x="98.9519%" y="773" width="0.0664%" height="15" fill="rgb(207,215,0)" fg:x="98380" fg:w="66"/><text x="99.2019%" y="783.50"></text></g><g><title>bytecode_verifier::instantiation_loops::InstantiationLoopChecker::verify_module_impl (65 samples, 0.07%)</title><rect x="98.9529%" y="757" width="0.0654%" height="15" fill="rgb(212,153,10)" fg:x="98381" fg:w="65"/><text x="99.2029%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (3,612 samples, 3.63%)</title><rect x="95.3994%" y="805" width="3.6330%" height="15" fill="rgb(251,171,36)" fg:x="94848" fg:w="3612"/><text x="95.6494%" y="815.50">move..</text></g><g><title>bytecode_verifier::verifier::verify_module (108 samples, 0.11%)</title><rect x="98.9238%" y="789" width="0.1086%" height="15" fill="rgb(225,219,41)" fg:x="98352" fg:w="108"/><text x="99.1738%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_cyclic_relations (17 samples, 0.02%)</title><rect x="99.0324%" y="805" width="0.0171%" height="15" fill="rgb(208,200,1)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="815.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module (17 samples, 0.02%)</title><rect x="99.0324%" y="789" width="0.0171%" height="15" fill="rgb(206,75,47)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="799.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::verify_module_impl (17 samples, 0.02%)</title><rect x="99.0324%" y="773" width="0.0171%" height="15" fill="rgb(248,3,16)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="783.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection (17 samples, 0.02%)</title><rect x="99.0324%" y="757" width="0.0171%" height="15" fill="rgb(242,157,36)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="767.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (17 samples, 0.02%)</title><rect x="99.0324%" y="741" width="0.0171%" height="15" fill="rgb(215,175,11)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="751.50"></text></g><g><title>bytecode_verifier::cyclic_dependencies::collect_all_with_cycle_detection::collect_all_with_cycle_detection_recursive (17 samples, 0.02%)</title><rect x="99.0324%" y="725" width="0.0171%" height="15" fill="rgb(252,222,22)" fg:x="98460" fg:w="17"/><text x="99.2824%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.01%)</title><rect x="99.0525%" y="709" width="0.0101%" height="15" fill="rgb(250,121,35)" fg:x="98480" fg:w="10"/><text x="99.3025%" y="719.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.02%)</title><rect x="99.0757%" y="533" width="0.0171%" height="15" fill="rgb(233,120,49)" fg:x="98503" fg:w="17"/><text x="99.3257%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (22 samples, 0.02%)</title><rect x="99.0726%" y="629" width="0.0221%" height="15" fill="rgb(205,201,14)" fg:x="98500" fg:w="22"/><text x="99.3226%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="99.0726%" y="613" width="0.0221%" height="15" fill="rgb(219,58,45)" fg:x="98500" fg:w="22"/><text x="99.3226%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="99.0726%" y="597" width="0.0221%" height="15" fill="rgb(251,65,12)" fg:x="98500" fg:w="22"/><text x="99.3226%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="99.0736%" y="581" width="0.0211%" height="15" fill="rgb(224,47,31)" fg:x="98501" fg:w="21"/><text x="99.3236%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="99.0736%" y="565" width="0.0211%" height="15" fill="rgb(233,74,26)" fg:x="98501" fg:w="21"/><text x="99.3236%" y="575.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="99.0736%" y="549" width="0.0211%" height="15" fill="rgb(231,211,31)" fg:x="98501" fg:w="21"/><text x="99.3236%" y="559.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="99.0696%" y="709" width="0.0272%" height="15" fill="rgb(239,167,5)" fg:x="98497" fg:w="27"/><text x="99.3196%" y="719.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="99.0696%" y="693" width="0.0272%" height="15" fill="rgb(241,85,0)" fg:x="98497" fg:w="27"/><text x="99.3196%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="99.0726%" y="677" width="0.0241%" height="15" fill="rgb(229,130,21)" fg:x="98500" fg:w="24"/><text x="99.3226%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.02%)</title><rect x="99.0726%" y="661" width="0.0241%" height="15" fill="rgb(254,84,49)" fg:x="98500" fg:w="24"/><text x="99.3226%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (24 samples, 0.02%)</title><rect x="99.0726%" y="645" width="0.0241%" height="15" fill="rgb(235,85,21)" fg:x="98500" fg:w="24"/><text x="99.3226%" y="655.50"></text></g><g><title>bytecode_verifier::dependencies::Context::module (71 samples, 0.07%)</title><rect x="99.0505%" y="741" width="0.0714%" height="15" fill="rgb(246,128,52)" fg:x="98478" fg:w="71"/><text x="99.3005%" y="751.50"></text></g><g><title>bytecode_verifier::dependencies::Context::new (71 samples, 0.07%)</title><rect x="99.0505%" y="725" width="0.0714%" height="15" fill="rgb(243,114,49)" fg:x="98478" fg:w="71"/><text x="99.3005%" y="735.50"></text></g><g><title>bytecode_verifier::dependencies::verify_all_script_visibility_usage (14 samples, 0.01%)</title><rect x="99.1219%" y="741" width="0.0141%" height="15" fill="rgb(240,224,22)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="751.50"></text></g><g><title>bytecode_verifier::dependencies::verify_script_visibility_usage (14 samples, 0.01%)</title><rect x="99.1219%" y="725" width="0.0141%" height="15" fill="rgb(247,201,52)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (14 samples, 0.01%)</title><rect x="99.1219%" y="709" width="0.0141%" height="15" fill="rgb(231,70,45)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.01%)</title><rect x="99.1219%" y="693" width="0.0141%" height="15" fill="rgb(217,215,20)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.01%)</title><rect x="99.1219%" y="677" width="0.0141%" height="15" fill="rgb(226,170,30)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.01%)</title><rect x="99.1219%" y="661" width="0.0141%" height="15" fill="rgb(220,190,43)" fg:x="98549" fg:w="14"/><text x="99.3719%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.01%)</title><rect x="99.1249%" y="645" width="0.0111%" height="15" fill="rgb(218,20,18)" fg:x="98552" fg:w="11"/><text x="99.3749%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="99.1249%" y="629" width="0.0111%" height="15" fill="rgb(245,37,26)" fg:x="98552" fg:w="11"/><text x="99.3749%" y="639.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module_expect_no_missing_dependencies (113 samples, 0.11%)</title><rect x="99.0495%" y="805" width="0.1137%" height="15" fill="rgb(241,127,29)" fg:x="98477" fg:w="113"/><text x="99.2995%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Loader::verify_module (112 samples, 0.11%)</title><rect x="99.0505%" y="789" width="0.1127%" height="15" fill="rgb(241,33,26)" fg:x="98478" fg:w="112"/><text x="99.3005%" y="799.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module (112 samples, 0.11%)</title><rect x="99.0505%" y="773" width="0.1127%" height="15" fill="rgb(220,106,21)" fg:x="98478" fg:w="112"/><text x="99.3005%" y="783.50"></text></g><g><title>bytecode_verifier::dependencies::verify_module_impl (112 samples, 0.11%)</title><rect x="99.0505%" y="757" width="0.1127%" height="15" fill="rgb(225,125,35)" fg:x="98478" fg:w="112"/><text x="99.3005%" y="767.50"></text></g><g><title>bytecode_verifier::dependencies::verify_imported_functions (27 samples, 0.03%)</title><rect x="99.1360%" y="741" width="0.0272%" height="15" fill="rgb(248,80,22)" fg:x="98563" fg:w="27"/><text x="99.3860%" y="751.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (14 samples, 0.01%)</title><rect x="99.1652%" y="789" width="0.0141%" height="15" fill="rgb(231,117,39)" fg:x="98592" fg:w="14"/><text x="99.4152%" y="799.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (14 samples, 0.01%)</title><rect x="99.1652%" y="773" width="0.0141%" height="15" fill="rgb(239,183,16)" fg:x="98592" fg:w="14"/><text x="99.4152%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (18 samples, 0.02%)</title><rect x="99.1652%" y="805" width="0.0181%" height="15" fill="rgb(221,61,19)" fg:x="98592" fg:w="18"/><text x="99.4152%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="99.1863%" y="773" width="0.0151%" height="15" fill="rgb(239,196,44)" fg:x="98613" fg:w="15"/><text x="99.4363%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (15 samples, 0.02%)</title><rect x="99.1863%" y="757" width="0.0151%" height="15" fill="rgb(206,113,19)" fg:x="98613" fg:w="15"/><text x="99.4363%" y="767.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::ne (11 samples, 0.01%)</title><rect x="99.2064%" y="725" width="0.0111%" height="15" fill="rgb(245,114,12)" fg:x="98633" fg:w="11"/><text x="99.4564%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (20 samples, 0.02%)</title><rect x="99.2014%" y="773" width="0.0201%" height="15" fill="rgb(247,89,39)" fg:x="98628" fg:w="20"/><text x="99.4514%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (17 samples, 0.02%)</title><rect x="99.2044%" y="757" width="0.0171%" height="15" fill="rgb(213,85,14)" fg:x="98631" fg:w="17"/><text x="99.4544%" y="767.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::ne (16 samples, 0.02%)</title><rect x="99.2054%" y="741" width="0.0161%" height="15" fill="rgb(249,206,33)" fg:x="98632" fg:w="16"/><text x="99.4554%" y="751.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (10 samples, 0.01%)</title><rect x="99.2245%" y="773" width="0.0101%" height="15" fill="rgb(235,167,47)" fg:x="98651" fg:w="10"/><text x="99.4745%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.01%)</title><rect x="99.2245%" y="757" width="0.0101%" height="15" fill="rgb(217,177,16)" fg:x="98651" fg:w="10"/><text x="99.4745%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.01%)</title><rect x="99.2245%" y="741" width="0.0101%" height="15" fill="rgb(250,228,29)" fg:x="98651" fg:w="10"/><text x="99.4745%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="99.2477%" y="693" width="0.0141%" height="15" fill="rgb(216,195,42)" fg:x="98674" fg:w="14"/><text x="99.4977%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.03%)</title><rect x="99.2426%" y="709" width="0.0292%" height="15" fill="rgb(232,192,32)" fg:x="98669" fg:w="29"/><text x="99.4926%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.03%)</title><rect x="99.2426%" y="757" width="0.0312%" height="15" fill="rgb(211,8,47)" fg:x="98669" fg:w="31"/><text x="99.4926%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.03%)</title><rect x="99.2426%" y="741" width="0.0312%" height="15" fill="rgb(251,201,9)" fg:x="98669" fg:w="31"/><text x="99.4926%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (31 samples, 0.03%)</title><rect x="99.2426%" y="725" width="0.0312%" height="15" fill="rgb(206,185,47)" fg:x="98669" fg:w="31"/><text x="99.4926%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.03%)</title><rect x="99.2416%" y="773" width="0.0342%" height="15" fill="rgb(245,54,32)" fg:x="98668" fg:w="34"/><text x="99.4916%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (18 samples, 0.02%)</title><rect x="99.3040%" y="709" width="0.0181%" height="15" fill="rgb(208,1,8)" fg:x="98730" fg:w="18"/><text x="99.5540%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.01%)</title><rect x="99.3090%" y="693" width="0.0131%" height="15" fill="rgb(228,57,24)" fg:x="98735" fg:w="13"/><text x="99.5590%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="99.3090%" y="677" width="0.0131%" height="15" fill="rgb(251,24,8)" fg:x="98735" fg:w="13"/><text x="99.5590%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="99.3090%" y="661" width="0.0131%" height="15" fill="rgb(236,196,50)" fg:x="98735" fg:w="13"/><text x="99.5590%" y="671.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as alloc::borrow::ToOwned&gt;::to_owned (22 samples, 0.02%)</title><rect x="99.3030%" y="757" width="0.0221%" height="15" fill="rgb(246,222,29)" fg:x="98729" fg:w="22"/><text x="99.5530%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="99.3040%" y="741" width="0.0211%" height="15" fill="rgb(211,34,40)" fg:x="98730" fg:w="21"/><text x="99.5540%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (21 samples, 0.02%)</title><rect x="99.3040%" y="725" width="0.0211%" height="15" fill="rgb(210,66,51)" fg:x="98730" fg:w="21"/><text x="99.5540%" y="735.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (25 samples, 0.03%)</title><rect x="99.3030%" y="773" width="0.0251%" height="15" fill="rgb(250,56,43)" fg:x="98729" fg:w="25"/><text x="99.5530%" y="783.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (12 samples, 0.01%)</title><rect x="99.3281%" y="773" width="0.0121%" height="15" fill="rgb(240,111,50)" fg:x="98754" fg:w="12"/><text x="99.5781%" y="783.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::self_id (11 samples, 0.01%)</title><rect x="99.3291%" y="757" width="0.0111%" height="15" fill="rgb(209,117,13)" fg:x="98755" fg:w="11"/><text x="99.5791%" y="767.50"></text></g><g><title>move_binary_format::file_format::CompiledModule::module_id_for_handle (10 samples, 0.01%)</title><rect x="99.3301%" y="741" width="0.0101%" height="15" fill="rgb(232,164,45)" fg:x="98756" fg:w="10"/><text x="99.5801%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.01%)</title><rect x="99.3442%" y="677" width="0.0101%" height="15" fill="rgb(205,69,32)" fg:x="98770" fg:w="10"/><text x="99.5942%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (20 samples, 0.02%)</title><rect x="99.3412%" y="757" width="0.0201%" height="15" fill="rgb(240,147,45)" fg:x="98767" fg:w="20"/><text x="99.5912%" y="767.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name::_{{closure}} (20 samples, 0.02%)</title><rect x="99.3412%" y="741" width="0.0201%" height="15" fill="rgb(221,94,48)" fg:x="98767" fg:w="20"/><text x="99.5912%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="99.3422%" y="725" width="0.0191%" height="15" fill="rgb(249,209,17)" fg:x="98768" fg:w="19"/><text x="99.5922%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19 samples, 0.02%)</title><rect x="99.3422%" y="709" width="0.0191%" height="15" fill="rgb(228,57,28)" fg:x="98768" fg:w="19"/><text x="99.5922%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.02%)</title><rect x="99.3432%" y="693" width="0.0181%" height="15" fill="rgb(250,133,26)" fg:x="98769" fg:w="18"/><text x="99.5932%" y="703.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.01%)</title><rect x="99.3633%" y="661" width="0.0111%" height="15" fill="rgb(254,15,16)" fg:x="98789" fg:w="11"/><text x="99.6133%" y="671.50"></text></g><g><title>core::array::_&lt;impl core::hash::Hash for [T: N]&gt;::hash (11 samples, 0.01%)</title><rect x="99.3633%" y="645" width="0.0111%" height="15" fill="rgb(209,147,42)" fg:x="98789" fg:w="11"/><text x="99.6133%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.01%)</title><rect x="99.3643%" y="629" width="0.0101%" height="15" fill="rgb(208,5,29)" fg:x="98790" fg:w="10"/><text x="99.6143%" y="639.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="99.3633%" y="677" width="0.0141%" height="15" fill="rgb(250,73,31)" fg:x="98789" fg:w="14"/><text x="99.6133%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.02%)</title><rect x="99.3623%" y="693" width="0.0181%" height="15" fill="rgb(238,45,10)" fg:x="98788" fg:w="18"/><text x="99.6123%" y="703.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (56 samples, 0.06%)</title><rect x="99.3402%" y="773" width="0.0563%" height="15" fill="rgb(214,104,5)" fg:x="98766" fg:w="56"/><text x="99.5902%" y="783.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (35 samples, 0.04%)</title><rect x="99.3613%" y="757" width="0.0352%" height="15" fill="rgb(242,217,19)" fg:x="98787" fg:w="35"/><text x="99.6113%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.03%)</title><rect x="99.3623%" y="741" width="0.0342%" height="15" fill="rgb(246,113,27)" fg:x="98788" fg:w="34"/><text x="99.6123%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.03%)</title><rect x="99.3623%" y="725" width="0.0342%" height="15" fill="rgb(221,34,27)" fg:x="98788" fg:w="34"/><text x="99.6123%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.03%)</title><rect x="99.3623%" y="709" width="0.0342%" height="15" fill="rgb(246,109,6)" fg:x="98788" fg:w="34"/><text x="99.6123%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.02%)</title><rect x="99.3804%" y="693" width="0.0161%" height="15" fill="rgb(217,12,25)" fg:x="98806" fg:w="16"/><text x="99.6304%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.02%)</title><rect x="99.3814%" y="677" width="0.0151%" height="15" fill="rgb(250,195,5)" fg:x="98807" fg:w="15"/><text x="99.6314%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.02%)</title><rect x="99.4036%" y="741" width="0.0151%" height="15" fill="rgb(244,140,45)" fg:x="98829" fg:w="15"/><text x="99.6536%" y="751.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (12 samples, 0.01%)</title><rect x="99.4337%" y="677" width="0.0121%" height="15" fill="rgb(230,64,14)" fg:x="98859" fg:w="12"/><text x="99.6837%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="99.4337%" y="661" width="0.0121%" height="15" fill="rgb(206,27,27)" fg:x="98859" fg:w="12"/><text x="99.6837%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="99.4297%" y="725" width="0.0292%" height="15" fill="rgb(230,14,50)" fg:x="98855" fg:w="29"/><text x="99.6797%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.03%)</title><rect x="99.4307%" y="709" width="0.0282%" height="15" fill="rgb(237,172,14)" fg:x="98856" fg:w="28"/><text x="99.6807%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (27 samples, 0.03%)</title><rect x="99.4317%" y="693" width="0.0272%" height="15" fill="rgb(209,25,21)" fg:x="98857" fg:w="27"/><text x="99.6817%" y="703.50"></text></g><g><title>move_vm_runtime::loader::Module::new (282 samples, 0.28%)</title><rect x="99.1833%" y="805" width="0.2836%" height="15" fill="rgb(248,148,22)" fg:x="98610" fg:w="282"/><text x="99.4333%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (282 samples, 0.28%)</title><rect x="99.1833%" y="789" width="0.2836%" height="15" fill="rgb(234,100,22)" fg:x="98610" fg:w="282"/><text x="99.4333%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (63 samples, 0.06%)</title><rect x="99.4036%" y="773" width="0.0634%" height="15" fill="rgb(210,20,30)" fg:x="98829" fg:w="63"/><text x="99.6536%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.06%)</title><rect x="99.4036%" y="757" width="0.0634%" height="15" fill="rgb(232,58,0)" fg:x="98829" fg:w="63"/><text x="99.6536%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (42 samples, 0.04%)</title><rect x="99.4247%" y="741" width="0.0422%" height="15" fill="rgb(221,68,13)" fg:x="98850" fg:w="42"/><text x="99.6747%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Module::new (20 samples, 0.02%)</title><rect x="99.4699%" y="789" width="0.0201%" height="15" fill="rgb(231,194,11)" fg:x="98895" fg:w="20"/><text x="99.7199%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Module::new::_{{closure}} (20 samples, 0.02%)</title><rect x="99.4699%" y="773" width="0.0201%" height="15" fill="rgb(235,51,41)" fg:x="98895" fg:w="20"/><text x="99.7199%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="99.4901%" y="757" width="0.0151%" height="15" fill="rgb(240,50,32)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.02%)</title><rect x="99.4901%" y="741" width="0.0151%" height="15" fill="rgb(240,185,36)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.02%)</title><rect x="99.4901%" y="725" width="0.0151%" height="15" fill="rgb(211,168,15)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.02%)</title><rect x="99.4901%" y="709" width="0.0151%" height="15" fill="rgb(221,70,0)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="99.4901%" y="693" width="0.0151%" height="15" fill="rgb(205,21,33)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.02%)</title><rect x="99.4901%" y="677" width="0.0151%" height="15" fill="rgb(225,106,10)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.02%)</title><rect x="99.4901%" y="661" width="0.0151%" height="15" fill="rgb(236,200,50)" fg:x="98915" fg:w="15"/><text x="99.7401%" y="671.50"></text></g><g><title>&lt;move_binary_format::file_format::SignatureToken as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="99.5061%" y="677" width="0.0111%" height="15" fill="rgb(249,93,23)" fg:x="98931" fg:w="11"/><text x="99.7561%" y="687.50"></text></g><g><title>&lt;move_binary_format::file_format::Signature as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="99.5051%" y="757" width="0.0221%" height="15" fill="rgb(244,115,35)" fg:x="98930" fg:w="22"/><text x="99.7551%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="99.5051%" y="741" width="0.0221%" height="15" fill="rgb(231,129,47)" fg:x="98930" fg:w="22"/><text x="99.7551%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="99.5051%" y="725" width="0.0221%" height="15" fill="rgb(225,160,50)" fg:x="98930" fg:w="22"/><text x="99.7551%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="99.5051%" y="709" width="0.0221%" height="15" fill="rgb(218,135,23)" fg:x="98930" fg:w="22"/><text x="99.7551%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="99.5051%" y="693" width="0.0221%" height="15" fill="rgb(227,119,14)" fg:x="98930" fg:w="22"/><text x="99.7551%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="99.5172%" y="677" width="0.0101%" height="15" fill="rgb(242,138,13)" fg:x="98942" fg:w="10"/><text x="99.7672%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.01%)</title><rect x="99.5172%" y="661" width="0.0101%" height="15" fill="rgb(215,11,16)" fg:x="98942" fg:w="10"/><text x="99.7672%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.01%)</title><rect x="99.5172%" y="645" width="0.0101%" height="15" fill="rgb(234,170,50)" fg:x="98942" fg:w="10"/><text x="99.7672%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.02%)</title><rect x="99.5323%" y="693" width="0.0231%" height="15" fill="rgb(233,34,20)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.02%)</title><rect x="99.5323%" y="677" width="0.0231%" height="15" fill="rgb(237,100,45)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.02%)</title><rect x="99.5323%" y="661" width="0.0231%" height="15" fill="rgb(231,184,36)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.02%)</title><rect x="99.5323%" y="645" width="0.0231%" height="15" fill="rgb(252,93,2)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.02%)</title><rect x="99.5323%" y="629" width="0.0231%" height="15" fill="rgb(248,176,47)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (23 samples, 0.02%)</title><rect x="99.5323%" y="613" width="0.0231%" height="15" fill="rgb(249,125,23)" fg:x="98957" fg:w="23"/><text x="99.7823%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.03%)</title><rect x="99.5323%" y="757" width="0.0282%" height="15" fill="rgb(239,67,42)" fg:x="98957" fg:w="28"/><text x="99.7823%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="99.5323%" y="741" width="0.0282%" height="15" fill="rgb(244,162,4)" fg:x="98957" fg:w="28"/><text x="99.7823%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="99.5323%" y="725" width="0.0282%" height="15" fill="rgb(214,150,38)" fg:x="98957" fg:w="28"/><text x="99.7823%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.03%)</title><rect x="99.5323%" y="709" width="0.0282%" height="15" fill="rgb(228,211,28)" fg:x="98957" fg:w="28"/><text x="99.7823%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Function::new (78 samples, 0.08%)</title><rect x="99.4901%" y="773" width="0.0785%" height="15" fill="rgb(212,98,48)" fg:x="98915" fg:w="78"/><text x="99.7401%" y="783.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (121 samples, 0.12%)</title><rect x="99.4699%" y="805" width="0.1217%" height="15" fill="rgb(213,45,13)" fg:x="98895" fg:w="121"/><text x="99.7199%" y="815.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (101 samples, 0.10%)</title><rect x="99.4901%" y="789" width="0.1016%" height="15" fill="rgb(218,35,29)" fg:x="98915" fg:w="101"/><text x="99.7401%" y="799.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::load_field_types (23 samples, 0.02%)</title><rect x="99.5685%" y="773" width="0.0231%" height="15" fill="rgb(244,13,3)" fg:x="98993" fg:w="23"/><text x="99.8185%" y="783.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::load_field_types (18 samples, 0.02%)</title><rect x="99.5916%" y="805" width="0.0181%" height="15" fill="rgb(235,170,19)" fg:x="99016" fg:w="18"/><text x="99.8416%" y="815.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading (18 samples, 0.02%)</title><rect x="99.5916%" y="789" width="0.0181%" height="15" fill="rgb(233,193,43)" fg:x="99016" fg:w="18"/><text x="99.8416%" y="799.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (18 samples, 0.02%)</title><rect x="99.5916%" y="773" width="0.0181%" height="15" fill="rgb(228,223,20)" fg:x="99016" fg:w="18"/><text x="99.8416%" y="783.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_while_loading::_{{closure}} (10 samples, 0.01%)</title><rect x="99.5997%" y="757" width="0.0101%" height="15" fill="rgb(208,85,54)" fg:x="99024" fg:w="10"/><text x="99.8497%" y="767.50"></text></g><g><title>sha2::sha512::soft::sha512_digest_block_u64 (23 samples, 0.02%)</title><rect x="99.6912%" y="805" width="0.0231%" height="15" fill="rgb(254,14,45)" fg:x="99115" fg:w="23"/><text x="99.9412%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.02%)</title><rect x="99.7174%" y="805" width="0.0201%" height="15" fill="rgb(247,99,29)" fg:x="99141" fg:w="20"/><text x="99.9674%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (12 samples, 0.01%)</title><rect x="99.7375%" y="805" width="0.0121%" height="15" fill="rgb(225,180,54)" fg:x="99161" fg:w="12"/><text x="99.9875%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.02%)</title><rect x="99.7496%" y="805" width="0.0201%" height="15" fill="rgb(239,88,43)" fg:x="99173" fg:w="20"/><text x="99.9996%" y="815.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (13 samples, 0.01%)</title><rect x="99.7888%" y="805" width="0.0131%" height="15" fill="rgb(209,47,11)" fg:x="99212" fg:w="13"/><text x="100.0388%" y="815.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="99.8079%" y="805" width="0.0121%" height="15" fill="rgb(219,179,23)" fg:x="99231" fg:w="12"/><text x="100.0579%" y="815.50"></text></g><g><title>__rust_try (12 samples, 0.01%)</title><rect x="99.8079%" y="789" width="0.0121%" height="15" fill="rgb(213,183,19)" fg:x="99231" fg:w="12"/><text x="100.0579%" y="799.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="99.8079%" y="773" width="0.0121%" height="15" fill="rgb(210,11,9)" fg:x="99231" fg:w="12"/><text x="100.0579%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.8079%" y="757" width="0.0121%" height="15" fill="rgb(239,194,16)" fg:x="99231" fg:w="12"/><text x="100.0579%" y="767.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (11 samples, 0.01%)</title><rect x="99.8089%" y="741" width="0.0111%" height="15" fill="rgb(246,23,50)" fg:x="99232" fg:w="11"/><text x="100.0589%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.01%)</title><rect x="99.8089%" y="725" width="0.0111%" height="15" fill="rgb(245,10,41)" fg:x="99232" fg:w="11"/><text x="100.0589%" y="735.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (11 samples, 0.01%)</title><rect x="99.8089%" y="709" width="0.0111%" height="15" fill="rgb(228,43,24)" fg:x="99232" fg:w="11"/><text x="100.0589%" y="719.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (11 samples, 0.01%)</title><rect x="99.8089%" y="693" width="0.0111%" height="15" fill="rgb(220,151,0)" fg:x="99232" fg:w="11"/><text x="100.0589%" y="703.50"></text></g><g><title>rayon_core::registry::main_loop (11 samples, 0.01%)</title><rect x="99.8089%" y="677" width="0.0111%" height="15" fill="rgb(232,219,10)" fg:x="99232" fg:w="11"/><text x="100.0589%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.02%)</title><rect x="99.8461%" y="805" width="0.0151%" height="15" fill="rgb(227,217,48)" fg:x="99269" fg:w="15"/><text x="100.0961%" y="815.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="99.8672%" y="805" width="0.0141%" height="15" fill="rgb(210,66,35)" fg:x="99290" fg:w="14"/><text x="100.1172%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::executor::FakeExecutor&gt; (13 samples, 0.01%)</title><rect x="99.8873%" y="725" width="0.0131%" height="15" fill="rgb(254,6,7)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt;&gt; (13 samples, 0.01%)</title><rect x="99.8873%" y="709" width="0.0131%" height="15" fill="rgb(235,222,42)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;language_e2e_tests::golden_outputs::GoldenOutputs&gt; (13 samples, 0.01%)</title><rect x="99.8873%" y="693" width="0.0131%" height="15" fill="rgb(245,126,5)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;goldenfile::mint::Mint&gt; (13 samples, 0.01%)</title><rect x="99.8873%" y="677" width="0.0131%" height="15" fill="rgb(215,73,17)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="687.50"></text></g><g><title>&lt;goldenfile::mint::Mint as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="99.8873%" y="661" width="0.0131%" height="15" fill="rgb(219,198,52)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="671.50"></text></g><g><title>goldenfile::mint::Mint::check_goldenfiles (13 samples, 0.01%)</title><rect x="99.8873%" y="645" width="0.0131%" height="15" fill="rgb(217,159,18)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (13 samples, 0.01%)</title><rect x="99.8873%" y="629" width="0.0131%" height="15" fill="rgb(212,177,18)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.01%)</title><rect x="99.8873%" y="613" width="0.0131%" height="15" fill="rgb(241,10,11)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="623.50"></text></g><g><title>goldenfile::differs::text_diff (13 samples, 0.01%)</title><rect x="99.8873%" y="597" width="0.0131%" height="15" fill="rgb(232,114,35)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="607.50"></text></g><g><title>difference::Changeset::new (13 samples, 0.01%)</title><rect x="99.8873%" y="581" width="0.0131%" height="15" fill="rgb(238,222,8)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="591.50"></text></g><g><title>difference::merge::merge (13 samples, 0.01%)</title><rect x="99.8873%" y="565" width="0.0131%" height="15" fill="rgb(251,153,44)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="575.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (13 samples, 0.01%)</title><rect x="99.8873%" y="549" width="0.0131%" height="15" fill="rgb(210,140,51)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.01%)</title><rect x="99.8873%" y="533" width="0.0131%" height="15" fill="rgb(222,63,0)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="543.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::_{{closure}} (13 samples, 0.01%)</title><rect x="99.8873%" y="517" width="0.0131%" height="15" fill="rgb(240,18,40)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="527.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="99.8873%" y="501" width="0.0131%" height="15" fill="rgb(237,88,16)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="511.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (13 samples, 0.01%)</title><rect x="99.8873%" y="485" width="0.0131%" height="15" fill="rgb(251,117,13)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="495.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (13 samples, 0.01%)</title><rect x="99.8873%" y="469" width="0.0131%" height="15" fill="rgb(251,228,8)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (13 samples, 0.01%)</title><rect x="99.8873%" y="453" width="0.0131%" height="15" fill="rgb(205,107,49)" fg:x="99310" fg:w="13"/><text x="100.1373%" y="463.50"></text></g><g><title>test::__rust_begin_short_backtrace (15 samples, 0.02%)</title><rect x="99.8873%" y="805" width="0.0151%" height="15" fill="rgb(238,72,41)" fg:x="99310" fg:w="15"/><text x="100.1373%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.02%)</title><rect x="99.8873%" y="789" width="0.0151%" height="15" fill="rgb(248,183,52)" fg:x="99310" fg:w="15"/><text x="100.1373%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.02%)</title><rect x="99.8873%" y="773" width="0.0151%" height="15" fill="rgb(215,58,20)" fg:x="99310" fg:w="15"/><text x="100.1373%" y="783.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (15 samples, 0.02%)</title><rect x="99.8873%" y="757" width="0.0151%" height="15" fill="rgb(209,49,13)" fg:x="99310" fg:w="15"/><text x="100.1373%" y="767.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (15 samples, 0.02%)</title><rect x="99.8873%" y="741" width="0.0151%" height="15" fill="rgb(208,113,17)" fg:x="99310" fg:w="15"/><text x="100.1373%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="99.9185%" y="213" width="0.0121%" height="15" fill="rgb(208,14,22)" fg:x="99341" fg:w="12"/><text x="100.1685%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (18 samples, 0.02%)</title><rect x="99.9185%" y="245" width="0.0181%" height="15" fill="rgb(222,95,2)" fg:x="99341" fg:w="18"/><text x="100.1685%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (18 samples, 0.02%)</title><rect x="99.9185%" y="229" width="0.0181%" height="15" fill="rgb(253,180,37)" fg:x="99341" fg:w="18"/><text x="100.1685%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="99.9095%" y="357" width="0.0292%" height="15" fill="rgb(250,81,33)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="99.9095%" y="341" width="0.0292%" height="15" fill="rgb(251,151,41)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (29 samples, 0.03%)</title><rect x="99.9095%" y="325" width="0.0292%" height="15" fill="rgb(210,135,17)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (29 samples, 0.03%)</title><rect x="99.9095%" y="309" width="0.0292%" height="15" fill="rgb(239,21,29)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="99.9095%" y="293" width="0.0292%" height="15" fill="rgb(231,215,16)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (29 samples, 0.03%)</title><rect x="99.9095%" y="277" width="0.0292%" height="15" fill="rgb(239,151,54)" fg:x="99332" fg:w="29"/><text x="100.1595%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (24 samples, 0.02%)</title><rect x="99.9145%" y="261" width="0.0241%" height="15" fill="rgb(222,122,38)" fg:x="99337" fg:w="24"/><text x="100.1645%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (21 samples, 0.02%)</title><rect x="99.9467%" y="229" width="0.0211%" height="15" fill="rgb(243,128,1)" fg:x="99369" fg:w="21"/><text x="100.1967%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (63 samples, 0.06%)</title><rect x="99.9095%" y="405" width="0.0634%" height="15" fill="rgb(225,74,21)" fg:x="99332" fg:w="63"/><text x="100.1595%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (63 samples, 0.06%)</title><rect x="99.9095%" y="389" width="0.0634%" height="15" fill="rgb(216,210,10)" fg:x="99332" fg:w="63"/><text x="100.1595%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (63 samples, 0.06%)</title><rect x="99.9095%" y="373" width="0.0634%" height="15" fill="rgb(228,76,19)" fg:x="99332" fg:w="63"/><text x="100.1595%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (32 samples, 0.03%)</title><rect x="99.9407%" y="357" width="0.0322%" height="15" fill="rgb(236,80,34)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="99.9407%" y="341" width="0.0322%" height="15" fill="rgb(225,173,23)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="99.9407%" y="325" width="0.0322%" height="15" fill="rgb(253,38,1)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (32 samples, 0.03%)</title><rect x="99.9407%" y="309" width="0.0322%" height="15" fill="rgb(206,155,35)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (32 samples, 0.03%)</title><rect x="99.9407%" y="293" width="0.0322%" height="15" fill="rgb(254,27,53)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="99.9407%" y="277" width="0.0322%" height="15" fill="rgb(225,52,41)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (32 samples, 0.03%)</title><rect x="99.9407%" y="261" width="0.0322%" height="15" fill="rgb(244,53,18)" fg:x="99363" fg:w="32"/><text x="100.1907%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (29 samples, 0.03%)</title><rect x="99.9437%" y="245" width="0.0292%" height="15" fill="rgb(254,206,48)" fg:x="99366" fg:w="29"/><text x="100.1937%" y="255.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction (68 samples, 0.07%)</title><rect x="99.9095%" y="613" width="0.0684%" height="15" fill="rgb(236,182,23)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="623.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_block (68 samples, 0.07%)</title><rect x="99.9095%" y="597" width="0.0684%" height="15" fill="rgb(236,191,37)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="607.50"></text></g><g><title>language_e2e_tests::executor::FakeExecutor::execute_transaction_block (68 samples, 0.07%)</title><rect x="99.9095%" y="581" width="0.0684%" height="15" fill="rgb(245,53,8)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="591.50"></text></g><g><title>&lt;diem_vm::diem_transaction_executor::DiemVM as diem_vm::VMExecutor&gt;::execute_block (68 samples, 0.07%)</title><rect x="99.9095%" y="565" width="0.0684%" height="15" fill="rgb(245,147,9)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="575.50"></text></g><g><title>diem_vm::diem_transaction_executor::DiemVM::execute_block_and_keep_vm_status (68 samples, 0.07%)</title><rect x="99.9095%" y="549" width="0.0684%" height="15" fill="rgb(218,24,48)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;diem_vm::diem_transaction_executor::DiemVM&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="533" width="0.0684%" height="15" fill="rgb(254,23,9)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;diem_vm::diem_vm::DiemVMImpl&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="517" width="0.0684%" height="15" fill="rgb(244,105,9)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::move_vm::MoveVM&gt;&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="501" width="0.0684%" height="15" fill="rgb(212,142,22)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.07%)</title><rect x="99.9095%" y="485" width="0.0684%" height="15" fill="rgb(221,114,49)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (68 samples, 0.07%)</title><rect x="99.9095%" y="469" width="0.0684%" height="15" fill="rgb(223,210,25)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="453" width="0.0684%" height="15" fill="rgb(235,162,44)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="437" width="0.0684%" height="15" fill="rgb(237,65,45)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (68 samples, 0.07%)</title><rect x="99.9095%" y="421" width="0.0684%" height="15" fill="rgb(208,79,9)" fg:x="99332" fg:w="68"/><text x="100.1595%" y="431.50"></text></g><g><title>test::run_test::run_test_inner::_{{closure}} (79 samples, 0.08%)</title><rect x="99.9024%" y="805" width="0.0795%" height="15" fill="rgb(215,228,8)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="815.50"></text></g><g><title>test::run_test_in_process (79 samples, 0.08%)</title><rect x="99.9024%" y="789" width="0.0795%" height="15" fill="rgb(205,185,17)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="799.50"></text></g><g><title>std::panic::catch_unwind (79 samples, 0.08%)</title><rect x="99.9024%" y="773" width="0.0795%" height="15" fill="rgb(213,62,36)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="783.50"></text></g><g><title>std::panicking::try (79 samples, 0.08%)</title><rect x="99.9024%" y="757" width="0.0795%" height="15" fill="rgb(209,34,9)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="767.50"></text></g><g><title>std::panicking::try::do_call (79 samples, 0.08%)</title><rect x="99.9024%" y="741" width="0.0795%" height="15" fill="rgb(246,151,27)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79 samples, 0.08%)</title><rect x="99.9024%" y="725" width="0.0795%" height="15" fill="rgb(218,206,3)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 0.08%)</title><rect x="99.9024%" y="709" width="0.0795%" height="15" fill="rgb(242,202,1)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="719.50"></text></g><g><title>test::__rust_begin_short_backtrace (79 samples, 0.08%)</title><rect x="99.9024%" y="693" width="0.0795%" height="15" fill="rgb(227,185,16)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (79 samples, 0.08%)</title><rect x="99.9024%" y="677" width="0.0795%" height="15" fill="rgb(241,1,14)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (79 samples, 0.08%)</title><rect x="99.9024%" y="661" width="0.0795%" height="15" fill="rgb(212,113,25)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="671.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account::_{{closure}} (79 samples, 0.08%)</title><rect x="99.9024%" y="645" width="0.0795%" height="15" fill="rgb(247,37,43)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="655.50"></text></g><g><title>language_e2e_testsuite::tests::create_account::create_account (79 samples, 0.08%)</title><rect x="99.9024%" y="629" width="0.0795%" height="15" fill="rgb(226,54,8)" fg:x="99325" fg:w="79"/><text x="100.1524%" y="639.50"></text></g><g><title>all (99,422 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(251,205,25)" fg:x="0" fg:w="99422"/><text x="0.2500%" y="847.50"></text></g><g><title>tests::create_a (99,396 samples, 99.97%)</title><rect x="0.0262%" y="821" width="99.9738%" height="15" fill="rgb(246,87,35)" fg:x="26" fg:w="99396"/><text x="0.2762%" y="831.50">tests::create_a</text></g></svg></svg>